<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="783.5" y="1733" width="0.4" height="15.0" fill="rgb(245,10,25)" rx="2" ry="2" />
<text  x="786.48" y="1743.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="780.2" y="1701" width="0.4" height="15.0" fill="rgb(245,31,6)" rx="2" ry="2" />
<text  x="783.20" y="1711.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (3 samples, 0.06%)</title><rect x="590.1" y="1797" width="0.6" height="15.0" fill="rgb(236,211,11)" rx="2" ry="2" />
<text  x="593.06" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="133.5" y="1877" width="0.2" height="15.0" fill="rgb(239,117,39)" rx="2" ry="2" />
<text  x="136.49" y="1887.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="803.6" y="1525" width="0.2" height="15.0" fill="rgb(215,7,9)" rx="2" ry="2" />
<text  x="806.59" y="1535.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="768.8" y="1749" width="0.5" height="15.0" fill="rgb(208,75,44)" rx="2" ry="2" />
<text  x="771.84" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="259.6" y="1637" width="0.2" height="15.0" fill="rgb(243,83,27)" rx="2" ry="2" />
<text  x="262.59" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="602.5" y="1813" width="0.2" height="15.0" fill="rgb(224,34,19)" rx="2" ry="2" />
<text  x="605.51" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (42 samples, 0.78%)</title><rect x="1124.9" y="1813" width="9.1" height="15.0" fill="rgb(230,111,0)" rx="2" ry="2" />
<text  x="1127.87" y="1823.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (541 samples, 10.02%)</title><rect x="324.5" y="1733" width="118.2" height="15.0" fill="rgb(243,13,26)" rx="2" ry="2" />
<text  x="327.51" y="1743.5" >std::__invoke_..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.04%)</title><rect x="58.3" y="1653" width="0.4" height="15.0" fill="rgb(214,189,3)" rx="2" ry="2" />
<text  x="61.30" y="1663.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.04%)</title><rect x="1187.8" y="309" width="0.5" height="15.0" fill="rgb(229,144,3)" rx="2" ry="2" />
<text  x="1190.81" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="61.4" y="1621" width="0.2" height="15.0" fill="rgb(225,176,12)" rx="2" ry="2" />
<text  x="64.36" y="1631.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (1 samples, 0.02%)</title><rect x="1123.1" y="1701" width="0.2" height="15.0" fill="rgb(212,15,53)" rx="2" ry="2" />
<text  x="1126.12" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mT__206 (1 samples, 0.02%)</title><rect x="36.2" y="1685" width="0.2" height="15.0" fill="rgb(243,35,37)" rx="2" ry="2" />
<text  x="39.23" y="1695.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="60.9" y="1765" width="0.2" height="15.0" fill="rgb(207,93,35)" rx="2" ry="2" />
<text  x="63.92" y="1775.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (7 samples, 0.13%)</title><rect x="1097.3" y="1797" width="1.6" height="15.0" fill="rgb(205,81,5)" rx="2" ry="2" />
<text  x="1100.33" y="1807.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (467 samples, 8.65%)</title><rect x="453.9" y="1829" width="102.1" height="15.0" fill="rgb(209,30,6)" rx="2" ry="2" />
<text  x="456.89" y="1839.5" >mutation_sou..</text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.04%)</title><rect x="55.9" y="1701" width="0.4" height="15.0" fill="rgb(206,30,47)" rx="2" ry="2" />
<text  x="58.90" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (12 samples, 0.22%)</title><rect x="44.8" y="1765" width="2.6" height="15.0" fill="rgb(243,94,37)" rx="2" ry="2" />
<text  x="47.75" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="552.7" y="1717" width="0.2" height="15.0" fill="rgb(211,26,13)" rx="2" ry="2" />
<text  x="555.68" y="1727.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="1084.4" y="1765" width="0.5" height="15.0" fill="rgb(215,119,40)" rx="2" ry="2" />
<text  x="1087.44" y="1775.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.20%)</title><rect x="1107.8" y="1829" width="2.4" height="15.0" fill="rgb(216,174,16)" rx="2" ry="2" />
<text  x="1110.82" y="1839.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="661" width="2.9" height="15.0" fill="rgb(222,189,42)" rx="2" ry="2" />
<text  x="1189.94" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1152.6" y="1829" width="0.2" height="15.0" fill="rgb(220,150,38)" rx="2" ry="2" />
<text  x="1155.63" y="1839.5" ></text>
</g>
<g >
<title>create_partitions (275 samples, 5.09%)</title><rect x="20.3" y="1957" width="60.1" height="15.0" fill="rgb(234,212,34)" rx="2" ry="2" />
<text  x="23.27" y="1967.5" >create..</text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="997.7" y="1669" width="1.9" height="15.0" fill="rgb(241,97,33)" rx="2" ry="2" />
<text  x="1000.67" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1189.6" y="133" width="0.2" height="15.0" fill="rgb(211,83,0)" rx="2" ry="2" />
<text  x="1192.56" y="143.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (2 samples, 0.04%)</title><rect x="1113.5" y="1813" width="0.4" height="15.0" fill="rgb(217,120,15)" rx="2" ry="2" />
<text  x="1116.50" y="1823.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (8 samples, 0.15%)</title><rect x="661.1" y="1893" width="1.7" height="15.0" fill="rgb(206,187,32)" rx="2" ry="2" />
<text  x="664.09" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="52.4" y="1685" width="0.2" height="15.0" fill="rgb(248,167,35)" rx="2" ry="2" />
<text  x="55.40" y="1695.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (3 samples, 0.06%)</title><rect x="738.7" y="1717" width="0.6" height="15.0" fill="rgb(241,36,17)" rx="2" ry="2" />
<text  x="741.68" y="1727.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (2 samples, 0.04%)</title><rect x="1187.8" y="149" width="0.5" height="15.0" fill="rgb(213,66,15)" rx="2" ry="2" />
<text  x="1190.81" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="1018.4" y="1637" width="0.7" height="15.0" fill="rgb(254,32,43)" rx="2" ry="2" />
<text  x="1021.43" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="535.0" y="1685" width="0.9" height="15.0" fill="rgb(205,40,26)" rx="2" ry="2" />
<text  x="537.98" y="1695.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (4 samples, 0.07%)</title><rect x="748.3" y="1749" width="0.9" height="15.0" fill="rgb(214,147,6)" rx="2" ry="2" />
<text  x="751.29" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (2 samples, 0.04%)</title><rect x="565.8" y="1813" width="0.4" height="15.0" fill="rgb(205,103,15)" rx="2" ry="2" />
<text  x="568.80" y="1823.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.02%)</title><rect x="1127.9" y="1589" width="0.2" height="15.0" fill="rgb(248,116,44)" rx="2" ry="2" />
<text  x="1130.93" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.09%)</title><rect x="787.6" y="1669" width="1.1" height="15.0" fill="rgb(211,87,8)" rx="2" ry="2" />
<text  x="790.63" y="1679.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (171 samples, 3.17%)</title><rect x="777.8" y="1765" width="37.4" height="15.0" fill="rgb(252,197,6)" rx="2" ry="2" />
<text  x="780.80" y="1775.5" >ser..</text>
</g>
<g >
<title>sstables::mc::writer::write_cells (2 samples, 0.04%)</title><rect x="1187.8" y="101" width="0.5" height="15.0" fill="rgb(252,175,41)" rx="2" ry="2" />
<text  x="1190.81" y="111.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (3 samples, 0.06%)</title><rect x="843.6" y="1765" width="0.6" height="15.0" fill="rgb(206,228,4)" rx="2" ry="2" />
<text  x="846.58" y="1775.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1081.6" y="1685" width="0.2" height="15.0" fill="rgb(226,64,17)" rx="2" ry="2" />
<text  x="1084.59" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="81.5" y="2005" width="0.2" height="15.0" fill="rgb(254,90,24)" rx="2" ry="2" />
<text  x="84.47" y="2015.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.02%)</title><rect x="1187.6" y="69" width="0.2" height="15.0" fill="rgb(205,156,52)" rx="2" ry="2" />
<text  x="1190.60" y="79.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.02%)</title><rect x="720.3" y="1621" width="0.2" height="15.0" fill="rgb(241,22,25)" rx="2" ry="2" />
<text  x="723.32" y="1631.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (4 samples, 0.07%)</title><rect x="922.3" y="1797" width="0.8" height="15.0" fill="rgb(212,211,39)" rx="2" ry="2" />
<text  x="925.27" y="1807.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (5 samples, 0.09%)</title><rect x="1118.5" y="1669" width="1.1" height="15.0" fill="rgb(232,41,31)" rx="2" ry="2" />
<text  x="1121.53" y="1679.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="422.9" y="1653" width="0.4" height="15.0" fill="rgb(249,138,51)" rx="2" ry="2" />
<text  x="425.86" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1525" width="2.9" height="15.0" fill="rgb(210,29,42)" rx="2" ry="2" />
<text  x="1189.94" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="12.2" y="1989" width="0.2" height="15.0" fill="rgb(234,56,32)" rx="2" ry="2" />
<text  x="15.19" y="1999.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="24.2" y="1733" width="0.2" height="15.0" fill="rgb(217,37,34)" rx="2" ry="2" />
<text  x="27.21" y="1743.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="941.7" y="1749" width="0.7" height="15.0" fill="rgb(207,212,28)" rx="2" ry="2" />
<text  x="944.72" y="1759.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.02%)</title><rect x="282.5" y="1653" width="0.3" height="15.0" fill="rgb(242,40,44)" rx="2" ry="2" />
<text  x="285.54" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="45.2" y="1589" width="0.2" height="15.0" fill="rgb(213,40,11)" rx="2" ry="2" />
<text  x="48.19" y="1599.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="17.4" y="1909" width="0.2" height="15.0" fill="rgb(250,47,29)" rx="2" ry="2" />
<text  x="20.43" y="1919.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::intrusive_array&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, dht::decorated_key, mutation_partition&gt; (2 samples, 0.04%)</title><rect x="1118.5" y="1589" width="0.5" height="15.0" fill="rgb(240,18,7)" rx="2" ry="2" />
<text  x="1121.53" y="1599.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (2 samples, 0.04%)</title><rect x="885.5" y="1829" width="0.5" height="15.0" fill="rgb(205,173,25)" rx="2" ry="2" />
<text  x="888.55" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="50.0" y="1717" width="0.2" height="15.0" fill="rgb(237,104,21)" rx="2" ry="2" />
<text  x="53.00" y="1727.5" ></text>
</g>
<g >
<title>make_list_type_name (1 samples, 0.02%)</title><rect x="19.4" y="1605" width="0.2" height="15.0" fill="rgb(246,191,36)" rx="2" ry="2" />
<text  x="22.40" y="1615.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.02%)</title><rect x="865.9" y="1749" width="0.2" height="15.0" fill="rgb(247,65,42)" rx="2" ry="2" />
<text  x="868.88" y="1759.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.02%)</title><rect x="18.5" y="1925" width="0.2" height="15.0" fill="rgb(244,158,27)" rx="2" ry="2" />
<text  x="21.52" y="1935.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (2 samples, 0.04%)</title><rect x="99.0" y="1925" width="0.4" height="15.0" fill="rgb(220,169,5)" rx="2" ry="2" />
<text  x="101.95" y="1935.5" ></text>
</g>
<g >
<title>schema::registry_entry (3 samples, 0.06%)</title><rect x="1010.3" y="1701" width="0.7" height="15.0" fill="rgb(219,166,34)" rx="2" ry="2" />
<text  x="1013.34" y="1711.5" ></text>
</g>
<g >
<title>make_combined_reader (79 samples, 1.46%)</title><rect x="465.3" y="1749" width="17.2" height="15.0" fill="rgb(247,159,11)" rx="2" ry="2" />
<text  x="468.26" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_service_level_statement, std::default_delete&lt;cql3::statements::drop_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::drop_service_level_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="66.8" y="1797" width="0.2" height="15.0" fill="rgb(238,210,44)" rx="2" ry="2" />
<text  x="69.83" y="1807.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="1167.3" y="1909" width="0.2" height="15.0" fill="rgb(226,216,14)" rx="2" ry="2" />
<text  x="1170.27" y="1919.5" ></text>
</g>
<g >
<title>database::find_uuid (16 samples, 0.30%)</title><rect x="767.1" y="1813" width="3.5" height="15.0" fill="rgb(230,174,49)" rx="2" ry="2" />
<text  x="770.09" y="1823.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.52%)</title><rect x="1118.1" y="1877" width="6.1" height="15.0" fill="rgb(247,90,28)" rx="2" ry="2" />
<text  x="1121.09" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (9 samples, 0.17%)</title><rect x="857.1" y="1877" width="2.0" height="15.0" fill="rgb(221,202,35)" rx="2" ry="2" />
<text  x="860.13" y="1887.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (1 samples, 0.02%)</title><rect x="185.9" y="1653" width="0.3" height="15.0" fill="rgb(211,0,1)" rx="2" ry="2" />
<text  x="188.94" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="1133.4" y="1765" width="0.6" height="15.0" fill="rgb(215,104,8)" rx="2" ry="2" />
<text  x="1136.39" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (52 samples, 0.96%)</title><rect x="48.9" y="1749" width="11.4" height="15.0" fill="rgb(222,193,23)" rx="2" ry="2" />
<text  x="51.90" y="1759.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (4 samples, 0.07%)</title><rect x="795.7" y="1621" width="0.9" height="15.0" fill="rgb(252,73,31)" rx="2" ry="2" />
<text  x="798.72" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="704.1" y="1877" width="0.3" height="15.0" fill="rgb(208,60,47)" rx="2" ry="2" />
<text  x="707.14" y="1887.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="707.4" y="1909" width="0.2" height="15.0" fill="rgb(253,167,23)" rx="2" ry="2" />
<text  x="710.42" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="88.5" y="1893" width="0.2" height="15.0" fill="rgb(238,39,25)" rx="2" ry="2" />
<text  x="91.46" y="1903.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1186.9" y="309" width="0.3" height="15.0" fill="rgb(244,33,25)" rx="2" ry="2" />
<text  x="1189.94" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::unique_ptr&lt;sstables::option [], utils::chunked_vector_free_deleter&gt;, 1ul&gt;::clear (1 samples, 0.02%)</title><rect x="17.4" y="1941" width="0.2" height="15.0" fill="rgb(251,210,53)" rx="2" ry="2" />
<text  x="20.43" y="1951.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1063.5" y="1717" width="0.2" height="15.0" fill="rgb(254,216,16)" rx="2" ry="2" />
<text  x="1066.45" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="741" width="0.3" height="15.0" fill="rgb(232,103,1)" rx="2" ry="2" />
<text  x="13.44" y="751.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (1 samples, 0.02%)</title><rect x="71.0" y="1829" width="0.2" height="15.0" fill="rgb(243,156,51)" rx="2" ry="2" />
<text  x="73.98" y="1839.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (4 samples, 0.07%)</title><rect x="51.1" y="1733" width="0.9" height="15.0" fill="rgb(233,61,47)" rx="2" ry="2" />
<text  x="54.09" y="1743.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1064.8" y="1749" width="0.4" height="15.0" fill="rgb(245,72,8)" rx="2" ry="2" />
<text  x="1067.77" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.52%)</title><rect x="1118.1" y="1845" width="6.1" height="15.0" fill="rgb(236,163,4)" rx="2" ry="2" />
<text  x="1121.09" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="629" width="0.3" height="15.0" fill="rgb(235,15,18)" rx="2" ry="2" />
<text  x="13.44" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="435.8" y="1605" width="0.2" height="15.0" fill="rgb(239,213,23)" rx="2" ry="2" />
<text  x="438.75" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.02%)</title><rect x="865.9" y="1781" width="0.2" height="15.0" fill="rgb(252,125,18)" rx="2" ry="2" />
<text  x="868.88" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="986.3" y="1717" width="1.1" height="15.0" fill="rgb(220,146,26)" rx="2" ry="2" />
<text  x="989.30" y="1727.5" ></text>
</g>
<g >
<title>boost::range_detail::filtered_range&lt;mutation_partition::non_dummy_rows (1 samples, 0.02%)</title><rect x="1129.7" y="1573" width="0.2" height="15.0" fill="rgb(236,49,24)" rx="2" ry="2" />
<text  x="1132.68" y="1583.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1187.2" y="261" width="0.2" height="15.0" fill="rgb(210,62,35)" rx="2" ry="2" />
<text  x="1190.16" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="568.6" y="1845" width="0.3" height="15.0" fill="rgb(234,182,38)" rx="2" ry="2" />
<text  x="571.64" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="835.9" y="1781" width="1.1" height="15.0" fill="rgb(240,85,31)" rx="2" ry="2" />
<text  x="838.93" y="1791.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="17.6" y="1893" width="0.3" height="15.0" fill="rgb(230,13,32)" rx="2" ry="2" />
<text  x="20.65" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (20 samples, 0.37%)</title><rect x="437.7" y="1685" width="4.4" height="15.0" fill="rgb(236,142,13)" rx="2" ry="2" />
<text  x="440.72" y="1695.5" ></text>
</g>
<g >
<title>mutation_partition::mutation_partition (1 samples, 0.02%)</title><rect x="1122.2" y="1637" width="0.3" height="15.0" fill="rgb(212,125,33)" rx="2" ry="2" />
<text  x="1125.25" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="57.9" y="1589" width="0.4" height="15.0" fill="rgb(212,62,10)" rx="2" ry="2" />
<text  x="60.86" y="1599.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.02%)</title><rect x="1136.5" y="1925" width="0.2" height="15.0" fill="rgb(243,148,7)" rx="2" ry="2" />
<text  x="1139.45" y="1935.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (6 samples, 0.11%)</title><rect x="583.3" y="1685" width="1.3" height="15.0" fill="rgb(206,136,39)" rx="2" ry="2" />
<text  x="586.28" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="42.6" y="1685" width="0.2" height="15.0" fill="rgb(235,101,40)" rx="2" ry="2" />
<text  x="45.57" y="1695.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (6 samples, 0.11%)</title><rect x="534.5" y="1717" width="1.4" height="15.0" fill="rgb(239,58,12)" rx="2" ry="2" />
<text  x="537.54" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="865.9" y="1701" width="0.2" height="15.0" fill="rgb(242,14,27)" rx="2" ry="2" />
<text  x="868.88" y="1711.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="51.7" y="1605" width="0.3" height="15.0" fill="rgb(240,90,8)" rx="2" ry="2" />
<text  x="54.74" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="901" width="0.3" height="15.0" fill="rgb(226,8,24)" rx="2" ry="2" />
<text  x="13.44" y="911.5" ></text>
</g>
<g >
<title>boost::dynamic_bitset&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::m_check_invariants (1 samples, 0.02%)</title><rect x="651.5" y="1893" width="0.2" height="15.0" fill="rgb(231,45,2)" rx="2" ry="2" />
<text  x="654.47" y="1903.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="659.8" y="1829" width="0.2" height="15.0" fill="rgb(242,207,38)" rx="2" ry="2" />
<text  x="662.78" y="1839.5" ></text>
</g>
<g >
<title>std::addressof&lt;__gnu_cxx::__aligned_membuf&lt;cql3::expr::untyped_constant&gt; &gt; (1 samples, 0.02%)</title><rect x="55.0" y="1349" width="0.2" height="15.0" fill="rgb(248,228,8)" rx="2" ry="2" />
<text  x="58.02" y="1359.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="117.5" y="1845" width="0.2" height="15.0" fill="rgb(243,87,14)" rx="2" ry="2" />
<text  x="120.53" y="1855.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::reserve (1 samples, 0.02%)</title><rect x="1089.2" y="1797" width="0.3" height="15.0" fill="rgb(249,25,52)" rx="2" ry="2" />
<text  x="1092.24" y="1807.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="699.1" y="1893" width="0.5" height="15.0" fill="rgb(239,23,46)" rx="2" ry="2" />
<text  x="702.12" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="674.0" y="1861" width="0.2" height="15.0" fill="rgb(254,90,17)" rx="2" ry="2" />
<text  x="676.98" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="452.4" y="1829" width="0.2" height="15.0" fill="rgb(208,177,26)" rx="2" ry="2" />
<text  x="455.36" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (2 samples, 0.04%)</title><rect x="263.3" y="1557" width="0.4" height="15.0" fill="rgb(208,205,25)" rx="2" ry="2" />
<text  x="266.31" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="53.1" y="1669" width="0.2" height="15.0" fill="rgb(245,154,51)" rx="2" ry="2" />
<text  x="56.06" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, true&gt; &gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="101.1" y="1749" width="0.3" height="15.0" fill="rgb(216,176,25)" rx="2" ry="2" />
<text  x="104.14" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.02%)</title><rect x="42.3" y="1717" width="0.3" height="15.0" fill="rgb(212,76,49)" rx="2" ry="2" />
<text  x="45.35" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_table_statement::raw_statement, std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="66.4" y="1781" width="0.2" height="15.0" fill="rgb(239,94,10)" rx="2" ry="2" />
<text  x="69.39" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::lw_shared_ptr&lt;cql3::column_specification&gt;, std::allocator&lt;seastar::lw_shared_ptr&lt;cql3::column_specification&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="72.7" y="1765" width="0.2" height="15.0" fill="rgb(232,193,19)" rx="2" ry="2" />
<text  x="75.73" y="1775.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="17.6" y="1989" width="0.3" height="15.0" fill="rgb(213,155,50)" rx="2" ry="2" />
<text  x="20.65" y="1999.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.02%)</title><rect x="99.2" y="1733" width="0.2" height="15.0" fill="rgb(240,77,5)" rx="2" ry="2" />
<text  x="102.17" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="940.2" y="1813" width="0.2" height="15.0" fill="rgb(222,185,26)" rx="2" ry="2" />
<text  x="943.19" y="1823.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;seastar::file_impl&gt; &gt;, seastar::reactor::open_directory (1 samples, 0.02%)</title><rect x="684.0" y="1925" width="0.3" height="15.0" fill="rgb(237,213,1)" rx="2" ry="2" />
<text  x="687.04" y="1935.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="57.0" y="1509" width="0.2" height="15.0" fill="rgb(209,14,46)" rx="2" ry="2" />
<text  x="59.99" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (3 samples, 0.06%)</title><rect x="531.3" y="1701" width="0.6" height="15.0" fill="rgb(234,181,7)" rx="2" ry="2" />
<text  x="534.26" y="1711.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="12.2" y="1957" width="0.2" height="15.0" fill="rgb(226,109,48)" rx="2" ry="2" />
<text  x="15.19" y="1967.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (2 samples, 0.04%)</title><rect x="901.7" y="1701" width="0.5" height="15.0" fill="rgb(222,163,20)" rx="2" ry="2" />
<text  x="904.72" y="1711.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (3 samples, 0.06%)</title><rect x="820.2" y="1717" width="0.7" height="15.0" fill="rgb(225,90,4)" rx="2" ry="2" />
<text  x="823.20" y="1727.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (552 samples, 10.22%)</title><rect x="967.1" y="1797" width="120.6" height="15.0" fill="rgb(230,27,51)" rx="2" ry="2" />
<text  x="970.07" y="1807.5" >service::storag..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="64.0" y="1733" width="0.2" height="15.0" fill="rgb(243,9,21)" rx="2" ry="2" />
<text  x="66.98" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="501" width="0.3" height="15.0" fill="rgb(205,168,54)" rx="2" ry="2" />
<text  x="13.44" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.07%)</title><rect x="728.6" y="1813" width="0.9" height="15.0" fill="rgb(248,197,21)" rx="2" ry="2" />
<text  x="731.62" y="1823.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (457 samples, 8.46%)</title><rect x="189.9" y="1701" width="99.9" height="15.0" fill="rgb(217,4,17)" rx="2" ry="2" />
<text  x="192.87" y="1711.5" >logalloc::al..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (3 samples, 0.06%)</title><rect x="569.5" y="1845" width="0.7" height="15.0" fill="rgb(248,179,16)" rx="2" ry="2" />
<text  x="572.51" y="1855.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (1 samples, 0.02%)</title><rect x="1167.9" y="1845" width="0.2" height="15.0" fill="rgb(240,165,29)" rx="2" ry="2" />
<text  x="1170.93" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="10.7" y="1797" width="0.2" height="15.0" fill="rgb(228,119,23)" rx="2" ry="2" />
<text  x="13.66" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="19.4" y="1765" width="0.2" height="15.0" fill="rgb(212,158,43)" rx="2" ry="2" />
<text  x="22.40" y="1775.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="1146.1" y="1909" width="0.4" height="15.0" fill="rgb(208,217,0)" rx="2" ry="2" />
<text  x="1149.07" y="1919.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="823.0" y="1781" width="0.5" height="15.0" fill="rgb(235,184,26)" rx="2" ry="2" />
<text  x="826.04" y="1791.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="10.7" y="1749" width="0.2" height="15.0" fill="rgb(222,224,43)" rx="2" ry="2" />
<text  x="13.66" y="1759.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1189.6" y="37" width="0.2" height="15.0" fill="rgb(237,8,46)" rx="2" ry="2" />
<text  x="1192.56" y="47.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (597 samples, 11.06%)</title><rect x="319.5" y="1829" width="130.5" height="15.0" fill="rgb(208,32,39)" rx="2" ry="2" />
<text  x="322.48" y="1839.5" >seastar::future&lt;..</text>
</g>
<g >
<title>reader_permit::impl::impl (7 samples, 0.13%)</title><rect x="1031.5" y="1637" width="1.6" height="15.0" fill="rgb(238,156,52)" rx="2" ry="2" />
<text  x="1034.54" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (2 samples, 0.04%)</title><rect x="1188.9" y="165" width="0.4" height="15.0" fill="rgb(209,87,9)" rx="2" ry="2" />
<text  x="1191.91" y="175.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.02%)</title><rect x="714.0" y="1845" width="0.2" height="15.0" fill="rgb(221,172,43)" rx="2" ry="2" />
<text  x="716.98" y="1855.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (3 samples, 0.06%)</title><rect x="1127.5" y="1653" width="0.6" height="15.0" fill="rgb(238,9,54)" rx="2" ry="2" />
<text  x="1130.49" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="757" width="0.3" height="15.0" fill="rgb(247,128,35)" rx="2" ry="2" />
<text  x="13.44" y="767.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (1 samples, 0.02%)</title><rect x="619.8" y="1861" width="0.2" height="15.0" fill="rgb(210,56,2)" rx="2" ry="2" />
<text  x="622.78" y="1871.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (4 samples, 0.07%)</title><rect x="1170.1" y="1925" width="0.9" height="15.0" fill="rgb(253,83,34)" rx="2" ry="2" />
<text  x="1173.11" y="1935.5" ></text>
</g>
<g >
<title>get_common_indices.constprop.0 (1 samples, 0.02%)</title><rect x="81.0" y="2037" width="0.3" height="15.0" fill="rgb(239,16,28)" rx="2" ry="2" />
<text  x="84.03" y="2047.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1064.3" y="1749" width="0.2" height="15.0" fill="rgb(214,90,41)" rx="2" ry="2" />
<text  x="1067.33" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1187.4" y="293" width="0.2" height="15.0" fill="rgb(250,205,26)" rx="2" ry="2" />
<text  x="1190.38" y="303.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (1 samples, 0.02%)</title><rect x="10.4" y="101" width="0.3" height="15.0" fill="rgb(220,175,50)" rx="2" ry="2" />
<text  x="13.44" y="111.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="666.8" y="1845" width="0.2" height="15.0" fill="rgb(210,229,10)" rx="2" ry="2" />
<text  x="669.77" y="1855.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="1186.9" y="69" width="0.3" height="15.0" fill="rgb(205,224,21)" rx="2" ry="2" />
<text  x="1189.94" y="79.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1187.4" y="341" width="0.2" height="15.0" fill="rgb(224,177,48)" rx="2" ry="2" />
<text  x="1190.38" y="351.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (1 samples, 0.02%)</title><rect x="751.1" y="1701" width="0.3" height="15.0" fill="rgb(239,172,39)" rx="2" ry="2" />
<text  x="754.13" y="1711.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (1 samples, 0.02%)</title><rect x="128.5" y="1845" width="0.2" height="15.0" fill="rgb(230,175,7)" rx="2" ry="2" />
<text  x="131.46" y="1855.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (1 samples, 0.02%)</title><rect x="737.8" y="1717" width="0.2" height="15.0" fill="rgb(254,227,26)" rx="2" ry="2" />
<text  x="740.80" y="1727.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (2 samples, 0.04%)</title><rect x="1100.8" y="1781" width="0.5" height="15.0" fill="rgb(239,23,43)" rx="2" ry="2" />
<text  x="1103.83" y="1791.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (4 samples, 0.07%)</title><rect x="176.3" y="1717" width="0.9" height="15.0" fill="rgb(250,136,47)" rx="2" ry="2" />
<text  x="179.32" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1621" width="0.3" height="15.0" fill="rgb(240,190,25)" rx="2" ry="2" />
<text  x="13.44" y="1631.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (1 samples, 0.02%)</title><rect x="366.9" y="1605" width="0.2" height="15.0" fill="rgb(210,183,43)" rx="2" ry="2" />
<text  x="369.91" y="1615.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (3 samples, 0.06%)</title><rect x="613.7" y="1861" width="0.6" height="15.0" fill="rgb(249,7,50)" rx="2" ry="2" />
<text  x="616.66" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="856.3" y="1877" width="0.2" height="15.0" fill="rgb(221,109,32)" rx="2" ry="2" />
<text  x="859.26" y="1887.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="566.7" y="1829" width="1.1" height="15.0" fill="rgb(210,225,9)" rx="2" ry="2" />
<text  x="569.67" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="846.6" y="1813" width="0.5" height="15.0" fill="rgb(250,175,32)" rx="2" ry="2" />
<text  x="849.64" y="1823.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (586 samples, 10.85%)</title><rect x="172.2" y="1765" width="128.0" height="15.0" fill="rgb(239,49,16)" rx="2" ry="2" />
<text  x="175.17" y="1775.5" >mutation_fragmen..</text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (5 samples, 0.09%)</title><rect x="177.2" y="1717" width="1.1" height="15.0" fill="rgb(231,23,18)" rx="2" ry="2" />
<text  x="180.20" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="891.2" y="1701" width="0.7" height="15.0" fill="rgb(247,225,9)" rx="2" ry="2" />
<text  x="894.23" y="1711.5" ></text>
</g>
<g >
<title>gms::gossiper::add_local_application_state (1 samples, 0.02%)</title><rect x="10.7" y="1829" width="0.2" height="15.0" fill="rgb(235,107,41)" rx="2" ry="2" />
<text  x="13.66" y="1839.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (1 samples, 0.02%)</title><rect x="425.9" y="1653" width="0.2" height="15.0" fill="rgb(214,48,24)" rx="2" ry="2" />
<text  x="428.92" y="1663.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (34 samples, 0.63%)</title><rect x="596.2" y="1861" width="7.4" height="15.0" fill="rgb(235,186,43)" rx="2" ry="2" />
<text  x="599.18" y="1871.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (1 samples, 0.02%)</title><rect x="1189.1" y="53" width="0.2" height="15.0" fill="rgb(221,218,37)" rx="2" ry="2" />
<text  x="1192.13" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (10 samples, 0.19%)</title><rect x="1153.5" y="1877" width="2.2" height="15.0" fill="rgb(218,136,47)" rx="2" ry="2" />
<text  x="1156.50" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="917" width="0.3" height="15.0" fill="rgb(212,217,52)" rx="2" ry="2" />
<text  x="13.44" y="927.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.02%)</title><rect x="696.5" y="1765" width="0.2" height="15.0" fill="rgb(215,120,6)" rx="2" ry="2" />
<text  x="699.49" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1749" width="0.3" height="15.0" fill="rgb(240,8,27)" rx="2" ry="2" />
<text  x="13.44" y="1759.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="18.1" y="1941" width="0.2" height="15.0" fill="rgb(253,144,49)" rx="2" ry="2" />
<text  x="21.09" y="1951.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="562.3" y="1765" width="0.9" height="15.0" fill="rgb(221,221,45)" rx="2" ry="2" />
<text  x="565.30" y="1775.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (3 samples, 0.06%)</title><rect x="299.4" y="1749" width="0.6" height="15.0" fill="rgb(254,88,8)" rx="2" ry="2" />
<text  x="302.37" y="1759.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="1051.0" y="1685" width="0.4" height="15.0" fill="rgb(210,112,33)" rx="2" ry="2" />
<text  x="1054.00" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.02%)</title><rect x="59.8" y="1717" width="0.3" height="15.0" fill="rgb(210,90,35)" rx="2" ry="2" />
<text  x="62.83" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (5 samples, 0.09%)</title><rect x="45.6" y="1717" width="1.1" height="15.0" fill="rgb(219,114,39)" rx="2" ry="2" />
<text  x="48.63" y="1727.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="807.1" y="1669" width="0.6" height="15.0" fill="rgb(251,204,47)" rx="2" ry="2" />
<text  x="810.08" y="1679.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (2 samples, 0.04%)</title><rect x="1187.8" y="165" width="0.5" height="15.0" fill="rgb(238,164,23)" rx="2" ry="2" />
<text  x="1190.81" y="175.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (2 samples, 0.04%)</title><rect x="351.6" y="1621" width="0.4" height="15.0" fill="rgb(216,16,21)" rx="2" ry="2" />
<text  x="354.61" y="1631.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="988.5" y="1717" width="0.2" height="15.0" fill="rgb(222,74,23)" rx="2" ry="2" />
<text  x="991.49" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="81.3" y="1957" width="0.2" height="15.0" fill="rgb(236,199,10)" rx="2" ry="2" />
<text  x="84.25" y="1967.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.02%)</title><rect x="720.3" y="1637" width="0.2" height="15.0" fill="rgb(209,196,3)" rx="2" ry="2" />
<text  x="723.32" y="1647.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1186.9" y="341" width="0.3" height="15.0" fill="rgb(224,10,37)" rx="2" ry="2" />
<text  x="1189.94" y="351.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (4 samples, 0.07%)</title><rect x="118.2" y="1877" width="0.9" height="15.0" fill="rgb(214,15,18)" rx="2" ry="2" />
<text  x="121.19" y="1887.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (1 samples, 0.02%)</title><rect x="866.3" y="1749" width="0.2" height="15.0" fill="rgb(254,26,8)" rx="2" ry="2" />
<text  x="869.31" y="1759.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (16 samples, 0.30%)</title><rect x="384.2" y="1589" width="3.5" height="15.0" fill="rgb(206,30,45)" rx="2" ry="2" />
<text  x="387.17" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (2 samples, 0.04%)</title><rect x="625.7" y="1813" width="0.4" height="15.0" fill="rgb(218,128,40)" rx="2" ry="2" />
<text  x="628.68" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="645" width="2.9" height="15.0" fill="rgb(226,79,39)" rx="2" ry="2" />
<text  x="1189.94" y="655.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1187.6" y="325" width="0.2" height="15.0" fill="rgb(215,42,30)" rx="2" ry="2" />
<text  x="1190.60" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (7 samples, 0.13%)</title><rect x="765.3" y="1765" width="1.6" height="15.0" fill="rgb(212,91,5)" rx="2" ry="2" />
<text  x="768.34" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_service_level_statement, std::default_delete&lt;cql3::statements::drop_service_level_statement&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="68.4" y="1813" width="0.4" height="15.0" fill="rgb(242,143,54)" rx="2" ry="2" />
<text  x="71.36" y="1823.5" ></text>
</g>
<g >
<title>ser::integral_serializer&lt;long&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1130.1" y="1573" width="0.2" height="15.0" fill="rgb(234,63,35)" rx="2" ry="2" />
<text  x="1133.11" y="1583.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (6 samples, 0.11%)</title><rect x="787.6" y="1685" width="1.3" height="15.0" fill="rgb(239,157,32)" rx="2" ry="2" />
<text  x="790.63" y="1695.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (3 samples, 0.06%)</title><rect x="469.0" y="1701" width="0.6" height="15.0" fill="rgb(247,221,40)" rx="2" ry="2" />
<text  x="471.97" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.20%)</title><rect x="1187.4" y="389" width="2.4" height="15.0" fill="rgb(233,45,26)" rx="2" ry="2" />
<text  x="1190.38" y="399.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="833.1" y="1845" width="0.2" height="15.0" fill="rgb(252,83,5)" rx="2" ry="2" />
<text  x="836.09" y="1855.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (2 samples, 0.04%)</title><rect x="23.6" y="1797" width="0.4" height="15.0" fill="rgb(234,209,41)" rx="2" ry="2" />
<text  x="26.55" y="1807.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="62.2" y="1557" width="0.3" height="15.0" fill="rgb(245,196,25)" rx="2" ry="2" />
<text  x="65.24" y="1567.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="651.0" y="1909" width="0.3" height="15.0" fill="rgb(249,41,44)" rx="2" ry="2" />
<text  x="654.03" y="1919.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="557.3" y="1829" width="0.4" height="15.0" fill="rgb(213,77,4)" rx="2" ry="2" />
<text  x="560.27" y="1839.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::get_future (1 samples, 0.02%)</title><rect x="1128.6" y="1701" width="0.2" height="15.0" fill="rgb(237,194,9)" rx="2" ry="2" />
<text  x="1131.58" y="1711.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (2 samples, 0.04%)</title><rect x="866.8" y="1797" width="0.4" height="15.0" fill="rgb(213,160,10)" rx="2" ry="2" />
<text  x="869.75" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="1187.4" y="133" width="0.2" height="15.0" fill="rgb(222,203,13)" rx="2" ry="2" />
<text  x="1190.38" y="143.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="90.6" y="1893" width="0.7" height="15.0" fill="rgb(213,151,34)" rx="2" ry="2" />
<text  x="93.65" y="1903.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="862.4" y="1829" width="0.4" height="15.0" fill="rgb(251,211,35)" rx="2" ry="2" />
<text  x="865.38" y="1839.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (2 samples, 0.04%)</title><rect x="783.5" y="1717" width="0.4" height="15.0" fill="rgb(213,5,35)" rx="2" ry="2" />
<text  x="786.48" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="62.0" y="1573" width="0.2" height="15.0" fill="rgb(237,148,36)" rx="2" ry="2" />
<text  x="65.02" y="1583.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="314.7" y="1717" width="0.8" height="15.0" fill="rgb(245,61,9)" rx="2" ry="2" />
<text  x="317.67" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="52.6" y="1669" width="0.2" height="15.0" fill="rgb(248,29,46)" rx="2" ry="2" />
<text  x="55.62" y="1679.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.02%)</title><rect x="862.4" y="1717" width="0.2" height="15.0" fill="rgb(253,62,39)" rx="2" ry="2" />
<text  x="865.38" y="1727.5" ></text>
</g>
<g >
<title>std::move&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="59.4" y="1733" width="0.2" height="15.0" fill="rgb(232,161,53)" rx="2" ry="2" />
<text  x="62.39" y="1743.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::never_speculating_read_executor&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1055.6" y="1765" width="0.2" height="15.0" fill="rgb(237,133,23)" rx="2" ry="2" />
<text  x="1058.59" y="1775.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="550.9" y="1669" width="0.3" height="15.0" fill="rgb(234,104,30)" rx="2" ry="2" />
<text  x="553.93" y="1679.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (2 samples, 0.04%)</title><rect x="512.2" y="1749" width="0.5" height="15.0" fill="rgb(244,198,26)" rx="2" ry="2" />
<text  x="515.25" y="1759.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (3 samples, 0.06%)</title><rect x="42.3" y="1733" width="0.7" height="15.0" fill="rgb(246,51,29)" rx="2" ry="2" />
<text  x="45.35" y="1743.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (7 samples, 0.13%)</title><rect x="1031.5" y="1621" width="1.6" height="15.0" fill="rgb(214,184,7)" rx="2" ry="2" />
<text  x="1034.54" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1138.0" y="1925" width="0.2" height="15.0" fill="rgb(221,196,6)" rx="2" ry="2" />
<text  x="1140.98" y="1935.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (6 samples, 0.11%)</title><rect x="953.1" y="1797" width="1.3" height="15.0" fill="rgb(245,99,48)" rx="2" ry="2" />
<text  x="956.08" y="1807.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (4 samples, 0.07%)</title><rect x="441.2" y="1669" width="0.9" height="15.0" fill="rgb(222,22,39)" rx="2" ry="2" />
<text  x="444.22" y="1679.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (3 samples, 0.06%)</title><rect x="245.4" y="1573" width="0.6" height="15.0" fill="rgb(244,200,4)" rx="2" ry="2" />
<text  x="248.39" y="1583.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (2 samples, 0.04%)</title><rect x="1170.5" y="1877" width="0.5" height="15.0" fill="rgb(231,229,38)" rx="2" ry="2" />
<text  x="1173.55" y="1887.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (20 samples, 0.37%)</title><rect x="1128.8" y="1717" width="4.4" height="15.0" fill="rgb(233,81,29)" rx="2" ry="2" />
<text  x="1131.80" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="694.7" y="1909" width="0.3" height="15.0" fill="rgb(237,14,17)" rx="2" ry="2" />
<text  x="697.75" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.06%)</title><rect x="882.3" y="1845" width="0.6" height="15.0" fill="rgb(206,20,11)" rx="2" ry="2" />
<text  x="885.27" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="809.7" y="1701" width="0.2" height="15.0" fill="rgb(253,175,5)" rx="2" ry="2" />
<text  x="812.71" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (1 samples, 0.02%)</title><rect x="255.2" y="1605" width="0.2" height="15.0" fill="rgb(225,163,53)" rx="2" ry="2" />
<text  x="258.22" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1413" width="2.9" height="15.0" fill="rgb(251,84,10)" rx="2" ry="2" />
<text  x="1189.94" y="1423.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.07%)</title><rect x="912.6" y="1733" width="0.9" height="15.0" fill="rgb(253,80,6)" rx="2" ry="2" />
<text  x="915.65" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_UPDATE (1 samples, 0.02%)</title><rect x="35.6" y="1685" width="0.2" height="15.0" fill="rgb(230,15,25)" rx="2" ry="2" />
<text  x="38.57" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="552.0" y="1701" width="0.2" height="15.0" fill="rgb(216,41,0)" rx="2" ry="2" />
<text  x="555.03" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (287 samples, 5.32%)</title><rect x="17.9" y="2021" width="62.7" height="15.0" fill="rgb(227,229,4)" rx="2" ry="2" />
<text  x="20.87" y="2031.5" >seasta..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="326.0" y="1685" width="0.5" height="15.0" fill="rgb(252,124,53)" rx="2" ry="2" />
<text  x="329.04" y="1695.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator+ (1 samples, 0.02%)</title><rect x="17.4" y="1877" width="0.2" height="15.0" fill="rgb(241,106,41)" rx="2" ry="2" />
<text  x="20.43" y="1887.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (2 samples, 0.04%)</title><rect x="852.3" y="1813" width="0.5" height="15.0" fill="rgb(252,88,23)" rx="2" ry="2" />
<text  x="855.33" y="1823.5" ></text>
</g>
<g >
<title>service::migration_manager::include_keyspace_and_announce (1 samples, 0.02%)</title><rect x="100.0" y="1861" width="0.3" height="15.0" fill="rgb(229,17,50)" rx="2" ry="2" />
<text  x="103.05" y="1871.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1188.5" y="213" width="0.2" height="15.0" fill="rgb(236,132,19)" rx="2" ry="2" />
<text  x="1191.47" y="223.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1285" width="0.3" height="15.0" fill="rgb(234,198,22)" rx="2" ry="2" />
<text  x="13.44" y="1295.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1893" width="2.9" height="15.0" fill="rgb(242,27,34)" rx="2" ry="2" />
<text  x="1189.94" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (24 samples, 0.44%)</title><rect x="598.4" y="1845" width="5.2" height="15.0" fill="rgb(244,173,46)" rx="2" ry="2" />
<text  x="601.36" y="1855.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (29 samples, 0.54%)</title><rect x="1117.9" y="1909" width="6.3" height="15.0" fill="rgb(222,126,26)" rx="2" ry="2" />
<text  x="1120.88" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (7 samples, 0.13%)</title><rect x="26.8" y="1669" width="1.6" height="15.0" fill="rgb(215,113,8)" rx="2" ry="2" />
<text  x="29.83" y="1679.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (4 samples, 0.07%)</title><rect x="78.2" y="1893" width="0.9" height="15.0" fill="rgb(247,155,50)" rx="2" ry="2" />
<text  x="81.19" y="1903.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.02%)</title><rect x="657.2" y="1893" width="0.2" height="15.0" fill="rgb(247,182,28)" rx="2" ry="2" />
<text  x="660.15" y="1903.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="831.8" y="1845" width="0.2" height="15.0" fill="rgb(254,113,8)" rx="2" ry="2" />
<text  x="834.78" y="1855.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::optional&lt;auth::resource&gt; &gt; (1 samples, 0.02%)</title><rect x="811.5" y="1749" width="0.2" height="15.0" fill="rgb(211,64,47)" rx="2" ry="2" />
<text  x="814.46" y="1759.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (1 samples, 0.02%)</title><rect x="543.1" y="1749" width="0.2" height="15.0" fill="rgb(236,229,47)" rx="2" ry="2" />
<text  x="546.07" y="1759.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="561.9" y="1781" width="0.2" height="15.0" fill="rgb(221,44,27)" rx="2" ry="2" />
<text  x="564.86" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="885" width="2.9" height="15.0" fill="rgb(233,15,40)" rx="2" ry="2" />
<text  x="1189.94" y="895.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="45.2" y="1605" width="0.2" height="15.0" fill="rgb(219,45,53)" rx="2" ry="2" />
<text  x="48.19" y="1615.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (4 samples, 0.07%)</title><rect x="524.9" y="1653" width="0.9" height="15.0" fill="rgb(208,118,4)" rx="2" ry="2" />
<text  x="527.92" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="128.0" y="1797" width="0.5" height="15.0" fill="rgb(225,3,8)" rx="2" ry="2" />
<text  x="131.02" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::reset_state (1 samples, 0.02%)</title><rect x="1187.6" y="85" width="0.2" height="15.0" fill="rgb(229,125,9)" rx="2" ry="2" />
<text  x="1190.60" y="95.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (9 samples, 0.17%)</title><rect x="53.9" y="1685" width="2.0" height="15.0" fill="rgb(254,42,4)" rx="2" ry="2" />
<text  x="56.93" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.06%)</title><rect x="1166.2" y="1845" width="0.6" height="15.0" fill="rgb(221,132,41)" rx="2" ry="2" />
<text  x="1169.18" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (1 samples, 0.02%)</title><rect x="29.2" y="1717" width="0.3" height="15.0" fill="rgb(211,12,7)" rx="2" ry="2" />
<text  x="32.23" y="1727.5" ></text>
</g>
<g >
<title>schema::partition_key_columns (1 samples, 0.02%)</title><rect x="76.4" y="1877" width="0.3" height="15.0" fill="rgb(219,61,11)" rx="2" ry="2" />
<text  x="79.44" y="1887.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (9 samples, 0.17%)</title><rect x="1169.0" y="1941" width="2.0" height="15.0" fill="rgb(214,64,30)" rx="2" ry="2" />
<text  x="1172.02" y="1951.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1186.9" y="325" width="0.3" height="15.0" fill="rgb(249,97,46)" rx="2" ry="2" />
<text  x="1189.94" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="99.4" y="1733" width="0.2" height="15.0" fill="rgb(222,208,1)" rx="2" ry="2" />
<text  x="102.39" y="1743.5" ></text>
</g>
<g >
<title>database::shard_of (2 samples, 0.04%)</title><rect x="1127.7" y="1605" width="0.4" height="15.0" fill="rgb(239,216,31)" rx="2" ry="2" />
<text  x="1130.71" y="1615.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (680 samples, 12.59%)</title><rect x="169.5" y="1797" width="148.7" height="15.0" fill="rgb(240,32,10)" rx="2" ry="2" />
<text  x="172.55" y="1807.5" >seastar::repeat&lt;me..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="1128.1" y="1669" width="0.5" height="15.0" fill="rgb(242,214,43)" rx="2" ry="2" />
<text  x="1131.15" y="1679.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (12 samples, 0.22%)</title><rect x="1061.1" y="1733" width="2.6" height="15.0" fill="rgb(216,187,12)" rx="2" ry="2" />
<text  x="1064.05" y="1743.5" ></text>
</g>
<g >
<title>seastar::gate::enter (5 samples, 0.09%)</title><rect x="1032.0" y="1605" width="1.1" height="15.0" fill="rgb(225,162,27)" rx="2" ry="2" />
<text  x="1034.98" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="53.3" y="1653" width="0.6" height="15.0" fill="rgb(254,221,11)" rx="2" ry="2" />
<text  x="56.27" y="1663.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (18 samples, 0.33%)</title><rect x="847.3" y="1845" width="3.9" height="15.0" fill="rgb(205,144,17)" rx="2" ry="2" />
<text  x="850.30" y="1855.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (522 samples, 9.67%)</title><rect x="328.0" y="1701" width="114.1" height="15.0" fill="rgb(227,72,13)" rx="2" ry="2" />
<text  x="331.00" y="1711.5" >flat_mutation_..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (5 samples, 0.09%)</title><rect x="64.4" y="1781" width="1.1" height="15.0" fill="rgb(217,70,52)" rx="2" ry="2" />
<text  x="67.42" y="1791.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (3 samples, 0.06%)</title><rect x="935.2" y="1813" width="0.6" height="15.0" fill="rgb(242,206,50)" rx="2" ry="2" />
<text  x="938.16" y="1823.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (2 samples, 0.04%)</title><rect x="695.8" y="1685" width="0.5" height="15.0" fill="rgb(229,218,46)" rx="2" ry="2" />
<text  x="698.84" y="1695.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (4 samples, 0.07%)</title><rect x="1113.1" y="1829" width="0.8" height="15.0" fill="rgb(252,136,20)" rx="2" ry="2" />
<text  x="1116.07" y="1839.5" ></text>
</g>
<g >
<title>list_type_impl::get_instance (1 samples, 0.02%)</title><rect x="19.4" y="1669" width="0.2" height="15.0" fill="rgb(224,160,43)" rx="2" ry="2" />
<text  x="22.40" y="1679.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (12 samples, 0.22%)</title><rect x="835.1" y="1845" width="2.6" height="15.0" fill="rgb(216,32,52)" rx="2" ry="2" />
<text  x="838.06" y="1855.5" ></text>
</g>
<g >
<title>__libc_siglongjmp (1 samples, 0.02%)</title><rect x="17.4" y="2037" width="0.2" height="15.0" fill="rgb(224,21,27)" rx="2" ry="2" />
<text  x="20.43" y="2047.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (5 samples, 0.09%)</title><rect x="34.5" y="1669" width="1.1" height="15.0" fill="rgb(220,83,30)" rx="2" ry="2" />
<text  x="37.48" y="1679.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (13 samples, 0.24%)</title><rect x="533.2" y="1749" width="2.9" height="15.0" fill="rgb(252,225,14)" rx="2" ry="2" />
<text  x="536.23" y="1759.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (51 samples, 0.94%)</title><rect x="707.6" y="1925" width="11.2" height="15.0" fill="rgb(228,201,3)" rx="2" ry="2" />
<text  x="710.64" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::list_users_statement*, std::default_delete&lt;cql3::statements::list_users_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="67.0" y="1765" width="0.3" height="15.0" fill="rgb(212,44,34)" rx="2" ry="2" />
<text  x="70.04" y="1775.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="620.2" y="1829" width="0.2" height="15.0" fill="rgb(219,56,53)" rx="2" ry="2" />
<text  x="623.22" y="1839.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="470.7" y="1669" width="0.9" height="15.0" fill="rgb(231,128,32)" rx="2" ry="2" />
<text  x="473.72" y="1679.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (31 samples, 0.57%)</title><rect x="698.9" y="1909" width="6.8" height="15.0" fill="rgb(207,137,13)" rx="2" ry="2" />
<text  x="701.90" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="58.5" y="1573" width="0.2" height="15.0" fill="rgb(236,57,15)" rx="2" ry="2" />
<text  x="61.52" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1717" width="0.3" height="15.0" fill="rgb(254,214,52)" rx="2" ry="2" />
<text  x="13.44" y="1727.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="1017.8" y="1669" width="1.3" height="15.0" fill="rgb(236,171,28)" rx="2" ry="2" />
<text  x="1020.78" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="821" width="0.3" height="15.0" fill="rgb(243,163,8)" rx="2" ry="2" />
<text  x="13.44" y="831.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (4 samples, 0.07%)</title><rect x="802.9" y="1557" width="0.9" height="15.0" fill="rgb(234,183,26)" rx="2" ry="2" />
<text  x="805.93" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="52.0" y="1621" width="0.2" height="15.0" fill="rgb(226,59,37)" rx="2" ry="2" />
<text  x="54.96" y="1631.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (1 samples, 0.02%)</title><rect x="867.4" y="1717" width="0.2" height="15.0" fill="rgb(220,180,32)" rx="2" ry="2" />
<text  x="870.41" y="1727.5" ></text>
</g>
<g >
<title>mutation_partition::mutation_partition (1 samples, 0.02%)</title><rect x="1118.7" y="1573" width="0.3" height="15.0" fill="rgb(240,122,41)" rx="2" ry="2" />
<text  x="1121.75" y="1583.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (17 samples, 0.31%)</title><rect x="751.1" y="1781" width="3.7" height="15.0" fill="rgb(239,61,26)" rx="2" ry="2" />
<text  x="754.13" y="1791.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::mutate_locally (1 samples, 0.02%)</title><rect x="697.1" y="1925" width="0.3" height="15.0" fill="rgb(224,116,10)" rx="2" ry="2" />
<text  x="700.15" y="1935.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="43.9" y="1733" width="0.2" height="15.0" fill="rgb(247,179,29)" rx="2" ry="2" />
<text  x="46.88" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="661" width="0.3" height="15.0" fill="rgb(217,115,47)" rx="2" ry="2" />
<text  x="13.44" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::_M_initialize (1 samples, 0.02%)</title><rect x="69.9" y="1845" width="0.2" height="15.0" fill="rgb(218,63,19)" rx="2" ry="2" />
<text  x="72.89" y="1855.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.02%)</title><rect x="257.6" y="1557" width="0.2" height="15.0" fill="rgb(234,136,37)" rx="2" ry="2" />
<text  x="260.63" y="1567.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (2 samples, 0.04%)</title><rect x="340.7" y="1621" width="0.4" height="15.0" fill="rgb(231,227,32)" rx="2" ry="2" />
<text  x="343.68" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.09%)</title><rect x="45.6" y="1653" width="1.1" height="15.0" fill="rgb(239,1,29)" rx="2" ry="2" />
<text  x="48.63" y="1663.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (1 samples, 0.02%)</title><rect x="959.2" y="1813" width="0.2" height="15.0" fill="rgb(219,226,7)" rx="2" ry="2" />
<text  x="962.20" y="1823.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_tokenStartCharIndex (1 samples, 0.02%)</title><rect x="29.9" y="1701" width="0.2" height="15.0" fill="rgb(231,202,12)" rx="2" ry="2" />
<text  x="32.89" y="1711.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="828.3" y="1701" width="0.2" height="15.0" fill="rgb(245,228,44)" rx="2" ry="2" />
<text  x="831.28" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="24.9" y="1669" width="0.2" height="15.0" fill="rgb(220,5,20)" rx="2" ry="2" />
<text  x="27.86" y="1679.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (30 samples, 0.56%)</title><rect x="578.7" y="1733" width="6.5" height="15.0" fill="rgb(254,185,4)" rx="2" ry="2" />
<text  x="581.69" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="58.5" y="1557" width="0.2" height="15.0" fill="rgb(248,33,47)" rx="2" ry="2" />
<text  x="61.52" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="49.3" y="1653" width="0.5" height="15.0" fill="rgb(219,186,13)" rx="2" ry="2" />
<text  x="52.34" y="1663.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="665.0" y="1877" width="0.9" height="15.0" fill="rgb(220,157,25)" rx="2" ry="2" />
<text  x="668.02" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="977.6" y="1765" width="0.2" height="15.0" fill="rgb(221,99,13)" rx="2" ry="2" />
<text  x="980.56" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="317.5" y="1781" width="0.2" height="15.0" fill="rgb(236,158,33)" rx="2" ry="2" />
<text  x="320.51" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::~statement_restrictions (2 samples, 0.04%)</title><rect x="651.7" y="1877" width="0.4" height="15.0" fill="rgb(233,222,28)" rx="2" ry="2" />
<text  x="654.69" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="442.5" y="1701" width="0.2" height="15.0" fill="rgb(218,72,18)" rx="2" ry="2" />
<text  x="445.53" y="1711.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (18 samples, 0.33%)</title><rect x="396.6" y="1637" width="4.0" height="15.0" fill="rgb(220,68,23)" rx="2" ry="2" />
<text  x="399.63" y="1647.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="798.3" y="1541" width="0.5" height="15.0" fill="rgb(244,59,31)" rx="2" ry="2" />
<text  x="801.34" y="1551.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="40.8" y="1797" width="0.2" height="15.0" fill="rgb(233,176,29)" rx="2" ry="2" />
<text  x="43.82" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="47.8" y="1573" width="0.4" height="15.0" fill="rgb(232,127,35)" rx="2" ry="2" />
<text  x="50.81" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="856.0" y="1861" width="0.3" height="15.0" fill="rgb(209,95,36)" rx="2" ry="2" />
<text  x="859.04" y="1871.5" ></text>
</g>
<g >
<title>cryptopp_hasher&lt;md5_hasher, 16ul&gt;::calculate (1 samples, 0.02%)</title><rect x="10.4" y="309" width="0.3" height="15.0" fill="rgb(240,209,24)" rx="2" ry="2" />
<text  x="13.44" y="319.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="50.0" y="1733" width="0.2" height="15.0" fill="rgb(245,220,23)" rx="2" ry="2" />
<text  x="53.00" y="1743.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (9 samples, 0.17%)</title><rect x="334.3" y="1653" width="2.0" height="15.0" fill="rgb(243,82,3)" rx="2" ry="2" />
<text  x="337.34" y="1663.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.06%)</title><rect x="511.6" y="1749" width="0.6" height="15.0" fill="rgb(215,171,51)" rx="2" ry="2" />
<text  x="514.59" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (8 samples, 0.15%)</title><rect x="689.3" y="1893" width="1.7" height="15.0" fill="rgb(214,120,38)" rx="2" ry="2" />
<text  x="692.28" y="1903.5" ></text>
</g>
<g >
<title>compound_type&lt; (8 samples, 0.15%)</title><rect x="931.9" y="1781" width="1.7" height="15.0" fill="rgb(215,43,20)" rx="2" ry="2" />
<text  x="934.88" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="789" width="0.3" height="15.0" fill="rgb(237,107,38)" rx="2" ry="2" />
<text  x="13.44" y="799.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="76.2" y="1845" width="0.2" height="15.0" fill="rgb(241,192,23)" rx="2" ry="2" />
<text  x="79.22" y="1855.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.02%)</title><rect x="400.6" y="1637" width="0.2" height="15.0" fill="rgb(252,25,38)" rx="2" ry="2" />
<text  x="403.56" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (17 samples, 0.31%)</title><rect x="751.1" y="1765" width="3.7" height="15.0" fill="rgb(224,83,29)" rx="2" ry="2" />
<text  x="754.13" y="1775.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="903.9" y="1701" width="0.2" height="15.0" fill="rgb(237,135,22)" rx="2" ry="2" />
<text  x="906.91" y="1711.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (2 samples, 0.04%)</title><rect x="83.0" y="1941" width="0.4" height="15.0" fill="rgb(206,74,39)" rx="2" ry="2" />
<text  x="86.00" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (5 samples, 0.09%)</title><rect x="348.8" y="1605" width="1.1" height="15.0" fill="rgb(208,197,36)" rx="2" ry="2" />
<text  x="351.77" y="1615.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (3 samples, 0.06%)</title><rect x="837.0" y="1797" width="0.7" height="15.0" fill="rgb(215,63,4)" rx="2" ry="2" />
<text  x="840.03" y="1807.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;rows_entry, schema const&amp;, rows_entry::last_dummy_tag, seastar::bool_class&lt;continuous_tag&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="18.5" y="1941" width="0.2" height="15.0" fill="rgb(240,106,47)" rx="2" ry="2" />
<text  x="21.52" y="1951.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="823.9" y="1813" width="0.2" height="15.0" fill="rgb(216,145,16)" rx="2" ry="2" />
<text  x="826.91" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="581" width="0.3" height="15.0" fill="rgb(210,137,27)" rx="2" ry="2" />
<text  x="13.44" y="591.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="669.2" y="1877" width="0.2" height="15.0" fill="rgb(225,81,31)" rx="2" ry="2" />
<text  x="672.17" y="1887.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="28.4" y="1653" width="0.6" height="15.0" fill="rgb(215,155,30)" rx="2" ry="2" />
<text  x="31.36" y="1663.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (22 samples, 0.41%)</title><rect x="700.0" y="1893" width="4.8" height="15.0" fill="rgb(231,136,42)" rx="2" ry="2" />
<text  x="702.99" y="1903.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.09%)</title><rect x="926.6" y="1749" width="1.1" height="15.0" fill="rgb(219,17,40)" rx="2" ry="2" />
<text  x="929.64" y="1759.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="53.1" y="1685" width="0.2" height="15.0" fill="rgb(235,55,28)" rx="2" ry="2" />
<text  x="56.06" y="1695.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="775.0" y="1781" width="0.2" height="15.0" fill="rgb(252,189,11)" rx="2" ry="2" />
<text  x="777.96" y="1791.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::delay&lt;service::abstract_write_response_handler::signal (4 samples, 0.07%)</title><rect x="719.2" y="1861" width="0.9" height="15.0" fill="rgb(238,130,40)" rx="2" ry="2" />
<text  x="722.22" y="1871.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="775.0" y="1765" width="0.2" height="15.0" fill="rgb(248,111,5)" rx="2" ry="2" />
<text  x="777.96" y="1775.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="921.2" y="1749" width="0.2" height="15.0" fill="rgb(217,47,23)" rx="2" ry="2" />
<text  x="924.17" y="1759.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="1037.9" y="1701" width="0.4" height="15.0" fill="rgb(231,219,21)" rx="2" ry="2" />
<text  x="1040.88" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="720.1" y="1845" width="0.2" height="15.0" fill="rgb(246,77,48)" rx="2" ry="2" />
<text  x="723.10" y="1855.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.02%)</title><rect x="100.7" y="1813" width="0.2" height="15.0" fill="rgb(243,211,19)" rx="2" ry="2" />
<text  x="103.70" y="1823.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="1151.3" y="1813" width="0.7" height="15.0" fill="rgb(206,102,42)" rx="2" ry="2" />
<text  x="1154.32" y="1823.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (2 samples, 0.04%)</title><rect x="1096.7" y="1781" width="0.4" height="15.0" fill="rgb(243,72,43)" rx="2" ry="2" />
<text  x="1099.68" y="1791.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="828.1" y="1685" width="0.2" height="15.0" fill="rgb(246,213,54)" rx="2" ry="2" />
<text  x="831.07" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="949" width="0.3" height="15.0" fill="rgb(238,53,22)" rx="2" ry="2" />
<text  x="13.44" y="959.5" ></text>
</g>
<g >
<title>cql3::expr::has_supporting_index (1 samples, 0.02%)</title><rect x="72.3" y="1813" width="0.2" height="15.0" fill="rgb(217,9,47)" rx="2" ry="2" />
<text  x="75.29" y="1823.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="921.6" y="1749" width="0.2" height="15.0" fill="rgb(231,54,39)" rx="2" ry="2" />
<text  x="924.61" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::untyped_constant, false&gt;::_Uninitialized&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="54.8" y="1349" width="0.2" height="15.0" fill="rgb(220,14,35)" rx="2" ry="2" />
<text  x="57.80" y="1359.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="732.3" y="1877" width="0.3" height="15.0" fill="rgb(226,228,2)" rx="2" ry="2" />
<text  x="735.34" y="1887.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (2 samples, 0.04%)</title><rect x="1133.6" y="1717" width="0.4" height="15.0" fill="rgb(211,60,35)" rx="2" ry="2" />
<text  x="1136.61" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="43.9" y="1573" width="0.2" height="15.0" fill="rgb(244,223,49)" rx="2" ry="2" />
<text  x="46.88" y="1583.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="780.2" y="1717" width="0.4" height="15.0" fill="rgb(211,224,41)" rx="2" ry="2" />
<text  x="783.20" y="1727.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.02%)</title><rect x="487.3" y="1749" width="0.3" height="15.0" fill="rgb(245,37,40)" rx="2" ry="2" />
<text  x="490.33" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1028.7" y="1589" width="0.2" height="15.0" fill="rgb(212,113,47)" rx="2" ry="2" />
<text  x="1031.70" y="1599.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (3 samples, 0.06%)</title><rect x="105.7" y="1893" width="0.7" height="15.0" fill="rgb(225,50,1)" rx="2" ry="2" />
<text  x="108.73" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="453" width="0.3" height="15.0" fill="rgb(222,163,53)" rx="2" ry="2" />
<text  x="13.44" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::transform (1 samples, 0.02%)</title><rect x="863.0" y="1877" width="0.3" height="15.0" fill="rgb(219,15,34)" rx="2" ry="2" />
<text  x="866.04" y="1887.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (1 samples, 0.02%)</title><rect x="510.7" y="1621" width="0.2" height="15.0" fill="rgb(224,68,47)" rx="2" ry="2" />
<text  x="513.72" y="1631.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.19%)</title><rect x="997.4" y="1685" width="2.2" height="15.0" fill="rgb(228,229,25)" rx="2" ry="2" />
<text  x="1000.45" y="1695.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1301" width="2.9" height="15.0" fill="rgb(219,45,8)" rx="2" ry="2" />
<text  x="1189.94" y="1311.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.02%)</title><rect x="23.1" y="1845" width="0.2" height="15.0" fill="rgb(205,89,30)" rx="2" ry="2" />
<text  x="26.11" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_keyspace_statement, std::default_delete&lt;cql3::statements::drop_keyspace_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="68.1" y="1813" width="0.3" height="15.0" fill="rgb(225,6,19)" rx="2" ry="2" />
<text  x="71.14" y="1823.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (18 samples, 0.33%)</title><rect x="1060.4" y="1749" width="3.9" height="15.0" fill="rgb(231,212,7)" rx="2" ry="2" />
<text  x="1063.39" y="1759.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="599.0" y="1829" width="1.3" height="15.0" fill="rgb(233,10,2)" rx="2" ry="2" />
<text  x="602.02" y="1839.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (19 samples, 0.35%)</title><rect x="1163.1" y="1893" width="4.2" height="15.0" fill="rgb(243,162,47)" rx="2" ry="2" />
<text  x="1166.12" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="939.1" y="1781" width="0.9" height="15.0" fill="rgb(233,78,37)" rx="2" ry="2" />
<text  x="942.09" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (1 samples, 0.02%)</title><rect x="10.4" y="37" width="0.3" height="15.0" fill="rgb(250,166,39)" rx="2" ry="2" />
<text  x="13.44" y="47.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (13 samples, 0.24%)</title><rect x="426.6" y="1669" width="2.8" height="15.0" fill="rgb(218,143,16)" rx="2" ry="2" />
<text  x="429.57" y="1679.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="838.3" y="1861" width="0.3" height="15.0" fill="rgb(213,131,33)" rx="2" ry="2" />
<text  x="841.34" y="1871.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (3 samples, 0.06%)</title><rect x="1028.5" y="1637" width="0.6" height="15.0" fill="rgb(215,51,36)" rx="2" ry="2" />
<text  x="1031.48" y="1647.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="296.5" y="1733" width="0.5" height="15.0" fill="rgb(219,155,22)" rx="2" ry="2" />
<text  x="299.53" y="1743.5" ></text>
</g>
<g >
<title>service::client_state::validate_login (1 samples, 0.02%)</title><rect x="815.6" y="1781" width="0.2" height="15.0" fill="rgb(223,65,29)" rx="2" ry="2" />
<text  x="818.61" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="40.8" y="1765" width="0.2" height="15.0" fill="rgb(210,129,20)" rx="2" ry="2" />
<text  x="43.82" y="1775.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (1 samples, 0.02%)</title><rect x="904.3" y="1717" width="0.3" height="15.0" fill="rgb(243,59,13)" rx="2" ry="2" />
<text  x="907.34" y="1727.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1187.2" y="229" width="0.2" height="15.0" fill="rgb(235,152,27)" rx="2" ry="2" />
<text  x="1190.16" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (9 samples, 0.17%)</title><rect x="529.1" y="1669" width="1.9" height="15.0" fill="rgb(249,33,32)" rx="2" ry="2" />
<text  x="532.08" y="1679.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.02%)</title><rect x="1187.4" y="37" width="0.2" height="15.0" fill="rgb(207,6,6)" rx="2" ry="2" />
<text  x="1190.38" y="47.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.02%)</title><rect x="10.4" y="229" width="0.3" height="15.0" fill="rgb(227,122,14)" rx="2" ry="2" />
<text  x="13.44" y="239.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="447.6" y="1797" width="0.6" height="15.0" fill="rgb(254,16,25)" rx="2" ry="2" />
<text  x="450.56" y="1807.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="81.5" y="1957" width="0.2" height="15.0" fill="rgb(243,156,50)" rx="2" ry="2" />
<text  x="84.47" y="1967.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (3 samples, 0.06%)</title><rect x="360.8" y="1605" width="0.6" height="15.0" fill="rgb(237,60,24)" rx="2" ry="2" />
<text  x="363.79" y="1615.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (13 samples, 0.24%)</title><rect x="1126.0" y="1733" width="2.8" height="15.0" fill="rgb(214,175,37)" rx="2" ry="2" />
<text  x="1128.96" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (4 samples, 0.07%)</title><rect x="49.1" y="1733" width="0.9" height="15.0" fill="rgb(238,173,30)" rx="2" ry="2" />
<text  x="52.12" y="1743.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (7 samples, 0.13%)</title><rect x="26.8" y="1685" width="1.6" height="15.0" fill="rgb(239,107,9)" rx="2" ry="2" />
<text  x="29.83" y="1695.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.04%)</title><rect x="1102.4" y="1813" width="0.4" height="15.0" fill="rgb(246,14,18)" rx="2" ry="2" />
<text  x="1105.36" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (59 samples, 1.09%)</title><rect x="47.4" y="1765" width="12.9" height="15.0" fill="rgb(211,154,16)" rx="2" ry="2" />
<text  x="50.37" y="1775.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (44 samples, 0.81%)</title><rect x="1124.4" y="1861" width="9.6" height="15.0" fill="rgb(253,24,29)" rx="2" ry="2" />
<text  x="1127.43" y="1871.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (58 samples, 1.07%)</title><rect x="791.8" y="1653" width="12.7" height="15.0" fill="rgb(210,107,41)" rx="2" ry="2" />
<text  x="794.79" y="1663.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="588.5" y="1797" width="0.2" height="15.0" fill="rgb(218,86,39)" rx="2" ry="2" />
<text  x="591.53" y="1807.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.02%)</title><rect x="522.5" y="1685" width="0.2" height="15.0" fill="rgb(221,151,14)" rx="2" ry="2" />
<text  x="525.52" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,399 samples, 44.43%)</title><rect x="107.7" y="1893" width="524.3" height="15.0" fill="rgb(227,116,3)" rx="2" ry="2" />
<text  x="110.70" y="1903.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="329.5" y="1685" width="0.7" height="15.0" fill="rgb(208,77,25)" rx="2" ry="2" />
<text  x="332.53" y="1695.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="259.2" y="1605" width="0.2" height="15.0" fill="rgb(242,97,14)" rx="2" ry="2" />
<text  x="262.16" y="1615.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="47.8" y="1541" width="0.4" height="15.0" fill="rgb(245,178,33)" rx="2" ry="2" />
<text  x="50.81" y="1551.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1119.0" y="1573" width="0.2" height="15.0" fill="rgb(228,69,21)" rx="2" ry="2" />
<text  x="1121.97" y="1583.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::size (1 samples, 0.02%)</title><rect x="868.1" y="1621" width="0.2" height="15.0" fill="rgb(247,24,41)" rx="2" ry="2" />
<text  x="871.06" y="1631.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="513.8" y="1717" width="0.2" height="15.0" fill="rgb(222,169,22)" rx="2" ry="2" />
<text  x="516.78" y="1727.5" ></text>
</g>
<g >
<title>partition_entry::partition_entry (1 samples, 0.02%)</title><rect x="18.5" y="1973" width="0.2" height="15.0" fill="rgb(222,2,49)" rx="2" ry="2" />
<text  x="21.52" y="1983.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (16 samples, 0.30%)</title><rect x="851.7" y="1845" width="3.5" height="15.0" fill="rgb(237,158,30)" rx="2" ry="2" />
<text  x="854.67" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.20%)</title><rect x="1058.0" y="1733" width="2.4" height="15.0" fill="rgb(245,213,35)" rx="2" ry="2" />
<text  x="1060.99" y="1743.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (3 samples, 0.06%)</title><rect x="830.7" y="1717" width="0.6" height="15.0" fill="rgb(245,124,9)" rx="2" ry="2" />
<text  x="833.69" y="1727.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="631.8" y="1861" width="0.2" height="15.0" fill="rgb(226,7,18)" rx="2" ry="2" />
<text  x="634.80" y="1871.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (2 samples, 0.04%)</title><rect x="1025.9" y="1573" width="0.4" height="15.0" fill="rgb(213,14,50)" rx="2" ry="2" />
<text  x="1028.86" y="1583.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="782.8" y="1701" width="0.2" height="15.0" fill="rgb(251,210,6)" rx="2" ry="2" />
<text  x="785.82" y="1711.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1037.7" y="1701" width="0.2" height="15.0" fill="rgb(227,56,6)" rx="2" ry="2" />
<text  x="1040.66" y="1711.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1187.4" y="165" width="0.2" height="15.0" fill="rgb(245,11,34)" rx="2" ry="2" />
<text  x="1190.38" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.02%)</title><rect x="1145.9" y="1893" width="0.2" height="15.0" fill="rgb(228,100,51)" rx="2" ry="2" />
<text  x="1148.85" y="1903.5" ></text>
</g>
<g >
<title>db::system_keyspace::make (1 samples, 0.02%)</title><rect x="19.4" y="1749" width="0.2" height="15.0" fill="rgb(208,140,24)" rx="2" ry="2" />
<text  x="22.40" y="1759.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1116.1" y="1829" width="0.2" height="15.0" fill="rgb(234,83,33)" rx="2" ry="2" />
<text  x="1119.13" y="1839.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="1189.6" y="181" width="0.2" height="15.0" fill="rgb(205,137,38)" rx="2" ry="2" />
<text  x="1192.56" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (1 samples, 0.02%)</title><rect x="713.5" y="1829" width="0.3" height="15.0" fill="rgb(249,206,24)" rx="2" ry="2" />
<text  x="716.54" y="1839.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="1188.9" y="53" width="0.2" height="15.0" fill="rgb(244,17,53)" rx="2" ry="2" />
<text  x="1191.91" y="63.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (3 samples, 0.06%)</title><rect x="979.3" y="1781" width="0.7" height="15.0" fill="rgb(222,18,10)" rx="2" ry="2" />
<text  x="982.31" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="62.2" y="1589" width="0.3" height="15.0" fill="rgb(209,145,34)" rx="2" ry="2" />
<text  x="65.24" y="1599.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (529 samples, 9.80%)</title><rect x="327.1" y="1717" width="115.6" height="15.0" fill="rgb(227,47,51)" rx="2" ry="2" />
<text  x="330.13" y="1727.5" >seastar::repea..</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (1 samples, 0.02%)</title><rect x="150.8" y="1845" width="0.2" height="15.0" fill="rgb(216,15,38)" rx="2" ry="2" />
<text  x="153.75" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1269" width="2.9" height="15.0" fill="rgb(221,101,24)" rx="2" ry="2" />
<text  x="1189.94" y="1279.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (2 samples, 0.04%)</title><rect x="956.8" y="1829" width="0.4" height="15.0" fill="rgb(244,223,25)" rx="2" ry="2" />
<text  x="959.80" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (3 samples, 0.06%)</title><rect x="553.8" y="1765" width="0.6" height="15.0" fill="rgb(233,24,38)" rx="2" ry="2" />
<text  x="556.77" y="1775.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;::pair (1 samples, 0.02%)</title><rect x="99.8" y="1781" width="0.2" height="15.0" fill="rgb(209,165,45)" rx="2" ry="2" />
<text  x="102.83" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="39.3" y="1685" width="0.2" height="15.0" fill="rgb(230,80,2)" rx="2" ry="2" />
<text  x="42.29" y="1695.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="591.8" y="1781" width="0.9" height="15.0" fill="rgb(210,56,37)" rx="2" ry="2" />
<text  x="594.80" y="1791.5" ></text>
</g>
<g >
<title>__GI___openat64 (4 samples, 0.07%)</title><rect x="11.3" y="2037" width="0.9" height="15.0" fill="rgb(244,3,43)" rx="2" ry="2" />
<text  x="14.31" y="2047.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (3 samples, 0.06%)</title><rect x="877.9" y="1861" width="0.7" height="15.0" fill="rgb(219,122,37)" rx="2" ry="2" />
<text  x="880.90" y="1871.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, bool const&amp;&gt; (1 samples, 0.02%)</title><rect x="74.5" y="1781" width="0.2" height="15.0" fill="rgb(232,94,41)" rx="2" ry="2" />
<text  x="77.47" y="1791.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.15%)</title><rect x="581.1" y="1701" width="1.7" height="15.0" fill="rgb(217,225,2)" rx="2" ry="2" />
<text  x="584.09" y="1711.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="805.3" y="1669" width="0.7" height="15.0" fill="rgb(228,161,14)" rx="2" ry="2" />
<text  x="808.34" y="1679.5" ></text>
</g>
<g >
<title>service::migration_manager::announce_new_column_family (1 samples, 0.02%)</title><rect x="100.0" y="1877" width="0.3" height="15.0" fill="rgb(224,226,14)" rx="2" ry="2" />
<text  x="103.05" y="1887.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::clear (1 samples, 0.02%)</title><rect x="744.8" y="1813" width="0.2" height="15.0" fill="rgb(222,76,0)" rx="2" ry="2" />
<text  x="747.80" y="1823.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (2 samples, 0.04%)</title><rect x="953.7" y="1781" width="0.5" height="15.0" fill="rgb(243,115,34)" rx="2" ry="2" />
<text  x="956.74" y="1791.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="396.4" y="1621" width="0.2" height="15.0" fill="rgb(248,150,37)" rx="2" ry="2" />
<text  x="399.41" y="1631.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (3 samples, 0.06%)</title><rect x="91.7" y="1861" width="0.7" height="15.0" fill="rgb(243,7,2)" rx="2" ry="2" />
<text  x="94.74" y="1871.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (26 samples, 0.48%)</title><rect x="523.2" y="1669" width="5.7" height="15.0" fill="rgb(219,221,42)" rx="2" ry="2" />
<text  x="526.18" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.02%)</title><rect x="95.7" y="1877" width="0.2" height="15.0" fill="rgb(213,6,0)" rx="2" ry="2" />
<text  x="98.68" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (1 samples, 0.02%)</title><rect x="400.3" y="1589" width="0.3" height="15.0" fill="rgb(248,19,9)" rx="2" ry="2" />
<text  x="403.35" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1148.5" y="1845" width="0.2" height="15.0" fill="rgb(212,46,52)" rx="2" ry="2" />
<text  x="1151.47" y="1855.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="668.1" y="1909" width="0.2" height="15.0" fill="rgb(254,119,14)" rx="2" ry="2" />
<text  x="671.08" y="1919.5" ></text>
</g>
<g >
<title>boost::dynamic_bitset&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::init_from_unsigned_long (1 samples, 0.02%)</title><rect x="75.8" y="1765" width="0.2" height="15.0" fill="rgb(242,60,43)" rx="2" ry="2" />
<text  x="78.79" y="1775.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (4 samples, 0.07%)</title><rect x="756.2" y="1829" width="0.8" height="15.0" fill="rgb(213,35,21)" rx="2" ry="2" />
<text  x="759.16" y="1839.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="532.1" y="1717" width="0.3" height="15.0" fill="rgb(249,179,9)" rx="2" ry="2" />
<text  x="535.14" y="1727.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="100.9" y="1637" width="0.2" height="15.0" fill="rgb(221,26,33)" rx="2" ry="2" />
<text  x="103.92" y="1647.5" ></text>
</g>
<g >
<title>db::get_cdc_generation_mutations (1 samples, 0.02%)</title><rect x="19.8" y="1845" width="0.3" height="15.0" fill="rgb(254,3,8)" rx="2" ry="2" />
<text  x="22.84" y="1855.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="19.4" y="1909" width="0.2" height="15.0" fill="rgb(211,133,24)" rx="2" ry="2" />
<text  x="22.40" y="1919.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::native_value_clone_visitor&gt; (1 samples, 0.02%)</title><rect x="99.8" y="1749" width="0.2" height="15.0" fill="rgb(211,0,35)" rx="2" ry="2" />
<text  x="102.83" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1186.9" y="437" width="0.3" height="15.0" fill="rgb(230,35,41)" rx="2" ry="2" />
<text  x="1189.94" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (13 samples, 0.24%)</title><rect x="91.3" y="1893" width="2.8" height="15.0" fill="rgb(235,63,29)" rx="2" ry="2" />
<text  x="94.30" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="1187.2" y="197" width="0.2" height="15.0" fill="rgb(243,191,51)" rx="2" ry="2" />
<text  x="1190.16" y="207.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="48.2" y="1669" width="0.5" height="15.0" fill="rgb(244,99,28)" rx="2" ry="2" />
<text  x="51.25" y="1679.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="81.7" y="2021" width="0.2" height="15.0" fill="rgb(211,145,29)" rx="2" ry="2" />
<text  x="84.69" y="2031.5" ></text>
</g>
<g >
<title>ser::serializer&lt;ser::tombstone_view&gt;::skip&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1121.4" y="1621" width="0.2" height="15.0" fill="rgb(242,190,38)" rx="2" ry="2" />
<text  x="1124.37" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="101.1" y="1781" width="0.3" height="15.0" fill="rgb(228,155,33)" rx="2" ry="2" />
<text  x="104.14" y="1791.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (2 samples, 0.04%)</title><rect x="862.4" y="1893" width="0.4" height="15.0" fill="rgb(207,153,40)" rx="2" ry="2" />
<text  x="865.38" y="1903.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.06%)</title><rect x="24.4" y="1813" width="0.7" height="15.0" fill="rgb(227,37,52)" rx="2" ry="2" />
<text  x="27.42" y="1823.5" ></text>
</g>
<g >
<title>query::result::builder::build (1 samples, 0.02%)</title><rect x="115.3" y="1877" width="0.3" height="15.0" fill="rgb(214,120,28)" rx="2" ry="2" />
<text  x="118.35" y="1887.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1117.0" y="1845" width="0.2" height="15.0" fill="rgb(225,108,28)" rx="2" ry="2" />
<text  x="1120.00" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="24.2" y="1717" width="0.2" height="15.0" fill="rgb(228,152,44)" rx="2" ry="2" />
<text  x="27.21" y="1727.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (6 samples, 0.11%)</title><rect x="721.4" y="1925" width="1.3" height="15.0" fill="rgb(216,116,30)" rx="2" ry="2" />
<text  x="724.41" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (4 samples, 0.07%)</title><rect x="737.1" y="1765" width="0.9" height="15.0" fill="rgb(242,3,24)" rx="2" ry="2" />
<text  x="740.15" y="1775.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="696.7" y="1877" width="0.2" height="15.0" fill="rgb(210,208,42)" rx="2" ry="2" />
<text  x="699.71" y="1887.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::drop_service_level_statement*, std::default_delete&lt;cql3::statements::drop_service_level_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="66.8" y="1733" width="0.2" height="15.0" fill="rgb(252,85,20)" rx="2" ry="2" />
<text  x="69.83" y="1743.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (1 samples, 0.02%)</title><rect x="801.6" y="1557" width="0.2" height="15.0" fill="rgb(248,229,4)" rx="2" ry="2" />
<text  x="804.62" y="1567.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="593.8" y="1765" width="0.6" height="15.0" fill="rgb(237,2,32)" rx="2" ry="2" />
<text  x="596.77" y="1775.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.02%)</title><rect x="233.8" y="1509" width="0.2" height="15.0" fill="rgb(220,210,3)" rx="2" ry="2" />
<text  x="236.80" y="1519.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (2 samples, 0.04%)</title><rect x="467.7" y="1717" width="0.4" height="15.0" fill="rgb(233,89,8)" rx="2" ry="2" />
<text  x="470.66" y="1727.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (688 samples, 12.74%)</title><rect x="168.0" y="1813" width="150.4" height="15.0" fill="rgb(235,125,8)" rx="2" ry="2" />
<text  x="171.02" y="1823.5" >merging_reader&lt;muta..</text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="922.0" y="1797" width="0.3" height="15.0" fill="rgb(241,134,32)" rx="2" ry="2" />
<text  x="925.05" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.02%)</title><rect x="61.8" y="1749" width="0.2" height="15.0" fill="rgb(228,166,35)" rx="2" ry="2" />
<text  x="64.80" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (1 samples, 0.02%)</title><rect x="398.6" y="1605" width="0.2" height="15.0" fill="rgb(254,176,0)" rx="2" ry="2" />
<text  x="401.60" y="1615.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="52.8" y="1637" width="0.3" height="15.0" fill="rgb(207,80,21)" rx="2" ry="2" />
<text  x="55.84" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="837.9" y="1861" width="0.2" height="15.0" fill="rgb(210,2,40)" rx="2" ry="2" />
<text  x="840.90" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (5 samples, 0.09%)</title><rect x="554.4" y="1765" width="1.1" height="15.0" fill="rgb(239,75,42)" rx="2" ry="2" />
<text  x="557.43" y="1775.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1189.3" y="117" width="0.3" height="15.0" fill="rgb(241,60,5)" rx="2" ry="2" />
<text  x="1192.34" y="127.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="651.9" y="1845" width="0.2" height="15.0" fill="rgb(208,63,0)" rx="2" ry="2" />
<text  x="654.91" y="1855.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.06%)</title><rect x="451.9" y="1845" width="0.7" height="15.0" fill="rgb(229,169,4)" rx="2" ry="2" />
<text  x="454.93" y="1855.5" ></text>
</g>
<g >
<title>service::storage_proxy::hint_to_dead_endpoints (1 samples, 0.02%)</title><rect x="1126.2" y="1685" width="0.2" height="15.0" fill="rgb(232,156,36)" rx="2" ry="2" />
<text  x="1129.18" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (4 samples, 0.07%)</title><rect x="868.3" y="1701" width="0.9" height="15.0" fill="rgb(241,18,51)" rx="2" ry="2" />
<text  x="871.28" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (7 samples, 0.13%)</title><rect x="281.0" y="1621" width="1.5" height="15.0" fill="rgb(234,113,29)" rx="2" ry="2" />
<text  x="284.01" y="1631.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (276 samples, 5.11%)</title><rect x="771.2" y="1829" width="60.4" height="15.0" fill="rgb(244,73,36)" rx="2" ry="2" />
<text  x="774.24" y="1839.5" >servic..</text>
</g>
<g >
<title>query::querier_base::~querier_base (1 samples, 0.02%)</title><rect x="115.1" y="1877" width="0.2" height="15.0" fill="rgb(233,161,24)" rx="2" ry="2" />
<text  x="118.13" y="1887.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="769.1" y="1733" width="0.2" height="15.0" fill="rgb(252,86,16)" rx="2" ry="2" />
<text  x="772.06" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (49 samples, 0.91%)</title><rect x="29.0" y="1733" width="10.7" height="15.0" fill="rgb(240,214,28)" rx="2" ry="2" />
<text  x="32.01" y="1743.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="488.9" y="1733" width="0.4" height="15.0" fill="rgb(229,77,32)" rx="2" ry="2" />
<text  x="491.86" y="1743.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (13 samples, 0.24%)</title><rect x="988.9" y="1717" width="2.9" height="15.0" fill="rgb(252,20,0)" rx="2" ry="2" />
<text  x="991.93" y="1727.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;sstables::mc::writer::write_cells (2 samples, 0.04%)</title><rect x="1187.8" y="69" width="0.5" height="15.0" fill="rgb(243,80,22)" rx="2" ry="2" />
<text  x="1190.81" y="79.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (2 samples, 0.04%)</title><rect x="1187.8" y="53" width="0.5" height="15.0" fill="rgb(249,152,47)" rx="2" ry="2" />
<text  x="1190.81" y="63.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (1 samples, 0.02%)</title><rect x="1081.4" y="1685" width="0.2" height="15.0" fill="rgb(223,57,12)" rx="2" ry="2" />
<text  x="1084.38" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_charPositionInLine (1 samples, 0.02%)</title><rect x="30.8" y="1685" width="0.2" height="15.0" fill="rgb(216,210,31)" rx="2" ry="2" />
<text  x="33.76" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1701" width="0.3" height="15.0" fill="rgb(230,175,10)" rx="2" ry="2" />
<text  x="13.44" y="1711.5" ></text>
</g>
<g >
<title>__stpncpy_avx2 (1 samples, 0.02%)</title><rect x="10.9" y="2005" width="0.2" height="15.0" fill="rgb(237,90,49)" rx="2" ry="2" />
<text  x="13.87" y="2015.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.02%)</title><rect x="635.1" y="1909" width="0.2" height="15.0" fill="rgb(251,210,28)" rx="2" ry="2" />
<text  x="638.08" y="1919.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (23 samples, 0.43%)</title><rect x="995.5" y="1733" width="5.0" height="15.0" fill="rgb(220,37,0)" rx="2" ry="2" />
<text  x="998.48" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.02%)</title><rect x="51.5" y="1637" width="0.2" height="15.0" fill="rgb(230,84,48)" rx="2" ry="2" />
<text  x="54.53" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (13 samples, 0.24%)</title><rect x="1126.0" y="1717" width="2.8" height="15.0" fill="rgb(237,178,27)" rx="2" ry="2" />
<text  x="1128.96" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="651.7" y="1781" width="0.2" height="15.0" fill="rgb(233,113,6)" rx="2" ry="2" />
<text  x="654.69" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (4 samples, 0.07%)</title><rect x="51.1" y="1717" width="0.9" height="15.0" fill="rgb(239,151,42)" rx="2" ry="2" />
<text  x="54.09" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1089.5" y="1813" width="0.2" height="15.0" fill="rgb(244,22,18)" rx="2" ry="2" />
<text  x="1092.46" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (10 samples, 0.19%)</title><rect x="1187.6" y="341" width="2.2" height="15.0" fill="rgb(246,193,28)" rx="2" ry="2" />
<text  x="1190.60" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="47.6" y="1653" width="0.2" height="15.0" fill="rgb(253,205,54)" rx="2" ry="2" />
<text  x="50.59" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="43.9" y="1653" width="0.2" height="15.0" fill="rgb(238,24,51)" rx="2" ry="2" />
<text  x="46.88" y="1663.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (4 samples, 0.07%)</title><rect x="702.8" y="1861" width="0.9" height="15.0" fill="rgb(210,199,42)" rx="2" ry="2" />
<text  x="705.83" y="1871.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="559.9" y="1797" width="0.2" height="15.0" fill="rgb(226,179,51)" rx="2" ry="2" />
<text  x="562.89" y="1807.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="10.7" y="1781" width="0.2" height="15.0" fill="rgb(249,65,3)" rx="2" ry="2" />
<text  x="13.66" y="1791.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="921.6" y="1765" width="0.2" height="15.0" fill="rgb(218,211,42)" rx="2" ry="2" />
<text  x="924.61" y="1775.5" ></text>
</g>
<g >
<title>cql3::util::validate_timestamp (1 samples, 0.02%)</title><rect x="21.4" y="1861" width="0.2" height="15.0" fill="rgb(239,9,3)" rx="2" ry="2" />
<text  x="24.37" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::wait_all (1 samples, 0.02%)</title><rect x="1125.7" y="1749" width="0.3" height="15.0" fill="rgb(214,35,50)" rx="2" ry="2" />
<text  x="1128.74" y="1759.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="254.8" y="1589" width="0.2" height="15.0" fill="rgb(243,133,2)" rx="2" ry="2" />
<text  x="257.79" y="1599.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="862.4" y="1685" width="0.2" height="15.0" fill="rgb(250,38,45)" rx="2" ry="2" />
<text  x="865.38" y="1695.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (12 samples, 0.22%)</title><rect x="284.5" y="1653" width="2.6" height="15.0" fill="rgb(248,207,0)" rx="2" ry="2" />
<text  x="287.51" y="1663.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, table::compact_sstables (1 samples, 0.02%)</title><rect x="720.3" y="1925" width="0.2" height="15.0" fill="rgb(224,196,24)" rx="2" ry="2" />
<text  x="723.32" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="1033.9" y="1669" width="0.9" height="15.0" fill="rgb(211,95,15)" rx="2" ry="2" />
<text  x="1036.95" y="1679.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate (1 samples, 0.02%)</title><rect x="864.6" y="1797" width="0.2" height="15.0" fill="rgb(246,100,5)" rx="2" ry="2" />
<text  x="867.57" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="628.1" y="1861" width="0.4" height="15.0" fill="rgb(237,3,46)" rx="2" ry="2" />
<text  x="631.08" y="1871.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (1 samples, 0.02%)</title><rect x="930.1" y="1813" width="0.3" height="15.0" fill="rgb(211,24,13)" rx="2" ry="2" />
<text  x="933.13" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="596.6" y="1829" width="0.2" height="15.0" fill="rgb(238,107,51)" rx="2" ry="2" />
<text  x="599.61" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="723.2" y="1925" width="0.4" height="15.0" fill="rgb(249,187,43)" rx="2" ry="2" />
<text  x="726.16" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (8 samples, 0.15%)</title><rect x="853.0" y="1797" width="1.7" height="15.0" fill="rgb(248,174,48)" rx="2" ry="2" />
<text  x="855.98" y="1807.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (4 samples, 0.07%)</title><rect x="93.3" y="1829" width="0.8" height="15.0" fill="rgb(229,217,18)" rx="2" ry="2" />
<text  x="96.27" y="1839.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;data_value, data_value&gt;, std::allocator&lt;std::pair&lt;data_value, data_value&gt; &gt; &gt;::_M_create_storage (1 samples, 0.02%)</title><rect x="99.8" y="1717" width="0.2" height="15.0" fill="rgb(232,11,47)" rx="2" ry="2" />
<text  x="102.83" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (8 samples, 0.15%)</title><rect x="37.1" y="1669" width="1.7" height="15.0" fill="rgb(252,142,2)" rx="2" ry="2" />
<text  x="40.10" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.02%)</title><rect x="50.9" y="1685" width="0.2" height="15.0" fill="rgb(243,130,37)" rx="2" ry="2" />
<text  x="53.87" y="1695.5" ></text>
</g>
<g >
<title>main (4,982 samples, 92.28%)</title><rect x="82.1" y="2037" width="1088.9" height="15.0" fill="rgb(217,209,38)" rx="2" ry="2" />
<text  x="85.12" y="2047.5" >main</text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (30 samples, 0.56%)</title><rect x="797.2" y="1605" width="6.6" height="15.0" fill="rgb(248,207,30)" rx="2" ry="2" />
<text  x="800.25" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="57.0" y="1605" width="0.2" height="15.0" fill="rgb(214,92,16)" rx="2" ry="2" />
<text  x="59.99" y="1615.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1155.7" y="1877" width="0.2" height="15.0" fill="rgb(207,124,19)" rx="2" ry="2" />
<text  x="1158.69" y="1887.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (4 samples, 0.07%)</title><rect x="153.8" y="1845" width="0.9" height="15.0" fill="rgb(227,63,17)" rx="2" ry="2" />
<text  x="156.81" y="1855.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.02%)</title><rect x="759.7" y="1813" width="0.2" height="15.0" fill="rgb(222,69,25)" rx="2" ry="2" />
<text  x="762.66" y="1823.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="757.3" y="1813" width="0.4" height="15.0" fill="rgb(246,185,12)" rx="2" ry="2" />
<text  x="760.25" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="53.3" y="1589" width="0.2" height="15.0" fill="rgb(242,68,40)" rx="2" ry="2" />
<text  x="56.27" y="1599.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="53.5" y="1557" width="0.4" height="15.0" fill="rgb(234,212,42)" rx="2" ry="2" />
<text  x="56.49" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (2 samples, 0.04%)</title><rect x="43.7" y="1765" width="0.4" height="15.0" fill="rgb(215,101,41)" rx="2" ry="2" />
<text  x="46.66" y="1775.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (4 samples, 0.07%)</title><rect x="609.3" y="1813" width="0.9" height="15.0" fill="rgb(249,130,40)" rx="2" ry="2" />
<text  x="612.29" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="389" width="0.3" height="15.0" fill="rgb(241,101,44)" rx="2" ry="2" />
<text  x="13.44" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (2 samples, 0.04%)</title><rect x="773.4" y="1781" width="0.5" height="15.0" fill="rgb(247,171,4)" rx="2" ry="2" />
<text  x="776.43" y="1791.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, service::client_state::has_column_family_access (1 samples, 0.02%)</title><rect x="79.1" y="1893" width="0.2" height="15.0" fill="rgb(232,182,49)" rx="2" ry="2" />
<text  x="82.06" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="597" width="0.3" height="15.0" fill="rgb(212,112,46)" rx="2" ry="2" />
<text  x="13.44" y="607.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::statements::update_statement, false&gt;::make&lt;cql3::statements::statement_type const&amp;, unsigned long, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, std::unique_ptr&lt;cql3::attributes, std::default_delete&lt;cql3::attributes&gt; &gt;, cql3::cql_stats&amp;&gt; (3 samples, 0.06%)</title><rect x="75.6" y="1845" width="0.6" height="15.0" fill="rgb(251,40,30)" rx="2" ry="2" />
<text  x="78.57" y="1855.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="666.8" y="1861" width="0.2" height="15.0" fill="rgb(219,204,12)" rx="2" ry="2" />
<text  x="669.77" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (11 samples, 0.20%)</title><rect x="940.0" y="1829" width="2.4" height="15.0" fill="rgb(230,104,33)" rx="2" ry="2" />
<text  x="942.97" y="1839.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.02%)</title><rect x="100.3" y="1797" width="0.2" height="15.0" fill="rgb(210,113,11)" rx="2" ry="2" />
<text  x="103.26" y="1807.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (1 samples, 0.02%)</title><rect x="591.6" y="1781" width="0.2" height="15.0" fill="rgb(232,224,54)" rx="2" ry="2" />
<text  x="594.59" y="1791.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (20 samples, 0.37%)</title><rect x="496.5" y="1685" width="4.4" height="15.0" fill="rgb(231,158,32)" rx="2" ry="2" />
<text  x="499.51" y="1695.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (6 samples, 0.11%)</title><rect x="1110.9" y="1813" width="1.3" height="15.0" fill="rgb(216,121,45)" rx="2" ry="2" />
<text  x="1113.88" y="1823.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (2 samples, 0.04%)</title><rect x="616.5" y="1845" width="0.4" height="15.0" fill="rgb(216,57,48)" rx="2" ry="2" />
<text  x="619.50" y="1855.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (5 samples, 0.09%)</title><rect x="859.3" y="1877" width="1.1" height="15.0" fill="rgb(224,62,2)" rx="2" ry="2" />
<text  x="862.32" y="1887.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (2 samples, 0.04%)</title><rect x="1188.9" y="149" width="0.4" height="15.0" fill="rgb(253,146,10)" rx="2" ry="2" />
<text  x="1191.91" y="159.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (88 samples, 1.63%)</title><rect x="1065.2" y="1765" width="19.2" height="15.0" fill="rgb(213,170,24)" rx="2" ry="2" />
<text  x="1068.20" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.06%)</title><rect x="57.6" y="1637" width="0.7" height="15.0" fill="rgb(208,157,17)" rx="2" ry="2" />
<text  x="60.65" y="1647.5" ></text>
</g>
<g >
<title>mutation_source::operator= (1 samples, 0.02%)</title><rect x="17.4" y="1829" width="0.2" height="15.0" fill="rgb(225,162,1)" rx="2" ry="2" />
<text  x="20.43" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="623.9" y="1829" width="0.3" height="15.0" fill="rgb(228,192,35)" rx="2" ry="2" />
<text  x="626.93" y="1839.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (8 samples, 0.15%)</title><rect x="928.4" y="1813" width="1.7" height="15.0" fill="rgb(212,99,29)" rx="2" ry="2" />
<text  x="931.38" y="1823.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="783.9" y="1749" width="0.5" height="15.0" fill="rgb(248,137,25)" rx="2" ry="2" />
<text  x="786.92" y="1759.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (43 samples, 0.80%)</title><rect x="119.3" y="1877" width="9.4" height="15.0" fill="rgb(220,61,2)" rx="2" ry="2" />
<text  x="122.28" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (6 samples, 0.11%)</title><rect x="946.1" y="1813" width="1.3" height="15.0" fill="rgb(206,208,18)" rx="2" ry="2" />
<text  x="949.09" y="1823.5" ></text>
</g>
<g >
<title>mutation_querier::consume (194 samples, 3.59%)</title><rect x="353.6" y="1621" width="42.4" height="15.0" fill="rgb(238,50,6)" rx="2" ry="2" />
<text  x="356.57" y="1631.5" >mut..</text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (23 samples, 0.43%)</title><rect x="197.1" y="1653" width="5.0" height="15.0" fill="rgb(223,126,50)" rx="2" ry="2" />
<text  x="200.09" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="825.9" y="1717" width="0.4" height="15.0" fill="rgb(228,162,25)" rx="2" ry="2" />
<text  x="828.88" y="1727.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (3 samples, 0.06%)</title><rect x="675.9" y="1893" width="0.7" height="15.0" fill="rgb(245,228,52)" rx="2" ry="2" />
<text  x="678.95" y="1903.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (5 samples, 0.09%)</title><rect x="70.8" y="1845" width="1.1" height="15.0" fill="rgb(248,15,22)" rx="2" ry="2" />
<text  x="73.76" y="1855.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2 samples, 0.04%)</title><rect x="718.8" y="1861" width="0.4" height="15.0" fill="rgb(210,138,53)" rx="2" ry="2" />
<text  x="721.79" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1765" width="2.9" height="15.0" fill="rgb(253,153,43)" rx="2" ry="2" />
<text  x="1189.94" y="1775.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="980.0" y="1781" width="0.4" height="15.0" fill="rgb(251,139,30)" rx="2" ry="2" />
<text  x="982.96" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="862.2" y="1925" width="0.2" height="15.0" fill="rgb(231,178,7)" rx="2" ry="2" />
<text  x="865.16" y="1935.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.02%)</title><rect x="28.8" y="1573" width="0.2" height="15.0" fill="rgb(213,55,21)" rx="2" ry="2" />
<text  x="31.80" y="1583.5" ></text>
</g>
<g >
<title>db::validate_for_read (1 samples, 0.02%)</title><rect x="1117.2" y="1861" width="0.2" height="15.0" fill="rgb(218,167,16)" rx="2" ry="2" />
<text  x="1120.22" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="61.4" y="1605" width="0.2" height="15.0" fill="rgb(249,138,4)" rx="2" ry="2" />
<text  x="64.36" y="1615.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="52.0" y="1717" width="0.2" height="15.0" fill="rgb(230,0,24)" rx="2" ry="2" />
<text  x="54.96" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1141" width="0.3" height="15.0" fill="rgb(253,104,39)" rx="2" ry="2" />
<text  x="13.44" y="1151.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (5 samples, 0.09%)</title><rect x="751.1" y="1733" width="1.1" height="15.0" fill="rgb(231,113,23)" rx="2" ry="2" />
<text  x="754.13" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="24.6" y="1749" width="0.3" height="15.0" fill="rgb(252,209,41)" rx="2" ry="2" />
<text  x="27.64" y="1759.5" ></text>
</g>
<g >
<title>compound_type&lt; (12 samples, 0.22%)</title><rect x="919.4" y="1781" width="2.6" height="15.0" fill="rgb(237,157,23)" rx="2" ry="2" />
<text  x="922.42" y="1791.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (2 samples, 0.04%)</title><rect x="213.3" y="1573" width="0.4" height="15.0" fill="rgb(237,113,3)" rx="2" ry="2" />
<text  x="216.26" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (10 samples, 0.19%)</title><rect x="197.7" y="1637" width="2.2" height="15.0" fill="rgb(239,35,21)" rx="2" ry="2" />
<text  x="200.74" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="527.1" y="1605" width="0.2" height="15.0" fill="rgb(246,53,48)" rx="2" ry="2" />
<text  x="530.11" y="1615.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="319.0" y="1813" width="0.3" height="15.0" fill="rgb(239,70,18)" rx="2" ry="2" />
<text  x="322.04" y="1823.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.02%)</title><rect x="99.8" y="1909" width="0.2" height="15.0" fill="rgb(248,113,51)" rx="2" ry="2" />
<text  x="102.83" y="1919.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="53.3" y="1541" width="0.2" height="15.0" fill="rgb(245,52,9)" rx="2" ry="2" />
<text  x="56.27" y="1551.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (15 samples, 0.28%)</title><rect x="432.7" y="1621" width="3.3" height="15.0" fill="rgb(206,56,44)" rx="2" ry="2" />
<text  x="435.69" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (6 samples, 0.11%)</title><rect x="1188.5" y="261" width="1.3" height="15.0" fill="rgb(252,208,41)" rx="2" ry="2" />
<text  x="1191.47" y="271.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (56 samples, 1.04%)</title><rect x="1068.3" y="1717" width="12.2" height="15.0" fill="rgb(246,51,51)" rx="2" ry="2" />
<text  x="1071.26" y="1727.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (1 samples, 0.02%)</title><rect x="707.0" y="1893" width="0.2" height="15.0" fill="rgb(224,1,9)" rx="2" ry="2" />
<text  x="709.98" y="1903.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (2 samples, 0.04%)</title><rect x="230.5" y="1493" width="0.5" height="15.0" fill="rgb(219,187,33)" rx="2" ry="2" />
<text  x="233.53" y="1503.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="579.6" y="1717" width="1.1" height="15.0" fill="rgb(217,148,30)" rx="2" ry="2" />
<text  x="582.56" y="1727.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="993.5" y="1749" width="0.2" height="15.0" fill="rgb(221,5,52)" rx="2" ry="2" />
<text  x="996.52" y="1759.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1081.4" y="1669" width="0.2" height="15.0" fill="rgb(232,1,27)" rx="2" ry="2" />
<text  x="1084.38" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1989" width="0.3" height="15.0" fill="rgb(240,144,12)" rx="2" ry="2" />
<text  x="13.44" y="1999.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="100.5" y="1813" width="0.2" height="15.0" fill="rgb(230,190,35)" rx="2" ry="2" />
<text  x="103.48" y="1823.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="651.7" y="1829" width="0.2" height="15.0" fill="rgb(241,93,4)" rx="2" ry="2" />
<text  x="654.69" y="1839.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1187.2" y="325" width="0.2" height="15.0" fill="rgb(246,193,35)" rx="2" ry="2" />
<text  x="1190.16" y="335.5" ></text>
</g>
<g >
<title>seastar::file_size (1 samples, 0.02%)</title><rect x="696.7" y="1909" width="0.2" height="15.0" fill="rgb(229,105,21)" rx="2" ry="2" />
<text  x="699.71" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (3 samples, 0.06%)</title><rect x="904.8" y="1749" width="0.6" height="15.0" fill="rgb(241,78,44)" rx="2" ry="2" />
<text  x="907.78" y="1759.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="100.5" y="1797" width="0.2" height="15.0" fill="rgb(247,115,33)" rx="2" ry="2" />
<text  x="103.48" y="1807.5" ></text>
</g>
<g >
<title>std::operator- (2 samples, 0.04%)</title><rect x="48.2" y="1589" width="0.5" height="15.0" fill="rgb(252,117,29)" rx="2" ry="2" />
<text  x="51.25" y="1599.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="62.9" y="1541" width="0.2" height="15.0" fill="rgb(216,142,44)" rx="2" ry="2" />
<text  x="65.89" y="1551.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (11 samples, 0.20%)</title><rect x="1129.2" y="1605" width="2.4" height="15.0" fill="rgb(242,212,30)" rx="2" ry="2" />
<text  x="1132.24" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="43.9" y="1637" width="0.2" height="15.0" fill="rgb(214,128,18)" rx="2" ry="2" />
<text  x="46.88" y="1647.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="204.3" y="1653" width="0.4" height="15.0" fill="rgb(214,203,7)" rx="2" ry="2" />
<text  x="207.30" y="1663.5" ></text>
</g>
<g >
<title>abstract_type::decompose (1 samples, 0.02%)</title><rect x="73.2" y="1733" width="0.2" height="15.0" fill="rgb(210,191,11)" rx="2" ry="2" />
<text  x="76.16" y="1743.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="1000.5" y="1733" width="0.2" height="15.0" fill="rgb(252,166,47)" rx="2" ry="2" />
<text  x="1003.51" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::constant&gt; (1 samples, 0.02%)</title><rect x="74.5" y="1733" width="0.2" height="15.0" fill="rgb(232,14,46)" rx="2" ry="2" />
<text  x="77.47" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="62.2" y="1573" width="0.3" height="15.0" fill="rgb(244,178,54)" rx="2" ry="2" />
<text  x="65.24" y="1583.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (6 samples, 0.11%)</title><rect x="526.5" y="1637" width="1.3" height="15.0" fill="rgb(228,168,46)" rx="2" ry="2" />
<text  x="529.45" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (1 samples, 0.02%)</title><rect x="400.1" y="1573" width="0.2" height="15.0" fill="rgb(225,213,28)" rx="2" ry="2" />
<text  x="403.13" y="1583.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (5 samples, 0.09%)</title><rect x="735.4" y="1813" width="1.1" height="15.0" fill="rgb(228,152,50)" rx="2" ry="2" />
<text  x="738.40" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="485" width="0.3" height="15.0" fill="rgb(226,219,9)" rx="2" ry="2" />
<text  x="13.44" y="495.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1119.4" y="1605" width="0.2" height="15.0" fill="rgb(211,25,37)" rx="2" ry="2" />
<text  x="1122.41" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (3 samples, 0.06%)</title><rect x="574.5" y="1733" width="0.7" height="15.0" fill="rgb(221,207,27)" rx="2" ry="2" />
<text  x="577.54" y="1743.5" ></text>
</g>
<g >
<title>set_value&lt;single_fragment_range&lt; (1 samples, 0.02%)</title><rect x="19.8" y="1765" width="0.3" height="15.0" fill="rgb(237,58,24)" rx="2" ry="2" />
<text  x="22.84" y="1775.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="1041.8" y="1653" width="0.2" height="15.0" fill="rgb(239,198,33)" rx="2" ry="2" />
<text  x="1044.82" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1188.7" y="213" width="0.2" height="15.0" fill="rgb(214,34,7)" rx="2" ry="2" />
<text  x="1191.69" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (1 samples, 0.02%)</title><rect x="19.0" y="1925" width="0.2" height="15.0" fill="rgb(233,0,19)" rx="2" ry="2" />
<text  x="21.96" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="1114.2" y="1845" width="0.2" height="15.0" fill="rgb(244,174,20)" rx="2" ry="2" />
<text  x="1117.16" y="1855.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (1 samples, 0.02%)</title><rect x="266.8" y="1653" width="0.2" height="15.0" fill="rgb(210,111,7)" rx="2" ry="2" />
<text  x="269.81" y="1663.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (8 samples, 0.15%)</title><rect x="424.2" y="1653" width="1.7" height="15.0" fill="rgb(229,204,44)" rx="2" ry="2" />
<text  x="427.17" y="1663.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (52 samples, 0.96%)</title><rect x="340.2" y="1637" width="11.4" height="15.0" fill="rgb(218,225,20)" rx="2" ry="2" />
<text  x="343.24" y="1647.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="45.2" y="1701" width="0.4" height="15.0" fill="rgb(212,18,47)" rx="2" ry="2" />
<text  x="48.19" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (8 samples, 0.15%)</title><rect x="280.8" y="1637" width="1.7" height="15.0" fill="rgb(248,144,29)" rx="2" ry="2" />
<text  x="283.79" y="1647.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.02%)</title><rect x="829.2" y="1797" width="0.2" height="15.0" fill="rgb(217,75,14)" rx="2" ry="2" />
<text  x="832.16" y="1807.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (13 samples, 0.24%)</title><rect x="767.1" y="1797" width="2.8" height="15.0" fill="rgb(226,92,1)" rx="2" ry="2" />
<text  x="770.09" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (7 samples, 0.13%)</title><rect x="658.7" y="1861" width="1.5" height="15.0" fill="rgb(242,148,28)" rx="2" ry="2" />
<text  x="661.68" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1269" width="0.3" height="15.0" fill="rgb(239,162,11)" rx="2" ry="2" />
<text  x="13.44" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="419.1" y="1573" width="0.3" height="15.0" fill="rgb(209,166,46)" rx="2" ry="2" />
<text  x="422.14" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="861.9" y="1925" width="0.3" height="15.0" fill="rgb(212,125,25)" rx="2" ry="2" />
<text  x="864.94" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Insert_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_range&lt;std::__detail::_Node_iterator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, false, true&gt;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, true&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="99.8" y="1829" width="0.2" height="15.0" fill="rgb(214,199,8)" rx="2" ry="2" />
<text  x="102.83" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="985.6" y="1733" width="1.8" height="15.0" fill="rgb(254,0,11)" rx="2" ry="2" />
<text  x="988.65" y="1743.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="107.3" y="1893" width="0.2" height="15.0" fill="rgb(221,77,12)" rx="2" ry="2" />
<text  x="110.26" y="1903.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="707.2" y="1893" width="0.2" height="15.0" fill="rgb(239,7,14)" rx="2" ry="2" />
<text  x="710.20" y="1903.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (2 samples, 0.04%)</title><rect x="719.7" y="1797" width="0.4" height="15.0" fill="rgb(243,62,7)" rx="2" ry="2" />
<text  x="722.66" y="1807.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="1028.3" y="1621" width="0.2" height="15.0" fill="rgb(252,50,1)" rx="2" ry="2" />
<text  x="1031.27" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="42.6" y="1621" width="0.2" height="15.0" fill="rgb(242,107,20)" rx="2" ry="2" />
<text  x="45.57" y="1631.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="42.1" y="1765" width="0.2" height="15.0" fill="rgb(210,218,45)" rx="2" ry="2" />
<text  x="45.13" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1765" width="0.3" height="15.0" fill="rgb(225,109,18)" rx="2" ry="2" />
<text  x="13.44" y="1775.5" ></text>
</g>
<g >
<title>database::find_uuid (1 samples, 0.02%)</title><rect x="99.4" y="1829" width="0.2" height="15.0" fill="rgb(216,214,34)" rx="2" ry="2" />
<text  x="102.39" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.02%)</title><rect x="256.3" y="1573" width="0.2" height="15.0" fill="rgb(243,152,39)" rx="2" ry="2" />
<text  x="259.32" y="1583.5" ></text>
</g>
<g >
<title>seastar::reactor::batch_flush_pollfn::poll (1 samples, 0.02%)</title><rect x="1169.7" y="1925" width="0.2" height="15.0" fill="rgb(245,37,36)" rx="2" ry="2" />
<text  x="1172.67" y="1935.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (2 samples, 0.04%)</title><rect x="862.4" y="1813" width="0.4" height="15.0" fill="rgb(245,54,15)" rx="2" ry="2" />
<text  x="865.38" y="1823.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (2 samples, 0.04%)</title><rect x="1096.2" y="1781" width="0.5" height="15.0" fill="rgb(213,76,25)" rx="2" ry="2" />
<text  x="1099.24" y="1791.5" ></text>
</g>
<g >
<title>gms::endpoint_state::add_application_state (1 samples, 0.02%)</title><rect x="19.6" y="1845" width="0.2" height="15.0" fill="rgb(211,4,20)" rx="2" ry="2" />
<text  x="22.62" y="1855.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (20 samples, 0.37%)</title><rect x="300.9" y="1765" width="4.4" height="15.0" fill="rgb(238,195,38)" rx="2" ry="2" />
<text  x="303.90" y="1775.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (2 samples, 0.04%)</title><rect x="1000.1" y="1717" width="0.4" height="15.0" fill="rgb(207,114,30)" rx="2" ry="2" />
<text  x="1003.07" y="1727.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (7 samples, 0.13%)</title><rect x="392.3" y="1573" width="1.5" height="15.0" fill="rgb(221,146,44)" rx="2" ry="2" />
<text  x="395.26" y="1583.5" ></text>
</g>
<g >
<title>auth::get_permissions (1 samples, 0.02%)</title><rect x="78.6" y="1797" width="0.2" height="15.0" fill="rgb(248,134,0)" rx="2" ry="2" />
<text  x="81.63" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="576.1" y="1733" width="0.2" height="15.0" fill="rgb(231,99,37)" rx="2" ry="2" />
<text  x="579.07" y="1743.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::shared_ptr_count_for&lt;cql3::statements::statement_type const&amp;, unsigned long, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, std::unique_ptr&lt;cql3::attributes, std::default_delete&lt;cql3::attributes&gt; &gt;, cql3::cql_stats&amp;&gt; (3 samples, 0.06%)</title><rect x="75.6" y="1829" width="0.6" height="15.0" fill="rgb(243,159,15)" rx="2" ry="2" />
<text  x="78.57" y="1839.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.02%)</title><rect x="20.1" y="1829" width="0.2" height="15.0" fill="rgb(213,55,45)" rx="2" ry="2" />
<text  x="23.05" y="1839.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (1 samples, 0.02%)</title><rect x="266.4" y="1637" width="0.2" height="15.0" fill="rgb(239,208,7)" rx="2" ry="2" />
<text  x="269.37" y="1647.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.06%)</title><rect x="24.4" y="1797" width="0.7" height="15.0" fill="rgb(229,213,7)" rx="2" ry="2" />
<text  x="27.42" y="1807.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (2 samples, 0.04%)</title><rect x="842.9" y="1797" width="0.5" height="15.0" fill="rgb(240,162,43)" rx="2" ry="2" />
<text  x="845.93" y="1807.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (186 samples, 3.45%)</title><rect x="1002.3" y="1717" width="40.6" height="15.0" fill="rgb(251,34,51)" rx="2" ry="2" />
<text  x="1005.26" y="1727.5" >ser..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="52.0" y="1653" width="0.2" height="15.0" fill="rgb(232,95,50)" rx="2" ry="2" />
<text  x="54.96" y="1663.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="857.6" y="1861" width="0.6" height="15.0" fill="rgb(231,40,2)" rx="2" ry="2" />
<text  x="860.57" y="1871.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (68 samples, 1.26%)</title><rect x="517.5" y="1733" width="14.9" height="15.0" fill="rgb(222,96,8)" rx="2" ry="2" />
<text  x="520.49" y="1743.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="323.4" y="1717" width="1.1" height="15.0" fill="rgb(240,144,42)" rx="2" ry="2" />
<text  x="326.41" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (4 samples, 0.07%)</title><rect x="1164.0" y="1877" width="0.9" height="15.0" fill="rgb(230,143,23)" rx="2" ry="2" />
<text  x="1166.99" y="1887.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;unsigned long&gt;, sstables::sstable::update_info_for_opened_data (1 samples, 0.02%)</title><rect x="696.7" y="1925" width="0.2" height="15.0" fill="rgb(237,144,48)" rx="2" ry="2" />
<text  x="699.71" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="1059.7" y="1717" width="0.7" height="15.0" fill="rgb(246,207,37)" rx="2" ry="2" />
<text  x="1062.74" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.09%)</title><rect x="47.6" y="1749" width="1.1" height="15.0" fill="rgb(217,3,42)" rx="2" ry="2" />
<text  x="50.59" y="1759.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="585.2" y="1733" width="0.3" height="15.0" fill="rgb(243,107,6)" rx="2" ry="2" />
<text  x="588.25" y="1743.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="263.7" y="1557" width="0.3" height="15.0" fill="rgb(208,164,19)" rx="2" ry="2" />
<text  x="266.75" y="1567.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (1 samples, 0.02%)</title><rect x="307.2" y="1717" width="0.3" height="15.0" fill="rgb(239,99,31)" rx="2" ry="2" />
<text  x="310.24" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="280.6" y="1637" width="0.2" height="15.0" fill="rgb(252,95,8)" rx="2" ry="2" />
<text  x="283.58" y="1647.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (2 samples, 0.04%)</title><rect x="736.7" y="1813" width="0.4" height="15.0" fill="rgb(231,151,21)" rx="2" ry="2" />
<text  x="739.71" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="57.2" y="1589" width="0.4" height="15.0" fill="rgb(211,59,23)" rx="2" ry="2" />
<text  x="60.21" y="1599.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (1 samples, 0.02%)</title><rect x="810.8" y="1733" width="0.2" height="15.0" fill="rgb(241,126,40)" rx="2" ry="2" />
<text  x="813.80" y="1743.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="1037.4" y="1701" width="0.3" height="15.0" fill="rgb(249,149,46)" rx="2" ry="2" />
<text  x="1040.45" y="1711.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (13 samples, 0.24%)</title><rect x="681.2" y="1893" width="2.8" height="15.0" fill="rgb(210,196,8)" rx="2" ry="2" />
<text  x="684.19" y="1903.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (27 samples, 0.50%)</title><rect x="246.0" y="1557" width="5.9" height="15.0" fill="rgb(229,56,9)" rx="2" ry="2" />
<text  x="249.04" y="1567.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="1104.3" y="1845" width="1.6" height="15.0" fill="rgb(235,155,15)" rx="2" ry="2" />
<text  x="1107.32" y="1855.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (38 samples, 0.70%)</title><rect x="746.8" y="1813" width="8.3" height="15.0" fill="rgb(247,81,1)" rx="2" ry="2" />
<text  x="749.76" y="1823.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::do_recursive_touch_directory (1 samples, 0.02%)</title><rect x="696.9" y="1925" width="0.2" height="15.0" fill="rgb(242,228,52)" rx="2" ry="2" />
<text  x="699.93" y="1935.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (10 samples, 0.19%)</title><rect x="1164.9" y="1861" width="2.2" height="15.0" fill="rgb(245,106,50)" rx="2" ry="2" />
<text  x="1167.87" y="1871.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="787.0" y="1717" width="0.2" height="15.0" fill="rgb(218,50,19)" rx="2" ry="2" />
<text  x="789.98" y="1727.5" ></text>
</g>
<g >
<title>operator delete (11 samples, 0.20%)</title><rect x="146.2" y="1861" width="2.4" height="15.0" fill="rgb(216,101,41)" rx="2" ry="2" />
<text  x="149.16" y="1871.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.02%)</title><rect x="720.3" y="1845" width="0.2" height="15.0" fill="rgb(239,17,22)" rx="2" ry="2" />
<text  x="723.32" y="1855.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (697 samples, 12.91%)</title><rect x="166.9" y="1829" width="152.4" height="15.0" fill="rgb(216,111,11)" rx="2" ry="2" />
<text  x="169.93" y="1839.5" >flat_mutation_reade..</text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="186.2" y="1653" width="0.6" height="15.0" fill="rgb(237,128,35)" rx="2" ry="2" />
<text  x="189.16" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="762.9" y="1797" width="0.5" height="15.0" fill="rgb(238,172,12)" rx="2" ry="2" />
<text  x="765.94" y="1807.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (12 samples, 0.22%)</title><rect x="508.1" y="1621" width="2.6" height="15.0" fill="rgb(231,188,48)" rx="2" ry="2" />
<text  x="511.10" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="315.8" y="1749" width="0.4" height="15.0" fill="rgb(210,170,16)" rx="2" ry="2" />
<text  x="318.76" y="1759.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (1 samples, 0.02%)</title><rect x="99.0" y="1845" width="0.2" height="15.0" fill="rgb(207,175,10)" rx="2" ry="2" />
<text  x="101.95" y="1855.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="1187.2" y="85" width="0.2" height="15.0" fill="rgb(246,111,2)" rx="2" ry="2" />
<text  x="1190.16" y="95.5" ></text>
</g>
<g >
<title>schema::column_at (6 samples, 0.11%)</title><rect x="243.2" y="1557" width="1.3" height="15.0" fill="rgb(235,185,20)" rx="2" ry="2" />
<text  x="246.20" y="1567.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (21 samples, 0.39%)</title><rect x="923.1" y="1797" width="4.6" height="15.0" fill="rgb(210,29,46)" rx="2" ry="2" />
<text  x="926.14" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (2 samples, 0.04%)</title><rect x="241.7" y="1525" width="0.4" height="15.0" fill="rgb(210,9,25)" rx="2" ry="2" />
<text  x="244.67" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="41.7" y="1653" width="0.4" height="15.0" fill="rgb(224,218,19)" rx="2" ry="2" />
<text  x="44.69" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.04%)</title><rect x="253.7" y="1557" width="0.4" height="15.0" fill="rgb(225,85,16)" rx="2" ry="2" />
<text  x="256.69" y="1567.5" ></text>
</g>
<g >
<title>row::compact_and_expire (86 samples, 1.59%)</title><rect x="401.0" y="1637" width="18.8" height="15.0" fill="rgb(211,15,27)" rx="2" ry="2" />
<text  x="404.00" y="1647.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="744.6" y="1813" width="0.2" height="15.0" fill="rgb(222,98,24)" rx="2" ry="2" />
<text  x="747.58" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="2021" width="0.3" height="15.0" fill="rgb(248,12,47)" rx="2" ry="2" />
<text  x="13.44" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (3 samples, 0.06%)</title><rect x="774.3" y="1781" width="0.7" height="15.0" fill="rgb(213,63,10)" rx="2" ry="2" />
<text  x="777.30" y="1791.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (2 samples, 0.04%)</title><rect x="1044.0" y="1717" width="0.4" height="15.0" fill="rgb(249,141,6)" rx="2" ry="2" />
<text  x="1047.00" y="1727.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="775.2" y="1797" width="0.2" height="15.0" fill="rgb(207,192,12)" rx="2" ry="2" />
<text  x="778.18" y="1807.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="510.1" y="1605" width="0.2" height="15.0" fill="rgb(236,78,48)" rx="2" ry="2" />
<text  x="513.06" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="254.3" y="1589" width="0.5" height="15.0" fill="rgb(254,224,36)" rx="2" ry="2" />
<text  x="257.35" y="1599.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (4 samples, 0.07%)</title><rect x="274.7" y="1637" width="0.8" height="15.0" fill="rgb(252,92,40)" rx="2" ry="2" />
<text  x="277.67" y="1647.5" ></text>
</g>
<g >
<title>executor&lt;test_read (1 samples, 0.02%)</title><rect x="10.4" y="197" width="0.3" height="15.0" fill="rgb(254,175,24)" rx="2" ry="2" />
<text  x="13.44" y="207.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="769.5" y="1749" width="0.4" height="15.0" fill="rgb(222,13,48)" rx="2" ry="2" />
<text  x="772.49" y="1759.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="536.1" y="1749" width="1.1" height="15.0" fill="rgb(212,58,49)" rx="2" ry="2" />
<text  x="539.07" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="152.7" y="1797" width="0.9" height="15.0" fill="rgb(249,134,31)" rx="2" ry="2" />
<text  x="155.72" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (1 samples, 0.02%)</title><rect x="766.9" y="1797" width="0.2" height="15.0" fill="rgb(249,217,33)" rx="2" ry="2" />
<text  x="769.87" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1106.9" y="1845" width="0.3" height="15.0" fill="rgb(247,73,11)" rx="2" ry="2" />
<text  x="1109.95" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="52.0" y="1589" width="0.2" height="15.0" fill="rgb(218,164,38)" rx="2" ry="2" />
<text  x="54.96" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1189.6" y="117" width="0.2" height="15.0" fill="rgb(224,58,31)" rx="2" ry="2" />
<text  x="1192.56" y="127.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (17 samples, 0.31%)</title><rect x="255.4" y="1605" width="3.8" height="15.0" fill="rgb(250,37,3)" rx="2" ry="2" />
<text  x="258.44" y="1615.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.02%)</title><rect x="126.9" y="1781" width="0.2" height="15.0" fill="rgb(227,98,29)" rx="2" ry="2" />
<text  x="129.93" y="1791.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (1 samples, 0.02%)</title><rect x="612.6" y="1845" width="0.2" height="15.0" fill="rgb(244,223,33)" rx="2" ry="2" />
<text  x="615.57" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (8 samples, 0.15%)</title><rect x="398.8" y="1605" width="1.8" height="15.0" fill="rgb(244,181,36)" rx="2" ry="2" />
<text  x="401.82" y="1615.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="209.3" y="1621" width="0.2" height="15.0" fill="rgb(236,57,24)" rx="2" ry="2" />
<text  x="212.33" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.06%)</title><rect x="53.3" y="1669" width="0.6" height="15.0" fill="rgb(243,58,10)" rx="2" ry="2" />
<text  x="56.27" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (1 samples, 0.02%)</title><rect x="854.9" y="1829" width="0.3" height="15.0" fill="rgb(247,83,47)" rx="2" ry="2" />
<text  x="857.95" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="42.6" y="1589" width="0.2" height="15.0" fill="rgb(208,212,33)" rx="2" ry="2" />
<text  x="45.57" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.20%)</title><rect x="1187.4" y="373" width="2.4" height="15.0" fill="rgb(231,21,13)" rx="2" ry="2" />
<text  x="1190.38" y="383.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="924.0" y="1781" width="0.2" height="15.0" fill="rgb(251,204,13)" rx="2" ry="2" />
<text  x="927.01" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="602.7" y="1813" width="0.5" height="15.0" fill="rgb(242,199,8)" rx="2" ry="2" />
<text  x="605.73" y="1823.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="1021.5" y="1621" width="0.2" height="15.0" fill="rgb(209,223,15)" rx="2" ry="2" />
<text  x="1024.49" y="1631.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="596.2" y="1845" width="0.2" height="15.0" fill="rgb(217,62,2)" rx="2" ry="2" />
<text  x="599.18" y="1855.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="556.0" y="1829" width="0.8" height="15.0" fill="rgb(212,158,25)" rx="2" ry="2" />
<text  x="558.96" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::io_getevents (1 samples, 0.02%)</title><rect x="1135.4" y="1909" width="0.2" height="15.0" fill="rgb(239,229,46)" rx="2" ry="2" />
<text  x="1138.36" y="1919.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (27 samples, 0.50%)</title><rect x="468.1" y="1717" width="5.9" height="15.0" fill="rgb(239,130,35)" rx="2" ry="2" />
<text  x="471.10" y="1727.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (1 samples, 0.02%)</title><rect x="754.6" y="1749" width="0.2" height="15.0" fill="rgb(220,203,0)" rx="2" ry="2" />
<text  x="757.63" y="1759.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1186.9" y="293" width="0.3" height="15.0" fill="rgb(221,190,17)" rx="2" ry="2" />
<text  x="1189.94" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="295.0" y="1701" width="0.2" height="15.0" fill="rgb(251,182,46)" rx="2" ry="2" />
<text  x="298.00" y="1711.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (3 samples, 0.06%)</title><rect x="1042.9" y="1717" width="0.7" height="15.0" fill="rgb(211,151,38)" rx="2" ry="2" />
<text  x="1045.91" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1189.6" y="149" width="0.2" height="15.0" fill="rgb(240,103,53)" rx="2" ry="2" />
<text  x="1192.56" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator_at (1 samples, 0.02%)</title><rect x="769.3" y="1765" width="0.2" height="15.0" fill="rgb(239,210,53)" rx="2" ry="2" />
<text  x="772.27" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.02%)</title><rect x="1167.9" y="1781" width="0.2" height="15.0" fill="rgb(209,207,43)" rx="2" ry="2" />
<text  x="1170.93" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="645" width="0.3" height="15.0" fill="rgb(214,120,40)" rx="2" ry="2" />
<text  x="13.44" y="655.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="1187.2" y="133" width="0.2" height="15.0" fill="rgb(205,183,51)" rx="2" ry="2" />
<text  x="1190.16" y="143.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="720.3" y="1717" width="0.2" height="15.0" fill="rgb(208,195,34)" rx="2" ry="2" />
<text  x="723.32" y="1727.5" ></text>
</g>
<g >
<title>ser::integral_serializer&lt;unsigned int&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1121.4" y="1589" width="0.2" height="15.0" fill="rgb(237,217,25)" rx="2" ry="2" />
<text  x="1124.37" y="1599.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.06%)</title><rect x="819.3" y="1701" width="0.7" height="15.0" fill="rgb(246,86,42)" rx="2" ry="2" />
<text  x="822.32" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_view_statement, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="68.8" y="1813" width="0.2" height="15.0" fill="rgb(235,41,25)" rx="2" ry="2" />
<text  x="71.79" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="53.5" y="1573" width="0.4" height="15.0" fill="rgb(218,180,43)" rx="2" ry="2" />
<text  x="56.49" y="1583.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.02%)</title><rect x="10.7" y="1973" width="0.2" height="15.0" fill="rgb(218,90,32)" rx="2" ry="2" />
<text  x="13.66" y="1983.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.02%)</title><rect x="802.7" y="1557" width="0.2" height="15.0" fill="rgb(216,190,3)" rx="2" ry="2" />
<text  x="805.71" y="1567.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::take_value (1 samples, 0.02%)</title><rect x="745.0" y="1813" width="0.2" height="15.0" fill="rgb(210,122,8)" rx="2" ry="2" />
<text  x="748.01" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.02%)</title><rect x="81.3" y="2037" width="0.2" height="15.0" fill="rgb(251,38,32)" rx="2" ry="2" />
<text  x="84.25" y="2047.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="61.4" y="1749" width="0.2" height="15.0" fill="rgb(220,163,21)" rx="2" ry="2" />
<text  x="64.36" y="1759.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.02%)</title><rect x="661.7" y="1861" width="0.3" height="15.0" fill="rgb(233,59,13)" rx="2" ry="2" />
<text  x="664.74" y="1871.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="100.3" y="1717" width="0.2" height="15.0" fill="rgb(220,228,54)" rx="2" ry="2" />
<text  x="103.26" y="1727.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="89.6" y="1909" width="0.4" height="15.0" fill="rgb(230,217,29)" rx="2" ry="2" />
<text  x="92.56" y="1919.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (1 samples, 0.02%)</title><rect x="727.1" y="1893" width="0.2" height="15.0" fill="rgb(249,161,15)" rx="2" ry="2" />
<text  x="730.09" y="1903.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (4 samples, 0.07%)</title><rect x="229.7" y="1493" width="0.8" height="15.0" fill="rgb(232,12,7)" rx="2" ry="2" />
<text  x="232.65" y="1503.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1187.2" y="373" width="0.2" height="15.0" fill="rgb(233,0,24)" rx="2" ry="2" />
<text  x="1190.16" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant_test_assignment (1 samples, 0.02%)</title><rect x="71.6" y="1797" width="0.3" height="15.0" fill="rgb(230,149,30)" rx="2" ry="2" />
<text  x="74.63" y="1807.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (7 samples, 0.13%)</title><rect x="633.5" y="1909" width="1.6" height="15.0" fill="rgb(222,110,47)" rx="2" ry="2" />
<text  x="636.55" y="1919.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (7 samples, 0.13%)</title><rect x="752.7" y="1717" width="1.5" height="15.0" fill="rgb(218,119,16)" rx="2" ry="2" />
<text  x="755.66" y="1727.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (1 samples, 0.02%)</title><rect x="535.9" y="1733" width="0.2" height="15.0" fill="rgb(241,163,39)" rx="2" ry="2" />
<text  x="538.85" y="1743.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="1127.7" y="1557" width="0.2" height="15.0" fill="rgb(226,189,3)" rx="2" ry="2" />
<text  x="1130.71" y="1567.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (8 samples, 0.15%)</title><rect x="735.0" y="1845" width="1.7" height="15.0" fill="rgb(251,15,12)" rx="2" ry="2" />
<text  x="737.96" y="1855.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt; (1 samples, 0.02%)</title><rect x="808.4" y="1701" width="0.2" height="15.0" fill="rgb(240,20,53)" rx="2" ry="2" />
<text  x="811.40" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="1030.0" y="1621" width="1.5" height="15.0" fill="rgb(251,39,4)" rx="2" ry="2" />
<text  x="1033.01" y="1631.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (3 samples, 0.06%)</title><rect x="995.5" y="1717" width="0.6" height="15.0" fill="rgb(246,215,21)" rx="2" ry="2" />
<text  x="998.48" y="1727.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (44 samples, 0.81%)</title><rect x="1124.4" y="1845" width="9.6" height="15.0" fill="rgb(244,125,13)" rx="2" ry="2" />
<text  x="1127.43" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (2 samples, 0.04%)</title><rect x="59.8" y="1733" width="0.5" height="15.0" fill="rgb(215,121,4)" rx="2" ry="2" />
<text  x="62.83" y="1743.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (14 samples, 0.26%)</title><rect x="817.8" y="1749" width="3.1" height="15.0" fill="rgb(227,66,12)" rx="2" ry="2" />
<text  x="820.79" y="1759.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="133.3" y="1877" width="0.2" height="15.0" fill="rgb(214,112,43)" rx="2" ry="2" />
<text  x="136.27" y="1887.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (1 samples, 0.02%)</title><rect x="1126.0" y="1685" width="0.2" height="15.0" fill="rgb(211,224,21)" rx="2" ry="2" />
<text  x="1128.96" y="1695.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (1 samples, 0.02%)</title><rect x="862.6" y="1781" width="0.2" height="15.0" fill="rgb(247,123,44)" rx="2" ry="2" />
<text  x="865.60" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="24.6" y="1701" width="0.3" height="15.0" fill="rgb(245,64,24)" rx="2" ry="2" />
<text  x="27.64" y="1711.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (3 samples, 0.06%)</title><rect x="261.3" y="1605" width="0.7" height="15.0" fill="rgb(228,92,15)" rx="2" ry="2" />
<text  x="264.34" y="1615.5" ></text>
</g>
<g >
<title>std::operator- (2 samples, 0.04%)</title><rect x="46.3" y="1589" width="0.4" height="15.0" fill="rgb(236,77,33)" rx="2" ry="2" />
<text  x="49.28" y="1599.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="647.3" y="1909" width="0.2" height="15.0" fill="rgb(226,205,9)" rx="2" ry="2" />
<text  x="650.32" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="890.4" y="1717" width="1.5" height="15.0" fill="rgb(233,39,43)" rx="2" ry="2" />
<text  x="893.36" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="630.1" y="1797" width="0.6" height="15.0" fill="rgb(236,9,13)" rx="2" ry="2" />
<text  x="633.05" y="1807.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="823.7" y="1813" width="0.2" height="15.0" fill="rgb(211,169,1)" rx="2" ry="2" />
<text  x="826.70" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="185.7" y="1637" width="0.2" height="15.0" fill="rgb(245,200,23)" rx="2" ry="2" />
<text  x="188.72" y="1647.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.02%)</title><rect x="436.2" y="1621" width="0.2" height="15.0" fill="rgb(251,67,36)" rx="2" ry="2" />
<text  x="439.19" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1173" width="2.9" height="15.0" fill="rgb(239,166,48)" rx="2" ry="2" />
<text  x="1189.94" y="1183.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="522.7" y="1685" width="0.3" height="15.0" fill="rgb(231,86,52)" rx="2" ry="2" />
<text  x="525.74" y="1695.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (1 samples, 0.02%)</title><rect x="297.0" y="1749" width="0.2" height="15.0" fill="rgb(222,221,52)" rx="2" ry="2" />
<text  x="299.97" y="1759.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (3 samples, 0.06%)</title><rect x="914.4" y="1813" width="0.7" height="15.0" fill="rgb(217,127,38)" rx="2" ry="2" />
<text  x="917.40" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1187.2" y="389" width="0.2" height="15.0" fill="rgb(214,106,45)" rx="2" ry="2" />
<text  x="1190.16" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;list_type_impl, true&gt;::make&lt;seastar::shared_ptr&lt;abstract_type const&gt;, bool&gt; (1 samples, 0.02%)</title><rect x="19.4" y="1637" width="0.2" height="15.0" fill="rgb(236,116,32)" rx="2" ry="2" />
<text  x="22.40" y="1647.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (9 samples, 0.17%)</title><rect x="785.0" y="1717" width="2.0" height="15.0" fill="rgb(208,127,51)" rx="2" ry="2" />
<text  x="788.01" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="627.4" y="1813" width="0.2" height="15.0" fill="rgb(253,149,20)" rx="2" ry="2" />
<text  x="630.43" y="1823.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (10 samples, 0.19%)</title><rect x="287.6" y="1685" width="2.2" height="15.0" fill="rgb(214,121,41)" rx="2" ry="2" />
<text  x="290.57" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="57.0" y="1637" width="0.2" height="15.0" fill="rgb(235,176,26)" rx="2" ry="2" />
<text  x="59.99" y="1647.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (6 samples, 0.11%)</title><rect x="320.8" y="1797" width="1.3" height="15.0" fill="rgb(206,188,3)" rx="2" ry="2" />
<text  x="323.79" y="1807.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (6 samples, 0.11%)</title><rect x="314.2" y="1733" width="1.3" height="15.0" fill="rgb(221,181,44)" rx="2" ry="2" />
<text  x="317.23" y="1743.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="695.0" y="1909" width="0.2" height="15.0" fill="rgb(219,184,26)" rx="2" ry="2" />
<text  x="697.96" y="1919.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (1 samples, 0.02%)</title><rect x="155.6" y="1829" width="0.2" height="15.0" fill="rgb(238,48,2)" rx="2" ry="2" />
<text  x="158.56" y="1839.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1187.2" y="341" width="0.2" height="15.0" fill="rgb(245,137,44)" rx="2" ry="2" />
<text  x="1190.16" y="351.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1061" width="2.9" height="15.0" fill="rgb(233,169,24)" rx="2" ry="2" />
<text  x="1189.94" y="1071.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (12 samples, 0.22%)</title><rect x="525.8" y="1653" width="2.6" height="15.0" fill="rgb(250,28,31)" rx="2" ry="2" />
<text  x="528.80" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="268.1" y="1669" width="0.5" height="15.0" fill="rgb(252,63,51)" rx="2" ry="2" />
<text  x="271.12" y="1679.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="844.2" y="1845" width="2.0" height="15.0" fill="rgb(237,193,17)" rx="2" ry="2" />
<text  x="847.24" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="42.1" y="1749" width="0.2" height="15.0" fill="rgb(217,72,51)" rx="2" ry="2" />
<text  x="45.13" y="1759.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (1 samples, 0.02%)</title><rect x="651.7" y="1861" width="0.2" height="15.0" fill="rgb(205,72,11)" rx="2" ry="2" />
<text  x="654.69" y="1871.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="45.4" y="1573" width="0.2" height="15.0" fill="rgb(210,36,2)" rx="2" ry="2" />
<text  x="48.41" y="1583.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::prepare (1 samples, 0.02%)</title><rect x="69.4" y="1877" width="0.3" height="15.0" fill="rgb(251,24,43)" rx="2" ry="2" />
<text  x="72.45" y="1887.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1317" width="2.9" height="15.0" fill="rgb(240,49,44)" rx="2" ry="2" />
<text  x="1189.94" y="1327.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (4 samples, 0.07%)</title><rect x="365.4" y="1605" width="0.9" height="15.0" fill="rgb(222,92,7)" rx="2" ry="2" />
<text  x="368.38" y="1615.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="213.7" y="1573" width="0.4" height="15.0" fill="rgb(214,173,18)" rx="2" ry="2" />
<text  x="216.70" y="1583.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="899.5" y="1685" width="0.3" height="15.0" fill="rgb(221,97,12)" rx="2" ry="2" />
<text  x="902.54" y="1695.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (234 samples, 4.33%)</title><rect x="208.5" y="1637" width="51.1" height="15.0" fill="rgb(245,51,28)" rx="2" ry="2" />
<text  x="211.45" y="1647.5" >logal..</text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="867.8" y="1685" width="0.5" height="15.0" fill="rgb(209,113,47)" rx="2" ry="2" />
<text  x="870.84" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="627.9" y="1861" width="0.2" height="15.0" fill="rgb(225,105,13)" rx="2" ry="2" />
<text  x="630.87" y="1871.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (6 samples, 0.11%)</title><rect x="859.1" y="1893" width="1.3" height="15.0" fill="rgb(226,137,36)" rx="2" ry="2" />
<text  x="862.10" y="1903.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (15 samples, 0.28%)</title><rect x="974.3" y="1765" width="3.3" height="15.0" fill="rgb(229,103,25)" rx="2" ry="2" />
<text  x="977.28" y="1775.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (3 samples, 0.06%)</title><rect x="258.1" y="1573" width="0.6" height="15.0" fill="rgb(254,6,50)" rx="2" ry="2" />
<text  x="261.06" y="1583.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="99.4" y="1781" width="0.2" height="15.0" fill="rgb(210,221,6)" rx="2" ry="2" />
<text  x="102.39" y="1791.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_lower_bound (1 samples, 0.02%)</title><rect x="40.2" y="1717" width="0.2" height="15.0" fill="rgb(225,110,53)" rx="2" ry="2" />
<text  x="43.16" y="1727.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.04%)</title><rect x="648.6" y="1909" width="0.5" height="15.0" fill="rgb(220,34,27)" rx="2" ry="2" />
<text  x="651.63" y="1919.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="1186.9" y="245" width="0.3" height="15.0" fill="rgb(239,41,26)" rx="2" ry="2" />
<text  x="1189.94" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::create_type_statement*, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="66.6" y="1733" width="0.2" height="15.0" fill="rgb(212,224,3)" rx="2" ry="2" />
<text  x="69.61" y="1743.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1130.8" y="1525" width="0.2" height="15.0" fill="rgb(220,193,26)" rx="2" ry="2" />
<text  x="1133.77" y="1535.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="1133.6" y="1637" width="0.2" height="15.0" fill="rgb(218,197,7)" rx="2" ry="2" />
<text  x="1136.61" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="43.2" y="1589" width="0.2" height="15.0" fill="rgb(211,97,16)" rx="2" ry="2" />
<text  x="46.22" y="1599.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::take (1 samples, 0.02%)</title><rect x="702.4" y="1877" width="0.2" height="15.0" fill="rgb(250,209,33)" rx="2" ry="2" />
<text  x="705.39" y="1887.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="17.6" y="1861" width="0.3" height="15.0" fill="rgb(246,161,15)" rx="2" ry="2" />
<text  x="20.65" y="1871.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (6 samples, 0.11%)</title><rect x="587.2" y="1765" width="1.3" height="15.0" fill="rgb(242,190,6)" rx="2" ry="2" />
<text  x="590.21" y="1775.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (28 samples, 0.52%)</title><rect x="1171.9" y="2053" width="6.1" height="15.0" fill="rgb(242,160,13)" rx="2" ry="2" />
<text  x="1174.86" y="2063.5" ></text>
</g>
<g >
<title>bplus::data&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="17.4" y="1733" width="0.2" height="15.0" fill="rgb(252,7,25)" rx="2" ry="2" />
<text  x="20.43" y="1743.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1122.5" y="1653" width="0.2" height="15.0" fill="rgb(208,29,37)" rx="2" ry="2" />
<text  x="1125.47" y="1663.5" ></text>
</g>
<g >
<title>abstract_type::to_string (1 samples, 0.02%)</title><rect x="100.9" y="1685" width="0.2" height="15.0" fill="rgb(245,109,16)" rx="2" ry="2" />
<text  x="103.92" y="1695.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (5 samples, 0.09%)</title><rect x="1118.5" y="1653" width="1.1" height="15.0" fill="rgb(214,163,43)" rx="2" ry="2" />
<text  x="1121.53" y="1663.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1038.1" y="1685" width="0.2" height="15.0" fill="rgb(252,39,21)" rx="2" ry="2" />
<text  x="1041.10" y="1695.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="663.7" y="1877" width="0.2" height="15.0" fill="rgb(230,121,12)" rx="2" ry="2" />
<text  x="666.71" y="1887.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (1 samples, 0.02%)</title><rect x="116.2" y="1861" width="0.2" height="15.0" fill="rgb(208,175,19)" rx="2" ry="2" />
<text  x="119.22" y="1871.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.04%)</title><rect x="48.2" y="1717" width="0.5" height="15.0" fill="rgb(213,124,18)" rx="2" ry="2" />
<text  x="51.25" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="556.2" y="1813" width="0.6" height="15.0" fill="rgb(223,209,16)" rx="2" ry="2" />
<text  x="559.18" y="1823.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (14 samples, 0.26%)</title><rect x="1023.2" y="1589" width="3.1" height="15.0" fill="rgb(213,193,22)" rx="2" ry="2" />
<text  x="1026.24" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_check_len (1 samples, 0.02%)</title><rect x="75.8" y="1749" width="0.2" height="15.0" fill="rgb(225,118,23)" rx="2" ry="2" />
<text  x="78.79" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="52.6" y="1717" width="0.2" height="15.0" fill="rgb(251,103,10)" rx="2" ry="2" />
<text  x="55.62" y="1727.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::rewind (1 samples, 0.02%)</title><rect x="38.6" y="1653" width="0.2" height="15.0" fill="rgb(239,207,21)" rx="2" ry="2" />
<text  x="41.63" y="1663.5" ></text>
</g>
<g >
<title>utils::sequenced_set&lt;gms::inet_address&gt;::insert (1 samples, 0.02%)</title><rect x="101.4" y="1893" width="0.2" height="15.0" fill="rgb(226,51,46)" rx="2" ry="2" />
<text  x="104.36" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type&gt; (2 samples, 0.04%)</title><rect x="966.0" y="1797" width="0.4" height="15.0" fill="rgb(254,191,2)" rx="2" ry="2" />
<text  x="968.98" y="1807.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="620.2" y="1845" width="0.2" height="15.0" fill="rgb(215,106,19)" rx="2" ry="2" />
<text  x="623.22" y="1855.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (2 samples, 0.04%)</title><rect x="627.2" y="1845" width="0.4" height="15.0" fill="rgb(250,198,53)" rx="2" ry="2" />
<text  x="630.21" y="1855.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (4 samples, 0.07%)</title><rect x="39.9" y="1733" width="0.9" height="15.0" fill="rgb(227,57,6)" rx="2" ry="2" />
<text  x="42.94" y="1743.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2 samples, 0.04%)</title><rect x="718.8" y="1845" width="0.4" height="15.0" fill="rgb(215,212,46)" rx="2" ry="2" />
<text  x="721.79" y="1855.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (14 samples, 0.26%)</title><rect x="1030.0" y="1653" width="3.1" height="15.0" fill="rgb(213,38,34)" rx="2" ry="2" />
<text  x="1033.01" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="43.9" y="1605" width="0.2" height="15.0" fill="rgb(210,215,53)" rx="2" ry="2" />
<text  x="46.88" y="1615.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (3 samples, 0.06%)</title><rect x="715.3" y="1877" width="0.6" height="15.0" fill="rgb(211,44,8)" rx="2" ry="2" />
<text  x="718.29" y="1887.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="10.4" y="277" width="0.3" height="15.0" fill="rgb(226,132,27)" rx="2" ry="2" />
<text  x="13.44" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (11 samples, 0.20%)</title><rect x="826.8" y="1749" width="2.4" height="15.0" fill="rgb(235,183,41)" rx="2" ry="2" />
<text  x="829.75" y="1759.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.06%)</title><rect x="1130.3" y="1557" width="0.7" height="15.0" fill="rgb(221,65,24)" rx="2" ry="2" />
<text  x="1133.33" y="1567.5" ></text>
</g>
<g >
<title>cql3::cql3_type::get_kind (1 samples, 0.02%)</title><rect x="71.6" y="1781" width="0.3" height="15.0" fill="rgb(239,79,46)" rx="2" ry="2" />
<text  x="74.63" y="1791.5" ></text>
</g>
<g >
<title>std::__count_if&lt;gms::inet_address const*, __gnu_cxx::__ops::_Iter_pred&lt;service::storage_proxy::hint_to_dead_endpoints&lt;utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt; (1 samples, 0.02%)</title><rect x="1126.2" y="1637" width="0.2" height="15.0" fill="rgb(241,187,4)" rx="2" ry="2" />
<text  x="1129.18" y="1647.5" ></text>
</g>
<g >
<title>query::querier_base::close (1 samples, 0.02%)</title><rect x="1167.9" y="1909" width="0.2" height="15.0" fill="rgb(251,180,48)" rx="2" ry="2" />
<text  x="1170.93" y="1919.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.02%)</title><rect x="952.6" y="1797" width="0.3" height="15.0" fill="rgb(213,146,24)" rx="2" ry="2" />
<text  x="955.64" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1365" width="2.9" height="15.0" fill="rgb(213,16,14)" rx="2" ry="2" />
<text  x="1189.94" y="1375.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::list_users_statement, std::default_delete&lt;cql3::statements::list_users_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="67.0" y="1781" width="0.3" height="15.0" fill="rgb(237,171,1)" rx="2" ry="2" />
<text  x="70.04" y="1791.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (1 samples, 0.02%)</title><rect x="727.3" y="1893" width="0.2" height="15.0" fill="rgb(249,125,40)" rx="2" ry="2" />
<text  x="730.31" y="1903.5" ></text>
</g>
<g >
<title>tombstone::apply (1 samples, 0.02%)</title><rect x="420.9" y="1621" width="0.2" height="15.0" fill="rgb(229,169,15)" rx="2" ry="2" />
<text  x="423.89" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::io_getevents (1 samples, 0.02%)</title><rect x="1170.1" y="1893" width="0.2" height="15.0" fill="rgb(207,130,4)" rx="2" ry="2" />
<text  x="1173.11" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="785.4" y="1685" width="1.6" height="15.0" fill="rgb(222,201,50)" rx="2" ry="2" />
<text  x="788.45" y="1695.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (57 samples, 1.06%)</title><rect x="1147.2" y="1909" width="12.4" height="15.0" fill="rgb(217,137,32)" rx="2" ry="2" />
<text  x="1150.16" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1041.2" y="1637" width="0.2" height="15.0" fill="rgb(254,18,47)" rx="2" ry="2" />
<text  x="1044.16" y="1647.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (592 samples, 10.96%)</title><rect x="320.1" y="1813" width="129.4" height="15.0" fill="rgb(206,213,11)" rx="2" ry="2" />
<text  x="323.14" y="1823.5" >query::consume_p..</text>
</g>
<g >
<title>cql3::statements::select_statement::execute (13 samples, 0.24%)</title><rect x="759.0" y="1829" width="2.8" height="15.0" fill="rgb(253,100,32)" rx="2" ry="2" />
<text  x="762.00" y="1839.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1187.4" y="213" width="0.2" height="15.0" fill="rgb(226,64,52)" rx="2" ry="2" />
<text  x="1190.38" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="676.8" y="1893" width="0.5" height="15.0" fill="rgb(232,93,41)" rx="2" ry="2" />
<text  x="679.82" y="1903.5" ></text>
</g>
<g >
<title>make_combined_reader (1 samples, 0.02%)</title><rect x="456.1" y="1781" width="0.2" height="15.0" fill="rgb(227,13,16)" rx="2" ry="2" />
<text  x="459.08" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="474.9" y="1701" width="0.2" height="15.0" fill="rgb(210,60,28)" rx="2" ry="2" />
<text  x="477.87" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="440.8" y="1669" width="0.4" height="15.0" fill="rgb(219,30,47)" rx="2" ry="2" />
<text  x="443.78" y="1679.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="191.4" y="1685" width="0.2" height="15.0" fill="rgb(237,162,19)" rx="2" ry="2" />
<text  x="194.40" y="1695.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (9 samples, 0.17%)</title><rect x="952.4" y="1829" width="2.0" height="15.0" fill="rgb(246,22,21)" rx="2" ry="2" />
<text  x="955.43" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="296.1" y="1733" width="0.2" height="15.0" fill="rgb(222,170,44)" rx="2" ry="2" />
<text  x="299.09" y="1743.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (10 samples, 0.19%)</title><rect x="791.8" y="1637" width="2.2" height="15.0" fill="rgb(247,221,18)" rx="2" ry="2" />
<text  x="794.79" y="1647.5" ></text>
</g>
<g >
<title>mutation_partition::append_clustered_row (1 samples, 0.02%)</title><rect x="99.6" y="1797" width="0.2" height="15.0" fill="rgb(222,227,44)" rx="2" ry="2" />
<text  x="102.61" y="1807.5" ></text>
</g>
<g >
<title>bplus::data&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="81.5" y="1877" width="0.2" height="15.0" fill="rgb(253,20,31)" rx="2" ry="2" />
<text  x="84.47" y="1887.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (1 samples, 0.02%)</title><rect x="10.4" y="133" width="0.3" height="15.0" fill="rgb(245,88,47)" rx="2" ry="2" />
<text  x="13.44" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;global_schema_ptr, std::allocator&lt;global_schema_ptr&gt; &gt;::emplace_back&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="99.2" y="1877" width="0.2" height="15.0" fill="rgb(243,4,53)" rx="2" ry="2" />
<text  x="102.17" y="1887.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (18 samples, 0.33%)</title><rect x="247.4" y="1541" width="3.9" height="15.0" fill="rgb(209,120,50)" rx="2" ry="2" />
<text  x="250.36" y="1551.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.02%)</title><rect x="776.3" y="1797" width="0.2" height="15.0" fill="rgb(232,7,23)" rx="2" ry="2" />
<text  x="779.27" y="1807.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (1 samples, 0.02%)</title><rect x="856.7" y="1893" width="0.2" height="15.0" fill="rgb(214,19,33)" rx="2" ry="2" />
<text  x="859.70" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (2 samples, 0.04%)</title><rect x="565.1" y="1717" width="0.5" height="15.0" fill="rgb(218,169,50)" rx="2" ry="2" />
<text  x="568.14" y="1727.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="667.0" y="1909" width="1.1" height="15.0" fill="rgb(213,3,9)" rx="2" ry="2" />
<text  x="669.99" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_M_range_initialize&lt;cql3::expr::expression const*&gt; (1 samples, 0.02%)</title><rect x="73.4" y="1669" width="0.2" height="15.0" fill="rgb(224,221,34)" rx="2" ry="2" />
<text  x="76.38" y="1679.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (1 samples, 0.02%)</title><rect x="715.7" y="1861" width="0.2" height="15.0" fill="rgb(217,43,12)" rx="2" ry="2" />
<text  x="718.73" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="32.1" y="1653" width="0.4" height="15.0" fill="rgb(225,54,44)" rx="2" ry="2" />
<text  x="35.07" y="1663.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (2 samples, 0.04%)</title><rect x="18.7" y="1973" width="0.5" height="15.0" fill="rgb(238,183,33)" rx="2" ry="2" />
<text  x="21.74" y="1983.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (1 samples, 0.02%)</title><rect x="315.5" y="1749" width="0.3" height="15.0" fill="rgb(215,139,3)" rx="2" ry="2" />
<text  x="318.55" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (17 samples, 0.31%)</title><rect x="640.8" y="1909" width="3.7" height="15.0" fill="rgb(244,185,9)" rx="2" ry="2" />
<text  x="643.76" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1317" width="0.3" height="15.0" fill="rgb(241,82,47)" rx="2" ry="2" />
<text  x="13.44" y="1327.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="52.6" y="1701" width="0.2" height="15.0" fill="rgb(210,40,25)" rx="2" ry="2" />
<text  x="55.62" y="1711.5" ></text>
</g>
<g >
<title>service::storage_service::join_token_ring (2 samples, 0.04%)</title><rect x="19.8" y="1893" width="0.5" height="15.0" fill="rgb(210,174,8)" rx="2" ry="2" />
<text  x="22.84" y="1903.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (2 samples, 0.04%)</title><rect x="1120.9" y="1621" width="0.5" height="15.0" fill="rgb(224,4,35)" rx="2" ry="2" />
<text  x="1123.94" y="1631.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="77.5" y="1813" width="0.3" height="15.0" fill="rgb(236,88,29)" rx="2" ry="2" />
<text  x="80.53" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="123.2" y="1813" width="0.5" height="15.0" fill="rgb(216,65,16)" rx="2" ry="2" />
<text  x="126.21" y="1823.5" ></text>
</g>
<g >
<title>table::estimate_read_memory_cost (1 samples, 0.02%)</title><rect x="1036.8" y="1685" width="0.2" height="15.0" fill="rgb(205,17,34)" rx="2" ry="2" />
<text  x="1039.79" y="1695.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (1 samples, 0.02%)</title><rect x="610.2" y="1861" width="0.2" height="15.0" fill="rgb(239,121,50)" rx="2" ry="2" />
<text  x="613.16" y="1871.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (3 samples, 0.06%)</title><rect x="929.3" y="1781" width="0.6" height="15.0" fill="rgb(239,46,48)" rx="2" ry="2" />
<text  x="932.26" y="1791.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.07%)</title><rect x="792.9" y="1589" width="0.9" height="15.0" fill="rgb(207,112,20)" rx="2" ry="2" />
<text  x="795.88" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (27 samples, 0.50%)</title><rect x="864.3" y="1861" width="5.9" height="15.0" fill="rgb(219,175,31)" rx="2" ry="2" />
<text  x="867.35" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="49.3" y="1685" width="0.7" height="15.0" fill="rgb(243,19,33)" rx="2" ry="2" />
<text  x="52.34" y="1695.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="757" width="2.9" height="15.0" fill="rgb(233,24,34)" rx="2" ry="2" />
<text  x="1189.94" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;sstables::component_type, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="17.4" y="1989" width="0.2" height="15.0" fill="rgb(254,9,17)" rx="2" ry="2" />
<text  x="20.43" y="1999.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="1009.7" y="1669" width="0.6" height="15.0" fill="rgb(219,7,30)" rx="2" ry="2" />
<text  x="1012.69" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="677.9" y="1909" width="0.2" height="15.0" fill="rgb(230,189,5)" rx="2" ry="2" />
<text  x="680.92" y="1919.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (14 samples, 0.26%)</title><rect x="1096.0" y="1813" width="3.1" height="15.0" fill="rgb(207,189,13)" rx="2" ry="2" />
<text  x="1099.02" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (14 samples, 0.26%)</title><rect x="623.1" y="1845" width="3.0" height="15.0" fill="rgb(251,194,51)" rx="2" ry="2" />
<text  x="626.06" y="1855.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.04%)</title><rect x="1051.9" y="1717" width="0.4" height="15.0" fill="rgb(237,101,21)" rx="2" ry="2" />
<text  x="1054.87" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (38 samples, 0.70%)</title><rect x="523.0" y="1685" width="8.3" height="15.0" fill="rgb(228,162,3)" rx="2" ry="2" />
<text  x="525.96" y="1695.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (2 samples, 0.04%)</title><rect x="832.2" y="1829" width="0.5" height="15.0" fill="rgb(207,167,36)" rx="2" ry="2" />
<text  x="835.22" y="1839.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (28 samples, 0.52%)</title><rect x="735.0" y="1861" width="6.1" height="15.0" fill="rgb(247,60,15)" rx="2" ry="2" />
<text  x="737.96" y="1871.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (2 samples, 0.04%)</title><rect x="805.6" y="1653" width="0.4" height="15.0" fill="rgb(231,49,31)" rx="2" ry="2" />
<text  x="808.55" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="882.9" y="1845" width="0.2" height="15.0" fill="rgb(252,106,9)" rx="2" ry="2" />
<text  x="885.92" y="1855.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="184.4" y="1669" width="0.2" height="15.0" fill="rgb(225,192,8)" rx="2" ry="2" />
<text  x="187.41" y="1679.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (2 samples, 0.04%)</title><rect x="99.4" y="1925" width="0.4" height="15.0" fill="rgb(244,222,40)" rx="2" ry="2" />
<text  x="102.39" y="1935.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (1 samples, 0.02%)</title><rect x="965.8" y="1797" width="0.2" height="15.0" fill="rgb(223,88,38)" rx="2" ry="2" />
<text  x="968.76" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="847.1" y="1829" width="0.2" height="15.0" fill="rgb(209,37,42)" rx="2" ry="2" />
<text  x="850.08" y="1839.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (2 samples, 0.04%)</title><rect x="126.7" y="1813" width="0.4" height="15.0" fill="rgb(207,229,2)" rx="2" ry="2" />
<text  x="129.71" y="1823.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="635.3" y="1909" width="0.4" height="15.0" fill="rgb(209,136,38)" rx="2" ry="2" />
<text  x="638.30" y="1919.5" ></text>
</g>
<g >
<title>db::rp_handle::~rp_handle (1 samples, 0.02%)</title><rect x="1123.8" y="1733" width="0.2" height="15.0" fill="rgb(207,55,23)" rx="2" ry="2" />
<text  x="1126.78" y="1743.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1187.6" y="117" width="0.2" height="15.0" fill="rgb(208,4,19)" rx="2" ry="2" />
<text  x="1190.60" y="127.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="57.0" y="1493" width="0.2" height="15.0" fill="rgb(229,74,34)" rx="2" ry="2" />
<text  x="59.99" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="720.3" y="1701" width="0.2" height="15.0" fill="rgb(252,143,44)" rx="2" ry="2" />
<text  x="723.32" y="1711.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (18 samples, 0.33%)</title><rect x="379.8" y="1589" width="3.9" height="15.0" fill="rgb(231,79,38)" rx="2" ry="2" />
<text  x="382.80" y="1599.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="643.4" y="1893" width="0.2" height="15.0" fill="rgb(253,178,10)" rx="2" ry="2" />
<text  x="646.38" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::restrictions::has_eq_null (1 samples, 0.02%)</title><rect x="864.8" y="1765" width="0.2" height="15.0" fill="rgb(206,28,26)" rx="2" ry="2" />
<text  x="867.78" y="1775.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.02%)</title><rect x="720.3" y="1829" width="0.2" height="15.0" fill="rgb(230,44,33)" rx="2" ry="2" />
<text  x="723.32" y="1839.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (2 samples, 0.04%)</title><rect x="99.0" y="1909" width="0.4" height="15.0" fill="rgb(227,167,8)" rx="2" ry="2" />
<text  x="101.95" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="997" width="0.3" height="15.0" fill="rgb(224,79,46)" rx="2" ry="2" />
<text  x="13.44" y="1007.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (2 samples, 0.04%)</title><rect x="866.8" y="1749" width="0.4" height="15.0" fill="rgb(243,44,49)" rx="2" ry="2" />
<text  x="869.75" y="1759.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="17.2" y="2037" width="0.2" height="15.0" fill="rgb(233,181,46)" rx="2" ry="2" />
<text  x="20.21" y="2047.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="49.3" y="1541" width="0.5" height="15.0" fill="rgb(213,45,39)" rx="2" ry="2" />
<text  x="52.34" y="1551.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="94.8" y="1861" width="0.2" height="15.0" fill="rgb(226,43,0)" rx="2" ry="2" />
<text  x="97.80" y="1871.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="38.8" y="1669" width="0.5" height="15.0" fill="rgb(224,154,33)" rx="2" ry="2" />
<text  x="41.85" y="1679.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="699.8" y="1893" width="0.2" height="15.0" fill="rgb(206,189,53)" rx="2" ry="2" />
<text  x="702.77" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="19.6" y="1909" width="0.2" height="15.0" fill="rgb(244,102,30)" rx="2" ry="2" />
<text  x="22.62" y="1919.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1064.5" y="1749" width="0.3" height="15.0" fill="rgb(252,74,44)" rx="2" ry="2" />
<text  x="1067.55" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="54.8" y="1365" width="0.4" height="15.0" fill="rgb(240,186,3)" rx="2" ry="2" />
<text  x="57.80" y="1375.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;bplus::data&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="1118.5" y="1605" width="0.5" height="15.0" fill="rgb(230,43,22)" rx="2" ry="2" />
<text  x="1121.53" y="1615.5" ></text>
</g>
<g >
<title>database::query (11 samples, 0.20%)</title><rect x="96.5" y="1925" width="2.5" height="15.0" fill="rgb(207,54,19)" rx="2" ry="2" />
<text  x="99.55" y="1935.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="151.8" y="1829" width="0.5" height="15.0" fill="rgb(241,89,3)" rx="2" ry="2" />
<text  x="154.84" y="1839.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="448.6" y="1797" width="0.3" height="15.0" fill="rgb(252,135,19)" rx="2" ry="2" />
<text  x="451.65" y="1807.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (1 samples, 0.02%)</title><rect x="1141.9" y="1893" width="0.2" height="15.0" fill="rgb(226,70,5)" rx="2" ry="2" />
<text  x="1144.92" y="1903.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (13 samples, 0.24%)</title><rect x="826.3" y="1765" width="2.9" height="15.0" fill="rgb(239,92,35)" rx="2" ry="2" />
<text  x="829.32" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="1047.9" y="1733" width="0.5" height="15.0" fill="rgb(236,191,29)" rx="2" ry="2" />
<text  x="1050.94" y="1743.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (1 samples, 0.02%)</title><rect x="957.5" y="1829" width="0.2" height="15.0" fill="rgb(254,196,51)" rx="2" ry="2" />
<text  x="960.45" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="281.7" y="1589" width="0.8" height="15.0" fill="rgb(206,221,38)" rx="2" ry="2" />
<text  x="284.67" y="1599.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.02%)</title><rect x="19.8" y="1829" width="0.3" height="15.0" fill="rgb(242,185,35)" rx="2" ry="2" />
<text  x="22.84" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, service::view_update_backlog_timestamped&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (3 samples, 0.06%)</title><rect x="719.4" y="1813" width="0.7" height="15.0" fill="rgb(221,205,28)" rx="2" ry="2" />
<text  x="722.44" y="1823.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (3 samples, 0.06%)</title><rect x="127.8" y="1813" width="0.7" height="15.0" fill="rgb(222,108,1)" rx="2" ry="2" />
<text  x="130.80" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1221" width="0.3" height="15.0" fill="rgb(246,216,42)" rx="2" ry="2" />
<text  x="13.44" y="1231.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (1 samples, 0.02%)</title><rect x="88.7" y="1909" width="0.2" height="15.0" fill="rgb(234,0,46)" rx="2" ry="2" />
<text  x="91.68" y="1919.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, true&gt; (1 samples, 0.02%)</title><rect x="59.8" y="1685" width="0.3" height="15.0" fill="rgb(240,140,3)" rx="2" ry="2" />
<text  x="62.83" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="56.8" y="1669" width="0.4" height="15.0" fill="rgb(207,154,24)" rx="2" ry="2" />
<text  x="59.77" y="1679.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (10 samples, 0.19%)</title><rect x="848.8" y="1797" width="2.2" height="15.0" fill="rgb(242,215,52)" rx="2" ry="2" />
<text  x="851.83" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="1109.8" y="1797" width="0.4" height="15.0" fill="rgb(205,202,15)" rx="2" ry="2" />
<text  x="1112.79" y="1807.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (2 samples, 0.04%)</title><rect x="1187.8" y="197" width="0.5" height="15.0" fill="rgb(241,200,19)" rx="2" ry="2" />
<text  x="1190.81" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (1 samples, 0.02%)</title><rect x="129.8" y="1877" width="0.2" height="15.0" fill="rgb(234,37,12)" rx="2" ry="2" />
<text  x="132.77" y="1887.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1187.2" y="293" width="0.2" height="15.0" fill="rgb(242,144,47)" rx="2" ry="2" />
<text  x="1190.16" y="303.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="10.7" y="1925" width="0.2" height="15.0" fill="rgb(250,126,47)" rx="2" ry="2" />
<text  x="13.66" y="1935.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="527.3" y="1621" width="0.5" height="15.0" fill="rgb(212,132,54)" rx="2" ry="2" />
<text  x="530.33" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (1 samples, 0.02%)</title><rect x="702.2" y="1861" width="0.2" height="15.0" fill="rgb(210,131,41)" rx="2" ry="2" />
<text  x="705.18" y="1871.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (578 samples, 10.71%)</title><rect x="730.2" y="1893" width="126.3" height="15.0" fill="rgb(223,123,2)" rx="2" ry="2" />
<text  x="733.15" y="1903.5" >single_node_cql..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (9 samples, 0.17%)</title><rect x="53.9" y="1701" width="2.0" height="15.0" fill="rgb(252,141,12)" rx="2" ry="2" />
<text  x="56.93" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="19.6" y="1957" width="0.2" height="15.0" fill="rgb(230,137,50)" rx="2" ry="2" />
<text  x="22.62" y="1967.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (1 samples, 0.02%)</title><rect x="150.5" y="1845" width="0.3" height="15.0" fill="rgb(205,72,8)" rx="2" ry="2" />
<text  x="153.53" y="1855.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="42.6" y="1605" width="0.2" height="15.0" fill="rgb(243,226,27)" rx="2" ry="2" />
<text  x="45.57" y="1615.5" ></text>
</g>
<g >
<title>db::system_distributed_keyspace::insert_cdc_generation (1 samples, 0.02%)</title><rect x="19.8" y="1861" width="0.3" height="15.0" fill="rgb(248,106,26)" rx="2" ry="2" />
<text  x="22.84" y="1871.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (276 samples, 5.11%)</title><rect x="20.3" y="1989" width="60.3" height="15.0" fill="rgb(225,211,32)" rx="2" ry="2" />
<text  x="23.27" y="1999.5" >std::_..</text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="81.3" y="1989" width="0.2" height="15.0" fill="rgb(224,29,34)" rx="2" ry="2" />
<text  x="84.25" y="1999.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="50.7" y="1669" width="0.2" height="15.0" fill="rgb(232,84,43)" rx="2" ry="2" />
<text  x="53.65" y="1679.5" ></text>
</g>
<g >
<title>boost::range_detail::join_iterator&lt;gms::inet_address*, gms::inet_address*, gms::inet_address, gms::inet_address&amp;, boost::iterators::random_access_traversal_tag&gt;::distance_to (1 samples, 0.02%)</title><rect x="1129.0" y="1637" width="0.2" height="15.0" fill="rgb(205,131,30)" rx="2" ry="2" />
<text  x="1132.02" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (1 samples, 0.02%)</title><rect x="184.6" y="1669" width="0.2" height="15.0" fill="rgb(225,127,22)" rx="2" ry="2" />
<text  x="187.63" y="1679.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="613.4" y="1845" width="0.3" height="15.0" fill="rgb(223,176,3)" rx="2" ry="2" />
<text  x="616.44" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="820.9" y="1797" width="0.2" height="15.0" fill="rgb(234,225,35)" rx="2" ry="2" />
<text  x="823.85" y="1807.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (2 samples, 0.04%)</title><rect x="276.9" y="1605" width="0.4" height="15.0" fill="rgb(209,187,48)" rx="2" ry="2" />
<text  x="279.86" y="1615.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1134.5" y="1909" width="0.2" height="15.0" fill="rgb(208,161,49)" rx="2" ry="2" />
<text  x="1137.49" y="1919.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="19.4" y="1957" width="0.2" height="15.0" fill="rgb(226,54,1)" rx="2" ry="2" />
<text  x="22.40" y="1967.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="81.5" y="1973" width="0.2" height="15.0" fill="rgb(232,16,44)" rx="2" ry="2" />
<text  x="84.47" y="1983.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="527.1" y="1621" width="0.2" height="15.0" fill="rgb(212,129,47)" rx="2" ry="2" />
<text  x="530.11" y="1631.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.06%)</title><rect x="251.3" y="1541" width="0.6" height="15.0" fill="rgb(216,190,17)" rx="2" ry="2" />
<text  x="254.29" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.06%)</title><rect x="53.3" y="1605" width="0.6" height="15.0" fill="rgb(239,142,5)" rx="2" ry="2" />
<text  x="56.27" y="1615.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (3 samples, 0.06%)</title><rect x="693.2" y="1893" width="0.7" height="15.0" fill="rgb(234,98,20)" rx="2" ry="2" />
<text  x="696.22" y="1903.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.02%)</title><rect x="99.2" y="1845" width="0.2" height="15.0" fill="rgb(251,155,19)" rx="2" ry="2" />
<text  x="102.17" y="1855.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="24.2" y="1797" width="0.2" height="15.0" fill="rgb(215,14,5)" rx="2" ry="2" />
<text  x="27.21" y="1807.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (17 samples, 0.31%)</title><rect x="711.6" y="1877" width="3.7" height="15.0" fill="rgb(238,161,37)" rx="2" ry="2" />
<text  x="714.57" y="1887.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (9 samples, 0.17%)</title><rect x="198.0" y="1621" width="1.9" height="15.0" fill="rgb(208,109,21)" rx="2" ry="2" />
<text  x="200.96" y="1631.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;char const*, fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="20.9" y="1909" width="0.5" height="15.0" fill="rgb(244,165,13)" rx="2" ry="2" />
<text  x="23.93" y="1919.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (20 samples, 0.37%)</title><rect x="1128.8" y="1685" width="4.4" height="15.0" fill="rgb(237,39,52)" rx="2" ry="2" />
<text  x="1131.80" y="1695.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (2 samples, 0.04%)</title><rect x="99.4" y="1893" width="0.4" height="15.0" fill="rgb(225,143,54)" rx="2" ry="2" />
<text  x="102.39" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="300.0" y="1749" width="0.2" height="15.0" fill="rgb(213,10,51)" rx="2" ry="2" />
<text  x="303.03" y="1759.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="873.1" y="1893" width="0.2" height="15.0" fill="rgb(213,9,14)" rx="2" ry="2" />
<text  x="876.09" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (12 samples, 0.22%)</title><rect x="397.9" y="1621" width="2.7" height="15.0" fill="rgb(223,103,38)" rx="2" ry="2" />
<text  x="400.94" y="1631.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (6 samples, 0.11%)</title><rect x="894.1" y="1717" width="1.3" height="15.0" fill="rgb(235,77,35)" rx="2" ry="2" />
<text  x="897.07" y="1727.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (1 samples, 0.02%)</title><rect x="1132.3" y="1589" width="0.2" height="15.0" fill="rgb(223,136,32)" rx="2" ry="2" />
<text  x="1135.30" y="1599.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::response (4 samples, 0.07%)</title><rect x="719.2" y="1893" width="0.9" height="15.0" fill="rgb(252,144,29)" rx="2" ry="2" />
<text  x="722.22" y="1903.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_state (1 samples, 0.02%)</title><rect x="47.4" y="1749" width="0.2" height="15.0" fill="rgb(219,228,12)" rx="2" ry="2" />
<text  x="50.37" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="72.1" y="1797" width="0.2" height="15.0" fill="rgb(248,174,22)" rx="2" ry="2" />
<text  x="75.07" y="1807.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::reset&lt;cql3_parser::CqlParser&gt; (1 samples, 0.02%)</title><rect x="22.7" y="1797" width="0.2" height="15.0" fill="rgb(205,194,36)" rx="2" ry="2" />
<text  x="25.68" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (1 samples, 0.02%)</title><rect x="73.4" y="1733" width="0.2" height="15.0" fill="rgb(248,194,54)" rx="2" ry="2" />
<text  x="76.38" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;1ul, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="54.8" y="1381" width="0.4" height="15.0" fill="rgb(244,43,52)" rx="2" ry="2" />
<text  x="57.80" y="1391.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1188.3" y="277" width="0.2" height="15.0" fill="rgb(207,201,38)" rx="2" ry="2" />
<text  x="1191.25" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="717.0" y="1845" width="0.3" height="15.0" fill="rgb(239,169,29)" rx="2" ry="2" />
<text  x="720.04" y="1855.5" ></text>
</g>
<g >
<title>cql3::query_processor::compute_id (1 samples, 0.02%)</title><rect x="10.4" y="325" width="0.3" height="15.0" fill="rgb(235,184,3)" rx="2" ry="2" />
<text  x="13.44" y="335.5" ></text>
</g>
<g >
<title>query::querier_base::close (4 samples, 0.07%)</title><rect x="114.3" y="1877" width="0.8" height="15.0" fill="rgb(231,217,19)" rx="2" ry="2" />
<text  x="117.25" y="1887.5" ></text>
</g>
<g >
<title>dht::i_partitioner::decorate_key (1 samples, 0.02%)</title><rect x="100.0" y="1813" width="0.3" height="15.0" fill="rgb(250,81,7)" rx="2" ry="2" />
<text  x="103.05" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1237" width="0.3" height="15.0" fill="rgb(241,24,2)" rx="2" ry="2" />
<text  x="13.44" y="1247.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="316.4" y="1765" width="0.2" height="15.0" fill="rgb(237,193,18)" rx="2" ry="2" />
<text  x="319.42" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="57.6" y="1653" width="0.7" height="15.0" fill="rgb(208,160,44)" rx="2" ry="2" />
<text  x="60.65" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (8 samples, 0.15%)</title><rect x="1150.2" y="1877" width="1.8" height="15.0" fill="rgb(210,171,45)" rx="2" ry="2" />
<text  x="1153.22" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="62.9" y="1557" width="0.2" height="15.0" fill="rgb(234,177,34)" rx="2" ry="2" />
<text  x="65.89" y="1567.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (12 samples, 0.22%)</title><rect x="727.5" y="1893" width="2.7" height="15.0" fill="rgb(226,27,39)" rx="2" ry="2" />
<text  x="730.53" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="63.3" y="1685" width="0.2" height="15.0" fill="rgb(224,113,16)" rx="2" ry="2" />
<text  x="66.33" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="17.4" y="1765" width="0.2" height="15.0" fill="rgb(221,130,46)" rx="2" ry="2" />
<text  x="20.43" y="1775.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="648.0" y="1893" width="0.2" height="15.0" fill="rgb(227,102,42)" rx="2" ry="2" />
<text  x="650.97" y="1903.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="444.3" y="1685" width="0.2" height="15.0" fill="rgb(231,184,26)" rx="2" ry="2" />
<text  x="447.28" y="1695.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="48.2" y="1557" width="0.5" height="15.0" fill="rgb(238,73,52)" rx="2" ry="2" />
<text  x="51.25" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="81.3" y="1909" width="0.2" height="15.0" fill="rgb(239,122,40)" rx="2" ry="2" />
<text  x="84.25" y="1919.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (6 samples, 0.11%)</title><rect x="73.4" y="1813" width="1.3" height="15.0" fill="rgb(232,88,2)" rx="2" ry="2" />
<text  x="76.38" y="1823.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (1 samples, 0.02%)</title><rect x="446.9" y="1765" width="0.2" height="15.0" fill="rgb(217,43,14)" rx="2" ry="2" />
<text  x="449.90" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (131 samples, 2.43%)</title><rect x="886.6" y="1829" width="28.7" height="15.0" fill="rgb(209,185,11)" rx="2" ry="2" />
<text  x="889.64" y="1839.5" >cq..</text>
</g>
<g >
<title>frozen_schema::frozen_schema (1 samples, 0.02%)</title><rect x="99.2" y="1781" width="0.2" height="15.0" fill="rgb(207,222,13)" rx="2" ry="2" />
<text  x="102.17" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="483.0" y="1749" width="0.4" height="15.0" fill="rgb(205,68,4)" rx="2" ry="2" />
<text  x="485.96" y="1759.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.02%)</title><rect x="19.0" y="1877" width="0.2" height="15.0" fill="rgb(227,155,46)" rx="2" ry="2" />
<text  x="21.96" y="1887.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.02%)</title><rect x="720.3" y="1861" width="0.2" height="15.0" fill="rgb(254,104,20)" rx="2" ry="2" />
<text  x="723.32" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (2 samples, 0.04%)</title><rect x="19.8" y="1957" width="0.5" height="15.0" fill="rgb(226,227,43)" rx="2" ry="2" />
<text  x="22.84" y="1967.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="57.2" y="1541" width="0.2" height="15.0" fill="rgb(217,30,34)" rx="2" ry="2" />
<text  x="60.21" y="1551.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.19%)</title><rect x="438.4" y="1669" width="2.2" height="15.0" fill="rgb(216,171,31)" rx="2" ry="2" />
<text  x="441.38" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.02%)</title><rect x="865.9" y="1717" width="0.2" height="15.0" fill="rgb(222,174,52)" rx="2" ry="2" />
<text  x="868.88" y="1727.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (2 samples, 0.04%)</title><rect x="283.4" y="1653" width="0.5" height="15.0" fill="rgb(247,228,44)" rx="2" ry="2" />
<text  x="286.42" y="1663.5" ></text>
</g>
<g >
<title>abstract_type::get_string (1 samples, 0.02%)</title><rect x="100.9" y="1701" width="0.2" height="15.0" fill="rgb(237,78,47)" rx="2" ry="2" />
<text  x="103.92" y="1711.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (8 samples, 0.15%)</title><rect x="297.6" y="1749" width="1.8" height="15.0" fill="rgb(253,215,46)" rx="2" ry="2" />
<text  x="300.62" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="43.2" y="1749" width="0.2" height="15.0" fill="rgb(209,197,35)" rx="2" ry="2" />
<text  x="46.22" y="1759.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="899.8" y="1685" width="0.2" height="15.0" fill="rgb(233,206,28)" rx="2" ry="2" />
<text  x="902.75" y="1695.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.02%)</title><rect x="835.5" y="1813" width="0.2" height="15.0" fill="rgb(220,36,33)" rx="2" ry="2" />
<text  x="838.50" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (562 samples, 10.41%)</title><rect x="322.5" y="1781" width="122.9" height="15.0" fill="rgb(210,147,27)" rx="2" ry="2" />
<text  x="325.54" y="1791.5" >flat_mutation_r..</text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1011.2" y="1701" width="0.2" height="15.0" fill="rgb(209,116,42)" rx="2" ry="2" />
<text  x="1014.22" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (9 samples, 0.17%)</title><rect x="673.3" y="1877" width="2.0" height="15.0" fill="rgb(207,84,18)" rx="2" ry="2" />
<text  x="676.33" y="1887.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (10 samples, 0.19%)</title><rect x="1147.2" y="1893" width="2.1" height="15.0" fill="rgb(213,124,36)" rx="2" ry="2" />
<text  x="1150.16" y="1903.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, service::client_state::has_column_family_access (1 samples, 0.02%)</title><rect x="821.1" y="1813" width="0.2" height="15.0" fill="rgb(217,128,46)" rx="2" ry="2" />
<text  x="824.07" y="1823.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (73 samples, 1.35%)</title><rect x="1065.9" y="1749" width="15.9" height="15.0" fill="rgb(208,124,2)" rx="2" ry="2" />
<text  x="1068.86" y="1759.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="191.6" y="1669" width="0.5" height="15.0" fill="rgb(221,77,24)" rx="2" ry="2" />
<text  x="194.62" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="58.1" y="1557" width="0.2" height="15.0" fill="rgb(222,131,24)" rx="2" ry="2" />
<text  x="61.08" y="1567.5" ></text>
</g>
<g >
<title>seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="19.4" y="1797" width="0.2" height="15.0" fill="rgb(222,3,4)" rx="2" ry="2" />
<text  x="22.40" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="447.1" y="1749" width="0.2" height="15.0" fill="rgb(238,34,16)" rx="2" ry="2" />
<text  x="450.12" y="1759.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (2 samples, 0.04%)</title><rect x="295.2" y="1701" width="0.5" height="15.0" fill="rgb(244,213,51)" rx="2" ry="2" />
<text  x="298.22" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.20%)</title><rect x="954.4" y="1813" width="2.4" height="15.0" fill="rgb(242,210,29)" rx="2" ry="2" />
<text  x="957.39" y="1823.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="802.5" y="1541" width="0.2" height="15.0" fill="rgb(248,114,51)" rx="2" ry="2" />
<text  x="805.49" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1477" width="0.3" height="15.0" fill="rgb(236,124,8)" rx="2" ry="2" />
<text  x="13.44" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (8 samples, 0.15%)</title><rect x="54.1" y="1589" width="1.8" height="15.0" fill="rgb(245,218,20)" rx="2" ry="2" />
<text  x="57.15" y="1599.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="831.3" y="1749" width="0.3" height="15.0" fill="rgb(252,152,45)" rx="2" ry="2" />
<text  x="834.34" y="1759.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="679.7" y="1893" width="0.6" height="15.0" fill="rgb(217,114,30)" rx="2" ry="2" />
<text  x="682.66" y="1903.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1087.5" y="1781" width="0.2" height="15.0" fill="rgb(205,119,15)" rx="2" ry="2" />
<text  x="1090.50" y="1791.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="56.1" y="1669" width="0.2" height="15.0" fill="rgb(225,45,20)" rx="2" ry="2" />
<text  x="59.12" y="1679.5" ></text>
</g>
<g >
<title>sstables::sstable::filename (1 samples, 0.02%)</title><rect x="636.8" y="1861" width="0.2" height="15.0" fill="rgb(249,88,48)" rx="2" ry="2" />
<text  x="639.83" y="1871.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="978.4" y="1781" width="0.3" height="15.0" fill="rgb(212,163,50)" rx="2" ry="2" />
<text  x="981.43" y="1791.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (10 samples, 0.19%)</title><rect x="341.1" y="1605" width="2.2" height="15.0" fill="rgb(242,221,41)" rx="2" ry="2" />
<text  x="344.12" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (25 samples, 0.46%)</title><rect x="53.3" y="1717" width="5.4" height="15.0" fill="rgb(210,86,25)" rx="2" ry="2" />
<text  x="56.27" y="1727.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="295.9" y="1717" width="0.2" height="15.0" fill="rgb(214,122,30)" rx="2" ry="2" />
<text  x="298.88" y="1727.5" ></text>
</g>
<g >
<title>gms::version_generator::get_next_version (1 samples, 0.02%)</title><rect x="10.7" y="1717" width="0.2" height="15.0" fill="rgb(232,121,42)" rx="2" ry="2" />
<text  x="13.66" y="1727.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (44 samples, 0.81%)</title><rect x="502.0" y="1701" width="9.6" height="15.0" fill="rgb(215,152,35)" rx="2" ry="2" />
<text  x="504.98" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="613" width="2.9" height="15.0" fill="rgb(241,180,36)" rx="2" ry="2" />
<text  x="1189.94" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="62.9" y="1637" width="0.2" height="15.0" fill="rgb(246,147,18)" rx="2" ry="2" />
<text  x="65.89" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.11%)</title><rect x="695.4" y="1861" width="1.3" height="15.0" fill="rgb(210,53,2)" rx="2" ry="2" />
<text  x="698.40" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="10.7" y="1909" width="0.2" height="15.0" fill="rgb(245,102,54)" rx="2" ry="2" />
<text  x="13.66" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::maybe_reclaim (1 samples, 0.02%)</title><rect x="987.2" y="1669" width="0.2" height="15.0" fill="rgb(232,136,12)" rx="2" ry="2" />
<text  x="990.18" y="1679.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="868.1" y="1669" width="0.2" height="15.0" fill="rgb(225,7,37)" rx="2" ry="2" />
<text  x="871.06" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1167.7" y="1925" width="0.2" height="15.0" fill="rgb(234,183,22)" rx="2" ry="2" />
<text  x="1170.71" y="1935.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="188.8" y="1701" width="0.2" height="15.0" fill="rgb(242,217,12)" rx="2" ry="2" />
<text  x="191.78" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1029.6" y="1637" width="0.2" height="15.0" fill="rgb(227,3,23)" rx="2" ry="2" />
<text  x="1032.58" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (1 samples, 0.02%)</title><rect x="100.3" y="1749" width="0.2" height="15.0" fill="rgb(242,121,31)" rx="2" ry="2" />
<text  x="103.26" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="805" width="0.3" height="15.0" fill="rgb(240,171,48)" rx="2" ry="2" />
<text  x="13.44" y="815.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1144.3" y="1909" width="0.2" height="15.0" fill="rgb(225,176,12)" rx="2" ry="2" />
<text  x="1147.32" y="1919.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (144 samples, 2.67%)</title><rect x="213.0" y="1589" width="31.5" height="15.0" fill="rgb(227,200,9)" rx="2" ry="2" />
<text  x="216.04" y="1599.5" >cl..</text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="24.6" y="1637" width="0.3" height="15.0" fill="rgb(252,123,34)" rx="2" ry="2" />
<text  x="27.64" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="405" width="0.3" height="15.0" fill="rgb(240,26,48)" rx="2" ry="2" />
<text  x="13.44" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (18 samples, 0.33%)</title><rect x="797.9" y="1589" width="3.9" height="15.0" fill="rgb(207,205,1)" rx="2" ry="2" />
<text  x="800.91" y="1599.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (1 samples, 0.02%)</title><rect x="664.8" y="1877" width="0.2" height="15.0" fill="rgb(223,88,46)" rx="2" ry="2" />
<text  x="667.80" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="965" width="0.3" height="15.0" fill="rgb(251,38,18)" rx="2" ry="2" />
<text  x="13.44" y="975.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="685.6" y="1893" width="0.4" height="15.0" fill="rgb(244,140,25)" rx="2" ry="2" />
<text  x="688.57" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_stopIndex (1 samples, 0.02%)</title><rect x="31.0" y="1685" width="0.2" height="15.0" fill="rgb(227,217,26)" rx="2" ry="2" />
<text  x="33.98" y="1695.5" ></text>
</g>
<g >
<title>service::storage_proxy::hint_to_dead_endpoints&lt;utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt; (1 samples, 0.02%)</title><rect x="1126.2" y="1669" width="0.2" height="15.0" fill="rgb(213,6,38)" rx="2" ry="2" />
<text  x="1129.18" y="1679.5" ></text>
</g>
<g >
<title>make_combined_reader (92 samples, 1.70%)</title><rect x="463.3" y="1765" width="20.1" height="15.0" fill="rgb(229,128,30)" rx="2" ry="2" />
<text  x="466.29" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1168.1" y="1893" width="0.3" height="15.0" fill="rgb(239,217,38)" rx="2" ry="2" />
<text  x="1171.14" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (1 samples, 0.02%)</title><rect x="1023.9" y="1573" width="0.2" height="15.0" fill="rgb(227,200,23)" rx="2" ry="2" />
<text  x="1026.90" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (10 samples, 0.19%)</title><rect x="26.8" y="1717" width="2.2" height="15.0" fill="rgb(228,38,40)" rx="2" ry="2" />
<text  x="29.83" y="1727.5" ></text>
</g>
<g >
<title>__strlen_avx2 (10 samples, 0.19%)</title><rect x="1014.5" y="1669" width="2.2" height="15.0" fill="rgb(208,164,10)" rx="2" ry="2" />
<text  x="1017.50" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (2 samples, 0.04%)</title><rect x="151.4" y="1829" width="0.4" height="15.0" fill="rgb(208,56,41)" rx="2" ry="2" />
<text  x="154.41" y="1839.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="74.7" y="1749" width="0.2" height="15.0" fill="rgb(212,83,41)" rx="2" ry="2" />
<text  x="77.69" y="1759.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_value (1 samples, 0.02%)</title><rect x="87.8" y="1893" width="0.2" height="15.0" fill="rgb(230,28,5)" rx="2" ry="2" />
<text  x="90.81" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="61.4" y="1653" width="0.2" height="15.0" fill="rgb(234,224,0)" rx="2" ry="2" />
<text  x="64.36" y="1663.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (615 samples, 11.39%)</title><rect x="170.9" y="1781" width="134.4" height="15.0" fill="rgb(229,210,39)" rx="2" ry="2" />
<text  x="173.86" y="1791.5" >mutation_fragmen..</text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1129.2" y="1541" width="0.3" height="15.0" fill="rgb(247,164,5)" rx="2" ry="2" />
<text  x="1132.24" y="1551.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (11 samples, 0.20%)</title><rect x="852.3" y="1829" width="2.4" height="15.0" fill="rgb(228,44,25)" rx="2" ry="2" />
<text  x="855.33" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.02%)</title><rect x="868.9" y="1621" width="0.3" height="15.0" fill="rgb(227,146,11)" rx="2" ry="2" />
<text  x="871.94" y="1631.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (13 samples, 0.24%)</title><rect x="469.6" y="1701" width="2.9" height="15.0" fill="rgb(248,4,47)" rx="2" ry="2" />
<text  x="472.63" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="485" width="2.9" height="15.0" fill="rgb(226,167,37)" rx="2" ry="2" />
<text  x="1189.94" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1064.1" y="1717" width="0.2" height="15.0" fill="rgb(237,32,41)" rx="2" ry="2" />
<text  x="1067.11" y="1727.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="319.3" y="1829" width="0.2" height="15.0" fill="rgb(233,98,46)" rx="2" ry="2" />
<text  x="322.26" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1797" width="0.3" height="15.0" fill="rgb(227,138,42)" rx="2" ry="2" />
<text  x="13.44" y="1807.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (2 samples, 0.04%)</title><rect x="770.6" y="1829" width="0.4" height="15.0" fill="rgb(240,202,2)" rx="2" ry="2" />
<text  x="773.59" y="1839.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="62.9" y="1589" width="0.2" height="15.0" fill="rgb(213,207,0)" rx="2" ry="2" />
<text  x="65.89" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,110 samples, 20.56%)</title><rect x="875.3" y="1877" width="242.6" height="15.0" fill="rgb(210,57,40)" rx="2" ry="2" />
<text  x="878.28" y="1887.5" >seastar::noncopyable_function&lt;se..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1036.6" y="1685" width="0.2" height="15.0" fill="rgb(221,189,29)" rx="2" ry="2" />
<text  x="1039.57" y="1695.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.02%)</title><rect x="1188.3" y="181" width="0.2" height="15.0" fill="rgb(217,141,35)" rx="2" ry="2" />
<text  x="1191.25" y="191.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="46.3" y="1557" width="0.4" height="15.0" fill="rgb(227,23,37)" rx="2" ry="2" />
<text  x="49.28" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1877" width="2.9" height="15.0" fill="rgb(250,73,15)" rx="2" ry="2" />
<text  x="1189.94" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="618.2" y="1861" width="0.3" height="15.0" fill="rgb(221,197,14)" rx="2" ry="2" />
<text  x="621.25" y="1871.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="1131.2" y="1541" width="0.2" height="15.0" fill="rgb(212,142,22)" rx="2" ry="2" />
<text  x="1134.21" y="1551.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="40.8" y="1781" width="0.2" height="15.0" fill="rgb(210,1,13)" rx="2" ry="2" />
<text  x="43.82" y="1791.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="51.7" y="1653" width="0.3" height="15.0" fill="rgb(253,98,8)" rx="2" ry="2" />
<text  x="54.74" y="1663.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (12 samples, 0.22%)</title><rect x="628.5" y="1845" width="2.6" height="15.0" fill="rgb(220,169,19)" rx="2" ry="2" />
<text  x="631.52" y="1855.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;, cql3::query_processor::for_each_cql_result (1 samples, 0.02%)</title><rect x="636.4" y="1925" width="0.2" height="15.0" fill="rgb(215,68,6)" rx="2" ry="2" />
<text  x="639.39" y="1935.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (5 samples, 0.09%)</title><rect x="73.4" y="1765" width="1.1" height="15.0" fill="rgb(254,192,13)" rx="2" ry="2" />
<text  x="76.38" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1109" width="2.9" height="15.0" fill="rgb(241,182,54)" rx="2" ry="2" />
<text  x="1189.94" y="1119.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="47.6" y="1589" width="0.2" height="15.0" fill="rgb(206,204,4)" rx="2" ry="2" />
<text  x="50.59" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="127.6" y="1797" width="0.2" height="15.0" fill="rgb(254,154,7)" rx="2" ry="2" />
<text  x="130.58" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (69 samples, 1.28%)</title><rect x="25.7" y="1749" width="15.1" height="15.0" fill="rgb(229,116,29)" rx="2" ry="2" />
<text  x="28.74" y="1759.5" ></text>
</g>
<g >
<title>database::find_column_family (8 samples, 0.15%)</title><rect x="824.6" y="1765" width="1.7" height="15.0" fill="rgb(206,85,24)" rx="2" ry="2" />
<text  x="827.57" y="1775.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (2 samples, 0.04%)</title><rect x="194.5" y="1669" width="0.4" height="15.0" fill="rgb(254,221,54)" rx="2" ry="2" />
<text  x="197.46" y="1679.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="846.6" y="1829" width="0.5" height="15.0" fill="rgb(224,34,9)" rx="2" ry="2" />
<text  x="849.64" y="1839.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (6 samples, 0.11%)</title><rect x="307.2" y="1733" width="1.4" height="15.0" fill="rgb(209,15,1)" rx="2" ry="2" />
<text  x="310.24" y="1743.5" ></text>
</g>
<g >
<title>memtable::memtable_encoding_stats_collector::update (2 samples, 0.04%)</title><rect x="1119.6" y="1653" width="0.5" height="15.0" fill="rgb(236,49,49)" rx="2" ry="2" />
<text  x="1122.62" y="1663.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (9 samples, 0.17%)</title><rect x="675.9" y="1909" width="2.0" height="15.0" fill="rgb(218,39,50)" rx="2" ry="2" />
<text  x="678.95" y="1919.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.02%)</title><rect x="630.7" y="1813" width="0.2" height="15.0" fill="rgb(231,151,7)" rx="2" ry="2" />
<text  x="633.71" y="1823.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (3 samples, 0.06%)</title><rect x="71.2" y="1813" width="0.7" height="15.0" fill="rgb(248,130,30)" rx="2" ry="2" />
<text  x="74.20" y="1823.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (9 samples, 0.17%)</title><rect x="199.9" y="1637" width="2.0" height="15.0" fill="rgb(217,191,51)" rx="2" ry="2" />
<text  x="202.93" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::lw_shared_ptr&lt;schema const&gt;  (1 samples, 0.02%)</title><rect x="99.0" y="1861" width="0.2" height="15.0" fill="rgb(207,134,13)" rx="2" ry="2" />
<text  x="101.95" y="1871.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="631.4" y="1861" width="0.4" height="15.0" fill="rgb(216,130,19)" rx="2" ry="2" />
<text  x="634.36" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="648.2" y="1909" width="0.4" height="15.0" fill="rgb(221,143,29)" rx="2" ry="2" />
<text  x="651.19" y="1919.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1188.5" y="245" width="0.2" height="15.0" fill="rgb(226,174,48)" rx="2" ry="2" />
<text  x="1191.47" y="255.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_recognizer (1 samples, 0.02%)</title><rect x="50.2" y="1717" width="0.2" height="15.0" fill="rgb(235,42,1)" rx="2" ry="2" />
<text  x="53.21" y="1727.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (64 samples, 1.19%)</title><rect x="175.4" y="1733" width="14.0" height="15.0" fill="rgb(208,225,21)" rx="2" ry="2" />
<text  x="178.45" y="1743.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_e5391f1eed1c0aa1965864b177f1772e13a61139] (1 samples, 0.02%)</title><rect x="828.9" y="1717" width="0.3" height="15.0" fill="rgb(236,129,49)" rx="2" ry="2" />
<text  x="831.94" y="1727.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (66 samples, 1.22%)</title><rect x="219.6" y="1541" width="14.4" height="15.0" fill="rgb(209,39,21)" rx="2" ry="2" />
<text  x="222.60" y="1551.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.02%)</title><rect x="20.1" y="1861" width="0.2" height="15.0" fill="rgb(221,66,32)" rx="2" ry="2" />
<text  x="23.05" y="1871.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.02%)</title><rect x="1001.6" y="1717" width="0.2" height="15.0" fill="rgb(209,160,52)" rx="2" ry="2" />
<text  x="1004.60" y="1727.5" ></text>
</g>
<g >
<title>sstables::sstable::filename (1 samples, 0.02%)</title><rect x="636.8" y="1877" width="0.2" height="15.0" fill="rgb(245,108,23)" rx="2" ry="2" />
<text  x="639.83" y="1887.5" ></text>
</g>
<g >
<title>std::_Enable_default_constructor&lt;true, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt;::_Enable_default_constructor (1 samples, 0.02%)</title><rect x="53.9" y="1653" width="0.2" height="15.0" fill="rgb(226,12,15)" rx="2" ry="2" />
<text  x="56.93" y="1663.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (4 samples, 0.07%)</title><rect x="858.2" y="1861" width="0.9" height="15.0" fill="rgb(233,185,38)" rx="2" ry="2" />
<text  x="861.23" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::run_and_dispose (2 samples, 0.04%)</title><rect x="862.8" y="1925" width="0.5" height="15.0" fill="rgb(238,102,30)" rx="2" ry="2" />
<text  x="865.82" y="1935.5" ></text>
</g>
<g >
<title>cql3::untyped_result_set_row::get_list_data&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::back_insert_iterator&lt;std::vector&lt;cdc::stream_id, std::allocator&lt;cdc::stream_id&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="636.4" y="1861" width="0.2" height="15.0" fill="rgb(243,181,8)" rx="2" ry="2" />
<text  x="639.39" y="1871.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (2 samples, 0.04%)</title><rect x="311.0" y="1701" width="0.4" height="15.0" fill="rgb(238,100,37)" rx="2" ry="2" />
<text  x="313.96" y="1711.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.02%)</title><rect x="17.6" y="1941" width="0.3" height="15.0" fill="rgb(221,116,12)" rx="2" ry="2" />
<text  x="20.65" y="1951.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (1 samples, 0.02%)</title><rect x="613.4" y="1861" width="0.3" height="15.0" fill="rgb(253,104,31)" rx="2" ry="2" />
<text  x="616.44" y="1871.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (1 samples, 0.02%)</title><rect x="396.0" y="1621" width="0.2" height="15.0" fill="rgb(209,202,43)" rx="2" ry="2" />
<text  x="398.98" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="62.0" y="1717" width="0.2" height="15.0" fill="rgb(251,16,22)" rx="2" ry="2" />
<text  x="65.02" y="1727.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (9 samples, 0.17%)</title><rect x="752.2" y="1749" width="2.0" height="15.0" fill="rgb(252,224,54)" rx="2" ry="2" />
<text  x="755.23" y="1759.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (26 samples, 0.48%)</title><rect x="864.3" y="1845" width="5.7" height="15.0" fill="rgb(238,52,52)" rx="2" ry="2" />
<text  x="867.35" y="1855.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="56.8" y="1685" width="0.4" height="15.0" fill="rgb(205,144,52)" rx="2" ry="2" />
<text  x="59.77" y="1695.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (7 samples, 0.13%)</title><rect x="387.7" y="1589" width="1.5" height="15.0" fill="rgb(206,200,53)" rx="2" ry="2" />
<text  x="390.67" y="1599.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="686.4" y="1877" width="0.3" height="15.0" fill="rgb(253,16,24)" rx="2" ry="2" />
<text  x="689.44" y="1887.5" ></text>
</g>
<g >
<title>partition_builder::accept_row (1 samples, 0.02%)</title><rect x="99.6" y="1813" width="0.2" height="15.0" fill="rgb(211,111,9)" rx="2" ry="2" />
<text  x="102.61" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (8 samples, 0.15%)</title><rect x="54.1" y="1621" width="1.8" height="15.0" fill="rgb(250,68,2)" rx="2" ry="2" />
<text  x="57.15" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="186.8" y="1669" width="0.2" height="15.0" fill="rgb(235,7,32)" rx="2" ry="2" />
<text  x="189.81" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="24.9" y="1781" width="0.2" height="15.0" fill="rgb(241,225,37)" rx="2" ry="2" />
<text  x="27.86" y="1791.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="1146.5" y="1909" width="0.4" height="15.0" fill="rgb(224,152,46)" rx="2" ry="2" />
<text  x="1149.51" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="63.3" y="1701" width="0.2" height="15.0" fill="rgb(243,118,17)" rx="2" ry="2" />
<text  x="66.33" y="1711.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::signal (4 samples, 0.07%)</title><rect x="719.2" y="1877" width="0.9" height="15.0" fill="rgb(228,17,21)" rx="2" ry="2" />
<text  x="722.22" y="1887.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1187.2" y="357" width="0.2" height="15.0" fill="rgb(218,121,12)" rx="2" ry="2" />
<text  x="1190.16" y="367.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (3 samples, 0.06%)</title><rect x="214.1" y="1557" width="0.7" height="15.0" fill="rgb(223,134,32)" rx="2" ry="2" />
<text  x="217.13" y="1567.5" ></text>
</g>
<g >
<title>schema::column_at (6 samples, 0.11%)</title><rect x="418.0" y="1589" width="1.4" height="15.0" fill="rgb(212,142,41)" rx="2" ry="2" />
<text  x="421.05" y="1599.5" ></text>
</g>
<g >
<title>abstract_type::deserialize&lt;ser::buffer_view&lt;bytes_ostream::fragment_iterator&gt; &gt; (1 samples, 0.02%)</title><rect x="636.4" y="1845" width="0.2" height="15.0" fill="rgb(206,122,38)" rx="2" ry="2" />
<text  x="639.39" y="1855.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (591 samples, 10.95%)</title><rect x="960.3" y="1813" width="129.2" height="15.0" fill="rgb(239,149,12)" rx="2" ry="2" />
<text  x="963.29" y="1823.5" >service::storage..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="706.1" y="1909" width="0.2" height="15.0" fill="rgb(238,152,37)" rx="2" ry="2" />
<text  x="709.11" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.02%)</title><rect x="720.3" y="1653" width="0.2" height="15.0" fill="rgb(233,196,27)" rx="2" ry="2" />
<text  x="723.32" y="1663.5" ></text>
</g>
<g >
<title>is_system_keyspace (1 samples, 0.02%)</title><rect x="76.0" y="1781" width="0.2" height="15.0" fill="rgb(240,137,6)" rx="2" ry="2" />
<text  x="79.00" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (4 samples, 0.07%)</title><rect x="1151.1" y="1829" width="0.9" height="15.0" fill="rgb(248,13,34)" rx="2" ry="2" />
<text  x="1154.10" y="1839.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="81.3" y="1877" width="0.2" height="15.0" fill="rgb(253,197,4)" rx="2" ry="2" />
<text  x="84.25" y="1887.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (1 samples, 0.02%)</title><rect x="984.3" y="1765" width="0.3" height="15.0" fill="rgb(240,52,54)" rx="2" ry="2" />
<text  x="987.34" y="1775.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="132.6" y="1877" width="0.2" height="15.0" fill="rgb(251,174,34)" rx="2" ry="2" />
<text  x="135.61" y="1887.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (13 samples, 0.24%)</title><rect x="841.4" y="1813" width="2.8" height="15.0" fill="rgb(237,36,27)" rx="2" ry="2" />
<text  x="844.40" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="57.2" y="1525" width="0.2" height="15.0" fill="rgb(234,4,7)" rx="2" ry="2" />
<text  x="60.21" y="1535.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.02%)</title><rect x="1120.1" y="1653" width="0.2" height="15.0" fill="rgb(224,222,37)" rx="2" ry="2" />
<text  x="1123.06" y="1663.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (2 samples, 0.04%)</title><rect x="207.6" y="1653" width="0.4" height="15.0" fill="rgb(243,167,7)" rx="2" ry="2" />
<text  x="210.58" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (8 samples, 0.15%)</title><rect x="54.1" y="1557" width="1.8" height="15.0" fill="rgb(236,180,22)" rx="2" ry="2" />
<text  x="57.15" y="1567.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, gms::inet_address&gt;, std::allocator&lt;std::pair&lt;dht::token const, gms::inet_address&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="20.1" y="1797" width="0.2" height="15.0" fill="rgb(247,121,40)" rx="2" ry="2" />
<text  x="23.05" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1090.6" y="1829" width="0.2" height="15.0" fill="rgb(205,158,14)" rx="2" ry="2" />
<text  x="1093.56" y="1839.5" ></text>
</g>
<g >
<title>db::schema_tables::diff_table_or_view (2 samples, 0.04%)</title><rect x="99.0" y="1893" width="0.4" height="15.0" fill="rgb(247,102,50)" rx="2" ry="2" />
<text  x="101.95" y="1903.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="252.6" y="1589" width="0.7" height="15.0" fill="rgb(251,32,20)" rx="2" ry="2" />
<text  x="255.60" y="1599.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (1 samples, 0.02%)</title><rect x="614.5" y="1861" width="0.3" height="15.0" fill="rgb(246,196,15)" rx="2" ry="2" />
<text  x="617.53" y="1871.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation::data&gt;::operator (3 samples, 0.06%)</title><rect x="1133.4" y="1733" width="0.6" height="15.0" fill="rgb(224,93,19)" rx="2" ry="2" />
<text  x="1136.39" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_index_statement, std::default_delete&lt;cql3::statements::drop_index_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="66.0" y="1797" width="0.2" height="15.0" fill="rgb(208,218,34)" rx="2" ry="2" />
<text  x="68.95" y="1807.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="932.5" y="1765" width="0.5" height="15.0" fill="rgb(248,225,9)" rx="2" ry="2" />
<text  x="935.54" y="1775.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (5 samples, 0.09%)</title><rect x="20.3" y="1941" width="1.1" height="15.0" fill="rgb(219,174,30)" rx="2" ry="2" />
<text  x="23.27" y="1951.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (1 samples, 0.02%)</title><rect x="1021.3" y="1621" width="0.2" height="15.0" fill="rgb(217,46,38)" rx="2" ry="2" />
<text  x="1024.27" y="1631.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_e5391f1eed1c0aa1965864b177f1772e13a61139] (1 samples, 0.02%)</title><rect x="27.7" y="1589" width="0.2" height="15.0" fill="rgb(217,211,5)" rx="2" ry="2" />
<text  x="30.70" y="1599.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="790.9" y="1653" width="0.7" height="15.0" fill="rgb(252,48,46)" rx="2" ry="2" />
<text  x="793.91" y="1663.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="19.4" y="1573" width="0.2" height="15.0" fill="rgb(228,145,43)" rx="2" ry="2" />
<text  x="22.40" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1020.8" y="1605" width="0.3" height="15.0" fill="rgb(241,90,40)" rx="2" ry="2" />
<text  x="1023.84" y="1615.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (1 samples, 0.02%)</title><rect x="531.0" y="1669" width="0.3" height="15.0" fill="rgb(252,163,22)" rx="2" ry="2" />
<text  x="534.04" y="1679.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.02%)</title><rect x="17.4" y="1813" width="0.2" height="15.0" fill="rgb(220,148,42)" rx="2" ry="2" />
<text  x="20.43" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="1025.9" y="1557" width="0.2" height="15.0" fill="rgb(215,37,49)" rx="2" ry="2" />
<text  x="1028.86" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="62.0" y="1621" width="0.2" height="15.0" fill="rgb(224,160,21)" rx="2" ry="2" />
<text  x="65.02" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="45.2" y="1621" width="0.4" height="15.0" fill="rgb(238,151,44)" rx="2" ry="2" />
<text  x="48.19" y="1631.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (1 samples, 0.02%)</title><rect x="1188.5" y="85" width="0.2" height="15.0" fill="rgb(241,181,2)" rx="2" ry="2" />
<text  x="1191.47" y="95.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1253" width="0.3" height="15.0" fill="rgb(225,190,43)" rx="2" ry="2" />
<text  x="13.44" y="1263.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (7 samples, 0.13%)</title><rect x="341.6" y="1589" width="1.5" height="15.0" fill="rgb(251,167,48)" rx="2" ry="2" />
<text  x="344.55" y="1599.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="43.9" y="1589" width="0.2" height="15.0" fill="rgb(227,9,53)" rx="2" ry="2" />
<text  x="46.88" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;column_definition const*, column_definition const*, std::allocator&lt;column_definition const*&gt;, std::__detail::_Identity, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="652.3" y="1877" width="0.3" height="15.0" fill="rgb(205,73,7)" rx="2" ry="2" />
<text  x="655.34" y="1887.5" ></text>
</g>
<g >
<title>fmt::v7::detail::buffer&lt;char&gt;::push_back (1 samples, 0.02%)</title><rect x="21.1" y="1893" width="0.3" height="15.0" fill="rgb(219,171,47)" rx="2" ry="2" />
<text  x="24.15" y="1903.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (2 samples, 0.04%)</title><rect x="341.1" y="1589" width="0.5" height="15.0" fill="rgb(233,71,29)" rx="2" ry="2" />
<text  x="344.12" y="1599.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (1 samples, 0.02%)</title><rect x="530.0" y="1637" width="0.2" height="15.0" fill="rgb(235,146,18)" rx="2" ry="2" />
<text  x="532.95" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (5 samples, 0.09%)</title><rect x="596.8" y="1845" width="1.1" height="15.0" fill="rgb(231,139,29)" rx="2" ry="2" />
<text  x="599.83" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.04%)</title><rect x="902.6" y="1685" width="0.4" height="15.0" fill="rgb(222,53,17)" rx="2" ry="2" />
<text  x="905.59" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (2 samples, 0.04%)</title><rect x="130.0" y="1877" width="0.4" height="15.0" fill="rgb(246,118,40)" rx="2" ry="2" />
<text  x="132.99" y="1887.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (1 samples, 0.02%)</title><rect x="720.3" y="1797" width="0.2" height="15.0" fill="rgb(245,228,12)" rx="2" ry="2" />
<text  x="723.32" y="1807.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1188.3" y="293" width="0.2" height="15.0" fill="rgb(241,24,32)" rx="2" ry="2" />
<text  x="1191.25" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (5 samples, 0.09%)</title><rect x="1024.1" y="1573" width="1.1" height="15.0" fill="rgb(210,27,26)" rx="2" ry="2" />
<text  x="1027.11" y="1583.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.04%)</title><rect x="19.8" y="1941" width="0.5" height="15.0" fill="rgb(248,24,21)" rx="2" ry="2" />
<text  x="22.84" y="1951.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1101.0" y="1765" width="0.3" height="15.0" fill="rgb(207,219,31)" rx="2" ry="2" />
<text  x="1104.05" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::(anonymous namespace)::explode_conjunction (1 samples, 0.02%)</title><rect x="73.4" y="1717" width="0.2" height="15.0" fill="rgb(209,207,1)" rx="2" ry="2" />
<text  x="76.38" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="130.9" y="1877" width="0.4" height="15.0" fill="rgb(228,47,48)" rx="2" ry="2" />
<text  x="133.86" y="1887.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="997" width="2.9" height="15.0" fill="rgb(206,212,34)" rx="2" ry="2" />
<text  x="1189.94" y="1007.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (1 samples, 0.02%)</title><rect x="1131.9" y="1621" width="0.2" height="15.0" fill="rgb(238,188,25)" rx="2" ry="2" />
<text  x="1134.86" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="1187.4" y="101" width="0.2" height="15.0" fill="rgb(239,38,49)" rx="2" ry="2" />
<text  x="1190.38" y="111.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="615.4" y="1845" width="0.2" height="15.0" fill="rgb(223,133,37)" rx="2" ry="2" />
<text  x="618.41" y="1855.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="43.2" y="1573" width="0.2" height="15.0" fill="rgb(240,19,29)" rx="2" ry="2" />
<text  x="46.22" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="52.6" y="1685" width="0.2" height="15.0" fill="rgb(237,93,29)" rx="2" ry="2" />
<text  x="55.62" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (2 samples, 0.04%)</title><rect x="862.8" y="1909" width="0.5" height="15.0" fill="rgb(212,180,31)" rx="2" ry="2" />
<text  x="865.82" y="1919.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="45.2" y="1717" width="0.4" height="15.0" fill="rgb(223,163,29)" rx="2" ry="2" />
<text  x="48.19" y="1727.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="43.0" y="1765" width="0.2" height="15.0" fill="rgb(222,174,34)" rx="2" ry="2" />
<text  x="46.00" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (44 samples, 0.81%)</title><rect x="576.3" y="1749" width="9.6" height="15.0" fill="rgb(250,129,52)" rx="2" ry="2" />
<text  x="579.29" y="1759.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1138.2" y="1925" width="0.2" height="15.0" fill="rgb(224,205,30)" rx="2" ry="2" />
<text  x="1141.20" y="1935.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1189" width="2.9" height="15.0" fill="rgb(245,75,53)" rx="2" ry="2" />
<text  x="1189.94" y="1199.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="981" width="2.9" height="15.0" fill="rgb(216,75,36)" rx="2" ry="2" />
<text  x="1189.94" y="991.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.02%)</title><rect x="61.8" y="1685" width="0.2" height="15.0" fill="rgb(245,196,35)" rx="2" ry="2" />
<text  x="64.80" y="1695.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1477" width="2.9" height="15.0" fill="rgb(207,183,30)" rx="2" ry="2" />
<text  x="1189.94" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="594.2" y="1749" width="0.2" height="15.0" fill="rgb(245,28,30)" rx="2" ry="2" />
<text  x="597.21" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned long&gt;::allocate (1 samples, 0.02%)</title><rect x="69.7" y="1845" width="0.2" height="15.0" fill="rgb(230,200,1)" rx="2" ry="2" />
<text  x="72.67" y="1855.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (1 samples, 0.02%)</title><rect x="978.2" y="1781" width="0.2" height="15.0" fill="rgb(211,180,26)" rx="2" ry="2" />
<text  x="981.22" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1653" width="0.3" height="15.0" fill="rgb(213,68,51)" rx="2" ry="2" />
<text  x="13.44" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (70 samples, 1.30%)</title><rect x="25.5" y="1797" width="15.3" height="15.0" fill="rgb(212,150,6)" rx="2" ry="2" />
<text  x="28.52" y="1807.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (1 samples, 0.02%)</title><rect x="267.2" y="1669" width="0.3" height="15.0" fill="rgb(250,130,13)" rx="2" ry="2" />
<text  x="270.24" y="1679.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (20 samples, 0.37%)</title><rect x="183.3" y="1685" width="4.4" height="15.0" fill="rgb(217,193,23)" rx="2" ry="2" />
<text  x="186.32" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="810.4" y="1685" width="0.2" height="15.0" fill="rgb(230,30,13)" rx="2" ry="2" />
<text  x="813.36" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;&amp;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.02%)</title><rect x="23.6" y="1765" width="0.2" height="15.0" fill="rgb(228,199,45)" rx="2" ry="2" />
<text  x="26.55" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="1187.6" y="37" width="0.2" height="15.0" fill="rgb(245,99,8)" rx="2" ry="2" />
<text  x="1190.60" y="47.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (15 samples, 0.28%)</title><rect x="898.4" y="1701" width="3.3" height="15.0" fill="rgb(245,20,35)" rx="2" ry="2" />
<text  x="901.44" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1 samples, 0.02%)</title><rect x="1167.9" y="1813" width="0.2" height="15.0" fill="rgb(215,11,7)" rx="2" ry="2" />
<text  x="1170.93" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (4 samples, 0.07%)</title><rect x="682.5" y="1877" width="0.9" height="15.0" fill="rgb(224,46,30)" rx="2" ry="2" />
<text  x="685.51" y="1887.5" ></text>
</g>
<g >
<title>table::set_hit_rate (1 samples, 0.02%)</title><rect x="718.1" y="1893" width="0.2" height="15.0" fill="rgb(249,163,22)" rx="2" ry="2" />
<text  x="721.13" y="1903.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (1 samples, 0.02%)</title><rect x="566.5" y="1829" width="0.2" height="15.0" fill="rgb(237,29,13)" rx="2" ry="2" />
<text  x="569.45" y="1839.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (1 samples, 0.02%)</title><rect x="1188.5" y="117" width="0.2" height="15.0" fill="rgb(242,88,45)" rx="2" ry="2" />
<text  x="1191.47" y="127.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1083.3" y="1733" width="0.3" height="15.0" fill="rgb(225,193,19)" rx="2" ry="2" />
<text  x="1086.34" y="1743.5" ></text>
</g>
<g >
<title>boost::dynamic_bitset&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::dynamic_bitset (1 samples, 0.02%)</title><rect x="75.8" y="1781" width="0.2" height="15.0" fill="rgb(216,192,22)" rx="2" ry="2" />
<text  x="78.79" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="598.1" y="1845" width="0.3" height="15.0" fill="rgb(217,106,37)" rx="2" ry="2" />
<text  x="601.14" y="1855.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (1 samples, 0.02%)</title><rect x="1133.6" y="1669" width="0.2" height="15.0" fill="rgb(205,170,38)" rx="2" ry="2" />
<text  x="1136.61" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="45.0" y="1653" width="0.2" height="15.0" fill="rgb(211,176,20)" rx="2" ry="2" />
<text  x="47.97" y="1663.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (4 samples, 0.07%)</title><rect x="611.9" y="1861" width="0.9" height="15.0" fill="rgb(247,190,46)" rx="2" ry="2" />
<text  x="614.91" y="1871.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="694.5" y="1909" width="0.2" height="15.0" fill="rgb(222,138,30)" rx="2" ry="2" />
<text  x="697.53" y="1919.5" ></text>
</g>
<g >
<title>compound_type&lt; (16 samples, 0.30%)</title><rect x="507.4" y="1637" width="3.5" height="15.0" fill="rgb(209,50,9)" rx="2" ry="2" />
<text  x="510.44" y="1647.5" ></text>
</g>
<g >
<title>schema::get_partitioner (1 samples, 0.02%)</title><rect x="934.3" y="1813" width="0.2" height="15.0" fill="rgb(228,96,20)" rx="2" ry="2" />
<text  x="937.29" y="1823.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="848.6" y="1797" width="0.2" height="15.0" fill="rgb(252,71,7)" rx="2" ry="2" />
<text  x="851.61" y="1807.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.02%)</title><rect x="761.4" y="1781" width="0.2" height="15.0" fill="rgb(209,82,43)" rx="2" ry="2" />
<text  x="764.41" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (94 samples, 1.74%)</title><rect x="889.0" y="1781" width="20.6" height="15.0" fill="rgb(220,214,6)" rx="2" ry="2" />
<text  x="892.04" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="1038.8" y="1669" width="0.2" height="15.0" fill="rgb(248,219,49)" rx="2" ry="2" />
<text  x="1041.76" y="1679.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.02%)</title><rect x="1126.4" y="1669" width="0.2" height="15.0" fill="rgb(222,171,31)" rx="2" ry="2" />
<text  x="1129.40" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="1026.7" y="1589" width="0.3" height="15.0" fill="rgb(219,129,54)" rx="2" ry="2" />
<text  x="1029.74" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.5" y="181" width="0.2" height="15.0" fill="rgb(232,118,53)" rx="2" ry="2" />
<text  x="1191.47" y="191.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (3 samples, 0.06%)</title><rect x="227.0" y="1509" width="0.7" height="15.0" fill="rgb(221,53,10)" rx="2" ry="2" />
<text  x="230.03" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="72.1" y="1813" width="0.2" height="15.0" fill="rgb(239,154,23)" rx="2" ry="2" />
<text  x="75.07" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (3 samples, 0.06%)</title><rect x="913.7" y="1797" width="0.7" height="15.0" fill="rgb(249,54,33)" rx="2" ry="2" />
<text  x="916.74" y="1807.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (1 samples, 0.02%)</title><rect x="286.3" y="1637" width="0.2" height="15.0" fill="rgb(232,116,15)" rx="2" ry="2" />
<text  x="289.26" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="718.8" y="1893" width="0.4" height="15.0" fill="rgb(230,5,12)" rx="2" ry="2" />
<text  x="721.79" y="1903.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (51 samples, 0.94%)</title><rect x="684.3" y="1925" width="11.1" height="15.0" fill="rgb(232,169,47)" rx="2" ry="2" />
<text  x="687.25" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.02%)</title><rect x="626.3" y="1861" width="0.3" height="15.0" fill="rgb(245,40,26)" rx="2" ry="2" />
<text  x="629.34" y="1871.5" ></text>
</g>
<g >
<title>data_value::~data_value (1 samples, 0.02%)</title><rect x="101.1" y="1733" width="0.3" height="15.0" fill="rgb(232,36,44)" rx="2" ry="2" />
<text  x="104.14" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (3 samples, 0.06%)</title><rect x="1089.9" y="1813" width="0.7" height="15.0" fill="rgb(228,141,0)" rx="2" ry="2" />
<text  x="1092.90" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.04%)</title><rect x="1188.9" y="197" width="0.4" height="15.0" fill="rgb(254,58,46)" rx="2" ry="2" />
<text  x="1191.91" y="207.5" ></text>
</g>
<g >
<title>db::system_keyspace::update_compaction_history (1 samples, 0.02%)</title><rect x="720.3" y="1893" width="0.2" height="15.0" fill="rgb(232,47,30)" rx="2" ry="2" />
<text  x="723.32" y="1903.5" ></text>
</g>
<g >
<title>frozen_mutation::unfreeze (1 samples, 0.02%)</title><rect x="99.6" y="1845" width="0.2" height="15.0" fill="rgb(239,194,31)" rx="2" ry="2" />
<text  x="102.61" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (20 samples, 0.37%)</title><rect x="679.7" y="1909" width="4.3" height="15.0" fill="rgb(242,9,54)" rx="2" ry="2" />
<text  x="682.66" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::statements::drop_service_level_statement&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="66.8" y="1717" width="0.2" height="15.0" fill="rgb(243,221,29)" rx="2" ry="2" />
<text  x="69.83" y="1727.5" ></text>
</g>
<g >
<title>db::filter_for_query (3 samples, 0.06%)</title><rect x="1053.6" y="1765" width="0.7" height="15.0" fill="rgb(231,173,2)" rx="2" ry="2" />
<text  x="1056.62" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (5 samples, 0.09%)</title><rect x="285.2" y="1637" width="1.1" height="15.0" fill="rgb(229,151,1)" rx="2" ry="2" />
<text  x="288.17" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="24.2" y="1701" width="0.2" height="15.0" fill="rgb(206,145,14)" rx="2" ry="2" />
<text  x="27.21" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="62.2" y="1637" width="0.3" height="15.0" fill="rgb(241,201,43)" rx="2" ry="2" />
<text  x="65.24" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="533" width="0.3" height="15.0" fill="rgb(219,92,39)" rx="2" ry="2" />
<text  x="13.44" y="543.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.04%)</title><rect x="850.6" y="1781" width="0.4" height="15.0" fill="rgb(218,54,3)" rx="2" ry="2" />
<text  x="853.58" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonTokenStream (1 samples, 0.02%)</title><rect x="22.5" y="1845" width="0.2" height="15.0" fill="rgb(239,188,17)" rx="2" ry="2" />
<text  x="25.46" y="1855.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="416.1" y="1589" width="0.4" height="15.0" fill="rgb(239,28,28)" rx="2" ry="2" />
<text  x="419.08" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="42.6" y="1637" width="0.2" height="15.0" fill="rgb(253,103,4)" rx="2" ry="2" />
<text  x="45.57" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="53.5" y="1589" width="0.4" height="15.0" fill="rgb(248,70,49)" rx="2" ry="2" />
<text  x="56.49" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="79.3" y="1893" width="0.2" height="15.0" fill="rgb(238,223,11)" rx="2" ry="2" />
<text  x="82.28" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="642.5" y="1893" width="0.2" height="15.0" fill="rgb(249,195,45)" rx="2" ry="2" />
<text  x="645.51" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="17.4" y="2021" width="0.2" height="15.0" fill="rgb(234,221,43)" rx="2" ry="2" />
<text  x="20.43" y="2031.5" ></text>
</g>
<g >
<title>database::has_keyspace (8 samples, 0.15%)</title><rect x="829.8" y="1781" width="1.8" height="15.0" fill="rgb(224,175,10)" rx="2" ry="2" />
<text  x="832.81" y="1791.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (3 samples, 0.06%)</title><rect x="1140.8" y="1909" width="0.7" height="15.0" fill="rgb(239,187,43)" rx="2" ry="2" />
<text  x="1143.82" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="45.0" y="1637" width="0.2" height="15.0" fill="rgb(253,52,30)" rx="2" ry="2" />
<text  x="47.97" y="1647.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="940.8" y="1797" width="0.7" height="15.0" fill="rgb(238,227,18)" rx="2" ry="2" />
<text  x="943.84" y="1807.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="426.8" y="1653" width="0.2" height="15.0" fill="rgb(210,159,17)" rx="2" ry="2" />
<text  x="429.79" y="1663.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.02%)</title><rect x="1186.9" y="53" width="0.3" height="15.0" fill="rgb(246,165,51)" rx="2" ry="2" />
<text  x="1189.94" y="63.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="810.1" y="1685" width="0.3" height="15.0" fill="rgb(245,24,3)" rx="2" ry="2" />
<text  x="813.14" y="1695.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::future (1 samples, 0.02%)</title><rect x="761.6" y="1781" width="0.2" height="15.0" fill="rgb(253,121,30)" rx="2" ry="2" />
<text  x="764.62" y="1791.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (42 samples, 0.78%)</title><rect x="1124.9" y="1797" width="9.1" height="15.0" fill="rgb(207,215,21)" rx="2" ry="2" />
<text  x="1127.87" y="1807.5" ></text>
</g>
<g >
<title>cql3::query_processor::for_each_cql_result (1 samples, 0.02%)</title><rect x="636.4" y="1909" width="0.2" height="15.0" fill="rgb(244,54,11)" rx="2" ry="2" />
<text  x="639.39" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (2 samples, 0.04%)</title><rect x="22.7" y="1845" width="0.4" height="15.0" fill="rgb(213,176,7)" rx="2" ry="2" />
<text  x="25.68" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.06%)</title><rect x="434.9" y="1589" width="0.6" height="15.0" fill="rgb(228,52,26)" rx="2" ry="2" />
<text  x="437.88" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="1151.3" y="1797" width="0.7" height="15.0" fill="rgb(216,144,44)" rx="2" ry="2" />
<text  x="1154.32" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="680.3" y="1893" width="0.2" height="15.0" fill="rgb(215,12,42)" rx="2" ry="2" />
<text  x="683.32" y="1903.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3 samples, 0.06%)</title><rect x="695.6" y="1749" width="0.7" height="15.0" fill="rgb(236,60,23)" rx="2" ry="2" />
<text  x="698.62" y="1759.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.02%)</title><rect x="1187.2" y="69" width="0.2" height="15.0" fill="rgb(208,138,38)" rx="2" ry="2" />
<text  x="1190.16" y="79.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="53.5" y="1541" width="0.4" height="15.0" fill="rgb(230,203,42)" rx="2" ry="2" />
<text  x="56.49" y="1551.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (2 samples, 0.04%)</title><rect x="1187.8" y="117" width="0.5" height="15.0" fill="rgb(246,175,43)" rx="2" ry="2" />
<text  x="1190.81" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="774.7" y="1749" width="0.3" height="15.0" fill="rgb(229,115,29)" rx="2" ry="2" />
<text  x="777.74" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="725" width="0.3" height="15.0" fill="rgb(209,116,46)" rx="2" ry="2" />
<text  x="13.44" y="735.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (3 samples, 0.06%)</title><rect x="23.3" y="1845" width="0.7" height="15.0" fill="rgb(244,182,41)" rx="2" ry="2" />
<text  x="26.33" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1189" width="0.3" height="15.0" fill="rgb(247,93,15)" rx="2" ry="2" />
<text  x="13.44" y="1199.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (23 samples, 0.43%)</title><rect x="815.8" y="1781" width="5.1" height="15.0" fill="rgb(246,215,39)" rx="2" ry="2" />
<text  x="818.83" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.5" y="149" width="0.2" height="15.0" fill="rgb(244,115,29)" rx="2" ry="2" />
<text  x="1191.47" y="159.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (12 samples, 0.22%)</title><rect x="737.1" y="1781" width="2.7" height="15.0" fill="rgb(218,19,10)" rx="2" ry="2" />
<text  x="740.15" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="479.2" y="1685" width="0.7" height="15.0" fill="rgb(251,74,27)" rx="2" ry="2" />
<text  x="482.25" y="1695.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.02%)</title><rect x="21.6" y="1829" width="0.2" height="15.0" fill="rgb(223,164,23)" rx="2" ry="2" />
<text  x="24.58" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::drop_service_level_statement, std::default_delete&lt;cql3::statements::drop_service_level_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="66.8" y="1781" width="0.2" height="15.0" fill="rgb(205,28,47)" rx="2" ry="2" />
<text  x="69.83" y="1791.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (7 samples, 0.13%)</title><rect x="155.8" y="1861" width="1.5" height="15.0" fill="rgb(217,102,43)" rx="2" ry="2" />
<text  x="158.78" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="885" width="0.3" height="15.0" fill="rgb(244,58,39)" rx="2" ry="2" />
<text  x="13.44" y="895.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.02%)</title><rect x="100.9" y="1813" width="0.2" height="15.0" fill="rgb(223,154,11)" rx="2" ry="2" />
<text  x="103.92" y="1823.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (1 samples, 0.02%)</title><rect x="714.2" y="1845" width="0.2" height="15.0" fill="rgb(211,13,34)" rx="2" ry="2" />
<text  x="717.20" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;column_definition const*, std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (1 samples, 0.02%)</title><rect x="74.7" y="1781" width="0.2" height="15.0" fill="rgb(221,216,3)" rx="2" ry="2" />
<text  x="77.69" y="1791.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="17.6" y="1877" width="0.3" height="15.0" fill="rgb(233,4,12)" rx="2" ry="2" />
<text  x="20.65" y="1887.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1573" width="2.9" height="15.0" fill="rgb(223,62,17)" rx="2" ry="2" />
<text  x="1189.94" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (13 samples, 0.24%)</title><rect x="811.9" y="1749" width="2.8" height="15.0" fill="rgb(253,155,12)" rx="2" ry="2" />
<text  x="814.89" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (1 samples, 0.02%)</title><rect x="25.5" y="1749" width="0.2" height="15.0" fill="rgb(232,175,42)" rx="2" ry="2" />
<text  x="28.52" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.11%)</title><rect x="955.5" y="1797" width="1.3" height="15.0" fill="rgb(238,206,39)" rx="2" ry="2" />
<text  x="958.49" y="1807.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (1,133 samples, 20.99%)</title><rect x="870.2" y="1909" width="247.7" height="15.0" fill="rgb(242,213,42)" rx="2" ry="2" />
<text  x="873.25" y="1919.5" >seastar::concrete_execution_stag..</text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (19 samples, 0.35%)</title><rect x="750.9" y="1797" width="4.2" height="15.0" fill="rgb(229,197,36)" rx="2" ry="2" />
<text  x="753.91" y="1807.5" ></text>
</g>
<g >
<title>query_state::query_state (17 samples, 0.31%)</title><rect x="606.4" y="1861" width="3.8" height="15.0" fill="rgb(220,164,45)" rx="2" ry="2" />
<text  x="609.45" y="1871.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (5 samples, 0.09%)</title><rect x="464.2" y="1749" width="1.1" height="15.0" fill="rgb(219,11,26)" rx="2" ry="2" />
<text  x="467.17" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="623.7" y="1829" width="0.2" height="15.0" fill="rgb(211,211,26)" rx="2" ry="2" />
<text  x="626.71" y="1839.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (10 samples, 0.19%)</title><rect x="237.1" y="1525" width="2.2" height="15.0" fill="rgb(232,106,5)" rx="2" ry="2" />
<text  x="240.08" y="1535.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (20 samples, 0.37%)</title><rect x="1128.8" y="1733" width="4.4" height="15.0" fill="rgb(221,102,38)" rx="2" ry="2" />
<text  x="1131.80" y="1743.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1187.4" y="181" width="0.2" height="15.0" fill="rgb(219,0,22)" rx="2" ry="2" />
<text  x="1190.38" y="191.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="533" width="2.9" height="15.0" fill="rgb(209,3,41)" rx="2" ry="2" />
<text  x="1189.94" y="543.5" ></text>
</g>
<g >
<title>seastar::file_data_sink_impl::~file_data_sink_impl (1 samples, 0.02%)</title><rect x="18.3" y="1877" width="0.2" height="15.0" fill="rgb(224,121,31)" rx="2" ry="2" />
<text  x="21.31" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (42 samples, 0.78%)</title><rect x="119.5" y="1861" width="9.2" height="15.0" fill="rgb(248,121,19)" rx="2" ry="2" />
<text  x="122.50" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (2 samples, 0.04%)</title><rect x="48.2" y="1621" width="0.5" height="15.0" fill="rgb(206,225,4)" rx="2" ry="2" />
<text  x="51.25" y="1631.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (4 samples, 0.07%)</title><rect x="361.7" y="1605" width="0.8" height="15.0" fill="rgb(213,27,52)" rx="2" ry="2" />
<text  x="364.66" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (27 samples, 0.50%)</title><rect x="864.3" y="1877" width="5.9" height="15.0" fill="rgb(224,200,5)" rx="2" ry="2" />
<text  x="867.35" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1187.6" y="149" width="0.2" height="15.0" fill="rgb(207,55,37)" rx="2" ry="2" />
<text  x="1190.60" y="159.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (1 samples, 0.02%)</title><rect x="400.8" y="1637" width="0.2" height="15.0" fill="rgb(234,94,1)" rx="2" ry="2" />
<text  x="403.78" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (43 samples, 0.80%)</title><rect x="30.1" y="1701" width="9.4" height="15.0" fill="rgb(215,68,42)" rx="2" ry="2" />
<text  x="33.11" y="1711.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (5 samples, 0.09%)</title><rect x="323.4" y="1733" width="1.1" height="15.0" fill="rgb(253,56,0)" rx="2" ry="2" />
<text  x="326.41" y="1743.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="1138.6" y="1925" width="0.3" height="15.0" fill="rgb(222,76,43)" rx="2" ry="2" />
<text  x="1141.64" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="809.5" y="1685" width="0.2" height="15.0" fill="rgb(219,203,12)" rx="2" ry="2" />
<text  x="812.49" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (28 samples, 0.52%)</title><rect x="864.1" y="1893" width="6.1" height="15.0" fill="rgb(244,53,41)" rx="2" ry="2" />
<text  x="867.13" y="1903.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="641.9" y="1893" width="0.6" height="15.0" fill="rgb(208,38,23)" rx="2" ry="2" />
<text  x="644.85" y="1903.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="575.0" y="1717" width="0.2" height="15.0" fill="rgb(211,20,22)" rx="2" ry="2" />
<text  x="577.97" y="1727.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="747.2" y="1797" width="0.2" height="15.0" fill="rgb(226,213,37)" rx="2" ry="2" />
<text  x="750.20" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (13 samples, 0.24%)</title><rect x="867.2" y="1797" width="2.8" height="15.0" fill="rgb(242,0,40)" rx="2" ry="2" />
<text  x="870.19" y="1807.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="535.0" y="1701" width="0.9" height="15.0" fill="rgb(248,146,14)" rx="2" ry="2" />
<text  x="537.98" y="1711.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1187.4" y="357" width="0.2" height="15.0" fill="rgb(252,199,20)" rx="2" ry="2" />
<text  x="1190.38" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="304.6" y="1749" width="0.7" height="15.0" fill="rgb(223,52,11)" rx="2" ry="2" />
<text  x="307.62" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="2037" width="2.9" height="15.0" fill="rgb(251,57,52)" rx="2" ry="2" />
<text  x="1189.94" y="2047.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (1 samples, 0.02%)</title><rect x="585.7" y="1733" width="0.2" height="15.0" fill="rgb(224,32,37)" rx="2" ry="2" />
<text  x="588.68" y="1743.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="828.3" y="1717" width="0.2" height="15.0" fill="rgb(238,151,9)" rx="2" ry="2" />
<text  x="831.28" y="1727.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (4 samples, 0.07%)</title><rect x="947.8" y="1845" width="0.9" height="15.0" fill="rgb(211,52,45)" rx="2" ry="2" />
<text  x="950.84" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.04%)</title><rect x="126.1" y="1797" width="0.4" height="15.0" fill="rgb(207,178,45)" rx="2" ry="2" />
<text  x="129.05" y="1807.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="194.0" y="1669" width="0.5" height="15.0" fill="rgb(205,25,0)" rx="2" ry="2" />
<text  x="197.03" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="41.7" y="1685" width="0.4" height="15.0" fill="rgb(251,165,2)" rx="2" ry="2" />
<text  x="44.69" y="1695.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="10.0" y="2037" width="0.2" height="15.0" fill="rgb(254,78,49)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>schema_registry::get_or_load (1 samples, 0.02%)</title><rect x="99.2" y="1829" width="0.2" height="15.0" fill="rgb(238,38,24)" rx="2" ry="2" />
<text  x="102.17" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="63.3" y="1669" width="0.2" height="15.0" fill="rgb(234,169,5)" rx="2" ry="2" />
<text  x="66.33" y="1679.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, auth::permissions_cache::get (1 samples, 0.02%)</title><rect x="808.6" y="1701" width="0.2" height="15.0" fill="rgb(217,194,7)" rx="2" ry="2" />
<text  x="811.61" y="1711.5" ></text>
</g>
<g >
<title>compound_type&lt; (5 samples, 0.09%)</title><rect x="917.9" y="1797" width="1.1" height="15.0" fill="rgb(210,181,37)" rx="2" ry="2" />
<text  x="920.89" y="1807.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (4 samples, 0.07%)</title><rect x="73.4" y="1749" width="0.9" height="15.0" fill="rgb(212,119,0)" rx="2" ry="2" />
<text  x="76.38" y="1759.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="51.7" y="1589" width="0.3" height="15.0" fill="rgb(229,173,1)" rx="2" ry="2" />
<text  x="54.74" y="1599.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (44 samples, 0.81%)</title><rect x="543.3" y="1749" width="9.6" height="15.0" fill="rgb(237,173,41)" rx="2" ry="2" />
<text  x="546.28" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="45.2" y="1653" width="0.4" height="15.0" fill="rgb(237,11,31)" rx="2" ry="2" />
<text  x="48.19" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="1134.9" y="1925" width="0.5" height="15.0" fill="rgb(221,208,28)" rx="2" ry="2" />
<text  x="1137.92" y="1935.5" ></text>
</g>
<g >
<title>partition_entry::partition_entry (1 samples, 0.02%)</title><rect x="1118.5" y="1557" width="0.2" height="15.0" fill="rgb(244,202,43)" rx="2" ry="2" />
<text  x="1121.53" y="1567.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (294 samples, 5.45%)</title><rect x="980.4" y="1781" width="64.3" height="15.0" fill="rgb(233,213,35)" rx="2" ry="2" />
<text  x="983.40" y="1791.5" >service..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="10.7" y="1989" width="0.2" height="15.0" fill="rgb(216,8,46)" rx="2" ry="2" />
<text  x="13.66" y="1999.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (7 samples, 0.13%)</title><rect x="760.3" y="1797" width="1.5" height="15.0" fill="rgb(221,101,50)" rx="2" ry="2" />
<text  x="763.31" y="1807.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (18 samples, 0.33%)</title><rect x="943.7" y="1829" width="3.9" height="15.0" fill="rgb(205,7,34)" rx="2" ry="2" />
<text  x="946.68" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="89.3" y="1909" width="0.3" height="15.0" fill="rgb(251,6,49)" rx="2" ry="2" />
<text  x="92.34" y="1919.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (4 samples, 0.07%)</title><rect x="849.7" y="1781" width="0.9" height="15.0" fill="rgb(254,222,0)" rx="2" ry="2" />
<text  x="852.70" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="57.0" y="1621" width="0.2" height="15.0" fill="rgb(233,11,53)" rx="2" ry="2" />
<text  x="59.99" y="1631.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (5 samples, 0.09%)</title><rect x="1147.6" y="1877" width="1.1" height="15.0" fill="rgb(225,180,52)" rx="2" ry="2" />
<text  x="1150.60" y="1887.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (4 samples, 0.07%)</title><rect x="907.2" y="1733" width="0.9" height="15.0" fill="rgb(246,201,38)" rx="2" ry="2" />
<text  x="910.18" y="1743.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (2 samples, 0.04%)</title><rect x="188.1" y="1685" width="0.5" height="15.0" fill="rgb(225,59,29)" rx="2" ry="2" />
<text  x="191.13" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (7 samples, 0.13%)</title><rect x="1090.8" y="1829" width="1.5" height="15.0" fill="rgb(221,206,15)" rx="2" ry="2" />
<text  x="1093.77" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="1152.2" y="1877" width="0.6" height="15.0" fill="rgb(248,214,36)" rx="2" ry="2" />
<text  x="1155.19" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (3 samples, 0.06%)</title><rect x="737.4" y="1749" width="0.6" height="15.0" fill="rgb(240,150,46)" rx="2" ry="2" />
<text  x="740.36" y="1759.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.04%)</title><rect x="1188.9" y="213" width="0.4" height="15.0" fill="rgb(221,68,48)" rx="2" ry="2" />
<text  x="1191.91" y="223.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (1 samples, 0.02%)</title><rect x="714.4" y="1861" width="0.2" height="15.0" fill="rgb(224,217,52)" rx="2" ry="2" />
<text  x="717.42" y="1871.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="649.1" y="1909" width="0.2" height="15.0" fill="rgb(232,26,20)" rx="2" ry="2" />
<text  x="652.07" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (9 samples, 0.17%)</title><rect x="427.4" y="1653" width="2.0" height="15.0" fill="rgb(241,27,6)" rx="2" ry="2" />
<text  x="430.45" y="1663.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (48 samples, 0.89%)</title><rect x="341.1" y="1621" width="10.5" height="15.0" fill="rgb(224,175,46)" rx="2" ry="2" />
<text  x="344.12" y="1631.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (1 samples, 0.02%)</title><rect x="22.9" y="1813" width="0.2" height="15.0" fill="rgb(221,137,2)" rx="2" ry="2" />
<text  x="25.89" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="61.4" y="1717" width="0.2" height="15.0" fill="rgb(213,46,9)" rx="2" ry="2" />
<text  x="64.36" y="1727.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1122.7" y="1621" width="0.2" height="15.0" fill="rgb(206,149,49)" rx="2" ry="2" />
<text  x="1125.68" y="1631.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.02%)</title><rect x="868.9" y="1653" width="0.3" height="15.0" fill="rgb(218,116,27)" rx="2" ry="2" />
<text  x="871.94" y="1663.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (27 samples, 0.50%)</title><rect x="1118.1" y="1749" width="5.9" height="15.0" fill="rgb(230,93,28)" rx="2" ry="2" />
<text  x="1121.09" y="1759.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.02%)</title><rect x="204.1" y="1637" width="0.2" height="15.0" fill="rgb(232,175,26)" rx="2" ry="2" />
<text  x="207.08" y="1647.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1130.6" y="1525" width="0.2" height="15.0" fill="rgb(244,27,50)" rx="2" ry="2" />
<text  x="1133.55" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="58.5" y="1541" width="0.2" height="15.0" fill="rgb(249,213,21)" rx="2" ry="2" />
<text  x="61.52" y="1551.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (1 samples, 0.02%)</title><rect x="78.0" y="1909" width="0.2" height="15.0" fill="rgb(253,166,37)" rx="2" ry="2" />
<text  x="80.97" y="1919.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="18.3" y="1957" width="0.2" height="15.0" fill="rgb(245,47,3)" rx="2" ry="2" />
<text  x="21.31" y="1967.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;ser::buffer_view&lt;bytes_ostream::fragment_iterator&gt; &gt; (1 samples, 0.02%)</title><rect x="1120.1" y="1637" width="0.2" height="15.0" fill="rgb(252,30,28)" rx="2" ry="2" />
<text  x="1123.06" y="1647.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.02%)</title><rect x="1187.2" y="53" width="0.2" height="15.0" fill="rgb(205,92,31)" rx="2" ry="2" />
<text  x="1190.16" y="63.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="81.3" y="1781" width="0.2" height="15.0" fill="rgb(208,19,11)" rx="2" ry="2" />
<text  x="84.25" y="1791.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (1 samples, 0.02%)</title><rect x="300.7" y="1765" width="0.2" height="15.0" fill="rgb(212,40,47)" rx="2" ry="2" />
<text  x="303.68" y="1775.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (1 samples, 0.02%)</title><rect x="1047.3" y="1765" width="0.2" height="15.0" fill="rgb(230,158,34)" rx="2" ry="2" />
<text  x="1050.28" y="1775.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="820.2" y="1685" width="0.4" height="15.0" fill="rgb(225,78,14)" rx="2" ry="2" />
<text  x="823.20" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (5 samples, 0.09%)</title><rect x="938.9" y="1829" width="1.1" height="15.0" fill="rgb(236,229,22)" rx="2" ry="2" />
<text  x="941.88" y="1839.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="644.0" y="1877" width="0.5" height="15.0" fill="rgb(254,228,9)" rx="2" ry="2" />
<text  x="647.04" y="1887.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1188.5" y="229" width="0.2" height="15.0" fill="rgb(237,193,15)" rx="2" ry="2" />
<text  x="1191.47" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="542.6" y="1749" width="0.2" height="15.0" fill="rgb(237,66,8)" rx="2" ry="2" />
<text  x="545.63" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (6 samples, 0.11%)</title><rect x="94.1" y="1893" width="1.4" height="15.0" fill="rgb(242,165,44)" rx="2" ry="2" />
<text  x="97.15" y="1903.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="53.3" y="1557" width="0.2" height="15.0" fill="rgb(253,192,26)" rx="2" ry="2" />
<text  x="56.27" y="1567.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (25 samples, 0.46%)</title><rect x="942.4" y="1845" width="5.4" height="15.0" fill="rgb(227,200,46)" rx="2" ry="2" />
<text  x="945.37" y="1855.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (3 samples, 0.06%)</title><rect x="714.6" y="1861" width="0.7" height="15.0" fill="rgb(251,6,3)" rx="2" ry="2" />
<text  x="717.63" y="1871.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.02%)</title><rect x="19.8" y="1813" width="0.3" height="15.0" fill="rgb(247,28,5)" rx="2" ry="2" />
<text  x="22.84" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="24.2" y="1813" width="0.2" height="15.0" fill="rgb(248,43,23)" rx="2" ry="2" />
<text  x="27.21" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.52%)</title><rect x="1118.1" y="1797" width="6.1" height="15.0" fill="rgb(213,25,25)" rx="2" ry="2" />
<text  x="1121.09" y="1807.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;gms::application_state, std::pair&lt;gms::application_state const, gms::versioned_value&gt;, std::_Select1st&lt;std::pair&lt;gms::application_state const, gms::versioned_value&gt; &gt;, std::less&lt;gms::application_state&gt;, std::allocator&lt;std::pair&lt;gms::application_state const, gms::versioned_value&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;gms::application_state const&amp;&gt;, std::tuple&lt;&gt; &gt; (1 samples, 0.02%)</title><rect x="19.6" y="1813" width="0.2" height="15.0" fill="rgb(216,161,39)" rx="2" ry="2" />
<text  x="22.62" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1493" width="2.9" height="15.0" fill="rgb(254,122,40)" rx="2" ry="2" />
<text  x="1189.94" y="1503.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="1133.4" y="1717" width="0.2" height="15.0" fill="rgb(233,182,10)" rx="2" ry="2" />
<text  x="1136.39" y="1727.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1188.3" y="261" width="0.2" height="15.0" fill="rgb(209,7,13)" rx="2" ry="2" />
<text  x="1191.25" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (1 samples, 0.02%)</title><rect x="978.9" y="1781" width="0.2" height="15.0" fill="rgb(244,28,27)" rx="2" ry="2" />
<text  x="981.87" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="593.6" y="1765" width="0.2" height="15.0" fill="rgb(213,224,3)" rx="2" ry="2" />
<text  x="596.55" y="1775.5" ></text>
</g>
<g >
<title>ser::mutation_partition__static_row&lt;bytes_ostream&gt;::mutation_partition__static_row (1 samples, 0.02%)</title><rect x="1131.0" y="1589" width="0.2" height="15.0" fill="rgb(209,160,36)" rx="2" ry="2" />
<text  x="1133.99" y="1599.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="258.7" y="1557" width="0.2" height="15.0" fill="rgb(207,10,23)" rx="2" ry="2" />
<text  x="261.72" y="1567.5" ></text>
</g>
<g >
<title>seastar::reactor::run (4,982 samples, 92.28%)</title><rect x="82.1" y="1973" width="1088.9" height="15.0" fill="rgb(254,26,35)" rx="2" ry="2" />
<text  x="85.12" y="1983.5" >seastar::reactor::run</text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (1 samples, 0.02%)</title><rect x="1144.8" y="1893" width="0.2" height="15.0" fill="rgb(237,218,33)" rx="2" ry="2" />
<text  x="1147.76" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="1017.8" y="1653" width="1.3" height="15.0" fill="rgb(208,4,36)" rx="2" ry="2" />
<text  x="1020.78" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="437" width="0.3" height="15.0" fill="rgb(210,66,42)" rx="2" ry="2" />
<text  x="13.44" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2 samples, 0.04%)</title><rect x="877.5" y="1861" width="0.4" height="15.0" fill="rgb(220,170,23)" rx="2" ry="2" />
<text  x="880.46" y="1871.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.02%)</title><rect x="1098.9" y="1797" width="0.2" height="15.0" fill="rgb(250,160,7)" rx="2" ry="2" />
<text  x="1101.86" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (3 samples, 0.06%)</title><rect x="669.8" y="1909" width="0.7" height="15.0" fill="rgb(237,63,5)" rx="2" ry="2" />
<text  x="672.83" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="1163.6" y="1877" width="0.4" height="15.0" fill="rgb(254,150,11)" rx="2" ry="2" />
<text  x="1166.55" y="1887.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="717.3" y="1845" width="0.2" height="15.0" fill="rgb(236,110,11)" rx="2" ry="2" />
<text  x="720.26" y="1855.5" ></text>
</g>
<g >
<title>database::find_schema (27 samples, 0.50%)</title><rect x="764.7" y="1829" width="5.9" height="15.0" fill="rgb(246,5,28)" rx="2" ry="2" />
<text  x="767.68" y="1839.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (2 samples, 0.04%)</title><rect x="345.9" y="1589" width="0.5" height="15.0" fill="rgb(221,205,27)" rx="2" ry="2" />
<text  x="348.93" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="1145.9" y="1909" width="0.2" height="15.0" fill="rgb(252,87,34)" rx="2" ry="2" />
<text  x="1148.85" y="1919.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="1133.6" y="1701" width="0.4" height="15.0" fill="rgb(245,198,29)" rx="2" ry="2" />
<text  x="1136.61" y="1711.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (1 samples, 0.02%)</title><rect x="594.6" y="1765" width="0.3" height="15.0" fill="rgb(207,68,37)" rx="2" ry="2" />
<text  x="597.65" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="779.3" y="1717" width="0.7" height="15.0" fill="rgb(254,175,44)" rx="2" ry="2" />
<text  x="782.33" y="1727.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::create_type_statement*, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="66.6" y="1749" width="0.2" height="15.0" fill="rgb(248,85,0)" rx="2" ry="2" />
<text  x="69.61" y="1759.5" ></text>
</g>
<g >
<title>auth::resource::parent (15 samples, 0.28%)</title><rect x="780.6" y="1749" width="3.3" height="15.0" fill="rgb(212,21,12)" rx="2" ry="2" />
<text  x="783.64" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="63.1" y="1717" width="0.2" height="15.0" fill="rgb(250,94,37)" rx="2" ry="2" />
<text  x="66.11" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1685" width="0.3" height="15.0" fill="rgb(226,10,45)" rx="2" ry="2" />
<text  x="13.44" y="1695.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (1 samples, 0.02%)</title><rect x="1132.3" y="1557" width="0.2" height="15.0" fill="rgb(250,111,1)" rx="2" ry="2" />
<text  x="1135.30" y="1567.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::add_restriction (3 samples, 0.06%)</title><rect x="73.6" y="1733" width="0.7" height="15.0" fill="rgb(206,40,23)" rx="2" ry="2" />
<text  x="76.60" y="1743.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.04%)</title><rect x="656.3" y="1893" width="0.4" height="15.0" fill="rgb(212,126,11)" rx="2" ry="2" />
<text  x="659.28" y="1903.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (6 samples, 0.11%)</title><rect x="265.3" y="1653" width="1.3" height="15.0" fill="rgb(247,191,35)" rx="2" ry="2" />
<text  x="268.28" y="1663.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (2 samples, 0.04%)</title><rect x="686.2" y="1893" width="0.5" height="15.0" fill="rgb(222,58,33)" rx="2" ry="2" />
<text  x="689.22" y="1903.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (1 samples, 0.02%)</title><rect x="366.3" y="1605" width="0.2" height="15.0" fill="rgb(236,78,33)" rx="2" ry="2" />
<text  x="369.25" y="1615.5" ></text>
</g>
<g >
<title>set_field&lt;long&gt; (1 samples, 0.02%)</title><rect x="1120.1" y="1621" width="0.2" height="15.0" fill="rgb(231,112,48)" rx="2" ry="2" />
<text  x="1123.06" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="651.7" y="1797" width="0.2" height="15.0" fill="rgb(247,160,16)" rx="2" ry="2" />
<text  x="654.69" y="1807.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="123.7" y="1813" width="0.2" height="15.0" fill="rgb(222,67,3)" rx="2" ry="2" />
<text  x="126.65" y="1823.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (2 samples, 0.04%)</title><rect x="568.2" y="1829" width="0.4" height="15.0" fill="rgb(241,115,32)" rx="2" ry="2" />
<text  x="571.20" y="1839.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="18.1" y="1893" width="0.2" height="15.0" fill="rgb(217,182,8)" rx="2" ry="2" />
<text  x="21.09" y="1903.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.02%)</title><rect x="1133.8" y="1669" width="0.2" height="15.0" fill="rgb(245,39,33)" rx="2" ry="2" />
<text  x="1136.83" y="1679.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1187.6" y="309" width="0.2" height="15.0" fill="rgb(236,174,20)" rx="2" ry="2" />
<text  x="1190.60" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (2 samples, 0.04%)</title><rect x="1165.7" y="1845" width="0.5" height="15.0" fill="rgb(226,63,45)" rx="2" ry="2" />
<text  x="1168.74" y="1855.5" ></text>
</g>
<g >
<title>schema_registry::get (19 samples, 0.35%)</title><rect x="973.6" y="1781" width="4.2" height="15.0" fill="rgb(230,197,51)" rx="2" ry="2" />
<text  x="976.63" y="1791.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (1 samples, 0.02%)</title><rect x="843.4" y="1797" width="0.2" height="15.0" fill="rgb(246,138,11)" rx="2" ry="2" />
<text  x="846.37" y="1807.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="445.6" y="1781" width="0.2" height="15.0" fill="rgb(243,23,48)" rx="2" ry="2" />
<text  x="448.59" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (2 samples, 0.04%)</title><rect x="477.1" y="1701" width="0.4" height="15.0" fill="rgb(218,74,16)" rx="2" ry="2" />
<text  x="480.06" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;5ul, cql3::expr::untyped_constant&gt; (4 samples, 0.07%)</title><rect x="54.6" y="1445" width="0.9" height="15.0" fill="rgb(215,16,1)" rx="2" ry="2" />
<text  x="57.59" y="1455.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="577.2" y="1733" width="0.2" height="15.0" fill="rgb(216,50,18)" rx="2" ry="2" />
<text  x="580.16" y="1743.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (2 samples, 0.04%)</title><rect x="177.9" y="1701" width="0.4" height="15.0" fill="rgb(252,194,32)" rx="2" ry="2" />
<text  x="180.85" y="1711.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1 samples, 0.02%)</title><rect x="1187.2" y="101" width="0.2" height="15.0" fill="rgb(223,180,12)" rx="2" ry="2" />
<text  x="1190.16" y="111.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier_raw&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="77.8" y="1861" width="0.2" height="15.0" fill="rgb(250,205,13)" rx="2" ry="2" />
<text  x="80.75" y="1871.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (1 samples, 0.02%)</title><rect x="868.7" y="1637" width="0.2" height="15.0" fill="rgb(220,192,5)" rx="2" ry="2" />
<text  x="871.72" y="1647.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (4 samples, 0.07%)</title><rect x="941.5" y="1797" width="0.9" height="15.0" fill="rgb(210,80,51)" rx="2" ry="2" />
<text  x="944.50" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (15 samples, 0.28%)</title><rect x="60.9" y="1781" width="3.3" height="15.0" fill="rgb(254,44,36)" rx="2" ry="2" />
<text  x="63.92" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="61.4" y="1573" width="0.2" height="15.0" fill="rgb(238,10,29)" rx="2" ry="2" />
<text  x="64.36" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="131.3" y="1877" width="0.2" height="15.0" fill="rgb(224,184,8)" rx="2" ry="2" />
<text  x="134.30" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="41.7" y="1701" width="0.4" height="15.0" fill="rgb(243,155,23)" rx="2" ry="2" />
<text  x="44.69" y="1711.5" ></text>
</g>
<g >
<title>db::schema_tables::all_tables (1 samples, 0.02%)</title><rect x="19.4" y="1701" width="0.2" height="15.0" fill="rgb(207,226,6)" rx="2" ry="2" />
<text  x="22.40" y="1711.5" ></text>
</g>
<g >
<title>service::storage_proxy::response_wait (1 samples, 0.02%)</title><rect x="1126.4" y="1685" width="0.2" height="15.0" fill="rgb(207,223,17)" rx="2" ry="2" />
<text  x="1129.40" y="1695.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;column_definition const*, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; (2 samples, 0.04%)</title><rect x="73.6" y="1717" width="0.4" height="15.0" fill="rgb(207,199,10)" rx="2" ry="2" />
<text  x="76.60" y="1727.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (1 samples, 0.02%)</title><rect x="846.4" y="1845" width="0.2" height="15.0" fill="rgb(217,115,14)" rx="2" ry="2" />
<text  x="849.43" y="1855.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (36 samples, 0.67%)</title><rect x="429.4" y="1685" width="7.9" height="15.0" fill="rgb(250,125,15)" rx="2" ry="2" />
<text  x="432.41" y="1695.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="450.2" y="1829" width="0.2" height="15.0" fill="rgb(245,112,20)" rx="2" ry="2" />
<text  x="453.18" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.06%)</title><rect x="42.3" y="1781" width="0.7" height="15.0" fill="rgb(250,116,30)" rx="2" ry="2" />
<text  x="45.35" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.06%)</title><rect x="53.3" y="1637" width="0.6" height="15.0" fill="rgb(242,219,30)" rx="2" ry="2" />
<text  x="56.27" y="1647.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (3 samples, 0.06%)</title><rect x="801.0" y="1541" width="0.6" height="15.0" fill="rgb(231,43,19)" rx="2" ry="2" />
<text  x="803.96" y="1551.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_error (1 samples, 0.02%)</title><rect x="50.4" y="1717" width="0.3" height="15.0" fill="rgb(226,210,3)" rx="2" ry="2" />
<text  x="53.43" y="1727.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (1 samples, 0.02%)</title><rect x="1135.4" y="1925" width="0.2" height="15.0" fill="rgb(232,136,35)" rx="2" ry="2" />
<text  x="1138.36" y="1935.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (5 samples, 0.09%)</title><rect x="124.5" y="1813" width="1.1" height="15.0" fill="rgb(234,160,52)" rx="2" ry="2" />
<text  x="127.52" y="1823.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (3 samples, 0.06%)</title><rect x="346.6" y="1589" width="0.6" height="15.0" fill="rgb(246,51,13)" rx="2" ry="2" />
<text  x="349.58" y="1599.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (2 samples, 0.04%)</title><rect x="662.4" y="1845" width="0.4" height="15.0" fill="rgb(213,175,9)" rx="2" ry="2" />
<text  x="665.40" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="41.7" y="1621" width="0.4" height="15.0" fill="rgb(227,195,51)" rx="2" ry="2" />
<text  x="44.69" y="1631.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.02%)</title><rect x="51.5" y="1653" width="0.2" height="15.0" fill="rgb(207,99,9)" rx="2" ry="2" />
<text  x="54.53" y="1663.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="738.5" y="1717" width="0.2" height="15.0" fill="rgb(237,55,43)" rx="2" ry="2" />
<text  x="741.46" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (5 samples, 0.09%)</title><rect x="751.1" y="1749" width="1.1" height="15.0" fill="rgb(234,121,32)" rx="2" ry="2" />
<text  x="754.13" y="1759.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.17%)</title><rect x="971.7" y="1781" width="1.9" height="15.0" fill="rgb(208,116,43)" rx="2" ry="2" />
<text  x="974.66" y="1791.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.04%)</title><rect x="285.8" y="1621" width="0.5" height="15.0" fill="rgb(252,0,4)" rx="2" ry="2" />
<text  x="288.82" y="1631.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (6 samples, 0.11%)</title><rect x="897.1" y="1701" width="1.3" height="15.0" fill="rgb(208,110,54)" rx="2" ry="2" />
<text  x="900.13" y="1711.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="558.1" y="1829" width="0.3" height="15.0" fill="rgb(211,48,11)" rx="2" ry="2" />
<text  x="561.15" y="1839.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="19.4" y="1941" width="0.2" height="15.0" fill="rgb(243,48,30)" rx="2" ry="2" />
<text  x="22.40" y="1951.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (25 samples, 0.46%)</title><rect x="1107.2" y="1845" width="5.4" height="15.0" fill="rgb(210,180,27)" rx="2" ry="2" />
<text  x="1110.17" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (330 samples, 6.11%)</title><rect x="10.0" y="2053" width="72.1" height="15.0" fill="rgb(235,112,52)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" >[unknown]</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="822.8" y="1781" width="0.2" height="15.0" fill="rgb(236,124,36)" rx="2" ry="2" />
<text  x="825.82" y="1791.5" ></text>
</g>
<g >
<title>service::client_state::has_access (3 samples, 0.06%)</title><rect x="78.4" y="1861" width="0.7" height="15.0" fill="rgb(241,117,5)" rx="2" ry="2" />
<text  x="81.41" y="1871.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (6 samples, 0.11%)</title><rect x="695.4" y="1845" width="1.3" height="15.0" fill="rgb(223,144,15)" rx="2" ry="2" />
<text  x="698.40" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="917" width="2.9" height="15.0" fill="rgb(213,199,37)" rx="2" ry="2" />
<text  x="1189.94" y="927.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::setTokenStream (1 samples, 0.02%)</title><rect x="22.7" y="1813" width="0.2" height="15.0" fill="rgb(229,131,12)" rx="2" ry="2" />
<text  x="25.68" y="1823.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (259 samples, 4.80%)</title><rect x="483.4" y="1765" width="56.6" height="15.0" fill="rgb(219,165,36)" rx="2" ry="2" />
<text  x="486.40" y="1775.5" >memta..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="24.6" y="1605" width="0.3" height="15.0" fill="rgb(248,115,21)" rx="2" ry="2" />
<text  x="27.64" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="42.6" y="1701" width="0.2" height="15.0" fill="rgb(214,153,4)" rx="2" ry="2" />
<text  x="45.57" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (11 samples, 0.20%)</title><rect x="975.2" y="1749" width="2.4" height="15.0" fill="rgb(252,221,43)" rx="2" ry="2" />
<text  x="978.16" y="1759.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (18 samples, 0.33%)</title><rect x="996.1" y="1717" width="4.0" height="15.0" fill="rgb(225,128,13)" rx="2" ry="2" />
<text  x="999.14" y="1727.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="928.2" y="1813" width="0.2" height="15.0" fill="rgb(228,181,16)" rx="2" ry="2" />
<text  x="931.17" y="1823.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="993.3" y="1749" width="0.2" height="15.0" fill="rgb(230,77,8)" rx="2" ry="2" />
<text  x="996.30" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="709" width="2.9" height="15.0" fill="rgb(246,134,16)" rx="2" ry="2" />
<text  x="1189.94" y="719.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (2 samples, 0.04%)</title><rect x="21.6" y="1861" width="0.4" height="15.0" fill="rgb(247,112,29)" rx="2" ry="2" />
<text  x="24.58" y="1871.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (38 samples, 0.70%)</title><rect x="465.7" y="1733" width="8.3" height="15.0" fill="rgb(231,28,5)" rx="2" ry="2" />
<text  x="468.70" y="1743.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.02%)</title><rect x="264.0" y="1589" width="0.2" height="15.0" fill="rgb(220,65,53)" rx="2" ry="2" />
<text  x="266.97" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="901.1" y="1653" width="0.2" height="15.0" fill="rgb(245,181,35)" rx="2" ry="2" />
<text  x="904.07" y="1663.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="768.6" y="1717" width="0.2" height="15.0" fill="rgb(243,221,5)" rx="2" ry="2" />
<text  x="771.62" y="1727.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (2 samples, 0.04%)</title><rect x="818.7" y="1733" width="0.4" height="15.0" fill="rgb(208,72,45)" rx="2" ry="2" />
<text  x="821.67" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="24.9" y="1733" width="0.2" height="15.0" fill="rgb(235,68,47)" rx="2" ry="2" />
<text  x="27.86" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (10 samples, 0.19%)</title><rect x="1085.3" y="1781" width="2.2" height="15.0" fill="rgb(218,77,2)" rx="2" ry="2" />
<text  x="1088.31" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="999.4" y="1637" width="0.2" height="15.0" fill="rgb(234,220,53)" rx="2" ry="2" />
<text  x="1002.42" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (3 samples, 0.06%)</title><rect x="529.5" y="1653" width="0.7" height="15.0" fill="rgb(227,81,32)" rx="2" ry="2" />
<text  x="532.51" y="1663.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="561.2" y="1765" width="0.2" height="15.0" fill="rgb(236,164,21)" rx="2" ry="2" />
<text  x="564.21" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="53.3" y="1685" width="0.6" height="15.0" fill="rgb(215,25,24)" rx="2" ry="2" />
<text  x="56.27" y="1695.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="789" width="2.9" height="15.0" fill="rgb(206,198,39)" rx="2" ry="2" />
<text  x="1189.94" y="799.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="447.3" y="1765" width="0.3" height="15.0" fill="rgb(207,97,1)" rx="2" ry="2" />
<text  x="450.34" y="1775.5" ></text>
</g>
<g >
<title>schema::get_column_definition (2 samples, 0.04%)</title><rect x="75.1" y="1845" width="0.5" height="15.0" fill="rgb(246,10,27)" rx="2" ry="2" />
<text  x="78.13" y="1855.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.02%)</title><rect x="17.6" y="1909" width="0.3" height="15.0" fill="rgb(219,141,43)" rx="2" ry="2" />
<text  x="20.65" y="1919.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (18 samples, 0.33%)</title><rect x="1129.0" y="1653" width="4.0" height="15.0" fill="rgb(206,116,10)" rx="2" ry="2" />
<text  x="1132.02" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (3 samples, 0.06%)</title><rect x="693.2" y="1877" width="0.7" height="15.0" fill="rgb(247,83,44)" rx="2" ry="2" />
<text  x="696.22" y="1887.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="94.6" y="1877" width="0.2" height="15.0" fill="rgb(227,42,0)" rx="2" ry="2" />
<text  x="97.58" y="1887.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (12 samples, 0.22%)</title><rect x="737.1" y="1797" width="2.7" height="15.0" fill="rgb(226,4,5)" rx="2" ry="2" />
<text  x="740.15" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="1029.8" y="1653" width="0.2" height="15.0" fill="rgb(249,97,15)" rx="2" ry="2" />
<text  x="1032.80" y="1663.5" ></text>
</g>
<g >
<title>table::query (4 samples, 0.07%)</title><rect x="1167.9" y="1925" width="0.9" height="15.0" fill="rgb(233,87,11)" rx="2" ry="2" />
<text  x="1170.93" y="1935.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (1 samples, 0.02%)</title><rect x="1129.2" y="1557" width="0.3" height="15.0" fill="rgb(227,5,15)" rx="2" ry="2" />
<text  x="1132.24" y="1567.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="638.1" y="1909" width="0.3" height="15.0" fill="rgb(220,61,43)" rx="2" ry="2" />
<text  x="641.14" y="1919.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (29 samples, 0.54%)</title><rect x="1068.3" y="1701" width="6.3" height="15.0" fill="rgb(207,15,1)" rx="2" ry="2" />
<text  x="1071.26" y="1711.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="53.7" y="1509" width="0.2" height="15.0" fill="rgb(209,166,43)" rx="2" ry="2" />
<text  x="56.71" y="1519.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (2 samples, 0.04%)</title><rect x="99.4" y="1861" width="0.4" height="15.0" fill="rgb(253,45,18)" rx="2" ry="2" />
<text  x="102.39" y="1871.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1119.0" y="1605" width="0.2" height="15.0" fill="rgb(209,70,30)" rx="2" ry="2" />
<text  x="1121.97" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="860.9" y="1909" width="0.2" height="15.0" fill="rgb(249,220,51)" rx="2" ry="2" />
<text  x="863.85" y="1919.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1050.8" y="1701" width="0.2" height="15.0" fill="rgb(238,23,20)" rx="2" ry="2" />
<text  x="1053.78" y="1711.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (1 samples, 0.02%)</title><rect x="10.4" y="165" width="0.3" height="15.0" fill="rgb(253,157,1)" rx="2" ry="2" />
<text  x="13.44" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="682.9" y="1861" width="0.5" height="15.0" fill="rgb(219,145,39)" rx="2" ry="2" />
<text  x="685.94" y="1871.5" ></text>
</g>
<g >
<title>service::storage_service::mutate_token_metadata (1 samples, 0.02%)</title><rect x="20.1" y="1877" width="0.2" height="15.0" fill="rgb(214,0,50)" rx="2" ry="2" />
<text  x="23.05" y="1887.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (9 samples, 0.17%)</title><rect x="759.9" y="1813" width="1.9" height="15.0" fill="rgb(218,2,15)" rx="2" ry="2" />
<text  x="762.88" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;cql3::column_specification&gt;::dispose (1 samples, 0.02%)</title><rect x="12.2" y="1973" width="0.2" height="15.0" fill="rgb(234,132,25)" rx="2" ry="2" />
<text  x="15.19" y="1983.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (2 samples, 0.04%)</title><rect x="616.9" y="1861" width="0.5" height="15.0" fill="rgb(220,152,42)" rx="2" ry="2" />
<text  x="619.94" y="1871.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (46 samples, 0.85%)</title><rect x="917.7" y="1813" width="10.0" height="15.0" fill="rgb(235,125,46)" rx="2" ry="2" />
<text  x="920.68" y="1823.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (426 samples, 7.89%)</title><rect x="741.1" y="1861" width="93.1" height="15.0" fill="rgb(209,212,48)" rx="2" ry="2" />
<text  x="744.08" y="1871.5" >cql3::query..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="775.2" y="1781" width="0.2" height="15.0" fill="rgb(237,130,28)" rx="2" ry="2" />
<text  x="778.18" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.41%)</title><rect x="12.4" y="2021" width="4.8" height="15.0" fill="rgb(215,105,25)" rx="2" ry="2" />
<text  x="15.40" y="2031.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (2 samples, 0.04%)</title><rect x="267.5" y="1669" width="0.4" height="15.0" fill="rgb(212,83,27)" rx="2" ry="2" />
<text  x="270.46" y="1679.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (3 samples, 0.06%)</title><rect x="935.2" y="1829" width="0.6" height="15.0" fill="rgb(244,76,45)" rx="2" ry="2" />
<text  x="938.16" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="647.1" y="1909" width="0.2" height="15.0" fill="rgb(205,88,44)" rx="2" ry="2" />
<text  x="650.10" y="1919.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="693.0" y="1893" width="0.2" height="15.0" fill="rgb(244,48,47)" rx="2" ry="2" />
<text  x="696.00" y="1903.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="445.4" y="1781" width="0.2" height="15.0" fill="rgb(247,139,27)" rx="2" ry="2" />
<text  x="448.37" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1957" width="2.9" height="15.0" fill="rgb(208,6,43)" rx="2" ry="2" />
<text  x="1189.94" y="1967.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="850.6" y="1749" width="0.2" height="15.0" fill="rgb(221,27,33)" rx="2" ry="2" />
<text  x="853.58" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (9 samples, 0.17%)</title><rect x="181.4" y="1685" width="1.9" height="15.0" fill="rgb(222,21,19)" rx="2" ry="2" />
<text  x="184.35" y="1695.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (2 samples, 0.04%)</title><rect x="1123.3" y="1701" width="0.5" height="15.0" fill="rgb(205,57,37)" rx="2" ry="2" />
<text  x="1126.34" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1188.5" y="197" width="0.2" height="15.0" fill="rgb(206,108,11)" rx="2" ry="2" />
<text  x="1191.47" y="207.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (2 samples, 0.04%)</title><rect x="1074.6" y="1701" width="0.4" height="15.0" fill="rgb(245,45,50)" rx="2" ry="2" />
<text  x="1077.60" y="1711.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (2 samples, 0.04%)</title><rect x="704.4" y="1877" width="0.4" height="15.0" fill="rgb(218,64,48)" rx="2" ry="2" />
<text  x="707.36" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="72.7" y="1717" width="0.2" height="15.0" fill="rgb(217,56,8)" rx="2" ry="2" />
<text  x="75.73" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="62.2" y="1653" width="0.3" height="15.0" fill="rgb(218,40,36)" rx="2" ry="2" />
<text  x="65.24" y="1663.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_e5391f1eed1c0aa1965864b177f1772e13a61139] (1 samples, 0.02%)</title><rect x="803.6" y="1493" width="0.2" height="15.0" fill="rgb(251,76,43)" rx="2" ry="2" />
<text  x="806.59" y="1503.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (4 samples, 0.07%)</title><rect x="908.5" y="1749" width="0.9" height="15.0" fill="rgb(245,127,17)" rx="2" ry="2" />
<text  x="911.50" y="1759.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="719.9" y="1781" width="0.2" height="15.0" fill="rgb(208,37,51)" rx="2" ry="2" />
<text  x="722.88" y="1791.5" ></text>
</g>
<g >
<title>dht::tri_compare (11 samples, 0.20%)</title><rect x="1072.2" y="1653" width="2.4" height="15.0" fill="rgb(216,110,25)" rx="2" ry="2" />
<text  x="1075.20" y="1663.5" ></text>
</g>
<g >
<title>query::result::builder::builder (1 samples, 0.02%)</title><rect x="605.8" y="1861" width="0.2" height="15.0" fill="rgb(234,43,36)" rx="2" ry="2" />
<text  x="608.79" y="1871.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="391.2" y="1573" width="0.2" height="15.0" fill="rgb(215,215,11)" rx="2" ry="2" />
<text  x="394.17" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="10.7" y="1765" width="0.2" height="15.0" fill="rgb(213,94,47)" rx="2" ry="2" />
<text  x="13.66" y="1775.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (1 samples, 0.02%)</title><rect x="1092.7" y="1845" width="0.3" height="15.0" fill="rgb(245,139,5)" rx="2" ry="2" />
<text  x="1095.74" y="1855.5" ></text>
</g>
<g >
<title>remove_or_mark_as_unique_owner (1 samples, 0.02%)</title><rect x="17.6" y="1925" width="0.3" height="15.0" fill="rgb(224,207,6)" rx="2" ry="2" />
<text  x="20.65" y="1935.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="455.2" y="1813" width="0.2" height="15.0" fill="rgb(211,211,25)" rx="2" ry="2" />
<text  x="458.20" y="1823.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (2 samples, 0.04%)</title><rect x="636.0" y="1893" width="0.4" height="15.0" fill="rgb(243,205,52)" rx="2" ry="2" />
<text  x="638.95" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="24.6" y="1685" width="0.3" height="15.0" fill="rgb(248,14,30)" rx="2" ry="2" />
<text  x="27.64" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1028.9" y="1621" width="0.2" height="15.0" fill="rgb(250,26,26)" rx="2" ry="2" />
<text  x="1031.92" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="999.4" y="1621" width="0.2" height="15.0" fill="rgb(213,58,22)" rx="2" ry="2" />
<text  x="1002.42" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::release (1 samples, 0.02%)</title><rect x="60.1" y="1701" width="0.2" height="15.0" fill="rgb(236,105,30)" rx="2" ry="2" />
<text  x="63.05" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (2 samples, 0.04%)</title><rect x="1188.9" y="69" width="0.4" height="15.0" fill="rgb(219,218,50)" rx="2" ry="2" />
<text  x="1191.91" y="79.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="705.7" y="1909" width="0.4" height="15.0" fill="rgb(213,191,9)" rx="2" ry="2" />
<text  x="708.67" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="855.2" y="1845" width="0.8" height="15.0" fill="rgb(242,160,3)" rx="2" ry="2" />
<text  x="858.17" y="1855.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (33 samples, 0.61%)</title><rect x="588.7" y="1813" width="7.3" height="15.0" fill="rgb(235,220,5)" rx="2" ry="2" />
<text  x="591.74" y="1823.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::update_statement (3 samples, 0.06%)</title><rect x="75.6" y="1813" width="0.6" height="15.0" fill="rgb(235,1,18)" rx="2" ry="2" />
<text  x="78.57" y="1823.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="19.8" y="1749" width="0.3" height="15.0" fill="rgb(223,42,19)" rx="2" ry="2" />
<text  x="22.84" y="1759.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="52.0" y="1525" width="0.2" height="15.0" fill="rgb(217,94,36)" rx="2" ry="2" />
<text  x="54.96" y="1535.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="43.9" y="1541" width="0.2" height="15.0" fill="rgb(209,20,12)" rx="2" ry="2" />
<text  x="46.88" y="1551.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="862.4" y="1845" width="0.4" height="15.0" fill="rgb(236,72,27)" rx="2" ry="2" />
<text  x="865.38" y="1855.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="695.2" y="1909" width="0.2" height="15.0" fill="rgb(254,162,14)" rx="2" ry="2" />
<text  x="698.18" y="1919.5" ></text>
</g>
<g >
<title>ser::row_view::columns (1 samples, 0.02%)</title><rect x="1122.0" y="1653" width="0.2" height="15.0" fill="rgb(247,28,21)" rx="2" ry="2" />
<text  x="1125.03" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="594.4" y="1781" width="0.2" height="15.0" fill="rgb(205,94,7)" rx="2" ry="2" />
<text  x="597.43" y="1791.5" ></text>
</g>
<g >
<title>row::external_memory_usage (27 samples, 0.50%)</title><rect x="246.0" y="1573" width="5.9" height="15.0" fill="rgb(219,100,3)" rx="2" ry="2" />
<text  x="249.04" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;column_definition const* const&amp;&gt;, std::tuple&lt;&gt; &gt; (1 samples, 0.02%)</title><rect x="74.7" y="1765" width="0.2" height="15.0" fill="rgb(238,7,35)" rx="2" ry="2" />
<text  x="77.69" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="609.7" y="1781" width="0.5" height="15.0" fill="rgb(213,131,46)" rx="2" ry="2" />
<text  x="612.73" y="1791.5" ></text>
</g>
<g >
<title>table::compact_sstables (1 samples, 0.02%)</title><rect x="720.3" y="1909" width="0.2" height="15.0" fill="rgb(224,58,42)" rx="2" ry="2" />
<text  x="723.32" y="1919.5" ></text>
</g>
<g >
<title>db::system_distributed_keyspace::start (1 samples, 0.02%)</title><rect x="100.0" y="1925" width="0.3" height="15.0" fill="rgb(210,110,30)" rx="2" ry="2" />
<text  x="103.05" y="1935.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="189.0" y="1701" width="0.2" height="15.0" fill="rgb(220,173,27)" rx="2" ry="2" />
<text  x="192.00" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="318.2" y="1797" width="0.2" height="15.0" fill="rgb(241,4,30)" rx="2" ry="2" />
<text  x="321.17" y="1807.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (5 samples, 0.09%)</title><rect x="1147.6" y="1861" width="1.1" height="15.0" fill="rgb(239,95,49)" rx="2" ry="2" />
<text  x="1150.60" y="1871.5" ></text>
</g>
<g >
<title>seastar::aio_storage_context::reap_completions (1 samples, 0.02%)</title><rect x="1170.1" y="1909" width="0.2" height="15.0" fill="rgb(206,125,25)" rx="2" ry="2" />
<text  x="1173.11" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (11 samples, 0.20%)</title><rect x="36.4" y="1685" width="2.4" height="15.0" fill="rgb(209,114,25)" rx="2" ry="2" />
<text  x="39.45" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="680.5" y="1893" width="0.7" height="15.0" fill="rgb(231,8,3)" rx="2" ry="2" />
<text  x="683.54" y="1903.5" ></text>
</g>
<g >
<title>ser::deserialize_array_helper&lt;false, ser::column_view&gt;::doit&lt;seastar::simple_memory_input_stream, std::vector&lt;ser::column_view, std::allocator&lt;ser::column_view&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1122.0" y="1621" width="0.2" height="15.0" fill="rgb(226,103,13)" rx="2" ry="2" />
<text  x="1125.03" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="441.4" y="1653" width="0.7" height="15.0" fill="rgb(235,104,13)" rx="2" ry="2" />
<text  x="444.44" y="1663.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous&gt; (1 samples, 0.02%)</title><rect x="808.8" y="1717" width="0.3" height="15.0" fill="rgb(222,212,48)" rx="2" ry="2" />
<text  x="811.83" y="1727.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (2 samples, 0.04%)</title><rect x="99.4" y="1877" width="0.4" height="15.0" fill="rgb(240,124,20)" rx="2" ry="2" />
<text  x="102.39" y="1887.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (2 samples, 0.04%)</title><rect x="1188.9" y="85" width="0.4" height="15.0" fill="rgb(244,38,44)" rx="2" ry="2" />
<text  x="1191.91" y="95.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.11%)</title><rect x="505.9" y="1621" width="1.3" height="15.0" fill="rgb(253,205,45)" rx="2" ry="2" />
<text  x="508.91" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.04%)</title><rect x="50.7" y="1701" width="0.4" height="15.0" fill="rgb(206,16,21)" rx="2" ry="2" />
<text  x="53.65" y="1711.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.02%)</title><rect x="436.8" y="1637" width="0.3" height="15.0" fill="rgb(252,111,43)" rx="2" ry="2" />
<text  x="439.85" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.07%)</title><rect x="27.5" y="1621" width="0.9" height="15.0" fill="rgb(228,89,41)" rx="2" ry="2" />
<text  x="30.48" y="1631.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (53 samples, 0.98%)</title><rect x="489.7" y="1733" width="11.6" height="15.0" fill="rgb(209,94,53)" rx="2" ry="2" />
<text  x="492.74" y="1743.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (3 samples, 0.06%)</title><rect x="78.4" y="1829" width="0.7" height="15.0" fill="rgb(251,127,8)" rx="2" ry="2" />
<text  x="81.41" y="1839.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="795.3" y="1621" width="0.4" height="15.0" fill="rgb(250,53,41)" rx="2" ry="2" />
<text  x="798.28" y="1631.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (15 samples, 0.28%)</title><rect x="924.5" y="1765" width="3.2" height="15.0" fill="rgb(243,67,11)" rx="2" ry="2" />
<text  x="927.45" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;utils::UUID&gt;::allocate (1 samples, 0.02%)</title><rect x="1147.4" y="1877" width="0.2" height="15.0" fill="rgb(222,25,54)" rx="2" ry="2" />
<text  x="1150.38" y="1887.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::storage_proxy::send_to_live_endpoints (1 samples, 0.02%)</title><rect x="697.4" y="1925" width="0.2" height="15.0" fill="rgb(216,182,43)" rx="2" ry="2" />
<text  x="700.37" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (3 samples, 0.06%)</title><rect x="681.9" y="1877" width="0.6" height="15.0" fill="rgb(205,17,46)" rx="2" ry="2" />
<text  x="684.85" y="1887.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (2 samples, 0.04%)</title><rect x="763.4" y="1829" width="0.4" height="15.0" fill="rgb(240,30,43)" rx="2" ry="2" />
<text  x="766.37" y="1839.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (2 samples, 0.04%)</title><rect x="436.4" y="1637" width="0.4" height="15.0" fill="rgb(242,28,33)" rx="2" ry="2" />
<text  x="439.41" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="565" width="0.3" height="15.0" fill="rgb(228,59,16)" rx="2" ry="2" />
<text  x="13.44" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;ser::column_view, std::allocator&lt;ser::column_view&gt; &gt;::emplace_back&lt;ser::column_view&gt; (1 samples, 0.02%)</title><rect x="1122.0" y="1605" width="0.2" height="15.0" fill="rgb(226,229,10)" rx="2" ry="2" />
<text  x="1125.03" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (4 samples, 0.07%)</title><rect x="616.1" y="1861" width="0.8" height="15.0" fill="rgb(251,73,17)" rx="2" ry="2" />
<text  x="619.06" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="1080.5" y="1717" width="0.4" height="15.0" fill="rgb(236,78,5)" rx="2" ry="2" />
<text  x="1083.50" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="49.3" y="1573" width="0.5" height="15.0" fill="rgb(214,84,5)" rx="2" ry="2" />
<text  x="52.34" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="62.5" y="1701" width="0.2" height="15.0" fill="rgb(207,227,0)" rx="2" ry="2" />
<text  x="65.45" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="537.2" y="1733" width="1.1" height="15.0" fill="rgb(227,142,30)" rx="2" ry="2" />
<text  x="540.16" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="603.4" y="1829" width="0.2" height="15.0" fill="rgb(208,214,30)" rx="2" ry="2" />
<text  x="606.39" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (2 samples, 0.04%)</title><rect x="348.3" y="1605" width="0.5" height="15.0" fill="rgb(227,122,11)" rx="2" ry="2" />
<text  x="351.33" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (1 samples, 0.02%)</title><rect x="872.9" y="1877" width="0.2" height="15.0" fill="rgb(219,34,15)" rx="2" ry="2" />
<text  x="875.87" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (10 samples, 0.19%)</title><rect x="664.8" y="1893" width="2.2" height="15.0" fill="rgb(218,150,17)" rx="2" ry="2" />
<text  x="667.80" y="1903.5" ></text>
</g>
<g >
<title>query_result_builder::consume (206 samples, 3.82%)</title><rect x="351.6" y="1637" width="45.0" height="15.0" fill="rgb(235,84,21)" rx="2" ry="2" />
<text  x="354.61" y="1647.5" >quer..</text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (10 samples, 0.19%)</title><rect x="1120.1" y="1669" width="2.1" height="15.0" fill="rgb(226,206,53)" rx="2" ry="2" />
<text  x="1123.06" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="539.1" y="1749" width="0.2" height="15.0" fill="rgb(217,72,23)" rx="2" ry="2" />
<text  x="542.13" y="1759.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (3 samples, 0.06%)</title><rect x="803.8" y="1637" width="0.7" height="15.0" fill="rgb(226,140,29)" rx="2" ry="2" />
<text  x="806.81" y="1647.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (2 samples, 0.04%)</title><rect x="270.5" y="1637" width="0.5" height="15.0" fill="rgb(215,23,38)" rx="2" ry="2" />
<text  x="273.52" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="49.3" y="1637" width="0.5" height="15.0" fill="rgb(245,76,8)" rx="2" ry="2" />
<text  x="52.34" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::untyped_constant (1 samples, 0.02%)</title><rect x="56.3" y="1701" width="0.3" height="15.0" fill="rgb(242,47,30)" rx="2" ry="2" />
<text  x="59.33" y="1711.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation::data&gt;::operator (1 samples, 0.02%)</title><rect x="99.2" y="1749" width="0.2" height="15.0" fill="rgb(235,220,37)" rx="2" ry="2" />
<text  x="102.17" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="837" width="2.9" height="15.0" fill="rgb(235,181,54)" rx="2" ry="2" />
<text  x="1189.94" y="847.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.02%)</title><rect x="441.2" y="1653" width="0.2" height="15.0" fill="rgb(208,35,8)" rx="2" ry="2" />
<text  x="444.22" y="1663.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="51.5" y="1669" width="0.2" height="15.0" fill="rgb(231,101,35)" rx="2" ry="2" />
<text  x="54.53" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="294.6" y="1685" width="0.2" height="15.0" fill="rgb(241,68,50)" rx="2" ry="2" />
<text  x="297.56" y="1695.5" ></text>
</g>
<g >
<title>_ZN7seastar8futurizeIvE22satisfy_with_result_ofIZZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS9_14discard_resultEvEUlDpOT_E_NS3_IvEEEET0_OT_ENKUlONS_8internal22promise_base_with_typeIvEERSE_ONS_12future_stateIS8_EEE_clESM_SN_SQ_EUlvE_EEvSM_SI_ (1 samples, 0.02%)</title><rect x="96.3" y="1925" width="0.2" height="15.0" fill="rgb(238,92,20)" rx="2" ry="2" />
<text  x="99.33" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="693" width="0.3" height="15.0" fill="rgb(243,130,31)" rx="2" ry="2" />
<text  x="13.44" y="703.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="720.3" y="1685" width="0.2" height="15.0" fill="rgb(235,45,35)" rx="2" ry="2" />
<text  x="723.32" y="1695.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="781.3" y="1733" width="0.2" height="15.0" fill="rgb(241,221,9)" rx="2" ry="2" />
<text  x="784.29" y="1743.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="505.3" y="1637" width="0.2" height="15.0" fill="rgb(239,44,4)" rx="2" ry="2" />
<text  x="508.25" y="1647.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="996.6" y="1701" width="0.2" height="15.0" fill="rgb(242,188,11)" rx="2" ry="2" />
<text  x="999.58" y="1711.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (4 samples, 0.07%)</title><rect x="488.6" y="1749" width="0.9" height="15.0" fill="rgb(207,221,36)" rx="2" ry="2" />
<text  x="491.64" y="1759.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (8 samples, 0.15%)</title><rect x="772.6" y="1813" width="1.7" height="15.0" fill="rgb(206,9,50)" rx="2" ry="2" />
<text  x="775.55" y="1823.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="720.1" y="1829" width="0.2" height="15.0" fill="rgb(212,127,51)" rx="2" ry="2" />
<text  x="723.10" y="1839.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="81.5" y="1909" width="0.2" height="15.0" fill="rgb(211,154,42)" rx="2" ry="2" />
<text  x="84.47" y="1919.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (12 samples, 0.22%)</title><rect x="835.1" y="1829" width="2.6" height="15.0" fill="rgb(216,42,29)" rx="2" ry="2" />
<text  x="838.06" y="1839.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.07%)</title><rect x="1171.0" y="2053" width="0.9" height="15.0" fill="rgb(253,87,47)" rx="2" ry="2" />
<text  x="1173.99" y="2063.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="51.5" y="1605" width="0.2" height="15.0" fill="rgb(245,151,8)" rx="2" ry="2" />
<text  x="54.53" y="1615.5" ></text>
</g>
<g >
<title>row::row (3 samples, 0.06%)</title><rect x="286.5" y="1637" width="0.6" height="15.0" fill="rgb(252,47,19)" rx="2" ry="2" />
<text  x="289.48" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::clear (1 samples, 0.02%)</title><rect x="749.4" y="1797" width="0.2" height="15.0" fill="rgb(241,164,49)" rx="2" ry="2" />
<text  x="752.39" y="1807.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="29.5" y="1701" width="0.2" height="15.0" fill="rgb(253,228,28)" rx="2" ry="2" />
<text  x="32.45" y="1711.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="913.3" y="1717" width="0.2" height="15.0" fill="rgb(253,208,2)" rx="2" ry="2" />
<text  x="916.30" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="330.6" y="1669" width="0.7" height="15.0" fill="rgb(221,1,15)" rx="2" ry="2" />
<text  x="333.63" y="1679.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="1127.3" y="1669" width="0.2" height="15.0" fill="rgb(234,40,9)" rx="2" ry="2" />
<text  x="1130.27" y="1679.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (3 samples, 0.06%)</title><rect x="984.6" y="1765" width="0.6" height="15.0" fill="rgb(224,216,28)" rx="2" ry="2" />
<text  x="987.55" y="1775.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="707.6" y="1909" width="0.9" height="15.0" fill="rgb(231,79,24)" rx="2" ry="2" />
<text  x="710.64" y="1919.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (5 samples, 0.09%)</title><rect x="719.2" y="1909" width="1.1" height="15.0" fill="rgb(215,39,49)" rx="2" ry="2" />
<text  x="722.22" y="1919.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="944.3" y="1813" width="0.3" height="15.0" fill="rgb(208,187,44)" rx="2" ry="2" />
<text  x="947.34" y="1823.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (104 samples, 1.93%)</title><rect x="652.6" y="1925" width="22.7" height="15.0" fill="rgb(229,223,36)" rx="2" ry="2" />
<text  x="655.56" y="1935.5" >s..</text>
</g>
<g >
<title>query::result::result (3 samples, 0.06%)</title><rect x="605.1" y="1845" width="0.7" height="15.0" fill="rgb(253,155,11)" rx="2" ry="2" />
<text  x="608.14" y="1855.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::touch (1 samples, 0.02%)</title><rect x="749.2" y="1749" width="0.2" height="15.0" fill="rgb(246,146,38)" rx="2" ry="2" />
<text  x="752.17" y="1759.5" ></text>
</g>
<g >
<title>database::find_keyspace (2 samples, 0.04%)</title><rect x="970.3" y="1781" width="0.5" height="15.0" fill="rgb(251,10,3)" rx="2" ry="2" />
<text  x="973.35" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="58.5" y="1605" width="0.2" height="15.0" fill="rgb(245,71,44)" rx="2" ry="2" />
<text  x="61.52" y="1615.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (1 samples, 0.02%)</title><rect x="346.4" y="1589" width="0.2" height="15.0" fill="rgb(228,78,19)" rx="2" ry="2" />
<text  x="349.36" y="1599.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier_raw&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="77.3" y="1845" width="0.2" height="15.0" fill="rgb(227,184,38)" rx="2" ry="2" />
<text  x="80.32" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.04%)</title><rect x="75.1" y="1829" width="0.5" height="15.0" fill="rgb(244,173,3)" rx="2" ry="2" />
<text  x="78.13" y="1839.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="81.5" y="1925" width="0.2" height="15.0" fill="rgb(205,64,47)" rx="2" ry="2" />
<text  x="84.47" y="1935.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (21 samples, 0.39%)</title><rect x="1162.7" y="1909" width="4.6" height="15.0" fill="rgb(252,137,2)" rx="2" ry="2" />
<text  x="1165.68" y="1919.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_begin (1 samples, 0.02%)</title><rect x="39.9" y="1717" width="0.3" height="15.0" fill="rgb(226,77,51)" rx="2" ry="2" />
<text  x="42.94" y="1727.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::decorated_key, long, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1119.2" y="1605" width="0.2" height="15.0" fill="rgb(242,209,5)" rx="2" ry="2" />
<text  x="1122.19" y="1615.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="685.1" y="1909" width="0.9" height="15.0" fill="rgb(228,59,14)" rx="2" ry="2" />
<text  x="688.13" y="1919.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (14 samples, 0.26%)</title><rect x="736.7" y="1829" width="3.1" height="15.0" fill="rgb(219,73,34)" rx="2" ry="2" />
<text  x="739.71" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="47.6" y="1605" width="0.2" height="15.0" fill="rgb(243,55,14)" rx="2" ry="2" />
<text  x="50.59" y="1615.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (3 samples, 0.06%)</title><rect x="568.9" y="1845" width="0.6" height="15.0" fill="rgb(231,32,21)" rx="2" ry="2" />
<text  x="571.86" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="853" width="0.3" height="15.0" fill="rgb(243,1,16)" rx="2" ry="2" />
<text  x="13.44" y="863.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="41.9" y="1605" width="0.2" height="15.0" fill="rgb(226,169,21)" rx="2" ry="2" />
<text  x="44.91" y="1615.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="55.5" y="1493" width="0.4" height="15.0" fill="rgb(222,29,28)" rx="2" ry="2" />
<text  x="58.46" y="1503.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (18 samples, 0.33%)</title><rect x="549.0" y="1733" width="3.9" height="15.0" fill="rgb(238,96,3)" rx="2" ry="2" />
<text  x="551.97" y="1743.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.02%)</title><rect x="99.4" y="1845" width="0.2" height="15.0" fill="rgb(223,89,50)" rx="2" ry="2" />
<text  x="102.39" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (8 samples, 0.15%)</title><rect x="824.6" y="1733" width="1.7" height="15.0" fill="rgb(220,166,36)" rx="2" ry="2" />
<text  x="827.57" y="1743.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="650.6" y="1909" width="0.2" height="15.0" fill="rgb(208,130,52)" rx="2" ry="2" />
<text  x="653.60" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="973.4" y="1717" width="0.2" height="15.0" fill="rgb(213,95,5)" rx="2" ry="2" />
<text  x="976.41" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="531.9" y="1701" width="0.2" height="15.0" fill="rgb(224,207,36)" rx="2" ry="2" />
<text  x="534.92" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (1 samples, 0.02%)</title><rect x="562.1" y="1797" width="0.2" height="15.0" fill="rgb(252,187,0)" rx="2" ry="2" />
<text  x="565.08" y="1807.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="436.6" y="1621" width="0.2" height="15.0" fill="rgb(253,158,47)" rx="2" ry="2" />
<text  x="439.63" y="1631.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.02%)</title><rect x="1132.3" y="1541" width="0.2" height="15.0" fill="rgb(219,120,21)" rx="2" ry="2" />
<text  x="1135.30" y="1551.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (5 samples, 0.09%)</title><rect x="719.2" y="1925" width="1.1" height="15.0" fill="rgb(218,100,20)" rx="2" ry="2" />
<text  x="722.22" y="1935.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;memtable::memtable_encoding_stats_collector::update (1 samples, 0.02%)</title><rect x="1119.8" y="1621" width="0.3" height="15.0" fill="rgb(212,183,22)" rx="2" ry="2" />
<text  x="1122.84" y="1631.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (4 samples, 0.07%)</title><rect x="617.4" y="1861" width="0.8" height="15.0" fill="rgb(235,57,3)" rx="2" ry="2" />
<text  x="620.38" y="1871.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (51 samples, 0.94%)</title><rect x="1093.0" y="1845" width="11.1" height="15.0" fill="rgb(248,187,36)" rx="2" ry="2" />
<text  x="1095.96" y="1855.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (17 samples, 0.31%)</title><rect x="343.5" y="1605" width="3.7" height="15.0" fill="rgb(218,199,48)" rx="2" ry="2" />
<text  x="346.52" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (2 samples, 0.04%)</title><rect x="660.2" y="1861" width="0.5" height="15.0" fill="rgb(249,15,16)" rx="2" ry="2" />
<text  x="663.21" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="55.9" y="1685" width="0.4" height="15.0" fill="rgb(231,28,32)" rx="2" ry="2" />
<text  x="58.90" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="24.2" y="1637" width="0.2" height="15.0" fill="rgb(247,200,5)" rx="2" ry="2" />
<text  x="27.21" y="1647.5" ></text>
</g>
<g >
<title>__strchr_avx2 (1 samples, 0.02%)</title><rect x="80.6" y="2037" width="0.2" height="15.0" fill="rgb(252,91,38)" rx="2" ry="2" />
<text  x="83.59" y="2047.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="448.2" y="1797" width="0.2" height="15.0" fill="rgb(209,149,31)" rx="2" ry="2" />
<text  x="451.21" y="1807.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="62.0" y="1589" width="0.2" height="15.0" fill="rgb(223,185,8)" rx="2" ry="2" />
<text  x="65.02" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (8 samples, 0.15%)</title><rect x="92.4" y="1861" width="1.7" height="15.0" fill="rgb(225,210,0)" rx="2" ry="2" />
<text  x="95.40" y="1871.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.09%)</title><rect x="695.6" y="1797" width="1.1" height="15.0" fill="rgb(216,208,46)" rx="2" ry="2" />
<text  x="698.62" y="1807.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.02%)</title><rect x="650.8" y="1909" width="0.2" height="15.0" fill="rgb(210,57,23)" rx="2" ry="2" />
<text  x="653.81" y="1919.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="939.1" y="1797" width="0.9" height="15.0" fill="rgb(253,57,41)" rx="2" ry="2" />
<text  x="942.09" y="1807.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (1 samples, 0.02%)</title><rect x="749.6" y="1797" width="0.2" height="15.0" fill="rgb(226,101,16)" rx="2" ry="2" />
<text  x="752.60" y="1807.5" ></text>
</g>
<g >
<title>service::storage_service::join_token_ring (1 samples, 0.02%)</title><rect x="10.7" y="1877" width="0.2" height="15.0" fill="rgb(240,130,30)" rx="2" ry="2" />
<text  x="13.66" y="1887.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1187.4" y="309" width="0.2" height="15.0" fill="rgb(237,42,24)" rx="2" ry="2" />
<text  x="1190.38" y="319.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="597" width="2.9" height="15.0" fill="rgb(248,127,10)" rx="2" ry="2" />
<text  x="1189.94" y="607.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="830.5" y="1717" width="0.2" height="15.0" fill="rgb(230,159,30)" rx="2" ry="2" />
<text  x="833.47" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="64.2" y="1781" width="0.2" height="15.0" fill="rgb(213,119,11)" rx="2" ry="2" />
<text  x="67.20" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (4 samples, 0.07%)</title><rect x="702.8" y="1877" width="0.9" height="15.0" fill="rgb(238,12,33)" rx="2" ry="2" />
<text  x="705.83" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="983.0" y="1685" width="0.7" height="15.0" fill="rgb(239,90,25)" rx="2" ry="2" />
<text  x="986.02" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="815.4" y="1765" width="0.2" height="15.0" fill="rgb(222,13,25)" rx="2" ry="2" />
<text  x="818.39" y="1775.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="853.4" y="1781" width="1.3" height="15.0" fill="rgb(239,218,50)" rx="2" ry="2" />
<text  x="856.42" y="1791.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::~basic_sstring (2 samples, 0.04%)</title><rect x="682.9" y="1845" width="0.5" height="15.0" fill="rgb(254,122,19)" rx="2" ry="2" />
<text  x="685.94" y="1855.5" ></text>
</g>
<g >
<title>reader_permit::consume (6 samples, 0.11%)</title><rect x="312.7" y="1701" width="1.3" height="15.0" fill="rgb(232,73,51)" rx="2" ry="2" />
<text  x="315.70" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1333" width="2.9" height="15.0" fill="rgb(243,79,22)" rx="2" ry="2" />
<text  x="1189.94" y="1343.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="61.4" y="1733" width="0.2" height="15.0" fill="rgb(243,113,37)" rx="2" ry="2" />
<text  x="64.36" y="1743.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (9 samples, 0.17%)</title><rect x="505.5" y="1637" width="1.9" height="15.0" fill="rgb(253,163,19)" rx="2" ry="2" />
<text  x="508.47" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="10.2" y="2037" width="1.1" height="15.0" fill="rgb(243,34,34)" rx="2" ry="2" />
<text  x="13.22" y="2047.5" ></text>
</g>
<g >
<title>perf_simple_que (5,399 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(225,92,30)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >perf_simple_que</text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;seastar::sharded&lt;gms::gossiper&gt;::invoke_on&lt;gms::gossiper::add_local_application_state (1 samples, 0.02%)</title><rect x="10.7" y="1813" width="0.2" height="15.0" fill="rgb(217,160,35)" rx="2" ry="2" />
<text  x="13.66" y="1823.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (458 samples, 8.48%)</title><rect x="189.7" y="1717" width="100.1" height="15.0" fill="rgb(242,34,11)" rx="2" ry="2" />
<text  x="192.66" y="1727.5" >seastar::do_..</text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1115.5" y="1845" width="0.2" height="15.0" fill="rgb(242,177,34)" rx="2" ry="2" />
<text  x="1118.47" y="1855.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (13 samples, 0.24%)</title><rect x="1129.2" y="1637" width="2.9" height="15.0" fill="rgb(221,51,18)" rx="2" ry="2" />
<text  x="1132.24" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1669" width="0.3" height="15.0" fill="rgb(224,70,5)" rx="2" ry="2" />
<text  x="13.44" y="1679.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="81.3" y="1973" width="0.2" height="15.0" fill="rgb(220,25,3)" rx="2" ry="2" />
<text  x="84.25" y="1983.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.09%)</title><rect x="695.6" y="1781" width="1.1" height="15.0" fill="rgb(205,216,14)" rx="2" ry="2" />
<text  x="698.62" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="823.5" y="1797" width="0.2" height="15.0" fill="rgb(235,111,44)" rx="2" ry="2" />
<text  x="826.48" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="58.5" y="1589" width="0.2" height="15.0" fill="rgb(246,135,16)" rx="2" ry="2" />
<text  x="61.52" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="615.2" y="1861" width="0.2" height="15.0" fill="rgb(254,133,26)" rx="2" ry="2" />
<text  x="618.19" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="725" width="2.9" height="15.0" fill="rgb(222,161,23)" rx="2" ry="2" />
<text  x="1189.94" y="735.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (5 samples, 0.09%)</title><rect x="1136.7" y="1925" width="1.1" height="15.0" fill="rgb(230,2,27)" rx="2" ry="2" />
<text  x="1139.67" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (8 samples, 0.15%)</title><rect x="54.1" y="1637" width="1.8" height="15.0" fill="rgb(213,158,44)" rx="2" ry="2" />
<text  x="57.15" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1205" width="2.9" height="15.0" fill="rgb(218,55,26)" rx="2" ry="2" />
<text  x="1189.94" y="1215.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (2 samples, 0.04%)</title><rect x="1017.3" y="1621" width="0.5" height="15.0" fill="rgb(225,101,20)" rx="2" ry="2" />
<text  x="1020.34" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="933" width="2.9" height="15.0" fill="rgb(253,13,53)" rx="2" ry="2" />
<text  x="1189.94" y="943.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="940.4" y="1813" width="0.2" height="15.0" fill="rgb(215,1,39)" rx="2" ry="2" />
<text  x="943.41" y="1823.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.02%)</title><rect x="988.7" y="1717" width="0.2" height="15.0" fill="rgb(217,51,37)" rx="2" ry="2" />
<text  x="991.71" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (6 samples, 0.11%)</title><rect x="671.8" y="1909" width="1.3" height="15.0" fill="rgb(240,34,4)" rx="2" ry="2" />
<text  x="674.80" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (1 samples, 0.02%)</title><rect x="625.9" y="1797" width="0.2" height="15.0" fill="rgb(219,171,35)" rx="2" ry="2" />
<text  x="628.90" y="1807.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (2 samples, 0.04%)</title><rect x="952.0" y="1829" width="0.4" height="15.0" fill="rgb(222,41,21)" rx="2" ry="2" />
<text  x="954.99" y="1839.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (411 samples, 7.61%)</title><rect x="336.3" y="1669" width="89.8" height="15.0" fill="rgb(207,47,9)" rx="2" ry="2" />
<text  x="339.31" y="1679.5" >flat_mutat..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="945.7" y="1765" width="0.2" height="15.0" fill="rgb(237,3,5)" rx="2" ry="2" />
<text  x="948.65" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="601.9" y="1797" width="0.2" height="15.0" fill="rgb(221,34,13)" rx="2" ry="2" />
<text  x="604.86" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.04%)</title><rect x="626.6" y="1861" width="0.4" height="15.0" fill="rgb(218,134,47)" rx="2" ry="2" />
<text  x="629.55" y="1871.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (1 samples, 0.02%)</title><rect x="421.1" y="1621" width="0.2" height="15.0" fill="rgb(207,82,35)" rx="2" ry="2" />
<text  x="424.11" y="1631.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="55.9" y="1669" width="0.2" height="15.0" fill="rgb(215,137,50)" rx="2" ry="2" />
<text  x="58.90" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.02%)</title><rect x="59.2" y="1717" width="0.2" height="15.0" fill="rgb(211,136,6)" rx="2" ry="2" />
<text  x="62.18" y="1727.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(217,13,42)" rx="2" ry="2" />
<text  x="1192.78" y="2063.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (1 samples, 0.02%)</title><rect x="764.5" y="1829" width="0.2" height="15.0" fill="rgb(221,145,2)" rx="2" ry="2" />
<text  x="767.47" y="1839.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (12 samples, 0.22%)</title><rect x="1126.0" y="1701" width="2.6" height="15.0" fill="rgb(248,36,28)" rx="2" ry="2" />
<text  x="1128.96" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (9 samples, 0.17%)</title><rect x="1099.3" y="1813" width="2.0" height="15.0" fill="rgb(216,222,31)" rx="2" ry="2" />
<text  x="1102.30" y="1823.5" ></text>
</g>
<g >
<title>log_heap&lt;logalloc::segment_descriptor, logalloc::segment_descriptor_hist_options&gt;::adjust_up (1 samples, 0.02%)</title><rect x="17.4" y="1701" width="0.2" height="15.0" fill="rgb(235,12,48)" rx="2" ry="2" />
<text  x="20.43" y="1711.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (6 samples, 0.11%)</title><rect x="73.4" y="1797" width="1.3" height="15.0" fill="rgb(245,186,33)" rx="2" ry="2" />
<text  x="76.38" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="639.9" y="1909" width="0.6" height="15.0" fill="rgb(223,144,16)" rx="2" ry="2" />
<text  x="642.89" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="613" width="0.3" height="15.0" fill="rgb(244,19,12)" rx="2" ry="2" />
<text  x="13.44" y="623.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (10 samples, 0.19%)</title><rect x="545.5" y="1733" width="2.2" height="15.0" fill="rgb(254,131,5)" rx="2" ry="2" />
<text  x="548.47" y="1743.5" ></text>
</g>
<g >
<title>cql3::column_identifier::column_identifier (1 samples, 0.02%)</title><rect x="100.9" y="1733" width="0.2" height="15.0" fill="rgb(213,102,8)" rx="2" ry="2" />
<text  x="103.92" y="1743.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (1 samples, 0.02%)</title><rect x="1117.4" y="1861" width="0.3" height="15.0" fill="rgb(223,180,21)" rx="2" ry="2" />
<text  x="1120.44" y="1871.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (6 samples, 0.11%)</title><rect x="116.4" y="1861" width="1.3" height="15.0" fill="rgb(247,93,10)" rx="2" ry="2" />
<text  x="119.44" y="1871.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.17%)</title><rect x="221.1" y="1525" width="2.0" height="15.0" fill="rgb(222,203,15)" rx="2" ry="2" />
<text  x="224.13" y="1535.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::deleted_at (1 samples, 0.02%)</title><rect x="1121.4" y="1653" width="0.2" height="15.0" fill="rgb(231,146,17)" rx="2" ry="2" />
<text  x="1124.37" y="1663.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (5 samples, 0.09%)</title><rect x="661.7" y="1877" width="1.1" height="15.0" fill="rgb(214,128,42)" rx="2" ry="2" />
<text  x="664.74" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="32.5" y="1669" width="0.2" height="15.0" fill="rgb(228,86,27)" rx="2" ry="2" />
<text  x="35.51" y="1679.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.02%)</title><rect x="19.6" y="1973" width="0.2" height="15.0" fill="rgb(215,18,33)" rx="2" ry="2" />
<text  x="22.62" y="1983.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (4 samples, 0.07%)</title><rect x="72.5" y="1797" width="0.9" height="15.0" fill="rgb(236,143,19)" rx="2" ry="2" />
<text  x="75.51" y="1807.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="935.8" y="1829" width="0.2" height="15.0" fill="rgb(207,151,33)" rx="2" ry="2" />
<text  x="938.82" y="1839.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.07%)</title><rect x="131.5" y="1877" width="0.9" height="15.0" fill="rgb(249,5,39)" rx="2" ry="2" />
<text  x="134.52" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1037.2" y="1701" width="0.2" height="15.0" fill="rgb(230,195,45)" rx="2" ry="2" />
<text  x="1040.23" y="1711.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1063.2" y="1717" width="0.3" height="15.0" fill="rgb(253,39,50)" rx="2" ry="2" />
<text  x="1066.24" y="1727.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="675.7" y="1909" width="0.2" height="15.0" fill="rgb(216,93,48)" rx="2" ry="2" />
<text  x="678.73" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1150.0" y="1877" width="0.2" height="15.0" fill="rgb(243,62,28)" rx="2" ry="2" />
<text  x="1153.00" y="1887.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (10 samples, 0.19%)</title><rect x="658.5" y="1877" width="2.2" height="15.0" fill="rgb(229,102,25)" rx="2" ry="2" />
<text  x="661.46" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (1 samples, 0.02%)</title><rect x="105.5" y="1893" width="0.2" height="15.0" fill="rgb(239,163,43)" rx="2" ry="2" />
<text  x="108.51" y="1903.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (12 samples, 0.22%)</title><rect x="1187.2" y="437" width="2.6" height="15.0" fill="rgb(236,212,36)" rx="2" ry="2" />
<text  x="1190.16" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;::emplace_back&lt;seastar::lw_shared_ptr&lt;schema const&gt; const&amp;, partition_key const&gt; (1 samples, 0.02%)</title><rect x="869.8" y="1781" width="0.2" height="15.0" fill="rgb(237,176,22)" rx="2" ry="2" />
<text  x="872.81" y="1791.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (19 samples, 0.35%)</title><rect x="987.6" y="1733" width="4.2" height="15.0" fill="rgb(253,209,38)" rx="2" ry="2" />
<text  x="990.61" y="1743.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (215 samples, 3.98%)</title><rect x="22.5" y="1861" width="46.9" height="15.0" fill="rgb(212,170,8)" rx="2" ry="2" />
<text  x="25.46" y="1871.5" >cql3..</text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (7 samples, 0.13%)</title><rect x="583.1" y="1701" width="1.5" height="15.0" fill="rgb(212,69,53)" rx="2" ry="2" />
<text  x="586.06" y="1711.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="100.5" y="1829" width="0.2" height="15.0" fill="rgb(245,5,2)" rx="2" ry="2" />
<text  x="103.48" y="1839.5" ></text>
</g>
<g >
<title>seastar::output_stream&lt;char&gt;::~output_stream (1 samples, 0.02%)</title><rect x="18.3" y="1893" width="0.2" height="15.0" fill="rgb(238,206,44)" rx="2" ry="2" />
<text  x="21.31" y="1903.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="723.6" y="1925" width="0.2" height="15.0" fill="rgb(227,56,37)" rx="2" ry="2" />
<text  x="726.60" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.02%)</title><rect x="61.8" y="1637" width="0.2" height="15.0" fill="rgb(245,148,18)" rx="2" ry="2" />
<text  x="64.80" y="1647.5" ></text>
</g>
<g >
<title>schema::get_partitioner (1 samples, 0.02%)</title><rect x="937.8" y="1829" width="0.2" height="15.0" fill="rgb(223,148,44)" rx="2" ry="2" />
<text  x="940.78" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (2 samples, 0.04%)</title><rect x="179.2" y="1685" width="0.4" height="15.0" fill="rgb(218,99,7)" rx="2" ry="2" />
<text  x="182.16" y="1695.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="24.2" y="1621" width="0.2" height="15.0" fill="rgb(209,63,21)" rx="2" ry="2" />
<text  x="27.21" y="1631.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1140.6" y="1909" width="0.2" height="15.0" fill="rgb(212,228,3)" rx="2" ry="2" />
<text  x="1143.61" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (13 samples, 0.24%)</title><rect x="32.7" y="1685" width="2.9" height="15.0" fill="rgb(205,135,18)" rx="2" ry="2" />
<text  x="35.73" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.11%)</title><rect x="695.4" y="1829" width="1.3" height="15.0" fill="rgb(250,120,5)" rx="2" ry="2" />
<text  x="698.40" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (114 samples, 2.11%)</title><rect x="571.3" y="1845" width="24.9" height="15.0" fill="rgb(233,113,27)" rx="2" ry="2" />
<text  x="574.26" y="1855.5" >s..</text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="449.5" y="1813" width="0.5" height="15.0" fill="rgb(243,181,10)" rx="2" ry="2" />
<text  x="452.52" y="1823.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (5 samples, 0.09%)</title><rect x="73.4" y="1781" width="1.1" height="15.0" fill="rgb(225,146,0)" rx="2" ry="2" />
<text  x="76.38" y="1791.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="99.8" y="1701" width="0.2" height="15.0" fill="rgb(238,62,15)" rx="2" ry="2" />
<text  x="102.83" y="1711.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (4 samples, 0.07%)</title><rect x="361.7" y="1589" width="0.8" height="15.0" fill="rgb(241,208,3)" rx="2" ry="2" />
<text  x="364.66" y="1599.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (2 samples, 0.04%)</title><rect x="462.9" y="1765" width="0.4" height="15.0" fill="rgb(209,141,37)" rx="2" ry="2" />
<text  x="465.85" y="1775.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;frozen_mutation const&gt;::make&lt;frozen_mutation&gt; (1 samples, 0.02%)</title><rect x="1131.9" y="1605" width="0.2" height="15.0" fill="rgb(222,159,17)" rx="2" ry="2" />
<text  x="1134.86" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (5 samples, 0.09%)</title><rect x="45.6" y="1701" width="1.1" height="15.0" fill="rgb(218,128,9)" rx="2" ry="2" />
<text  x="48.63" y="1711.5" ></text>
</g>
<g >
<title>table::mutation_query (1 samples, 0.02%)</title><rect x="133.9" y="1877" width="0.2" height="15.0" fill="rgb(238,47,9)" rx="2" ry="2" />
<text  x="136.92" y="1887.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1237" width="2.9" height="15.0" fill="rgb(208,151,43)" rx="2" ry="2" />
<text  x="1189.94" y="1247.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.02%)</title><rect x="44.3" y="1765" width="0.2" height="15.0" fill="rgb(235,64,23)" rx="2" ry="2" />
<text  x="47.31" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="913.5" y="1781" width="0.2" height="15.0" fill="rgb(210,42,1)" rx="2" ry="2" />
<text  x="916.52" y="1791.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (59 samples, 1.09%)</title><rect x="1068.0" y="1733" width="12.9" height="15.0" fill="rgb(240,128,49)" rx="2" ry="2" />
<text  x="1071.04" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="201.2" y="1589" width="0.7" height="15.0" fill="rgb(224,3,41)" rx="2" ry="2" />
<text  x="204.24" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (3 samples, 0.06%)</title><rect x="62.0" y="1749" width="0.7" height="15.0" fill="rgb(228,49,6)" rx="2" ry="2" />
<text  x="65.02" y="1759.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (47 samples, 0.87%)</title><rect x="501.3" y="1733" width="10.3" height="15.0" fill="rgb(227,195,23)" rx="2" ry="2" />
<text  x="504.32" y="1743.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (1 samples, 0.02%)</title><rect x="1146.9" y="1909" width="0.3" height="15.0" fill="rgb(239,59,47)" rx="2" ry="2" />
<text  x="1149.94" y="1919.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::mutate_locally (1 samples, 0.02%)</title><rect x="1127.5" y="1621" width="0.2" height="15.0" fill="rgb(219,215,28)" rx="2" ry="2" />
<text  x="1130.49" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;checked_file_impl&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="81.5" y="2037" width="0.2" height="15.0" fill="rgb(215,8,32)" rx="2" ry="2" />
<text  x="84.47" y="2047.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.07%)</title><rect x="798.3" y="1573" width="0.9" height="15.0" fill="rgb(211,113,6)" rx="2" ry="2" />
<text  x="801.34" y="1583.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="806.0" y="1669" width="1.1" height="15.0" fill="rgb(228,62,53)" rx="2" ry="2" />
<text  x="808.99" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::lw_shared_ptr&lt;schema const&gt;  (1 samples, 0.02%)</title><rect x="99.0" y="1877" width="0.2" height="15.0" fill="rgb(244,47,22)" rx="2" ry="2" />
<text  x="101.95" y="1887.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (22 samples, 0.41%)</title><rect x="431.6" y="1637" width="4.8" height="15.0" fill="rgb(225,92,38)" rx="2" ry="2" />
<text  x="434.60" y="1647.5" ></text>
</g>
<g >
<title>query_result_builder::query_result_builder (1 samples, 0.02%)</title><rect x="115.6" y="1877" width="0.2" height="15.0" fill="rgb(205,228,38)" rx="2" ry="2" />
<text  x="118.56" y="1887.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::explode (1 samples, 0.02%)</title><rect x="1131.2" y="1573" width="0.2" height="15.0" fill="rgb(219,50,43)" rx="2" ry="2" />
<text  x="1134.21" y="1583.5" ></text>
</g>
<g >
<title>abstract_type::deserialize_impl&lt;basic_single_fragmented_view&lt; (1 samples, 0.02%)</title><rect x="636.4" y="1829" width="0.2" height="15.0" fill="rgb(218,207,1)" rx="2" ry="2" />
<text  x="639.39" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="24.9" y="1749" width="0.2" height="15.0" fill="rgb(206,7,7)" rx="2" ry="2" />
<text  x="27.86" y="1759.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (45 samples, 0.83%)</title><rect x="1124.2" y="1877" width="9.8" height="15.0" fill="rgb(206,47,13)" rx="2" ry="2" />
<text  x="1127.21" y="1887.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1122.7" y="1637" width="0.2" height="15.0" fill="rgb(252,213,39)" rx="2" ry="2" />
<text  x="1125.68" y="1647.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (1 samples, 0.02%)</title><rect x="1083.1" y="1717" width="0.2" height="15.0" fill="rgb(250,69,51)" rx="2" ry="2" />
<text  x="1086.12" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (8 samples, 0.15%)</title><rect x="1159.6" y="1909" width="1.8" height="15.0" fill="rgb(218,38,6)" rx="2" ry="2" />
<text  x="1162.62" y="1919.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.04%)</title><rect x="419.4" y="1605" width="0.4" height="15.0" fill="rgb(210,16,3)" rx="2" ry="2" />
<text  x="422.36" y="1615.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (2 samples, 0.04%)</title><rect x="798.3" y="1557" width="0.5" height="15.0" fill="rgb(250,24,15)" rx="2" ry="2" />
<text  x="801.34" y="1567.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="984.1" y="1765" width="0.2" height="15.0" fill="rgb(238,13,43)" rx="2" ry="2" />
<text  x="987.12" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1749" width="2.9" height="15.0" fill="rgb(222,206,32)" rx="2" ry="2" />
<text  x="1189.94" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.02%)</title><rect x="51.7" y="1669" width="0.3" height="15.0" fill="rgb(218,95,19)" rx="2" ry="2" />
<text  x="54.74" y="1679.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::modification_statement (3 samples, 0.06%)</title><rect x="75.6" y="1797" width="0.6" height="15.0" fill="rgb(205,133,1)" rx="2" ry="2" />
<text  x="78.57" y="1807.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (9 samples, 0.17%)</title><rect x="1101.5" y="1829" width="2.0" height="15.0" fill="rgb(207,50,37)" rx="2" ry="2" />
<text  x="1104.48" y="1839.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (1 samples, 0.02%)</title><rect x="1188.5" y="101" width="0.2" height="15.0" fill="rgb(235,0,49)" rx="2" ry="2" />
<text  x="1191.47" y="111.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (8 samples, 0.15%)</title><rect x="54.1" y="1525" width="1.8" height="15.0" fill="rgb(206,62,34)" rx="2" ry="2" />
<text  x="57.15" y="1535.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (47 samples, 0.87%)</title><rect x="501.3" y="1717" width="10.3" height="15.0" fill="rgb(249,148,24)" rx="2" ry="2" />
<text  x="504.32" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (11 samples, 0.20%)</title><rect x="91.7" y="1877" width="2.4" height="15.0" fill="rgb(234,146,38)" rx="2" ry="2" />
<text  x="94.74" y="1887.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (5 samples, 0.09%)</title><rect x="154.7" y="1845" width="1.1" height="15.0" fill="rgb(223,106,14)" rx="2" ry="2" />
<text  x="157.69" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="43.9" y="1669" width="0.2" height="15.0" fill="rgb(251,71,7)" rx="2" ry="2" />
<text  x="46.88" y="1679.5" ></text>
</g>
<g >
<title>gms::gossiper::start_gossiping (1 samples, 0.02%)</title><rect x="19.6" y="1861" width="0.2" height="15.0" fill="rgb(211,155,43)" rx="2" ry="2" />
<text  x="22.62" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (5 samples, 0.09%)</title><rect x="1150.9" y="1845" width="1.1" height="15.0" fill="rgb(233,1,5)" rx="2" ry="2" />
<text  x="1153.88" y="1855.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (3 samples, 0.06%)</title><rect x="326.5" y="1685" width="0.6" height="15.0" fill="rgb(227,89,53)" rx="2" ry="2" />
<text  x="329.47" y="1695.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (33 samples, 0.61%)</title><rect x="559.2" y="1829" width="7.3" height="15.0" fill="rgb(212,33,47)" rx="2" ry="2" />
<text  x="562.24" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (8 samples, 0.15%)</title><rect x="592.7" y="1781" width="1.7" height="15.0" fill="rgb(220,114,19)" rx="2" ry="2" />
<text  x="595.68" y="1791.5" ></text>
</g>
<g >
<title>partition_slice_builder::build (1 samples, 0.02%)</title><rect x="100.7" y="1797" width="0.2" height="15.0" fill="rgb(209,163,18)" rx="2" ry="2" />
<text  x="103.70" y="1807.5" ></text>
</g>
<g >
<title>seastar::reactor::signal_pollfn::poll (1 samples, 0.02%)</title><rect x="1169.9" y="1925" width="0.2" height="15.0" fill="rgb(234,105,16)" rx="2" ry="2" />
<text  x="1172.89" y="1935.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="585.5" y="1733" width="0.2" height="15.0" fill="rgb(206,183,35)" rx="2" ry="2" />
<text  x="588.47" y="1743.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="551.2" y="1685" width="0.4" height="15.0" fill="rgb(209,164,9)" rx="2" ry="2" />
<text  x="554.15" y="1695.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (2 samples, 0.04%)</title><rect x="579.1" y="1717" width="0.5" height="15.0" fill="rgb(212,42,25)" rx="2" ry="2" />
<text  x="582.13" y="1727.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.02%)</title><rect x="1188.5" y="133" width="0.2" height="15.0" fill="rgb(239,37,0)" rx="2" ry="2" />
<text  x="1191.47" y="143.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1733" width="0.3" height="15.0" fill="rgb(207,226,0)" rx="2" ry="2" />
<text  x="13.44" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1189.6" y="85" width="0.2" height="15.0" fill="rgb(224,209,45)" rx="2" ry="2" />
<text  x="1192.56" y="95.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1557" width="2.9" height="15.0" fill="rgb(216,141,53)" rx="2" ry="2" />
<text  x="1189.94" y="1567.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (22 samples, 0.41%)</title><rect x="122.3" y="1829" width="4.8" height="15.0" fill="rgb(219,209,16)" rx="2" ry="2" />
<text  x="125.34" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (15 samples, 0.28%)</title><rect x="562.3" y="1797" width="3.3" height="15.0" fill="rgb(232,129,50)" rx="2" ry="2" />
<text  x="565.30" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (16 samples, 0.30%)</title><rect x="1038.5" y="1701" width="3.5" height="15.0" fill="rgb(223,7,49)" rx="2" ry="2" />
<text  x="1041.54" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="727.7" y="1829" width="1.8" height="15.0" fill="rgb(246,169,13)" rx="2" ry="2" />
<text  x="730.75" y="1839.5" ></text>
</g>
<g >
<title>db::system_keyspace::all_tables (1 samples, 0.02%)</title><rect x="19.4" y="1717" width="0.2" height="15.0" fill="rgb(218,22,23)" rx="2" ry="2" />
<text  x="22.40" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="45.0" y="1669" width="0.2" height="15.0" fill="rgb(226,83,35)" rx="2" ry="2" />
<text  x="47.97" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_users_statement, std::default_delete&lt;cql3::statements::list_users_statement&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="67.0" y="1797" width="0.5" height="15.0" fill="rgb(215,78,39)" rx="2" ry="2" />
<text  x="70.04" y="1807.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (5 samples, 0.09%)</title><rect x="421.5" y="1637" width="1.1" height="15.0" fill="rgb(253,80,0)" rx="2" ry="2" />
<text  x="424.55" y="1647.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (1,092 samples, 20.23%)</title><rect x="878.6" y="1861" width="238.6" height="15.0" fill="rgb(239,196,36)" rx="2" ry="2" />
<text  x="881.55" y="1871.5" >cql3::statements::select_statem..</text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1013" width="2.9" height="15.0" fill="rgb(216,60,17)" rx="2" ry="2" />
<text  x="1189.94" y="1023.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (6 samples, 0.11%)</title><rect x="695.4" y="1893" width="1.3" height="15.0" fill="rgb(231,131,23)" rx="2" ry="2" />
<text  x="698.40" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="720.3" y="1765" width="0.2" height="15.0" fill="rgb(226,156,29)" rx="2" ry="2" />
<text  x="723.32" y="1775.5" ></text>
</g>
<g >
<title>executor&lt;test_read (615 samples, 11.39%)</title><rect x="726.0" y="1909" width="134.4" height="15.0" fill="rgb(234,32,30)" rx="2" ry="2" />
<text  x="729.00" y="1919.5" >executor&lt;test_read</text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.02%)</title><rect x="866.1" y="1765" width="0.2" height="15.0" fill="rgb(221,167,31)" rx="2" ry="2" />
<text  x="869.10" y="1775.5" ></text>
</g>
<g >
<title>do_cql_test (276 samples, 5.11%)</title><rect x="20.3" y="1973" width="60.3" height="15.0" fill="rgb(240,126,37)" rx="2" ry="2" />
<text  x="23.27" y="1983.5" >do_cql..</text>
</g>
<g >
<title>cql3::query_processor::parse_statement (216 samples, 4.00%)</title><rect x="22.2" y="1893" width="47.2" height="15.0" fill="rgb(219,45,33)" rx="2" ry="2" />
<text  x="25.24" y="1903.5" >cql3..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_table_statement::raw_statement, std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="66.4" y="1797" width="0.2" height="15.0" fill="rgb(239,186,43)" rx="2" ry="2" />
<text  x="69.39" y="1807.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="19.4" y="1893" width="0.2" height="15.0" fill="rgb(223,96,5)" rx="2" ry="2" />
<text  x="22.40" y="1903.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (23 samples, 0.43%)</title><rect x="1118.3" y="1733" width="5.0" height="15.0" fill="rgb(254,120,52)" rx="2" ry="2" />
<text  x="1121.31" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::untyped_constant (1 samples, 0.02%)</title><rect x="54.8" y="1333" width="0.2" height="15.0" fill="rgb(226,8,50)" rx="2" ry="2" />
<text  x="57.80" y="1343.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (17 samples, 0.31%)</title><rect x="817.1" y="1765" width="3.8" height="15.0" fill="rgb(212,167,54)" rx="2" ry="2" />
<text  x="820.14" y="1775.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (3 samples, 0.06%)</title><rect x="576.5" y="1733" width="0.7" height="15.0" fill="rgb(226,202,9)" rx="2" ry="2" />
<text  x="579.50" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="549" width="0.3" height="15.0" fill="rgb(224,160,44)" rx="2" ry="2" />
<text  x="13.44" y="559.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.02%)</title><rect x="78.2" y="1877" width="0.2" height="15.0" fill="rgb(221,126,15)" rx="2" ry="2" />
<text  x="81.19" y="1887.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (1 samples, 0.02%)</title><rect x="606.2" y="1861" width="0.2" height="15.0" fill="rgb(238,212,21)" rx="2" ry="2" />
<text  x="609.23" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (2 samples, 0.04%)</title><rect x="471.8" y="1685" width="0.5" height="15.0" fill="rgb(223,176,54)" rx="2" ry="2" />
<text  x="474.82" y="1695.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (6 samples, 0.11%)</title><rect x="748.1" y="1765" width="1.3" height="15.0" fill="rgb(222,226,47)" rx="2" ry="2" />
<text  x="751.07" y="1775.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (4 samples, 0.07%)</title><rect x="174.6" y="1733" width="0.8" height="15.0" fill="rgb(254,227,49)" rx="2" ry="2" />
<text  x="177.57" y="1743.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="164.5" y="1845" width="0.2" height="15.0" fill="rgb(217,87,18)" rx="2" ry="2" />
<text  x="167.52" y="1855.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (21 samples, 0.39%)</title><rect x="496.3" y="1701" width="4.6" height="15.0" fill="rgb(233,1,42)" rx="2" ry="2" />
<text  x="499.29" y="1711.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (1 samples, 0.02%)</title><rect x="129.6" y="1877" width="0.2" height="15.0" fill="rgb(221,182,35)" rx="2" ry="2" />
<text  x="132.55" y="1887.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="803.4" y="1509" width="0.2" height="15.0" fill="rgb(249,35,53)" rx="2" ry="2" />
<text  x="806.37" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::on_new_range (1 samples, 0.02%)</title><rect x="1187.6" y="101" width="0.2" height="15.0" fill="rgb(237,210,2)" rx="2" ry="2" />
<text  x="1190.60" y="111.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="855.2" y="1861" width="0.8" height="15.0" fill="rgb(246,195,15)" rx="2" ry="2" />
<text  x="858.17" y="1871.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.02%)</title><rect x="99.8" y="1893" width="0.2" height="15.0" fill="rgb(216,108,19)" rx="2" ry="2" />
<text  x="102.83" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.52%)</title><rect x="1118.1" y="1861" width="6.1" height="15.0" fill="rgb(224,148,51)" rx="2" ry="2" />
<text  x="1121.09" y="1871.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (3 samples, 0.06%)</title><rect x="100.7" y="1829" width="0.7" height="15.0" fill="rgb(222,47,54)" rx="2" ry="2" />
<text  x="103.70" y="1839.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="57.9" y="1525" width="0.2" height="15.0" fill="rgb(242,34,34)" rx="2" ry="2" />
<text  x="60.86" y="1535.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1051.7" y="1717" width="0.2" height="15.0" fill="rgb(213,203,4)" rx="2" ry="2" />
<text  x="1054.65" y="1727.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="62.2" y="1525" width="0.3" height="15.0" fill="rgb(220,98,0)" rx="2" ry="2" />
<text  x="65.24" y="1535.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="19.0" y="1861" width="0.2" height="15.0" fill="rgb(225,190,8)" rx="2" ry="2" />
<text  x="21.96" y="1871.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (7 samples, 0.13%)</title><rect x="610.4" y="1861" width="1.5" height="15.0" fill="rgb(214,229,13)" rx="2" ry="2" />
<text  x="613.38" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;global_schema_ptr, std::allocator&lt;global_schema_ptr&gt; &gt;::_M_realloc_insert&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="99.2" y="1861" width="0.2" height="15.0" fill="rgb(243,155,27)" rx="2" ry="2" />
<text  x="102.17" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.20%)</title><rect x="563.2" y="1749" width="2.4" height="15.0" fill="rgb(205,94,20)" rx="2" ry="2" />
<text  x="566.17" y="1759.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="545.5" y="1717" width="0.2" height="15.0" fill="rgb(208,23,26)" rx="2" ry="2" />
<text  x="548.47" y="1727.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (1 samples, 0.02%)</title><rect x="864.6" y="1829" width="0.2" height="15.0" fill="rgb(248,24,6)" rx="2" ry="2" />
<text  x="867.57" y="1839.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="19.4" y="1813" width="0.2" height="15.0" fill="rgb(239,27,25)" rx="2" ry="2" />
<text  x="22.40" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (4 samples, 0.07%)</title><rect x="1161.6" y="1909" width="0.9" height="15.0" fill="rgb(219,78,21)" rx="2" ry="2" />
<text  x="1164.59" y="1919.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.02%)</title><rect x="461.3" y="1765" width="0.2" height="15.0" fill="rgb(253,93,36)" rx="2" ry="2" />
<text  x="464.32" y="1775.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (14 samples, 0.26%)</title><rect x="549.2" y="1717" width="3.0" height="15.0" fill="rgb(229,4,35)" rx="2" ry="2" />
<text  x="552.19" y="1727.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (5 samples, 0.09%)</title><rect x="487.6" y="1749" width="1.0" height="15.0" fill="rgb(214,39,24)" rx="2" ry="2" />
<text  x="490.55" y="1759.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.02%)</title><rect x="947.6" y="1829" width="0.2" height="15.0" fill="rgb(245,81,53)" rx="2" ry="2" />
<text  x="950.62" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (2 samples, 0.04%)</title><rect x="32.1" y="1669" width="0.4" height="15.0" fill="rgb(250,63,0)" rx="2" ry="2" />
<text  x="35.07" y="1679.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&gt; (1 samples, 0.02%)</title><rect x="47.2" y="1749" width="0.2" height="15.0" fill="rgb(229,216,27)" rx="2" ry="2" />
<text  x="50.16" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="73.4" y="1685" width="0.2" height="15.0" fill="rgb(245,183,37)" rx="2" ry="2" />
<text  x="76.38" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="43.2" y="1717" width="0.2" height="15.0" fill="rgb(219,151,10)" rx="2" ry="2" />
<text  x="46.22" y="1727.5" ></text>
</g>
<g >
<title>database::find_schema (8 samples, 0.15%)</title><rect x="765.3" y="1813" width="1.8" height="15.0" fill="rgb(205,229,42)" rx="2" ry="2" />
<text  x="768.34" y="1823.5" ></text>
</g>
<g >
<title>seastar::open_directory (1 samples, 0.02%)</title><rect x="81.7" y="1957" width="0.2" height="15.0" fill="rgb(216,130,39)" rx="2" ry="2" />
<text  x="84.69" y="1967.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="548.7" y="1733" width="0.3" height="15.0" fill="rgb(217,95,29)" rx="2" ry="2" />
<text  x="551.75" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="907.8" y="1717" width="0.3" height="15.0" fill="rgb(212,39,26)" rx="2" ry="2" />
<text  x="910.84" y="1727.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_e5391f1eed1c0aa1965864b177f1772e13a61139] (1 samples, 0.02%)</title><rect x="1161.6" y="1893" width="0.2" height="15.0" fill="rgb(252,98,6)" rx="2" ry="2" />
<text  x="1164.59" y="1903.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="58.5" y="1525" width="0.2" height="15.0" fill="rgb(208,176,32)" rx="2" ry="2" />
<text  x="61.52" y="1535.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="864.6" y="1749" width="0.2" height="15.0" fill="rgb(247,36,36)" rx="2" ry="2" />
<text  x="867.57" y="1759.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3 samples, 0.06%)</title><rect x="695.6" y="1733" width="0.7" height="15.0" fill="rgb(223,151,6)" rx="2" ry="2" />
<text  x="698.62" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="693" width="2.9" height="15.0" fill="rgb(240,57,46)" rx="2" ry="2" />
<text  x="1189.94" y="703.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (33 samples, 0.61%)</title><rect x="1126.0" y="1749" width="7.2" height="15.0" fill="rgb(238,99,21)" rx="2" ry="2" />
<text  x="1128.96" y="1759.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="240.6" y="1541" width="0.4" height="15.0" fill="rgb(220,151,6)" rx="2" ry="2" />
<text  x="243.58" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.22%)</title><rect x="1007.7" y="1685" width="2.6" height="15.0" fill="rgb(218,105,17)" rx="2" ry="2" />
<text  x="1010.72" y="1695.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="100.5" y="1765" width="0.2" height="15.0" fill="rgb(231,22,2)" rx="2" ry="2" />
<text  x="103.48" y="1775.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1167.1" y="1861" width="0.2" height="15.0" fill="rgb(227,195,4)" rx="2" ry="2" />
<text  x="1170.05" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;sstables::option [], utils::chunked_vector_free_deleter&gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="17.4" y="1925" width="0.2" height="15.0" fill="rgb(223,143,23)" rx="2" ry="2" />
<text  x="20.43" y="1935.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="17.4" y="1973" width="0.2" height="15.0" fill="rgb(226,134,32)" rx="2" ry="2" />
<text  x="20.43" y="1983.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="436.0" y="1621" width="0.2" height="15.0" fill="rgb(221,115,49)" rx="2" ry="2" />
<text  x="438.97" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="107.5" y="1893" width="0.2" height="15.0" fill="rgb(244,202,49)" rx="2" ry="2" />
<text  x="110.48" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="1144.5" y="1909" width="0.3" height="15.0" fill="rgb(236,200,26)" rx="2" ry="2" />
<text  x="1147.54" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.04%)</title><rect x="58.3" y="1637" width="0.4" height="15.0" fill="rgb(205,219,6)" rx="2" ry="2" />
<text  x="61.30" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (3 samples, 0.06%)</title><rect x="71.2" y="1829" width="0.7" height="15.0" fill="rgb(232,190,47)" rx="2" ry="2" />
<text  x="74.20" y="1839.5" ></text>
</g>
<g >
<title>std::apply&lt;seastar::with_file_close_on_failure&lt;sstables::sstable::new_sstable_component_file (2 samples, 0.04%)</title><rect x="636.6" y="1893" width="0.4" height="15.0" fill="rgb(251,131,6)" rx="2" ry="2" />
<text  x="639.61" y="1903.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="61.4" y="1589" width="0.2" height="15.0" fill="rgb(210,186,44)" rx="2" ry="2" />
<text  x="64.36" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (5 samples, 0.09%)</title><rect x="865.7" y="1813" width="1.1" height="15.0" fill="rgb(237,8,46)" rx="2" ry="2" />
<text  x="868.66" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (2 samples, 0.04%)</title><rect x="595.3" y="1797" width="0.4" height="15.0" fill="rgb(245,72,22)" rx="2" ry="2" />
<text  x="598.30" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="50.7" y="1685" width="0.2" height="15.0" fill="rgb(207,137,22)" rx="2" ry="2" />
<text  x="53.65" y="1695.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (36 samples, 0.67%)</title><rect x="503.7" y="1685" width="7.9" height="15.0" fill="rgb(236,22,45)" rx="2" ry="2" />
<text  x="506.72" y="1695.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1093" width="2.9" height="15.0" fill="rgb(240,7,5)" rx="2" ry="2" />
<text  x="1189.94" y="1103.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="673.1" y="1893" width="0.2" height="15.0" fill="rgb(223,116,39)" rx="2" ry="2" />
<text  x="676.11" y="1903.5" ></text>
</g>
<g >
<title>database::apply_in_memory (23 samples, 0.43%)</title><rect x="1118.3" y="1717" width="5.0" height="15.0" fill="rgb(208,115,36)" rx="2" ry="2" />
<text  x="1121.31" y="1727.5" ></text>
</g>
<g >
<title>seastar::reactor::file_size (1 samples, 0.02%)</title><rect x="696.7" y="1893" width="0.2" height="15.0" fill="rgb(220,87,49)" rx="2" ry="2" />
<text  x="699.71" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1173" width="0.3" height="15.0" fill="rgb(250,71,36)" rx="2" ry="2" />
<text  x="13.44" y="1183.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="197.3" y="1637" width="0.2" height="15.0" fill="rgb(246,208,22)" rx="2" ry="2" />
<text  x="200.31" y="1647.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (2 samples, 0.04%)</title><rect x="236.2" y="1509" width="0.4" height="15.0" fill="rgb(213,212,13)" rx="2" ry="2" />
<text  x="239.21" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="989.6" y="1701" width="0.2" height="15.0" fill="rgb(219,208,9)" rx="2" ry="2" />
<text  x="992.58" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="435.5" y="1605" width="0.3" height="15.0" fill="rgb(235,132,20)" rx="2" ry="2" />
<text  x="438.53" y="1615.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (18 samples, 0.33%)</title><rect x="375.9" y="1589" width="3.9" height="15.0" fill="rgb(252,176,35)" rx="2" ry="2" />
<text  x="378.87" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (6 samples, 0.11%)</title><rect x="689.7" y="1877" width="1.3" height="15.0" fill="rgb(251,120,50)" rx="2" ry="2" />
<text  x="692.72" y="1887.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="638.4" y="1909" width="0.2" height="15.0" fill="rgb(227,136,43)" rx="2" ry="2" />
<text  x="641.36" y="1919.5" ></text>
</g>
<g >
<title>commitlog_entry_writer::serialize&lt;seastar::memory_output_stream&lt;__gnu_cxx::__normal_iterator&lt;seastar::temporary_buffer&lt;char&gt;*, std::vector&lt;seastar::temporary_buffer&lt;char&gt;, std::allocator&lt;seastar::temporary_buffer&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1123.3" y="1669" width="0.3" height="15.0" fill="rgb(254,91,29)" rx="2" ry="2" />
<text  x="1126.34" y="1679.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.02%)</title><rect x="865.9" y="1765" width="0.2" height="15.0" fill="rgb(252,21,9)" rx="2" ry="2" />
<text  x="868.88" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="647.5" y="1909" width="0.3" height="15.0" fill="rgb(221,132,8)" rx="2" ry="2" />
<text  x="650.54" y="1919.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (11 samples, 0.20%)</title><rect x="474.0" y="1733" width="2.4" height="15.0" fill="rgb(236,36,20)" rx="2" ry="2" />
<text  x="477.00" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="17.4" y="1781" width="0.2" height="15.0" fill="rgb(211,135,0)" rx="2" ry="2" />
<text  x="20.43" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (5 samples, 0.09%)</title><rect x="1188.7" y="245" width="1.1" height="15.0" fill="rgb(254,97,13)" rx="2" ry="2" />
<text  x="1191.69" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (69 samples, 1.28%)</title><rect x="268.8" y="1669" width="15.1" height="15.0" fill="rgb(213,183,8)" rx="2" ry="2" />
<text  x="271.77" y="1679.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (46 samples, 0.85%)</title><rect x="697.6" y="1925" width="10.0" height="15.0" fill="rgb(212,199,31)" rx="2" ry="2" />
<text  x="700.59" y="1935.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (7 samples, 0.13%)</title><rect x="628.5" y="1829" width="1.6" height="15.0" fill="rgb(237,185,13)" rx="2" ry="2" />
<text  x="631.52" y="1839.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (47 samples, 0.87%)</title><rect x="521.0" y="1701" width="10.3" height="15.0" fill="rgb(209,24,26)" rx="2" ry="2" />
<text  x="523.99" y="1711.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (1 samples, 0.02%)</title><rect x="82.8" y="1941" width="0.2" height="15.0" fill="rgb(243,114,24)" rx="2" ry="2" />
<text  x="85.78" y="1951.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="24.9" y="1765" width="0.2" height="15.0" fill="rgb(239,39,53)" rx="2" ry="2" />
<text  x="27.86" y="1775.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1133.6" y="1605" width="0.2" height="15.0" fill="rgb(231,75,49)" rx="2" ry="2" />
<text  x="1136.61" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="45.2" y="1557" width="0.2" height="15.0" fill="rgb(249,214,44)" rx="2" ry="2" />
<text  x="48.19" y="1567.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (5 samples, 0.09%)</title><rect x="546.6" y="1685" width="1.1" height="15.0" fill="rgb(237,44,9)" rx="2" ry="2" />
<text  x="549.56" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="651.7" y="1845" width="0.2" height="15.0" fill="rgb(244,109,6)" rx="2" ry="2" />
<text  x="654.69" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (5 samples, 0.09%)</title><rect x="396.8" y="1621" width="1.1" height="15.0" fill="rgb(214,173,48)" rx="2" ry="2" />
<text  x="399.85" y="1631.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="19.6" y="1941" width="0.2" height="15.0" fill="rgb(229,14,46)" rx="2" ry="2" />
<text  x="22.62" y="1951.5" ></text>
</g>
<g >
<title>compound_type&lt; (15 samples, 0.28%)</title><rect x="930.4" y="1797" width="3.2" height="15.0" fill="rgb(227,15,26)" rx="2" ry="2" />
<text  x="933.35" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (2 samples, 0.04%)</title><rect x="48.2" y="1605" width="0.5" height="15.0" fill="rgb(242,226,44)" rx="2" ry="2" />
<text  x="51.25" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (3 samples, 0.06%)</title><rect x="550.3" y="1669" width="0.6" height="15.0" fill="rgb(225,200,22)" rx="2" ry="2" />
<text  x="553.28" y="1679.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="918.8" y="1781" width="0.2" height="15.0" fill="rgb(247,106,8)" rx="2" ry="2" />
<text  x="921.77" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="773.4" y="1765" width="0.5" height="15.0" fill="rgb(208,218,44)" rx="2" ry="2" />
<text  x="776.43" y="1775.5" ></text>
</g>
<g >
<title>boost::algorithm::any_of&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;, std::_Bind_front&lt;bool  (3 samples, 0.06%)</title><rect x="864.8" y="1797" width="0.6" height="15.0" fill="rgb(221,0,37)" rx="2" ry="2" />
<text  x="867.78" y="1807.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (1 samples, 0.02%)</title><rect x="620.7" y="1861" width="0.2" height="15.0" fill="rgb(236,90,3)" rx="2" ry="2" />
<text  x="623.65" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1589" width="2.9" height="15.0" fill="rgb(208,186,19)" rx="2" ry="2" />
<text  x="1189.94" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="519.5" y="1701" width="0.6" height="15.0" fill="rgb(245,134,4)" rx="2" ry="2" />
<text  x="522.46" y="1711.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="519.5" y="1717" width="0.6" height="15.0" fill="rgb(251,85,16)" rx="2" ry="2" />
<text  x="522.46" y="1727.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (1 samples, 0.02%)</title><rect x="838.6" y="1861" width="0.2" height="15.0" fill="rgb(247,216,18)" rx="2" ry="2" />
<text  x="841.56" y="1871.5" ></text>
</g>
<g >
<title>cdc::generation_service::make_new_generation (1 samples, 0.02%)</title><rect x="19.8" y="1877" width="0.3" height="15.0" fill="rgb(236,103,26)" rx="2" ry="2" />
<text  x="22.84" y="1887.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (4 samples, 0.07%)</title><rect x="93.3" y="1845" width="0.8" height="15.0" fill="rgb(206,74,41)" rx="2" ry="2" />
<text  x="96.27" y="1855.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (7 samples, 0.13%)</title><rect x="738.2" y="1733" width="1.6" height="15.0" fill="rgb(233,167,39)" rx="2" ry="2" />
<text  x="741.24" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="773" width="0.3" height="15.0" fill="rgb(219,214,45)" rx="2" ry="2" />
<text  x="13.44" y="783.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier_raw, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (2 samples, 0.04%)</title><rect x="46.7" y="1733" width="0.5" height="15.0" fill="rgb(233,7,17)" rx="2" ry="2" />
<text  x="49.72" y="1743.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (2 samples, 0.04%)</title><rect x="405.2" y="1605" width="0.4" height="15.0" fill="rgb(224,183,4)" rx="2" ry="2" />
<text  x="408.15" y="1615.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (5 samples, 0.09%)</title><rect x="100.3" y="1925" width="1.1" height="15.0" fill="rgb(220,124,31)" rx="2" ry="2" />
<text  x="103.26" y="1935.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="581" width="2.9" height="15.0" fill="rgb(216,174,9)" rx="2" ry="2" />
<text  x="1189.94" y="591.5" ></text>
</g>
<g >
<title>v3_columns::v3_columns (1 samples, 0.02%)</title><rect x="99.0" y="1829" width="0.2" height="15.0" fill="rgb(216,165,47)" rx="2" ry="2" />
<text  x="101.95" y="1839.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_28has_slice_or_needs_filteringERKNS2_10expressionEEUlRKNS2_15binary_operatorEE_EEPS8_S6_T_EUlS9_E_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_8constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_11conjunctionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_12column_valueEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_5tokenEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13function_callEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4castEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_15field_selectionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4nullEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13bind_variableEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_16untyped_constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_17tuple_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_22collection_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSI_S7_SM_SQ_SU_SY_S12_S16_S1A_S1E_S1I_S1M_SE_S1Q_S1U_S1Y_EEEENSt13invoke_resultISC_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSC_DpOS28_ (1 samples, 0.02%)</title><rect x="945.9" y="1765" width="0.2" height="15.0" fill="rgb(211,42,16)" rx="2" ry="2" />
<text  x="948.87" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (10 samples, 0.19%)</title><rect x="856.9" y="1893" width="2.2" height="15.0" fill="rgb(235,155,53)" rx="2" ry="2" />
<text  x="859.92" y="1903.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (2 samples, 0.04%)</title><rect x="1189.3" y="213" width="0.5" height="15.0" fill="rgb(215,26,44)" rx="2" ry="2" />
<text  x="1192.34" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="891.9" y="1717" width="0.2" height="15.0" fill="rgb(253,139,43)" rx="2" ry="2" />
<text  x="894.89" y="1727.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (4 samples, 0.07%)</title><rect x="939.1" y="1813" width="0.9" height="15.0" fill="rgb(224,194,48)" rx="2" ry="2" />
<text  x="942.09" y="1823.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (10 samples, 0.19%)</title><rect x="829.4" y="1797" width="2.2" height="15.0" fill="rgb(253,121,21)" rx="2" ry="2" />
<text  x="832.38" y="1807.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="18.1" y="1957" width="0.2" height="15.0" fill="rgb(217,59,48)" rx="2" ry="2" />
<text  x="21.09" y="1967.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::optional&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt; &gt; &gt;::invoke&lt;cql3::query_processor::for_each_cql_result (1 samples, 0.02%)</title><rect x="636.4" y="1893" width="0.2" height="15.0" fill="rgb(229,195,33)" rx="2" ry="2" />
<text  x="639.39" y="1903.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1 samples, 0.02%)</title><rect x="423.5" y="1653" width="0.2" height="15.0" fill="rgb(210,211,48)" rx="2" ry="2" />
<text  x="426.51" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (1 samples, 0.02%)</title><rect x="582.8" y="1701" width="0.3" height="15.0" fill="rgb(215,134,10)" rx="2" ry="2" />
<text  x="585.84" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (3 samples, 0.06%)</title><rect x="1152.8" y="1877" width="0.7" height="15.0" fill="rgb(240,137,54)" rx="2" ry="2" />
<text  x="1155.84" y="1887.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (1 samples, 0.02%)</title><rect x="755.7" y="1813" width="0.2" height="15.0" fill="rgb(252,223,35)" rx="2" ry="2" />
<text  x="758.72" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="43.2" y="1637" width="0.2" height="15.0" fill="rgb(229,97,24)" rx="2" ry="2" />
<text  x="46.22" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="469" width="0.3" height="15.0" fill="rgb(245,113,14)" rx="2" ry="2" />
<text  x="13.44" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="602.1" y="1797" width="0.4" height="15.0" fill="rgb(246,133,38)" rx="2" ry="2" />
<text  x="605.08" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="933" width="0.3" height="15.0" fill="rgb(219,38,44)" rx="2" ry="2" />
<text  x="13.44" y="943.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (1 samples, 0.02%)</title><rect x="1188.3" y="133" width="0.2" height="15.0" fill="rgb(245,55,7)" rx="2" ry="2" />
<text  x="1191.25" y="143.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (1 samples, 0.02%)</title><rect x="713.3" y="1829" width="0.2" height="15.0" fill="rgb(208,103,38)" rx="2" ry="2" />
<text  x="716.32" y="1839.5" ></text>
</g>
<g >
<title>ser::serializer&lt;ser::live_cell_view&gt;::read&lt;seastar::simple_memory_input_stream&gt; (2 samples, 0.04%)</title><rect x="1120.9" y="1605" width="0.5" height="15.0" fill="rgb(236,208,35)" rx="2" ry="2" />
<text  x="1123.94" y="1615.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="727.7" y="1845" width="1.8" height="15.0" fill="rgb(249,179,13)" rx="2" ry="2" />
<text  x="730.75" y="1855.5" ></text>
</g>
<g >
<title>std::_Bind_front&lt;bool  (1 samples, 0.02%)</title><rect x="865.0" y="1781" width="0.2" height="15.0" fill="rgb(227,105,24)" rx="2" ry="2" />
<text  x="868.00" y="1791.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (1 samples, 0.02%)</title><rect x="1028.7" y="1621" width="0.2" height="15.0" fill="rgb(238,6,3)" rx="2" ry="2" />
<text  x="1031.70" y="1631.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (40 samples, 0.74%)</title><rect x="1019.7" y="1637" width="8.8" height="15.0" fill="rgb(253,19,54)" rx="2" ry="2" />
<text  x="1022.74" y="1647.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1186.9" y="469" width="0.3" height="15.0" fill="rgb(208,184,4)" rx="2" ry="2" />
<text  x="1189.94" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="57.2" y="1557" width="0.4" height="15.0" fill="rgb(246,16,10)" rx="2" ry="2" />
<text  x="60.21" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="586.3" y="1749" width="0.5" height="15.0" fill="rgb(223,170,5)" rx="2" ry="2" />
<text  x="589.34" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (1 samples, 0.02%)</title><rect x="72.9" y="1765" width="0.3" height="15.0" fill="rgb(244,125,31)" rx="2" ry="2" />
<text  x="75.94" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::execution_stage_manager::flush (1 samples, 0.02%)</title><rect x="1169.5" y="1925" width="0.2" height="15.0" fill="rgb(242,45,52)" rx="2" ry="2" />
<text  x="1172.46" y="1935.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (3 samples, 0.06%)</title><rect x="842.3" y="1797" width="0.6" height="15.0" fill="rgb(239,53,36)" rx="2" ry="2" />
<text  x="845.27" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (1 samples, 0.02%)</title><rect x="73.2" y="1749" width="0.2" height="15.0" fill="rgb(250,209,32)" rx="2" ry="2" />
<text  x="76.16" y="1759.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (3 samples, 0.06%)</title><rect x="362.5" y="1605" width="0.7" height="15.0" fill="rgb(207,81,53)" rx="2" ry="2" />
<text  x="365.54" y="1615.5" ></text>
</g>
<g >
<title>database::find_column_family (7 samples, 0.13%)</title><rect x="765.3" y="1797" width="1.6" height="15.0" fill="rgb(240,68,21)" rx="2" ry="2" />
<text  x="768.34" y="1807.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (4 samples, 0.07%)</title><rect x="748.3" y="1733" width="0.9" height="15.0" fill="rgb(230,45,21)" rx="2" ry="2" />
<text  x="751.29" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (4 samples, 0.07%)</title><rect x="1145.0" y="1877" width="0.9" height="15.0" fill="rgb(224,207,32)" rx="2" ry="2" />
<text  x="1147.98" y="1887.5" ></text>
</g>
<g >
<title>seastar::reactor::open_directory (1 samples, 0.02%)</title><rect x="81.7" y="1941" width="0.2" height="15.0" fill="rgb(253,127,54)" rx="2" ry="2" />
<text  x="84.69" y="1951.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="615.6" y="1861" width="0.2" height="15.0" fill="rgb(209,82,46)" rx="2" ry="2" />
<text  x="618.63" y="1871.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (1 samples, 0.02%)</title><rect x="520.6" y="1701" width="0.2" height="15.0" fill="rgb(235,188,48)" rx="2" ry="2" />
<text  x="523.55" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_aligned (1 samples, 0.02%)</title><rect x="81.3" y="2021" width="0.2" height="15.0" fill="rgb(205,90,42)" rx="2" ry="2" />
<text  x="84.25" y="2031.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="987.2" y="1701" width="0.2" height="15.0" fill="rgb(220,165,45)" rx="2" ry="2" />
<text  x="990.18" y="1711.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="41.7" y="1637" width="0.4" height="15.0" fill="rgb(239,200,2)" rx="2" ry="2" />
<text  x="44.69" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (1 samples, 0.02%)</title><rect x="305.3" y="1781" width="0.2" height="15.0" fill="rgb(207,28,45)" rx="2" ry="2" />
<text  x="308.27" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="47.8" y="1557" width="0.4" height="15.0" fill="rgb(206,214,52)" rx="2" ry="2" />
<text  x="50.81" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (9 samples, 0.17%)</title><rect x="692.1" y="1909" width="2.0" height="15.0" fill="rgb(251,100,35)" rx="2" ry="2" />
<text  x="695.12" y="1919.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (5 samples, 0.09%)</title><rect x="293.7" y="1701" width="1.1" height="15.0" fill="rgb(206,207,15)" rx="2" ry="2" />
<text  x="296.69" y="1711.5" ></text>
</g>
<g >
<title>gms::gossiper::add_local_application_state (1 samples, 0.02%)</title><rect x="10.7" y="1845" width="0.2" height="15.0" fill="rgb(216,50,37)" rx="2" ry="2" />
<text  x="13.66" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="41.7" y="1669" width="0.4" height="15.0" fill="rgb(208,99,0)" rx="2" ry="2" />
<text  x="44.69" y="1679.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (3 samples, 0.06%)</title><rect x="750.3" y="1797" width="0.6" height="15.0" fill="rgb(246,149,34)" rx="2" ry="2" />
<text  x="753.26" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="729.9" y="1845" width="0.3" height="15.0" fill="rgb(218,191,10)" rx="2" ry="2" />
<text  x="732.93" y="1855.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (4 samples, 0.07%)</title><rect x="896.3" y="1701" width="0.8" height="15.0" fill="rgb(206,39,10)" rx="2" ry="2" />
<text  x="899.26" y="1711.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="17.4" y="1717" width="0.2" height="15.0" fill="rgb(247,83,14)" rx="2" ry="2" />
<text  x="20.43" y="1727.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::to_receivers (1 samples, 0.02%)</title><rect x="72.7" y="1781" width="0.2" height="15.0" fill="rgb(216,190,21)" rx="2" ry="2" />
<text  x="75.73" y="1791.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (2 samples, 0.04%)</title><rect x="510.3" y="1605" width="0.4" height="15.0" fill="rgb(218,2,47)" rx="2" ry="2" />
<text  x="513.28" y="1615.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="807.5" y="1637" width="0.2" height="15.0" fill="rgb(214,186,4)" rx="2" ry="2" />
<text  x="810.52" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (41 samples, 0.76%)</title><rect x="895.4" y="1717" width="8.9" height="15.0" fill="rgb(248,2,12)" rx="2" ry="2" />
<text  x="898.38" y="1727.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.02%)</title><rect x="17.9" y="1925" width="0.2" height="15.0" fill="rgb(205,47,41)" rx="2" ry="2" />
<text  x="20.87" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="912.0" y="1733" width="0.6" height="15.0" fill="rgb(220,169,4)" rx="2" ry="2" />
<text  x="914.99" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (10 samples, 0.19%)</title><rect x="673.1" y="1909" width="2.2" height="15.0" fill="rgb(253,211,39)" rx="2" ry="2" />
<text  x="676.11" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="42.6" y="1669" width="0.2" height="15.0" fill="rgb(250,36,5)" rx="2" ry="2" />
<text  x="45.57" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (7 samples, 0.13%)</title><rect x="45.2" y="1749" width="1.5" height="15.0" fill="rgb(219,107,20)" rx="2" ry="2" />
<text  x="48.19" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.02%)</title><rect x="52.8" y="1717" width="0.3" height="15.0" fill="rgb(240,100,11)" rx="2" ry="2" />
<text  x="55.84" y="1727.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="100.0" y="1733" width="0.3" height="15.0" fill="rgb(232,123,25)" rx="2" ry="2" />
<text  x="103.05" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (6 samples, 0.11%)</title><rect x="1188.5" y="293" width="1.3" height="15.0" fill="rgb(221,152,31)" rx="2" ry="2" />
<text  x="1191.47" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_realloc_insert&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; (1 samples, 0.02%)</title><rect x="100.7" y="1781" width="0.2" height="15.0" fill="rgb(229,48,21)" rx="2" ry="2" />
<text  x="103.70" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (1 samples, 0.02%)</title><rect x="814.5" y="1701" width="0.2" height="15.0" fill="rgb(211,154,11)" rx="2" ry="2" />
<text  x="817.52" y="1711.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::forward_to (1 samples, 0.02%)</title><rect x="721.2" y="1925" width="0.2" height="15.0" fill="rgb(224,197,9)" rx="2" ry="2" />
<text  x="724.19" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="24.2" y="1749" width="0.2" height="15.0" fill="rgb(232,72,43)" rx="2" ry="2" />
<text  x="27.21" y="1759.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (3 samples, 0.06%)</title><rect x="271.0" y="1621" width="0.6" height="15.0" fill="rgb(252,78,22)" rx="2" ry="2" />
<text  x="273.96" y="1631.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::create_table_statement::raw_statement*, std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="66.4" y="1749" width="0.2" height="15.0" fill="rgb(216,178,18)" rx="2" ry="2" />
<text  x="69.39" y="1759.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="555.1" y="1749" width="0.4" height="15.0" fill="rgb(234,133,18)" rx="2" ry="2" />
<text  x="558.09" y="1759.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="99.4" y="1765" width="0.2" height="15.0" fill="rgb(225,62,23)" rx="2" ry="2" />
<text  x="102.39" y="1775.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="310.1" y="1717" width="0.2" height="15.0" fill="rgb(229,75,14)" rx="2" ry="2" />
<text  x="313.08" y="1727.5" ></text>
</g>
<g >
<title>ser::set_size&lt;bytes_ostream, partition_key&gt; (1 samples, 0.02%)</title><rect x="1131.4" y="1589" width="0.2" height="15.0" fill="rgb(207,155,2)" rx="2" ry="2" />
<text  x="1134.43" y="1599.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1096.9" y="1765" width="0.2" height="15.0" fill="rgb(230,48,44)" rx="2" ry="2" />
<text  x="1099.89" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1637" width="2.9" height="15.0" fill="rgb(240,78,16)" rx="2" ry="2" />
<text  x="1189.94" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (3 samples, 0.06%)</title><rect x="318.4" y="1813" width="0.6" height="15.0" fill="rgb(228,137,51)" rx="2" ry="2" />
<text  x="321.39" y="1823.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="805.6" y="1637" width="0.4" height="15.0" fill="rgb(225,181,17)" rx="2" ry="2" />
<text  x="808.55" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (1 samples, 0.02%)</title><rect x="450.0" y="1829" width="0.2" height="15.0" fill="rgb(235,50,19)" rx="2" ry="2" />
<text  x="452.96" y="1839.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.07%)</title><rect x="695.6" y="1765" width="0.9" height="15.0" fill="rgb(219,222,45)" rx="2" ry="2" />
<text  x="698.62" y="1775.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (86 samples, 1.59%)</title><rect x="514.0" y="1749" width="18.8" height="15.0" fill="rgb(246,101,12)" rx="2" ry="2" />
<text  x="517.00" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="50.7" y="1653" width="0.2" height="15.0" fill="rgb(239,93,52)" rx="2" ry="2" />
<text  x="53.65" y="1663.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (6 samples, 0.11%)</title><rect x="908.1" y="1765" width="1.3" height="15.0" fill="rgb(215,29,18)" rx="2" ry="2" />
<text  x="911.06" y="1775.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (1 samples, 0.02%)</title><rect x="676.6" y="1893" width="0.2" height="15.0" fill="rgb(224,180,3)" rx="2" ry="2" />
<text  x="679.60" y="1903.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (25 samples, 0.46%)</title><rect x="410.6" y="1589" width="5.5" height="15.0" fill="rgb(253,212,4)" rx="2" ry="2" />
<text  x="413.62" y="1599.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (2 samples, 0.04%)</title><rect x="330.2" y="1669" width="0.4" height="15.0" fill="rgb(253,182,52)" rx="2" ry="2" />
<text  x="333.19" y="1679.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::partition_key_restrictions (1 samples, 0.02%)</title><rect x="74.5" y="1749" width="0.2" height="15.0" fill="rgb(212,36,28)" rx="2" ry="2" />
<text  x="77.47" y="1759.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (4 samples, 0.07%)</title><rect x="1050.8" y="1717" width="0.9" height="15.0" fill="rgb(249,190,50)" rx="2" ry="2" />
<text  x="1053.78" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="17.6" y="2021" width="0.3" height="15.0" fill="rgb(210,179,51)" rx="2" ry="2" />
<text  x="20.65" y="2031.5" ></text>
</g>
<g >
<title>database::add_column_family (5 samples, 0.09%)</title><rect x="100.3" y="1909" width="1.1" height="15.0" fill="rgb(216,68,37)" rx="2" ry="2" />
<text  x="103.26" y="1919.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (3 samples, 0.06%)</title><rect x="653.7" y="1909" width="0.6" height="15.0" fill="rgb(223,111,15)" rx="2" ry="2" />
<text  x="656.66" y="1919.5" ></text>
</g>
<g >
<title>list_type_impl::list_type_impl (1 samples, 0.02%)</title><rect x="19.4" y="1621" width="0.2" height="15.0" fill="rgb(209,87,52)" rx="2" ry="2" />
<text  x="22.40" y="1631.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (47 samples, 0.87%)</title><rect x="306.1" y="1765" width="10.3" height="15.0" fill="rgb(206,89,2)" rx="2" ry="2" />
<text  x="309.15" y="1775.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="628.7" y="1813" width="0.9" height="15.0" fill="rgb(216,34,16)" rx="2" ry="2" />
<text  x="631.74" y="1823.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.02%)</title><rect x="500.9" y="1701" width="0.2" height="15.0" fill="rgb(254,171,41)" rx="2" ry="2" />
<text  x="503.88" y="1711.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (5 samples, 0.09%)</title><rect x="1096.0" y="1797" width="1.1" height="15.0" fill="rgb(209,216,34)" rx="2" ry="2" />
<text  x="1099.02" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (4 samples, 0.07%)</title><rect x="49.1" y="1701" width="0.9" height="15.0" fill="rgb(224,91,12)" rx="2" ry="2" />
<text  x="52.12" y="1711.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="768.4" y="1733" width="0.4" height="15.0" fill="rgb(220,11,41)" rx="2" ry="2" />
<text  x="771.40" y="1743.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (3 samples, 0.06%)</title><rect x="933.6" y="1813" width="0.7" height="15.0" fill="rgb(251,1,29)" rx="2" ry="2" />
<text  x="936.63" y="1823.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::find (1 samples, 0.02%)</title><rect x="74.0" y="1717" width="0.3" height="15.0" fill="rgb(213,92,16)" rx="2" ry="2" />
<text  x="77.04" y="1727.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (1 samples, 0.02%)</title><rect x="78.6" y="1781" width="0.2" height="15.0" fill="rgb(207,157,28)" rx="2" ry="2" />
<text  x="81.63" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.06%)</title><rect x="806.4" y="1653" width="0.7" height="15.0" fill="rgb(250,107,17)" rx="2" ry="2" />
<text  x="809.43" y="1663.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (3 samples, 0.06%)</title><rect x="695.6" y="1701" width="0.7" height="15.0" fill="rgb(252,65,13)" rx="2" ry="2" />
<text  x="698.62" y="1711.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="701.7" y="1861" width="0.5" height="15.0" fill="rgb(227,217,16)" rx="2" ry="2" />
<text  x="704.74" y="1871.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="941.7" y="1765" width="0.7" height="15.0" fill="rgb(238,30,22)" rx="2" ry="2" />
<text  x="944.72" y="1775.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="746.5" y="1813" width="0.3" height="15.0" fill="rgb(232,168,13)" rx="2" ry="2" />
<text  x="749.54" y="1823.5" ></text>
</g>
<g >
<title>database::find_column_family (4 samples, 0.07%)</title><rect x="1047.5" y="1765" width="0.9" height="15.0" fill="rgb(248,181,40)" rx="2" ry="2" />
<text  x="1050.50" y="1775.5" ></text>
</g>
<g >
<title>__libc_start_main (4,982 samples, 92.28%)</title><rect x="82.1" y="2053" width="1088.9" height="15.0" fill="rgb(238,218,24)" rx="2" ry="2" />
<text  x="85.12" y="2063.5" >__libc_start_main</text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="987.2" y="1685" width="0.2" height="15.0" fill="rgb(232,128,7)" rx="2" ry="2" />
<text  x="990.18" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (4 samples, 0.07%)</title><rect x="253.3" y="1573" width="0.8" height="15.0" fill="rgb(230,139,12)" rx="2" ry="2" />
<text  x="256.26" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="598.1" y="1813" width="0.3" height="15.0" fill="rgb(206,199,28)" rx="2" ry="2" />
<text  x="601.14" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="24.6" y="1669" width="0.3" height="15.0" fill="rgb(232,47,24)" rx="2" ry="2" />
<text  x="27.64" y="1679.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="100.5" y="1861" width="0.2" height="15.0" fill="rgb(222,2,4)" rx="2" ry="2" />
<text  x="103.48" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_aggregate_statement, std::default_delete&lt;cql3::statements::drop_aggregate_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="67.9" y="1813" width="0.2" height="15.0" fill="rgb(227,199,27)" rx="2" ry="2" />
<text  x="70.92" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="539.6" y="1749" width="0.4" height="15.0" fill="rgb(244,176,45)" rx="2" ry="2" />
<text  x="542.57" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="64.9" y="1765" width="0.2" height="15.0" fill="rgb(232,15,47)" rx="2" ry="2" />
<text  x="67.86" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="24.6" y="1653" width="0.3" height="15.0" fill="rgb(228,217,5)" rx="2" ry="2" />
<text  x="27.64" y="1663.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (4 samples, 0.07%)</title><rect x="209.8" y="1621" width="0.8" height="15.0" fill="rgb(242,165,13)" rx="2" ry="2" />
<text  x="212.76" y="1631.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (6 samples, 0.11%)</title><rect x="512.7" y="1749" width="1.3" height="15.0" fill="rgb(215,57,25)" rx="2" ry="2" />
<text  x="515.69" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="629" width="2.9" height="15.0" fill="rgb(213,37,41)" rx="2" ry="2" />
<text  x="1189.94" y="639.5" ></text>
</g>
<g >
<title>query::querier&lt; (1,894 samples, 35.08%)</title><rect x="157.3" y="1861" width="414.0" height="15.0" fill="rgb(245,121,24)" rx="2" ry="2" />
<text  x="160.31" y="1871.5" >query::querier&lt;</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="41.7" y="1733" width="0.4" height="15.0" fill="rgb(222,194,44)" rx="2" ry="2" />
<text  x="44.69" y="1743.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (16 samples, 0.30%)</title><rect x="1004.2" y="1701" width="3.5" height="15.0" fill="rgb(238,78,52)" rx="2" ry="2" />
<text  x="1007.22" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (6 samples, 0.11%)</title><rect x="54.1" y="1493" width="1.4" height="15.0" fill="rgb(252,122,35)" rx="2" ry="2" />
<text  x="57.15" y="1503.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (448 samples, 8.30%)</title><rect x="331.5" y="1685" width="97.9" height="15.0" fill="rgb(227,172,14)" rx="2" ry="2" />
<text  x="334.50" y="1695.5" >mutation_fr..</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="61.8" y="1717" width="0.2" height="15.0" fill="rgb(205,50,44)" rx="2" ry="2" />
<text  x="64.80" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~deque (1 samples, 0.02%)</title><rect x="23.8" y="1781" width="0.2" height="15.0" fill="rgb(217,155,3)" rx="2" ry="2" />
<text  x="26.77" y="1791.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="14.8" y="2005" width="0.2" height="15.0" fill="rgb(215,69,18)" rx="2" ry="2" />
<text  x="17.81" y="2015.5" ></text>
</g>
<g >
<title>query::result::result (1 samples, 0.02%)</title><rect x="606.0" y="1861" width="0.2" height="15.0" fill="rgb(230,107,24)" rx="2" ry="2" />
<text  x="609.01" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="323.4" y="1701" width="1.1" height="15.0" fill="rgb(237,83,45)" rx="2" ry="2" />
<text  x="326.41" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="61.8" y="1701" width="0.2" height="15.0" fill="rgb(254,10,15)" rx="2" ry="2" />
<text  x="64.80" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="1133.6" y="1653" width="0.2" height="15.0" fill="rgb(206,68,2)" rx="2" ry="2" />
<text  x="1136.61" y="1663.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (1 samples, 0.02%)</title><rect x="1129.2" y="1573" width="0.3" height="15.0" fill="rgb(241,174,5)" rx="2" ry="2" />
<text  x="1132.24" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (14 samples, 0.26%)</title><rect x="271.6" y="1637" width="3.1" height="15.0" fill="rgb(226,82,41)" rx="2" ry="2" />
<text  x="274.62" y="1647.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.02%)</title><rect x="99.6" y="1829" width="0.2" height="15.0" fill="rgb(222,163,26)" rx="2" ry="2" />
<text  x="102.61" y="1839.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_following (1 samples, 0.02%)</title><rect x="41.0" y="1797" width="0.3" height="15.0" fill="rgb(229,163,52)" rx="2" ry="2" />
<text  x="44.04" y="1807.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1188.7" y="229" width="0.2" height="15.0" fill="rgb(223,37,28)" rx="2" ry="2" />
<text  x="1191.69" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="1133.6" y="1621" width="0.2" height="15.0" fill="rgb(244,32,53)" rx="2" ry="2" />
<text  x="1136.61" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (1 samples, 0.02%)</title><rect x="771.0" y="1829" width="0.2" height="15.0" fill="rgb(254,210,47)" rx="2" ry="2" />
<text  x="774.02" y="1839.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (2 samples, 0.04%)</title><rect x="437.3" y="1685" width="0.4" height="15.0" fill="rgb(231,106,36)" rx="2" ry="2" />
<text  x="440.28" y="1695.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.02%)</title><rect x="970.8" y="1781" width="0.2" height="15.0" fill="rgb(209,49,24)" rx="2" ry="2" />
<text  x="973.79" y="1791.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::touch (1 samples, 0.02%)</title><rect x="740.9" y="1845" width="0.2" height="15.0" fill="rgb(215,36,9)" rx="2" ry="2" />
<text  x="743.86" y="1855.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (265 samples, 4.91%)</title><rect x="884.5" y="1845" width="57.9" height="15.0" fill="rgb(245,223,52)" rx="2" ry="2" />
<text  x="887.45" y="1855.5" >cql3::..</text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (10 samples, 0.19%)</title><rect x="911.3" y="1781" width="2.2" height="15.0" fill="rgb(217,187,42)" rx="2" ry="2" />
<text  x="914.34" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="709" width="0.3" height="15.0" fill="rgb(251,39,46)" rx="2" ry="2" />
<text  x="13.44" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1205" width="0.3" height="15.0" fill="rgb(241,201,15)" rx="2" ry="2" />
<text  x="13.44" y="1215.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="1187.2" y="165" width="0.2" height="15.0" fill="rgb(240,28,53)" rx="2" ry="2" />
<text  x="1190.16" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::clear (1 samples, 0.02%)</title><rect x="755.9" y="1829" width="0.3" height="15.0" fill="rgb(252,165,41)" rx="2" ry="2" />
<text  x="758.94" y="1839.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (1 samples, 0.02%)</title><rect x="448.9" y="1797" width="0.2" height="15.0" fill="rgb(213,171,15)" rx="2" ry="2" />
<text  x="451.87" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="63.3" y="1717" width="0.2" height="15.0" fill="rgb(250,139,45)" rx="2" ry="2" />
<text  x="66.33" y="1727.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="57.2" y="1653" width="0.4" height="15.0" fill="rgb(241,158,34)" rx="2" ry="2" />
<text  x="60.21" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="869" width="0.3" height="15.0" fill="rgb(240,104,20)" rx="2" ry="2" />
<text  x="13.44" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation::data, std::default_delete&lt;mutation::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="99.2" y="1765" width="0.2" height="15.0" fill="rgb(216,4,34)" rx="2" ry="2" />
<text  x="102.17" y="1775.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (2 samples, 0.04%)</title><rect x="619.1" y="1861" width="0.5" height="15.0" fill="rgb(252,97,14)" rx="2" ry="2" />
<text  x="622.12" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="296.3" y="1733" width="0.2" height="15.0" fill="rgb(216,89,30)" rx="2" ry="2" />
<text  x="299.31" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.04%)</title><rect x="48.2" y="1701" width="0.5" height="15.0" fill="rgb(238,8,38)" rx="2" ry="2" />
<text  x="51.25" y="1711.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="1052.1" y="1685" width="0.2" height="15.0" fill="rgb(240,72,28)" rx="2" ry="2" />
<text  x="1055.09" y="1695.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1349" width="2.9" height="15.0" fill="rgb(229,126,34)" rx="2" ry="2" />
<text  x="1189.94" y="1359.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="785.4" y="1701" width="1.6" height="15.0" fill="rgb(228,65,9)" rx="2" ry="2" />
<text  x="788.45" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.3" y="197" width="0.2" height="15.0" fill="rgb(226,18,5)" rx="2" ry="2" />
<text  x="1191.25" y="207.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="43.7" y="1749" width="0.2" height="15.0" fill="rgb(239,149,37)" rx="2" ry="2" />
<text  x="46.66" y="1759.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="718.8" y="1925" width="0.4" height="15.0" fill="rgb(206,81,15)" rx="2" ry="2" />
<text  x="721.79" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="525.1" y="1605" width="0.7" height="15.0" fill="rgb(250,189,29)" rx="2" ry="2" />
<text  x="528.14" y="1615.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="757.3" y="1829" width="0.4" height="15.0" fill="rgb(212,83,6)" rx="2" ry="2" />
<text  x="760.25" y="1839.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1189.3" y="197" width="0.3" height="15.0" fill="rgb(253,79,34)" rx="2" ry="2" />
<text  x="1192.34" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="57.9" y="1493" width="0.2" height="15.0" fill="rgb(252,78,8)" rx="2" ry="2" />
<text  x="60.86" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="642.7" y="1893" width="0.7" height="15.0" fill="rgb(244,61,36)" rx="2" ry="2" />
<text  x="645.73" y="1903.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::forward_to (1 samples, 0.02%)</title><rect x="646.9" y="1909" width="0.2" height="15.0" fill="rgb(220,51,11)" rx="2" ry="2" />
<text  x="649.88" y="1919.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (21 samples, 0.39%)</title><rect x="389.2" y="1589" width="4.6" height="15.0" fill="rgb(249,97,7)" rx="2" ry="2" />
<text  x="392.20" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="481.2" y="1701" width="0.9" height="15.0" fill="rgb(214,94,6)" rx="2" ry="2" />
<text  x="484.21" y="1711.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1035.5" y="1685" width="0.2" height="15.0" fill="rgb(238,207,40)" rx="2" ry="2" />
<text  x="1038.48" y="1695.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (29 samples, 0.54%)</title><rect x="90.0" y="1909" width="6.3" height="15.0" fill="rgb(251,213,16)" rx="2" ry="2" />
<text  x="92.99" y="1919.5" ></text>
</g>
<g >
<title>schema::column_at (5 samples, 0.09%)</title><rect x="363.2" y="1605" width="1.1" height="15.0" fill="rgb(214,32,40)" rx="2" ry="2" />
<text  x="366.19" y="1615.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="692.8" y="1893" width="0.2" height="15.0" fill="rgb(235,57,32)" rx="2" ry="2" />
<text  x="695.78" y="1903.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (2 samples, 0.04%)</title><rect x="1133.6" y="1685" width="0.4" height="15.0" fill="rgb(236,38,5)" rx="2" ry="2" />
<text  x="1136.61" y="1695.5" ></text>
</g>
<g >
<title>service::client_state::has_access (203 samples, 3.76%)</title><rect x="776.5" y="1797" width="44.4" height="15.0" fill="rgb(221,5,51)" rx="2" ry="2" />
<text  x="779.49" y="1807.5" >serv..</text>
</g>
<g >
<title>cql3::query_options::query_options (1 samples, 0.02%)</title><rect x="79.7" y="1909" width="0.2" height="15.0" fill="rgb(254,56,30)" rx="2" ry="2" />
<text  x="82.72" y="1919.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (1 samples, 0.02%)</title><rect x="1084.0" y="1733" width="0.2" height="15.0" fill="rgb(225,41,22)" rx="2" ry="2" />
<text  x="1087.00" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="596.4" y="1845" width="0.4" height="15.0" fill="rgb(246,153,51)" rx="2" ry="2" />
<text  x="599.39" y="1855.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (6 samples, 0.11%)</title><rect x="121.0" y="1829" width="1.3" height="15.0" fill="rgb(210,136,19)" rx="2" ry="2" />
<text  x="124.03" y="1839.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (16 samples, 0.30%)</title><rect x="310.5" y="1717" width="3.5" height="15.0" fill="rgb(250,189,38)" rx="2" ry="2" />
<text  x="313.52" y="1727.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1054.7" y="1765" width="0.2" height="15.0" fill="rgb(251,157,25)" rx="2" ry="2" />
<text  x="1057.71" y="1775.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="751.6" y="1701" width="0.4" height="15.0" fill="rgb(248,157,43)" rx="2" ry="2" />
<text  x="754.57" y="1711.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (12 samples, 0.22%)</title><rect x="272.1" y="1621" width="2.6" height="15.0" fill="rgb(217,202,18)" rx="2" ry="2" />
<text  x="275.05" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (2 samples, 0.04%)</title><rect x="638.6" y="1909" width="0.4" height="15.0" fill="rgb(223,82,47)" rx="2" ry="2" />
<text  x="641.58" y="1919.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (14 samples, 0.26%)</title><rect x="686.0" y="1909" width="3.1" height="15.0" fill="rgb(225,188,38)" rx="2" ry="2" />
<text  x="689.00" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="516.2" y="1701" width="1.1" height="15.0" fill="rgb(239,111,41)" rx="2" ry="2" />
<text  x="519.18" y="1711.5" ></text>
</g>
<g >
<title>table::make_reader (455 samples, 8.43%)</title><rect x="456.3" y="1781" width="99.4" height="15.0" fill="rgb(252,109,14)" rx="2" ry="2" />
<text  x="459.30" y="1791.5" >table::make_..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="10.7" y="1893" width="0.2" height="15.0" fill="rgb(242,125,21)" rx="2" ry="2" />
<text  x="13.66" y="1903.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (4 samples, 0.07%)</title><rect x="530.2" y="1653" width="0.8" height="15.0" fill="rgb(230,167,18)" rx="2" ry="2" />
<text  x="533.17" y="1663.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::deleted_at (1 samples, 0.02%)</title><rect x="1122.9" y="1669" width="0.2" height="15.0" fill="rgb(219,137,51)" rx="2" ry="2" />
<text  x="1125.90" y="1679.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::drop_service_level_statement*, std::default_delete&lt;cql3::statements::drop_service_level_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="66.8" y="1749" width="0.2" height="15.0" fill="rgb(209,225,13)" rx="2" ry="2" />
<text  x="69.83" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="651.7" y="1813" width="0.2" height="15.0" fill="rgb(238,133,7)" rx="2" ry="2" />
<text  x="654.69" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (1 samples, 0.02%)</title><rect x="712.4" y="1861" width="0.3" height="15.0" fill="rgb(234,48,49)" rx="2" ry="2" />
<text  x="715.45" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="24.2" y="1653" width="0.2" height="15.0" fill="rgb(252,51,44)" rx="2" ry="2" />
<text  x="27.21" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="57.4" y="1525" width="0.2" height="15.0" fill="rgb(221,212,33)" rx="2" ry="2" />
<text  x="60.43" y="1535.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="352.0" y="1621" width="0.5" height="15.0" fill="rgb(253,140,2)" rx="2" ry="2" />
<text  x="355.04" y="1631.5" ></text>
</g>
<g >
<title>db::schema_tables::v3::types (1 samples, 0.02%)</title><rect x="19.4" y="1685" width="0.2" height="15.0" fill="rgb(228,197,0)" rx="2" ry="2" />
<text  x="22.40" y="1695.5" ></text>
</g>
<g >
<title>sstables::sstable::component_basename (1 samples, 0.02%)</title><rect x="17.4" y="1893" width="0.2" height="15.0" fill="rgb(217,194,2)" rx="2" ry="2" />
<text  x="20.43" y="1903.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="57.9" y="1477" width="0.2" height="15.0" fill="rgb(216,102,40)" rx="2" ry="2" />
<text  x="60.86" y="1487.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.02%)</title><rect x="80.8" y="2037" width="0.2" height="15.0" fill="rgb(220,150,43)" rx="2" ry="2" />
<text  x="83.81" y="2047.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (1 samples, 0.02%)</title><rect x="699.6" y="1893" width="0.2" height="15.0" fill="rgb(205,153,26)" rx="2" ry="2" />
<text  x="702.55" y="1903.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (2 samples, 0.04%)</title><rect x="40.4" y="1717" width="0.4" height="15.0" fill="rgb(216,42,15)" rx="2" ry="2" />
<text  x="43.38" y="1727.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (255 samples, 4.72%)</title><rect x="22.2" y="1909" width="55.8" height="15.0" fill="rgb(214,132,15)" rx="2" ry="2" />
<text  x="25.24" y="1919.5" >cql3:..</text>
</g>
<g >
<title>service::storage_proxy::query_singular (129 samples, 2.39%)</title><rect x="1139.1" y="1925" width="28.2" height="15.0" fill="rgb(206,101,28)" rx="2" ry="2" />
<text  x="1142.08" y="1935.5" >s..</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::binary_operator const&amp;&gt; (1 samples, 0.02%)</title><rect x="72.1" y="1781" width="0.2" height="15.0" fill="rgb(229,161,38)" rx="2" ry="2" />
<text  x="75.07" y="1791.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (3 samples, 0.06%)</title><rect x="1054.9" y="1765" width="0.7" height="15.0" fill="rgb(245,143,43)" rx="2" ry="2" />
<text  x="1057.93" y="1775.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (1 samples, 0.02%)</title><rect x="803.6" y="1509" width="0.2" height="15.0" fill="rgb(244,146,33)" rx="2" ry="2" />
<text  x="806.59" y="1519.5" ></text>
</g>
<g >
<title>__tls_init (3 samples, 0.06%)</title><rect x="512.7" y="1733" width="0.6" height="15.0" fill="rgb(246,14,4)" rx="2" ry="2" />
<text  x="515.69" y="1743.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="1063.5" y="1701" width="0.2" height="15.0" fill="rgb(251,78,1)" rx="2" ry="2" />
<text  x="1066.45" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="257.8" y="1573" width="0.3" height="15.0" fill="rgb(237,186,30)" rx="2" ry="2" />
<text  x="260.85" y="1583.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (7 samples, 0.13%)</title><rect x="546.1" y="1701" width="1.6" height="15.0" fill="rgb(227,5,28)" rx="2" ry="2" />
<text  x="549.13" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="66.6" y="1765" width="0.2" height="15.0" fill="rgb(216,170,28)" rx="2" ry="2" />
<text  x="69.61" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::release (1 samples, 0.02%)</title><rect x="60.1" y="1717" width="0.2" height="15.0" fill="rgb(233,118,27)" rx="2" ry="2" />
<text  x="63.05" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (1 samples, 0.02%)</title><rect x="864.8" y="1733" width="0.2" height="15.0" fill="rgb(250,97,11)" rx="2" ry="2" />
<text  x="867.78" y="1743.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (1 samples, 0.02%)</title><rect x="597.9" y="1845" width="0.2" height="15.0" fill="rgb(206,28,40)" rx="2" ry="2" />
<text  x="600.92" y="1855.5" ></text>
</g>
<g >
<title>db::system_distributed_keyspace::start (1 samples, 0.02%)</title><rect x="100.0" y="1909" width="0.3" height="15.0" fill="rgb(221,101,6)" rx="2" ry="2" />
<text  x="103.05" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (3 samples, 0.06%)</title><rect x="46.1" y="1605" width="0.6" height="15.0" fill="rgb(241,178,37)" rx="2" ry="2" />
<text  x="49.06" y="1615.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="866.1" y="1749" width="0.2" height="15.0" fill="rgb(244,213,9)" rx="2" ry="2" />
<text  x="869.10" y="1759.5" ></text>
</g>
<g >
<title>from_hex (2 samples, 0.04%)</title><rect x="71.2" y="1765" width="0.4" height="15.0" fill="rgb(214,55,2)" rx="2" ry="2" />
<text  x="74.20" y="1775.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (1 samples, 0.02%)</title><rect x="575.2" y="1749" width="0.2" height="15.0" fill="rgb(217,53,6)" rx="2" ry="2" />
<text  x="578.19" y="1759.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="637.5" y="1909" width="0.6" height="15.0" fill="rgb(224,67,19)" rx="2" ry="2" />
<text  x="640.48" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="585.0" y="1717" width="0.2" height="15.0" fill="rgb(208,133,32)" rx="2" ry="2" />
<text  x="588.03" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="43.2" y="1765" width="0.2" height="15.0" fill="rgb(224,80,1)" rx="2" ry="2" />
<text  x="46.22" y="1775.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="589.0" y="1765" width="0.2" height="15.0" fill="rgb(253,216,37)" rx="2" ry="2" />
<text  x="591.96" y="1775.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (19 samples, 0.35%)</title><rect x="476.8" y="1717" width="4.2" height="15.0" fill="rgb(240,62,39)" rx="2" ry="2" />
<text  x="479.84" y="1727.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="982.2" y="1717" width="1.5" height="15.0" fill="rgb(241,221,35)" rx="2" ry="2" />
<text  x="985.15" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (4 samples, 0.07%)</title><rect x="577.6" y="1717" width="0.9" height="15.0" fill="rgb(226,146,35)" rx="2" ry="2" />
<text  x="580.60" y="1727.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="793.8" y="1589" width="0.2" height="15.0" fill="rgb(218,130,37)" rx="2" ry="2" />
<text  x="796.75" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (9 samples, 0.17%)</title><rect x="952.4" y="1813" width="2.0" height="15.0" fill="rgb(208,228,25)" rx="2" ry="2" />
<text  x="955.43" y="1823.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1187.2" y="421" width="0.2" height="15.0" fill="rgb(213,22,30)" rx="2" ry="2" />
<text  x="1190.16" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="267.0" y="1653" width="0.2" height="15.0" fill="rgb(211,28,46)" rx="2" ry="2" />
<text  x="270.03" y="1663.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="830.5" y="1733" width="0.2" height="15.0" fill="rgb(208,112,23)" rx="2" ry="2" />
<text  x="833.47" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (6 samples, 0.11%)</title><rect x="1150.7" y="1861" width="1.3" height="15.0" fill="rgb(230,172,49)" rx="2" ry="2" />
<text  x="1153.66" y="1871.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (559 samples, 10.35%)</title><rect x="322.8" y="1765" width="122.1" height="15.0" fill="rgb(228,177,47)" rx="2" ry="2" />
<text  x="325.76" y="1775.5" >seastar::futuri..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="52.0" y="1637" width="0.2" height="15.0" fill="rgb(248,26,0)" rx="2" ry="2" />
<text  x="54.96" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="10.4" y="261" width="0.3" height="15.0" fill="rgb(221,131,44)" rx="2" ry="2" />
<text  x="13.44" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.52%)</title><rect x="1118.1" y="1813" width="6.1" height="15.0" fill="rgb(251,174,39)" rx="2" ry="2" />
<text  x="1121.09" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (40 samples, 0.74%)</title><rect x="306.8" y="1749" width="8.7" height="15.0" fill="rgb(231,113,4)" rx="2" ry="2" />
<text  x="309.80" y="1759.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::~node_head (1 samples, 0.02%)</title><rect x="868.3" y="1669" width="0.2" height="15.0" fill="rgb(219,113,13)" rx="2" ry="2" />
<text  x="871.28" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="52.8" y="1685" width="0.3" height="15.0" fill="rgb(248,155,30)" rx="2" ry="2" />
<text  x="55.84" y="1695.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="81.3" y="1893" width="0.2" height="15.0" fill="rgb(227,64,52)" rx="2" ry="2" />
<text  x="84.25" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="1187.4" y="117" width="0.2" height="15.0" fill="rgb(248,81,0)" rx="2" ry="2" />
<text  x="1190.38" y="127.5" ></text>
</g>
<g >
<title>ser::writer_of_mutation_partition&lt;bytes_ostream&gt;::writer_of_mutation_partition (1 samples, 0.02%)</title><rect x="1131.6" y="1605" width="0.3" height="15.0" fill="rgb(236,69,6)" rx="2" ry="2" />
<text  x="1134.64" y="1615.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="868.1" y="1637" width="0.2" height="15.0" fill="rgb(233,222,31)" rx="2" ry="2" />
<text  x="871.06" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (10 samples, 0.19%)</title><rect x="1187.6" y="357" width="2.2" height="15.0" fill="rgb(213,29,37)" rx="2" ry="2" />
<text  x="1190.60" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (12 samples, 0.22%)</title><rect x="867.2" y="1781" width="2.6" height="15.0" fill="rgb(212,137,11)" rx="2" ry="2" />
<text  x="870.19" y="1791.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1187.2" y="213" width="0.2" height="15.0" fill="rgb(215,111,46)" rx="2" ry="2" />
<text  x="1190.16" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (8 samples, 0.15%)</title><rect x="54.1" y="1509" width="1.8" height="15.0" fill="rgb(233,82,16)" rx="2" ry="2" />
<text  x="57.15" y="1519.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (6 samples, 0.11%)</title><rect x="273.4" y="1589" width="1.3" height="15.0" fill="rgb(216,202,21)" rx="2" ry="2" />
<text  x="276.36" y="1599.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (4,982 samples, 92.28%)</title><rect x="82.1" y="1989" width="1088.9" height="15.0" fill="rgb(248,51,53)" rx="2" ry="2" />
<text  x="85.12" y="1999.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="52.0" y="1701" width="0.2" height="15.0" fill="rgb(251,94,35)" rx="2" ry="2" />
<text  x="54.96" y="1711.5" ></text>
</g>
<g >
<title>allocation_strategy::destroy&lt;rows_entry&gt; (1 samples, 0.02%)</title><rect x="99.2" y="1669" width="0.2" height="15.0" fill="rgb(209,218,33)" rx="2" ry="2" />
<text  x="102.17" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (1 samples, 0.02%)</title><rect x="723.8" y="1925" width="0.2" height="15.0" fill="rgb(250,31,27)" rx="2" ry="2" />
<text  x="726.81" y="1935.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (55 samples, 1.02%)</title><rect x="520.1" y="1717" width="12.0" height="15.0" fill="rgb(242,124,5)" rx="2" ry="2" />
<text  x="523.12" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (557 samples, 10.32%)</title><rect x="322.8" y="1749" width="121.7" height="15.0" fill="rgb(213,155,20)" rx="2" ry="2" />
<text  x="325.76" y="1759.5" >seastar::intern..</text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (1 samples, 0.02%)</title><rect x="649.7" y="1909" width="0.2" height="15.0" fill="rgb(228,140,14)" rx="2" ry="2" />
<text  x="652.72" y="1919.5" ></text>
</g>
<g >
<title>cdc::cdc_service::needs_cdc_augmentation (1 samples, 0.02%)</title><rect x="864.6" y="1781" width="0.2" height="15.0" fill="rgb(254,54,19)" rx="2" ry="2" />
<text  x="867.57" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="965" width="2.9" height="15.0" fill="rgb(220,12,43)" rx="2" ry="2" />
<text  x="1189.94" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (2 samples, 0.04%)</title><rect x="32.1" y="1637" width="0.4" height="15.0" fill="rgb(245,227,9)" rx="2" ry="2" />
<text  x="35.07" y="1647.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (80 samples, 1.48%)</title><rect x="571.3" y="1813" width="17.4" height="15.0" fill="rgb(237,160,22)" rx="2" ry="2" />
<text  x="574.26" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (4 samples, 0.07%)</title><rect x="182.2" y="1669" width="0.9" height="15.0" fill="rgb(250,135,33)" rx="2" ry="2" />
<text  x="185.22" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="73.4" y="1637" width="0.2" height="15.0" fill="rgb(254,132,40)" rx="2" ry="2" />
<text  x="76.38" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (236 samples, 4.37%)</title><rect x="208.2" y="1653" width="51.6" height="15.0" fill="rgb(220,95,31)" rx="2" ry="2" />
<text  x="211.23" y="1663.5" >parti..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (14 samples, 0.26%)</title><rect x="71.9" y="1829" width="3.0" height="15.0" fill="rgb(232,102,26)" rx="2" ry="2" />
<text  x="74.85" y="1839.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (8 samples, 0.15%)</title><rect x="1157.9" y="1893" width="1.7" height="15.0" fill="rgb(248,179,53)" rx="2" ry="2" />
<text  x="1160.87" y="1903.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (12 samples, 0.22%)</title><rect x="799.2" y="1573" width="2.6" height="15.0" fill="rgb(239,171,14)" rx="2" ry="2" />
<text  x="802.22" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="63.8" y="1717" width="0.2" height="15.0" fill="rgb(209,24,22)" rx="2" ry="2" />
<text  x="66.77" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;3ul, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="54.6" y="1413" width="0.6" height="15.0" fill="rgb(211,173,15)" rx="2" ry="2" />
<text  x="57.59" y="1423.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="619.6" y="1861" width="0.2" height="15.0" fill="rgb(227,75,9)" rx="2" ry="2" />
<text  x="622.56" y="1871.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="710.0" y="1893" width="0.3" height="15.0" fill="rgb(251,147,38)" rx="2" ry="2" />
<text  x="713.04" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (8 samples, 0.15%)</title><rect x="1099.5" y="1797" width="1.8" height="15.0" fill="rgb(218,197,29)" rx="2" ry="2" />
<text  x="1102.52" y="1807.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="703.7" y="1877" width="0.4" height="15.0" fill="rgb(253,64,46)" rx="2" ry="2" />
<text  x="706.71" y="1887.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (1 samples, 0.02%)</title><rect x="720.3" y="1605" width="0.2" height="15.0" fill="rgb(223,17,13)" rx="2" ry="2" />
<text  x="723.32" y="1615.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (3 samples, 0.06%)</title><rect x="251.9" y="1589" width="0.7" height="15.0" fill="rgb(227,79,17)" rx="2" ry="2" />
<text  x="254.94" y="1599.5" ></text>
</g>
<g >
<title>partition_builder::accept_row_cell (1 samples, 0.02%)</title><rect x="1120.5" y="1653" width="0.2" height="15.0" fill="rgb(208,23,13)" rx="2" ry="2" />
<text  x="1123.50" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1187.4" y="325" width="0.2" height="15.0" fill="rgb(215,151,8)" rx="2" ry="2" />
<text  x="1190.38" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="47.8" y="1621" width="0.4" height="15.0" fill="rgb(213,215,20)" rx="2" ry="2" />
<text  x="50.81" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="19.6" y="1925" width="0.2" height="15.0" fill="rgb(242,119,17)" rx="2" ry="2" />
<text  x="22.62" y="1935.5" ></text>
</g>
<g >
<title>ser::get_sizeof&lt;column_mapping&gt; (1 samples, 0.02%)</title><rect x="1123.3" y="1605" width="0.3" height="15.0" fill="rgb(245,189,35)" rx="2" ry="2" />
<text  x="1126.34" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (4 samples, 0.07%)</title><rect x="865.9" y="1797" width="0.9" height="15.0" fill="rgb(213,84,38)" rx="2" ry="2" />
<text  x="868.88" y="1807.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (1 samples, 0.02%)</title><rect x="197.5" y="1637" width="0.2" height="15.0" fill="rgb(231,153,28)" rx="2" ry="2" />
<text  x="200.52" y="1647.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (484 samples, 8.96%)</title><rect x="452.6" y="1845" width="105.8" height="15.0" fill="rgb(240,163,24)" rx="2" ry="2" />
<text  x="455.58" y="1855.5" >query::queri..</text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (2 samples, 0.04%)</title><rect x="1120.9" y="1637" width="0.5" height="15.0" fill="rgb(209,97,46)" rx="2" ry="2" />
<text  x="1123.94" y="1647.5" ></text>
</g>
<g >
<title>db::schema_tables::query_partition_mutation (1 samples, 0.02%)</title><rect x="100.0" y="1829" width="0.3" height="15.0" fill="rgb(241,177,32)" rx="2" ry="2" />
<text  x="103.05" y="1839.5" ></text>
</g>
<g >
<title>query::querier_base::close (114 samples, 2.11%)</title><rect x="571.3" y="1861" width="24.9" height="15.0" fill="rgb(236,107,21)" rx="2" ry="2" />
<text  x="574.26" y="1871.5" >q..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.06%)</title><rect x="57.6" y="1605" width="0.7" height="15.0" fill="rgb(219,128,38)" rx="2" ry="2" />
<text  x="60.65" y="1615.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="1130.3" y="1525" width="0.3" height="15.0" fill="rgb(211,181,27)" rx="2" ry="2" />
<text  x="1133.33" y="1535.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;sstables::mc::writer::write_cells (1 samples, 0.02%)</title><rect x="1188.3" y="53" width="0.2" height="15.0" fill="rgb(212,174,26)" rx="2" ry="2" />
<text  x="1191.25" y="63.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (1 samples, 0.02%)</title><rect x="18.7" y="1941" width="0.3" height="15.0" fill="rgb(226,111,0)" rx="2" ry="2" />
<text  x="21.74" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1381" width="0.3" height="15.0" fill="rgb(224,106,13)" rx="2" ry="2" />
<text  x="13.44" y="1391.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (1 samples, 0.02%)</title><rect x="1168.1" y="1909" width="0.3" height="15.0" fill="rgb(232,109,1)" rx="2" ry="2" />
<text  x="1171.14" y="1919.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::shared_ptr_count_for&lt;cql3::metadata&amp;&gt; (1 samples, 0.02%)</title><rect x="664.6" y="1877" width="0.2" height="15.0" fill="rgb(218,49,50)" rx="2" ry="2" />
<text  x="667.58" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="57.9" y="1573" width="0.4" height="15.0" fill="rgb(224,181,6)" rx="2" ry="2" />
<text  x="60.86" y="1583.5" ></text>
</g>
<g >
<title>schema::column_at (8 samples, 0.15%)</title><rect x="248.7" y="1525" width="1.7" height="15.0" fill="rgb(245,49,47)" rx="2" ry="2" />
<text  x="251.67" y="1535.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (1 samples, 0.02%)</title><rect x="1028.7" y="1605" width="0.2" height="15.0" fill="rgb(221,7,50)" rx="2" ry="2" />
<text  x="1031.70" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (6 samples, 0.11%)</title><rect x="1087.7" y="1797" width="1.3" height="15.0" fill="rgb(210,60,30)" rx="2" ry="2" />
<text  x="1090.71" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, unsigned long&gt;, std::allocator&lt;std::pair&lt;utils::UUID const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1 samples, 0.02%)</title><rect x="1123.6" y="1685" width="0.2" height="15.0" fill="rgb(217,145,27)" rx="2" ry="2" />
<text  x="1126.56" y="1695.5" ></text>
</g>
<g >
<title>ser::writer_of_commitlog_entry&lt;seastar::memory_output_stream&lt;__gnu_cxx::__normal_iterator&lt;seastar::temporary_buffer&lt;char&gt;*, std::vector&lt;seastar::temporary_buffer&lt;char&gt;, std::allocator&lt;seastar::temporary_buffer&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::write_mapping (1 samples, 0.02%)</title><rect x="1123.3" y="1653" width="0.3" height="15.0" fill="rgb(206,80,35)" rx="2" ry="2" />
<text  x="1126.34" y="1663.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (460 samples, 8.52%)</title><rect x="455.4" y="1813" width="100.6" height="15.0" fill="rgb(229,186,41)" rx="2" ry="2" />
<text  x="458.42" y="1823.5" >std::functio..</text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="900.6" y="1669" width="0.7" height="15.0" fill="rgb(210,86,14)" rx="2" ry="2" />
<text  x="903.63" y="1679.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.02%)</title><rect x="41.3" y="1797" width="0.2" height="15.0" fill="rgb(226,137,37)" rx="2" ry="2" />
<text  x="44.25" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (7 samples, 0.13%)</title><rect x="349.9" y="1605" width="1.5" height="15.0" fill="rgb(217,24,45)" rx="2" ry="2" />
<text  x="352.86" y="1615.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (12 samples, 0.22%)</title><rect x="737.1" y="1813" width="2.7" height="15.0" fill="rgb(207,67,40)" rx="2" ry="2" />
<text  x="740.15" y="1823.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (3 samples, 0.06%)</title><rect x="1127.5" y="1637" width="0.6" height="15.0" fill="rgb(242,206,52)" rx="2" ry="2" />
<text  x="1130.49" y="1647.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (1 samples, 0.02%)</title><rect x="1043.3" y="1701" width="0.3" height="15.0" fill="rgb(208,140,42)" rx="2" ry="2" />
<text  x="1046.35" y="1711.5" ></text>
</g>
<g >
<title>freeze (12 samples, 0.22%)</title><rect x="1129.2" y="1621" width="2.7" height="15.0" fill="rgb(217,216,32)" rx="2" ry="2" />
<text  x="1132.24" y="1631.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.02%)</title><rect x="258.3" y="1541" width="0.2" height="15.0" fill="rgb(231,61,25)" rx="2" ry="2" />
<text  x="261.28" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1877" width="0.3" height="15.0" fill="rgb(213,186,31)" rx="2" ry="2" />
<text  x="13.44" y="1887.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="501" width="2.9" height="15.0" fill="rgb(253,193,46)" rx="2" ry="2" />
<text  x="1189.94" y="511.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (1 samples, 0.02%)</title><rect x="1168.8" y="1925" width="0.2" height="15.0" fill="rgb(215,93,21)" rx="2" ry="2" />
<text  x="1171.80" y="1935.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="541.1" y="1765" width="0.2" height="15.0" fill="rgb(225,195,21)" rx="2" ry="2" />
<text  x="544.10" y="1775.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1138.4" y="1925" width="0.2" height="15.0" fill="rgb(209,220,3)" rx="2" ry="2" />
<text  x="1141.42" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1157" width="0.3" height="15.0" fill="rgb(236,76,47)" rx="2" ry="2" />
<text  x="13.44" y="1167.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1189.3" y="149" width="0.3" height="15.0" fill="rgb(250,109,5)" rx="2" ry="2" />
<text  x="1192.34" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (1 samples, 0.02%)</title><rect x="911.1" y="1781" width="0.2" height="15.0" fill="rgb(235,8,6)" rx="2" ry="2" />
<text  x="914.12" y="1791.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (200 samples, 3.70%)</title><rect x="1000.7" y="1733" width="43.7" height="15.0" fill="rgb(249,173,22)" rx="2" ry="2" />
<text  x="1003.73" y="1743.5" >serv..</text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (3 samples, 0.06%)</title><rect x="28.4" y="1621" width="0.6" height="15.0" fill="rgb(218,222,9)" rx="2" ry="2" />
<text  x="31.36" y="1631.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (41 samples, 0.76%)</title><rect x="179.8" y="1701" width="9.0" height="15.0" fill="rgb(254,79,31)" rx="2" ry="2" />
<text  x="182.82" y="1711.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="52.2" y="1701" width="0.2" height="15.0" fill="rgb(237,61,15)" rx="2" ry="2" />
<text  x="55.18" y="1711.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (2 samples, 0.04%)</title><rect x="23.6" y="1813" width="0.4" height="15.0" fill="rgb(216,102,32)" rx="2" ry="2" />
<text  x="26.55" y="1823.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="868.5" y="1685" width="0.2" height="15.0" fill="rgb(226,207,17)" rx="2" ry="2" />
<text  x="871.50" y="1695.5" ></text>
</g>
<g >
<title>data_value::~data_value (1 samples, 0.02%)</title><rect x="636.4" y="1797" width="0.2" height="15.0" fill="rgb(205,114,29)" rx="2" ry="2" />
<text  x="639.39" y="1807.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (7 samples, 0.13%)</title><rect x="45.2" y="1733" width="1.5" height="15.0" fill="rgb(238,207,39)" rx="2" ry="2" />
<text  x="48.19" y="1743.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.02%)</title><rect x="17.9" y="1941" width="0.2" height="15.0" fill="rgb(245,118,16)" rx="2" ry="2" />
<text  x="20.87" y="1951.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1133.2" y="1749" width="0.2" height="15.0" fill="rgb(221,140,31)" rx="2" ry="2" />
<text  x="1136.17" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1701" width="2.9" height="15.0" fill="rgb(206,176,1)" rx="2" ry="2" />
<text  x="1189.94" y="1711.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (12 samples, 0.22%)</title><rect x="981.5" y="1765" width="2.6" height="15.0" fill="rgb(227,119,6)" rx="2" ry="2" />
<text  x="984.49" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1061" width="0.3" height="15.0" fill="rgb(213,17,44)" rx="2" ry="2" />
<text  x="13.44" y="1071.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="696.3" y="1733" width="0.2" height="15.0" fill="rgb(237,191,27)" rx="2" ry="2" />
<text  x="699.28" y="1743.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="645.1" y="1909" width="1.3" height="15.0" fill="rgb(251,22,39)" rx="2" ry="2" />
<text  x="648.13" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="57.0" y="1589" width="0.2" height="15.0" fill="rgb(221,21,22)" rx="2" ry="2" />
<text  x="59.99" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (6 samples, 0.11%)</title><rect x="78.2" y="1909" width="1.3" height="15.0" fill="rgb(217,223,2)" rx="2" ry="2" />
<text  x="81.19" y="1919.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="794.2" y="1637" width="0.2" height="15.0" fill="rgb(213,123,1)" rx="2" ry="2" />
<text  x="797.19" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="76.7" y="1877" width="0.2" height="15.0" fill="rgb(236,187,21)" rx="2" ry="2" />
<text  x="79.66" y="1887.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="575.4" y="1749" width="0.9" height="15.0" fill="rgb(219,111,18)" rx="2" ry="2" />
<text  x="578.41" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (2 samples, 0.04%)</title><rect x="902.6" y="1701" width="0.4" height="15.0" fill="rgb(218,57,35)" rx="2" ry="2" />
<text  x="905.59" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1557" width="0.3" height="15.0" fill="rgb(214,114,51)" rx="2" ry="2" />
<text  x="13.44" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="57.9" y="1509" width="0.2" height="15.0" fill="rgb(215,145,26)" rx="2" ry="2" />
<text  x="60.86" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (627 samples, 11.61%)</title><rect x="724.0" y="1925" width="137.1" height="15.0" fill="rgb(206,111,29)" rx="2" ry="2" />
<text  x="727.03" y="1935.5" >seastar::internal..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="47.8" y="1653" width="0.4" height="15.0" fill="rgb(240,74,41)" rx="2" ry="2" />
<text  x="50.81" y="1663.5" ></text>
</g>
<g >
<title>ser::idl::serializers::internal::vector_serializer&lt;std::vector&lt;ser::range_tombstone_view, std::allocator&lt;ser::range_tombstone_view&gt; &gt; &gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1121.6" y="1653" width="0.2" height="15.0" fill="rgb(206,28,1)" rx="2" ry="2" />
<text  x="1124.59" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (2 samples, 0.04%)</title><rect x="22.7" y="1829" width="0.4" height="15.0" fill="rgb(246,60,15)" rx="2" ry="2" />
<text  x="25.68" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (8 samples, 0.15%)</title><rect x="824.6" y="1749" width="1.7" height="15.0" fill="rgb(217,49,52)" rx="2" ry="2" />
<text  x="827.57" y="1759.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (3 samples, 0.06%)</title><rect x="229.9" y="1477" width="0.6" height="15.0" fill="rgb(225,121,47)" rx="2" ry="2" />
<text  x="232.87" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="45.0" y="1701" width="0.2" height="15.0" fill="rgb(221,158,51)" rx="2" ry="2" />
<text  x="47.97" y="1711.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="868.1" y="1653" width="0.2" height="15.0" fill="rgb(241,16,34)" rx="2" ry="2" />
<text  x="871.06" y="1663.5" ></text>
</g>
<g >
<title>to_hex (1 samples, 0.02%)</title><rect x="80.4" y="1957" width="0.2" height="15.0" fill="rgb(238,2,10)" rx="2" ry="2" />
<text  x="83.38" y="1967.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="1155.9" y="1893" width="0.2" height="15.0" fill="rgb(229,172,38)" rx="2" ry="2" />
<text  x="1158.90" y="1903.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1669" width="2.9" height="15.0" fill="rgb(213,108,4)" rx="2" ry="2" />
<text  x="1189.94" y="1679.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="316.6" y="1781" width="0.3" height="15.0" fill="rgb(213,46,44)" rx="2" ry="2" />
<text  x="319.64" y="1791.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="51.7" y="1637" width="0.3" height="15.0" fill="rgb(252,125,30)" rx="2" ry="2" />
<text  x="54.74" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="709.4" y="1893" width="0.4" height="15.0" fill="rgb(245,38,35)" rx="2" ry="2" />
<text  x="712.39" y="1903.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (4 samples, 0.07%)</title><rect x="767.3" y="1781" width="0.9" height="15.0" fill="rgb(217,175,49)" rx="2" ry="2" />
<text  x="770.31" y="1791.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (5 samples, 0.09%)</title><rect x="20.3" y="1925" width="1.1" height="15.0" fill="rgb(232,74,53)" rx="2" ry="2" />
<text  x="23.27" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="47.6" y="1669" width="0.2" height="15.0" fill="rgb(210,72,27)" rx="2" ry="2" />
<text  x="50.59" y="1679.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="1187.2" y="149" width="0.2" height="15.0" fill="rgb(238,56,45)" rx="2" ry="2" />
<text  x="1190.16" y="159.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="281.7" y="1605" width="0.8" height="15.0" fill="rgb(213,229,49)" rx="2" ry="2" />
<text  x="284.67" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="52.0" y="1541" width="0.2" height="15.0" fill="rgb(250,123,19)" rx="2" ry="2" />
<text  x="54.96" y="1551.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1605" width="2.9" height="15.0" fill="rgb(219,16,25)" rx="2" ry="2" />
<text  x="1189.94" y="1615.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (50 samples, 0.93%)</title><rect x="178.5" y="1717" width="10.9" height="15.0" fill="rgb(245,222,50)" rx="2" ry="2" />
<text  x="181.51" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="682.1" y="1861" width="0.4" height="15.0" fill="rgb(250,87,53)" rx="2" ry="2" />
<text  x="685.07" y="1871.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="947.4" y="1813" width="0.2" height="15.0" fill="rgb(205,117,27)" rx="2" ry="2" />
<text  x="950.40" y="1823.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (11 samples, 0.20%)</title><rect x="276.0" y="1621" width="2.4" height="15.0" fill="rgb(254,185,22)" rx="2" ry="2" />
<text  x="278.99" y="1631.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="52.4" y="1701" width="0.2" height="15.0" fill="rgb(206,47,6)" rx="2" ry="2" />
<text  x="55.40" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (8 samples, 0.15%)</title><rect x="853.0" y="1813" width="1.7" height="15.0" fill="rgb(205,163,35)" rx="2" ry="2" />
<text  x="855.98" y="1823.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (68 samples, 1.26%)</title><rect x="789.6" y="1669" width="14.9" height="15.0" fill="rgb(208,15,35)" rx="2" ry="2" />
<text  x="792.60" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (6 samples, 0.11%)</title><rect x="62.9" y="1749" width="1.3" height="15.0" fill="rgb(235,120,23)" rx="2" ry="2" />
<text  x="65.89" y="1759.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (2 samples, 0.04%)</title><rect x="50.2" y="1733" width="0.5" height="15.0" fill="rgb(238,78,44)" rx="2" ry="2" />
<text  x="53.21" y="1743.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (3 samples, 0.06%)</title><rect x="475.5" y="1701" width="0.7" height="15.0" fill="rgb(205,185,18)" rx="2" ry="2" />
<text  x="478.53" y="1711.5" ></text>
</g>
<g >
<title>seastar::gate::leave (1 samples, 0.02%)</title><rect x="117.3" y="1829" width="0.2" height="15.0" fill="rgb(226,112,1)" rx="2" ry="2" />
<text  x="120.31" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="1148.9" y="1845" width="0.4" height="15.0" fill="rgb(244,89,10)" rx="2" ry="2" />
<text  x="1151.91" y="1855.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (68 samples, 1.26%)</title><rect x="789.6" y="1685" width="14.9" height="15.0" fill="rgb(249,120,44)" rx="2" ry="2" />
<text  x="792.60" y="1695.5" ></text>
</g>
<g >
<title>abstract_type::to_string (1 samples, 0.02%)</title><rect x="100.9" y="1669" width="0.2" height="15.0" fill="rgb(216,124,12)" rx="2" ry="2" />
<text  x="103.92" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt; &gt;  (1 samples, 0.02%)</title><rect x="73.4" y="1701" width="0.2" height="15.0" fill="rgb(240,208,39)" rx="2" ry="2" />
<text  x="76.38" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="732.6" y="1877" width="0.2" height="15.0" fill="rgb(218,221,16)" rx="2" ry="2" />
<text  x="735.56" y="1887.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="62.5" y="1685" width="0.2" height="15.0" fill="rgb(238,35,6)" rx="2" ry="2" />
<text  x="65.45" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="437.1" y="1653" width="0.2" height="15.0" fill="rgb(242,172,23)" rx="2" ry="2" />
<text  x="440.06" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (8 samples, 0.15%)</title><rect x="262.2" y="1589" width="1.8" height="15.0" fill="rgb(222,134,30)" rx="2" ry="2" />
<text  x="265.22" y="1599.5" ></text>
</g>
<g >
<title>ser::idl::serializers::internal::vector_serializer&lt;std::vector&lt;ser::column_view, std::allocator&lt;ser::column_view&gt; &gt; &gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1122.0" y="1637" width="0.2" height="15.0" fill="rgb(231,25,44)" rx="2" ry="2" />
<text  x="1125.03" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier&gt;::shared_ptr_count_for&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const&amp;, seastar::shared_ptr&lt;abstract_type const&gt; &gt; (1 samples, 0.02%)</title><rect x="100.9" y="1749" width="0.2" height="15.0" fill="rgb(238,223,50)" rx="2" ry="2" />
<text  x="103.92" y="1759.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (4 samples, 0.07%)</title><rect x="201.0" y="1621" width="0.9" height="15.0" fill="rgb(205,195,24)" rx="2" ry="2" />
<text  x="204.02" y="1631.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::alloc (1 samples, 0.02%)</title><rect x="22.9" y="1765" width="0.2" height="15.0" fill="rgb(245,95,20)" rx="2" ry="2" />
<text  x="25.89" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="965.5" y="1765" width="0.3" height="15.0" fill="rgb(252,54,3)" rx="2" ry="2" />
<text  x="968.54" y="1775.5" ></text>
</g>
<g >
<title>row::row (139 samples, 2.57%)</title><rect x="214.1" y="1573" width="30.4" height="15.0" fill="rgb(245,206,53)" rx="2" ry="2" />
<text  x="217.13" y="1583.5" >ro..</text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::functions::function_call&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::functions::function_call&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="76.9" y="1877" width="0.2" height="15.0" fill="rgb(217,43,47)" rx="2" ry="2" />
<text  x="79.88" y="1887.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.04%)</title><rect x="1161.8" y="1893" width="0.4" height="15.0" fill="rgb(208,49,14)" rx="2" ry="2" />
<text  x="1164.81" y="1903.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (3 samples, 0.06%)</title><rect x="1049.0" y="1733" width="0.7" height="15.0" fill="rgb(253,26,9)" rx="2" ry="2" />
<text  x="1052.03" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="47.6" y="1637" width="0.2" height="15.0" fill="rgb(216,135,49)" rx="2" ry="2" />
<text  x="50.59" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1077" width="0.3" height="15.0" fill="rgb(207,198,42)" rx="2" ry="2" />
<text  x="13.44" y="1087.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (2 samples, 0.04%)</title><rect x="1051.9" y="1701" width="0.4" height="15.0" fill="rgb(231,14,9)" rx="2" ry="2" />
<text  x="1054.87" y="1711.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="928.6" y="1781" width="0.2" height="15.0" fill="rgb(254,107,46)" rx="2" ry="2" />
<text  x="931.60" y="1791.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (5 samples, 0.09%)</title><rect x="125.6" y="1813" width="1.1" height="15.0" fill="rgb(225,74,38)" rx="2" ry="2" />
<text  x="128.62" y="1823.5" ></text>
</g>
<g >
<title>sstables::mc::write_clustering_prefix&lt;sstables::file_writer&gt; (1 samples, 0.02%)</title><rect x="1188.5" y="53" width="0.2" height="15.0" fill="rgb(224,2,13)" rx="2" ry="2" />
<text  x="1191.47" y="63.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="99.2" y="1653" width="0.2" height="15.0" fill="rgb(251,201,27)" rx="2" ry="2" />
<text  x="102.17" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="27.9" y="1589" width="0.2" height="15.0" fill="rgb(237,56,1)" rx="2" ry="2" />
<text  x="30.92" y="1599.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (2 samples, 0.04%)</title><rect x="717.7" y="1877" width="0.4" height="15.0" fill="rgb(252,93,30)" rx="2" ry="2" />
<text  x="720.69" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (18 samples, 0.33%)</title><rect x="580.7" y="1717" width="3.9" height="15.0" fill="rgb(211,2,19)" rx="2" ry="2" />
<text  x="583.66" y="1727.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (1 samples, 0.02%)</title><rect x="578.3" y="1685" width="0.2" height="15.0" fill="rgb(211,63,21)" rx="2" ry="2" />
<text  x="581.25" y="1695.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (2 samples, 0.04%)</title><rect x="752.2" y="1717" width="0.5" height="15.0" fill="rgb(233,30,28)" rx="2" ry="2" />
<text  x="755.23" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="960.1" y="1813" width="0.2" height="15.0" fill="rgb(253,75,8)" rx="2" ry="2" />
<text  x="963.08" y="1823.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (20 samples, 0.37%)</title><rect x="1128.8" y="1701" width="4.4" height="15.0" fill="rgb(223,21,23)" rx="2" ry="2" />
<text  x="1131.80" y="1711.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (51 samples, 0.94%)</title><rect x="743.9" y="1829" width="11.2" height="15.0" fill="rgb(223,179,46)" rx="2" ry="2" />
<text  x="746.92" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.15%)</title><rect x="442.7" y="1733" width="1.8" height="15.0" fill="rgb(227,121,20)" rx="2" ry="2" />
<text  x="445.75" y="1743.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (33 samples, 0.61%)</title><rect x="796.6" y="1637" width="7.2" height="15.0" fill="rgb(240,121,29)" rx="2" ry="2" />
<text  x="799.59" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="1099.5" y="1765" width="1.3" height="15.0" fill="rgb(231,37,14)" rx="2" ry="2" />
<text  x="1102.52" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="983.7" y="1733" width="0.4" height="15.0" fill="rgb(244,145,24)" rx="2" ry="2" />
<text  x="986.68" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="52.4" y="1717" width="0.2" height="15.0" fill="rgb(218,183,42)" rx="2" ry="2" />
<text  x="55.40" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1445" width="2.9" height="15.0" fill="rgb(207,220,25)" rx="2" ry="2" />
<text  x="1189.94" y="1455.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="1035.3" y="1685" width="0.2" height="15.0" fill="rgb(209,117,37)" rx="2" ry="2" />
<text  x="1038.26" y="1695.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (3 samples, 0.06%)</title><rect x="21.4" y="1893" width="0.6" height="15.0" fill="rgb(238,115,39)" rx="2" ry="2" />
<text  x="24.37" y="1903.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="717.5" y="1861" width="0.2" height="15.0" fill="rgb(246,189,32)" rx="2" ry="2" />
<text  x="720.48" y="1871.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="842.7" y="1765" width="0.2" height="15.0" fill="rgb(253,196,41)" rx="2" ry="2" />
<text  x="845.71" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1541" width="0.3" height="15.0" fill="rgb(238,94,19)" rx="2" ry="2" />
<text  x="13.44" y="1551.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1157" width="2.9" height="15.0" fill="rgb(234,152,28)" rx="2" ry="2" />
<text  x="1189.94" y="1167.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1186.9" y="357" width="0.3" height="15.0" fill="rgb(219,40,21)" rx="2" ry="2" />
<text  x="1189.94" y="367.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (1 samples, 0.02%)</title><rect x="1131.9" y="1589" width="0.2" height="15.0" fill="rgb(213,15,51)" rx="2" ry="2" />
<text  x="1134.86" y="1599.5" ></text>
</g>
<g >
<title>database::query (1 samples, 0.02%)</title><rect x="1003.8" y="1701" width="0.2" height="15.0" fill="rgb(222,147,46)" rx="2" ry="2" />
<text  x="1006.79" y="1711.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.02%)</title><rect x="59.8" y="1669" width="0.3" height="15.0" fill="rgb(252,1,52)" rx="2" ry="2" />
<text  x="62.83" y="1679.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="99.2" y="1685" width="0.2" height="15.0" fill="rgb(218,179,9)" rx="2" ry="2" />
<text  x="102.17" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1 samples, 0.02%)</title><rect x="1134.7" y="1909" width="0.2" height="15.0" fill="rgb(222,37,5)" rx="2" ry="2" />
<text  x="1137.70" y="1919.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="19.4" y="1877" width="0.2" height="15.0" fill="rgb(213,137,50)" rx="2" ry="2" />
<text  x="22.40" y="1887.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (4 samples, 0.07%)</title><rect x="801.8" y="1573" width="0.9" height="15.0" fill="rgb(215,28,19)" rx="2" ry="2" />
<text  x="804.84" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.02%)</title><rect x="28.1" y="1605" width="0.3" height="15.0" fill="rgb(232,129,0)" rx="2" ry="2" />
<text  x="31.14" y="1615.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (1 samples, 0.02%)</title><rect x="689.1" y="1909" width="0.2" height="15.0" fill="rgb(233,137,25)" rx="2" ry="2" />
<text  x="692.06" y="1919.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (2 samples, 0.04%)</title><rect x="737.6" y="1733" width="0.4" height="15.0" fill="rgb(253,80,6)" rx="2" ry="2" />
<text  x="740.58" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (84 samples, 1.56%)</title><rect x="889.7" y="1765" width="18.4" height="15.0" fill="rgb(239,135,27)" rx="2" ry="2" />
<text  x="892.70" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="650.4" y="1909" width="0.2" height="15.0" fill="rgb(225,14,52)" rx="2" ry="2" />
<text  x="653.38" y="1919.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="189.4" y="1717" width="0.3" height="15.0" fill="rgb(240,29,25)" rx="2" ry="2" />
<text  x="192.44" y="1727.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (28 samples, 0.52%)</title><rect x="430.9" y="1653" width="6.2" height="15.0" fill="rgb(229,165,32)" rx="2" ry="2" />
<text  x="433.94" y="1663.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (2 samples, 0.04%)</title><rect x="869.4" y="1701" width="0.4" height="15.0" fill="rgb(239,99,18)" rx="2" ry="2" />
<text  x="872.37" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1187.4" y="277" width="0.2" height="15.0" fill="rgb(243,84,6)" rx="2" ry="2" />
<text  x="1190.38" y="287.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::begin (1 samples, 0.02%)</title><rect x="868.1" y="1605" width="0.2" height="15.0" fill="rgb(209,4,31)" rx="2" ry="2" />
<text  x="871.06" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.06%)</title><rect x="1105.2" y="1829" width="0.7" height="15.0" fill="rgb(239,52,20)" rx="2" ry="2" />
<text  x="1108.20" y="1839.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (1 samples, 0.02%)</title><rect x="1027.4" y="1589" width="0.2" height="15.0" fill="rgb(208,131,38)" rx="2" ry="2" />
<text  x="1030.39" y="1599.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (67 samples, 1.24%)</title><rect x="743.0" y="1845" width="14.7" height="15.0" fill="rgb(228,167,26)" rx="2" ry="2" />
<text  x="746.05" y="1855.5" ></text>
</g>
<g >
<title>db::schema_tables::read_keyspace_mutation (1 samples, 0.02%)</title><rect x="100.0" y="1845" width="0.3" height="15.0" fill="rgb(219,15,43)" rx="2" ry="2" />
<text  x="103.05" y="1855.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (27 samples, 0.50%)</title><rect x="476.6" y="1733" width="5.9" height="15.0" fill="rgb(245,107,32)" rx="2" ry="2" />
<text  x="479.62" y="1743.5" ></text>
</g>
<g >
<title>memtable::memtable_encoding_stats_collector::update (2 samples, 0.04%)</title><rect x="1119.6" y="1669" width="0.5" height="15.0" fill="rgb(227,223,40)" rx="2" ry="2" />
<text  x="1122.62" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;query::result_set_row, std::allocator&lt;query::result_set_row&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="101.1" y="1813" width="0.3" height="15.0" fill="rgb(221,160,20)" rx="2" ry="2" />
<text  x="104.14" y="1823.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (4 samples, 0.07%)</title><rect x="755.1" y="1829" width="0.8" height="15.0" fill="rgb(241,132,42)" rx="2" ry="2" />
<text  x="758.07" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (3 samples, 0.06%)</title><rect x="255.9" y="1589" width="0.6" height="15.0" fill="rgb(235,94,51)" rx="2" ry="2" />
<text  x="258.88" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.13%)</title><rect x="412.1" y="1573" width="1.6" height="15.0" fill="rgb(234,204,13)" rx="2" ry="2" />
<text  x="415.15" y="1583.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (6 samples, 0.11%)</title><rect x="745.2" y="1797" width="1.3" height="15.0" fill="rgb(229,95,0)" rx="2" ry="2" />
<text  x="748.23" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (28 samples, 0.52%)</title><rect x="70.3" y="1861" width="6.1" height="15.0" fill="rgb(254,160,8)" rx="2" ry="2" />
<text  x="73.32" y="1871.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (1 samples, 0.02%)</title><rect x="893.9" y="1717" width="0.2" height="15.0" fill="rgb(210,118,47)" rx="2" ry="2" />
<text  x="896.85" y="1727.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1170.3" y="1877" width="0.2" height="15.0" fill="rgb(246,224,53)" rx="2" ry="2" />
<text  x="1173.33" y="1887.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (391 samples, 7.24%)</title><rect x="337.4" y="1653" width="85.5" height="15.0" fill="rgb(217,145,31)" rx="2" ry="2" />
<text  x="340.40" y="1663.5" >compact_mu..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (4 samples, 0.07%)</title><rect x="864.8" y="1813" width="0.9" height="15.0" fill="rgb(242,12,48)" rx="2" ry="2" />
<text  x="867.78" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="59.2" y="1685" width="0.2" height="15.0" fill="rgb(226,217,5)" rx="2" ry="2" />
<text  x="62.18" y="1695.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (2 samples, 0.04%)</title><rect x="962.5" y="1797" width="0.4" height="15.0" fill="rgb(206,41,10)" rx="2" ry="2" />
<text  x="965.48" y="1807.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="64.6" y="1765" width="0.3" height="15.0" fill="rgb(205,175,19)" rx="2" ry="2" />
<text  x="67.64" y="1775.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="918.8" y="1765" width="0.2" height="15.0" fill="rgb(230,21,44)" rx="2" ry="2" />
<text  x="921.77" y="1775.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="809.1" y="1701" width="0.6" height="15.0" fill="rgb(249,138,23)" rx="2" ry="2" />
<text  x="812.05" y="1711.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (6 samples, 0.11%)</title><rect x="1129.7" y="1589" width="1.3" height="15.0" fill="rgb(234,151,28)" rx="2" ry="2" />
<text  x="1132.68" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="47.8" y="1637" width="0.4" height="15.0" fill="rgb(244,203,25)" rx="2" ry="2" />
<text  x="50.81" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (1 samples, 0.02%)</title><rect x="1011.0" y="1701" width="0.2" height="15.0" fill="rgb(224,194,46)" rx="2" ry="2" />
<text  x="1014.00" y="1711.5" ></text>
</g>
<g >
<title>auth::get_permissions (1 samples, 0.02%)</title><rect x="78.4" y="1813" width="0.2" height="15.0" fill="rgb(237,126,22)" rx="2" ry="2" />
<text  x="81.41" y="1823.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="472.5" y="1701" width="0.6" height="15.0" fill="rgb(251,127,36)" rx="2" ry="2" />
<text  x="475.47" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (30 samples, 0.56%)</title><rect x="1149.3" y="1893" width="6.6" height="15.0" fill="rgb(235,58,44)" rx="2" ry="2" />
<text  x="1152.35" y="1903.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (2 samples, 0.04%)</title><rect x="866.8" y="1781" width="0.4" height="15.0" fill="rgb(231,57,31)" rx="2" ry="2" />
<text  x="869.75" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="24.2" y="1765" width="0.2" height="15.0" fill="rgb(230,98,40)" rx="2" ry="2" />
<text  x="27.21" y="1775.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (4 samples, 0.07%)</title><rect x="609.3" y="1829" width="0.9" height="15.0" fill="rgb(228,194,13)" rx="2" ry="2" />
<text  x="612.29" y="1839.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (23 samples, 0.43%)</title><rect x="851.2" y="1877" width="5.1" height="15.0" fill="rgb(219,62,33)" rx="2" ry="2" />
<text  x="854.23" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1168.1" y="1861" width="0.3" height="15.0" fill="rgb(245,160,48)" rx="2" ry="2" />
<text  x="1171.14" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (2 samples, 0.04%)</title><rect x="242.1" y="1541" width="0.4" height="15.0" fill="rgb(236,122,44)" rx="2" ry="2" />
<text  x="245.11" y="1551.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (1 samples, 0.02%)</title><rect x="1044.4" y="1749" width="0.3" height="15.0" fill="rgb(239,177,24)" rx="2" ry="2" />
<text  x="1047.44" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (2 samples, 0.04%)</title><rect x="1047.9" y="1749" width="0.5" height="15.0" fill="rgb(231,86,7)" rx="2" ry="2" />
<text  x="1050.94" y="1759.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="258.9" y="1589" width="0.3" height="15.0" fill="rgb(235,47,4)" rx="2" ry="2" />
<text  x="261.94" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="148.3" y="1845" width="0.3" height="15.0" fill="rgb(215,37,0)" rx="2" ry="2" />
<text  x="151.35" y="1855.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="620.2" y="1813" width="0.2" height="15.0" fill="rgb(209,31,13)" rx="2" ry="2" />
<text  x="623.22" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1141" width="2.9" height="15.0" fill="rgb(213,78,51)" rx="2" ry="2" />
<text  x="1189.94" y="1151.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.06%)</title><rect x="1135.8" y="1925" width="0.7" height="15.0" fill="rgb(210,48,1)" rx="2" ry="2" />
<text  x="1138.80" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::lw_shared_ptr&lt;cql3::column_specification&gt;, std::allocator&lt;seastar::lw_shared_ptr&lt;cql3::column_specification&gt; &gt; &gt;::_M_range_initialize&lt;seastar::lw_shared_ptr&lt;cql3::column_specification&gt; const*&gt; (1 samples, 0.02%)</title><rect x="72.7" y="1749" width="0.2" height="15.0" fill="rgb(247,217,31)" rx="2" ry="2" />
<text  x="75.73" y="1759.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="28.4" y="1669" width="0.6" height="15.0" fill="rgb(239,91,35)" rx="2" ry="2" />
<text  x="31.36" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (3 samples, 0.06%)</title><rect x="669.0" y="1893" width="0.6" height="15.0" fill="rgb(212,156,29)" rx="2" ry="2" />
<text  x="671.96" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="45.2" y="1637" width="0.4" height="15.0" fill="rgb(241,137,30)" rx="2" ry="2" />
<text  x="48.19" y="1647.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (2 samples, 0.04%)</title><rect x="829.8" y="1749" width="0.5" height="15.0" fill="rgb(231,164,52)" rx="2" ry="2" />
<text  x="832.81" y="1759.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (8 samples, 0.15%)</title><rect x="191.6" y="1685" width="1.8" height="15.0" fill="rgb(246,142,42)" rx="2" ry="2" />
<text  x="194.62" y="1695.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="835.9" y="1797" width="1.1" height="15.0" fill="rgb(241,58,38)" rx="2" ry="2" />
<text  x="838.93" y="1807.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1187.2" y="37" width="0.2" height="15.0" fill="rgb(215,142,23)" rx="2" ry="2" />
<text  x="1190.16" y="47.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql3_type::raw&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="59.0" y="1733" width="0.2" height="15.0" fill="rgb(212,93,6)" rx="2" ry="2" />
<text  x="61.96" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="63.5" y="1701" width="0.3" height="15.0" fill="rgb(249,48,25)" rx="2" ry="2" />
<text  x="66.55" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (47 samples, 0.87%)</title><rect x="29.5" y="1717" width="10.2" height="15.0" fill="rgb(245,229,4)" rx="2" ry="2" />
<text  x="32.45" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="254.1" y="1573" width="0.2" height="15.0" fill="rgb(232,175,27)" rx="2" ry="2" />
<text  x="257.13" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (14 samples, 0.26%)</title><rect x="284.5" y="1669" width="3.1" height="15.0" fill="rgb(210,65,9)" rx="2" ry="2" />
<text  x="287.51" y="1679.5" ></text>
</g>
<g >
<title>db::schema_tables::read_tables_for_keyspaces (1 samples, 0.02%)</title><rect x="99.8" y="1925" width="0.2" height="15.0" fill="rgb(217,14,31)" rx="2" ry="2" />
<text  x="102.83" y="1935.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1186.9" y="261" width="0.3" height="15.0" fill="rgb(224,180,3)" rx="2" ry="2" />
<text  x="1189.94" y="271.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="901" width="2.9" height="15.0" fill="rgb(251,156,24)" rx="2" ry="2" />
<text  x="1189.94" y="911.5" ></text>
</g>
<g >
<title>data_value::~data_value (1 samples, 0.02%)</title><rect x="100.9" y="1653" width="0.2" height="15.0" fill="rgb(224,183,26)" rx="2" ry="2" />
<text  x="103.92" y="1663.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (11 samples, 0.20%)</title><rect x="848.6" y="1813" width="2.4" height="15.0" fill="rgb(240,36,17)" rx="2" ry="2" />
<text  x="851.61" y="1823.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.11%)</title><rect x="239.3" y="1541" width="1.3" height="15.0" fill="rgb(228,147,53)" rx="2" ry="2" />
<text  x="242.27" y="1551.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="54.8" y="1317" width="0.2" height="15.0" fill="rgb(212,26,37)" rx="2" ry="2" />
<text  x="57.80" y="1327.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::single_column_primary_key_restrictions (1 samples, 0.02%)</title><rect x="74.5" y="1765" width="0.2" height="15.0" fill="rgb(241,84,10)" rx="2" ry="2" />
<text  x="77.47" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (1 samples, 0.02%)</title><rect x="860.6" y="1909" width="0.3" height="15.0" fill="rgb(231,149,4)" rx="2" ry="2" />
<text  x="863.63" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="837.2" y="1781" width="0.5" height="15.0" fill="rgb(216,223,52)" rx="2" ry="2" />
<text  x="840.25" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="319.5" y="1813" width="0.2" height="15.0" fill="rgb(210,130,17)" rx="2" ry="2" />
<text  x="322.48" y="1823.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="19.2" y="1957" width="0.2" height="15.0" fill="rgb(242,164,35)" rx="2" ry="2" />
<text  x="22.18" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1397" width="0.3" height="15.0" fill="rgb(250,19,18)" rx="2" ry="2" />
<text  x="13.44" y="1407.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="319.7" y="1813" width="0.4" height="15.0" fill="rgb(226,18,53)" rx="2" ry="2" />
<text  x="322.70" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (2 samples, 0.04%)</title><rect x="886.2" y="1829" width="0.4" height="15.0" fill="rgb(224,107,40)" rx="2" ry="2" />
<text  x="889.20" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;schema&gt;::dispose (1 samples, 0.02%)</title><rect x="12.2" y="2021" width="0.2" height="15.0" fill="rgb(222,55,11)" rx="2" ry="2" />
<text  x="15.19" y="2031.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (1 samples, 0.02%)</title><rect x="978.7" y="1781" width="0.2" height="15.0" fill="rgb(221,121,52)" rx="2" ry="2" />
<text  x="981.65" y="1791.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (1 samples, 0.02%)</title><rect x="664.6" y="1893" width="0.2" height="15.0" fill="rgb(236,204,19)" rx="2" ry="2" />
<text  x="667.58" y="1903.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="622.4" y="1845" width="0.7" height="15.0" fill="rgb(212,182,41)" rx="2" ry="2" />
<text  x="625.40" y="1855.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (1 samples, 0.02%)</title><rect x="1101.3" y="1829" width="0.2" height="15.0" fill="rgb(248,224,14)" rx="2" ry="2" />
<text  x="1104.27" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="200.8" y="1621" width="0.2" height="15.0" fill="rgb(226,133,13)" rx="2" ry="2" />
<text  x="203.80" y="1631.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (1 samples, 0.02%)</title><rect x="759.4" y="1813" width="0.3" height="15.0" fill="rgb(212,6,47)" rx="2" ry="2" />
<text  x="762.44" y="1823.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="620.4" y="1861" width="0.3" height="15.0" fill="rgb(240,37,26)" rx="2" ry="2" />
<text  x="623.44" y="1871.5" ></text>
</g>
<g >
<title>__call_tls_dtors (1 samples, 0.02%)</title><rect x="12.2" y="2037" width="0.2" height="15.0" fill="rgb(233,15,48)" rx="2" ry="2" />
<text  x="15.19" y="2047.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.22%)</title><rect x="1007.7" y="1701" width="2.6" height="15.0" fill="rgb(213,128,46)" rx="2" ry="2" />
<text  x="1010.72" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1861" width="0.3" height="15.0" fill="rgb(212,56,2)" rx="2" ry="2" />
<text  x="13.44" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="1106.1" y="1829" width="0.4" height="15.0" fill="rgb(235,193,0)" rx="2" ry="2" />
<text  x="1109.07" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="681.6" y="1877" width="0.3" height="15.0" fill="rgb(223,103,18)" rx="2" ry="2" />
<text  x="684.63" y="1887.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_28has_slice_or_needs_filteringERKNS2_10expressionEEUlRKNS2_15binary_operatorEE_EEPS8_S6_T_EUlS9_E_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_8constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_11conjunctionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_12column_valueEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_5tokenEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13function_callEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4castEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_15field_selectionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4nullEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13bind_variableEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_16untyped_constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_17tuple_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_22collection_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSI_S7_SM_SQ_SU_SY_S12_S16_S1A_S1E_S1I_S1M_SE_S1Q_S1U_S1Y_EEEENSt13invoke_resultISC_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSC_DpOS28_ (1 samples, 0.02%)</title><rect x="944.8" y="1813" width="0.2" height="15.0" fill="rgb(237,127,31)" rx="2" ry="2" />
<text  x="947.78" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="57.0" y="1653" width="0.2" height="15.0" fill="rgb(246,133,5)" rx="2" ry="2" />
<text  x="59.99" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (4 samples, 0.07%)</title><rect x="639.0" y="1909" width="0.9" height="15.0" fill="rgb(209,158,42)" rx="2" ry="2" />
<text  x="642.01" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="58.3" y="1621" width="0.4" height="15.0" fill="rgb(223,12,49)" rx="2" ry="2" />
<text  x="61.30" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="853" width="2.9" height="15.0" fill="rgb(239,74,52)" rx="2" ry="2" />
<text  x="1189.94" y="863.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (9 samples, 0.17%)</title><rect x="1187.8" y="325" width="2.0" height="15.0" fill="rgb(228,157,23)" rx="2" ry="2" />
<text  x="1190.81" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="42.6" y="1717" width="0.2" height="15.0" fill="rgb(249,6,0)" rx="2" ry="2" />
<text  x="45.57" y="1727.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (9 samples, 0.17%)</title><rect x="835.7" y="1813" width="2.0" height="15.0" fill="rgb(239,60,8)" rx="2" ry="2" />
<text  x="838.72" y="1823.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="1186.9" y="165" width="0.3" height="15.0" fill="rgb(219,73,3)" rx="2" ry="2" />
<text  x="1189.94" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (4 samples, 0.07%)</title><rect x="51.1" y="1701" width="0.9" height="15.0" fill="rgb(209,84,47)" rx="2" ry="2" />
<text  x="54.09" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="981" width="0.3" height="15.0" fill="rgb(215,45,33)" rx="2" ry="2" />
<text  x="13.44" y="991.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="1186.9" y="181" width="0.3" height="15.0" fill="rgb(213,122,15)" rx="2" ry="2" />
<text  x="1189.94" y="191.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.02%)</title><rect x="20.1" y="1845" width="0.2" height="15.0" fill="rgb(240,124,53)" rx="2" ry="2" />
<text  x="23.05" y="1855.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="236.9" y="1525" width="0.2" height="15.0" fill="rgb(238,174,42)" rx="2" ry="2" />
<text  x="239.86" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (2 samples, 0.04%)</title><rect x="526.0" y="1637" width="0.5" height="15.0" fill="rgb(224,118,12)" rx="2" ry="2" />
<text  x="529.02" y="1647.5" ></text>
</g>
<g >
<title>__tls_init (3 samples, 0.06%)</title><rect x="190.7" y="1685" width="0.7" height="15.0" fill="rgb(241,20,49)" rx="2" ry="2" />
<text  x="193.75" y="1695.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (3 samples, 0.06%)</title><rect x="540.4" y="1765" width="0.7" height="15.0" fill="rgb(235,98,35)" rx="2" ry="2" />
<text  x="543.44" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="904.1" y="1701" width="0.2" height="15.0" fill="rgb(245,47,46)" rx="2" ry="2" />
<text  x="907.12" y="1711.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (3 samples, 0.06%)</title><rect x="908.7" y="1733" width="0.7" height="15.0" fill="rgb(226,198,20)" rx="2" ry="2" />
<text  x="911.71" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1186.9" y="405" width="0.3" height="15.0" fill="rgb(219,176,44)" rx="2" ry="2" />
<text  x="1189.94" y="415.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (2 samples, 0.04%)</title><rect x="347.7" y="1605" width="0.4" height="15.0" fill="rgb(208,209,37)" rx="2" ry="2" />
<text  x="350.67" y="1615.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (1 samples, 0.02%)</title><rect x="80.2" y="1909" width="0.2" height="15.0" fill="rgb(232,129,31)" rx="2" ry="2" />
<text  x="83.16" y="1919.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (9 samples, 0.17%)</title><rect x="325.2" y="1717" width="1.9" height="15.0" fill="rgb(233,173,30)" rx="2" ry="2" />
<text  x="328.16" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="48.2" y="1573" width="0.5" height="15.0" fill="rgb(209,52,1)" rx="2" ry="2" />
<text  x="51.25" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (1 samples, 0.02%)</title><rect x="1113.9" y="1845" width="0.3" height="15.0" fill="rgb(247,4,39)" rx="2" ry="2" />
<text  x="1116.94" y="1855.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (58 samples, 1.07%)</title><rect x="654.3" y="1909" width="12.7" height="15.0" fill="rgb(211,65,14)" rx="2" ry="2" />
<text  x="657.31" y="1919.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (1 samples, 0.02%)</title><rect x="132.4" y="1877" width="0.2" height="15.0" fill="rgb(243,118,25)" rx="2" ry="2" />
<text  x="135.39" y="1887.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="81.3" y="1925" width="0.2" height="15.0" fill="rgb(244,7,15)" rx="2" ry="2" />
<text  x="84.25" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="2005" width="0.3" height="15.0" fill="rgb(221,202,3)" rx="2" ry="2" />
<text  x="13.44" y="2015.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (70 samples, 1.30%)</title><rect x="25.5" y="1781" width="15.3" height="15.0" fill="rgb(225,40,22)" rx="2" ry="2" />
<text  x="28.52" y="1791.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="1119.6" y="1637" width="0.5" height="15.0" fill="rgb(213,226,37)" rx="2" ry="2" />
<text  x="1122.62" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.02%)</title><rect x="63.3" y="1733" width="0.2" height="15.0" fill="rgb(208,70,14)" rx="2" ry="2" />
<text  x="66.33" y="1743.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="52.4" y="1669" width="0.2" height="15.0" fill="rgb(207,196,34)" rx="2" ry="2" />
<text  x="55.40" y="1679.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="864.3" y="1829" width="0.3" height="15.0" fill="rgb(217,21,28)" rx="2" ry="2" />
<text  x="867.35" y="1839.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="58.5" y="1477" width="0.2" height="15.0" fill="rgb(214,23,8)" rx="2" ry="2" />
<text  x="61.52" y="1487.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (1 samples, 0.02%)</title><rect x="99.4" y="1813" width="0.2" height="15.0" fill="rgb(222,180,33)" rx="2" ry="2" />
<text  x="102.39" y="1823.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (6 samples, 0.11%)</title><rect x="490.6" y="1701" width="1.3" height="15.0" fill="rgb(210,140,15)" rx="2" ry="2" />
<text  x="493.61" y="1711.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="561.4" y="1765" width="0.5" height="15.0" fill="rgb(229,211,42)" rx="2" ry="2" />
<text  x="564.42" y="1775.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="1041.8" y="1621" width="0.2" height="15.0" fill="rgb(237,59,19)" rx="2" ry="2" />
<text  x="1044.82" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="663.9" y="1893" width="0.5" height="15.0" fill="rgb(218,0,24)" rx="2" ry="2" />
<text  x="666.93" y="1903.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1168.1" y="1845" width="0.3" height="15.0" fill="rgb(218,15,26)" rx="2" ry="2" />
<text  x="1171.14" y="1855.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1187.4" y="245" width="0.2" height="15.0" fill="rgb(236,210,30)" rx="2" ry="2" />
<text  x="1190.38" y="255.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="300.5" y="1765" width="0.2" height="15.0" fill="rgb(206,186,41)" rx="2" ry="2" />
<text  x="303.46" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::~deque (1 samples, 0.02%)</title><rect x="23.6" y="1781" width="0.2" height="15.0" fill="rgb(205,50,2)" rx="2" ry="2" />
<text  x="26.55" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::has_eq_null (1 samples, 0.02%)</title><rect x="864.8" y="1781" width="0.2" height="15.0" fill="rgb(251,61,19)" rx="2" ry="2" />
<text  x="867.78" y="1791.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="651.7" y="1765" width="0.2" height="15.0" fill="rgb(239,136,5)" rx="2" ry="2" />
<text  x="654.69" y="1775.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (3 samples, 0.06%)</title><rect x="872.4" y="1893" width="0.7" height="15.0" fill="rgb(205,118,31)" rx="2" ry="2" />
<text  x="875.43" y="1903.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (1 samples, 0.02%)</title><rect x="81.3" y="1829" width="0.2" height="15.0" fill="rgb(249,145,40)" rx="2" ry="2" />
<text  x="84.25" y="1839.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (12 samples, 0.22%)</title><rect x="981.5" y="1749" width="2.6" height="15.0" fill="rgb(223,71,38)" rx="2" ry="2" />
<text  x="984.49" y="1759.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (2 samples, 0.04%)</title><rect x="977.8" y="1781" width="0.4" height="15.0" fill="rgb(221,195,9)" rx="2" ry="2" />
<text  x="980.78" y="1791.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (3 samples, 0.06%)</title><rect x="570.2" y="1829" width="0.6" height="15.0" fill="rgb(212,82,5)" rx="2" ry="2" />
<text  x="573.17" y="1839.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="101.6" y="1925" width="0.6" height="15.0" fill="rgb(220,217,24)" rx="2" ry="2" />
<text  x="104.58" y="1935.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="589.2" y="1765" width="0.9" height="15.0" fill="rgb(223,169,37)" rx="2" ry="2" />
<text  x="592.18" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="74.5" y="1717" width="0.2" height="15.0" fill="rgb(215,139,41)" rx="2" ry="2" />
<text  x="77.47" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="45.0" y="1685" width="0.2" height="15.0" fill="rgb(218,198,26)" rx="2" ry="2" />
<text  x="47.97" y="1695.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (3 samples, 0.06%)</title><rect x="627.0" y="1861" width="0.6" height="15.0" fill="rgb(245,95,4)" rx="2" ry="2" />
<text  x="629.99" y="1871.5" ></text>
</g>
<g >
<title>local_schema_registry (2 samples, 0.04%)</title><rect x="971.2" y="1781" width="0.5" height="15.0" fill="rgb(238,183,0)" rx="2" ry="2" />
<text  x="974.22" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="373" width="0.3" height="15.0" fill="rgb(254,186,11)" rx="2" ry="2" />
<text  x="13.44" y="383.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (215 samples, 3.98%)</title><rect x="22.5" y="1877" width="46.9" height="15.0" fill="rgb(225,14,18)" rx="2" ry="2" />
<text  x="25.46" y="1887.5" >cql3..</text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="775.4" y="1813" width="0.2" height="15.0" fill="rgb(211,111,38)" rx="2" ry="2" />
<text  x="778.39" y="1823.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="81.5" y="1893" width="0.2" height="15.0" fill="rgb(222,169,18)" rx="2" ry="2" />
<text  x="84.47" y="1903.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.02%)</title><rect x="720.3" y="1781" width="0.2" height="15.0" fill="rgb(239,21,45)" rx="2" ry="2" />
<text  x="723.32" y="1791.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (2 samples, 0.04%)</title><rect x="362.8" y="1589" width="0.4" height="15.0" fill="rgb(232,203,13)" rx="2" ry="2" />
<text  x="365.75" y="1599.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (3 samples, 0.06%)</title><rect x="100.7" y="1845" width="0.7" height="15.0" fill="rgb(210,61,38)" rx="2" ry="2" />
<text  x="103.70" y="1855.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (4 samples, 0.07%)</title><rect x="589.2" y="1781" width="0.9" height="15.0" fill="rgb(247,190,12)" rx="2" ry="2" />
<text  x="592.18" y="1791.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (2 samples, 0.04%)</title><rect x="1043.6" y="1717" width="0.4" height="15.0" fill="rgb(205,12,40)" rx="2" ry="2" />
<text  x="1046.57" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="45.2" y="1685" width="0.4" height="15.0" fill="rgb(252,147,26)" rx="2" ry="2" />
<text  x="48.19" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="691.7" y="1861" width="0.2" height="15.0" fill="rgb(205,72,37)" rx="2" ry="2" />
<text  x="694.69" y="1871.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (2 samples, 0.04%)</title><rect x="364.5" y="1605" width="0.4" height="15.0" fill="rgb(225,151,40)" rx="2" ry="2" />
<text  x="367.50" y="1615.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1,243 samples, 23.02%)</title><rect x="863.3" y="1925" width="271.6" height="15.0" fill="rgb(234,150,43)" rx="2" ry="2" />
<text  x="866.25" y="1935.5" >seastar::lambda_task&lt;seastar::execut..</text>
</g>
<g >
<title>mutation_source::mutation_source (2 samples, 0.04%)</title><rect x="145.7" y="1861" width="0.5" height="15.0" fill="rgb(229,31,40)" rx="2" ry="2" />
<text  x="148.73" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1109" width="0.3" height="15.0" fill="rgb(237,57,50)" rx="2" ry="2" />
<text  x="13.44" y="1119.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="517" width="2.9" height="15.0" fill="rgb(245,56,14)" rx="2" ry="2" />
<text  x="1189.94" y="527.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="41.9" y="1589" width="0.2" height="15.0" fill="rgb(253,39,41)" rx="2" ry="2" />
<text  x="44.91" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.02%)</title><rect x="60.7" y="1765" width="0.2" height="15.0" fill="rgb(243,79,4)" rx="2" ry="2" />
<text  x="63.71" y="1775.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (29 samples, 0.54%)</title><rect x="1068.3" y="1685" width="6.3" height="15.0" fill="rgb(232,99,51)" rx="2" ry="2" />
<text  x="1071.26" y="1695.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="280.8" y="1621" width="0.2" height="15.0" fill="rgb(225,91,37)" rx="2" ry="2" />
<text  x="283.79" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="43.9" y="1717" width="0.2" height="15.0" fill="rgb(242,136,36)" rx="2" ry="2" />
<text  x="46.88" y="1727.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="682.7" y="1861" width="0.2" height="15.0" fill="rgb(246,73,38)" rx="2" ry="2" />
<text  x="685.72" y="1871.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.02%)</title><rect x="817.6" y="1749" width="0.2" height="15.0" fill="rgb(250,66,12)" rx="2" ry="2" />
<text  x="820.58" y="1759.5" ></text>
</g>
<g >
<title>sstables::file_writer::~file_writer (1 samples, 0.02%)</title><rect x="18.3" y="1909" width="0.2" height="15.0" fill="rgb(234,135,15)" rx="2" ry="2" />
<text  x="21.31" y="1919.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&amp;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;**&gt;::_Deque_iterator (1 samples, 0.02%)</title><rect x="23.8" y="1765" width="0.2" height="15.0" fill="rgb(248,153,34)" rx="2" ry="2" />
<text  x="26.77" y="1775.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="538.9" y="1749" width="0.2" height="15.0" fill="rgb(229,50,45)" rx="2" ry="2" />
<text  x="541.91" y="1759.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="442.7" y="1717" width="0.7" height="15.0" fill="rgb(222,197,15)" rx="2" ry="2" />
<text  x="445.75" y="1727.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1186.9" y="421" width="0.3" height="15.0" fill="rgb(210,5,40)" rx="2" ry="2" />
<text  x="1189.94" y="431.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (2 samples, 0.04%)</title><rect x="99.4" y="1909" width="0.4" height="15.0" fill="rgb(233,6,3)" rx="2" ry="2" />
<text  x="102.39" y="1919.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (1 samples, 0.02%)</title><rect x="10.4" y="53" width="0.3" height="15.0" fill="rgb(230,158,16)" rx="2" ry="2" />
<text  x="13.44" y="63.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (14 samples, 0.26%)</title><rect x="919.0" y="1797" width="3.0" height="15.0" fill="rgb(227,138,49)" rx="2" ry="2" />
<text  x="921.99" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.07%)</title><rect x="564.7" y="1733" width="0.9" height="15.0" fill="rgb(249,167,16)" rx="2" ry="2" />
<text  x="567.70" y="1743.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (17 samples, 0.31%)</title><rect x="283.9" y="1685" width="3.7" height="15.0" fill="rgb(240,80,43)" rx="2" ry="2" />
<text  x="286.85" y="1695.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="1090.8" y="1813" width="0.2" height="15.0" fill="rgb(211,138,41)" rx="2" ry="2" />
<text  x="1093.77" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="95.5" y="1893" width="0.4" height="15.0" fill="rgb(237,80,1)" rx="2" ry="2" />
<text  x="98.46" y="1903.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.04%)</title><rect x="19.8" y="1925" width="0.5" height="15.0" fill="rgb(244,63,51)" rx="2" ry="2" />
<text  x="22.84" y="1935.5" ></text>
</g>
<g >
<title>sstables::write_unsigned_vint&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1188.0" y="37" width="0.3" height="15.0" fill="rgb(232,56,29)" rx="2" ry="2" />
<text  x="1191.03" y="47.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (4 samples, 0.07%)</title><rect x="352.7" y="1621" width="0.9" height="15.0" fill="rgb(220,63,25)" rx="2" ry="2" />
<text  x="355.70" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="45.4" y="1557" width="0.2" height="15.0" fill="rgb(213,227,33)" rx="2" ry="2" />
<text  x="48.41" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (4 samples, 0.07%)</title><rect x="773.4" y="1797" width="0.9" height="15.0" fill="rgb(234,77,34)" rx="2" ry="2" />
<text  x="776.43" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="24.2" y="1685" width="0.2" height="15.0" fill="rgb(216,2,28)" rx="2" ry="2" />
<text  x="27.21" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="99.8" y="1797" width="0.2" height="15.0" fill="rgb(225,171,6)" rx="2" ry="2" />
<text  x="102.83" y="1807.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="476.2" y="1717" width="0.2" height="15.0" fill="rgb(207,86,7)" rx="2" ry="2" />
<text  x="479.19" y="1727.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (1 samples, 0.02%)</title><rect x="614.3" y="1845" width="0.2" height="15.0" fill="rgb(208,137,40)" rx="2" ry="2" />
<text  x="617.32" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (1 samples, 0.02%)</title><rect x="565.6" y="1813" width="0.2" height="15.0" fill="rgb(207,77,46)" rx="2" ry="2" />
<text  x="568.58" y="1823.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.02%)</title><rect x="100.3" y="1813" width="0.2" height="15.0" fill="rgb(205,33,9)" rx="2" ry="2" />
<text  x="103.26" y="1823.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (44 samples, 0.81%)</title><rect x="708.7" y="1909" width="9.6" height="15.0" fill="rgb(243,147,37)" rx="2" ry="2" />
<text  x="711.73" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1429" width="0.3" height="15.0" fill="rgb(221,167,46)" rx="2" ry="2" />
<text  x="13.44" y="1439.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (2 samples, 0.04%)</title><rect x="1127.7" y="1621" width="0.4" height="15.0" fill="rgb(227,223,16)" rx="2" ry="2" />
<text  x="1130.71" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (2 samples, 0.04%)</title><rect x="677.3" y="1893" width="0.4" height="15.0" fill="rgb(221,125,1)" rx="2" ry="2" />
<text  x="680.26" y="1903.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.52%)</title><rect x="1118.1" y="1893" width="6.1" height="15.0" fill="rgb(241,137,8)" rx="2" ry="2" />
<text  x="1121.09" y="1903.5" ></text>
</g>
<g >
<title>abstract_type::get_string (1 samples, 0.02%)</title><rect x="100.9" y="1717" width="0.2" height="15.0" fill="rgb(246,190,20)" rx="2" ry="2" />
<text  x="103.92" y="1727.5" ></text>
</g>
<g >
<title>ser::serializer&lt;column_mapping&gt;::write&lt;seastar::memory_output_stream&lt;__gnu_cxx::__normal_iterator&lt;seastar::temporary_buffer&lt;char&gt;*, std::vector&lt;seastar::temporary_buffer&lt;char&gt;, std::allocator&lt;seastar::temporary_buffer&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1123.3" y="1637" width="0.3" height="15.0" fill="rgb(216,225,39)" rx="2" ry="2" />
<text  x="1126.34" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="126.5" y="1797" width="0.2" height="15.0" fill="rgb(253,188,53)" rx="2" ry="2" />
<text  x="129.49" y="1807.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;seastar::posix_file_real_impl&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="18.3" y="1861" width="0.2" height="15.0" fill="rgb(208,30,24)" rx="2" ry="2" />
<text  x="21.31" y="1871.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (1 samples, 0.02%)</title><rect x="10.4" y="69" width="0.3" height="15.0" fill="rgb(205,56,21)" rx="2" ry="2" />
<text  x="13.44" y="79.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1087.3" y="1765" width="0.2" height="15.0" fill="rgb(250,28,1)" rx="2" ry="2" />
<text  x="1090.28" y="1775.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1,307 samples, 24.21%)</title><rect x="164.7" y="1845" width="285.7" height="15.0" fill="rgb(210,180,23)" rx="2" ry="2" />
<text  x="167.74" y="1855.5" >query::consume_page&lt;</text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (4 samples, 0.07%)</title><rect x="1035.7" y="1685" width="0.9" height="15.0" fill="rgb(221,115,25)" rx="2" ry="2" />
<text  x="1038.70" y="1695.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1717" width="2.9" height="15.0" fill="rgb(217,107,17)" rx="2" ry="2" />
<text  x="1189.94" y="1727.5" ></text>
</g>
<g >
<title>cql3::constants::value::get (1 samples, 0.02%)</title><rect x="869.4" y="1685" width="0.2" height="15.0" fill="rgb(252,163,44)" rx="2" ry="2" />
<text  x="872.37" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="100.0" y="1893" width="0.3" height="15.0" fill="rgb(219,35,34)" rx="2" ry="2" />
<text  x="103.05" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.02%)</title><rect x="208.0" y="1653" width="0.2" height="15.0" fill="rgb(235,41,41)" rx="2" ry="2" />
<text  x="211.01" y="1663.5" ></text>
</g>
<g >
<title>db::schema_tables::add_column_to_schema_mutation (1 samples, 0.02%)</title><rect x="100.3" y="1845" width="0.2" height="15.0" fill="rgb(252,224,26)" rx="2" ry="2" />
<text  x="103.26" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="555.5" y="1765" width="0.2" height="15.0" fill="rgb(222,38,41)" rx="2" ry="2" />
<text  x="558.52" y="1775.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (207 samples, 3.83%)</title><rect x="775.8" y="1813" width="45.3" height="15.0" fill="rgb(206,30,12)" rx="2" ry="2" />
<text  x="778.83" y="1823.5" >std:..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="17.4" y="1845" width="0.2" height="15.0" fill="rgb(217,82,6)" rx="2" ry="2" />
<text  x="20.43" y="1855.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (5 samples, 0.09%)</title><rect x="827.4" y="1733" width="1.1" height="15.0" fill="rgb(233,23,47)" rx="2" ry="2" />
<text  x="830.41" y="1743.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="45.2" y="1541" width="0.2" height="15.0" fill="rgb(231,22,21)" rx="2" ry="2" />
<text  x="48.19" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1301" width="0.3" height="15.0" fill="rgb(208,136,47)" rx="2" ry="2" />
<text  x="13.44" y="1311.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="696.3" y="1749" width="0.2" height="15.0" fill="rgb(241,74,42)" rx="2" ry="2" />
<text  x="699.28" y="1759.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="99.2" y="1701" width="0.2" height="15.0" fill="rgb(246,42,12)" rx="2" ry="2" />
<text  x="102.17" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1188.3" y="245" width="0.2" height="15.0" fill="rgb(242,187,42)" rx="2" ry="2" />
<text  x="1191.25" y="255.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (4 samples, 0.07%)</title><rect x="1080.9" y="1733" width="0.9" height="15.0" fill="rgb(214,40,43)" rx="2" ry="2" />
<text  x="1083.94" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1186.9" y="389" width="0.3" height="15.0" fill="rgb(209,126,38)" rx="2" ry="2" />
<text  x="1189.94" y="399.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_partition (1 samples, 0.02%)</title><rect x="1189.3" y="69" width="0.3" height="15.0" fill="rgb(218,142,27)" rx="2" ry="2" />
<text  x="1192.34" y="79.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (10 samples, 0.19%)</title><rect x="413.9" y="1557" width="2.2" height="15.0" fill="rgb(228,76,12)" rx="2" ry="2" />
<text  x="416.90" y="1567.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (4 samples, 0.07%)</title><rect x="827.4" y="1717" width="0.9" height="15.0" fill="rgb(251,149,3)" rx="2" ry="2" />
<text  x="830.41" y="1727.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (7 samples, 0.13%)</title><rect x="57.2" y="1669" width="1.5" height="15.0" fill="rgb(220,205,1)" rx="2" ry="2" />
<text  x="60.21" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (3 samples, 0.06%)</title><rect x="1091.6" y="1797" width="0.7" height="15.0" fill="rgb(209,164,31)" rx="2" ry="2" />
<text  x="1094.65" y="1807.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::set_latency (1 samples, 0.02%)</title><rect x="631.1" y="1861" width="0.3" height="15.0" fill="rgb(209,158,41)" rx="2" ry="2" />
<text  x="634.14" y="1871.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="537.2" y="1749" width="1.1" height="15.0" fill="rgb(213,72,27)" rx="2" ry="2" />
<text  x="540.16" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="27.9" y="1605" width="0.2" height="15.0" fill="rgb(253,48,4)" rx="2" ry="2" />
<text  x="30.92" y="1615.5" ></text>
</g>
<g >
<title>mutation_partition::apply_monotonically (1 samples, 0.02%)</title><rect x="1122.7" y="1653" width="0.2" height="15.0" fill="rgb(222,120,27)" rx="2" ry="2" />
<text  x="1125.68" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="45.2" y="1669" width="0.4" height="15.0" fill="rgb(221,216,26)" rx="2" ry="2" />
<text  x="48.19" y="1679.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="257.2" y="1573" width="0.2" height="15.0" fill="rgb(237,154,24)" rx="2" ry="2" />
<text  x="260.19" y="1583.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (6 samples, 0.11%)</title><rect x="745.2" y="1813" width="1.3" height="15.0" fill="rgb(238,180,21)" rx="2" ry="2" />
<text  x="748.23" y="1823.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (2 samples, 0.04%)</title><rect x="613.0" y="1861" width="0.4" height="15.0" fill="rgb(254,124,16)" rx="2" ry="2" />
<text  x="616.00" y="1871.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (2 samples, 0.04%)</title><rect x="943.2" y="1829" width="0.5" height="15.0" fill="rgb(214,142,27)" rx="2" ry="2" />
<text  x="946.25" y="1839.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS4_12restrictionsL11has_eq_nullERKNS4_13query_optionsERKNS5_10expressionEE3$_8EES8_SI_T_EUlRS7_E_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_8constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_11conjunctionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_12column_valueEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_5tokenEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13function_callEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4castEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_15field_selectionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4nullEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13bind_variableEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_16untyped_constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_17tuple_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_22collection_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSR_S6_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_S1V_SN_S1Z_S23_S27_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES2C_S2F_ (1 samples, 0.02%)</title><rect x="864.8" y="1749" width="0.2" height="15.0" fill="rgb(206,33,50)" rx="2" ry="2" />
<text  x="867.78" y="1759.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.02%)</title><rect x="630.9" y="1829" width="0.2" height="15.0" fill="rgb(213,122,5)" rx="2" ry="2" />
<text  x="633.93" y="1839.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (4 samples, 0.07%)</title><rect x="178.7" y="1701" width="0.9" height="15.0" fill="rgb(216,16,16)" rx="2" ry="2" />
<text  x="181.73" y="1711.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (7 samples, 0.13%)</title><rect x="26.8" y="1653" width="1.6" height="15.0" fill="rgb(224,78,3)" rx="2" ry="2" />
<text  x="29.83" y="1663.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1 samples, 0.02%)</title><rect x="1186.9" y="149" width="0.3" height="15.0" fill="rgb(232,153,54)" rx="2" ry="2" />
<text  x="1189.94" y="159.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::term&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1112.6" y="1845" width="0.2" height="15.0" fill="rgb(233,20,35)" rx="2" ry="2" />
<text  x="1115.63" y="1855.5" ></text>
</g>
<g >
<title>database::do_apply (28 samples, 0.52%)</title><rect x="1118.1" y="1765" width="6.1" height="15.0" fill="rgb(216,100,32)" rx="2" ry="2" />
<text  x="1121.09" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (344 samples, 6.37%)</title><rect x="193.4" y="1685" width="75.2" height="15.0" fill="rgb(206,220,6)" rx="2" ry="2" />
<text  x="196.37" y="1695.5" >partitio..</text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.02%)</title><rect x="78.2" y="1861" width="0.2" height="15.0" fill="rgb(237,6,12)" rx="2" ry="2" />
<text  x="81.19" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="675.3" y="1893" width="0.2" height="15.0" fill="rgb(248,89,24)" rx="2" ry="2" />
<text  x="678.29" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="660.4" y="1829" width="0.3" height="15.0" fill="rgb(224,168,36)" rx="2" ry="2" />
<text  x="663.43" y="1839.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (1 samples, 0.02%)</title><rect x="1124.0" y="1749" width="0.2" height="15.0" fill="rgb(222,228,20)" rx="2" ry="2" />
<text  x="1127.00" y="1759.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;flat_mutation_reader&gt;::allocate (1 samples, 0.02%)</title><rect x="554.9" y="1749" width="0.2" height="15.0" fill="rgb(241,177,23)" rx="2" ry="2" />
<text  x="557.87" y="1759.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (5 samples, 0.09%)</title><rect x="1067.0" y="1733" width="1.0" height="15.0" fill="rgb(216,54,14)" rx="2" ry="2" />
<text  x="1069.95" y="1743.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (3 samples, 0.06%)</title><rect x="1081.2" y="1701" width="0.6" height="15.0" fill="rgb(226,9,50)" rx="2" ry="2" />
<text  x="1084.16" y="1711.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (2 samples, 0.04%)</title><rect x="366.5" y="1605" width="0.4" height="15.0" fill="rgb(222,114,39)" rx="2" ry="2" />
<text  x="369.47" y="1615.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;void&gt;::then_wrapped_nrvo&lt;seastar::future&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="718.8" y="1909" width="0.4" height="15.0" fill="rgb(229,50,7)" rx="2" ry="2" />
<text  x="721.79" y="1919.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="1186.9" y="197" width="0.3" height="15.0" fill="rgb(216,158,3)" rx="2" ry="2" />
<text  x="1189.94" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="51.1" y="1685" width="0.6" height="15.0" fill="rgb(242,12,43)" rx="2" ry="2" />
<text  x="54.09" y="1695.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (3 samples, 0.06%)</title><rect x="1102.8" y="1813" width="0.7" height="15.0" fill="rgb(252,7,42)" rx="2" ry="2" />
<text  x="1105.79" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="62.9" y="1685" width="0.2" height="15.0" fill="rgb(211,92,44)" rx="2" ry="2" />
<text  x="65.89" y="1695.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="675.3" y="1909" width="0.2" height="15.0" fill="rgb(223,86,45)" rx="2" ry="2" />
<text  x="678.29" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="62.0" y="1653" width="0.2" height="15.0" fill="rgb(221,146,16)" rx="2" ry="2" />
<text  x="65.02" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1132.5" y="1589" width="0.2" height="15.0" fill="rgb(210,75,39)" rx="2" ry="2" />
<text  x="1135.52" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="869.8" y="1749" width="0.2" height="15.0" fill="rgb(216,134,3)" rx="2" ry="2" />
<text  x="872.81" y="1759.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (4 samples, 0.07%)</title><rect x="651.7" y="1893" width="0.9" height="15.0" fill="rgb(220,179,24)" rx="2" ry="2" />
<text  x="654.69" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (13 samples, 0.24%)</title><rect x="61.4" y="1765" width="2.8" height="15.0" fill="rgb(236,14,28)" rx="2" ry="2" />
<text  x="64.36" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1685" width="2.9" height="15.0" fill="rgb(205,3,8)" rx="2" ry="2" />
<text  x="1189.94" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="57.2" y="1621" width="0.4" height="15.0" fill="rgb(212,143,31)" rx="2" ry="2" />
<text  x="60.21" y="1631.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (8 samples, 0.15%)</title><rect x="829.8" y="1765" width="1.8" height="15.0" fill="rgb(245,154,4)" rx="2" ry="2" />
<text  x="832.81" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1909" width="0.3" height="15.0" fill="rgb(225,36,5)" rx="2" ry="2" />
<text  x="13.44" y="1919.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="57.2" y="1637" width="0.4" height="15.0" fill="rgb(225,4,46)" rx="2" ry="2" />
<text  x="60.21" y="1647.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1 samples, 0.02%)</title><rect x="611.7" y="1829" width="0.2" height="15.0" fill="rgb(220,54,27)" rx="2" ry="2" />
<text  x="614.69" y="1839.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.13%)</title><rect x="920.1" y="1765" width="1.5" height="15.0" fill="rgb(240,58,8)" rx="2" ry="2" />
<text  x="923.08" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.07%)</title><rect x="670.5" y="1909" width="0.9" height="15.0" fill="rgb(243,0,42)" rx="2" ry="2" />
<text  x="673.49" y="1919.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::storage_proxy::send_to_live_endpoints (1 samples, 0.02%)</title><rect x="82.6" y="1941" width="0.2" height="15.0" fill="rgb(237,150,38)" rx="2" ry="2" />
<text  x="85.56" y="1951.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (11 samples, 0.20%)</title><rect x="256.5" y="1589" width="2.4" height="15.0" fill="rgb(237,89,44)" rx="2" ry="2" />
<text  x="259.53" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (39 samples, 0.72%)</title><rect x="1124.9" y="1765" width="8.5" height="15.0" fill="rgb(248,147,35)" rx="2" ry="2" />
<text  x="1127.87" y="1775.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::reserve (2 samples, 0.04%)</title><rect x="783.0" y="1717" width="0.5" height="15.0" fill="rgb(207,102,41)" rx="2" ry="2" />
<text  x="786.04" y="1727.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (14 samples, 0.26%)</title><rect x="600.3" y="1829" width="3.1" height="15.0" fill="rgb(252,6,25)" rx="2" ry="2" />
<text  x="603.33" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="61.4" y="1685" width="0.2" height="15.0" fill="rgb(248,220,53)" rx="2" ry="2" />
<text  x="64.36" y="1695.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (2 samples, 0.04%)</title><rect x="629.6" y="1813" width="0.5" height="15.0" fill="rgb(221,216,51)" rx="2" ry="2" />
<text  x="632.61" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1461" width="2.9" height="15.0" fill="rgb(250,121,7)" rx="2" ry="2" />
<text  x="1189.94" y="1471.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="257.4" y="1573" width="0.4" height="15.0" fill="rgb(228,12,37)" rx="2" ry="2" />
<text  x="260.41" y="1583.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="62.0" y="1541" width="0.2" height="15.0" fill="rgb(218,112,51)" rx="2" ry="2" />
<text  x="65.02" y="1551.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="841.2" y="1813" width="0.2" height="15.0" fill="rgb(209,55,39)" rx="2" ry="2" />
<text  x="844.18" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="57.0" y="1557" width="0.2" height="15.0" fill="rgb(233,31,44)" rx="2" ry="2" />
<text  x="59.99" y="1567.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.02%)</title><rect x="123.9" y="1813" width="0.2" height="15.0" fill="rgb(214,71,39)" rx="2" ry="2" />
<text  x="126.87" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.02%)</title><rect x="61.1" y="1765" width="0.3" height="15.0" fill="rgb(254,14,1)" rx="2" ry="2" />
<text  x="64.14" y="1775.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="447.1" y="1765" width="0.2" height="15.0" fill="rgb(221,83,46)" rx="2" ry="2" />
<text  x="450.12" y="1775.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1187.6" y="165" width="0.2" height="15.0" fill="rgb(207,67,30)" rx="2" ry="2" />
<text  x="1190.60" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="1038.3" y="1701" width="0.2" height="15.0" fill="rgb(252,28,22)" rx="2" ry="2" />
<text  x="1041.32" y="1711.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="896.7" y="1685" width="0.4" height="15.0" fill="rgb(243,208,38)" rx="2" ry="2" />
<text  x="899.69" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1016.7" y="1637" width="0.2" height="15.0" fill="rgb(240,28,21)" rx="2" ry="2" />
<text  x="1019.68" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="510.9" y="1637" width="0.5" height="15.0" fill="rgb(221,12,25)" rx="2" ry="2" />
<text  x="513.94" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1781" width="0.3" height="15.0" fill="rgb(230,152,14)" rx="2" ry="2" />
<text  x="13.44" y="1791.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (63 samples, 1.17%)</title><rect x="268.8" y="1653" width="13.7" height="15.0" fill="rgb(235,151,4)" rx="2" ry="2" />
<text  x="271.77" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="45.0" y="1717" width="0.2" height="15.0" fill="rgb(215,161,16)" rx="2" ry="2" />
<text  x="47.97" y="1727.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.5" y="165" width="0.2" height="15.0" fill="rgb(233,87,45)" rx="2" ry="2" />
<text  x="1191.47" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (2 samples, 0.04%)</title><rect x="1106.5" y="1845" width="0.4" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="1109.51" y="1855.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.07%)</title><rect x="244.5" y="1573" width="0.9" height="15.0" fill="rgb(253,16,52)" rx="2" ry="2" />
<text  x="247.51" y="1583.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (1 samples, 0.02%)</title><rect x="850.6" y="1765" width="0.2" height="15.0" fill="rgb(238,122,33)" rx="2" ry="2" />
<text  x="853.58" y="1775.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.02%)</title><rect x="1025.2" y="1573" width="0.2" height="15.0" fill="rgb(254,169,24)" rx="2" ry="2" />
<text  x="1028.21" y="1583.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (565 samples, 10.46%)</title><rect x="322.3" y="1797" width="123.5" height="15.0" fill="rgb(215,18,15)" rx="2" ry="2" />
<text  x="325.32" y="1807.5" >flat_mutation_r..</text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="665.5" y="1861" width="0.4" height="15.0" fill="rgb(223,190,41)" rx="2" ry="2" />
<text  x="668.46" y="1871.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="127.6" y="1813" width="0.2" height="15.0" fill="rgb(209,78,50)" rx="2" ry="2" />
<text  x="130.58" y="1823.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (17 samples, 0.31%)</title><rect x="834.2" y="1861" width="3.7" height="15.0" fill="rgb(244,1,15)" rx="2" ry="2" />
<text  x="837.19" y="1871.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="681.9" y="1861" width="0.2" height="15.0" fill="rgb(244,126,51)" rx="2" ry="2" />
<text  x="684.85" y="1871.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (15 samples, 0.28%)</title><rect x="930.4" y="1813" width="3.2" height="15.0" fill="rgb(231,14,11)" rx="2" ry="2" />
<text  x="933.35" y="1823.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1187.6" y="133" width="0.2" height="15.0" fill="rgb(215,132,35)" rx="2" ry="2" />
<text  x="1190.60" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="471.6" y="1669" width="0.2" height="15.0" fill="rgb(217,78,54)" rx="2" ry="2" />
<text  x="474.60" y="1679.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (4 samples, 0.07%)</title><rect x="630.1" y="1829" width="0.8" height="15.0" fill="rgb(229,48,46)" rx="2" ry="2" />
<text  x="633.05" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (458 samples, 8.48%)</title><rect x="455.6" y="1797" width="100.1" height="15.0" fill="rgb(210,19,6)" rx="2" ry="2" />
<text  x="458.64" y="1807.5" >std::_Functi..</text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (40 samples, 0.74%)</title><rect x="1178.2" y="2053" width="8.7" height="15.0" fill="rgb(246,51,39)" rx="2" ry="2" />
<text  x="1181.20" y="2063.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.04%)</title><rect x="44.8" y="1749" width="0.4" height="15.0" fill="rgb(225,154,21)" rx="2" ry="2" />
<text  x="47.75" y="1759.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.09%)</title><rect x="421.5" y="1621" width="1.1" height="15.0" fill="rgb(212,176,48)" rx="2" ry="2" />
<text  x="424.55" y="1631.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="677.7" y="1893" width="0.2" height="15.0" fill="rgb(242,89,12)" rx="2" ry="2" />
<text  x="680.70" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="133.7" y="1877" width="0.2" height="15.0" fill="rgb(210,209,14)" rx="2" ry="2" />
<text  x="136.70" y="1887.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (1 samples, 0.02%)</title><rect x="811.7" y="1749" width="0.2" height="15.0" fill="rgb(242,19,44)" rx="2" ry="2" />
<text  x="814.67" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::try_reap_events (1 samples, 0.02%)</title><rect x="1170.1" y="1877" width="0.2" height="15.0" fill="rgb(250,96,21)" rx="2" ry="2" />
<text  x="1173.11" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="57.4" y="1541" width="0.2" height="15.0" fill="rgb(249,176,31)" rx="2" ry="2" />
<text  x="60.43" y="1551.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1188.7" y="197" width="0.2" height="15.0" fill="rgb(226,169,44)" rx="2" ry="2" />
<text  x="1191.69" y="207.5" ></text>
</g>
<g >
<title>database::find_schema (9 samples, 0.17%)</title><rect x="824.4" y="1781" width="1.9" height="15.0" fill="rgb(227,28,44)" rx="2" ry="2" />
<text  x="827.35" y="1791.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="929.9" y="1797" width="0.2" height="15.0" fill="rgb(219,88,13)" rx="2" ry="2" />
<text  x="932.91" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="582.6" y="1685" width="0.2" height="15.0" fill="rgb(249,25,45)" rx="2" ry="2" />
<text  x="585.62" y="1695.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (6 samples, 0.11%)</title><rect x="724.7" y="1909" width="1.3" height="15.0" fill="rgb(220,174,18)" rx="2" ry="2" />
<text  x="727.69" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="62.9" y="1621" width="0.2" height="15.0" fill="rgb(252,42,41)" rx="2" ry="2" />
<text  x="65.89" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1137.8" y="1925" width="0.2" height="15.0" fill="rgb(222,196,45)" rx="2" ry="2" />
<text  x="1140.76" y="1935.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="793.5" y="1557" width="0.3" height="15.0" fill="rgb(219,151,51)" rx="2" ry="2" />
<text  x="796.53" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1589" width="0.3" height="15.0" fill="rgb(221,101,49)" rx="2" ry="2" />
<text  x="13.44" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="41.7" y="1717" width="0.4" height="15.0" fill="rgb(217,71,15)" rx="2" ry="2" />
<text  x="44.69" y="1727.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (5 samples, 0.09%)</title><rect x="1118.5" y="1621" width="1.1" height="15.0" fill="rgb(214,141,27)" rx="2" ry="2" />
<text  x="1121.53" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2 samples, 0.04%)</title><rect x="862.4" y="1797" width="0.4" height="15.0" fill="rgb(252,72,4)" rx="2" ry="2" />
<text  x="865.38" y="1807.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="820.6" y="1685" width="0.3" height="15.0" fill="rgb(245,181,13)" rx="2" ry="2" />
<text  x="823.64" y="1695.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::execute_direct (1 samples, 0.02%)</title><rect x="649.1" y="1925" width="0.2" height="15.0" fill="rgb(226,91,47)" rx="2" ry="2" />
<text  x="652.07" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="76.0" y="1765" width="0.2" height="15.0" fill="rgb(221,62,17)" rx="2" ry="2" />
<text  x="79.00" y="1775.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt;::allocator (1 samples, 0.02%)</title><rect x="65.1" y="1733" width="0.2" height="15.0" fill="rgb(224,217,29)" rx="2" ry="2" />
<text  x="68.08" y="1743.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="255.0" y="1589" width="0.2" height="15.0" fill="rgb(220,188,19)" rx="2" ry="2" />
<text  x="258.00" y="1599.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;frozen_mutation const&gt;::dispose (1 samples, 0.02%)</title><rect x="720.1" y="1877" width="0.2" height="15.0" fill="rgb(247,227,12)" rx="2" ry="2" />
<text  x="723.10" y="1887.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.3" y="213" width="0.2" height="15.0" fill="rgb(222,115,8)" rx="2" ry="2" />
<text  x="1191.25" y="223.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.04%)</title><rect x="1106.1" y="1845" width="0.4" height="15.0" fill="rgb(208,220,40)" rx="2" ry="2" />
<text  x="1109.07" y="1855.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_end (2 samples, 0.04%)</title><rect x="718.8" y="1877" width="0.4" height="15.0" fill="rgb(224,175,31)" rx="2" ry="2" />
<text  x="721.79" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="58.5" y="1509" width="0.2" height="15.0" fill="rgb(209,62,43)" rx="2" ry="2" />
<text  x="61.52" y="1519.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="542.8" y="1749" width="0.3" height="15.0" fill="rgb(226,26,12)" rx="2" ry="2" />
<text  x="545.85" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_table_statement::raw_statement, std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="66.4" y="1765" width="0.2" height="15.0" fill="rgb(241,16,11)" rx="2" ry="2" />
<text  x="69.39" y="1775.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="942.2" y="1733" width="0.2" height="15.0" fill="rgb(212,81,16)" rx="2" ry="2" />
<text  x="945.15" y="1743.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (1 samples, 0.02%)</title><rect x="868.7" y="1653" width="0.2" height="15.0" fill="rgb(216,143,51)" rx="2" ry="2" />
<text  x="871.72" y="1663.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="640.5" y="1909" width="0.3" height="15.0" fill="rgb(211,187,32)" rx="2" ry="2" />
<text  x="643.54" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="47.8" y="1701" width="0.4" height="15.0" fill="rgb(254,184,3)" rx="2" ry="2" />
<text  x="50.81" y="1711.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.02%)</title><rect x="19.0" y="1909" width="0.2" height="15.0" fill="rgb(237,213,25)" rx="2" ry="2" />
<text  x="21.96" y="1919.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="773" width="2.9" height="15.0" fill="rgb(228,94,33)" rx="2" ry="2" />
<text  x="1189.94" y="783.5" ></text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (1 samples, 0.02%)</title><rect x="100.3" y="1861" width="0.2" height="15.0" fill="rgb(249,164,22)" rx="2" ry="2" />
<text  x="103.26" y="1871.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.11%)</title><rect x="695.4" y="1877" width="1.3" height="15.0" fill="rgb(251,114,39)" rx="2" ry="2" />
<text  x="698.40" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="651.7" y="1749" width="0.2" height="15.0" fill="rgb(214,113,41)" rx="2" ry="2" />
<text  x="654.69" y="1759.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_M_head (1 samples, 0.02%)</title><rect x="61.8" y="1621" width="0.2" height="15.0" fill="rgb(216,209,19)" rx="2" ry="2" />
<text  x="64.80" y="1631.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="283.2" y="1653" width="0.2" height="15.0" fill="rgb(235,143,26)" rx="2" ry="2" />
<text  x="286.20" y="1663.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="152.7" y="1813" width="0.9" height="15.0" fill="rgb(210,222,17)" rx="2" ry="2" />
<text  x="155.72" y="1823.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="720.8" y="1925" width="0.2" height="15.0" fill="rgb(227,202,34)" rx="2" ry="2" />
<text  x="723.75" y="1935.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (1 samples, 0.02%)</title><rect x="1167.9" y="1861" width="0.2" height="15.0" fill="rgb(215,104,5)" rx="2" ry="2" />
<text  x="1170.93" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.02%)</title><rect x="39.5" y="1701" width="0.2" height="15.0" fill="rgb(249,30,28)" rx="2" ry="2" />
<text  x="42.51" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (10 samples, 0.19%)</title><rect x="821.5" y="1813" width="2.2" height="15.0" fill="rgb(244,107,27)" rx="2" ry="2" />
<text  x="824.51" y="1823.5" ></text>
</g>
<g >
<title>row::apply_monotonically (2 samples, 0.04%)</title><rect x="18.7" y="1957" width="0.5" height="15.0" fill="rgb(216,137,24)" rx="2" ry="2" />
<text  x="21.74" y="1967.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.02%)</title><rect x="526.9" y="1621" width="0.2" height="15.0" fill="rgb(228,80,38)" rx="2" ry="2" />
<text  x="529.89" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="22.9" y="1733" width="0.2" height="15.0" fill="rgb(233,100,2)" rx="2" ry="2" />
<text  x="25.89" y="1743.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (45 samples, 0.83%)</title><rect x="1124.2" y="1909" width="9.8" height="15.0" fill="rgb(244,21,5)" rx="2" ry="2" />
<text  x="1127.21" y="1919.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="551.6" y="1685" width="0.4" height="15.0" fill="rgb(209,37,31)" rx="2" ry="2" />
<text  x="554.59" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1162.2" y="1893" width="0.3" height="15.0" fill="rgb(249,159,13)" rx="2" ry="2" />
<text  x="1165.24" y="1903.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.02%)</title><rect x="99.6" y="1765" width="0.2" height="15.0" fill="rgb(244,108,50)" rx="2" ry="2" />
<text  x="102.61" y="1775.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (1 samples, 0.02%)</title><rect x="280.4" y="1637" width="0.2" height="15.0" fill="rgb(212,41,4)" rx="2" ry="2" />
<text  x="283.36" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (1 samples, 0.02%)</title><rect x="78.2" y="1845" width="0.2" height="15.0" fill="rgb(217,173,47)" rx="2" ry="2" />
<text  x="81.19" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="1027.0" y="1573" width="0.2" height="15.0" fill="rgb(234,49,45)" rx="2" ry="2" />
<text  x="1029.95" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="1187.2" y="181" width="0.2" height="15.0" fill="rgb(213,190,21)" rx="2" ry="2" />
<text  x="1190.16" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (2 samples, 0.04%)</title><rect x="1188.9" y="117" width="0.4" height="15.0" fill="rgb(225,97,3)" rx="2" ry="2" />
<text  x="1191.91" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (1 samples, 0.02%)</title><rect x="73.8" y="1685" width="0.2" height="15.0" fill="rgb(239,20,45)" rx="2" ry="2" />
<text  x="76.82" y="1695.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1054.1" y="1749" width="0.2" height="15.0" fill="rgb(245,206,20)" rx="2" ry="2" />
<text  x="1057.06" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1187.6" y="261" width="0.2" height="15.0" fill="rgb(206,16,46)" rx="2" ry="2" />
<text  x="1190.60" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.19%)</title><rect x="963.6" y="1781" width="2.2" height="15.0" fill="rgb(228,84,5)" rx="2" ry="2" />
<text  x="966.57" y="1791.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="62.2" y="1701" width="0.3" height="15.0" fill="rgb(225,38,26)" rx="2" ry="2" />
<text  x="65.24" y="1711.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="862.4" y="1765" width="0.2" height="15.0" fill="rgb(251,136,11)" rx="2" ry="2" />
<text  x="865.38" y="1775.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (1 samples, 0.02%)</title><rect x="179.6" y="1701" width="0.2" height="15.0" fill="rgb(236,128,18)" rx="2" ry="2" />
<text  x="182.60" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::constants::setter&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="652.1" y="1877" width="0.2" height="15.0" fill="rgb(216,90,48)" rx="2" ry="2" />
<text  x="655.13" y="1887.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (9 samples, 0.17%)</title><rect x="278.4" y="1621" width="2.0" height="15.0" fill="rgb(214,39,45)" rx="2" ry="2" />
<text  x="281.39" y="1631.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (2 samples, 0.04%)</title><rect x="862.4" y="1909" width="0.4" height="15.0" fill="rgb(251,72,20)" rx="2" ry="2" />
<text  x="865.38" y="1919.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="45.2" y="1573" width="0.2" height="15.0" fill="rgb(214,66,39)" rx="2" ry="2" />
<text  x="48.19" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="310.3" y="1717" width="0.2" height="15.0" fill="rgb(237,71,43)" rx="2" ry="2" />
<text  x="313.30" y="1727.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="702.2" y="1877" width="0.2" height="15.0" fill="rgb(222,46,40)" rx="2" ry="2" />
<text  x="705.18" y="1887.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (1 samples, 0.02%)</title><rect x="19.0" y="1893" width="0.2" height="15.0" fill="rgb(240,43,43)" rx="2" ry="2" />
<text  x="21.96" y="1903.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (8 samples, 0.15%)</title><rect x="867.4" y="1733" width="1.8" height="15.0" fill="rgb(213,29,48)" rx="2" ry="2" />
<text  x="870.41" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="62.2" y="1621" width="0.3" height="15.0" fill="rgb(242,78,25)" rx="2" ry="2" />
<text  x="65.24" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1461" width="0.3" height="15.0" fill="rgb(217,72,42)" rx="2" ry="2" />
<text  x="13.44" y="1471.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_lower_bound (1 samples, 0.02%)</title><rect x="40.4" y="1701" width="0.2" height="15.0" fill="rgb(216,150,20)" rx="2" ry="2" />
<text  x="43.38" y="1711.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="383.7" y="1589" width="0.5" height="15.0" fill="rgb(228,220,47)" rx="2" ry="2" />
<text  x="386.74" y="1599.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::populate_slot (1 samples, 0.02%)</title><rect x="100.3" y="1765" width="0.2" height="15.0" fill="rgb(240,162,25)" rx="2" ry="2" />
<text  x="103.26" y="1775.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (15 samples, 0.28%)</title><rect x="649.3" y="1925" width="3.3" height="15.0" fill="rgb(251,80,32)" rx="2" ry="2" />
<text  x="652.29" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="50.7" y="1717" width="0.4" height="15.0" fill="rgb(230,44,10)" rx="2" ry="2" />
<text  x="53.65" y="1727.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="932.3" y="1765" width="0.2" height="15.0" fill="rgb(207,196,12)" rx="2" ry="2" />
<text  x="935.32" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="103.1" y="1909" width="0.2" height="15.0" fill="rgb(226,177,31)" rx="2" ry="2" />
<text  x="106.11" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="24.9" y="1701" width="0.2" height="15.0" fill="rgb(243,30,39)" rx="2" ry="2" />
<text  x="27.86" y="1711.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="908.7" y="1717" width="0.7" height="15.0" fill="rgb(224,109,43)" rx="2" ry="2" />
<text  x="911.71" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (3 samples, 0.06%)</title><rect x="846.6" y="1845" width="0.7" height="15.0" fill="rgb(228,19,51)" rx="2" ry="2" />
<text  x="849.64" y="1855.5" ></text>
</g>
<g >
<title>database::find_uuid (13 samples, 0.24%)</title><rect x="826.3" y="1781" width="2.9" height="15.0" fill="rgb(208,97,47)" rx="2" ry="2" />
<text  x="829.32" y="1791.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (1 samples, 0.02%)</title><rect x="1188.9" y="37" width="0.2" height="15.0" fill="rgb(233,46,16)" rx="2" ry="2" />
<text  x="1191.91" y="47.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::RuleReturnValue (1 samples, 0.02%)</title><rect x="61.6" y="1749" width="0.2" height="15.0" fill="rgb(239,147,1)" rx="2" ry="2" />
<text  x="64.58" y="1759.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (1 samples, 0.02%)</title><rect x="999.6" y="1685" width="0.3" height="15.0" fill="rgb(248,60,4)" rx="2" ry="2" />
<text  x="1002.64" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="317.7" y="1781" width="0.5" height="15.0" fill="rgb(222,112,22)" rx="2" ry="2" />
<text  x="320.73" y="1791.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (2 samples, 0.04%)</title><rect x="754.2" y="1749" width="0.4" height="15.0" fill="rgb(214,6,25)" rx="2" ry="2" />
<text  x="757.19" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1957" width="0.3" height="15.0" fill="rgb(224,81,30)" rx="2" ry="2" />
<text  x="13.44" y="1967.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="1115.9" y="1845" width="0.2" height="15.0" fill="rgb(223,97,39)" rx="2" ry="2" />
<text  x="1118.91" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_stopIndex (1 samples, 0.02%)</title><rect x="24.4" y="1749" width="0.2" height="15.0" fill="rgb(223,59,2)" rx="2" ry="2" />
<text  x="27.42" y="1759.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="862.4" y="1861" width="0.4" height="15.0" fill="rgb(235,31,33)" rx="2" ry="2" />
<text  x="865.38" y="1871.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="99.4" y="1749" width="0.2" height="15.0" fill="rgb(251,114,47)" rx="2" ry="2" />
<text  x="102.39" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="81.3" y="1941" width="0.2" height="15.0" fill="rgb(253,176,43)" rx="2" ry="2" />
<text  x="84.25" y="1951.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="846.2" y="1845" width="0.2" height="15.0" fill="rgb(231,73,13)" rx="2" ry="2" />
<text  x="849.21" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1973" width="0.3" height="15.0" fill="rgb(239,92,13)" rx="2" ry="2" />
<text  x="13.44" y="1983.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1187.2" y="309" width="0.2" height="15.0" fill="rgb(222,13,4)" rx="2" ry="2" />
<text  x="1190.16" y="319.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="624.6" y="1797" width="0.9" height="15.0" fill="rgb(240,12,17)" rx="2" ry="2" />
<text  x="627.59" y="1807.5" ></text>
</g>
<g >
<title>cql3::prepare_context::get_partition_key_bind_indexes (2 samples, 0.04%)</title><rect x="69.7" y="1877" width="0.4" height="15.0" fill="rgb(226,44,23)" rx="2" ry="2" />
<text  x="72.67" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="47.6" y="1621" width="0.2" height="15.0" fill="rgb(213,162,45)" rx="2" ry="2" />
<text  x="50.59" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="28.4" y="1605" width="0.2" height="15.0" fill="rgb(235,24,16)" rx="2" ry="2" />
<text  x="31.36" y="1615.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (1 samples, 0.02%)</title><rect x="81.3" y="1797" width="0.2" height="15.0" fill="rgb(208,60,54)" rx="2" ry="2" />
<text  x="84.25" y="1807.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="55.2" y="1429" width="0.3" height="15.0" fill="rgb(249,168,12)" rx="2" ry="2" />
<text  x="58.24" y="1439.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="768.4" y="1749" width="0.4" height="15.0" fill="rgb(244,199,15)" rx="2" ry="2" />
<text  x="771.40" y="1759.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="1041.8" y="1637" width="0.2" height="15.0" fill="rgb(214,29,14)" rx="2" ry="2" />
<text  x="1044.82" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="1186.9" y="229" width="0.3" height="15.0" fill="rgb(218,54,34)" rx="2" ry="2" />
<text  x="1189.94" y="239.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (11 samples, 0.20%)</title><rect x="867.4" y="1765" width="2.4" height="15.0" fill="rgb(223,64,52)" rx="2" ry="2" />
<text  x="870.41" y="1775.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (1 samples, 0.02%)</title><rect x="754.8" y="1781" width="0.3" height="15.0" fill="rgb(219,169,51)" rx="2" ry="2" />
<text  x="757.85" y="1791.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (1 samples, 0.02%)</title><rect x="720.3" y="1813" width="0.2" height="15.0" fill="rgb(227,119,26)" rx="2" ry="2" />
<text  x="723.32" y="1823.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1189.6" y="69" width="0.2" height="15.0" fill="rgb(250,76,27)" rx="2" ry="2" />
<text  x="1192.56" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="65.1" y="1765" width="0.2" height="15.0" fill="rgb(242,185,19)" rx="2" ry="2" />
<text  x="68.08" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="1119.8" y="1605" width="0.3" height="15.0" fill="rgb(205,149,27)" rx="2" ry="2" />
<text  x="1122.84" y="1615.5" ></text>
</g>
<g >
<title>clustering_key_prefix::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="867.2" y="1749" width="0.2" height="15.0" fill="rgb(229,53,16)" rx="2" ry="2" />
<text  x="870.19" y="1759.5" ></text>
</g>
<g >
<title>schema::cdc_options (1 samples, 0.02%)</title><rect x="864.6" y="1765" width="0.2" height="15.0" fill="rgb(240,12,47)" rx="2" ry="2" />
<text  x="867.57" y="1775.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="99.6" y="1749" width="0.2" height="15.0" fill="rgb(245,116,28)" rx="2" ry="2" />
<text  x="102.61" y="1759.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (2 samples, 0.04%)</title><rect x="17.9" y="1989" width="0.4" height="15.0" fill="rgb(225,203,1)" rx="2" ry="2" />
<text  x="20.87" y="1999.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="615.8" y="1861" width="0.3" height="15.0" fill="rgb(254,197,2)" rx="2" ry="2" />
<text  x="618.85" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="62.0" y="1685" width="0.2" height="15.0" fill="rgb(243,91,19)" rx="2" ry="2" />
<text  x="65.02" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1 samples, 0.02%)</title><rect x="101.1" y="1765" width="0.3" height="15.0" fill="rgb(230,31,4)" rx="2" ry="2" />
<text  x="104.14" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="1187.4" y="69" width="0.2" height="15.0" fill="rgb(230,84,24)" rx="2" ry="2" />
<text  x="1190.38" y="79.5" ></text>
</g>
<g >
<title>tracing::add_table_name (3 samples, 0.06%)</title><rect x="1116.3" y="1845" width="0.7" height="15.0" fill="rgb(208,9,40)" rx="2" ry="2" />
<text  x="1119.35" y="1855.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="62.9" y="1717" width="0.2" height="15.0" fill="rgb(233,118,18)" rx="2" ry="2" />
<text  x="65.89" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="264.2" y="1621" width="0.2" height="15.0" fill="rgb(230,55,41)" rx="2" ry="2" />
<text  x="267.18" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="947.0" y="1781" width="0.2" height="15.0" fill="rgb(231,210,42)" rx="2" ry="2" />
<text  x="949.96" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="517" width="0.3" height="15.0" fill="rgb(253,218,40)" rx="2" ry="2" />
<text  x="13.44" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="43.2" y="1701" width="0.2" height="15.0" fill="rgb(233,13,15)" rx="2" ry="2" />
<text  x="46.22" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="59.2" y="1701" width="0.2" height="15.0" fill="rgb(220,80,11)" rx="2" ry="2" />
<text  x="62.18" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (8 samples, 0.15%)</title><rect x="54.1" y="1605" width="1.8" height="15.0" fill="rgb(218,214,6)" rx="2" ry="2" />
<text  x="57.15" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (5 samples, 0.09%)</title><rect x="253.3" y="1589" width="1.0" height="15.0" fill="rgb(228,134,21)" rx="2" ry="2" />
<text  x="256.26" y="1599.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (22 samples, 0.41%)</title><rect x="275.5" y="1637" width="4.9" height="15.0" fill="rgb(250,2,21)" rx="2" ry="2" />
<text  x="278.55" y="1647.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (2 samples, 0.04%)</title><rect x="1084.9" y="1765" width="0.4" height="15.0" fill="rgb(252,158,31)" rx="2" ry="2" />
<text  x="1087.87" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.09%)</title><rect x="45.6" y="1685" width="1.1" height="15.0" fill="rgb(250,225,16)" rx="2" ry="2" />
<text  x="48.63" y="1695.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (1 samples, 0.02%)</title><rect x="915.1" y="1813" width="0.2" height="15.0" fill="rgb(209,62,43)" rx="2" ry="2" />
<text  x="918.05" y="1823.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (3 samples, 0.06%)</title><rect x="1065.2" y="1749" width="0.7" height="15.0" fill="rgb(238,136,5)" rx="2" ry="2" />
<text  x="1068.20" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="482.3" y="1717" width="0.2" height="15.0" fill="rgb(211,94,40)" rx="2" ry="2" />
<text  x="485.31" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="862.4" y="1781" width="0.2" height="15.0" fill="rgb(220,213,5)" rx="2" ry="2" />
<text  x="865.38" y="1791.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="1127.7" y="1573" width="0.2" height="15.0" fill="rgb(248,125,1)" rx="2" ry="2" />
<text  x="1130.71" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (21 samples, 0.39%)</title><rect x="259.8" y="1653" width="4.6" height="15.0" fill="rgb(240,6,26)" rx="2" ry="2" />
<text  x="262.81" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="1111.8" y="1797" width="0.4" height="15.0" fill="rgb(209,207,2)" rx="2" ry="2" />
<text  x="1114.76" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (9 samples, 0.17%)</title><rect x="624.2" y="1829" width="1.9" height="15.0" fill="rgb(228,72,9)" rx="2" ry="2" />
<text  x="627.15" y="1839.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="828.1" y="1701" width="0.2" height="15.0" fill="rgb(244,122,8)" rx="2" ry="2" />
<text  x="831.07" y="1711.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="65.1" y="1749" width="0.2" height="15.0" fill="rgb(228,83,10)" rx="2" ry="2" />
<text  x="68.08" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="258.7" y="1573" width="0.2" height="15.0" fill="rgb(217,206,18)" rx="2" ry="2" />
<text  x="261.72" y="1583.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (7 samples, 0.13%)</title><rect x="1156.3" y="1893" width="1.6" height="15.0" fill="rgb(233,165,40)" rx="2" ry="2" />
<text  x="1159.34" y="1903.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (7 samples, 0.13%)</title><rect x="712.9" y="1861" width="1.5" height="15.0" fill="rgb(246,83,48)" rx="2" ry="2" />
<text  x="715.89" y="1871.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="63.5" y="1685" width="0.3" height="15.0" fill="rgb(211,51,34)" rx="2" ry="2" />
<text  x="66.55" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (1 samples, 0.02%)</title><rect x="696.5" y="1717" width="0.2" height="15.0" fill="rgb(244,57,39)" rx="2" ry="2" />
<text  x="699.49" y="1727.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1163.3" y="1877" width="0.3" height="15.0" fill="rgb(246,27,21)" rx="2" ry="2" />
<text  x="1166.34" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="671.6" y="1909" width="0.2" height="15.0" fill="rgb(254,46,51)" rx="2" ry="2" />
<text  x="674.58" y="1919.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::restrictions::single_column_restriction, false&gt;::make&lt;column_definition const&amp;&gt; (2 samples, 0.04%)</title><rect x="72.9" y="1781" width="0.5" height="15.0" fill="rgb(239,95,37)" rx="2" ry="2" />
<text  x="75.94" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="101.1" y="1797" width="0.3" height="15.0" fill="rgb(247,143,36)" rx="2" ry="2" />
<text  x="104.14" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (1 samples, 0.02%)</title><rect x="865.9" y="1685" width="0.2" height="15.0" fill="rgb(238,144,28)" rx="2" ry="2" />
<text  x="868.88" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.15%)</title><rect x="806.0" y="1685" width="1.7" height="15.0" fill="rgb(213,176,8)" rx="2" ry="2" />
<text  x="808.99" y="1695.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="294.8" y="1701" width="0.2" height="15.0" fill="rgb(219,229,28)" rx="2" ry="2" />
<text  x="297.78" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (77 samples, 1.43%)</title><rect x="44.1" y="1781" width="16.8" height="15.0" fill="rgb(218,30,7)" rx="2" ry="2" />
<text  x="47.10" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="43.9" y="1557" width="0.2" height="15.0" fill="rgb(239,225,18)" rx="2" ry="2" />
<text  x="46.88" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="678.1" y="1909" width="0.7" height="15.0" fill="rgb(213,168,27)" rx="2" ry="2" />
<text  x="681.13" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::~_Scoped_node (1 samples, 0.02%)</title><rect x="1152.0" y="1877" width="0.2" height="15.0" fill="rgb(230,116,40)" rx="2" ry="2" />
<text  x="1154.97" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (3 samples, 0.06%)</title><rect x="106.6" y="1893" width="0.7" height="15.0" fill="rgb(225,104,8)" rx="2" ry="2" />
<text  x="109.60" y="1903.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="1129.5" y="1589" width="0.2" height="15.0" fill="rgb(243,207,20)" rx="2" ry="2" />
<text  x="1132.46" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="761.8" y="1813" width="1.6" height="15.0" fill="rgb(231,192,11)" rx="2" ry="2" />
<text  x="764.84" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="741" width="2.9" height="15.0" fill="rgb(248,148,13)" rx="2" ry="2" />
<text  x="1189.94" y="751.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1187.2" y="405" width="0.2" height="15.0" fill="rgb(223,168,46)" rx="2" ry="2" />
<text  x="1190.16" y="415.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="24.9" y="1653" width="0.2" height="15.0" fill="rgb(224,224,24)" rx="2" ry="2" />
<text  x="27.86" y="1663.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.02%)</title><rect x="22.9" y="1797" width="0.2" height="15.0" fill="rgb(218,104,42)" rx="2" ry="2" />
<text  x="25.89" y="1807.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (1 samples, 0.02%)</title><rect x="811.0" y="1733" width="0.2" height="15.0" fill="rgb(238,33,46)" rx="2" ry="2" />
<text  x="814.02" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="57.9" y="1541" width="0.2" height="15.0" fill="rgb(211,72,3)" rx="2" ry="2" />
<text  x="60.86" y="1551.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.20%)</title><rect x="954.4" y="1829" width="2.4" height="15.0" fill="rgb(225,126,22)" rx="2" ry="2" />
<text  x="957.39" y="1839.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.02%)</title><rect x="79.5" y="1925" width="0.2" height="15.0" fill="rgb(250,167,19)" rx="2" ry="2" />
<text  x="82.50" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="94.6" y="1861" width="0.2" height="15.0" fill="rgb(253,65,35)" rx="2" ry="2" />
<text  x="97.58" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_line (1 samples, 0.02%)</title><rect x="31.9" y="1669" width="0.2" height="15.0" fill="rgb(244,48,27)" rx="2" ry="2" />
<text  x="34.86" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="43.9" y="1685" width="0.2" height="15.0" fill="rgb(210,158,18)" rx="2" ry="2" />
<text  x="46.88" y="1695.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::components (1 samples, 0.02%)</title><rect x="1131.2" y="1557" width="0.2" height="15.0" fill="rgb(231,172,43)" rx="2" ry="2" />
<text  x="1134.21" y="1567.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (7 samples, 0.13%)</title><rect x="735.0" y="1829" width="1.5" height="15.0" fill="rgb(254,4,12)" rx="2" ry="2" />
<text  x="737.96" y="1839.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (6 samples, 0.11%)</title><rect x="490.6" y="1717" width="1.3" height="15.0" fill="rgb(254,91,18)" rx="2" ry="2" />
<text  x="493.61" y="1727.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="1041.6" y="1669" width="0.2" height="15.0" fill="rgb(212,45,26)" rx="2" ry="2" />
<text  x="1044.60" y="1679.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="189.7" y="1701" width="0.2" height="15.0" fill="rgb(254,203,45)" rx="2" ry="2" />
<text  x="192.66" y="1711.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (1 samples, 0.02%)</title><rect x="921.8" y="1765" width="0.2" height="15.0" fill="rgb(236,153,50)" rx="2" ry="2" />
<text  x="924.83" y="1775.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (7 samples, 0.13%)</title><rect x="779.1" y="1749" width="1.5" height="15.0" fill="rgb(229,98,52)" rx="2" ry="2" />
<text  x="782.11" y="1759.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (542 samples, 10.04%)</title><rect x="732.8" y="1877" width="118.4" height="15.0" fill="rgb(249,108,17)" rx="2" ry="2" />
<text  x="735.77" y="1887.5" >single_node_cq..</text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="271.8" y="1621" width="0.3" height="15.0" fill="rgb(231,102,40)" rx="2" ry="2" />
<text  x="274.83" y="1631.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (1 samples, 0.02%)</title><rect x="722.7" y="1925" width="0.2" height="15.0" fill="rgb(208,157,3)" rx="2" ry="2" />
<text  x="725.72" y="1935.5" ></text>
</g>
<g >
<title>database::find_column_family (5 samples, 0.09%)</title><rect x="1016.7" y="1669" width="1.1" height="15.0" fill="rgb(247,89,20)" rx="2" ry="2" />
<text  x="1019.68" y="1679.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1188.7" y="101" width="0.2" height="15.0" fill="rgb(214,151,18)" rx="2" ry="2" />
<text  x="1191.69" y="111.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="259.4" y="1621" width="0.2" height="15.0" fill="rgb(228,150,13)" rx="2" ry="2" />
<text  x="262.38" y="1631.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="1186.9" y="85" width="0.3" height="15.0" fill="rgb(250,203,9)" rx="2" ry="2" />
<text  x="1189.94" y="95.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (19 samples, 0.35%)</title><rect x="1048.6" y="1749" width="4.1" height="15.0" fill="rgb(233,120,4)" rx="2" ry="2" />
<text  x="1051.59" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (4 samples, 0.07%)</title><rect x="122.3" y="1813" width="0.9" height="15.0" fill="rgb(232,208,8)" rx="2" ry="2" />
<text  x="125.34" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.06%)</title><rect x="41.5" y="1781" width="0.6" height="15.0" fill="rgb(240,62,47)" rx="2" ry="2" />
<text  x="44.47" y="1791.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (40 samples, 0.74%)</title><rect x="675.3" y="1925" width="8.7" height="15.0" fill="rgb(234,2,37)" rx="2" ry="2" />
<text  x="678.29" y="1935.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (12 samples, 0.22%)</title><rect x="727.5" y="1861" width="2.7" height="15.0" fill="rgb(224,82,42)" rx="2" ry="2" />
<text  x="730.53" y="1871.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="66.4" y="1717" width="0.2" height="15.0" fill="rgb(233,130,5)" rx="2" ry="2" />
<text  x="69.39" y="1727.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="189.2" y="1701" width="0.2" height="15.0" fill="rgb(224,53,41)" rx="2" ry="2" />
<text  x="192.22" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="62.9" y="1605" width="0.2" height="15.0" fill="rgb(246,222,18)" rx="2" ry="2" />
<text  x="65.89" y="1615.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (12 samples, 0.22%)</title><rect x="727.5" y="1877" width="2.7" height="15.0" fill="rgb(252,29,51)" rx="2" ry="2" />
<text  x="730.53" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (2 samples, 0.04%)</title><rect x="647.8" y="1909" width="0.4" height="15.0" fill="rgb(228,223,28)" rx="2" ry="2" />
<text  x="650.76" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.04%)</title><rect x="47.8" y="1717" width="0.4" height="15.0" fill="rgb(220,157,31)" rx="2" ry="2" />
<text  x="50.81" y="1727.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (1 samples, 0.02%)</title><rect x="40.6" y="1701" width="0.2" height="15.0" fill="rgb(211,43,22)" rx="2" ry="2" />
<text  x="43.60" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="57.9" y="1557" width="0.2" height="15.0" fill="rgb(245,88,0)" rx="2" ry="2" />
<text  x="60.86" y="1567.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (4 samples, 0.07%)</title><rect x="768.4" y="1765" width="0.9" height="15.0" fill="rgb(213,102,21)" rx="2" ry="2" />
<text  x="771.40" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1026.1" y="1557" width="0.2" height="15.0" fill="rgb(248,16,2)" rx="2" ry="2" />
<text  x="1029.08" y="1567.5" ></text>
</g>
<g >
<title>db::validate_for_read (1 samples, 0.02%)</title><rect x="1104.1" y="1845" width="0.2" height="15.0" fill="rgb(246,26,4)" rx="2" ry="2" />
<text  x="1107.11" y="1855.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (1 samples, 0.02%)</title><rect x="1188.3" y="37" width="0.2" height="15.0" fill="rgb(214,204,27)" rx="2" ry="2" />
<text  x="1191.25" y="47.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="440.3" y="1653" width="0.3" height="15.0" fill="rgb(228,87,31)" rx="2" ry="2" />
<text  x="443.34" y="1663.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="1054.3" y="1765" width="0.4" height="15.0" fill="rgb(241,124,3)" rx="2" ry="2" />
<text  x="1057.27" y="1775.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.02%)</title><rect x="819.1" y="1733" width="0.2" height="15.0" fill="rgb(230,221,47)" rx="2" ry="2" />
<text  x="822.11" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.13%)</title><rect x="982.2" y="1701" width="1.5" height="15.0" fill="rgb(231,93,53)" rx="2" ry="2" />
<text  x="985.15" y="1711.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.04%)</title><rect x="19.8" y="1909" width="0.5" height="15.0" fill="rgb(234,109,20)" rx="2" ry="2" />
<text  x="22.84" y="1919.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (4 samples, 0.07%)</title><rect x="395.1" y="1589" width="0.9" height="15.0" fill="rgb(220,16,10)" rx="2" ry="2" />
<text  x="398.10" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="658.9" y="1845" width="0.2" height="15.0" fill="rgb(234,79,30)" rx="2" ry="2" />
<text  x="661.90" y="1855.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (4 samples, 0.07%)</title><rect x="781.5" y="1733" width="0.9" height="15.0" fill="rgb(235,29,17)" rx="2" ry="2" />
<text  x="784.51" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="45.4" y="1605" width="0.2" height="15.0" fill="rgb(247,146,6)" rx="2" ry="2" />
<text  x="48.41" y="1615.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (2 samples, 0.04%)</title><rect x="788.9" y="1685" width="0.5" height="15.0" fill="rgb(246,150,33)" rx="2" ry="2" />
<text  x="791.94" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="43.2" y="1669" width="0.2" height="15.0" fill="rgb(252,158,33)" rx="2" ry="2" />
<text  x="46.22" y="1679.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1189.3" y="133" width="0.3" height="15.0" fill="rgb(253,24,53)" rx="2" ry="2" />
<text  x="1192.34" y="143.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="677" width="2.9" height="15.0" fill="rgb(219,203,11)" rx="2" ry="2" />
<text  x="1189.94" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::stats (3 samples, 0.06%)</title><rect x="513.3" y="1733" width="0.7" height="15.0" fill="rgb(250,88,27)" rx="2" ry="2" />
<text  x="516.34" y="1743.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (1 samples, 0.02%)</title><rect x="1170.8" y="1861" width="0.2" height="15.0" fill="rgb(213,206,30)" rx="2" ry="2" />
<text  x="1173.77" y="1871.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::make_empty (1 samples, 0.02%)</title><rect x="867.2" y="1765" width="0.2" height="15.0" fill="rgb(227,220,45)" rx="2" ry="2" />
<text  x="870.19" y="1775.5" ></text>
</g>
<g >
<title>service::storage_service::prepare_to_join (1 samples, 0.02%)</title><rect x="19.6" y="1893" width="0.2" height="15.0" fill="rgb(238,168,22)" rx="2" ry="2" />
<text  x="22.62" y="1903.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (2 samples, 0.04%)</title><rect x="928.8" y="1781" width="0.5" height="15.0" fill="rgb(218,144,41)" rx="2" ry="2" />
<text  x="931.82" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="566.7" y="1813" width="1.1" height="15.0" fill="rgb(243,186,51)" rx="2" ry="2" />
<text  x="569.67" y="1823.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="487.1" y="1749" width="0.2" height="15.0" fill="rgb(227,136,25)" rx="2" ry="2" />
<text  x="490.11" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="18.1" y="1909" width="0.2" height="15.0" fill="rgb(221,41,12)" rx="2" ry="2" />
<text  x="21.09" y="1919.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (1 samples, 0.02%)</title><rect x="209.5" y="1621" width="0.3" height="15.0" fill="rgb(221,197,22)" rx="2" ry="2" />
<text  x="212.54" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="1167.9" y="1765" width="0.2" height="15.0" fill="rgb(211,166,15)" rx="2" ry="2" />
<text  x="1170.93" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="998.5" y="1653" width="1.1" height="15.0" fill="rgb(216,40,17)" rx="2" ry="2" />
<text  x="1001.54" y="1663.5" ></text>
</g>
<g >
<title>TLS init function for seastar::testing::local_random_engine (1 samples, 0.02%)</title><rect x="859.1" y="1877" width="0.2" height="15.0" fill="rgb(234,203,34)" rx="2" ry="2" />
<text  x="862.10" y="1887.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (15 samples, 0.28%)</title><rect x="841.0" y="1829" width="3.2" height="15.0" fill="rgb(249,51,20)" rx="2" ry="2" />
<text  x="843.96" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="670.3" y="1893" width="0.2" height="15.0" fill="rgb(222,37,38)" rx="2" ry="2" />
<text  x="673.27" y="1903.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="594.9" y="1781" width="0.2" height="15.0" fill="rgb(231,151,4)" rx="2" ry="2" />
<text  x="597.86" y="1791.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (4 samples, 0.07%)</title><rect x="577.6" y="1701" width="0.9" height="15.0" fill="rgb(213,88,20)" rx="2" ry="2" />
<text  x="580.60" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (8 samples, 0.15%)</title><rect x="54.1" y="1541" width="1.8" height="15.0" fill="rgb(252,228,47)" rx="2" ry="2" />
<text  x="57.15" y="1551.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="695.4" y="1781" width="0.2" height="15.0" fill="rgb(247,12,5)" rx="2" ry="2" />
<text  x="698.40" y="1791.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (1 samples, 0.02%)</title><rect x="81.9" y="2037" width="0.2" height="15.0" fill="rgb(216,76,29)" rx="2" ry="2" />
<text  x="84.91" y="2047.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (7 samples, 0.13%)</title><rect x="57.2" y="1685" width="1.5" height="15.0" fill="rgb(229,132,8)" rx="2" ry="2" />
<text  x="60.21" y="1695.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (20 samples, 0.37%)</title><rect x="987.4" y="1749" width="4.4" height="15.0" fill="rgb(222,219,39)" rx="2" ry="2" />
<text  x="990.40" y="1759.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (1 samples, 0.02%)</title><rect x="267.9" y="1669" width="0.2" height="15.0" fill="rgb(211,95,29)" rx="2" ry="2" />
<text  x="270.90" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (6 samples, 0.11%)</title><rect x="624.4" y="1813" width="1.3" height="15.0" fill="rgb(215,24,28)" rx="2" ry="2" />
<text  x="627.37" y="1823.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (1 samples, 0.02%)</title><rect x="73.8" y="1701" width="0.2" height="15.0" fill="rgb(250,89,54)" rx="2" ry="2" />
<text  x="76.82" y="1711.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="10.4" y="293" width="0.3" height="15.0" fill="rgb(249,133,18)" rx="2" ry="2" />
<text  x="13.44" y="303.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="1186.9" y="37" width="0.3" height="15.0" fill="rgb(213,159,10)" rx="2" ry="2" />
<text  x="1189.94" y="47.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="361.4" y="1605" width="0.3" height="15.0" fill="rgb(252,10,13)" rx="2" ry="2" />
<text  x="364.44" y="1615.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="53.3" y="1525" width="0.2" height="15.0" fill="rgb(237,23,33)" rx="2" ry="2" />
<text  x="56.27" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1187.8" y="37" width="0.2" height="15.0" fill="rgb(240,152,30)" rx="2" ry="2" />
<text  x="1190.81" y="47.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (3 samples, 0.06%)</title><rect x="959.4" y="1813" width="0.7" height="15.0" fill="rgb(227,174,27)" rx="2" ry="2" />
<text  x="962.42" y="1823.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="78.8" y="1797" width="0.3" height="15.0" fill="rgb(248,70,0)" rx="2" ry="2" />
<text  x="81.85" y="1807.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (1 samples, 0.02%)</title><rect x="1132.3" y="1573" width="0.2" height="15.0" fill="rgb(230,178,4)" rx="2" ry="2" />
<text  x="1135.30" y="1583.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (4 samples, 0.07%)</title><rect x="912.6" y="1749" width="0.9" height="15.0" fill="rgb(206,64,14)" rx="2" ry="2" />
<text  x="915.65" y="1759.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="934.5" y="1813" width="0.2" height="15.0" fill="rgb(234,122,15)" rx="2" ry="2" />
<text  x="937.50" y="1823.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (83 samples, 1.54%)</title><rect x="401.7" y="1621" width="18.1" height="15.0" fill="rgb(237,102,23)" rx="2" ry="2" />
<text  x="404.66" y="1631.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="934.5" y="1797" width="0.2" height="15.0" fill="rgb(219,222,1)" rx="2" ry="2" />
<text  x="937.50" y="1807.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="869.4" y="1653" width="0.2" height="15.0" fill="rgb(207,114,39)" rx="2" ry="2" />
<text  x="872.37" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (2 samples, 0.04%)</title><rect x="902.2" y="1701" width="0.4" height="15.0" fill="rgb(219,177,13)" rx="2" ry="2" />
<text  x="905.16" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="62.0" y="1669" width="0.2" height="15.0" fill="rgb(223,115,46)" rx="2" ry="2" />
<text  x="65.02" y="1679.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.02%)</title><rect x="257.0" y="1573" width="0.2" height="15.0" fill="rgb(253,201,34)" rx="2" ry="2" />
<text  x="259.97" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="444.5" y="1749" width="0.4" height="15.0" fill="rgb(242,194,0)" rx="2" ry="2" />
<text  x="447.50" y="1759.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="695.4" y="1797" width="0.2" height="15.0" fill="rgb(237,55,48)" rx="2" ry="2" />
<text  x="698.40" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_timeout (1 samples, 0.02%)</title><rect x="870.0" y="1845" width="0.2" height="15.0" fill="rgb(250,225,7)" rx="2" ry="2" />
<text  x="873.03" y="1855.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (1 samples, 0.02%)</title><rect x="1188.3" y="165" width="0.2" height="15.0" fill="rgb(222,23,31)" rx="2" ry="2" />
<text  x="1191.25" y="175.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (12 samples, 0.22%)</title><rect x="301.8" y="1749" width="2.6" height="15.0" fill="rgb(230,209,26)" rx="2" ry="2" />
<text  x="304.78" y="1759.5" ></text>
</g>
<g >
<title>ser::idl::serializers::internal::vector_serializer&lt;std::vector&lt;ser::range_tombstone_view, std::allocator&lt;ser::range_tombstone_view&gt; &gt; &gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1121.8" y="1637" width="0.2" height="15.0" fill="rgb(235,31,42)" rx="2" ry="2" />
<text  x="1124.81" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (1 samples, 0.02%)</title><rect x="722.9" y="1925" width="0.3" height="15.0" fill="rgb(239,184,36)" rx="2" ry="2" />
<text  x="725.94" y="1935.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (2 samples, 0.04%)</title><rect x="117.7" y="1861" width="0.5" height="15.0" fill="rgb(234,127,45)" rx="2" ry="2" />
<text  x="120.75" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="10.7" y="2005" width="0.2" height="15.0" fill="rgb(223,223,10)" rx="2" ry="2" />
<text  x="13.66" y="2015.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (1 samples, 0.02%)</title><rect x="803.4" y="1525" width="0.2" height="15.0" fill="rgb(249,200,15)" rx="2" ry="2" />
<text  x="806.37" y="1535.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (10 samples, 0.19%)</title><rect x="1110.2" y="1829" width="2.2" height="15.0" fill="rgb(212,75,13)" rx="2" ry="2" />
<text  x="1113.23" y="1839.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="779.3" y="1733" width="0.7" height="15.0" fill="rgb(239,59,49)" rx="2" ry="2" />
<text  x="782.33" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="63.5" y="1669" width="0.3" height="15.0" fill="rgb(231,53,30)" rx="2" ry="2" />
<text  x="66.55" y="1679.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (1 samples, 0.02%)</title><rect x="1167.9" y="1829" width="0.2" height="15.0" fill="rgb(224,129,42)" rx="2" ry="2" />
<text  x="1170.93" y="1839.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (1 samples, 0.02%)</title><rect x="473.1" y="1701" width="0.2" height="15.0" fill="rgb(216,192,43)" rx="2" ry="2" />
<text  x="476.13" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="364.1" y="1589" width="0.2" height="15.0" fill="rgb(219,227,14)" rx="2" ry="2" />
<text  x="367.07" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.20%)</title><rect x="1107.8" y="1813" width="2.4" height="15.0" fill="rgb(234,105,11)" rx="2" ry="2" />
<text  x="1110.82" y="1823.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt;, std::allocator&lt;std::pair&lt;unsigned long const, seastar::shared_ptr&lt;service::abstract_write_response_handler&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1128.4" y="1653" width="0.2" height="15.0" fill="rgb(249,138,15)" rx="2" ry="2" />
<text  x="1131.37" y="1663.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (6 samples, 0.11%)</title><rect x="795.3" y="1637" width="1.3" height="15.0" fill="rgb(221,37,9)" rx="2" ry="2" />
<text  x="798.28" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="718.3" y="1909" width="0.3" height="15.0" fill="rgb(238,226,15)" rx="2" ry="2" />
<text  x="721.35" y="1919.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1253" width="2.9" height="15.0" fill="rgb(220,153,12)" rx="2" ry="2" />
<text  x="1189.94" y="1263.5" ></text>
</g>
<g >
<title>schema::registry_entry (1 samples, 0.02%)</title><rect x="1006.2" y="1685" width="0.2" height="15.0" fill="rgb(246,35,29)" rx="2" ry="2" />
<text  x="1009.19" y="1695.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.04%)</title><rect x="796.2" y="1589" width="0.4" height="15.0" fill="rgb(251,18,24)" rx="2" ry="2" />
<text  x="799.16" y="1599.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (10 samples, 0.19%)</title><rect x="202.1" y="1653" width="2.2" height="15.0" fill="rgb(216,213,53)" rx="2" ry="2" />
<text  x="205.11" y="1663.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="866.5" y="1781" width="0.3" height="15.0" fill="rgb(232,155,2)" rx="2" ry="2" />
<text  x="869.53" y="1791.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (2 samples, 0.04%)</title><rect x="1162.7" y="1893" width="0.4" height="15.0" fill="rgb(206,107,41)" rx="2" ry="2" />
<text  x="1165.68" y="1903.5" ></text>
</g>
<g >
<title>row::append_cell (1 samples, 0.02%)</title><rect x="1120.7" y="1653" width="0.2" height="15.0" fill="rgb(240,168,40)" rx="2" ry="2" />
<text  x="1123.72" y="1663.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (34 samples, 0.63%)</title><rect x="637.0" y="1925" width="7.5" height="15.0" fill="rgb(237,154,35)" rx="2" ry="2" />
<text  x="640.05" y="1935.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (51 samples, 0.94%)</title><rect x="305.5" y="1781" width="11.1" height="15.0" fill="rgb(227,157,27)" rx="2" ry="2" />
<text  x="308.49" y="1791.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (2 samples, 0.04%)</title><rect x="686.7" y="1893" width="0.4" height="15.0" fill="rgb(206,190,29)" rx="2" ry="2" />
<text  x="689.66" y="1903.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.04%)</title><rect x="427.0" y="1653" width="0.4" height="15.0" fill="rgb(213,161,36)" rx="2" ry="2" />
<text  x="430.01" y="1663.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="43.2" y="1621" width="0.2" height="15.0" fill="rgb(236,30,26)" rx="2" ry="2" />
<text  x="46.22" y="1631.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (6 samples, 0.11%)</title><rect x="152.3" y="1829" width="1.3" height="15.0" fill="rgb(241,101,44)" rx="2" ry="2" />
<text  x="155.28" y="1839.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (3 samples, 0.06%)</title><rect x="78.4" y="1877" width="0.7" height="15.0" fill="rgb(230,87,0)" rx="2" ry="2" />
<text  x="81.41" y="1887.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="528.4" y="1653" width="0.2" height="15.0" fill="rgb(213,209,19)" rx="2" ry="2" />
<text  x="531.42" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="48.2" y="1685" width="0.5" height="15.0" fill="rgb(209,65,37)" rx="2" ry="2" />
<text  x="51.25" y="1695.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.02%)</title><rect x="1119.2" y="1589" width="0.2" height="15.0" fill="rgb(205,91,27)" rx="2" ry="2" />
<text  x="1122.19" y="1599.5" ></text>
</g>
<g >
<title>memtable::apply (22 samples, 0.41%)</title><rect x="1118.3" y="1685" width="4.8" height="15.0" fill="rgb(242,83,25)" rx="2" ry="2" />
<text  x="1121.31" y="1695.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (1 samples, 0.02%)</title><rect x="524.7" y="1653" width="0.2" height="15.0" fill="rgb(227,94,16)" rx="2" ry="2" />
<text  x="527.71" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1637" width="0.3" height="15.0" fill="rgb(212,72,47)" rx="2" ry="2" />
<text  x="13.44" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="74.7" y="1733" width="0.2" height="15.0" fill="rgb(241,151,48)" rx="2" ry="2" />
<text  x="77.69" y="1743.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (4 samples, 0.07%)</title><rect x="72.5" y="1813" width="0.9" height="15.0" fill="rgb(242,85,40)" rx="2" ry="2" />
<text  x="75.51" y="1823.5" ></text>
</g>
<g >
<title>table::as_mutation_source (12 samples, 0.22%)</title><rect x="628.5" y="1861" width="2.6" height="15.0" fill="rgb(246,72,32)" rx="2" ry="2" />
<text  x="631.52" y="1871.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="901.3" y="1669" width="0.4" height="15.0" fill="rgb(206,32,49)" rx="2" ry="2" />
<text  x="904.28" y="1679.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="169.3" y="1797" width="0.2" height="15.0" fill="rgb(226,152,10)" rx="2" ry="2" />
<text  x="172.33" y="1807.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.07%)</title><rect x="790.0" y="1653" width="0.9" height="15.0" fill="rgb(254,217,9)" rx="2" ry="2" />
<text  x="793.04" y="1663.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="19.4" y="1845" width="0.2" height="15.0" fill="rgb(215,81,10)" rx="2" ry="2" />
<text  x="22.40" y="1855.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="773.9" y="1781" width="0.4" height="15.0" fill="rgb(234,132,44)" rx="2" ry="2" />
<text  x="776.86" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (7 samples, 0.13%)</title><rect x="26.8" y="1637" width="1.6" height="15.0" fill="rgb(217,143,36)" rx="2" ry="2" />
<text  x="29.83" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="869.4" y="1669" width="0.2" height="15.0" fill="rgb(218,63,16)" rx="2" ry="2" />
<text  x="872.37" y="1679.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.02%)</title><rect x="101.4" y="1909" width="0.2" height="15.0" fill="rgb(252,82,13)" rx="2" ry="2" />
<text  x="104.36" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="665.9" y="1877" width="0.2" height="15.0" fill="rgb(246,156,54)" rx="2" ry="2" />
<text  x="668.90" y="1887.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.02%)</title><rect x="125.4" y="1797" width="0.2" height="15.0" fill="rgb(248,105,13)" rx="2" ry="2" />
<text  x="128.40" y="1807.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="648.0" y="1877" width="0.2" height="15.0" fill="rgb(216,227,53)" rx="2" ry="2" />
<text  x="650.97" y="1887.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (1 samples, 0.02%)</title><rect x="751.1" y="1717" width="0.3" height="15.0" fill="rgb(224,98,39)" rx="2" ry="2" />
<text  x="754.13" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1125" width="2.9" height="15.0" fill="rgb(244,90,43)" rx="2" ry="2" />
<text  x="1189.94" y="1135.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.06%)</title><rect x="786.3" y="1669" width="0.7" height="15.0" fill="rgb(246,26,45)" rx="2" ry="2" />
<text  x="789.32" y="1679.5" ></text>
</g>
<g >
<title>reader_permit::mark_used (1 samples, 0.02%)</title><rect x="119.1" y="1877" width="0.2" height="15.0" fill="rgb(220,154,28)" rx="2" ry="2" />
<text  x="122.06" y="1887.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (60 samples, 1.11%)</title><rect x="574.1" y="1765" width="13.1" height="15.0" fill="rgb(243,196,32)" rx="2" ry="2" />
<text  x="577.10" y="1775.5" ></text>
</g>
<g >
<title>_ZN7seastar8futurizeIvE22satisfy_with_result_ofIZZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS9_14discard_resultEvEUlDpOT_E_NS3_IvEEEET0_OT_ENKUlONS_8internal22promise_base_with_typeIvEERSE_ONS_12future_stateIS8_EEE_clESM_SN_SQ_EUlvE_EEvSM_SI_ (1 samples, 0.02%)</title><rect x="87.8" y="1909" width="0.2" height="15.0" fill="rgb(253,45,16)" rx="2" ry="2" />
<text  x="90.81" y="1919.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.02%)</title><rect x="39.7" y="1733" width="0.2" height="15.0" fill="rgb(226,141,48)" rx="2" ry="2" />
<text  x="42.72" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="57.2" y="1605" width="0.4" height="15.0" fill="rgb(235,35,12)" rx="2" ry="2" />
<text  x="60.21" y="1615.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="99.2" y="1637" width="0.2" height="15.0" fill="rgb(253,129,43)" rx="2" ry="2" />
<text  x="102.17" y="1647.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="451.7" y="1829" width="0.2" height="15.0" fill="rgb(239,66,48)" rx="2" ry="2" />
<text  x="454.71" y="1839.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;executor_shard_stats&gt; &gt;::invoke&lt;seastar::sharded&lt;executor&lt;test_read (1 samples, 0.02%)</title><rect x="10.4" y="213" width="0.3" height="15.0" fill="rgb(227,59,8)" rx="2" ry="2" />
<text  x="13.44" y="223.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::deserialize_visitor&lt;basic_single_fragmented_view&lt; (1 samples, 0.02%)</title><rect x="636.4" y="1813" width="0.2" height="15.0" fill="rgb(223,43,48)" rx="2" ry="2" />
<text  x="639.39" y="1823.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (1 samples, 0.02%)</title><rect x="351.4" y="1589" width="0.2" height="15.0" fill="rgb(233,163,52)" rx="2" ry="2" />
<text  x="354.39" y="1599.5" ></text>
</g>
<g >
<title>log_heap_options::bucket_of (1 samples, 0.02%)</title><rect x="17.4" y="1685" width="0.2" height="15.0" fill="rgb(231,146,36)" rx="2" ry="2" />
<text  x="20.43" y="1695.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (1 samples, 0.02%)</title><rect x="971.0" y="1781" width="0.2" height="15.0" fill="rgb(249,174,34)" rx="2" ry="2" />
<text  x="974.00" y="1791.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (2 samples, 0.04%)</title><rect x="679.2" y="1909" width="0.5" height="15.0" fill="rgb(240,101,14)" rx="2" ry="2" />
<text  x="682.23" y="1919.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (1 samples, 0.02%)</title><rect x="605.6" y="1829" width="0.2" height="15.0" fill="rgb(245,160,4)" rx="2" ry="2" />
<text  x="608.57" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (3 samples, 0.06%)</title><rect x="774.3" y="1765" width="0.7" height="15.0" fill="rgb(209,205,37)" rx="2" ry="2" />
<text  x="777.30" y="1775.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (7 samples, 0.13%)</title><rect x="747.9" y="1781" width="1.5" height="15.0" fill="rgb(239,122,47)" rx="2" ry="2" />
<text  x="750.86" y="1791.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (5 samples, 0.09%)</title><rect x="195.1" y="1653" width="1.1" height="15.0" fill="rgb(225,170,48)" rx="2" ry="2" />
<text  x="198.12" y="1663.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (2 samples, 0.04%)</title><rect x="1132.3" y="1621" width="0.4" height="15.0" fill="rgb(244,144,41)" rx="2" ry="2" />
<text  x="1135.30" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="904.6" y="1717" width="0.2" height="15.0" fill="rgb(236,8,35)" rx="2" ry="2" />
<text  x="907.56" y="1727.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="36.2" y="1653" width="0.2" height="15.0" fill="rgb(213,23,1)" rx="2" ry="2" />
<text  x="39.23" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::reserve (2 samples, 0.04%)</title><rect x="1159.2" y="1877" width="0.4" height="15.0" fill="rgb(236,67,16)" rx="2" ry="2" />
<text  x="1162.18" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (4 samples, 0.07%)</title><rect x="662.0" y="1861" width="0.8" height="15.0" fill="rgb(234,194,25)" rx="2" ry="2" />
<text  x="664.96" y="1871.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="557.7" y="1829" width="0.4" height="15.0" fill="rgb(211,126,29)" rx="2" ry="2" />
<text  x="560.71" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="691.9" y="1909" width="0.2" height="15.0" fill="rgb(250,67,25)" rx="2" ry="2" />
<text  x="694.90" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.04%)</title><rect x="50.7" y="1733" width="0.4" height="15.0" fill="rgb(244,113,6)" rx="2" ry="2" />
<text  x="53.65" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (1 samples, 0.02%)</title><rect x="694.1" y="1909" width="0.2" height="15.0" fill="rgb(205,94,40)" rx="2" ry="2" />
<text  x="697.09" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (3 samples, 0.06%)</title><rect x="883.1" y="1845" width="0.7" height="15.0" fill="rgb(240,156,24)" rx="2" ry="2" />
<text  x="886.14" y="1855.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="24.4" y="1781" width="0.5" height="15.0" fill="rgb(249,183,29)" rx="2" ry="2" />
<text  x="27.42" y="1791.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="761.8" y="1829" width="1.6" height="15.0" fill="rgb(207,108,48)" rx="2" ry="2" />
<text  x="764.84" y="1839.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::emplace&lt;atomic_cell_or_collection, seastar::optimized_optional&lt;cell_hash&gt; &gt; (1 samples, 0.02%)</title><rect x="100.3" y="1781" width="0.2" height="15.0" fill="rgb(249,148,8)" rx="2" ry="2" />
<text  x="103.26" y="1791.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (4 samples, 0.07%)</title><rect x="1113.1" y="1845" width="0.8" height="15.0" fill="rgb(225,143,41)" rx="2" ry="2" />
<text  x="1116.07" y="1855.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.02%)</title><rect x="133.9" y="1861" width="0.2" height="15.0" fill="rgb(220,198,45)" rx="2" ry="2" />
<text  x="136.92" y="1871.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.02%)</title><rect x="573.9" y="1765" width="0.2" height="15.0" fill="rgb(248,191,50)" rx="2" ry="2" />
<text  x="576.88" y="1775.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.02%)</title><rect x="538.7" y="1749" width="0.2" height="15.0" fill="rgb(210,114,22)" rx="2" ry="2" />
<text  x="541.69" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1829" width="2.9" height="15.0" fill="rgb(211,229,28)" rx="2" ry="2" />
<text  x="1189.94" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (1 samples, 0.02%)</title><rect x="862.4" y="1733" width="0.2" height="15.0" fill="rgb(235,77,25)" rx="2" ry="2" />
<text  x="865.38" y="1743.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (13 samples, 0.24%)</title><rect x="867.2" y="1813" width="2.8" height="15.0" fill="rgb(244,125,4)" rx="2" ry="2" />
<text  x="870.19" y="1823.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (1 samples, 0.02%)</title><rect x="957.2" y="1829" width="0.3" height="15.0" fill="rgb(218,29,46)" rx="2" ry="2" />
<text  x="960.23" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (5 samples, 0.09%)</title><rect x="1144.8" y="1909" width="1.1" height="15.0" fill="rgb(253,136,39)" rx="2" ry="2" />
<text  x="1147.76" y="1919.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (2 samples, 0.04%)</title><rect x="804.0" y="1621" width="0.5" height="15.0" fill="rgb(222,56,32)" rx="2" ry="2" />
<text  x="807.02" y="1631.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (117 samples, 2.17%)</title><rect x="888.2" y="1797" width="25.5" height="15.0" fill="rgb(205,155,45)" rx="2" ry="2" />
<text  x="891.17" y="1807.5" >_..</text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (1 samples, 0.02%)</title><rect x="921.4" y="1749" width="0.2" height="15.0" fill="rgb(234,178,32)" rx="2" ry="2" />
<text  x="924.39" y="1759.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (2 samples, 0.04%)</title><rect x="185.5" y="1653" width="0.4" height="15.0" fill="rgb(219,50,16)" rx="2" ry="2" />
<text  x="188.50" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="81.5" y="1989" width="0.2" height="15.0" fill="rgb(250,221,2)" rx="2" ry="2" />
<text  x="84.47" y="1999.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (1 samples, 0.02%)</title><rect x="128.9" y="1877" width="0.2" height="15.0" fill="rgb(238,121,10)" rx="2" ry="2" />
<text  x="131.90" y="1887.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.02%)</title><rect x="77.1" y="1877" width="0.2" height="15.0" fill="rgb(249,7,14)" rx="2" ry="2" />
<text  x="80.10" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="650.2" y="1909" width="0.2" height="15.0" fill="rgb(205,116,12)" rx="2" ry="2" />
<text  x="653.16" y="1919.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="630.1" y="1813" width="0.6" height="15.0" fill="rgb(245,145,54)" rx="2" ry="2" />
<text  x="633.05" y="1823.5" ></text>
</g>
<g >
<title>std::function&lt;frozen_schema  (1 samples, 0.02%)</title><rect x="99.2" y="1813" width="0.2" height="15.0" fill="rgb(214,206,22)" rx="2" ry="2" />
<text  x="102.17" y="1823.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (28 samples, 0.52%)</title><rect x="227.7" y="1509" width="6.1" height="15.0" fill="rgb(219,72,25)" rx="2" ry="2" />
<text  x="230.68" y="1519.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1187.6" y="213" width="0.2" height="15.0" fill="rgb(218,11,21)" rx="2" ry="2" />
<text  x="1190.60" y="223.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.02%)</title><rect x="100.9" y="1797" width="0.2" height="15.0" fill="rgb(234,189,38)" rx="2" ry="2" />
<text  x="103.92" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (6 samples, 0.11%)</title><rect x="194.9" y="1669" width="1.3" height="15.0" fill="rgb(220,69,3)" rx="2" ry="2" />
<text  x="197.90" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.07%)</title><rect x="632.7" y="1893" width="0.8" height="15.0" fill="rgb(226,33,45)" rx="2" ry="2" />
<text  x="635.67" y="1903.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.02%)</title><rect x="19.6" y="1797" width="0.2" height="15.0" fill="rgb(246,126,54)" rx="2" ry="2" />
<text  x="22.62" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;data_value, data_value&gt;, std::allocator&lt;std::pair&lt;data_value, data_value&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="99.8" y="1733" width="0.2" height="15.0" fill="rgb(214,192,16)" rx="2" ry="2" />
<text  x="102.83" y="1743.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (2 samples, 0.04%)</title><rect x="1188.9" y="101" width="0.4" height="15.0" fill="rgb(246,178,47)" rx="2" ry="2" />
<text  x="1191.91" y="111.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (1 samples, 0.02%)</title><rect x="177.6" y="1685" width="0.3" height="15.0" fill="rgb(241,212,48)" rx="2" ry="2" />
<text  x="180.63" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1605" width="0.3" height="15.0" fill="rgb(223,39,22)" rx="2" ry="2" />
<text  x="13.44" y="1615.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="352.5" y="1621" width="0.2" height="15.0" fill="rgb(234,86,18)" rx="2" ry="2" />
<text  x="355.48" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="28.8" y="1589" width="0.2" height="15.0" fill="rgb(245,224,54)" rx="2" ry="2" />
<text  x="31.80" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="43.9" y="1701" width="0.2" height="15.0" fill="rgb(238,83,42)" rx="2" ry="2" />
<text  x="46.88" y="1711.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="476.4" y="1733" width="0.2" height="15.0" fill="rgb(236,141,47)" rx="2" ry="2" />
<text  x="479.40" y="1743.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (4 samples, 0.07%)</title><rect x="704.8" y="1893" width="0.9" height="15.0" fill="rgb(249,50,16)" rx="2" ry="2" />
<text  x="707.80" y="1903.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.02%)</title><rect x="1127.7" y="1589" width="0.2" height="15.0" fill="rgb(225,120,35)" rx="2" ry="2" />
<text  x="1130.71" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (2 samples, 0.04%)</title><rect x="1188.9" y="133" width="0.4" height="15.0" fill="rgb(225,146,6)" rx="2" ry="2" />
<text  x="1191.91" y="143.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="696.5" y="1733" width="0.2" height="15.0" fill="rgb(240,20,13)" rx="2" ry="2" />
<text  x="699.49" y="1743.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (17 samples, 0.31%)</title><rect x="851.5" y="1861" width="3.7" height="15.0" fill="rgb(246,118,52)" rx="2" ry="2" />
<text  x="854.45" y="1871.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (1 samples, 0.02%)</title><rect x="709.8" y="1893" width="0.2" height="15.0" fill="rgb(226,112,11)" rx="2" ry="2" />
<text  x="712.83" y="1903.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.06%)</title><rect x="541.3" y="1765" width="0.7" height="15.0" fill="rgb(234,0,31)" rx="2" ry="2" />
<text  x="544.32" y="1775.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.02%)</title><rect x="423.7" y="1653" width="0.3" height="15.0" fill="rgb(252,76,54)" rx="2" ry="2" />
<text  x="426.73" y="1663.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (1 samples, 0.02%)</title><rect x="348.1" y="1605" width="0.2" height="15.0" fill="rgb(221,186,41)" rx="2" ry="2" />
<text  x="351.11" y="1615.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (2 samples, 0.04%)</title><rect x="236.2" y="1525" width="0.4" height="15.0" fill="rgb(229,48,26)" rx="2" ry="2" />
<text  x="239.21" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (4 samples, 0.07%)</title><rect x="443.6" y="1701" width="0.9" height="15.0" fill="rgb(236,23,8)" rx="2" ry="2" />
<text  x="446.62" y="1711.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="482.5" y="1749" width="0.5" height="15.0" fill="rgb(240,159,15)" rx="2" ry="2" />
<text  x="485.52" y="1759.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="558.4" y="1845" width="0.2" height="15.0" fill="rgb(230,172,13)" rx="2" ry="2" />
<text  x="561.36" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.02%)</title><rect x="52.8" y="1653" width="0.3" height="15.0" fill="rgb(230,34,7)" rx="2" ry="2" />
<text  x="55.84" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (5 samples, 0.09%)</title><rect x="54.4" y="1461" width="1.1" height="15.0" fill="rgb(230,187,49)" rx="2" ry="2" />
<text  x="57.37" y="1471.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.02%)</title><rect x="19.2" y="1973" width="0.2" height="15.0" fill="rgb(248,94,52)" rx="2" ry="2" />
<text  x="22.18" y="1983.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (45 samples, 0.83%)</title><rect x="1124.2" y="1893" width="9.8" height="15.0" fill="rgb(239,199,32)" rx="2" ry="2" />
<text  x="1127.21" y="1903.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="808.0" y="1701" width="0.4" height="15.0" fill="rgb(238,87,46)" rx="2" ry="2" />
<text  x="810.96" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="1186.9" y="213" width="0.3" height="15.0" fill="rgb(220,221,8)" rx="2" ry="2" />
<text  x="1189.94" y="223.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (571 samples, 10.58%)</title><rect x="172.2" y="1749" width="124.8" height="15.0" fill="rgb(208,28,4)" rx="2" ry="2" />
<text  x="175.17" y="1759.5" >mutation_reader..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="81.5" y="2021" width="0.2" height="15.0" fill="rgb(205,12,0)" rx="2" ry="2" />
<text  x="84.47" y="2031.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="1166.8" y="1845" width="0.3" height="15.0" fill="rgb(229,207,30)" rx="2" ry="2" />
<text  x="1169.83" y="1855.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (186 samples, 3.45%)</title><rect x="1044.7" y="1781" width="40.6" height="15.0" fill="rgb(253,162,45)" rx="2" ry="2" />
<text  x="1047.66" y="1791.5" >ser..</text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (2 samples, 0.04%)</title><rect x="130.4" y="1877" width="0.5" height="15.0" fill="rgb(235,94,2)" rx="2" ry="2" />
<text  x="133.43" y="1887.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (29 samples, 0.54%)</title><rect x="757.7" y="1845" width="6.3" height="15.0" fill="rgb(239,133,26)" rx="2" ry="2" />
<text  x="760.69" y="1855.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="935.4" y="1797" width="0.4" height="15.0" fill="rgb(206,214,39)" rx="2" ry="2" />
<text  x="938.38" y="1807.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.07%)</title><rect x="663.1" y="1893" width="0.8" height="15.0" fill="rgb(230,152,6)" rx="2" ry="2" />
<text  x="666.05" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="837" width="0.3" height="15.0" fill="rgb(252,198,35)" rx="2" ry="2" />
<text  x="13.44" y="847.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (3 samples, 0.06%)</title><rect x="869.2" y="1733" width="0.6" height="15.0" fill="rgb(236,221,2)" rx="2" ry="2" />
<text  x="872.16" y="1743.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (4 samples, 0.07%)</title><rect x="19.4" y="1989" width="0.9" height="15.0" fill="rgb(243,107,45)" rx="2" ry="2" />
<text  x="22.40" y="1999.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_endpoint (1 samples, 0.02%)</title><rect x="20.1" y="1813" width="0.2" height="15.0" fill="rgb(212,150,33)" rx="2" ry="2" />
<text  x="23.05" y="1823.5" ></text>
</g>
<g >
<title>schema::~schema (1 samples, 0.02%)</title><rect x="12.2" y="2005" width="0.2" height="15.0" fill="rgb(243,172,7)" rx="2" ry="2" />
<text  x="15.19" y="2015.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="430.5" y="1653" width="0.2" height="15.0" fill="rgb(227,47,42)" rx="2" ry="2" />
<text  x="433.51" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="43.9" y="1621" width="0.2" height="15.0" fill="rgb(243,150,43)" rx="2" ry="2" />
<text  x="46.88" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (1 samples, 0.02%)</title><rect x="720.5" y="1909" width="0.3" height="15.0" fill="rgb(235,212,19)" rx="2" ry="2" />
<text  x="723.54" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::constant, false&gt;::_Uninitialized&lt;cql3::expr::constant&gt; (1 samples, 0.02%)</title><rect x="869.6" y="1685" width="0.2" height="15.0" fill="rgb(210,137,6)" rx="2" ry="2" />
<text  x="872.59" y="1695.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (3 samples, 0.06%)</title><rect x="820.2" y="1701" width="0.7" height="15.0" fill="rgb(236,219,15)" rx="2" ry="2" />
<text  x="823.20" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (8 samples, 0.15%)</title><rect x="940.6" y="1813" width="1.8" height="15.0" fill="rgb(254,107,28)" rx="2" ry="2" />
<text  x="943.62" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="57.4" y="1493" width="0.2" height="15.0" fill="rgb(233,167,1)" rx="2" ry="2" />
<text  x="60.43" y="1503.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1861" width="2.9" height="15.0" fill="rgb(207,106,5)" rx="2" ry="2" />
<text  x="1189.94" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::create_table_statement::raw_statement*, std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="66.4" y="1733" width="0.2" height="15.0" fill="rgb(232,153,41)" rx="2" ry="2" />
<text  x="69.39" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.02%)</title><rect x="865.7" y="1797" width="0.2" height="15.0" fill="rgb(235,20,38)" rx="2" ry="2" />
<text  x="868.66" y="1807.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="1029.1" y="1637" width="0.5" height="15.0" fill="rgb(243,87,47)" rx="2" ry="2" />
<text  x="1032.14" y="1647.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="18.7" y="1909" width="0.3" height="15.0" fill="rgb(219,20,45)" rx="2" ry="2" />
<text  x="21.74" y="1919.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (1 samples, 0.02%)</title><rect x="1114.4" y="1845" width="0.2" height="15.0" fill="rgb(226,88,26)" rx="2" ry="2" />
<text  x="1117.38" y="1855.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="712.9" y="1845" width="0.4" height="15.0" fill="rgb(234,16,5)" rx="2" ry="2" />
<text  x="715.89" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.04%)</title><rect x="1026.3" y="1589" width="0.4" height="15.0" fill="rgb(251,44,42)" rx="2" ry="2" />
<text  x="1029.30" y="1599.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="482.1" y="1717" width="0.2" height="15.0" fill="rgb(235,82,51)" rx="2" ry="2" />
<text  x="485.09" y="1727.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (1 samples, 0.02%)</title><rect x="1002.0" y="1717" width="0.3" height="15.0" fill="rgb(218,87,17)" rx="2" ry="2" />
<text  x="1005.04" y="1727.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.02%)</title><rect x="1004.0" y="1701" width="0.2" height="15.0" fill="rgb(223,51,15)" rx="2" ry="2" />
<text  x="1007.01" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="1188.3" y="69" width="0.2" height="15.0" fill="rgb(231,21,22)" rx="2" ry="2" />
<text  x="1191.25" y="79.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.02%)</title><rect x="1167.9" y="1893" width="0.2" height="15.0" fill="rgb(244,112,17)" rx="2" ry="2" />
<text  x="1170.93" y="1903.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.15%)</title><rect x="792.2" y="1605" width="1.8" height="15.0" fill="rgb(242,192,11)" rx="2" ry="2" />
<text  x="795.22" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="67.5" y="1797" width="0.2" height="15.0" fill="rgb(253,102,30)" rx="2" ry="2" />
<text  x="70.48" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="677" width="0.3" height="15.0" fill="rgb(246,169,25)" rx="2" ry="2" />
<text  x="13.44" y="687.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="531.7" y="1685" width="0.2" height="15.0" fill="rgb(221,93,15)" rx="2" ry="2" />
<text  x="534.70" y="1695.5" ></text>
</g>
<g >
<title>type_interning_helper&lt;list_type_impl, seastar::shared_ptr&lt;abstract_type const&gt;, bool&gt;::get_instance (1 samples, 0.02%)</title><rect x="19.4" y="1653" width="0.2" height="15.0" fill="rgb(236,9,43)" rx="2" ry="2" />
<text  x="22.40" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.02%)</title><rect x="539.3" y="1749" width="0.3" height="15.0" fill="rgb(232,116,16)" rx="2" ry="2" />
<text  x="542.35" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="565" width="2.9" height="15.0" fill="rgb(241,180,41)" rx="2" ry="2" />
<text  x="1189.94" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="592.5" y="1765" width="0.2" height="15.0" fill="rgb(205,127,28)" rx="2" ry="2" />
<text  x="595.46" y="1775.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.06%)</title><rect x="53.3" y="1701" width="0.6" height="15.0" fill="rgb(210,30,50)" rx="2" ry="2" />
<text  x="56.27" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="24.6" y="1717" width="0.3" height="15.0" fill="rgb(208,164,25)" rx="2" ry="2" />
<text  x="27.64" y="1727.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (1 samples, 0.02%)</title><rect x="1021.1" y="1605" width="0.2" height="15.0" fill="rgb(205,169,9)" rx="2" ry="2" />
<text  x="1024.05" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1941" width="0.3" height="15.0" fill="rgb(241,176,3)" rx="2" ry="2" />
<text  x="13.44" y="1951.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (6 samples, 0.11%)</title><rect x="1188.5" y="277" width="1.3" height="15.0" fill="rgb(208,226,16)" rx="2" ry="2" />
<text  x="1191.47" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::maybe_refresh_state (1 samples, 0.02%)</title><rect x="1187.4" y="53" width="0.2" height="15.0" fill="rgb(234,156,31)" rx="2" ry="2" />
<text  x="1190.38" y="63.5" ></text>
</g>
<g >
<title>db::query_context::execute_cql&lt;utils::UUID&amp;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;, std::chrono::time_point&lt;db_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;, long&amp;, long&amp;, data_value&gt; (1 samples, 0.02%)</title><rect x="720.3" y="1877" width="0.2" height="15.0" fill="rgb(230,100,54)" rx="2" ry="2" />
<text  x="723.32" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (1 samples, 0.02%)</title><rect x="88.9" y="1909" width="0.2" height="15.0" fill="rgb(252,212,33)" rx="2" ry="2" />
<text  x="91.90" y="1919.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (5 samples, 0.09%)</title><rect x="706.3" y="1909" width="1.1" height="15.0" fill="rgb(209,23,11)" rx="2" ry="2" />
<text  x="709.33" y="1919.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (43 samples, 0.80%)</title><rect x="491.9" y="1717" width="9.4" height="15.0" fill="rgb(224,218,18)" rx="2" ry="2" />
<text  x="494.92" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="552.9" y="1765" width="0.4" height="15.0" fill="rgb(215,32,31)" rx="2" ry="2" />
<text  x="555.90" y="1775.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (4 samples, 0.07%)</title><rect x="21.4" y="1909" width="0.8" height="15.0" fill="rgb(209,78,48)" rx="2" ry="2" />
<text  x="24.37" y="1919.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (4 samples, 0.07%)</title><rect x="668.7" y="1909" width="0.9" height="15.0" fill="rgb(225,195,13)" rx="2" ry="2" />
<text  x="671.74" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1925" width="0.3" height="15.0" fill="rgb(247,173,39)" rx="2" ry="2" />
<text  x="13.44" y="1935.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, utils::directories::verify_owner_and_mode (1 samples, 0.02%)</title><rect x="720.5" y="1925" width="0.3" height="15.0" fill="rgb(242,173,15)" rx="2" ry="2" />
<text  x="723.54" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (5 samples, 0.09%)</title><rect x="1016.7" y="1653" width="1.1" height="15.0" fill="rgb(232,10,27)" rx="2" ry="2" />
<text  x="1019.68" y="1663.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="662.8" y="1893" width="0.3" height="15.0" fill="rgb(219,175,18)" rx="2" ry="2" />
<text  x="665.84" y="1903.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1112.2" y="1813" width="0.2" height="15.0" fill="rgb(249,185,49)" rx="2" ry="2" />
<text  x="1115.19" y="1823.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (1 samples, 0.02%)</title><rect x="1188.3" y="149" width="0.2" height="15.0" fill="rgb(254,30,19)" rx="2" ry="2" />
<text  x="1191.25" y="159.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (39 samples, 0.72%)</title><rect x="119.9" y="1845" width="8.6" height="15.0" fill="rgb(209,229,47)" rx="2" ry="2" />
<text  x="122.94" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="62.9" y="1653" width="0.2" height="15.0" fill="rgb(224,107,39)" rx="2" ry="2" />
<text  x="65.89" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="183.1" y="1669" width="0.2" height="15.0" fill="rgb(220,86,38)" rx="2" ry="2" />
<text  x="186.10" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="61.4" y="1637" width="0.2" height="15.0" fill="rgb(211,125,13)" rx="2" ry="2" />
<text  x="64.36" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (1 samples, 0.02%)</title><rect x="697.1" y="1909" width="0.3" height="15.0" fill="rgb(210,98,0)" rx="2" ry="2" />
<text  x="700.15" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="98.7" y="1909" width="0.3" height="15.0" fill="rgb(242,132,39)" rx="2" ry="2" />
<text  x="101.73" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (4 samples, 0.07%)</title><rect x="1016.9" y="1637" width="0.9" height="15.0" fill="rgb(231,87,34)" rx="2" ry="2" />
<text  x="1019.90" y="1647.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::consume (1 samples, 0.02%)</title><rect x="36.0" y="1669" width="0.2" height="15.0" fill="rgb(243,27,4)" rx="2" ry="2" />
<text  x="39.01" y="1679.5" ></text>
</g>
<g >
<title>database::has_keyspace (11 samples, 0.20%)</title><rect x="848.6" y="1829" width="2.4" height="15.0" fill="rgb(241,71,43)" rx="2" ry="2" />
<text  x="851.61" y="1839.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="851.0" y="1829" width="0.2" height="15.0" fill="rgb(223,27,44)" rx="2" ry="2" />
<text  x="854.02" y="1839.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="698.0" y="1909" width="0.7" height="15.0" fill="rgb(244,141,53)" rx="2" ry="2" />
<text  x="701.02" y="1919.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (1 samples, 0.02%)</title><rect x="70.1" y="1861" width="0.2" height="15.0" fill="rgb(227,115,13)" rx="2" ry="2" />
<text  x="73.10" y="1871.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="646.7" y="1909" width="0.2" height="15.0" fill="rgb(237,211,22)" rx="2" ry="2" />
<text  x="649.66" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.04%)</title><rect x="1027.6" y="1621" width="0.4" height="15.0" fill="rgb(249,32,25)" rx="2" ry="2" />
<text  x="1030.61" y="1631.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="72.7" y="1733" width="0.2" height="15.0" fill="rgb(234,208,30)" rx="2" ry="2" />
<text  x="75.73" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="61.4" y="1701" width="0.2" height="15.0" fill="rgb(245,182,32)" rx="2" ry="2" />
<text  x="64.36" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="62.0" y="1557" width="0.2" height="15.0" fill="rgb(245,102,26)" rx="2" ry="2" />
<text  x="65.02" y="1567.5" ></text>
</g>
<g >
<title>service::storage_service::join_cluster (2 samples, 0.04%)</title><rect x="19.8" y="1973" width="0.5" height="15.0" fill="rgb(231,151,11)" rx="2" ry="2" />
<text  x="22.84" y="1983.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="1170.5" y="1861" width="0.3" height="15.0" fill="rgb(221,23,32)" rx="2" ry="2" />
<text  x="1173.55" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="53.3" y="1621" width="0.6" height="15.0" fill="rgb(207,29,10)" rx="2" ry="2" />
<text  x="56.27" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (25 samples, 0.46%)</title><rect x="1075.0" y="1701" width="5.5" height="15.0" fill="rgb(219,10,24)" rx="2" ry="2" />
<text  x="1078.04" y="1711.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (266 samples, 4.93%)</title><rect x="21.4" y="1925" width="58.1" height="15.0" fill="rgb(240,15,48)" rx="2" ry="2" />
<text  x="24.37" y="1935.5" >cql3::..</text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.7" y="133" width="0.2" height="15.0" fill="rgb(230,136,28)" rx="2" ry="2" />
<text  x="1191.69" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="678.8" y="1909" width="0.4" height="15.0" fill="rgb(252,40,28)" rx="2" ry="2" />
<text  x="681.79" y="1919.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (12 samples, 0.22%)</title><rect x="689.3" y="1909" width="2.6" height="15.0" fill="rgb(239,228,22)" rx="2" ry="2" />
<text  x="692.28" y="1919.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="598.1" y="1829" width="0.3" height="15.0" fill="rgb(252,101,1)" rx="2" ry="2" />
<text  x="601.14" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="48.2" y="1653" width="0.5" height="15.0" fill="rgb(240,31,3)" rx="2" ry="2" />
<text  x="51.25" y="1663.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="842.5" y="1781" width="0.4" height="15.0" fill="rgb(251,169,39)" rx="2" ry="2" />
<text  x="845.49" y="1791.5" ></text>
</g>
<g >
<title>cql3::get_cql3_kind (1 samples, 0.02%)</title><rect x="71.6" y="1765" width="0.3" height="15.0" fill="rgb(237,11,41)" rx="2" ry="2" />
<text  x="74.63" y="1775.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.15%)</title><rect x="936.0" y="1829" width="1.8" height="15.0" fill="rgb(215,97,6)" rx="2" ry="2" />
<text  x="939.03" y="1839.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (30 samples, 0.56%)</title><rect x="505.0" y="1653" width="6.6" height="15.0" fill="rgb(236,27,46)" rx="2" ry="2" />
<text  x="508.04" y="1663.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (2 samples, 0.04%)</title><rect x="129.1" y="1877" width="0.5" height="15.0" fill="rgb(220,82,54)" rx="2" ry="2" />
<text  x="132.11" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.17%)</title><rect x="844.2" y="1829" width="2.0" height="15.0" fill="rgb(242,163,25)" rx="2" ry="2" />
<text  x="847.24" y="1839.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="99.4" y="1797" width="0.2" height="15.0" fill="rgb(229,137,53)" rx="2" ry="2" />
<text  x="102.39" y="1807.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.15%)</title><rect x="1142.1" y="1909" width="1.8" height="15.0" fill="rgb(220,33,20)" rx="2" ry="2" />
<text  x="1145.14" y="1919.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (50 samples, 0.93%)</title><rect x="223.1" y="1525" width="10.9" height="15.0" fill="rgb(241,100,42)" rx="2" ry="2" />
<text  x="226.10" y="1535.5" ></text>
</g>
<g >
<title>memtable_entry::memtable_entry (1 samples, 0.02%)</title><rect x="1118.5" y="1573" width="0.2" height="15.0" fill="rgb(250,220,1)" rx="2" ry="2" />
<text  x="1121.53" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="49.3" y="1621" width="0.5" height="15.0" fill="rgb(249,201,18)" rx="2" ry="2" />
<text  x="52.34" y="1631.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="94.8" y="1877" width="0.2" height="15.0" fill="rgb(218,201,35)" rx="2" ry="2" />
<text  x="97.80" y="1887.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (1 samples, 0.02%)</title><rect x="706.5" y="1893" width="0.3" height="15.0" fill="rgb(211,118,28)" rx="2" ry="2" />
<text  x="709.55" y="1903.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="869" width="2.9" height="15.0" fill="rgb(253,167,33)" rx="2" ry="2" />
<text  x="1189.94" y="879.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="858.0" y="1829" width="0.2" height="15.0" fill="rgb(219,165,29)" rx="2" ry="2" />
<text  x="861.01" y="1839.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1429" width="2.9" height="15.0" fill="rgb(207,157,40)" rx="2" ry="2" />
<text  x="1189.94" y="1439.5" ></text>
</g>
<g >
<title>sstables::file_writer::~file_writer (1 samples, 0.02%)</title><rect x="18.3" y="1925" width="0.2" height="15.0" fill="rgb(245,145,39)" rx="2" ry="2" />
<text  x="21.31" y="1935.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="507.2" y="1621" width="0.2" height="15.0" fill="rgb(225,14,41)" rx="2" ry="2" />
<text  x="510.22" y="1631.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="326.9" y="1669" width="0.2" height="15.0" fill="rgb(211,102,40)" rx="2" ry="2" />
<text  x="329.91" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="532.4" y="1733" width="0.4" height="15.0" fill="rgb(214,4,53)" rx="2" ry="2" />
<text  x="535.36" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="32.3" y="1621" width="0.2" height="15.0" fill="rgb(215,84,52)" rx="2" ry="2" />
<text  x="35.29" y="1631.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="52.4" y="1653" width="0.2" height="15.0" fill="rgb(207,103,52)" rx="2" ry="2" />
<text  x="55.40" y="1663.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="257.6" y="1541" width="0.2" height="15.0" fill="rgb(227,197,45)" rx="2" ry="2" />
<text  x="260.63" y="1551.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.02%)</title><rect x="59.8" y="1701" width="0.3" height="15.0" fill="rgb(254,165,51)" rx="2" ry="2" />
<text  x="62.83" y="1711.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (174 samples, 3.22%)</title><rect x="777.6" y="1781" width="38.0" height="15.0" fill="rgb(222,141,23)" rx="2" ry="2" />
<text  x="780.58" y="1791.5" >ser..</text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="311.6" y="1685" width="1.1" height="15.0" fill="rgb(227,89,54)" rx="2" ry="2" />
<text  x="314.61" y="1695.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.02%)</title><rect x="712.7" y="1861" width="0.2" height="15.0" fill="rgb(228,148,36)" rx="2" ry="2" />
<text  x="715.67" y="1871.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (10 samples, 0.19%)</title><rect x="234.0" y="1541" width="2.2" height="15.0" fill="rgb(205,34,37)" rx="2" ry="2" />
<text  x="237.02" y="1551.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt; &gt;::reset (1 samples, 0.02%)</title><rect x="1028.0" y="1621" width="0.3" height="15.0" fill="rgb(233,152,38)" rx="2" ry="2" />
<text  x="1031.05" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="52.8" y="1701" width="0.3" height="15.0" fill="rgb(248,94,27)" rx="2" ry="2" />
<text  x="55.84" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (2 samples, 0.04%)</title><rect x="868.7" y="1669" width="0.5" height="15.0" fill="rgb(230,109,24)" rx="2" ry="2" />
<text  x="871.72" y="1679.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (1 samples, 0.02%)</title><rect x="74.3" y="1749" width="0.2" height="15.0" fill="rgb(230,147,38)" rx="2" ry="2" />
<text  x="77.26" y="1759.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="918.3" y="1781" width="0.5" height="15.0" fill="rgb(230,185,38)" rx="2" ry="2" />
<text  x="921.33" y="1791.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (94 samples, 1.74%)</title><rect x="787.2" y="1701" width="20.5" height="15.0" fill="rgb(212,35,37)" rx="2" ry="2" />
<text  x="790.20" y="1711.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1189.6" y="165" width="0.2" height="15.0" fill="rgb(226,213,33)" rx="2" ry="2" />
<text  x="1192.56" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="63.1" y="1733" width="0.2" height="15.0" fill="rgb(205,47,44)" rx="2" ry="2" />
<text  x="66.11" y="1743.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (1 samples, 0.02%)</title><rect x="89.1" y="1893" width="0.2" height="15.0" fill="rgb(205,135,8)" rx="2" ry="2" />
<text  x="92.12" y="1903.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (1 samples, 0.02%)</title><rect x="420.9" y="1605" width="0.2" height="15.0" fill="rgb(219,78,47)" rx="2" ry="2" />
<text  x="423.89" y="1615.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (1 samples, 0.02%)</title><rect x="918.5" y="1765" width="0.3" height="15.0" fill="rgb(242,221,26)" rx="2" ry="2" />
<text  x="921.55" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1445" width="0.3" height="15.0" fill="rgb(211,32,3)" rx="2" ry="2" />
<text  x="13.44" y="1455.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (3 samples, 0.06%)</title><rect x="945.4" y="1781" width="0.7" height="15.0" fill="rgb(205,29,33)" rx="2" ry="2" />
<text  x="948.43" y="1791.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (2 samples, 0.04%)</title><rect x="21.6" y="1845" width="0.4" height="15.0" fill="rgb(216,188,33)" rx="2" ry="2" />
<text  x="24.58" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (10 samples, 0.19%)</title><rect x="56.6" y="1701" width="2.1" height="15.0" fill="rgb(228,33,42)" rx="2" ry="2" />
<text  x="59.55" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.02%)</title><rect x="720.3" y="1733" width="0.2" height="15.0" fill="rgb(239,201,5)" rx="2" ry="2" />
<text  x="723.32" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (1 samples, 0.02%)</title><rect x="81.3" y="1845" width="0.2" height="15.0" fill="rgb(246,47,5)" rx="2" ry="2" />
<text  x="84.25" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (4 samples, 0.07%)</title><rect x="903.0" y="1701" width="0.9" height="15.0" fill="rgb(227,59,33)" rx="2" ry="2" />
<text  x="906.03" y="1711.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.02%)</title><rect x="101.4" y="1925" width="0.2" height="15.0" fill="rgb(231,72,25)" rx="2" ry="2" />
<text  x="104.36" y="1935.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (1 samples, 0.02%)</title><rect x="533.0" y="1749" width="0.2" height="15.0" fill="rgb(230,136,3)" rx="2" ry="2" />
<text  x="536.01" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="81.7" y="1973" width="0.2" height="15.0" fill="rgb(225,134,9)" rx="2" ry="2" />
<text  x="84.69" y="1983.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (1 samples, 0.02%)</title><rect x="1135.6" y="1925" width="0.2" height="15.0" fill="rgb(205,68,49)" rx="2" ry="2" />
<text  x="1138.58" y="1935.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="57.0" y="1541" width="0.2" height="15.0" fill="rgb(216,72,21)" rx="2" ry="2" />
<text  x="59.99" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.04%)</title><rect x="28.6" y="1605" width="0.4" height="15.0" fill="rgb(250,131,40)" rx="2" ry="2" />
<text  x="31.58" y="1615.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (27 samples, 0.50%)</title><rect x="1021.7" y="1621" width="5.9" height="15.0" fill="rgb(228,201,7)" rx="2" ry="2" />
<text  x="1024.71" y="1631.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.07%)</title><rect x="792.9" y="1573" width="0.9" height="15.0" fill="rgb(221,196,24)" rx="2" ry="2" />
<text  x="795.88" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1187.6" y="293" width="0.2" height="15.0" fill="rgb(243,152,37)" rx="2" ry="2" />
<text  x="1190.60" y="303.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (26 samples, 0.48%)</title><rect x="1021.9" y="1605" width="5.7" height="15.0" fill="rgb(219,33,31)" rx="2" ry="2" />
<text  x="1024.93" y="1615.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="73.4" y="1653" width="0.2" height="15.0" fill="rgb(218,169,14)" rx="2" ry="2" />
<text  x="76.38" y="1663.5" ></text>
</g>
<g >
<title>canonical_mutation::canonical_mutation (1 samples, 0.02%)</title><rect x="100.5" y="1845" width="0.2" height="15.0" fill="rgb(228,199,47)" rx="2" ry="2" />
<text  x="103.48" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (1 samples, 0.02%)</title><rect x="623.5" y="1829" width="0.2" height="15.0" fill="rgb(208,195,7)" rx="2" ry="2" />
<text  x="626.50" y="1839.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (2 samples, 0.04%)</title><rect x="1083.6" y="1733" width="0.4" height="15.0" fill="rgb(248,137,54)" rx="2" ry="2" />
<text  x="1086.56" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mA (1 samples, 0.02%)</title><rect x="35.6" y="1669" width="0.2" height="15.0" fill="rgb(248,132,34)" rx="2" ry="2" />
<text  x="38.57" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="865.0" y="1765" width="0.2" height="15.0" fill="rgb(238,97,14)" rx="2" ry="2" />
<text  x="868.00" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="1152.4" y="1845" width="0.4" height="15.0" fill="rgb(254,123,5)" rx="2" ry="2" />
<text  x="1155.41" y="1855.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1189.6" y="53" width="0.2" height="15.0" fill="rgb(232,68,0)" rx="2" ry="2" />
<text  x="1192.56" y="63.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="713.8" y="1845" width="0.2" height="15.0" fill="rgb(226,27,49)" rx="2" ry="2" />
<text  x="716.76" y="1855.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (3 samples, 0.06%)</title><rect x="1033.3" y="1669" width="0.6" height="15.0" fill="rgb(237,158,29)" rx="2" ry="2" />
<text  x="1036.29" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt;, true&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="99.8" y="1813" width="0.2" height="15.0" fill="rgb(211,28,33)" rx="2" ry="2" />
<text  x="102.83" y="1823.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (1 samples, 0.02%)</title><rect x="364.3" y="1605" width="0.2" height="15.0" fill="rgb(238,201,11)" rx="2" ry="2" />
<text  x="367.28" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation::data, std::default_delete&lt;mutation::data&gt; &gt;::~unique_ptr (3 samples, 0.06%)</title><rect x="1133.4" y="1749" width="0.6" height="15.0" fill="rgb(222,157,48)" rx="2" ry="2" />
<text  x="1136.39" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="53.3" y="1573" width="0.2" height="15.0" fill="rgb(220,86,15)" rx="2" ry="2" />
<text  x="56.27" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1045" width="2.9" height="15.0" fill="rgb(209,27,32)" rx="2" ry="2" />
<text  x="1189.94" y="1055.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (5 samples, 0.09%)</title><rect x="839.2" y="1861" width="1.1" height="15.0" fill="rgb(224,57,8)" rx="2" ry="2" />
<text  x="842.21" y="1871.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="213.9" y="1557" width="0.2" height="15.0" fill="rgb(234,172,38)" rx="2" ry="2" />
<text  x="216.92" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1125" width="0.3" height="15.0" fill="rgb(223,84,34)" rx="2" ry="2" />
<text  x="13.44" y="1135.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (6 samples, 0.11%)</title><rect x="446.2" y="1781" width="1.4" height="15.0" fill="rgb(217,95,42)" rx="2" ry="2" />
<text  x="449.24" y="1791.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="24.2" y="1669" width="0.2" height="15.0" fill="rgb(230,35,36)" rx="2" ry="2" />
<text  x="27.21" y="1679.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (3 samples, 0.06%)</title><rect x="242.5" y="1557" width="0.7" height="15.0" fill="rgb(210,37,42)" rx="2" ry="2" />
<text  x="245.55" y="1567.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (4 samples, 0.07%)</title><rect x="801.8" y="1557" width="0.9" height="15.0" fill="rgb(248,218,54)" rx="2" ry="2" />
<text  x="804.84" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="853.4" y="1765" width="1.3" height="15.0" fill="rgb(253,222,47)" rx="2" ry="2" />
<text  x="856.42" y="1775.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.02%)</title><rect x="318.8" y="1797" width="0.2" height="15.0" fill="rgb(218,153,14)" rx="2" ry="2" />
<text  x="321.82" y="1807.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (1 samples, 0.02%)</title><rect x="736.5" y="1829" width="0.2" height="15.0" fill="rgb(221,51,48)" rx="2" ry="2" />
<text  x="739.49" y="1839.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (3 samples, 0.06%)</title><rect x="1170.3" y="1909" width="0.7" height="15.0" fill="rgb(237,151,34)" rx="2" ry="2" />
<text  x="1173.33" y="1919.5" ></text>
</g>
<g >
<title>__start_context (287 samples, 5.32%)</title><rect x="17.9" y="2037" width="62.7" height="15.0" fill="rgb(247,27,28)" rx="2" ry="2" />
<text  x="20.87" y="2047.5" >__star..</text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (101 samples, 1.87%)</title><rect x="489.5" y="1749" width="22.1" height="15.0" fill="rgb(227,45,27)" rx="2" ry="2" />
<text  x="492.52" y="1759.5" >d..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::populate_slot (2 samples, 0.04%)</title><rect x="868.7" y="1685" width="0.5" height="15.0" fill="rgb(239,160,52)" rx="2" ry="2" />
<text  x="871.72" y="1695.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (32 samples, 0.59%)</title><rect x="504.6" y="1669" width="7.0" height="15.0" fill="rgb(215,194,25)" rx="2" ry="2" />
<text  x="507.60" y="1679.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (24 samples, 0.44%)</title><rect x="864.8" y="1829" width="5.2" height="15.0" fill="rgb(245,72,38)" rx="2" ry="2" />
<text  x="867.78" y="1839.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchc (1 samples, 0.02%)</title><rect x="36.2" y="1669" width="0.2" height="15.0" fill="rgb(227,23,44)" rx="2" ry="2" />
<text  x="39.23" y="1679.5" ></text>
</g>
<g >
<title>validation::validate_column_family (34 samples, 0.63%)</title><rect x="824.1" y="1813" width="7.5" height="15.0" fill="rgb(253,94,1)" rx="2" ry="2" />
<text  x="827.13" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (5 samples, 0.09%)</title><rect x="43.0" y="1781" width="1.1" height="15.0" fill="rgb(217,108,25)" rx="2" ry="2" />
<text  x="46.00" y="1791.5" ></text>
</g>
<g >
<title>partition_entry::read (9 samples, 0.17%)</title><rect x="533.9" y="1733" width="2.0" height="15.0" fill="rgb(222,96,15)" rx="2" ry="2" />
<text  x="536.89" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="19.4" y="1925" width="0.2" height="15.0" fill="rgb(209,218,52)" rx="2" ry="2" />
<text  x="22.40" y="1935.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator+= (1 samples, 0.02%)</title><rect x="19.4" y="1589" width="0.2" height="15.0" fill="rgb(235,68,34)" rx="2" ry="2" />
<text  x="22.40" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="763.8" y="1829" width="0.2" height="15.0" fill="rgb(251,139,5)" rx="2" ry="2" />
<text  x="766.81" y="1839.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (3 samples, 0.06%)</title><rect x="635.7" y="1909" width="0.7" height="15.0" fill="rgb(207,127,26)" rx="2" ry="2" />
<text  x="638.73" y="1919.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (6 samples, 0.11%)</title><rect x="588.7" y="1797" width="1.4" height="15.0" fill="rgb(248,126,47)" rx="2" ry="2" />
<text  x="591.74" y="1807.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.02%)</title><rect x="595.1" y="1797" width="0.2" height="15.0" fill="rgb(246,213,46)" rx="2" ry="2" />
<text  x="598.08" y="1807.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1188.7" y="85" width="0.2" height="15.0" fill="rgb(242,105,20)" rx="2" ry="2" />
<text  x="1191.69" y="95.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (1 samples, 0.02%)</title><rect x="472.3" y="1685" width="0.2" height="15.0" fill="rgb(254,177,34)" rx="2" ry="2" />
<text  x="475.25" y="1695.5" ></text>
</g>
<g >
<title>schema::make_column_specification (1 samples, 0.02%)</title><rect x="100.9" y="1781" width="0.2" height="15.0" fill="rgb(208,85,29)" rx="2" ry="2" />
<text  x="103.92" y="1791.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.02%)</title><rect x="19.8" y="1797" width="0.3" height="15.0" fill="rgb(251,19,19)" rx="2" ry="2" />
<text  x="22.84" y="1807.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.09%)</title><rect x="443.4" y="1717" width="1.1" height="15.0" fill="rgb(205,10,41)" rx="2" ry="2" />
<text  x="446.40" y="1727.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="737.6" y="1717" width="0.2" height="15.0" fill="rgb(246,41,6)" rx="2" ry="2" />
<text  x="740.58" y="1727.5" ></text>
</g>
<g >
<title>row::compact_and_expire (1 samples, 0.02%)</title><rect x="424.0" y="1653" width="0.2" height="15.0" fill="rgb(216,30,28)" rx="2" ry="2" />
<text  x="426.95" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="49.3" y="1605" width="0.5" height="15.0" fill="rgb(228,172,54)" rx="2" ry="2" />
<text  x="52.34" y="1615.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="525.1" y="1621" width="0.7" height="15.0" fill="rgb(240,186,37)" rx="2" ry="2" />
<text  x="528.14" y="1631.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="99.8" y="1861" width="0.2" height="15.0" fill="rgb(250,217,20)" rx="2" ry="2" />
<text  x="102.83" y="1871.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (7 samples, 0.13%)</title><rect x="687.5" y="1877" width="1.6" height="15.0" fill="rgb(220,184,39)" rx="2" ry="2" />
<text  x="690.53" y="1887.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (1 samples, 0.02%)</title><rect x="299.2" y="1733" width="0.2" height="15.0" fill="rgb(246,187,6)" rx="2" ry="2" />
<text  x="302.15" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (9 samples, 0.17%)</title><rect x="911.6" y="1765" width="1.9" height="15.0" fill="rgb(239,123,9)" rx="2" ry="2" />
<text  x="914.56" y="1775.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::max_backlog (3 samples, 0.06%)</title><rect x="719.4" y="1845" width="0.7" height="15.0" fill="rgb(217,59,32)" rx="2" ry="2" />
<text  x="722.44" y="1855.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.02%)</title><rect x="1186.9" y="117" width="0.3" height="15.0" fill="rgb(242,30,48)" rx="2" ry="2" />
<text  x="1189.94" y="127.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (3 samples, 0.06%)</title><rect x="21.4" y="1877" width="0.6" height="15.0" fill="rgb(216,40,34)" rx="2" ry="2" />
<text  x="24.37" y="1887.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;  (1 samples, 0.02%)</title><rect x="636.4" y="1877" width="0.2" height="15.0" fill="rgb(223,148,23)" rx="2" ry="2" />
<text  x="639.39" y="1887.5" ></text>
</g>
<g >
<title>boost::range_detail::default_constructible_unary_fn_wrapper&lt;service::abstract_write_response_handler::max_backlog (3 samples, 0.06%)</title><rect x="719.4" y="1829" width="0.7" height="15.0" fill="rgb(230,160,18)" rx="2" ry="2" />
<text  x="722.44" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (4 samples, 0.07%)</title><rect x="691.0" y="1893" width="0.9" height="15.0" fill="rgb(230,121,19)" rx="2" ry="2" />
<text  x="694.03" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.02%)</title><rect x="1188.7" y="53" width="0.2" height="15.0" fill="rgb(222,90,46)" rx="2" ry="2" />
<text  x="1191.69" y="63.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, gms::inet_address, std::allocator&lt;gms::inet_address&gt;, std::__detail::_Identity, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;gms::inet_address const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;gms::inet_address, false&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="101.4" y="1877" width="0.2" height="15.0" fill="rgb(226,20,37)" rx="2" ry="2" />
<text  x="104.36" y="1887.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="820.0" y="1701" width="0.2" height="15.0" fill="rgb(238,64,51)" rx="2" ry="2" />
<text  x="822.98" y="1711.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="81.7" y="2005" width="0.2" height="15.0" fill="rgb(227,1,50)" rx="2" ry="2" />
<text  x="84.69" y="2015.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="646.2" y="1893" width="0.2" height="15.0" fill="rgb(239,54,14)" rx="2" ry="2" />
<text  x="649.23" y="1903.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="805.1" y="1669" width="0.2" height="15.0" fill="rgb(220,9,47)" rx="2" ry="2" />
<text  x="808.12" y="1679.5" ></text>
</g>
<g >
<title>database::find_schema (23 samples, 0.43%)</title><rect x="824.1" y="1797" width="5.1" height="15.0" fill="rgb(246,201,39)" rx="2" ry="2" />
<text  x="827.13" y="1807.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (2 samples, 0.04%)</title><rect x="324.7" y="1717" width="0.5" height="15.0" fill="rgb(217,68,49)" rx="2" ry="2" />
<text  x="327.72" y="1727.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="821.7" y="1797" width="1.1" height="15.0" fill="rgb(243,65,31)" rx="2" ry="2" />
<text  x="824.73" y="1807.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="867.2" y="1733" width="0.2" height="15.0" fill="rgb(205,176,40)" rx="2" ry="2" />
<text  x="870.19" y="1743.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (1 samples, 0.02%)</title><rect x="351.4" y="1605" width="0.2" height="15.0" fill="rgb(207,64,0)" rx="2" ry="2" />
<text  x="354.39" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1186.9" y="453" width="0.3" height="15.0" fill="rgb(210,38,37)" rx="2" ry="2" />
<text  x="1189.94" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (287 samples, 5.32%)</title><rect x="17.9" y="2005" width="62.7" height="15.0" fill="rgb(213,31,18)" rx="2" ry="2" />
<text  x="20.87" y="2015.5" >seasta..</text>
</g>
<g >
<title>operator new (11 samples, 0.20%)</title><rect x="1039.0" y="1669" width="2.4" height="15.0" fill="rgb(234,214,31)" rx="2" ry="2" />
<text  x="1041.98" y="1679.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.20%)</title><rect x="563.2" y="1765" width="2.4" height="15.0" fill="rgb(208,20,38)" rx="2" ry="2" />
<text  x="566.17" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1187.2" y="245" width="0.2" height="15.0" fill="rgb(240,53,41)" rx="2" ry="2" />
<text  x="1190.16" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator* (1 samples, 0.02%)</title><rect x="45.0" y="1621" width="0.2" height="15.0" fill="rgb(252,30,36)" rx="2" ry="2" />
<text  x="47.97" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1845" width="0.3" height="15.0" fill="rgb(233,194,7)" rx="2" ry="2" />
<text  x="13.44" y="1855.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::create_type_statement*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="66.6" y="1717" width="0.2" height="15.0" fill="rgb(210,18,7)" rx="2" ry="2" />
<text  x="69.61" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="57.0" y="1525" width="0.2" height="15.0" fill="rgb(253,165,29)" rx="2" ry="2" />
<text  x="59.99" y="1535.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.11%)</title><rect x="428.1" y="1637" width="1.3" height="15.0" fill="rgb(245,224,15)" rx="2" ry="2" />
<text  x="431.10" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="236.6" y="1525" width="0.3" height="15.0" fill="rgb(226,75,11)" rx="2" ry="2" />
<text  x="239.65" y="1535.5" ></text>
</g>
<g >
<title>auth::resource::resource (5 samples, 0.09%)</title><rect x="774.3" y="1813" width="1.1" height="15.0" fill="rgb(246,12,53)" rx="2" ry="2" />
<text  x="777.30" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="188.6" y="1685" width="0.2" height="15.0" fill="rgb(240,152,2)" rx="2" ry="2" />
<text  x="191.56" y="1695.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="477.3" y="1685" width="0.2" height="15.0" fill="rgb(221,15,32)" rx="2" ry="2" />
<text  x="480.28" y="1695.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (28 samples, 0.52%)</title><rect x="864.1" y="1909" width="6.1" height="15.0" fill="rgb(252,5,27)" rx="2" ry="2" />
<text  x="867.13" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (5 samples, 0.09%)</title><rect x="674.2" y="1861" width="1.1" height="15.0" fill="rgb(253,159,8)" rx="2" ry="2" />
<text  x="677.20" y="1871.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (5 samples, 0.09%)</title><rect x="632.5" y="1909" width="1.0" height="15.0" fill="rgb(205,92,27)" rx="2" ry="2" />
<text  x="635.46" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (1 samples, 0.02%)</title><rect x="990.7" y="1685" width="0.2" height="15.0" fill="rgb(247,8,46)" rx="2" ry="2" />
<text  x="993.67" y="1695.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="850.1" y="1749" width="0.3" height="15.0" fill="rgb(248,171,22)" rx="2" ry="2" />
<text  x="853.14" y="1759.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (1 samples, 0.02%)</title><rect x="248.4" y="1525" width="0.3" height="15.0" fill="rgb(212,87,31)" rx="2" ry="2" />
<text  x="251.45" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="814.1" y="1717" width="0.2" height="15.0" fill="rgb(231,219,13)" rx="2" ry="2" />
<text  x="817.08" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (70 samples, 1.30%)</title><rect x="25.5" y="1765" width="15.3" height="15.0" fill="rgb(233,110,37)" rx="2" ry="2" />
<text  x="28.52" y="1775.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (2 samples, 0.04%)</title><rect x="909.6" y="1781" width="0.4" height="15.0" fill="rgb(210,64,41)" rx="2" ry="2" />
<text  x="912.59" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.20%)</title><rect x="1187.4" y="421" width="2.4" height="15.0" fill="rgb(223,20,11)" rx="2" ry="2" />
<text  x="1190.38" y="431.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="17.6" y="1973" width="0.3" height="15.0" fill="rgb(205,63,43)" rx="2" ry="2" />
<text  x="20.65" y="1983.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.02%)</title><rect x="615.4" y="1861" width="0.2" height="15.0" fill="rgb(241,98,5)" rx="2" ry="2" />
<text  x="618.41" y="1871.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="202.8" y="1637" width="1.3" height="15.0" fill="rgb(211,134,25)" rx="2" ry="2" />
<text  x="205.77" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="1063.7" y="1733" width="0.6" height="15.0" fill="rgb(226,124,23)" rx="2" ry="2" />
<text  x="1066.67" y="1743.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (608 samples, 11.26%)</title><rect x="957.7" y="1829" width="132.9" height="15.0" fill="rgb(214,125,20)" rx="2" ry="2" />
<text  x="960.67" y="1839.5" >service::storage..</text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="2053" width="2.9" height="15.0" fill="rgb(217,183,24)" rx="2" ry="2" />
<text  x="1189.94" y="2063.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (3 samples, 0.06%)</title><rect x="100.7" y="1877" width="0.7" height="15.0" fill="rgb(242,99,50)" rx="2" ry="2" />
<text  x="103.70" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (37 samples, 0.69%)</title><rect x="196.6" y="1669" width="8.1" height="15.0" fill="rgb(207,222,43)" rx="2" ry="2" />
<text  x="199.65" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="175.2" y="1717" width="0.2" height="15.0" fill="rgb(215,192,28)" rx="2" ry="2" />
<text  x="178.23" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (5 samples, 0.09%)</title><rect x="54.4" y="1477" width="1.1" height="15.0" fill="rgb(235,120,37)" rx="2" ry="2" />
<text  x="57.37" y="1487.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::query_options, false&gt;::make&lt;cql3::query_options&amp;&gt; (1 samples, 0.02%)</title><rect x="79.7" y="1925" width="0.2" height="15.0" fill="rgb(247,210,23)" rx="2" ry="2" />
<text  x="82.72" y="1935.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.02%)</title><rect x="501.1" y="1701" width="0.2" height="15.0" fill="rgb(234,140,8)" rx="2" ry="2" />
<text  x="504.10" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (6 samples, 0.11%)</title><rect x="577.4" y="1733" width="1.3" height="15.0" fill="rgb(219,179,6)" rx="2" ry="2" />
<text  x="580.38" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (12 samples, 0.22%)</title><rect x="1187.2" y="469" width="2.6" height="15.0" fill="rgb(247,166,32)" rx="2" ry="2" />
<text  x="1190.16" y="479.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="944.6" y="1813" width="0.2" height="15.0" fill="rgb(248,228,7)" rx="2" ry="2" />
<text  x="947.56" y="1823.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (9 samples, 0.17%)</title><rect x="184.8" y="1669" width="2.0" height="15.0" fill="rgb(206,95,22)" rx="2" ry="2" />
<text  x="187.85" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.02%)</title><rect x="42.8" y="1717" width="0.2" height="15.0" fill="rgb(218,62,36)" rx="2" ry="2" />
<text  x="45.78" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="527.8" y="1637" width="0.4" height="15.0" fill="rgb(220,180,4)" rx="2" ry="2" />
<text  x="530.77" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="949" width="2.9" height="15.0" fill="rgb(220,118,5)" rx="2" ry="2" />
<text  x="1189.94" y="959.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.02%)</title><rect x="1186.9" y="101" width="0.3" height="15.0" fill="rgb(217,170,26)" rx="2" ry="2" />
<text  x="1189.94" y="111.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (18 samples, 0.33%)</title><rect x="260.5" y="1637" width="3.9" height="15.0" fill="rgb(234,58,23)" rx="2" ry="2" />
<text  x="263.47" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="680.1" y="1877" width="0.2" height="15.0" fill="rgb(211,5,29)" rx="2" ry="2" />
<text  x="683.10" y="1887.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (1 samples, 0.02%)</title><rect x="314.0" y="1733" width="0.2" height="15.0" fill="rgb(222,229,5)" rx="2" ry="2" />
<text  x="317.02" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (1 samples, 0.02%)</title><rect x="873.5" y="1893" width="0.2" height="15.0" fill="rgb(244,5,12)" rx="2" ry="2" />
<text  x="876.53" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (10 samples, 0.19%)</title><rect x="26.8" y="1733" width="2.2" height="15.0" fill="rgb(232,183,36)" rx="2" ry="2" />
<text  x="29.83" y="1743.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (3 samples, 0.06%)</title><rect x="277.3" y="1605" width="0.7" height="15.0" fill="rgb(244,220,48)" rx="2" ry="2" />
<text  x="280.30" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1525" width="0.3" height="15.0" fill="rgb(225,31,6)" rx="2" ry="2" />
<text  x="13.44" y="1535.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="52.0" y="1605" width="0.2" height="15.0" fill="rgb(219,37,47)" rx="2" ry="2" />
<text  x="54.96" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (6 samples, 0.11%)</title><rect x="976.2" y="1733" width="1.4" height="15.0" fill="rgb(220,155,33)" rx="2" ry="2" />
<text  x="979.25" y="1743.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (76 samples, 1.41%)</title><rect x="571.9" y="1781" width="16.6" height="15.0" fill="rgb(233,78,21)" rx="2" ry="2" />
<text  x="574.92" y="1791.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="668.3" y="1909" width="0.4" height="15.0" fill="rgb(243,88,47)" rx="2" ry="2" />
<text  x="671.30" y="1919.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (4 samples, 0.07%)</title><rect x="274.7" y="1621" width="0.8" height="15.0" fill="rgb(254,122,16)" rx="2" ry="2" />
<text  x="277.67" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (1 samples, 0.02%)</title><rect x="990.9" y="1669" width="0.2" height="15.0" fill="rgb(245,218,50)" rx="2" ry="2" />
<text  x="993.89" y="1679.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (122 samples, 2.26%)</title><rect x="887.7" y="1813" width="26.7" height="15.0" fill="rgb(244,117,15)" rx="2" ry="2" />
<text  x="890.73" y="1823.5" >_..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="584.8" y="1717" width="0.2" height="15.0" fill="rgb(220,174,5)" rx="2" ry="2" />
<text  x="587.81" y="1727.5" ></text>
</g>
<g >
<title>query::querier&lt; (5 samples, 0.09%)</title><rect x="113.2" y="1877" width="1.1" height="15.0" fill="rgb(218,20,9)" rx="2" ry="2" />
<text  x="116.16" y="1887.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (18 samples, 0.33%)</title><rect x="1129.0" y="1669" width="4.0" height="15.0" fill="rgb(235,80,13)" rx="2" ry="2" />
<text  x="1132.02" y="1679.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (242 samples, 4.48%)</title><rect x="991.8" y="1765" width="52.9" height="15.0" fill="rgb(205,1,38)" rx="2" ry="2" />
<text  x="994.77" y="1775.5" >servi..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="712.2" y="1845" width="0.2" height="15.0" fill="rgb(221,215,0)" rx="2" ry="2" />
<text  x="715.23" y="1855.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.02%)</title><rect x="21.8" y="1829" width="0.2" height="15.0" fill="rgb(226,168,48)" rx="2" ry="2" />
<text  x="24.80" y="1839.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (132 samples, 2.44%)</title><rect x="367.1" y="1605" width="28.9" height="15.0" fill="rgb(210,198,0)" rx="2" ry="2" />
<text  x="370.13" y="1615.5" >wr..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="675.5" y="1909" width="0.2" height="15.0" fill="rgb(224,27,16)" rx="2" ry="2" />
<text  x="678.51" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="940.8" y="1781" width="0.7" height="15.0" fill="rgb(226,48,30)" rx="2" ry="2" />
<text  x="943.84" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_role_statement, std::default_delete&lt;cql3::statements::create_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="67.7" y="1813" width="0.2" height="15.0" fill="rgb(243,229,19)" rx="2" ry="2" />
<text  x="70.70" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (6 samples, 0.11%)</title><rect x="31.4" y="1685" width="1.3" height="15.0" fill="rgb(231,146,1)" rx="2" ry="2" />
<text  x="34.42" y="1695.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="646.4" y="1909" width="0.3" height="15.0" fill="rgb(208,190,40)" rx="2" ry="2" />
<text  x="649.44" y="1919.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::size (1 samples, 0.02%)</title><rect x="1188.5" y="37" width="0.2" height="15.0" fill="rgb(242,68,35)" rx="2" ry="2" />
<text  x="1191.47" y="47.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (8 samples, 0.15%)</title><rect x="54.1" y="1573" width="1.8" height="15.0" fill="rgb(231,73,6)" rx="2" ry="2" />
<text  x="57.15" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (310 samples, 5.74%)</title><rect x="764.0" y="1845" width="67.8" height="15.0" fill="rgb(226,91,8)" rx="2" ry="2" />
<text  x="767.03" y="1855.5" >cql3::s..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1041.4" y="1669" width="0.2" height="15.0" fill="rgb(247,164,40)" rx="2" ry="2" />
<text  x="1044.38" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="78.2" y="1813" width="0.2" height="15.0" fill="rgb(209,169,29)" rx="2" ry="2" />
<text  x="81.19" y="1823.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (3 samples, 0.06%)</title><rect x="335.7" y="1637" width="0.6" height="15.0" fill="rgb(209,122,6)" rx="2" ry="2" />
<text  x="338.65" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="49.8" y="1669" width="0.2" height="15.0" fill="rgb(239,141,27)" rx="2" ry="2" />
<text  x="52.78" y="1679.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::operator new (1 samples, 0.02%)</title><rect x="22.9" y="1781" width="0.2" height="15.0" fill="rgb(252,217,25)" rx="2" ry="2" />
<text  x="25.89" y="1791.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::apply_locally (3 samples, 0.06%)</title><rect x="1127.5" y="1669" width="0.6" height="15.0" fill="rgb(241,73,38)" rx="2" ry="2" />
<text  x="1130.49" y="1679.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="816.9" y="1765" width="0.2" height="15.0" fill="rgb(250,8,24)" rx="2" ry="2" />
<text  x="819.92" y="1775.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (5 samples, 0.09%)</title><rect x="330.2" y="1685" width="1.1" height="15.0" fill="rgb(251,33,12)" rx="2" ry="2" />
<text  x="333.19" y="1695.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (9 samples, 0.17%)</title><rect x="747.4" y="1797" width="2.0" height="15.0" fill="rgb(242,48,3)" rx="2" ry="2" />
<text  x="750.42" y="1807.5" ></text>
</g>
<g >
<title>auth::get_permissions (119 samples, 2.20%)</title><rect x="784.6" y="1733" width="26.0" height="15.0" fill="rgb(214,39,47)" rx="2" ry="2" />
<text  x="787.57" y="1743.5" >a..</text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (4 samples, 0.07%)</title><rect x="182.2" y="1653" width="0.9" height="15.0" fill="rgb(212,103,34)" rx="2" ry="2" />
<text  x="185.22" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="675.1" y="1829" width="0.2" height="15.0" fill="rgb(250,136,40)" rx="2" ry="2" />
<text  x="678.08" y="1839.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (5 samples, 0.09%)</title><rect x="127.4" y="1829" width="1.1" height="15.0" fill="rgb(208,163,25)" rx="2" ry="2" />
<text  x="130.37" y="1839.5" ></text>
</g>
<g >
<title>free (12 samples, 0.22%)</title><rect x="432.9" y="1605" width="2.6" height="15.0" fill="rgb(247,3,16)" rx="2" ry="2" />
<text  x="435.91" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (3 samples, 0.06%)</title><rect x="18.7" y="1989" width="0.7" height="15.0" fill="rgb(249,145,3)" rx="2" ry="2" />
<text  x="21.74" y="1999.5" ></text>
</g>
<g >
<title>boost::range::count_if&lt;utils::small_vector&lt;gms::inet_address, 1ul&gt;, service::storage_proxy::hint_to_dead_endpoints&lt;utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt; (1 samples, 0.02%)</title><rect x="1126.2" y="1653" width="0.2" height="15.0" fill="rgb(239,12,11)" rx="2" ry="2" />
<text  x="1129.18" y="1663.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (2 samples, 0.04%)</title><rect x="187.7" y="1685" width="0.4" height="15.0" fill="rgb(210,70,15)" rx="2" ry="2" />
<text  x="190.69" y="1695.5" ></text>
</g>
<g >
<title>database::find_uuid (1 samples, 0.02%)</title><rect x="77.1" y="1845" width="0.2" height="15.0" fill="rgb(211,217,47)" rx="2" ry="2" />
<text  x="80.10" y="1855.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (12 samples, 0.22%)</title><rect x="549.4" y="1701" width="2.6" height="15.0" fill="rgb(246,20,37)" rx="2" ry="2" />
<text  x="552.40" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::selection::selection const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="664.4" y="1893" width="0.2" height="15.0" fill="rgb(236,181,43)" rx="2" ry="2" />
<text  x="667.37" y="1903.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1186.9" y="277" width="0.3" height="15.0" fill="rgb(221,35,20)" rx="2" ry="2" />
<text  x="1189.94" y="287.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (3 samples, 0.06%)</title><rect x="1020.0" y="1621" width="0.6" height="15.0" fill="rgb(229,122,7)" rx="2" ry="2" />
<text  x="1022.96" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="47.8" y="1605" width="0.4" height="15.0" fill="rgb(230,25,22)" rx="2" ry="2" />
<text  x="50.81" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="909.4" y="1765" width="0.2" height="15.0" fill="rgb(218,123,34)" rx="2" ry="2" />
<text  x="912.37" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1813" width="2.9" height="15.0" fill="rgb(225,55,29)" rx="2" ry="2" />
<text  x="1189.94" y="1823.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="479.0" y="1685" width="0.2" height="15.0" fill="rgb(223,179,25)" rx="2" ry="2" />
<text  x="482.03" y="1695.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (29 samples, 0.54%)</title><rect x="70.1" y="1877" width="6.3" height="15.0" fill="rgb(237,42,44)" rx="2" ry="2" />
<text  x="73.10" y="1887.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="481.0" y="1717" width="1.1" height="15.0" fill="rgb(214,199,9)" rx="2" ry="2" />
<text  x="483.99" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="831.6" y="1829" width="0.2" height="15.0" fill="rgb(215,73,30)" rx="2" ry="2" />
<text  x="834.56" y="1839.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="708.5" y="1909" width="0.2" height="15.0" fill="rgb(239,222,4)" rx="2" ry="2" />
<text  x="711.51" y="1919.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (6 samples, 0.11%)</title><rect x="1006.4" y="1685" width="1.3" height="15.0" fill="rgb(246,220,20)" rx="2" ry="2" />
<text  x="1009.41" y="1695.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="674.2" y="1845" width="1.1" height="15.0" fill="rgb(212,149,24)" rx="2" ry="2" />
<text  x="677.20" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="551.4" y="1669" width="0.2" height="15.0" fill="rgb(239,37,19)" rx="2" ry="2" />
<text  x="554.37" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (4 samples, 0.07%)</title><rect x="643.6" y="1893" width="0.9" height="15.0" fill="rgb(211,188,21)" rx="2" ry="2" />
<text  x="646.60" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1161.4" y="1909" width="0.2" height="15.0" fill="rgb(245,21,26)" rx="2" ry="2" />
<text  x="1164.37" y="1919.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (40 samples, 0.74%)</title><rect x="87.6" y="1925" width="8.7" height="15.0" fill="rgb(219,146,27)" rx="2" ry="2" />
<text  x="90.59" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="1090.1" y="1797" width="0.5" height="15.0" fill="rgb(241,213,5)" rx="2" ry="2" />
<text  x="1093.12" y="1807.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (4 samples, 0.07%)</title><rect x="751.4" y="1717" width="0.8" height="15.0" fill="rgb(242,128,28)" rx="2" ry="2" />
<text  x="754.35" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1221" width="2.9" height="15.0" fill="rgb(222,56,33)" rx="2" ry="2" />
<text  x="1189.94" y="1231.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="47.8" y="1669" width="0.4" height="15.0" fill="rgb(249,181,42)" rx="2" ry="2" />
<text  x="50.81" y="1679.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (3 samples, 0.06%)</title><rect x="316.9" y="1781" width="0.6" height="15.0" fill="rgb(247,15,44)" rx="2" ry="2" />
<text  x="319.86" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="81.7" y="1989" width="0.2" height="15.0" fill="rgb(243,17,50)" rx="2" ry="2" />
<text  x="84.69" y="1999.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (4,966 samples, 91.98%)</title><rect x="83.7" y="1941" width="1085.3" height="15.0" fill="rgb(227,226,6)" rx="2" ry="2" />
<text  x="86.65" y="1951.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (3 samples, 0.06%)</title><rect x="1157.2" y="1877" width="0.7" height="15.0" fill="rgb(229,127,13)" rx="2" ry="2" />
<text  x="1160.22" y="1887.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (6 samples, 0.11%)</title><rect x="610.6" y="1845" width="1.3" height="15.0" fill="rgb(239,60,19)" rx="2" ry="2" />
<text  x="613.60" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1781" width="2.9" height="15.0" fill="rgb(213,123,46)" rx="2" ry="2" />
<text  x="1189.94" y="1791.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (1 samples, 0.02%)</title><rect x="788.7" y="1669" width="0.2" height="15.0" fill="rgb(245,224,6)" rx="2" ry="2" />
<text  x="791.73" y="1679.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (4 samples, 0.07%)</title><rect x="819.3" y="1717" width="0.9" height="15.0" fill="rgb(251,57,16)" rx="2" ry="2" />
<text  x="822.32" y="1727.5" ></text>
</g>
<g >
<title>cql3::constants::value::~value (1 samples, 0.02%)</title><rect x="651.7" y="1733" width="0.2" height="15.0" fill="rgb(218,160,54)" rx="2" ry="2" />
<text  x="654.69" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.02%)</title><rect x="720.3" y="1749" width="0.2" height="15.0" fill="rgb(206,98,28)" rx="2" ry="2" />
<text  x="723.32" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="24.6" y="1621" width="0.3" height="15.0" fill="rgb(208,10,19)" rx="2" ry="2" />
<text  x="27.64" y="1631.5" ></text>
</g>
<g >
<title>seastar::with_file_close_on_failure&lt;sstables::sstable::new_sstable_component_file (2 samples, 0.04%)</title><rect x="636.6" y="1909" width="0.4" height="15.0" fill="rgb(220,46,21)" rx="2" ry="2" />
<text  x="639.61" y="1919.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (7 samples, 0.13%)</title><rect x="416.5" y="1589" width="1.5" height="15.0" fill="rgb(249,30,50)" rx="2" ry="2" />
<text  x="419.52" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="596.0" y="1813" width="0.2" height="15.0" fill="rgb(230,13,23)" rx="2" ry="2" />
<text  x="598.96" y="1823.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (22 samples, 0.41%)</title><rect x="12.4" y="2037" width="4.8" height="15.0" fill="rgb(251,72,48)" rx="2" ry="2" />
<text  x="15.40" y="2047.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="75.3" y="1813" width="0.3" height="15.0" fill="rgb(220,151,30)" rx="2" ry="2" />
<text  x="78.35" y="1823.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (1 samples, 0.02%)</title><rect x="1188.5" y="69" width="0.2" height="15.0" fill="rgb(236,161,37)" rx="2" ry="2" />
<text  x="1191.47" y="79.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1027.0" y="1589" width="0.2" height="15.0" fill="rgb(237,200,49)" rx="2" ry="2" />
<text  x="1029.95" y="1599.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1 samples, 0.02%)</title><rect x="815.2" y="1765" width="0.2" height="15.0" fill="rgb(208,90,49)" rx="2" ry="2" />
<text  x="818.17" y="1775.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (4 samples, 0.07%)</title><rect x="805.1" y="1685" width="0.9" height="15.0" fill="rgb(231,41,44)" rx="2" ry="2" />
<text  x="808.12" y="1695.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (21 samples, 0.39%)</title><rect x="644.5" y="1925" width="4.6" height="15.0" fill="rgb(218,160,42)" rx="2" ry="2" />
<text  x="647.48" y="1935.5" ></text>
</g>
<g >
<title>executor&lt;test_read (1 samples, 0.02%)</title><rect x="10.4" y="181" width="0.3" height="15.0" fill="rgb(250,192,2)" rx="2" ry="2" />
<text  x="13.44" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1189.3" y="101" width="0.3" height="15.0" fill="rgb(251,7,47)" rx="2" ry="2" />
<text  x="1192.34" y="111.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="691.2" y="1877" width="0.3" height="15.0" fill="rgb(224,21,38)" rx="2" ry="2" />
<text  x="694.25" y="1887.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (2 samples, 0.04%)</title><rect x="769.5" y="1765" width="0.4" height="15.0" fill="rgb(254,140,4)" rx="2" ry="2" />
<text  x="772.49" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="628.7" y="1797" width="0.9" height="15.0" fill="rgb(235,137,39)" rx="2" ry="2" />
<text  x="631.74" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="683.4" y="1877" width="0.6" height="15.0" fill="rgb(254,17,11)" rx="2" ry="2" />
<text  x="686.38" y="1887.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (9 samples, 0.17%)</title><rect x="1126.6" y="1685" width="2.0" height="15.0" fill="rgb(221,75,14)" rx="2" ry="2" />
<text  x="1129.62" y="1695.5" ></text>
</g>
<g >
<title>table::set_hit_rate (8 samples, 0.15%)</title><rect x="715.9" y="1877" width="1.8" height="15.0" fill="rgb(250,178,40)" rx="2" ry="2" />
<text  x="718.95" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (1 samples, 0.02%)</title><rect x="106.4" y="1893" width="0.2" height="15.0" fill="rgb(212,174,8)" rx="2" ry="2" />
<text  x="109.38" y="1903.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (1 samples, 0.02%)</title><rect x="82.3" y="1941" width="0.3" height="15.0" fill="rgb(237,16,9)" rx="2" ry="2" />
<text  x="85.34" y="1951.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (1 samples, 0.02%)</title><rect x="334.1" y="1653" width="0.2" height="15.0" fill="rgb(229,104,23)" rx="2" ry="2" />
<text  x="337.12" y="1663.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="547.7" y="1733" width="0.2" height="15.0" fill="rgb(227,159,35)" rx="2" ry="2" />
<text  x="550.66" y="1743.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (13 samples, 0.24%)</title><rect x="231.0" y="1493" width="2.8" height="15.0" fill="rgb(253,95,21)" rx="2" ry="2" />
<text  x="233.96" y="1503.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="215.0" y="1557" width="0.4" height="15.0" fill="rgb(205,86,49)" rx="2" ry="2" />
<text  x="218.01" y="1567.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.02%)</title><rect x="278.2" y="1589" width="0.2" height="15.0" fill="rgb(231,93,15)" rx="2" ry="2" />
<text  x="281.17" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (1 samples, 0.02%)</title><rect x="865.9" y="1733" width="0.2" height="15.0" fill="rgb(218,185,46)" rx="2" ry="2" />
<text  x="868.88" y="1743.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="52.0" y="1573" width="0.2" height="15.0" fill="rgb(247,69,12)" rx="2" ry="2" />
<text  x="54.96" y="1583.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.02%)</title><rect x="17.6" y="2037" width="0.3" height="15.0" fill="rgb(250,191,26)" rx="2" ry="2" />
<text  x="20.65" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="81.9" y="2021" width="0.2" height="15.0" fill="rgb(231,56,34)" rx="2" ry="2" />
<text  x="84.91" y="2031.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::optional&lt;clustering_key_prefix&gt; &gt;::dispose (1 samples, 0.02%)</title><rect x="448.4" y="1797" width="0.2" height="15.0" fill="rgb(242,158,23)" rx="2" ry="2" />
<text  x="451.43" y="1807.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.11%)</title><rect x="989.8" y="1701" width="1.3" height="15.0" fill="rgb(225,50,20)" rx="2" ry="2" />
<text  x="992.80" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (69 samples, 1.28%)</title><rect x="268.8" y="1685" width="15.1" height="15.0" fill="rgb(246,107,43)" rx="2" ry="2" />
<text  x="271.77" y="1695.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (4 samples, 0.07%)</title><rect x="813.9" y="1733" width="0.8" height="15.0" fill="rgb(225,178,11)" rx="2" ry="2" />
<text  x="816.86" y="1743.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (2 samples, 0.04%)</title><rect x="744.1" y="1813" width="0.5" height="15.0" fill="rgb(241,13,49)" rx="2" ry="2" />
<text  x="747.14" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1925" width="2.9" height="15.0" fill="rgb(229,151,45)" rx="2" ry="2" />
<text  x="1189.94" y="1935.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="47.8" y="1589" width="0.4" height="15.0" fill="rgb(252,150,34)" rx="2" ry="2" />
<text  x="50.81" y="1599.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (3 samples, 0.06%)</title><rect x="42.3" y="1749" width="0.7" height="15.0" fill="rgb(218,152,50)" rx="2" ry="2" />
<text  x="45.35" y="1759.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.04%)</title><rect x="1187.8" y="85" width="0.5" height="15.0" fill="rgb(243,155,5)" rx="2" ry="2" />
<text  x="1190.81" y="95.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="907.6" y="1717" width="0.2" height="15.0" fill="rgb(211,151,23)" rx="2" ry="2" />
<text  x="910.62" y="1727.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (1 samples, 0.02%)</title><rect x="1188.3" y="101" width="0.2" height="15.0" fill="rgb(232,131,2)" rx="2" ry="2" />
<text  x="1191.25" y="111.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="954.2" y="1781" width="0.2" height="15.0" fill="rgb(210,167,16)" rx="2" ry="2" />
<text  x="957.17" y="1791.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="938.2" y="1829" width="0.2" height="15.0" fill="rgb(225,27,38)" rx="2" ry="2" />
<text  x="941.22" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1045" width="0.3" height="15.0" fill="rgb(254,118,54)" rx="2" ry="2" />
<text  x="13.44" y="1055.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="669.4" y="1877" width="0.2" height="15.0" fill="rgb(228,206,15)" rx="2" ry="2" />
<text  x="672.39" y="1887.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.02%)</title><rect x="1053.4" y="1765" width="0.2" height="15.0" fill="rgb(243,99,43)" rx="2" ry="2" />
<text  x="1056.40" y="1775.5" ></text>
</g>
<g >
<title>query::result::builder::builder (9 samples, 0.17%)</title><rect x="608.2" y="1845" width="2.0" height="15.0" fill="rgb(206,207,13)" rx="2" ry="2" />
<text  x="611.20" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (5 samples, 0.09%)</title><rect x="45.6" y="1637" width="1.1" height="15.0" fill="rgb(247,196,43)" rx="2" ry="2" />
<text  x="48.63" y="1647.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (5 samples, 0.09%)</title><rect x="475.1" y="1717" width="1.1" height="15.0" fill="rgb(214,175,49)" rx="2" ry="2" />
<text  x="478.09" y="1727.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="886.4" y="1813" width="0.2" height="15.0" fill="rgb(234,128,4)" rx="2" ry="2" />
<text  x="889.42" y="1823.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (16 samples, 0.30%)</title><rect x="562.1" y="1813" width="3.5" height="15.0" fill="rgb(236,151,14)" rx="2" ry="2" />
<text  x="565.08" y="1823.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="557.9" y="1813" width="0.2" height="15.0" fill="rgb(209,229,34)" rx="2" ry="2" />
<text  x="560.93" y="1823.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (1 samples, 0.02%)</title><rect x="340.5" y="1621" width="0.2" height="15.0" fill="rgb(219,214,19)" rx="2" ry="2" />
<text  x="343.46" y="1631.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="849.7" y="1765" width="0.2" height="15.0" fill="rgb(225,127,46)" rx="2" ry="2" />
<text  x="852.70" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="43.2" y="1605" width="0.2" height="15.0" fill="rgb(215,85,11)" rx="2" ry="2" />
<text  x="46.22" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="46.1" y="1589" width="0.2" height="15.0" fill="rgb(247,174,45)" rx="2" ry="2" />
<text  x="49.06" y="1599.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="807.5" y="1653" width="0.2" height="15.0" fill="rgb(210,176,26)" rx="2" ry="2" />
<text  x="810.52" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="56.1" y="1653" width="0.2" height="15.0" fill="rgb(244,89,0)" rx="2" ry="2" />
<text  x="59.12" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="702.6" y="1877" width="0.2" height="15.0" fill="rgb(229,128,9)" rx="2" ry="2" />
<text  x="705.61" y="1887.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (1 samples, 0.02%)</title><rect x="80.2" y="1925" width="0.2" height="15.0" fill="rgb(217,135,12)" rx="2" ry="2" />
<text  x="83.16" y="1935.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (2 samples, 0.04%)</title><rect x="46.7" y="1749" width="0.5" height="15.0" fill="rgb(253,134,35)" rx="2" ry="2" />
<text  x="49.72" y="1759.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="517.3" y="1733" width="0.2" height="15.0" fill="rgb(237,107,52)" rx="2" ry="2" />
<text  x="520.28" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="62.9" y="1573" width="0.2" height="15.0" fill="rgb(209,55,8)" rx="2" ry="2" />
<text  x="65.89" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.06%)</title><rect x="41.5" y="1749" width="0.6" height="15.0" fill="rgb(228,215,53)" rx="2" ry="2" />
<text  x="44.47" y="1759.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (2 samples, 0.04%)</title><rect x="540.0" y="1765" width="0.4" height="15.0" fill="rgb(215,92,52)" rx="2" ry="2" />
<text  x="543.01" y="1775.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.06%)</title><rect x="307.5" y="1717" width="0.6" height="15.0" fill="rgb(241,68,32)" rx="2" ry="2" />
<text  x="310.46" y="1727.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="673.5" y="1861" width="0.5" height="15.0" fill="rgb(207,74,19)" rx="2" ry="2" />
<text  x="676.55" y="1871.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (2 samples, 0.04%)</title><rect x="823.0" y="1765" width="0.5" height="15.0" fill="rgb(236,13,43)" rx="2" ry="2" />
<text  x="826.04" y="1775.5" ></text>
</g>
<g >
<title>seastar::task_quota_aio_completion::complete_with (1 samples, 0.02%)</title><rect x="1138.9" y="1925" width="0.2" height="15.0" fill="rgb(228,158,19)" rx="2" ry="2" />
<text  x="1141.86" y="1935.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (32 samples, 0.59%)</title><rect x="52.0" y="1733" width="7.0" height="15.0" fill="rgb(211,212,40)" rx="2" ry="2" />
<text  x="54.96" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (1 samples, 0.02%)</title><rect x="473.3" y="1701" width="0.3" height="15.0" fill="rgb(251,160,41)" rx="2" ry="2" />
<text  x="476.35" y="1711.5" ></text>
</g>
<g >
<title>ser::serializer&lt;partition_key&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.02%)</title><rect x="1131.2" y="1589" width="0.2" height="15.0" fill="rgb(224,193,34)" rx="2" ry="2" />
<text  x="1134.21" y="1599.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (1 samples, 0.02%)</title><rect x="1162.5" y="1909" width="0.2" height="15.0" fill="rgb(221,153,34)" rx="2" ry="2" />
<text  x="1165.46" y="1919.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (2 samples, 0.04%)</title><rect x="620.0" y="1861" width="0.4" height="15.0" fill="rgb(251,223,38)" rx="2" ry="2" />
<text  x="623.00" y="1871.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="18.3" y="1973" width="0.2" height="15.0" fill="rgb(234,73,1)" rx="2" ry="2" />
<text  x="21.31" y="1983.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (3 samples, 0.06%)</title><rect x="246.7" y="1541" width="0.7" height="15.0" fill="rgb(251,226,12)" rx="2" ry="2" />
<text  x="249.70" y="1551.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (8 samples, 0.15%)</title><rect x="768.2" y="1781" width="1.7" height="15.0" fill="rgb(231,161,5)" rx="2" ry="2" />
<text  x="771.18" y="1791.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="47.6" y="1717" width="0.2" height="15.0" fill="rgb(208,31,39)" rx="2" ry="2" />
<text  x="50.59" y="1727.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (1 samples, 0.02%)</title><rect x="750.0" y="1781" width="0.3" height="15.0" fill="rgb(228,0,44)" rx="2" ry="2" />
<text  x="753.04" y="1791.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (3 samples, 0.06%)</title><rect x="574.5" y="1749" width="0.7" height="15.0" fill="rgb(224,20,18)" rx="2" ry="2" />
<text  x="577.54" y="1759.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="947.2" y="1797" width="0.2" height="15.0" fill="rgb(214,208,32)" rx="2" ry="2" />
<text  x="950.18" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (2 samples, 0.04%)</title><rect x="63.5" y="1733" width="0.5" height="15.0" fill="rgb(214,168,45)" rx="2" ry="2" />
<text  x="66.55" y="1743.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (1 samples, 0.02%)</title><rect x="752.0" y="1701" width="0.2" height="15.0" fill="rgb(221,213,33)" rx="2" ry="2" />
<text  x="755.01" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (114 samples, 2.11%)</title><rect x="571.3" y="1829" width="24.9" height="15.0" fill="rgb(254,52,14)" rx="2" ry="2" />
<text  x="574.26" y="1839.5" >f..</text>
</g>
<g >
<title>cql3::statements::select_statement::get_limit (2 samples, 0.04%)</title><rect x="1092.3" y="1845" width="0.4" height="15.0" fill="rgb(235,175,9)" rx="2" ry="2" />
<text  x="1095.30" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1365" width="0.3" height="15.0" fill="rgb(228,84,27)" rx="2" ry="2" />
<text  x="13.44" y="1375.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (2 samples, 0.04%)</title><rect x="132.8" y="1877" width="0.5" height="15.0" fill="rgb(231,155,12)" rx="2" ry="2" />
<text  x="135.83" y="1887.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (1 samples, 0.02%)</title><rect x="300.2" y="1765" width="0.3" height="15.0" fill="rgb(214,24,23)" rx="2" ry="2" />
<text  x="303.25" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (1 samples, 0.02%)</title><rect x="832.7" y="1845" width="0.2" height="15.0" fill="rgb(246,27,23)" rx="2" ry="2" />
<text  x="835.66" y="1855.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="10.2" y="2021" width="0.2" height="15.0" fill="rgb(246,84,30)" rx="2" ry="2" />
<text  x="13.22" y="2031.5" ></text>
</g>
<g >
<title>seastar::memory::stats (5 samples, 0.09%)</title><rect x="192.3" y="1669" width="1.1" height="15.0" fill="rgb(254,9,12)" rx="2" ry="2" />
<text  x="195.28" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.04%)</title><rect x="62.2" y="1733" width="0.5" height="15.0" fill="rgb(216,160,54)" rx="2" ry="2" />
<text  x="65.24" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="43.9" y="1749" width="0.2" height="15.0" fill="rgb(218,0,38)" rx="2" ry="2" />
<text  x="46.88" y="1759.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="811.2" y="1749" width="0.3" height="15.0" fill="rgb(249,120,38)" rx="2" ry="2" />
<text  x="814.24" y="1759.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1187.4" y="229" width="0.2" height="15.0" fill="rgb(245,93,36)" rx="2" ry="2" />
<text  x="1190.38" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (124 samples, 2.30%)</title><rect x="215.4" y="1557" width="27.1" height="15.0" fill="rgb(220,88,9)" rx="2" ry="2" />
<text  x="218.45" y="1567.5" >c..</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (2 samples, 0.04%)</title><rect x="701.7" y="1877" width="0.5" height="15.0" fill="rgb(228,4,49)" rx="2" ry="2" />
<text  x="704.74" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="28.4" y="1685" width="0.6" height="15.0" fill="rgb(244,151,18)" rx="2" ry="2" />
<text  x="31.36" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="837.7" y="1845" width="0.2" height="15.0" fill="rgb(252,139,2)" rx="2" ry="2" />
<text  x="840.68" y="1855.5" ></text>
</g>
<g >
<title>std::locale::_S_initialize (1 samples, 0.02%)</title><rect x="81.9" y="2005" width="0.2" height="15.0" fill="rgb(237,200,31)" rx="2" ry="2" />
<text  x="84.91" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="17.4" y="1957" width="0.2" height="15.0" fill="rgb(212,123,40)" rx="2" ry="2" />
<text  x="20.43" y="1967.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (2 samples, 0.04%)</title><rect x="553.3" y="1765" width="0.5" height="15.0" fill="rgb(253,164,6)" rx="2" ry="2" />
<text  x="556.34" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="470.7" y="1653" width="0.9" height="15.0" fill="rgb(223,84,38)" rx="2" ry="2" />
<text  x="473.72" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="603.2" y="1813" width="0.2" height="15.0" fill="rgb(239,178,33)" rx="2" ry="2" />
<text  x="606.17" y="1823.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="862.4" y="1749" width="0.2" height="15.0" fill="rgb(221,71,10)" rx="2" ry="2" />
<text  x="865.38" y="1759.5" ></text>
</g>
<g >
<title>service::storage_proxy::register_response_handler (1 samples, 0.02%)</title><rect x="1132.7" y="1621" width="0.3" height="15.0" fill="rgb(252,30,42)" rx="2" ry="2" />
<text  x="1135.74" y="1631.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (1 samples, 0.02%)</title><rect x="75.3" y="1797" width="0.3" height="15.0" fill="rgb(249,190,15)" rx="2" ry="2" />
<text  x="78.35" y="1807.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (43 samples, 0.80%)</title><rect x="1124.7" y="1829" width="9.3" height="15.0" fill="rgb(236,16,46)" rx="2" ry="2" />
<text  x="1127.65" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="614.8" y="1861" width="0.2" height="15.0" fill="rgb(209,32,46)" rx="2" ry="2" />
<text  x="617.75" y="1871.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="1187.4" y="149" width="0.2" height="15.0" fill="rgb(211,18,19)" rx="2" ry="2" />
<text  x="1190.38" y="159.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.02%)</title><rect x="100.0" y="1797" width="0.3" height="15.0" fill="rgb(231,198,33)" rx="2" ry="2" />
<text  x="103.05" y="1807.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.09%)</title><rect x="47.6" y="1733" width="1.1" height="15.0" fill="rgb(208,154,17)" rx="2" ry="2" />
<text  x="50.59" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.02%)</title><rect x="53.1" y="1717" width="0.2" height="15.0" fill="rgb(240,88,29)" rx="2" ry="2" />
<text  x="56.06" y="1727.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="522.3" y="1685" width="0.2" height="15.0" fill="rgb(219,220,50)" rx="2" ry="2" />
<text  x="525.30" y="1695.5" ></text>
</g>
<g >
<title>db::schema_tables::fill_column_info (1 samples, 0.02%)</title><rect x="100.3" y="1829" width="0.2" height="15.0" fill="rgb(216,156,43)" rx="2" ry="2" />
<text  x="103.26" y="1839.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.02%)</title><rect x="59.2" y="1733" width="0.2" height="15.0" fill="rgb(231,220,43)" rx="2" ry="2" />
<text  x="62.18" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="855.6" y="1829" width="0.4" height="15.0" fill="rgb(227,120,16)" rx="2" ry="2" />
<text  x="858.60" y="1839.5" ></text>
</g>
<g >
<title>database::find_keyspace (20 samples, 0.37%)</title><rect x="1048.4" y="1765" width="4.3" height="15.0" fill="rgb(223,140,9)" rx="2" ry="2" />
<text  x="1051.37" y="1775.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="791.6" y="1653" width="0.2" height="15.0" fill="rgb(213,7,20)" rx="2" ry="2" />
<text  x="794.57" y="1663.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="57.2" y="1509" width="0.2" height="15.0" fill="rgb(250,128,14)" rx="2" ry="2" />
<text  x="60.21" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="203.6" y="1605" width="0.5" height="15.0" fill="rgb(243,150,30)" rx="2" ry="2" />
<text  x="206.64" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.07%)</title><rect x="861.1" y="1925" width="0.8" height="15.0" fill="rgb(211,87,24)" rx="2" ry="2" />
<text  x="864.07" y="1935.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (1 samples, 0.02%)</title><rect x="833.3" y="1845" width="0.2" height="15.0" fill="rgb(208,11,25)" rx="2" ry="2" />
<text  x="836.31" y="1855.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="201.0" y="1605" width="0.9" height="15.0" fill="rgb(230,170,1)" rx="2" ry="2" />
<text  x="204.02" y="1615.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (1 samples, 0.02%)</title><rect x="10.4" y="117" width="0.3" height="15.0" fill="rgb(243,187,53)" rx="2" ry="2" />
<text  x="13.44" y="127.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::create_clustering_ranges (2 samples, 0.04%)</title><rect x="866.8" y="1813" width="0.4" height="15.0" fill="rgb(251,212,43)" rx="2" ry="2" />
<text  x="869.75" y="1823.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="905.9" y="1733" width="1.3" height="15.0" fill="rgb(254,51,21)" rx="2" ry="2" />
<text  x="908.87" y="1743.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (194 samples, 3.59%)</title><rect x="212.8" y="1605" width="42.4" height="15.0" fill="rgb(252,34,50)" rx="2" ry="2" />
<text  x="215.82" y="1615.5" >mut..</text>
</g>
<g >
<title>service::storage_service::join_cluster (1 samples, 0.02%)</title><rect x="10.7" y="1957" width="0.2" height="15.0" fill="rgb(238,150,24)" rx="2" ry="2" />
<text  x="13.66" y="1967.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (3 samples, 0.06%)</title><rect x="293.0" y="1701" width="0.7" height="15.0" fill="rgb(219,119,40)" rx="2" ry="2" />
<text  x="296.03" y="1711.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (3 samples, 0.06%)</title><rect x="809.9" y="1701" width="0.7" height="15.0" fill="rgb(253,83,17)" rx="2" ry="2" />
<text  x="812.93" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="626.1" y="1845" width="0.2" height="15.0" fill="rgb(213,113,41)" rx="2" ry="2" />
<text  x="629.12" y="1855.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (6 samples, 0.11%)</title><rect x="695.4" y="1925" width="1.3" height="15.0" fill="rgb(205,204,16)" rx="2" ry="2" />
<text  x="698.40" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1493" width="0.3" height="15.0" fill="rgb(222,60,14)" rx="2" ry="2" />
<text  x="13.44" y="1503.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (1 samples, 0.02%)</title><rect x="204.1" y="1621" width="0.2" height="15.0" fill="rgb(219,40,0)" rx="2" ry="2" />
<text  x="207.08" y="1631.5" ></text>
</g>
<g >
<title>auth::resource::resource (4 samples, 0.07%)</title><rect x="774.3" y="1797" width="0.9" height="15.0" fill="rgb(247,124,14)" rx="2" ry="2" />
<text  x="777.30" y="1807.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="671.4" y="1909" width="0.2" height="15.0" fill="rgb(215,81,28)" rx="2" ry="2" />
<text  x="674.36" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="937.3" y="1813" width="0.5" height="15.0" fill="rgb(207,170,49)" rx="2" ry="2" />
<text  x="940.35" y="1823.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier, false&gt;::make&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const&amp;, seastar::shared_ptr&lt;abstract_type const&gt; &gt; (1 samples, 0.02%)</title><rect x="100.9" y="1765" width="0.2" height="15.0" fill="rgb(238,16,52)" rx="2" ry="2" />
<text  x="103.92" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="627.6" y="1861" width="0.3" height="15.0" fill="rgb(250,96,4)" rx="2" ry="2" />
<text  x="630.65" y="1871.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::selection::selection const&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="95.9" y="1893" width="0.4" height="15.0" fill="rgb(219,53,48)" rx="2" ry="2" />
<text  x="98.89" y="1903.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="850.8" y="1765" width="0.2" height="15.0" fill="rgb(207,49,29)" rx="2" ry="2" />
<text  x="853.80" y="1775.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (2 samples, 0.04%)</title><rect x="798.8" y="1557" width="0.4" height="15.0" fill="rgb(209,178,1)" rx="2" ry="2" />
<text  x="801.78" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="10.7" y="1941" width="0.2" height="15.0" fill="rgb(249,200,42)" rx="2" ry="2" />
<text  x="13.66" y="1951.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (1 samples, 0.02%)</title><rect x="863.0" y="1893" width="0.3" height="15.0" fill="rgb(230,13,30)" rx="2" ry="2" />
<text  x="866.04" y="1903.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="927.7" y="1813" width="0.5" height="15.0" fill="rgb(212,30,35)" rx="2" ry="2" />
<text  x="930.73" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1029" width="2.9" height="15.0" fill="rgb(212,130,20)" rx="2" ry="2" />
<text  x="1189.94" y="1039.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (18 samples, 0.33%)</title><rect x="736.7" y="1845" width="3.9" height="15.0" fill="rgb(215,46,18)" rx="2" ry="2" />
<text  x="739.71" y="1855.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (1 samples, 0.02%)</title><rect x="1168.1" y="1877" width="0.3" height="15.0" fill="rgb(216,26,50)" rx="2" ry="2" />
<text  x="1171.14" y="1887.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="526.5" y="1621" width="0.4" height="15.0" fill="rgb(229,207,42)" rx="2" ry="2" />
<text  x="529.45" y="1631.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.06%)</title><rect x="601.9" y="1813" width="0.6" height="15.0" fill="rgb(222,53,12)" rx="2" ry="2" />
<text  x="604.86" y="1823.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="578.5" y="1701" width="0.2" height="15.0" fill="rgb(212,163,48)" rx="2" ry="2" />
<text  x="581.47" y="1711.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (47 samples, 0.87%)</title><rect x="1019.5" y="1653" width="10.3" height="15.0" fill="rgb(206,202,37)" rx="2" ry="2" />
<text  x="1022.52" y="1663.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (5 samples, 0.09%)</title><rect x="802.7" y="1573" width="1.1" height="15.0" fill="rgb(247,9,24)" rx="2" ry="2" />
<text  x="805.71" y="1583.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (2 samples, 0.04%)</title><rect x="442.1" y="1701" width="0.4" height="15.0" fill="rgb(249,54,46)" rx="2" ry="2" />
<text  x="445.09" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="214.8" y="1557" width="0.2" height="15.0" fill="rgb(226,137,10)" rx="2" ry="2" />
<text  x="217.79" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="24.9" y="1685" width="0.2" height="15.0" fill="rgb(251,21,30)" rx="2" ry="2" />
<text  x="27.86" y="1695.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (223 samples, 4.13%)</title><rect x="210.6" y="1621" width="48.8" height="15.0" fill="rgb(248,127,7)" rx="2" ry="2" />
<text  x="213.64" y="1631.5" >part..</text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;frozen_mutation&gt;::dispose (1 samples, 0.02%)</title><rect x="720.1" y="1861" width="0.2" height="15.0" fill="rgb(230,214,43)" rx="2" ry="2" />
<text  x="723.10" y="1871.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (2 samples, 0.04%)</title><rect x="422.2" y="1605" width="0.4" height="15.0" fill="rgb(245,204,39)" rx="2" ry="2" />
<text  x="425.20" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1117.7" y="1861" width="0.2" height="15.0" fill="rgb(243,204,5)" rx="2" ry="2" />
<text  x="1120.66" y="1871.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt; (2 samples, 0.04%)</title><rect x="804.5" y="1685" width="0.4" height="15.0" fill="rgb(238,167,29)" rx="2" ry="2" />
<text  x="807.46" y="1695.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.02%)</title><rect x="823.3" y="1749" width="0.2" height="15.0" fill="rgb(239,65,52)" rx="2" ry="2" />
<text  x="826.26" y="1759.5" ></text>
</g>
<g >
<title>seastar::gate::enter (2 samples, 0.04%)</title><rect x="1033.5" y="1653" width="0.4" height="15.0" fill="rgb(221,1,50)" rx="2" ry="2" />
<text  x="1036.51" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (2 samples, 0.04%)</title><rect x="287.1" y="1653" width="0.5" height="15.0" fill="rgb(219,51,8)" rx="2" ry="2" />
<text  x="290.13" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="489.3" y="1733" width="0.2" height="15.0" fill="rgb(216,113,31)" rx="2" ry="2" />
<text  x="492.30" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="617.6" y="1829" width="0.6" height="15.0" fill="rgb(241,5,41)" rx="2" ry="2" />
<text  x="620.59" y="1839.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.06%)</title><rect x="800.3" y="1541" width="0.7" height="15.0" fill="rgb(219,122,37)" rx="2" ry="2" />
<text  x="803.31" y="1551.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (13 samples, 0.24%)</title><rect x="1049.7" y="1733" width="2.8" height="15.0" fill="rgb(227,185,50)" rx="2" ry="2" />
<text  x="1052.69" y="1743.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (5 samples, 0.09%)</title><rect x="782.4" y="1733" width="1.1" height="15.0" fill="rgb(214,169,28)" rx="2" ry="2" />
<text  x="785.39" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.02%)</title><rect x="548.5" y="1717" width="0.2" height="15.0" fill="rgb(222,188,22)" rx="2" ry="2" />
<text  x="551.53" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="985.2" y="1765" width="0.2" height="15.0" fill="rgb(247,71,30)" rx="2" ry="2" />
<text  x="988.21" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (12 samples, 0.22%)</title><rect x="905.4" y="1749" width="2.7" height="15.0" fill="rgb(214,161,38)" rx="2" ry="2" />
<text  x="908.44" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (2 samples, 0.04%)</title><rect x="1103.5" y="1829" width="0.4" height="15.0" fill="rgb(239,174,36)" rx="2" ry="2" />
<text  x="1106.45" y="1839.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (1 samples, 0.02%)</title><rect x="864.8" y="1717" width="0.2" height="15.0" fill="rgb(242,177,19)" rx="2" ry="2" />
<text  x="867.78" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (13 samples, 0.24%)</title><rect x="151.0" y="1845" width="2.8" height="15.0" fill="rgb(251,45,17)" rx="2" ry="2" />
<text  x="153.97" y="1855.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (1 samples, 0.02%)</title><rect x="782.8" y="1717" width="0.2" height="15.0" fill="rgb(249,94,36)" rx="2" ry="2" />
<text  x="785.82" y="1727.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.11%)</title><rect x="149.2" y="1845" width="1.3" height="15.0" fill="rgb(214,118,13)" rx="2" ry="2" />
<text  x="152.22" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::rows_position&gt; (1 samples, 0.02%)</title><rect x="1187.6" y="53" width="0.2" height="15.0" fill="rgb(216,66,35)" rx="2" ry="2" />
<text  x="1190.60" y="63.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="810.6" y="1733" width="0.2" height="15.0" fill="rgb(207,55,32)" rx="2" ry="2" />
<text  x="813.58" y="1743.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (1 samples, 0.02%)</title><rect x="566.2" y="1813" width="0.3" height="15.0" fill="rgb(245,51,11)" rx="2" ry="2" />
<text  x="569.23" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (2 samples, 0.04%)</title><rect x="23.6" y="1829" width="0.4" height="15.0" fill="rgb(205,148,16)" rx="2" ry="2" />
<text  x="26.55" y="1839.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt; (2 samples, 0.04%)</title><rect x="1114.6" y="1845" width="0.4" height="15.0" fill="rgb(209,66,52)" rx="2" ry="2" />
<text  x="1117.60" y="1855.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (11 samples, 0.20%)</title><rect x="12.4" y="2005" width="2.4" height="15.0" fill="rgb(219,66,48)" rx="2" ry="2" />
<text  x="15.40" y="2015.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.06%)</title><rect x="57.6" y="1621" width="0.7" height="15.0" fill="rgb(235,182,20)" rx="2" ry="2" />
<text  x="60.65" y="1631.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (28 samples, 0.52%)</title><rect x="1118.1" y="1781" width="6.1" height="15.0" fill="rgb(220,57,46)" rx="2" ry="2" />
<text  x="1121.09" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="814.7" y="1749" width="0.3" height="15.0" fill="rgb(210,180,31)" rx="2" ry="2" />
<text  x="817.73" y="1759.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="18.3" y="1941" width="0.2" height="15.0" fill="rgb(236,124,35)" rx="2" ry="2" />
<text  x="21.31" y="1951.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="562.3" y="1781" width="0.9" height="15.0" fill="rgb(245,223,22)" rx="2" ry="2" />
<text  x="565.30" y="1791.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (3 samples, 0.06%)</title><rect x="525.1" y="1637" width="0.7" height="15.0" fill="rgb(205,106,46)" rx="2" ry="2" />
<text  x="528.14" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="62.0" y="1701" width="0.2" height="15.0" fill="rgb(210,214,3)" rx="2" ry="2" />
<text  x="65.02" y="1711.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="47.6" y="1573" width="0.2" height="15.0" fill="rgb(252,155,23)" rx="2" ry="2" />
<text  x="50.59" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (2 samples, 0.04%)</title><rect x="565.1" y="1685" width="0.5" height="15.0" fill="rgb(241,27,9)" rx="2" ry="2" />
<text  x="568.14" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="856.5" y="1893" width="0.2" height="15.0" fill="rgb(236,207,25)" rx="2" ry="2" />
<text  x="859.48" y="1903.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (3 samples, 0.06%)</title><rect x="1130.3" y="1573" width="0.7" height="15.0" fill="rgb(249,53,27)" rx="2" ry="2" />
<text  x="1133.33" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="1189.6" y="197" width="0.2" height="15.0" fill="rgb(222,151,40)" rx="2" ry="2" />
<text  x="1192.56" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="77.5" y="1845" width="0.3" height="15.0" fill="rgb(244,159,5)" rx="2" ry="2" />
<text  x="80.53" y="1855.5" ></text>
</g>
<g >
<title>dht::tri_compare (7 samples, 0.13%)</title><rect x="502.2" y="1685" width="1.5" height="15.0" fill="rgb(217,208,41)" rx="2" ry="2" />
<text  x="505.19" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (2 samples, 0.04%)</title><rect x="691.5" y="1877" width="0.4" height="15.0" fill="rgb(226,195,15)" rx="2" ry="2" />
<text  x="694.47" y="1887.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="618.5" y="1861" width="0.4" height="15.0" fill="rgb(248,9,14)" rx="2" ry="2" />
<text  x="621.47" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (2 samples, 0.04%)</title><rect x="565.1" y="1701" width="0.5" height="15.0" fill="rgb(231,147,18)" rx="2" ry="2" />
<text  x="568.14" y="1711.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="712.2" y="1861" width="0.2" height="15.0" fill="rgb(208,159,18)" rx="2" ry="2" />
<text  x="715.23" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (1 samples, 0.02%)</title><rect x="713.3" y="1845" width="0.2" height="15.0" fill="rgb(210,108,3)" rx="2" ry="2" />
<text  x="716.32" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="48.7" y="1749" width="0.2" height="15.0" fill="rgb(242,223,53)" rx="2" ry="2" />
<text  x="51.68" y="1759.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (1 samples, 0.02%)</title><rect x="614.3" y="1861" width="0.2" height="15.0" fill="rgb(230,87,34)" rx="2" ry="2" />
<text  x="617.32" y="1871.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (2 samples, 0.04%)</title><rect x="335.9" y="1621" width="0.4" height="15.0" fill="rgb(220,93,25)" rx="2" ry="2" />
<text  x="338.87" y="1631.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="769.9" y="1797" width="0.7" height="15.0" fill="rgb(250,125,36)" rx="2" ry="2" />
<text  x="772.93" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1653" width="2.9" height="15.0" fill="rgb(252,154,38)" rx="2" ry="2" />
<text  x="1189.94" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="52.8" y="1669" width="0.3" height="15.0" fill="rgb(237,99,16)" rx="2" ry="2" />
<text  x="55.84" y="1679.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (1 samples, 0.02%)</title><rect x="789.4" y="1685" width="0.2" height="15.0" fill="rgb(234,54,18)" rx="2" ry="2" />
<text  x="792.38" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="63.5" y="1717" width="0.3" height="15.0" fill="rgb(205,74,53)" rx="2" ry="2" />
<text  x="66.55" y="1727.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::validate (1 samples, 0.02%)</title><rect x="22.0" y="1893" width="0.2" height="15.0" fill="rgb(242,155,49)" rx="2" ry="2" />
<text  x="25.02" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (3 samples, 0.06%)</title><rect x="249.8" y="1509" width="0.6" height="15.0" fill="rgb(240,150,0)" rx="2" ry="2" />
<text  x="252.76" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="48.2" y="1637" width="0.5" height="15.0" fill="rgb(253,175,12)" rx="2" ry="2" />
<text  x="51.25" y="1647.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.06%)</title><rect x="42.3" y="1765" width="0.7" height="15.0" fill="rgb(246,61,14)" rx="2" ry="2" />
<text  x="45.35" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="45.0" y="1733" width="0.2" height="15.0" fill="rgb(225,121,5)" rx="2" ry="2" />
<text  x="47.97" y="1743.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="47.6" y="1701" width="0.2" height="15.0" fill="rgb(244,155,19)" rx="2" ry="2" />
<text  x="50.59" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (2 samples, 0.04%)</title><rect x="238.8" y="1509" width="0.5" height="15.0" fill="rgb(242,173,13)" rx="2" ry="2" />
<text  x="241.83" y="1519.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="1051.4" y="1685" width="0.3" height="15.0" fill="rgb(208,155,46)" rx="2" ry="2" />
<text  x="1054.43" y="1695.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (15 samples, 0.28%)</title><rect x="333.0" y="1669" width="3.3" height="15.0" fill="rgb(215,13,35)" rx="2" ry="2" />
<text  x="336.03" y="1679.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="578.5" y="1717" width="0.2" height="15.0" fill="rgb(250,36,22)" rx="2" ry="2" />
<text  x="581.47" y="1727.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; (1 samples, 0.02%)</title><rect x="51.5" y="1589" width="0.2" height="15.0" fill="rgb(215,83,51)" rx="2" ry="2" />
<text  x="54.53" y="1599.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;flat_mutation_reader&gt;::allocate (2 samples, 0.04%)</title><rect x="460.9" y="1765" width="0.4" height="15.0" fill="rgb(252,18,47)" rx="2" ry="2" />
<text  x="463.89" y="1775.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="617.6" y="1845" width="0.6" height="15.0" fill="rgb(251,229,53)" rx="2" ry="2" />
<text  x="620.59" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="74.5" y="1701" width="0.2" height="15.0" fill="rgb(249,30,4)" rx="2" ry="2" />
<text  x="77.47" y="1711.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (2 samples, 0.04%)</title><rect x="752.2" y="1733" width="0.5" height="15.0" fill="rgb(234,172,53)" rx="2" ry="2" />
<text  x="755.23" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1813" width="0.3" height="15.0" fill="rgb(252,35,37)" rx="2" ry="2" />
<text  x="13.44" y="1823.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="443.8" y="1685" width="0.5" height="15.0" fill="rgb(221,89,19)" rx="2" ry="2" />
<text  x="446.84" y="1695.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (657 samples, 12.17%)</title><rect x="948.7" y="1845" width="143.6" height="15.0" fill="rgb(219,49,37)" rx="2" ry="2" />
<text  x="951.71" y="1855.5" >cql3::statements::..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1135.4" y="1893" width="0.2" height="15.0" fill="rgb(233,21,52)" rx="2" ry="2" />
<text  x="1138.36" y="1903.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (117 samples, 2.17%)</title><rect x="1011.4" y="1701" width="25.6" height="15.0" fill="rgb(254,229,32)" rx="2" ry="2" />
<text  x="1014.44" y="1711.5" >s..</text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1105.9" y="1845" width="0.2" height="15.0" fill="rgb(208,66,10)" rx="2" ry="2" />
<text  x="1108.85" y="1855.5" ></text>
</g>
<g >
<title>seastar::gate::enter (1 samples, 0.02%)</title><rect x="1033.1" y="1669" width="0.2" height="15.0" fill="rgb(250,223,46)" rx="2" ry="2" />
<text  x="1036.07" y="1679.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1733" width="2.9" height="15.0" fill="rgb(210,133,13)" rx="2" ry="2" />
<text  x="1189.94" y="1743.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (2 samples, 0.04%)</title><rect x="1187.8" y="133" width="0.5" height="15.0" fill="rgb(214,153,38)" rx="2" ry="2" />
<text  x="1190.81" y="143.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="805" width="2.9" height="15.0" fill="rgb(223,176,37)" rx="2" ry="2" />
<text  x="1189.94" y="815.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.02%)</title><rect x="52.8" y="1621" width="0.3" height="15.0" fill="rgb(254,53,7)" rx="2" ry="2" />
<text  x="55.84" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="567.8" y="1829" width="0.4" height="15.0" fill="rgb(250,10,22)" rx="2" ry="2" />
<text  x="570.76" y="1839.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (9 samples, 0.17%)</title><rect x="53.9" y="1669" width="2.0" height="15.0" fill="rgb(232,103,20)" rx="2" ry="2" />
<text  x="56.93" y="1679.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (33 samples, 0.61%)</title><rect x="148.6" y="1861" width="7.2" height="15.0" fill="rgb(210,94,1)" rx="2" ry="2" />
<text  x="151.57" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="57.2" y="1573" width="0.4" height="15.0" fill="rgb(223,59,38)" rx="2" ry="2" />
<text  x="60.21" y="1583.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.02%)</title><rect x="660.7" y="1877" width="0.2" height="15.0" fill="rgb(245,63,6)" rx="2" ry="2" />
<text  x="663.65" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="157.1" y="1845" width="0.2" height="15.0" fill="rgb(229,92,5)" rx="2" ry="2" />
<text  x="160.09" y="1855.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="993.7" y="1749" width="0.5" height="15.0" fill="rgb(205,70,23)" rx="2" ry="2" />
<text  x="996.73" y="1759.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (2 samples, 0.04%)</title><rect x="196.2" y="1669" width="0.4" height="15.0" fill="rgb(218,126,54)" rx="2" ry="2" />
<text  x="199.21" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.20%)</title><rect x="1039.0" y="1653" width="2.4" height="15.0" fill="rgb(248,200,50)" rx="2" ry="2" />
<text  x="1041.98" y="1663.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (2 samples, 0.04%)</title><rect x="866.8" y="1765" width="0.4" height="15.0" fill="rgb(226,112,54)" rx="2" ry="2" />
<text  x="869.75" y="1775.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (3 samples, 0.06%)</title><rect x="828.5" y="1733" width="0.7" height="15.0" fill="rgb(206,182,28)" rx="2" ry="2" />
<text  x="831.50" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="625.5" y="1797" width="0.2" height="15.0" fill="rgb(216,9,46)" rx="2" ry="2" />
<text  x="628.46" y="1807.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (1 samples, 0.02%)</title><rect x="979.1" y="1781" width="0.2" height="15.0" fill="rgb(214,7,31)" rx="2" ry="2" />
<text  x="982.09" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="53.7" y="1525" width="0.2" height="15.0" fill="rgb(228,18,17)" rx="2" ry="2" />
<text  x="56.71" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (2 samples, 0.04%)</title><rect x="473.6" y="1701" width="0.4" height="15.0" fill="rgb(250,74,9)" rx="2" ry="2" />
<text  x="476.56" y="1711.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (3 samples, 0.06%)</title><rect x="822.8" y="1797" width="0.7" height="15.0" fill="rgb(212,181,52)" rx="2" ry="2" />
<text  x="825.82" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="448.2" y="1781" width="0.2" height="15.0" fill="rgb(245,103,40)" rx="2" ry="2" />
<text  x="451.21" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="62.9" y="1701" width="0.2" height="15.0" fill="rgb(205,160,34)" rx="2" ry="2" />
<text  x="65.89" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (42 samples, 0.78%)</title><rect x="1124.9" y="1781" width="9.1" height="15.0" fill="rgb(222,197,21)" rx="2" ry="2" />
<text  x="1127.87" y="1791.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (1 samples, 0.02%)</title><rect x="307.9" y="1701" width="0.2" height="15.0" fill="rgb(222,42,39)" rx="2" ry="2" />
<text  x="310.90" y="1711.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (4 samples, 0.07%)</title><rect x="573.0" y="1765" width="0.9" height="15.0" fill="rgb(213,133,20)" rx="2" ry="2" />
<text  x="576.01" y="1775.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (5 samples, 0.09%)</title><rect x="830.3" y="1749" width="1.0" height="15.0" fill="rgb(244,103,18)" rx="2" ry="2" />
<text  x="833.25" y="1759.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (8 samples, 0.15%)</title><rect x="738.0" y="1749" width="1.8" height="15.0" fill="rgb(249,205,46)" rx="2" ry="2" />
<text  x="741.02" y="1759.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (1 samples, 0.02%)</title><rect x="1089.0" y="1797" width="0.2" height="15.0" fill="rgb(239,57,23)" rx="2" ry="2" />
<text  x="1092.03" y="1807.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (1 samples, 0.02%)</title><rect x="1097.1" y="1797" width="0.2" height="15.0" fill="rgb(250,89,40)" rx="2" ry="2" />
<text  x="1100.11" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (57 samples, 1.06%)</title><rect x="892.3" y="1749" width="12.5" height="15.0" fill="rgb(242,150,7)" rx="2" ry="2" />
<text  x="895.32" y="1759.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="520.8" y="1701" width="0.2" height="15.0" fill="rgb(245,112,22)" rx="2" ry="2" />
<text  x="523.77" y="1711.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (2 samples, 0.04%)</title><rect x="1187.8" y="229" width="0.5" height="15.0" fill="rgb(227,30,44)" rx="2" ry="2" />
<text  x="1190.81" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="526.7" y="1605" width="0.2" height="15.0" fill="rgb(244,145,50)" rx="2" ry="2" />
<text  x="529.67" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="971.9" y="1765" width="1.7" height="15.0" fill="rgb(209,186,53)" rx="2" ry="2" />
<text  x="974.88" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (10 samples, 0.19%)</title><rect x="26.8" y="1701" width="2.2" height="15.0" fill="rgb(249,196,33)" rx="2" ry="2" />
<text  x="29.83" y="1711.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="1099.1" y="1813" width="0.2" height="15.0" fill="rgb(226,91,26)" rx="2" ry="2" />
<text  x="1102.08" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,419 samples, 44.80%)</title><rect x="103.8" y="1909" width="528.7" height="15.0" fill="rgb(221,117,12)" rx="2" ry="2" />
<text  x="106.76" y="1919.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1189.3" y="181" width="0.3" height="15.0" fill="rgb(219,228,7)" rx="2" ry="2" />
<text  x="1192.34" y="191.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (207 samples, 3.83%)</title><rect x="24.2" y="1829" width="45.2" height="15.0" fill="rgb(223,22,52)" rx="2" ry="2" />
<text  x="27.21" y="1839.5" >cql3..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="17.6" y="1957" width="0.3" height="15.0" fill="rgb(216,18,6)" rx="2" ry="2" />
<text  x="20.65" y="1967.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (5 samples, 0.09%)</title><rect x="659.1" y="1845" width="1.1" height="15.0" fill="rgb(235,91,53)" rx="2" ry="2" />
<text  x="662.12" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="43.2" y="1685" width="0.2" height="15.0" fill="rgb(225,38,34)" rx="2" ry="2" />
<text  x="46.22" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="1115.3" y="1845" width="0.2" height="15.0" fill="rgb(229,64,18)" rx="2" ry="2" />
<text  x="1118.25" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="17.4" y="1861" width="0.2" height="15.0" fill="rgb(254,23,0)" rx="2" ry="2" />
<text  x="20.43" y="1871.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (2 samples, 0.04%)</title><rect x="627.2" y="1829" width="0.4" height="15.0" fill="rgb(209,70,27)" rx="2" ry="2" />
<text  x="630.21" y="1839.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (29 samples, 0.54%)</title><rect x="985.4" y="1765" width="6.4" height="15.0" fill="rgb(228,151,49)" rx="2" ry="2" />
<text  x="988.43" y="1775.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (2 samples, 0.04%)</title><rect x="120.6" y="1829" width="0.4" height="15.0" fill="rgb(253,211,51)" rx="2" ry="2" />
<text  x="123.59" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (2 samples, 0.04%)</title><rect x="538.3" y="1749" width="0.4" height="15.0" fill="rgb(246,44,28)" rx="2" ry="2" />
<text  x="541.26" y="1759.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1 samples, 0.02%)</title><rect x="78.6" y="1813" width="0.2" height="15.0" fill="rgb(226,4,52)" rx="2" ry="2" />
<text  x="81.63" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (1 samples, 0.02%)</title><rect x="615.0" y="1861" width="0.2" height="15.0" fill="rgb(234,69,39)" rx="2" ry="2" />
<text  x="617.97" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1333" width="0.3" height="15.0" fill="rgb(236,196,42)" rx="2" ry="2" />
<text  x="13.44" y="1343.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (2 samples, 0.04%)</title><rect x="867.8" y="1717" width="0.5" height="15.0" fill="rgb(236,18,21)" rx="2" ry="2" />
<text  x="870.84" y="1727.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (2 samples, 0.04%)</title><rect x="329.1" y="1685" width="0.4" height="15.0" fill="rgb(214,221,53)" rx="2" ry="2" />
<text  x="332.10" y="1695.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="910.0" y="1781" width="0.2" height="15.0" fill="rgb(212,217,3)" rx="2" ry="2" />
<text  x="913.03" y="1791.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (1 samples, 0.02%)</title><rect x="263.5" y="1541" width="0.2" height="15.0" fill="rgb(244,105,37)" rx="2" ry="2" />
<text  x="266.53" y="1551.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.04%)</title><rect x="62.2" y="1717" width="0.5" height="15.0" fill="rgb(241,19,10)" rx="2" ry="2" />
<text  x="65.24" y="1727.5" ></text>
</g>
<g >
<title>compound_type&lt; (7 samples, 0.13%)</title><rect x="560.3" y="1781" width="1.6" height="15.0" fill="rgb(241,121,4)" rx="2" ry="2" />
<text  x="563.33" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.7" y="165" width="0.2" height="15.0" fill="rgb(208,78,15)" rx="2" ry="2" />
<text  x="1191.69" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="78.2" y="1829" width="0.2" height="15.0" fill="rgb(217,177,20)" rx="2" ry="2" />
<text  x="81.19" y="1839.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (16 samples, 0.30%)</title><rect x="924.2" y="1781" width="3.5" height="15.0" fill="rgb(214,180,7)" rx="2" ry="2" />
<text  x="927.23" y="1791.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="145.5" y="1861" width="0.2" height="15.0" fill="rgb(215,47,21)" rx="2" ry="2" />
<text  x="148.51" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.06%)</title><rect x="92.6" y="1845" width="0.7" height="15.0" fill="rgb(209,5,26)" rx="2" ry="2" />
<text  x="95.62" y="1855.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="201.9" y="1637" width="0.2" height="15.0" fill="rgb(237,88,6)" rx="2" ry="2" />
<text  x="204.89" y="1647.5" ></text>
</g>
<g >
<title>[[vdso]] (20 samples, 0.37%)</title><rect x="1171.9" y="2037" width="4.3" height="15.0" fill="rgb(228,25,25)" rx="2" ry="2" />
<text  x="1174.86" y="2047.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="17.6" y="2005" width="0.3" height="15.0" fill="rgb(222,186,53)" rx="2" ry="2" />
<text  x="20.65" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (6 samples, 0.11%)</title><rect x="1087.7" y="1781" width="1.3" height="15.0" fill="rgb(221,197,49)" rx="2" ry="2" />
<text  x="1090.71" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (2 samples, 0.04%)</title><rect x="1187.8" y="213" width="0.5" height="15.0" fill="rgb(251,164,15)" rx="2" ry="2" />
<text  x="1190.81" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="1034.4" y="1653" width="0.4" height="15.0" fill="rgb(228,188,4)" rx="2" ry="2" />
<text  x="1037.39" y="1663.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="868.9" y="1637" width="0.3" height="15.0" fill="rgb(213,195,3)" rx="2" ry="2" />
<text  x="871.94" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (2 samples, 0.04%)</title><rect x="1187.8" y="245" width="0.5" height="15.0" fill="rgb(210,84,39)" rx="2" ry="2" />
<text  x="1190.81" y="255.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (1 samples, 0.02%)</title><rect x="81.3" y="1813" width="0.2" height="15.0" fill="rgb(252,186,33)" rx="2" ry="2" />
<text  x="84.25" y="1823.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;bplus::data&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="17.9" y="1957" width="0.2" height="15.0" fill="rgb(207,175,52)" rx="2" ry="2" />
<text  x="20.87" y="1967.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (3 samples, 0.06%)</title><rect x="77.3" y="1893" width="0.7" height="15.0" fill="rgb(214,125,43)" rx="2" ry="2" />
<text  x="80.32" y="1903.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="47.6" y="1685" width="0.2" height="15.0" fill="rgb(228,135,9)" rx="2" ry="2" />
<text  x="50.59" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="62.9" y="1669" width="0.2" height="15.0" fill="rgb(239,13,4)" rx="2" ry="2" />
<text  x="65.89" y="1679.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (7 samples, 0.13%)</title><rect x="450.4" y="1845" width="1.5" height="15.0" fill="rgb(249,35,4)" rx="2" ry="2" />
<text  x="453.40" y="1855.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;reader_permit::impl, boost::intrusive::list_node_traits&lt;void*&gt;,  (1 samples, 0.02%)</title><rect x="1031.8" y="1605" width="0.2" height="15.0" fill="rgb(240,136,48)" rx="2" ry="2" />
<text  x="1034.76" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="857.6" y="1845" width="0.6" height="15.0" fill="rgb(244,92,14)" rx="2" ry="2" />
<text  x="860.57" y="1855.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (1 samples, 0.02%)</title><rect x="268.6" y="1685" width="0.2" height="15.0" fill="rgb(239,186,19)" rx="2" ry="2" />
<text  x="271.56" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="47.8" y="1685" width="0.4" height="15.0" fill="rgb(228,211,26)" rx="2" ry="2" />
<text  x="50.81" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (2 samples, 0.04%)</title><rect x="1025.4" y="1557" width="0.5" height="15.0" fill="rgb(205,32,27)" rx="2" ry="2" />
<text  x="1028.43" y="1567.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.20%)</title><rect x="1058.0" y="1749" width="2.4" height="15.0" fill="rgb(249,197,1)" rx="2" ry="2" />
<text  x="1060.99" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="773.2" y="1781" width="0.2" height="15.0" fill="rgb(207,198,44)" rx="2" ry="2" />
<text  x="776.21" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (4 samples, 0.07%)</title><rect x="787.9" y="1653" width="0.8" height="15.0" fill="rgb(239,69,7)" rx="2" ry="2" />
<text  x="790.85" y="1663.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="850.4" y="1749" width="0.2" height="15.0" fill="rgb(236,5,15)" rx="2" ry="2" />
<text  x="853.36" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (111 samples, 2.06%)</title><rect x="41.5" y="1797" width="24.2" height="15.0" fill="rgb(245,215,2)" rx="2" ry="2" />
<text  x="44.47" y="1807.5" >c..</text>
</g>
<g >
<title>seastar::reactor::do_run (4,982 samples, 92.28%)</title><rect x="82.1" y="1957" width="1088.9" height="15.0" fill="rgb(250,12,2)" rx="2" ry="2" />
<text  x="85.12" y="1967.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (9 samples, 0.17%)</title><rect x="545.7" y="1717" width="2.0" height="15.0" fill="rgb(246,179,27)" rx="2" ry="2" />
<text  x="548.69" y="1727.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="21.6" y="1813" width="0.2" height="15.0" fill="rgb(242,227,30)" rx="2" ry="2" />
<text  x="24.58" y="1823.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (7 samples, 0.13%)</title><rect x="819.3" y="1733" width="1.6" height="15.0" fill="rgb(246,155,44)" rx="2" ry="2" />
<text  x="822.32" y="1743.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="698.7" y="1909" width="0.2" height="15.0" fill="rgb(250,42,7)" rx="2" ry="2" />
<text  x="701.68" y="1919.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="124.1" y="1813" width="0.4" height="15.0" fill="rgb(253,223,22)" rx="2" ry="2" />
<text  x="127.09" y="1823.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="265.1" y="1637" width="0.2" height="15.0" fill="rgb(238,103,42)" rx="2" ry="2" />
<text  x="268.06" y="1647.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (3 samples, 0.06%)</title><rect x="1141.5" y="1909" width="0.6" height="15.0" fill="rgb(231,140,31)" rx="2" ry="2" />
<text  x="1144.48" y="1919.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="807.7" y="1701" width="0.3" height="15.0" fill="rgb(238,175,36)" rx="2" ry="2" />
<text  x="810.74" y="1711.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (11 samples, 0.20%)</title><rect x="559.7" y="1813" width="2.4" height="15.0" fill="rgb(207,202,12)" rx="2" ry="2" />
<text  x="562.68" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1189.3" y="165" width="0.3" height="15.0" fill="rgb(248,69,6)" rx="2" ry="2" />
<text  x="1192.34" y="175.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (5 samples, 0.09%)</title><rect x="839.2" y="1845" width="1.1" height="15.0" fill="rgb(215,6,41)" rx="2" ry="2" />
<text  x="842.21" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="729.5" y="1845" width="0.4" height="15.0" fill="rgb(230,39,0)" rx="2" ry="2" />
<text  x="732.50" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::list_users_statement*, std::default_delete&lt;cql3::statements::list_users_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="67.3" y="1781" width="0.2" height="15.0" fill="rgb(215,218,54)" rx="2" ry="2" />
<text  x="70.26" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (2 samples, 0.04%)</title><rect x="478.6" y="1685" width="0.4" height="15.0" fill="rgb(233,138,40)" rx="2" ry="2" />
<text  x="481.59" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (1 samples, 0.02%)</title><rect x="696.5" y="1749" width="0.2" height="15.0" fill="rgb(211,124,1)" rx="2" ry="2" />
<text  x="699.49" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1 samples, 0.02%)</title><rect x="1188.7" y="69" width="0.2" height="15.0" fill="rgb(234,163,29)" rx="2" ry="2" />
<text  x="1191.69" y="79.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="549" width="2.9" height="15.0" fill="rgb(254,178,44)" rx="2" ry="2" />
<text  x="1189.94" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (1 samples, 0.02%)</title><rect x="852.8" y="1813" width="0.2" height="15.0" fill="rgb(234,37,37)" rx="2" ry="2" />
<text  x="855.76" y="1823.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (3 samples, 0.06%)</title><rect x="1170.3" y="1893" width="0.7" height="15.0" fill="rgb(208,132,53)" rx="2" ry="2" />
<text  x="1173.33" y="1903.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (1 samples, 0.02%)</title><rect x="813.6" y="1733" width="0.3" height="15.0" fill="rgb(231,159,32)" rx="2" ry="2" />
<text  x="816.64" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mWS (2 samples, 0.04%)</title><rect x="38.8" y="1685" width="0.5" height="15.0" fill="rgb(208,69,22)" rx="2" ry="2" />
<text  x="41.85" y="1695.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (1 samples, 0.02%)</title><rect x="1112.8" y="1845" width="0.3" height="15.0" fill="rgb(222,173,3)" rx="2" ry="2" />
<text  x="1115.85" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (3 samples, 0.06%)</title><rect x="1148.7" y="1877" width="0.6" height="15.0" fill="rgb(234,160,30)" rx="2" ry="2" />
<text  x="1151.69" y="1887.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1845" width="2.9" height="15.0" fill="rgb(240,177,2)" rx="2" ry="2" />
<text  x="1189.94" y="1855.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (2 samples, 0.04%)</title><rect x="749.8" y="1797" width="0.5" height="15.0" fill="rgb(226,190,47)" rx="2" ry="2" />
<text  x="752.82" y="1807.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (4 samples, 0.07%)</title><rect x="945.2" y="1797" width="0.9" height="15.0" fill="rgb(231,48,0)" rx="2" ry="2" />
<text  x="948.21" y="1807.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="17.4" y="1749" width="0.2" height="15.0" fill="rgb(225,33,52)" rx="2" ry="2" />
<text  x="20.43" y="1759.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (3 samples, 0.06%)</title><rect x="1020.6" y="1621" width="0.7" height="15.0" fill="rgb(233,172,10)" rx="2" ry="2" />
<text  x="1023.62" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="862.4" y="1925" width="0.4" height="15.0" fill="rgb(228,127,37)" rx="2" ry="2" />
<text  x="865.38" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="65.3" y="1765" width="0.2" height="15.0" fill="rgb(205,54,38)" rx="2" ry="2" />
<text  x="68.30" y="1775.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.15%)</title><rect x="445.8" y="1797" width="1.8" height="15.0" fill="rgb(227,28,44)" rx="2" ry="2" />
<text  x="448.81" y="1807.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="28.4" y="1637" width="0.6" height="15.0" fill="rgb(231,83,0)" rx="2" ry="2" />
<text  x="31.36" y="1647.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="24.4" y="1765" width="0.5" height="15.0" fill="rgb(240,219,35)" rx="2" ry="2" />
<text  x="27.42" y="1775.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1001.8" y="1717" width="0.2" height="15.0" fill="rgb(222,172,5)" rx="2" ry="2" />
<text  x="1004.82" y="1727.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.7" y="149" width="0.2" height="15.0" fill="rgb(222,170,6)" rx="2" ry="2" />
<text  x="1191.69" y="159.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (3 samples, 0.06%)</title><rect x="941.7" y="1781" width="0.7" height="15.0" fill="rgb(254,133,53)" rx="2" ry="2" />
<text  x="944.72" y="1791.5" ></text>
</g>
<g >
<title>sstring_hash::operator (3 samples, 0.06%)</title><rect x="830.7" y="1733" width="0.6" height="15.0" fill="rgb(213,229,6)" rx="2" ry="2" />
<text  x="833.69" y="1743.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (1 samples, 0.02%)</title><rect x="1188.3" y="117" width="0.2" height="15.0" fill="rgb(212,148,39)" rx="2" ry="2" />
<text  x="1191.25" y="127.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="187.5" y="1653" width="0.2" height="15.0" fill="rgb(208,43,46)" rx="2" ry="2" />
<text  x="190.47" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (8 samples, 0.15%)</title><rect x="470.1" y="1685" width="1.7" height="15.0" fill="rgb(244,105,49)" rx="2" ry="2" />
<text  x="473.07" y="1695.5" ></text>
</g>
<g >
<title>data_value::data_value (1 samples, 0.02%)</title><rect x="99.8" y="1765" width="0.2" height="15.0" fill="rgb(222,20,16)" rx="2" ry="2" />
<text  x="102.83" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="78.8" y="1813" width="0.3" height="15.0" fill="rgb(236,153,34)" rx="2" ry="2" />
<text  x="81.85" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="42.6" y="1653" width="0.2" height="15.0" fill="rgb(209,185,44)" rx="2" ry="2" />
<text  x="45.57" y="1663.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (2 samples, 0.04%)</title><rect x="883.8" y="1845" width="0.4" height="15.0" fill="rgb(253,61,8)" rx="2" ry="2" />
<text  x="886.80" y="1855.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::~single_column_relation (2 samples, 0.04%)</title><rect x="77.3" y="1861" width="0.5" height="15.0" fill="rgb(223,229,17)" rx="2" ry="2" />
<text  x="80.32" y="1871.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1187.2" y="277" width="0.2" height="15.0" fill="rgb(241,139,38)" rx="2" ry="2" />
<text  x="1190.16" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (63 samples, 1.17%)</title><rect x="405.6" y="1605" width="13.8" height="15.0" fill="rgb(222,83,3)" rx="2" ry="2" />
<text  x="408.59" y="1615.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="49.3" y="1589" width="0.5" height="15.0" fill="rgb(244,22,14)" rx="2" ry="2" />
<text  x="52.34" y="1599.5" ></text>
</g>
<g >
<title>ser::set_size&lt;seastar::memory_output_stream&lt;__gnu_cxx::__normal_iterator&lt;seastar::temporary_buffer&lt;char&gt;*, std::vector&lt;seastar::temporary_buffer&lt;char&gt;, std::allocator&lt;seastar::temporary_buffer&lt;char&gt; &gt; &gt; &gt; &gt;, column_mapping&gt; (1 samples, 0.02%)</title><rect x="1123.3" y="1621" width="0.3" height="15.0" fill="rgb(222,190,34)" rx="2" ry="2" />
<text  x="1126.34" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="297.2" y="1749" width="0.4" height="15.0" fill="rgb(216,5,26)" rx="2" ry="2" />
<text  x="300.19" y="1759.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="326.7" y="1669" width="0.2" height="15.0" fill="rgb(237,77,7)" rx="2" ry="2" />
<text  x="329.69" y="1679.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="900.0" y="1685" width="0.2" height="15.0" fill="rgb(207,200,39)" rx="2" ry="2" />
<text  x="902.97" y="1695.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (3 samples, 0.06%)</title><rect x="570.2" y="1845" width="0.6" height="15.0" fill="rgb(215,203,3)" rx="2" ry="2" />
<text  x="573.17" y="1855.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="1052.5" y="1733" width="0.2" height="15.0" fill="rgb(223,16,37)" rx="2" ry="2" />
<text  x="1055.53" y="1743.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="10.4" y="85" width="0.3" height="15.0" fill="rgb(226,172,48)" rx="2" ry="2" />
<text  x="13.44" y="95.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (9 samples, 0.17%)</title><rect x="15.2" y="2005" width="2.0" height="15.0" fill="rgb(225,14,22)" rx="2" ry="2" />
<text  x="18.25" y="2015.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="910.7" y="1765" width="0.4" height="15.0" fill="rgb(236,184,20)" rx="2" ry="2" />
<text  x="913.68" y="1775.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::RuleReturnValue (1 samples, 0.02%)</title><rect x="44.5" y="1765" width="0.3" height="15.0" fill="rgb(247,147,42)" rx="2" ry="2" />
<text  x="47.53" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (1 samples, 0.02%)</title><rect x="660.0" y="1829" width="0.2" height="15.0" fill="rgb(213,42,47)" rx="2" ry="2" />
<text  x="662.99" y="1839.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (14 samples, 0.26%)</title><rect x="236.2" y="1541" width="3.1" height="15.0" fill="rgb(217,73,29)" rx="2" ry="2" />
<text  x="239.21" y="1551.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (50 samples, 0.93%)</title><rect x="840.3" y="1861" width="10.9" height="15.0" fill="rgb(251,209,2)" rx="2" ry="2" />
<text  x="843.31" y="1871.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="618.9" y="1861" width="0.2" height="15.0" fill="rgb(250,133,20)" rx="2" ry="2" />
<text  x="621.91" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::select_statement, std::default_delete&lt;cql3::statements::raw::select_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="65.7" y="1797" width="0.3" height="15.0" fill="rgb(237,118,29)" rx="2" ry="2" />
<text  x="68.73" y="1807.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (2 samples, 0.04%)</title><rect x="117.1" y="1845" width="0.4" height="15.0" fill="rgb(205,30,40)" rx="2" ry="2" />
<text  x="120.09" y="1855.5" ></text>
</g>
<g >
<title>sstring_hash::operator (3 samples, 0.06%)</title><rect x="843.6" y="1797" width="0.6" height="15.0" fill="rgb(241,27,36)" rx="2" ry="2" />
<text  x="846.58" y="1807.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (8 samples, 0.15%)</title><rect x="1176.2" y="2037" width="1.8" height="15.0" fill="rgb(237,75,24)" rx="2" ry="2" />
<text  x="1179.23" y="2047.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::vector (2 samples, 0.04%)</title><rect x="69.7" y="1861" width="0.4" height="15.0" fill="rgb(244,120,16)" rx="2" ry="2" />
<text  x="72.67" y="1871.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="899.3" y="1685" width="0.2" height="15.0" fill="rgb(206,228,6)" rx="2" ry="2" />
<text  x="902.32" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1013" width="0.3" height="15.0" fill="rgb(215,146,8)" rx="2" ry="2" />
<text  x="13.44" y="1023.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="52.0" y="1669" width="0.2" height="15.0" fill="rgb(207,38,48)" rx="2" ry="2" />
<text  x="54.96" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="58.5" y="1493" width="0.2" height="15.0" fill="rgb(226,213,46)" rx="2" ry="2" />
<text  x="61.52" y="1503.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="2021" width="2.9" height="15.0" fill="rgb(231,86,8)" rx="2" ry="2" />
<text  x="1189.94" y="2031.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (3 samples, 0.06%)</title><rect x="869.2" y="1717" width="0.6" height="15.0" fill="rgb(250,148,8)" rx="2" ry="2" />
<text  x="872.16" y="1727.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (4 samples, 0.07%)</title><rect x="739.8" y="1829" width="0.8" height="15.0" fill="rgb(208,0,45)" rx="2" ry="2" />
<text  x="742.77" y="1839.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="594.6" y="1781" width="0.3" height="15.0" fill="rgb(236,190,30)" rx="2" ry="2" />
<text  x="597.65" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (4 samples, 0.07%)</title><rect x="1042.0" y="1701" width="0.9" height="15.0" fill="rgb(243,146,44)" rx="2" ry="2" />
<text  x="1045.04" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="421" width="0.3" height="15.0" fill="rgb(217,62,42)" rx="2" ry="2" />
<text  x="13.44" y="431.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="890.4" y="1733" width="1.5" height="15.0" fill="rgb(216,192,54)" rx="2" ry="2" />
<text  x="893.36" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.06%)</title><rect x="252.6" y="1573" width="0.7" height="15.0" fill="rgb(220,49,10)" rx="2" ry="2" />
<text  x="255.60" y="1583.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (1 samples, 0.02%)</title><rect x="258.5" y="1541" width="0.2" height="15.0" fill="rgb(244,75,53)" rx="2" ry="2" />
<text  x="261.50" y="1551.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="100.5" y="1781" width="0.2" height="15.0" fill="rgb(215,182,21)" rx="2" ry="2" />
<text  x="103.48" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="694.3" y="1909" width="0.2" height="15.0" fill="rgb(251,227,29)" rx="2" ry="2" />
<text  x="697.31" y="1919.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="112.5" y="1877" width="0.7" height="15.0" fill="rgb(237,215,11)" rx="2" ry="2" />
<text  x="115.50" y="1887.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;partition_version, mutation_partition&gt; (1 samples, 0.02%)</title><rect x="1122.2" y="1653" width="0.3" height="15.0" fill="rgb(234,68,20)" rx="2" ry="2" />
<text  x="1125.25" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (5 samples, 0.09%)</title><rect x="892.8" y="1733" width="1.1" height="15.0" fill="rgb(224,102,44)" rx="2" ry="2" />
<text  x="895.76" y="1743.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (79 samples, 1.46%)</title><rect x="571.3" y="1797" width="17.2" height="15.0" fill="rgb(206,156,45)" rx="2" ry="2" />
<text  x="574.26" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (7 samples, 0.13%)</title><rect x="262.4" y="1573" width="1.6" height="15.0" fill="rgb(253,168,38)" rx="2" ry="2" />
<text  x="265.44" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_channel (1 samples, 0.02%)</title><rect x="30.5" y="1685" width="0.3" height="15.0" fill="rgb(208,51,26)" rx="2" ry="2" />
<text  x="33.54" y="1695.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="511.4" y="1637" width="0.2" height="15.0" fill="rgb(238,15,22)" rx="2" ry="2" />
<text  x="514.37" y="1647.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="985.6" y="1749" width="1.8" height="15.0" fill="rgb(235,109,2)" rx="2" ry="2" />
<text  x="988.65" y="1759.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="528.6" y="1653" width="0.3" height="15.0" fill="rgb(238,0,0)" rx="2" ry="2" />
<text  x="531.64" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="66.6" y="1781" width="0.2" height="15.0" fill="rgb(218,22,33)" rx="2" ry="2" />
<text  x="69.61" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1112.4" y="1829" width="0.2" height="15.0" fill="rgb(227,67,16)" rx="2" ry="2" />
<text  x="1115.41" y="1839.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="1167.5" y="1925" width="0.2" height="15.0" fill="rgb(217,9,14)" rx="2" ry="2" />
<text  x="1170.49" y="1935.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (1 samples, 0.02%)</title><rect x="952.9" y="1797" width="0.2" height="15.0" fill="rgb(252,30,6)" rx="2" ry="2" />
<text  x="955.86" y="1807.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="1133.0" y="1669" width="0.2" height="15.0" fill="rgb(241,65,23)" rx="2" ry="2" />
<text  x="1135.96" y="1679.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (2 samples, 0.04%)</title><rect x="364.9" y="1605" width="0.5" height="15.0" fill="rgb(246,163,3)" rx="2" ry="2" />
<text  x="367.94" y="1615.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (1 samples, 0.02%)</title><rect x="1103.9" y="1829" width="0.2" height="15.0" fill="rgb(220,8,7)" rx="2" ry="2" />
<text  x="1106.89" y="1839.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (11 samples, 0.20%)</title><rect x="272.3" y="1605" width="2.4" height="15.0" fill="rgb(237,223,20)" rx="2" ry="2" />
<text  x="275.27" y="1615.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (11 samples, 0.20%)</title><rect x="1081.8" y="1749" width="2.4" height="15.0" fill="rgb(231,79,10)" rx="2" ry="2" />
<text  x="1084.81" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_roles_statement, std::default_delete&lt;cql3::statements::list_roles_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="69.0" y="1813" width="0.2" height="15.0" fill="rgb(228,220,7)" rx="2" ry="2" />
<text  x="72.01" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1037.0" y="1701" width="0.2" height="15.0" fill="rgb(238,29,4)" rx="2" ry="2" />
<text  x="1040.01" y="1711.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="1148.9" y="1861" width="0.4" height="15.0" fill="rgb(235,38,43)" rx="2" ry="2" />
<text  x="1151.91" y="1871.5" ></text>
</g>
<g >
<title>service::storage_proxy::remove_response_handler_entry (1 samples, 0.02%)</title><rect x="720.1" y="1893" width="0.2" height="15.0" fill="rgb(228,220,25)" rx="2" ry="2" />
<text  x="723.10" y="1903.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::get_value (1 samples, 0.02%)</title><rect x="669.6" y="1909" width="0.2" height="15.0" fill="rgb(254,157,14)" rx="2" ry="2" />
<text  x="672.61" y="1919.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (2 samples, 0.04%)</title><rect x="862.4" y="1877" width="0.4" height="15.0" fill="rgb(243,166,1)" rx="2" ry="2" />
<text  x="865.38" y="1887.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="1187.2" y="117" width="0.2" height="15.0" fill="rgb(231,22,35)" rx="2" ry="2" />
<text  x="1190.16" y="127.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (28 samples, 0.52%)</title><rect x="1118.1" y="1829" width="6.1" height="15.0" fill="rgb(230,172,12)" rx="2" ry="2" />
<text  x="1121.09" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="62.2" y="1541" width="0.3" height="15.0" fill="rgb(230,12,52)" rx="2" ry="2" />
<text  x="65.24" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="315.1" y="1701" width="0.4" height="15.0" fill="rgb(214,166,1)" rx="2" ry="2" />
<text  x="318.11" y="1711.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (2 samples, 0.04%)</title><rect x="308.1" y="1717" width="0.5" height="15.0" fill="rgb(236,158,13)" rx="2" ry="2" />
<text  x="311.11" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (2 samples, 0.04%)</title><rect x="426.1" y="1669" width="0.5" height="15.0" fill="rgb(240,25,39)" rx="2" ry="2" />
<text  x="429.14" y="1679.5" ></text>
</g>
<g >
<title>[libpthread-2.33.so] (1 samples, 0.02%)</title><rect x="10.4" y="357" width="0.3" height="15.0" fill="rgb(250,84,12)" rx="2" ry="2" />
<text  x="13.44" y="367.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.02%)</title><rect x="99.8" y="1845" width="0.2" height="15.0" fill="rgb(249,48,20)" rx="2" ry="2" />
<text  x="102.83" y="1855.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_with_triggers (1 samples, 0.02%)</title><rect x="864.6" y="1813" width="0.2" height="15.0" fill="rgb(217,136,27)" rx="2" ry="2" />
<text  x="867.57" y="1823.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="15.0" y="2005" width="0.2" height="15.0" fill="rgb(207,194,6)" rx="2" ry="2" />
<text  x="18.03" y="2015.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, auth::permissions_cache::get (1 samples, 0.02%)</title><rect x="804.9" y="1685" width="0.2" height="15.0" fill="rgb(245,26,27)" rx="2" ry="2" />
<text  x="807.90" y="1695.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (9 samples, 0.17%)</title><rect x="560.1" y="1797" width="2.0" height="15.0" fill="rgb(208,141,1)" rx="2" ry="2" />
<text  x="563.11" y="1807.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (8 samples, 0.15%)</title><rect x="54.1" y="1653" width="1.8" height="15.0" fill="rgb(244,228,4)" rx="2" ry="2" />
<text  x="57.15" y="1663.5" ></text>
</g>
<g >
<title>schema::column_at (5 samples, 0.09%)</title><rect x="241.0" y="1541" width="1.1" height="15.0" fill="rgb(214,139,14)" rx="2" ry="2" />
<text  x="244.02" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;frozen_schema  (1 samples, 0.02%)</title><rect x="99.2" y="1797" width="0.2" height="15.0" fill="rgb(239,94,17)" rx="2" ry="2" />
<text  x="102.17" y="1807.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (7 samples, 0.13%)</title><rect x="928.4" y="1797" width="1.5" height="15.0" fill="rgb(234,184,45)" rx="2" ry="2" />
<text  x="931.38" y="1807.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (2 samples, 0.04%)</title><rect x="347.2" y="1605" width="0.5" height="15.0" fill="rgb(223,17,16)" rx="2" ry="2" />
<text  x="350.24" y="1615.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.04%)</title><rect x="17.9" y="1973" width="0.4" height="15.0" fill="rgb(221,96,15)" rx="2" ry="2" />
<text  x="20.87" y="1983.5" ></text>
</g>
<g >
<title>std::vector&lt;bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="18.1" y="1925" width="0.2" height="15.0" fill="rgb(240,172,30)" rx="2" ry="2" />
<text  x="21.09" y="1935.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (5 samples, 0.09%)</title><rect x="945.0" y="1813" width="1.1" height="15.0" fill="rgb(231,123,8)" rx="2" ry="2" />
<text  x="948.00" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="61.4" y="1669" width="0.2" height="15.0" fill="rgb(222,66,29)" rx="2" ry="2" />
<text  x="64.36" y="1679.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (2 samples, 0.04%)</title><rect x="1143.9" y="1909" width="0.4" height="15.0" fill="rgb(235,49,47)" rx="2" ry="2" />
<text  x="1146.88" y="1919.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="49.3" y="1557" width="0.5" height="15.0" fill="rgb(206,160,11)" rx="2" ry="2" />
<text  x="52.34" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="27.3" y="1621" width="0.2" height="15.0" fill="rgb(246,53,44)" rx="2" ry="2" />
<text  x="30.27" y="1631.5" ></text>
</g>
<g >
<title>service::set_gossip_tokens (1 samples, 0.02%)</title><rect x="10.7" y="1861" width="0.2" height="15.0" fill="rgb(209,156,42)" rx="2" ry="2" />
<text  x="13.66" y="1871.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="444.9" y="1765" width="0.5" height="15.0" fill="rgb(249,79,31)" rx="2" ry="2" />
<text  x="447.93" y="1775.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.06%)</title><rect x="912.0" y="1749" width="0.6" height="15.0" fill="rgb(224,181,20)" rx="2" ry="2" />
<text  x="914.99" y="1759.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="307.0" y="1733" width="0.2" height="15.0" fill="rgb(243,92,13)" rx="2" ry="2" />
<text  x="310.02" y="1743.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (1 samples, 0.02%)</title><rect x="1084.2" y="1749" width="0.2" height="15.0" fill="rgb(213,83,34)" rx="2" ry="2" />
<text  x="1087.22" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="24.6" y="1733" width="0.3" height="15.0" fill="rgb(209,152,27)" rx="2" ry="2" />
<text  x="27.64" y="1743.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="51.7" y="1573" width="0.3" height="15.0" fill="rgb(208,93,29)" rx="2" ry="2" />
<text  x="54.74" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="45.4" y="1589" width="0.2" height="15.0" fill="rgb(209,101,20)" rx="2" ry="2" />
<text  x="48.41" y="1599.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="1186.9" y="133" width="0.3" height="15.0" fill="rgb(223,10,25)" rx="2" ry="2" />
<text  x="1189.94" y="143.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.04%)</title><rect x="794.6" y="1637" width="0.5" height="15.0" fill="rgb(226,137,47)" rx="2" ry="2" />
<text  x="797.63" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="854.7" y="1829" width="0.2" height="15.0" fill="rgb(231,132,47)" rx="2" ry="2" />
<text  x="857.73" y="1839.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (2 samples, 0.04%)</title><rect x="278.0" y="1605" width="0.4" height="15.0" fill="rgb(214,122,16)" rx="2" ry="2" />
<text  x="280.95" y="1615.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="52.4" y="1637" width="0.2" height="15.0" fill="rgb(234,183,0)" rx="2" ry="2" />
<text  x="55.40" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::~node_head (1 samples, 0.02%)</title><rect x="436.4" y="1621" width="0.2" height="15.0" fill="rgb(214,143,45)" rx="2" ry="2" />
<text  x="439.41" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1397" width="2.9" height="15.0" fill="rgb(232,224,53)" rx="2" ry="2" />
<text  x="1189.94" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="81.3" y="2005" width="0.2" height="15.0" fill="rgb(212,72,33)" rx="2" ry="2" />
<text  x="84.25" y="2015.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (5 samples, 0.09%)</title><rect x="45.6" y="1621" width="1.1" height="15.0" fill="rgb(231,43,36)" rx="2" ry="2" />
<text  x="48.63" y="1631.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="1051.0" y="1701" width="0.7" height="15.0" fill="rgb(245,11,21)" rx="2" ry="2" />
<text  x="1054.00" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.02%)</title><rect x="528.9" y="1669" width="0.2" height="15.0" fill="rgb(239,107,31)" rx="2" ry="2" />
<text  x="531.86" y="1679.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (1 samples, 0.02%)</title><rect x="19.4" y="1733" width="0.2" height="15.0" fill="rgb(212,162,39)" rx="2" ry="2" />
<text  x="22.40" y="1743.5" ></text>
</g>
<g >
<title>seastar::make_file_impl (1 samples, 0.02%)</title><rect x="684.0" y="1909" width="0.3" height="15.0" fill="rgb(232,23,19)" rx="2" ry="2" />
<text  x="687.04" y="1919.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (3 samples, 0.06%)</title><rect x="258.1" y="1557" width="0.6" height="15.0" fill="rgb(205,150,33)" rx="2" ry="2" />
<text  x="261.06" y="1567.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (1 samples, 0.02%)</title><rect x="732.1" y="1877" width="0.2" height="15.0" fill="rgb(253,6,9)" rx="2" ry="2" />
<text  x="735.12" y="1887.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (34 samples, 0.63%)</title><rect x="244.5" y="1589" width="7.4" height="15.0" fill="rgb(233,210,7)" rx="2" ry="2" />
<text  x="247.51" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1187.6" y="229" width="0.2" height="15.0" fill="rgb(206,87,16)" rx="2" ry="2" />
<text  x="1190.60" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (1 samples, 0.02%)</title><rect x="18.7" y="1925" width="0.3" height="15.0" fill="rgb(222,139,47)" rx="2" ry="2" />
<text  x="21.74" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.02%)</title><rect x="100.3" y="1701" width="0.2" height="15.0" fill="rgb(220,114,50)" rx="2" ry="2" />
<text  x="103.26" y="1711.5" ></text>
</g>
<g >
<title>row::apply_monotonically (4 samples, 0.07%)</title><rect x="868.3" y="1717" width="0.9" height="15.0" fill="rgb(238,137,35)" rx="2" ry="2" />
<text  x="871.28" y="1727.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="794.0" y="1637" width="0.2" height="15.0" fill="rgb(228,29,10)" rx="2" ry="2" />
<text  x="796.97" y="1647.5" ></text>
</g>
<g >
<title>rows_entry::tri_compare::operator (1 samples, 0.02%)</title><rect x="99.6" y="1781" width="0.2" height="15.0" fill="rgb(254,151,48)" rx="2" ry="2" />
<text  x="102.61" y="1791.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.02%)</title><rect x="400.8" y="1621" width="0.2" height="15.0" fill="rgb(251,42,6)" rx="2" ry="2" />
<text  x="403.78" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="938.7" y="1813" width="0.2" height="15.0" fill="rgb(205,67,11)" rx="2" ry="2" />
<text  x="941.66" y="1823.5" ></text>
</g>
<g >
<title>boost::circular_buffer&lt;long, std::allocator&lt;long&gt; &gt;::push_back_impl&lt;long const&amp;&gt; (2 samples, 0.04%)</title><rect x="688.6" y="1861" width="0.5" height="15.0" fill="rgb(222,140,50)" rx="2" ry="2" />
<text  x="691.63" y="1871.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="1099.5" y="1781" width="1.3" height="15.0" fill="rgb(207,95,1)" rx="2" ry="2" />
<text  x="1102.52" y="1791.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (1 samples, 0.02%)</title><rect x="153.6" y="1829" width="0.2" height="15.0" fill="rgb(242,70,46)" rx="2" ry="2" />
<text  x="156.59" y="1839.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (1 samples, 0.02%)</title><rect x="23.3" y="1829" width="0.3" height="15.0" fill="rgb(252,69,37)" rx="2" ry="2" />
<text  x="26.33" y="1839.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (2 samples, 0.04%)</title><rect x="889.3" y="1765" width="0.4" height="15.0" fill="rgb(253,160,50)" rx="2" ry="2" />
<text  x="892.26" y="1775.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (1 samples, 0.02%)</title><rect x="360.6" y="1605" width="0.2" height="15.0" fill="rgb(209,216,38)" rx="2" ry="2" />
<text  x="363.57" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.13%)</title><rect x="809.1" y="1717" width="1.5" height="15.0" fill="rgb(211,63,17)" rx="2" ry="2" />
<text  x="812.05" y="1727.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="474.7" y="1717" width="0.4" height="15.0" fill="rgb(252,84,6)" rx="2" ry="2" />
<text  x="477.66" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1115.7" y="1845" width="0.2" height="15.0" fill="rgb(247,222,20)" rx="2" ry="2" />
<text  x="1118.69" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1541" width="2.9" height="15.0" fill="rgb(227,72,9)" rx="2" ry="2" />
<text  x="1189.94" y="1551.5" ></text>
</g>
<g >
<title>row::compact_and_expire (3 samples, 0.06%)</title><rect x="695.6" y="1717" width="0.7" height="15.0" fill="rgb(228,124,9)" rx="2" ry="2" />
<text  x="698.62" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;2ul, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="54.6" y="1397" width="0.6" height="15.0" fill="rgb(254,56,45)" rx="2" ry="2" />
<text  x="57.59" y="1407.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="24.9" y="1637" width="0.2" height="15.0" fill="rgb(231,55,20)" rx="2" ry="2" />
<text  x="27.86" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="168.9" y="1797" width="0.4" height="15.0" fill="rgb(225,9,45)" rx="2" ry="2" />
<text  x="171.89" y="1807.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::done (1 samples, 0.02%)</title><rect x="1168.4" y="1909" width="0.2" height="15.0" fill="rgb(223,107,1)" rx="2" ry="2" />
<text  x="1171.36" y="1919.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="1152.4" y="1861" width="0.4" height="15.0" fill="rgb(206,5,41)" rx="2" ry="2" />
<text  x="1155.41" y="1871.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (1 samples, 0.02%)</title><rect x="177.6" y="1701" width="0.3" height="15.0" fill="rgb(225,119,3)" rx="2" ry="2" />
<text  x="180.63" y="1711.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (1 samples, 0.02%)</title><rect x="1083.1" y="1733" width="0.2" height="15.0" fill="rgb(243,79,4)" rx="2" ry="2" />
<text  x="1086.12" y="1743.5" ></text>
</g>
<g >
<title>utils::murmur_hash::read_block&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="100.0" y="1765" width="0.3" height="15.0" fill="rgb(218,65,10)" rx="2" ry="2" />
<text  x="103.05" y="1775.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1043.1" y="1701" width="0.2" height="15.0" fill="rgb(247,207,35)" rx="2" ry="2" />
<text  x="1046.13" y="1711.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (6 samples, 0.11%)</title><rect x="461.5" y="1765" width="1.4" height="15.0" fill="rgb(231,87,16)" rx="2" ry="2" />
<text  x="464.54" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (3 samples, 0.06%)</title><rect x="780.0" y="1733" width="0.6" height="15.0" fill="rgb(227,100,2)" rx="2" ry="2" />
<text  x="782.98" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="72.1" y="1765" width="0.2" height="15.0" fill="rgb(213,110,23)" rx="2" ry="2" />
<text  x="75.07" y="1775.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (2 samples, 0.04%)</title><rect x="934.7" y="1829" width="0.5" height="15.0" fill="rgb(247,207,37)" rx="2" ry="2" />
<text  x="937.72" y="1839.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="584.6" y="1717" width="0.2" height="15.0" fill="rgb(223,128,47)" rx="2" ry="2" />
<text  x="587.59" y="1727.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (7 samples, 0.13%)</title><rect x="752.7" y="1733" width="1.5" height="15.0" fill="rgb(223,201,50)" rx="2" ry="2" />
<text  x="755.66" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::truncate_statement, std::default_delete&lt;cql3::statements::truncate_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="69.2" y="1813" width="0.2" height="15.0" fill="rgb(230,66,51)" rx="2" ry="2" />
<text  x="72.23" y="1823.5" ></text>
</g>
<g >
<title>mutation_partition::ensure_last_dummy (1 samples, 0.02%)</title><rect x="18.5" y="1957" width="0.2" height="15.0" fill="rgb(212,75,21)" rx="2" ry="2" />
<text  x="21.52" y="1967.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1021.1" y="1589" width="0.2" height="15.0" fill="rgb(225,217,53)" rx="2" ry="2" />
<text  x="1024.05" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="52.0" y="1557" width="0.2" height="15.0" fill="rgb(226,162,10)" rx="2" ry="2" />
<text  x="54.96" y="1567.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_e5391f1eed1c0aa1965864b177f1772e13a61139] (1 samples, 0.02%)</title><rect x="149.0" y="1845" width="0.2" height="15.0" fill="rgb(233,119,14)" rx="2" ry="2" />
<text  x="152.00" y="1855.5" ></text>
</g>
<g >
<title>cql3::cf_name::~cf_name (1 samples, 0.02%)</title><rect x="43.4" y="1765" width="0.3" height="15.0" fill="rgb(222,177,1)" rx="2" ry="2" />
<text  x="46.44" y="1775.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="178.3" y="1717" width="0.2" height="15.0" fill="rgb(239,51,14)" rx="2" ry="2" />
<text  x="181.29" y="1727.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.04%)</title><rect x="1187.8" y="277" width="0.5" height="15.0" fill="rgb(242,37,29)" rx="2" ry="2" />
<text  x="1190.81" y="287.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (11 samples, 0.20%)</title><rect x="413.7" y="1573" width="2.4" height="15.0" fill="rgb(228,82,18)" rx="2" ry="2" />
<text  x="416.68" y="1583.5" ></text>
</g>
<g >
<title>table::query (2,278 samples, 42.19%)</title><rect x="134.1" y="1877" width="497.9" height="15.0" fill="rgb(254,94,5)" rx="2" ry="2" />
<text  x="137.14" y="1887.5" >table::query</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.06%)</title><rect x="966.4" y="1797" width="0.7" height="15.0" fill="rgb(233,189,22)" rx="2" ry="2" />
<text  x="969.41" y="1807.5" ></text>
</g>
<g >
<title>cql3::restrictions::restriction::restriction (1 samples, 0.02%)</title><rect x="73.2" y="1765" width="0.2" height="15.0" fill="rgb(231,40,13)" rx="2" ry="2" />
<text  x="76.16" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1621" width="2.9" height="15.0" fill="rgb(218,34,47)" rx="2" ry="2" />
<text  x="1189.94" y="1631.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (1 samples, 0.02%)</title><rect x="821.3" y="1813" width="0.2" height="15.0" fill="rgb(215,197,47)" rx="2" ry="2" />
<text  x="824.29" y="1823.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.02%)</title><rect x="862.4" y="1701" width="0.2" height="15.0" fill="rgb(206,61,28)" rx="2" ry="2" />
<text  x="865.38" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (3 samples, 0.06%)</title><rect x="693.2" y="1861" width="0.7" height="15.0" fill="rgb(237,53,52)" rx="2" ry="2" />
<text  x="696.22" y="1871.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="1033.9" y="1685" width="0.9" height="15.0" fill="rgb(221,164,45)" rx="2" ry="2" />
<text  x="1036.95" y="1695.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (4 samples, 0.07%)</title><rect x="264.4" y="1653" width="0.9" height="15.0" fill="rgb(212,105,40)" rx="2" ry="2" />
<text  x="267.40" y="1663.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (1 samples, 0.02%)</title><rect x="316.2" y="1749" width="0.2" height="15.0" fill="rgb(226,43,1)" rx="2" ry="2" />
<text  x="319.20" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (4 samples, 0.07%)</title><rect x="49.1" y="1717" width="0.9" height="15.0" fill="rgb(231,209,29)" rx="2" ry="2" />
<text  x="52.12" y="1727.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (1 samples, 0.02%)</title><rect x="77.1" y="1829" width="0.2" height="15.0" fill="rgb(252,3,51)" rx="2" ry="2" />
<text  x="80.10" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.02%)</title><rect x="522.5" y="1669" width="0.2" height="15.0" fill="rgb(212,177,16)" rx="2" ry="2" />
<text  x="525.52" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="892.1" y="1733" width="0.2" height="15.0" fill="rgb(208,168,26)" rx="2" ry="2" />
<text  x="895.10" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="62.2" y="1669" width="0.3" height="15.0" fill="rgb(241,152,51)" rx="2" ry="2" />
<text  x="65.24" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="908.9" y="1701" width="0.5" height="15.0" fill="rgb(251,178,25)" rx="2" ry="2" />
<text  x="911.93" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="202.8" y="1621" width="1.3" height="15.0" fill="rgb(230,109,44)" rx="2" ry="2" />
<text  x="205.77" y="1631.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (3 samples, 0.06%)</title><rect x="163.4" y="1845" width="0.7" height="15.0" fill="rgb(228,66,40)" rx="2" ry="2" />
<text  x="166.43" y="1855.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.02%)</title><rect x="423.3" y="1653" width="0.2" height="15.0" fill="rgb(213,206,4)" rx="2" ry="2" />
<text  x="426.30" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (2 samples, 0.04%)</title><rect x="449.1" y="1797" width="0.4" height="15.0" fill="rgb(243,70,22)" rx="2" ry="2" />
<text  x="452.09" y="1807.5" ></text>
</g>
<g >
<title>db::block_for (2 samples, 0.04%)</title><rect x="1053.6" y="1749" width="0.5" height="15.0" fill="rgb(223,227,4)" rx="2" ry="2" />
<text  x="1056.62" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="164.1" y="1845" width="0.4" height="15.0" fill="rgb(221,152,44)" rx="2" ry="2" />
<text  x="167.08" y="1855.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1 samples, 0.02%)</title><rect x="775.6" y="1813" width="0.2" height="15.0" fill="rgb(243,93,17)" rx="2" ry="2" />
<text  x="778.61" y="1823.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="100.0" y="1781" width="0.3" height="15.0" fill="rgb(245,138,4)" rx="2" ry="2" />
<text  x="103.05" y="1791.5" ></text>
</g>
<g >
<title>deletable_row::apply (1 samples, 0.02%)</title><rect x="1120.3" y="1653" width="0.2" height="15.0" fill="rgb(213,27,16)" rx="2" ry="2" />
<text  x="1123.28" y="1663.5" ></text>
</g>
<g >
<title>service::write_response_handler::~write_response_handler (1 samples, 0.02%)</title><rect x="697.4" y="1909" width="0.2" height="15.0" fill="rgb(226,192,16)" rx="2" ry="2" />
<text  x="700.37" y="1919.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="57.4" y="1509" width="0.2" height="15.0" fill="rgb(245,96,2)" rx="2" ry="2" />
<text  x="60.43" y="1519.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="794.4" y="1621" width="0.2" height="15.0" fill="rgb(218,97,35)" rx="2" ry="2" />
<text  x="797.41" y="1631.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1186.9" y="373" width="0.3" height="15.0" fill="rgb(224,65,36)" rx="2" ry="2" />
<text  x="1189.94" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="54.1" y="1477" width="0.3" height="15.0" fill="rgb(235,145,21)" rx="2" ry="2" />
<text  x="57.15" y="1487.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="10.7" y="2021" width="0.2" height="15.0" fill="rgb(213,213,31)" rx="2" ry="2" />
<text  x="13.66" y="2031.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (6 samples, 0.11%)</title><rect x="393.8" y="1589" width="1.3" height="15.0" fill="rgb(237,224,37)" rx="2" ry="2" />
<text  x="396.79" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="74.9" y="1829" width="0.2" height="15.0" fill="rgb(207,6,45)" rx="2" ry="2" />
<text  x="77.91" y="1839.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (1 samples, 0.02%)</title><rect x="1129.2" y="1589" width="0.3" height="15.0" fill="rgb(209,72,15)" rx="2" ry="2" />
<text  x="1132.24" y="1599.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="31.2" y="1685" width="0.2" height="15.0" fill="rgb(205,27,4)" rx="2" ry="2" />
<text  x="34.20" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="430.7" y="1653" width="0.2" height="15.0" fill="rgb(210,163,21)" rx="2" ry="2" />
<text  x="433.73" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="95.2" y="1877" width="0.3" height="15.0" fill="rgb(213,118,16)" rx="2" ry="2" />
<text  x="98.24" y="1887.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="753.1" y="1685" width="0.2" height="15.0" fill="rgb(215,17,24)" rx="2" ry="2" />
<text  x="756.10" y="1695.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="600.5" y="1813" width="1.4" height="15.0" fill="rgb(205,187,23)" rx="2" ry="2" />
<text  x="603.55" y="1823.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.02%)</title><rect x="100.0" y="1749" width="0.3" height="15.0" fill="rgb(221,20,8)" rx="2" ry="2" />
<text  x="103.05" y="1759.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="1187.4" y="85" width="0.2" height="15.0" fill="rgb(218,185,22)" rx="2" ry="2" />
<text  x="1190.38" y="95.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (230 samples, 4.26%)</title><rect x="994.2" y="1749" width="50.2" height="15.0" fill="rgb(207,22,46)" rx="2" ry="2" />
<text  x="997.17" y="1759.5" >servi..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="49.3" y="1669" width="0.5" height="15.0" fill="rgb(223,198,34)" rx="2" ry="2" />
<text  x="52.34" y="1679.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="812.3" y="1733" width="1.3" height="15.0" fill="rgb(229,188,52)" rx="2" ry="2" />
<text  x="815.33" y="1743.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.06%)</title><rect x="708.7" y="1893" width="0.7" height="15.0" fill="rgb(218,162,32)" rx="2" ry="2" />
<text  x="711.73" y="1903.5" ></text>
</g>
<g >
<title>std::map&lt;gms::application_state, gms::versioned_value, std::less&lt;gms::application_state&gt;, std::allocator&lt;std::pair&lt;gms::application_state const, gms::versioned_value&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="19.6" y="1829" width="0.2" height="15.0" fill="rgb(218,123,20)" rx="2" ry="2" />
<text  x="22.62" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;void&gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type&gt; (2 samples, 0.04%)</title><rect x="1034.8" y="1685" width="0.5" height="15.0" fill="rgb(215,176,6)" rx="2" ry="2" />
<text  x="1037.82" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (1 samples, 0.02%)</title><rect x="62.7" y="1749" width="0.2" height="15.0" fill="rgb(218,171,21)" rx="2" ry="2" />
<text  x="65.67" y="1759.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (3 samples, 0.06%)</title><rect x="419.8" y="1637" width="0.7" height="15.0" fill="rgb(226,140,25)" rx="2" ry="2" />
<text  x="422.80" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="713.5" y="1845" width="0.3" height="15.0" fill="rgb(236,57,31)" rx="2" ry="2" />
<text  x="716.54" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="636.2" y="1877" width="0.2" height="15.0" fill="rgb(251,79,30)" rx="2" ry="2" />
<text  x="639.17" y="1887.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (17 samples, 0.31%)</title><rect x="657.4" y="1893" width="3.7" height="15.0" fill="rgb(244,169,36)" rx="2" ry="2" />
<text  x="660.37" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="53.1" y="1701" width="0.2" height="15.0" fill="rgb(226,60,19)" rx="2" ry="2" />
<text  x="56.06" y="1711.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="1048.8" y="1733" width="0.2" height="15.0" fill="rgb(241,228,17)" rx="2" ry="2" />
<text  x="1051.81" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1381" width="2.9" height="15.0" fill="rgb(225,16,51)" rx="2" ry="2" />
<text  x="1189.94" y="1391.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureISt5tupleIJEEE9then_implIZNS3_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (2 samples, 0.04%)</title><rect x="1125.3" y="1749" width="0.4" height="15.0" fill="rgb(242,35,35)" rx="2" ry="2" />
<text  x="1128.31" y="1759.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (2 samples, 0.04%)</title><rect x="442.1" y="1685" width="0.4" height="15.0" fill="rgb(245,151,5)" rx="2" ry="2" />
<text  x="445.09" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.04%)</title><rect x="1188.9" y="181" width="0.4" height="15.0" fill="rgb(210,15,41)" rx="2" ry="2" />
<text  x="1191.91" y="191.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::work_item, 128ul&gt;::back_chunk_new (1 samples, 0.02%)</title><rect x="761.2" y="1781" width="0.2" height="15.0" fill="rgb(227,124,13)" rx="2" ry="2" />
<text  x="764.19" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.02%)</title><rect x="794.4" y="1637" width="0.2" height="15.0" fill="rgb(239,135,48)" rx="2" ry="2" />
<text  x="797.41" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.02%)</title><rect x="440.6" y="1669" width="0.2" height="15.0" fill="rgb(211,138,34)" rx="2" ry="2" />
<text  x="443.56" y="1679.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="773.2" y="1797" width="0.2" height="15.0" fill="rgb(231,48,30)" rx="2" ry="2" />
<text  x="776.21" y="1807.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="62.7" y="1733" width="0.2" height="15.0" fill="rgb(227,195,27)" rx="2" ry="2" />
<text  x="65.67" y="1743.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="18.3" y="1989" width="0.2" height="15.0" fill="rgb(254,124,7)" rx="2" ry="2" />
<text  x="21.31" y="1999.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="62.9" y="1733" width="0.2" height="15.0" fill="rgb(251,180,50)" rx="2" ry="2" />
<text  x="65.89" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (195 samples, 3.61%)</title><rect x="25.1" y="1813" width="42.6" height="15.0" fill="rgb(241,50,5)" rx="2" ry="2" />
<text  x="28.08" y="1823.5" >cql3..</text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (22 samples, 0.41%)</title><rect x="1118.3" y="1701" width="4.8" height="15.0" fill="rgb(244,78,42)" rx="2" ry="2" />
<text  x="1121.31" y="1711.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_nextChar (1 samples, 0.02%)</title><rect x="29.7" y="1701" width="0.2" height="15.0" fill="rgb(224,199,41)" rx="2" ry="2" />
<text  x="32.67" y="1711.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (7 samples, 0.13%)</title><rect x="900.2" y="1685" width="1.5" height="15.0" fill="rgb(236,83,40)" rx="2" ry="2" />
<text  x="903.19" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1132.5" y="1573" width="0.2" height="15.0" fill="rgb(233,162,6)" rx="2" ry="2" />
<text  x="1135.52" y="1583.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="506.6" y="1605" width="0.6" height="15.0" fill="rgb(207,19,49)" rx="2" ry="2" />
<text  x="509.57" y="1615.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (2 samples, 0.04%)</title><rect x="552.2" y="1717" width="0.5" height="15.0" fill="rgb(221,21,28)" rx="2" ry="2" />
<text  x="555.24" y="1727.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="62.2" y="1685" width="0.3" height="15.0" fill="rgb(216,93,45)" rx="2" ry="2" />
<text  x="65.24" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (1 samples, 0.02%)</title><rect x="693.9" y="1893" width="0.2" height="15.0" fill="rgb(225,16,34)" rx="2" ry="2" />
<text  x="696.87" y="1903.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (2 samples, 0.04%)</title><rect x="1134.0" y="1909" width="0.5" height="15.0" fill="rgb(245,54,25)" rx="2" ry="2" />
<text  x="1137.05" y="1919.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (3 samples, 0.06%)</title><rect x="1052.7" y="1765" width="0.7" height="15.0" fill="rgb(248,5,26)" rx="2" ry="2" />
<text  x="1055.74" y="1775.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (2 samples, 0.04%)</title><rect x="1025.4" y="1573" width="0.5" height="15.0" fill="rgb(244,168,0)" rx="2" ry="2" />
<text  x="1028.43" y="1583.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (11 samples, 0.20%)</title><rect x="477.5" y="1701" width="2.4" height="15.0" fill="rgb(251,132,36)" rx="2" ry="2" />
<text  x="480.50" y="1711.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (1 samples, 0.02%)</title><rect x="740.6" y="1845" width="0.3" height="15.0" fill="rgb(229,222,40)" rx="2" ry="2" />
<text  x="743.64" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (5 samples, 0.09%)</title><rect x="45.6" y="1669" width="1.1" height="15.0" fill="rgb(232,40,38)" rx="2" ry="2" />
<text  x="48.63" y="1679.5" ></text>
</g>
<g >
<title>abstract_type::from_string (2 samples, 0.04%)</title><rect x="71.2" y="1797" width="0.4" height="15.0" fill="rgb(212,205,27)" rx="2" ry="2" />
<text  x="74.20" y="1807.5" ></text>
</g>
<g >
<title>ser::column_view::c (2 samples, 0.04%)</title><rect x="1120.9" y="1653" width="0.5" height="15.0" fill="rgb(224,82,16)" rx="2" ry="2" />
<text  x="1123.94" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (32 samples, 0.59%)</title><rect x="796.8" y="1621" width="7.0" height="15.0" fill="rgb(220,163,14)" rx="2" ry="2" />
<text  x="799.81" y="1631.5" ></text>
</g>
<g >
<title>ser::idl::serializers::internal::vector_serializer&lt;std::vector&lt;column_mapping_entry, std::allocator&lt;column_mapping_entry&gt; &gt; &gt;::write&lt;seastar::measuring_output_stream&gt; (1 samples, 0.02%)</title><rect x="1123.3" y="1589" width="0.3" height="15.0" fill="rgb(239,14,48)" rx="2" ry="2" />
<text  x="1126.34" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (3 samples, 0.06%)</title><rect x="54.6" y="1429" width="0.6" height="15.0" fill="rgb(254,47,3)" rx="2" ry="2" />
<text  x="57.59" y="1439.5" ></text>
</g>
<g >
<title>row_cache::make_reader (50 samples, 0.93%)</title><rect x="542.0" y="1765" width="10.9" height="15.0" fill="rgb(234,128,30)" rx="2" ry="2" />
<text  x="544.97" y="1775.5" ></text>
</g>
<g >
<title>posix_memalign (12 samples, 0.22%)</title><rect x="231.2" y="1477" width="2.6" height="15.0" fill="rgb(224,84,26)" rx="2" ry="2" />
<text  x="234.18" y="1487.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (1 samples, 0.02%)</title><rect x="834.0" y="1845" width="0.2" height="15.0" fill="rgb(217,49,34)" rx="2" ry="2" />
<text  x="836.97" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (4 samples, 0.07%)</title><rect x="1145.0" y="1893" width="0.9" height="15.0" fill="rgb(213,154,44)" rx="2" ry="2" />
<text  x="1147.98" y="1903.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (1 samples, 0.02%)</title><rect x="743.7" y="1829" width="0.2" height="15.0" fill="rgb(224,179,47)" rx="2" ry="2" />
<text  x="746.70" y="1839.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="612.8" y="1861" width="0.2" height="15.0" fill="rgb(233,200,1)" rx="2" ry="2" />
<text  x="615.79" y="1871.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (6 samples, 0.11%)</title><rect x="695.4" y="1909" width="1.3" height="15.0" fill="rgb(217,72,42)" rx="2" ry="2" />
<text  x="698.40" y="1919.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (2,444 samples, 45.27%)</title><rect x="102.2" y="1925" width="534.2" height="15.0" fill="rgb(222,101,51)" rx="2" ry="2" />
<text  x="105.23" y="1935.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1285" width="2.9" height="15.0" fill="rgb(244,33,21)" rx="2" ry="2" />
<text  x="1189.94" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (2 samples, 0.04%)</title><rect x="938.4" y="1829" width="0.5" height="15.0" fill="rgb(228,3,22)" rx="2" ry="2" />
<text  x="941.44" y="1839.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="696.5" y="1701" width="0.2" height="15.0" fill="rgb(232,46,39)" rx="2" ry="2" />
<text  x="699.49" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="62.2" y="1605" width="0.3" height="15.0" fill="rgb(208,207,16)" rx="2" ry="2" />
<text  x="65.24" y="1615.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (1 samples, 0.02%)</title><rect x="831.1" y="1701" width="0.2" height="15.0" fill="rgb(245,75,34)" rx="2" ry="2" />
<text  x="834.13" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="62.0" y="1605" width="0.2" height="15.0" fill="rgb(214,30,31)" rx="2" ry="2" />
<text  x="65.02" y="1615.5" ></text>
</g>
<g >
<title>row_tombstone::apply (4 samples, 0.07%)</title><rect x="420.5" y="1637" width="0.8" height="15.0" fill="rgb(230,103,28)" rx="2" ry="2" />
<text  x="423.45" y="1647.5" ></text>
</g>
<g >
<title>seastar::app_template::run (4,982 samples, 92.28%)</title><rect x="82.1" y="2005" width="1088.9" height="15.0" fill="rgb(210,144,12)" rx="2" ry="2" />
<text  x="85.12" y="2015.5" >seastar::app_template::run</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="990.5" y="1685" width="0.2" height="15.0" fill="rgb(237,108,46)" rx="2" ry="2" />
<text  x="993.46" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (33 samples, 0.61%)</title><rect x="430.1" y="1669" width="7.2" height="15.0" fill="rgb(223,208,13)" rx="2" ry="2" />
<text  x="433.07" y="1679.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1077" width="2.9" height="15.0" fill="rgb(244,94,21)" rx="2" ry="2" />
<text  x="1189.94" y="1087.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::forward_to (1 samples, 0.02%)</title><rect x="721.0" y="1925" width="0.2" height="15.0" fill="rgb(254,187,28)" rx="2" ry="2" />
<text  x="723.97" y="1935.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (7 samples, 0.13%)</title><rect x="325.6" y="1701" width="1.5" height="15.0" fill="rgb(250,59,43)" rx="2" ry="2" />
<text  x="328.60" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.02%)</title><rect x="51.7" y="1685" width="0.3" height="15.0" fill="rgb(214,6,21)" rx="2" ry="2" />
<text  x="54.74" y="1695.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (12 samples, 0.22%)</title><rect x="889.7" y="1749" width="2.6" height="15.0" fill="rgb(234,92,30)" rx="2" ry="2" />
<text  x="892.70" y="1759.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (3 samples, 0.06%)</title><rect x="933.0" y="1765" width="0.6" height="15.0" fill="rgb(209,219,7)" rx="2" ry="2" />
<text  x="935.97" y="1775.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cells (1 samples, 0.02%)</title><rect x="1188.3" y="85" width="0.2" height="15.0" fill="rgb(238,136,11)" rx="2" ry="2" />
<text  x="1191.25" y="95.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.02%)</title><rect x="907.6" y="1701" width="0.2" height="15.0" fill="rgb(207,128,25)" rx="2" ry="2" />
<text  x="910.62" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.06%)</title><rect x="41.5" y="1765" width="0.6" height="15.0" fill="rgb(249,182,31)" rx="2" ry="2" />
<text  x="44.47" y="1775.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (20 samples, 0.37%)</title><rect x="590.7" y="1797" width="4.4" height="15.0" fill="rgb(206,49,53)" rx="2" ry="2" />
<text  x="593.71" y="1807.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (41 samples, 0.76%)</title><rect x="1056.2" y="1765" width="9.0" height="15.0" fill="rgb(245,124,1)" rx="2" ry="2" />
<text  x="1059.24" y="1775.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (11 samples, 0.20%)</title><rect x="115.8" y="1877" width="2.4" height="15.0" fill="rgb(235,0,45)" rx="2" ry="2" />
<text  x="118.78" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="869.6" y="1669" width="0.2" height="15.0" fill="rgb(244,23,52)" rx="2" ry="2" />
<text  x="872.59" y="1679.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="585.9" y="1749" width="0.4" height="15.0" fill="rgb(243,128,37)" rx="2" ry="2" />
<text  x="588.90" y="1759.5" ></text>
</g>
<g >
<title>gms::versioned_value::clone_with_higher_version (1 samples, 0.02%)</title><rect x="10.7" y="1733" width="0.2" height="15.0" fill="rgb(240,139,42)" rx="2" ry="2" />
<text  x="13.66" y="1743.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.06%)</title><rect x="479.9" y="1701" width="0.7" height="15.0" fill="rgb(230,227,3)" rx="2" ry="2" />
<text  x="482.90" y="1711.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="1087.1" y="1765" width="0.2" height="15.0" fill="rgb(228,57,15)" rx="2" ry="2" />
<text  x="1090.06" y="1775.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="1189.1" y="37" width="0.2" height="15.0" fill="rgb(248,225,27)" rx="2" ry="2" />
<text  x="1192.13" y="47.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="938.0" y="1829" width="0.2" height="15.0" fill="rgb(209,105,23)" rx="2" ry="2" />
<text  x="941.00" y="1839.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="666.1" y="1877" width="0.2" height="15.0" fill="rgb(235,158,10)" rx="2" ry="2" />
<text  x="669.11" y="1887.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (2 samples, 0.04%)</title><rect x="480.6" y="1701" width="0.4" height="15.0" fill="rgb(215,146,38)" rx="2" ry="2" />
<text  x="483.56" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="555.1" y="1733" width="0.4" height="15.0" fill="rgb(251,105,6)" rx="2" ry="2" />
<text  x="558.09" y="1743.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (286 samples, 5.30%)</title><rect x="204.7" y="1669" width="62.5" height="15.0" fill="rgb(208,121,1)" rx="2" ry="2" />
<text  x="207.74" y="1679.5" >partit..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="873.3" y="1893" width="0.2" height="15.0" fill="rgb(232,29,0)" rx="2" ry="2" />
<text  x="876.31" y="1903.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (1 samples, 0.02%)</title><rect x="128.7" y="1877" width="0.2" height="15.0" fill="rgb(252,211,54)" rx="2" ry="2" />
<text  x="131.68" y="1887.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="639.7" y="1893" width="0.2" height="15.0" fill="rgb(238,134,49)" rx="2" ry="2" />
<text  x="642.67" y="1903.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="660.9" y="1877" width="0.2" height="15.0" fill="rgb(226,129,0)" rx="2" ry="2" />
<text  x="663.87" y="1887.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.13%)</title><rect x="1030.0" y="1637" width="1.5" height="15.0" fill="rgb(240,91,9)" rx="2" ry="2" />
<text  x="1033.01" y="1647.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (2 samples, 0.04%)</title><rect x="739.3" y="1717" width="0.5" height="15.0" fill="rgb(211,194,42)" rx="2" ry="2" />
<text  x="742.33" y="1727.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (36 samples, 0.67%)</title><rect x="710.3" y="1893" width="7.8" height="15.0" fill="rgb(241,130,31)" rx="2" ry="2" />
<text  x="713.26" y="1903.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1973" width="2.9" height="15.0" fill="rgb(227,73,33)" rx="2" ry="2" />
<text  x="1189.94" y="1983.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="821" width="2.9" height="15.0" fill="rgb(211,177,44)" rx="2" ry="2" />
<text  x="1189.94" y="831.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (1 samples, 0.02%)</title><rect x="396.2" y="1621" width="0.2" height="15.0" fill="rgb(235,186,49)" rx="2" ry="2" />
<text  x="399.19" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="295.7" y="1717" width="0.2" height="15.0" fill="rgb(231,1,31)" rx="2" ry="2" />
<text  x="298.66" y="1727.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (2 samples, 0.04%)</title><rect x="1187.8" y="181" width="0.5" height="15.0" fill="rgb(235,178,9)" rx="2" ry="2" />
<text  x="1190.81" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="59.6" y="1733" width="0.2" height="15.0" fill="rgb(227,162,10)" rx="2" ry="2" />
<text  x="62.61" y="1743.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (1 samples, 0.02%)</title><rect x="11.1" y="2021" width="0.2" height="15.0" fill="rgb(244,72,6)" rx="2" ry="2" />
<text  x="14.09" y="2031.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="62.0" y="1733" width="0.2" height="15.0" fill="rgb(233,17,50)" rx="2" ry="2" />
<text  x="65.02" y="1743.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;query::result_set_builder&amp;&gt; (1 samples, 0.02%)</title><rect x="99.8" y="1877" width="0.2" height="15.0" fill="rgb(241,170,19)" rx="2" ry="2" />
<text  x="102.83" y="1887.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (2 samples, 0.04%)</title><rect x="814.3" y="1717" width="0.4" height="15.0" fill="rgb(221,137,3)" rx="2" ry="2" />
<text  x="817.30" y="1727.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="58.7" y="1717" width="0.3" height="15.0" fill="rgb(253,10,12)" rx="2" ry="2" />
<text  x="61.74" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (12 samples, 0.22%)</title><rect x="1187.2" y="453" width="2.6" height="15.0" fill="rgb(248,126,54)" rx="2" ry="2" />
<text  x="1190.16" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.02%)</title><rect x="868.3" y="1685" width="0.2" height="15.0" fill="rgb(254,136,44)" rx="2" ry="2" />
<text  x="871.28" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (2 samples, 0.04%)</title><rect x="35.8" y="1685" width="0.4" height="15.0" fill="rgb(206,120,42)" rx="2" ry="2" />
<text  x="38.79" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (3 samples, 0.06%)</title><rect x="766.2" y="1749" width="0.7" height="15.0" fill="rgb(238,78,24)" rx="2" ry="2" />
<text  x="769.21" y="1759.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (2 samples, 0.04%)</title><rect x="284.1" y="1669" width="0.4" height="15.0" fill="rgb(235,7,31)" rx="2" ry="2" />
<text  x="287.07" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="10.9" y="2021" width="0.2" height="15.0" fill="rgb(209,177,36)" rx="2" ry="2" />
<text  x="13.87" y="2031.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1089.7" y="1813" width="0.2" height="15.0" fill="rgb(229,143,44)" rx="2" ry="2" />
<text  x="1092.68" y="1823.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.02%)</title><rect x="61.8" y="1653" width="0.2" height="15.0" fill="rgb(212,84,17)" rx="2" ry="2" />
<text  x="64.80" y="1663.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (8 samples, 0.15%)</title><rect x="981.9" y="1733" width="1.8" height="15.0" fill="rgb(208,67,1)" rx="2" ry="2" />
<text  x="984.93" y="1743.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (15 samples, 0.28%)</title><rect x="71.9" y="1845" width="3.2" height="15.0" fill="rgb(225,159,47)" rx="2" ry="2" />
<text  x="74.85" y="1855.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="1052.3" y="1717" width="0.2" height="15.0" fill="rgb(205,192,13)" rx="2" ry="2" />
<text  x="1055.31" y="1727.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;, partition_key const&gt; (1 samples, 0.02%)</title><rect x="869.8" y="1765" width="0.2" height="15.0" fill="rgb(232,103,27)" rx="2" ry="2" />
<text  x="872.81" y="1775.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="311.4" y="1701" width="1.3" height="15.0" fill="rgb(220,222,17)" rx="2" ry="2" />
<text  x="314.39" y="1711.5" ></text>
</g>
<g >
<title>sstables::delete_atomically (1 samples, 0.02%)</title><rect x="81.7" y="2037" width="0.2" height="15.0" fill="rgb(212,79,11)" rx="2" ry="2" />
<text  x="84.69" y="2047.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="649.9" y="1909" width="0.3" height="15.0" fill="rgb(223,59,10)" rx="2" ry="2" />
<text  x="652.94" y="1919.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="304.4" y="1749" width="0.2" height="15.0" fill="rgb(240,176,32)" rx="2" ry="2" />
<text  x="307.40" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (2 samples, 0.04%)</title><rect x="1187.8" y="261" width="0.5" height="15.0" fill="rgb(232,12,45)" rx="2" ry="2" />
<text  x="1190.81" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="421.3" y="1637" width="0.2" height="15.0" fill="rgb(235,11,2)" rx="2" ry="2" />
<text  x="424.33" y="1647.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (27 samples, 0.50%)</title><rect x="1095.4" y="1829" width="5.9" height="15.0" fill="rgb(223,20,42)" rx="2" ry="2" />
<text  x="1098.36" y="1839.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (1 samples, 0.02%)</title><rect x="79.9" y="1925" width="0.3" height="15.0" fill="rgb(248,222,13)" rx="2" ry="2" />
<text  x="82.94" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="698.5" y="1893" width="0.2" height="15.0" fill="rgb(207,212,38)" rx="2" ry="2" />
<text  x="701.46" y="1903.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (1 samples, 0.02%)</title><rect x="1188.7" y="37" width="0.2" height="15.0" fill="rgb(223,197,13)" rx="2" ry="2" />
<text  x="1191.69" y="47.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="42.1" y="1781" width="0.2" height="15.0" fill="rgb(236,98,12)" rx="2" ry="2" />
<text  x="45.13" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.20%)</title><rect x="1187.4" y="405" width="2.4" height="15.0" fill="rgb(231,138,1)" rx="2" ry="2" />
<text  x="1190.38" y="415.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1909" width="2.9" height="15.0" fill="rgb(214,202,22)" rx="2" ry="2" />
<text  x="1189.94" y="1919.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (29 samples, 0.54%)</title><rect x="289.8" y="1733" width="6.3" height="15.0" fill="rgb(218,154,47)" rx="2" ry="2" />
<text  x="292.76" y="1743.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="718.6" y="1909" width="0.2" height="15.0" fill="rgb(223,95,7)" rx="2" ry="2" />
<text  x="721.57" y="1919.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;cql3::prepared_cache_key_type&gt;::satisfy_with_result_of&lt;seastar::future&lt;void&gt;::then_impl_nrvo&lt;single_node_cql_env::prepare (1 samples, 0.02%)</title><rect x="10.4" y="341" width="0.3" height="15.0" fill="rgb(205,89,19)" rx="2" ry="2" />
<text  x="13.44" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="133.9" y="1845" width="0.2" height="15.0" fill="rgb(221,70,54)" rx="2" ry="2" />
<text  x="136.92" y="1855.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="586.8" y="1749" width="0.4" height="15.0" fill="rgb(242,158,32)" rx="2" ry="2" />
<text  x="589.78" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1188.7" y="181" width="0.2" height="15.0" fill="rgb(243,112,9)" rx="2" ry="2" />
<text  x="1191.69" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (5 samples, 0.09%)</title><rect x="521.2" y="1685" width="1.1" height="15.0" fill="rgb(222,4,14)" rx="2" ry="2" />
<text  x="524.21" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="972.5" y="1749" width="1.1" height="15.0" fill="rgb(243,27,41)" rx="2" ry="2" />
<text  x="975.53" y="1759.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.04%)</title><rect x="556.8" y="1829" width="0.5" height="15.0" fill="rgb(214,144,38)" rx="2" ry="2" />
<text  x="559.83" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="61.8" y="1669" width="0.2" height="15.0" fill="rgb(211,74,44)" rx="2" ry="2" />
<text  x="64.80" y="1679.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="331.3" y="1685" width="0.2" height="15.0" fill="rgb(214,33,14)" rx="2" ry="2" />
<text  x="334.28" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="343.1" y="1589" width="0.2" height="15.0" fill="rgb(247,79,16)" rx="2" ry="2" />
<text  x="346.08" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1188.3" y="229" width="0.2" height="15.0" fill="rgb(231,72,18)" rx="2" ry="2" />
<text  x="1191.25" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="815.0" y="1749" width="0.2" height="15.0" fill="rgb(251,87,14)" rx="2" ry="2" />
<text  x="817.95" y="1759.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (1 samples, 0.02%)</title><rect x="10.4" y="149" width="0.3" height="15.0" fill="rgb(217,21,52)" rx="2" ry="2" />
<text  x="13.44" y="159.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.02%)</title><rect x="56.8" y="1653" width="0.2" height="15.0" fill="rgb(213,62,5)" rx="2" ry="2" />
<text  x="59.77" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="52.2" y="1717" width="0.2" height="15.0" fill="rgb(247,166,13)" rx="2" ry="2" />
<text  x="55.18" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="57.0" y="1573" width="0.2" height="15.0" fill="rgb(245,209,39)" rx="2" ry="2" />
<text  x="59.99" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (7 samples, 0.13%)</title><rect x="1188.3" y="309" width="1.5" height="15.0" fill="rgb(227,30,11)" rx="2" ry="2" />
<text  x="1191.25" y="319.5" ></text>
</g>
<g >
<title>distributed_loader::init_system_keyspace (1 samples, 0.02%)</title><rect x="19.4" y="1973" width="0.2" height="15.0" fill="rgb(234,193,50)" rx="2" ry="2" />
<text  x="22.40" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1829" width="0.3" height="15.0" fill="rgb(212,226,0)" rx="2" ry="2" />
<text  x="13.44" y="1839.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (14 samples, 0.26%)</title><rect x="996.8" y="1701" width="3.1" height="15.0" fill="rgb(244,27,21)" rx="2" ry="2" />
<text  x="999.79" y="1711.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (1 samples, 0.02%)</title><rect x="175.0" y="1717" width="0.2" height="15.0" fill="rgb(211,195,6)" rx="2" ry="2" />
<text  x="178.01" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="61.8" y="1733" width="0.2" height="15.0" fill="rgb(213,173,27)" rx="2" ry="2" />
<text  x="64.80" y="1743.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="695.4" y="1765" width="0.2" height="15.0" fill="rgb(206,77,47)" rx="2" ry="2" />
<text  x="698.40" y="1775.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, gms::inet_address&gt;, std::allocator&lt;std::pair&lt;dht::token const, gms::inet_address&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.02%)</title><rect x="20.1" y="1781" width="0.2" height="15.0" fill="rgb(248,123,37)" rx="2" ry="2" />
<text  x="23.05" y="1791.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (3 samples, 0.06%)</title><rect x="756.4" y="1813" width="0.6" height="15.0" fill="rgb(253,36,17)" rx="2" ry="2" />
<text  x="759.38" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (11 samples, 0.20%)</title><rect x="563.2" y="1781" width="2.4" height="15.0" fill="rgb(241,95,8)" rx="2" ry="2" />
<text  x="566.17" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="865.9" y="1669" width="0.2" height="15.0" fill="rgb(252,41,5)" rx="2" ry="2" />
<text  x="868.88" y="1679.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (2 samples, 0.04%)</title><rect x="1123.3" y="1717" width="0.5" height="15.0" fill="rgb(240,0,36)" rx="2" ry="2" />
<text  x="1126.34" y="1727.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="609.7" y="1797" width="0.5" height="15.0" fill="rgb(221,22,4)" rx="2" ry="2" />
<text  x="612.73" y="1807.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.02%)</title><rect x="884.2" y="1845" width="0.3" height="15.0" fill="rgb(215,178,31)" rx="2" ry="2" />
<text  x="887.24" y="1855.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="795.1" y="1637" width="0.2" height="15.0" fill="rgb(227,97,13)" rx="2" ry="2" />
<text  x="798.06" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (1 samples, 0.02%)</title><rect x="1187.6" y="277" width="0.2" height="15.0" fill="rgb(229,4,6)" rx="2" ry="2" />
<text  x="1190.60" y="287.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.02%)</title><rect x="77.1" y="1861" width="0.2" height="15.0" fill="rgb(251,107,42)" rx="2" ry="2" />
<text  x="80.10" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="1116.1" y="1845" width="0.2" height="15.0" fill="rgb(243,39,4)" rx="2" ry="2" />
<text  x="1119.13" y="1855.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (2 samples, 0.04%)</title><rect x="656.7" y="1893" width="0.5" height="15.0" fill="rgb(251,208,11)" rx="2" ry="2" />
<text  x="659.72" y="1903.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="383.3" y="1573" width="0.4" height="15.0" fill="rgb(220,195,50)" rx="2" ry="2" />
<text  x="386.30" y="1583.5" ></text>
</g>
<g >
<title>query::result::builder::build (10 samples, 0.19%)</title><rect x="603.6" y="1861" width="2.2" height="15.0" fill="rgb(222,186,8)" rx="2" ry="2" />
<text  x="606.61" y="1871.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (1 samples, 0.02%)</title><rect x="866.3" y="1765" width="0.2" height="15.0" fill="rgb(213,110,1)" rx="2" ry="2" />
<text  x="869.31" y="1775.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (2 samples, 0.04%)</title><rect x="804.0" y="1605" width="0.5" height="15.0" fill="rgb(244,102,50)" rx="2" ry="2" />
<text  x="807.02" y="1615.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (6 samples, 0.11%)</title><rect x="334.3" y="1637" width="1.4" height="15.0" fill="rgb(236,90,19)" rx="2" ry="2" />
<text  x="337.34" y="1647.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.02%)</title><rect x="18.5" y="1909" width="0.2" height="15.0" fill="rgb(228,152,45)" rx="2" ry="2" />
<text  x="21.52" y="1919.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (3 samples, 0.06%)</title><rect x="1130.3" y="1541" width="0.7" height="15.0" fill="rgb(254,16,25)" rx="2" ry="2" />
<text  x="1133.33" y="1551.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="17.4" y="1797" width="0.2" height="15.0" fill="rgb(250,217,21)" rx="2" ry="2" />
<text  x="20.43" y="1807.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (5 samples, 0.09%)</title><rect x="1118.5" y="1637" width="1.1" height="15.0" fill="rgb(242,93,45)" rx="2" ry="2" />
<text  x="1121.53" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="24.9" y="1717" width="0.2" height="15.0" fill="rgb(225,220,40)" rx="2" ry="2" />
<text  x="27.86" y="1727.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.02%)</title><rect x="322.1" y="1797" width="0.2" height="15.0" fill="rgb(205,89,13)" rx="2" ry="2" />
<text  x="325.10" y="1807.5" ></text>
</g>
<g >
<title>ser::mutation_partition_view::range_tombstones (1 samples, 0.02%)</title><rect x="1121.8" y="1653" width="0.2" height="15.0" fill="rgb(205,57,20)" rx="2" ry="2" />
<text  x="1124.81" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1093" width="0.3" height="15.0" fill="rgb(242,6,26)" rx="2" ry="2" />
<text  x="13.44" y="1103.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (36 samples, 0.67%)</title><rect x="69.4" y="1893" width="7.9" height="15.0" fill="rgb(222,50,20)" rx="2" ry="2" />
<text  x="72.45" y="1903.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (4 samples, 0.07%)</title><rect x="1188.9" y="229" width="0.9" height="15.0" fill="rgb(209,32,12)" rx="2" ry="2" />
<text  x="1191.91" y="239.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (11 samples, 0.20%)</title><rect x="1164.9" y="1877" width="2.4" height="15.0" fill="rgb(248,165,27)" rx="2" ry="2" />
<text  x="1167.87" y="1887.5" ></text>
</g>
<g >
<title>ser::read_frame_size&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1121.4" y="1605" width="0.2" height="15.0" fill="rgb(208,93,36)" rx="2" ry="2" />
<text  x="1124.37" y="1615.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="558.6" y="1845" width="0.2" height="15.0" fill="rgb(228,115,54)" rx="2" ry="2" />
<text  x="561.58" y="1855.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="838.8" y="1861" width="0.4" height="15.0" fill="rgb(216,37,49)" rx="2" ry="2" />
<text  x="841.78" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.02%)</title><rect x="74.7" y="1797" width="0.2" height="15.0" fill="rgb(224,64,30)" rx="2" ry="2" />
<text  x="77.69" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="43.2" y="1733" width="0.2" height="15.0" fill="rgb(211,84,19)" rx="2" ry="2" />
<text  x="46.22" y="1743.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (1 samples, 0.02%)</title><rect x="526.9" y="1605" width="0.2" height="15.0" fill="rgb(250,91,11)" rx="2" ry="2" />
<text  x="529.89" y="1615.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (9 samples, 0.17%)</title><rect x="799.7" y="1557" width="1.9" height="15.0" fill="rgb(211,197,46)" rx="2" ry="2" />
<text  x="802.65" y="1567.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="1038.1" y="1669" width="0.2" height="15.0" fill="rgb(215,17,26)" rx="2" ry="2" />
<text  x="1041.10" y="1679.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.06%)</title><rect x="88.0" y="1909" width="0.7" height="15.0" fill="rgb(211,1,49)" rx="2" ry="2" />
<text  x="91.03" y="1919.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (3 samples, 0.06%)</title><rect x="100.7" y="1861" width="0.7" height="15.0" fill="rgb(244,156,41)" rx="2" ry="2" />
<text  x="103.70" y="1871.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="532.8" y="1749" width="0.2" height="15.0" fill="rgb(238,118,9)" rx="2" ry="2" />
<text  x="535.79" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (208 samples, 3.85%)</title><rect x="24.0" y="1845" width="45.4" height="15.0" fill="rgb(231,109,54)" rx="2" ry="2" />
<text  x="26.99" y="1855.5" >seas..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="95.0" y="1877" width="0.2" height="15.0" fill="rgb(210,119,17)" rx="2" ry="2" />
<text  x="98.02" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1509" width="0.3" height="15.0" fill="rgb(208,74,22)" rx="2" ry="2" />
<text  x="13.44" y="1519.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (123 samples, 2.28%)</title><rect x="784.4" y="1749" width="26.8" height="15.0" fill="rgb(244,185,17)" rx="2" ry="2" />
<text  x="787.35" y="1759.5" >s..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="632.0" y="1893" width="0.5" height="15.0" fill="rgb(208,153,47)" rx="2" ry="2" />
<text  x="635.02" y="1903.5" ></text>
</g>
<g >
<title>partition_entry::apply (3 samples, 0.06%)</title><rect x="1122.2" y="1669" width="0.7" height="15.0" fill="rgb(206,43,37)" rx="2" ry="2" />
<text  x="1125.25" y="1679.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (89 samples, 1.65%)</title><rect x="915.3" y="1829" width="19.4" height="15.0" fill="rgb(242,194,9)" rx="2" ry="2" />
<text  x="918.27" y="1839.5" ></text>
</g>
<g >
<title>std::move&lt;std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="65.5" y="1781" width="0.2" height="15.0" fill="rgb(207,225,27)" rx="2" ry="2" />
<text  x="68.51" y="1791.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="752.2" y="1701" width="0.5" height="15.0" fill="rgb(212,73,40)" rx="2" ry="2" />
<text  x="755.23" y="1711.5" ></text>
</g>
<g >
<title>all (5,399 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(220,16,15)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="713.1" y="1829" width="0.2" height="15.0" fill="rgb(229,181,10)" rx="2" ry="2" />
<text  x="716.10" y="1839.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.24%)</title><rect x="962.9" y="1797" width="2.9" height="15.0" fill="rgb(215,199,48)" rx="2" ry="2" />
<text  x="965.92" y="1807.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (1 samples, 0.02%)</title><rect x="1123.3" y="1685" width="0.3" height="15.0" fill="rgb(252,177,43)" rx="2" ry="2" />
<text  x="1126.34" y="1695.5" ></text>
</g>
<g >
<title>seastar::app_template::run (4,982 samples, 92.28%)</title><rect x="82.1" y="2021" width="1088.9" height="15.0" fill="rgb(241,47,54)" rx="2" ry="2" />
<text  x="85.12" y="2031.5" >seastar::app_template::run</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="580.2" y="1701" width="0.5" height="15.0" fill="rgb(224,94,45)" rx="2" ry="2" />
<text  x="583.22" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1413" width="0.3" height="15.0" fill="rgb(227,5,6)" rx="2" ry="2" />
<text  x="13.44" y="1423.5" ></text>
</g>
<g >
<title>ser::serializer&lt;ser::tombstone_view&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.02%)</title><rect x="1121.4" y="1637" width="0.2" height="15.0" fill="rgb(249,16,20)" rx="2" ry="2" />
<text  x="1124.37" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="127.1" y="1829" width="0.3" height="15.0" fill="rgb(210,176,16)" rx="2" ry="2" />
<text  x="130.15" y="1839.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (1 samples, 0.02%)</title><rect x="832.9" y="1845" width="0.2" height="15.0" fill="rgb(246,114,2)" rx="2" ry="2" />
<text  x="835.87" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="62.0" y="1637" width="0.2" height="15.0" fill="rgb(227,219,42)" rx="2" ry="2" />
<text  x="65.02" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1989" width="2.9" height="15.0" fill="rgb(205,144,2)" rx="2" ry="2" />
<text  x="1189.94" y="1999.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (2 samples, 0.04%)</title><rect x="803.4" y="1541" width="0.4" height="15.0" fill="rgb(241,156,40)" rx="2" ry="2" />
<text  x="806.37" y="1551.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1187.6" y="181" width="0.2" height="15.0" fill="rgb(226,19,29)" rx="2" ry="2" />
<text  x="1190.60" y="191.5" ></text>
</g>
<g >
<title>sstables::sstable::has_component (1 samples, 0.02%)</title><rect x="1189.3" y="37" width="0.3" height="15.0" fill="rgb(235,178,29)" rx="2" ry="2" />
<text  x="1192.34" y="47.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (25 samples, 0.46%)</title><rect x="308.6" y="1733" width="5.4" height="15.0" fill="rgb(218,19,14)" rx="2" ry="2" />
<text  x="311.55" y="1743.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (2 samples, 0.04%)</title><rect x="608.9" y="1829" width="0.4" height="15.0" fill="rgb(222,74,2)" rx="2" ry="2" />
<text  x="611.85" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_type_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="66.6" y="1797" width="0.2" height="15.0" fill="rgb(222,105,2)" rx="2" ry="2" />
<text  x="69.61" y="1807.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (6 samples, 0.11%)</title><rect x="651.3" y="1909" width="1.3" height="15.0" fill="rgb(234,72,45)" rx="2" ry="2" />
<text  x="654.25" y="1919.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.02%)</title><rect x="1167.9" y="1797" width="0.2" height="15.0" fill="rgb(248,19,31)" rx="2" ry="2" />
<text  x="1170.93" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="102.9" y="1909" width="0.2" height="15.0" fill="rgb(249,183,0)" rx="2" ry="2" />
<text  x="105.89" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="24.2" y="1781" width="0.2" height="15.0" fill="rgb(219,217,40)" rx="2" ry="2" />
<text  x="27.21" y="1791.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (2 samples, 0.04%)</title><rect x="1123.3" y="1733" width="0.5" height="15.0" fill="rgb(236,103,28)" rx="2" ry="2" />
<text  x="1126.34" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="642.3" y="1877" width="0.2" height="15.0" fill="rgb(236,70,12)" rx="2" ry="2" />
<text  x="645.29" y="1887.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::destroy&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="52.2" y="1685" width="0.2" height="15.0" fill="rgb(207,75,10)" rx="2" ry="2" />
<text  x="55.18" y="1695.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (6 samples, 0.11%)</title><rect x="752.9" y="1701" width="1.3" height="15.0" fill="rgb(217,141,43)" rx="2" ry="2" />
<text  x="755.88" y="1711.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="192.1" y="1669" width="0.2" height="15.0" fill="rgb(241,42,45)" rx="2" ry="2" />
<text  x="195.06" y="1679.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (1 samples, 0.02%)</title><rect x="757.0" y="1829" width="0.3" height="15.0" fill="rgb(206,72,16)" rx="2" ry="2" />
<text  x="760.03" y="1839.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="101.4" y="1845" width="0.2" height="15.0" fill="rgb(222,199,42)" rx="2" ry="2" />
<text  x="104.36" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="2005" width="2.9" height="15.0" fill="rgb(235,139,34)" rx="2" ry="2" />
<text  x="1189.94" y="2015.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="43.2" y="1653" width="0.2" height="15.0" fill="rgb(221,26,49)" rx="2" ry="2" />
<text  x="46.22" y="1663.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (9 samples, 0.17%)</title><rect x="792.0" y="1621" width="2.0" height="15.0" fill="rgb(212,155,41)" rx="2" ry="2" />
<text  x="795.00" y="1631.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1027.2" y="1589" width="0.2" height="15.0" fill="rgb(224,53,51)" rx="2" ry="2" />
<text  x="1030.17" y="1599.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (1 samples, 0.02%)</title><rect x="266.6" y="1653" width="0.2" height="15.0" fill="rgb(232,193,47)" rx="2" ry="2" />
<text  x="269.59" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (6 samples, 0.11%)</title><rect x="1091.0" y="1813" width="1.3" height="15.0" fill="rgb(218,108,19)" rx="2" ry="2" />
<text  x="1093.99" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1941" width="2.9" height="15.0" fill="rgb(229,190,33)" rx="2" ry="2" />
<text  x="1189.94" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (50 samples, 0.93%)</title><rect x="893.9" y="1733" width="10.9" height="15.0" fill="rgb(221,18,30)" rx="2" ry="2" />
<text  x="896.85" y="1743.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (4 samples, 0.07%)</title><rect x="753.3" y="1685" width="0.9" height="15.0" fill="rgb(231,117,27)" rx="2" ry="2" />
<text  x="756.32" y="1695.5" ></text>
</g>
<g >
<title>schema_registry::learn (5 samples, 0.09%)</title><rect x="100.3" y="1893" width="1.1" height="15.0" fill="rgb(249,79,40)" rx="2" ry="2" />
<text  x="103.26" y="1903.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (24 samples, 0.44%)</title><rect x="290.4" y="1717" width="5.3" height="15.0" fill="rgb(212,225,25)" rx="2" ry="2" />
<text  x="293.41" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (1 samples, 0.02%)</title><rect x="865.2" y="1781" width="0.2" height="15.0" fill="rgb(211,154,17)" rx="2" ry="2" />
<text  x="868.22" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_service_level_statement, std::default_delete&lt;cql3::statements::drop_service_level_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="66.8" y="1765" width="0.2" height="15.0" fill="rgb(251,44,28)" rx="2" ry="2" />
<text  x="69.83" y="1775.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (3 samples, 0.06%)</title><rect x="991.1" y="1701" width="0.7" height="15.0" fill="rgb(207,208,32)" rx="2" ry="2" />
<text  x="994.11" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (4 samples, 0.07%)</title><rect x="250.4" y="1525" width="0.9" height="15.0" fill="rgb(212,121,22)" rx="2" ry="2" />
<text  x="253.41" y="1535.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (3 samples, 0.06%)</title><rect x="843.6" y="1781" width="0.6" height="15.0" fill="rgb(253,74,34)" rx="2" ry="2" />
<text  x="846.58" y="1791.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::file&gt;, seastar::with_file_close_on_failure&lt;sstables::sstable::new_sstable_component_file (2 samples, 0.04%)</title><rect x="636.6" y="1925" width="0.4" height="15.0" fill="rgb(252,11,4)" rx="2" ry="2" />
<text  x="639.61" y="1935.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (9 samples, 0.17%)</title><rect x="801.8" y="1589" width="2.0" height="15.0" fill="rgb(248,169,47)" rx="2" ry="2" />
<text  x="804.84" y="1599.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_keyspace_statement, std::default_delete&lt;cql3::statements::drop_keyspace_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="66.2" y="1797" width="0.2" height="15.0" fill="rgb(233,5,13)" rx="2" ry="2" />
<text  x="69.17" y="1807.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.11%)</title><rect x="695.4" y="1813" width="1.3" height="15.0" fill="rgb(233,147,37)" rx="2" ry="2" />
<text  x="698.40" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::~vector (3 samples, 0.06%)</title><rect x="77.3" y="1877" width="0.7" height="15.0" fill="rgb(239,94,9)" rx="2" ry="2" />
<text  x="80.32" y="1887.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="19.4" y="1781" width="0.2" height="15.0" fill="rgb(249,201,31)" rx="2" ry="2" />
<text  x="22.40" y="1791.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (2 samples, 0.04%)</title><rect x="695.8" y="1669" width="0.5" height="15.0" fill="rgb(221,198,14)" rx="2" ry="2" />
<text  x="698.84" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (7 samples, 0.13%)</title><rect x="765.3" y="1781" width="1.6" height="15.0" fill="rgb(240,214,36)" rx="2" ry="2" />
<text  x="768.34" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.02%)</title><rect x="720.3" y="1669" width="0.2" height="15.0" fill="rgb(215,82,36)" rx="2" ry="2" />
<text  x="723.32" y="1679.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (4 samples, 0.07%)</title><rect x="547.9" y="1733" width="0.8" height="15.0" fill="rgb(241,13,16)" rx="2" ry="2" />
<text  x="550.87" y="1743.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (2 samples, 0.04%)</title><rect x="867.8" y="1701" width="0.5" height="15.0" fill="rgb(229,122,36)" rx="2" ry="2" />
<text  x="870.84" y="1711.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="19.4" y="1861" width="0.2" height="15.0" fill="rgb(228,208,39)" rx="2" ry="2" />
<text  x="22.40" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (1 samples, 0.02%)</title><rect x="44.8" y="1733" width="0.2" height="15.0" fill="rgb(212,131,2)" rx="2" ry="2" />
<text  x="47.75" y="1743.5" ></text>
</g>
<g >
<title>atomic_cell::atomic_cell (1 samples, 0.02%)</title><rect x="1120.5" y="1637" width="0.2" height="15.0" fill="rgb(214,195,13)" rx="2" ry="2" />
<text  x="1123.50" y="1647.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (3 samples, 0.06%)</title><rect x="1081.2" y="1717" width="0.6" height="15.0" fill="rgb(250,48,1)" rx="2" ry="2" />
<text  x="1084.16" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (21 samples, 0.39%)</title><rect x="1075.9" y="1685" width="4.6" height="15.0" fill="rgb(219,205,21)" rx="2" ry="2" />
<text  x="1078.91" y="1695.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::~abstract_write_response_handler (1 samples, 0.02%)</title><rect x="697.4" y="1893" width="0.2" height="15.0" fill="rgb(219,80,30)" rx="2" ry="2" />
<text  x="700.37" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (3 samples, 0.06%)</title><rect x="469.0" y="1685" width="0.6" height="15.0" fill="rgb(223,69,51)" rx="2" ry="2" />
<text  x="471.97" y="1695.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (1 samples, 0.02%)</title><rect x="1041.8" y="1669" width="0.2" height="15.0" fill="rgb(235,43,32)" rx="2" ry="2" />
<text  x="1044.82" y="1679.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.02%)</title><rect x="100.3" y="1733" width="0.2" height="15.0" fill="rgb(252,157,9)" rx="2" ry="2" />
<text  x="103.26" y="1743.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (9 samples, 0.17%)</title><rect x="673.3" y="1893" width="2.0" height="15.0" fill="rgb(232,61,32)" rx="2" ry="2" />
<text  x="676.33" y="1903.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="91.5" y="1877" width="0.2" height="15.0" fill="rgb(219,23,37)" rx="2" ry="2" />
<text  x="94.52" y="1887.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; (1 samples, 0.02%)</title><rect x="1115.0" y="1845" width="0.3" height="15.0" fill="rgb(211,158,39)" rx="2" ry="2" />
<text  x="1118.03" y="1855.5" ></text>
</g>
<g >
<title>gms::gossiper::start_gossiping (1 samples, 0.02%)</title><rect x="19.6" y="1877" width="0.2" height="15.0" fill="rgb(232,71,36)" rx="2" ry="2" />
<text  x="22.62" y="1887.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.02%)</title><rect x="1189.3" y="85" width="0.3" height="15.0" fill="rgb(215,227,46)" rx="2" ry="2" />
<text  x="1192.34" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (15 samples, 0.28%)</title><rect x="1038.8" y="1685" width="3.2" height="15.0" fill="rgb(248,110,4)" rx="2" ry="2" />
<text  x="1041.76" y="1695.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="1127.7" y="1541" width="0.2" height="15.0" fill="rgb(241,97,17)" rx="2" ry="2" />
<text  x="1130.71" y="1551.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (3 samples, 0.06%)</title><rect x="666.3" y="1877" width="0.7" height="15.0" fill="rgb(213,203,42)" rx="2" ry="2" />
<text  x="669.33" y="1887.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="1129.9" y="1573" width="0.2" height="15.0" fill="rgb(225,137,35)" rx="2" ry="2" />
<text  x="1132.90" y="1583.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="60.3" y="1765" width="0.4" height="15.0" fill="rgb(212,214,9)" rx="2" ry="2" />
<text  x="63.27" y="1775.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false&gt;::~_Optional_base (1 samples, 0.02%)</title><rect x="43.4" y="1749" width="0.3" height="15.0" fill="rgb(239,80,37)" rx="2" ry="2" />
<text  x="46.44" y="1759.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="528.2" y="1637" width="0.2" height="15.0" fill="rgb(239,229,11)" rx="2" ry="2" />
<text  x="531.20" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::run_and_dispose (1 samples, 0.02%)</title><rect x="83.4" y="1941" width="0.3" height="15.0" fill="rgb(232,149,15)" rx="2" ry="2" />
<text  x="86.44" y="1951.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.02%)</title><rect x="1068.3" y="1669" width="0.2" height="15.0" fill="rgb(251,133,11)" rx="2" ry="2" />
<text  x="1071.26" y="1679.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="830.5" y="1701" width="0.2" height="15.0" fill="rgb(234,63,19)" rx="2" ry="2" />
<text  x="833.47" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="1151.5" y="1781" width="0.5" height="15.0" fill="rgb(247,83,24)" rx="2" ry="2" />
<text  x="1154.53" y="1791.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="77.5" y="1829" width="0.3" height="15.0" fill="rgb(211,228,17)" rx="2" ry="2" />
<text  x="80.53" y="1839.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (2 samples, 0.04%)</title><rect x="588.7" y="1781" width="0.5" height="15.0" fill="rgb(212,112,1)" rx="2" ry="2" />
<text  x="591.74" y="1791.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (16 samples, 0.30%)</title><rect x="260.7" y="1621" width="3.5" height="15.0" fill="rgb(220,102,12)" rx="2" ry="2" />
<text  x="263.69" y="1631.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (1 samples, 0.02%)</title><rect x="842.3" y="1781" width="0.2" height="15.0" fill="rgb(207,226,7)" rx="2" ry="2" />
<text  x="845.27" y="1791.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.07%)</title><rect x="391.4" y="1573" width="0.9" height="15.0" fill="rgb(253,8,36)" rx="2" ry="2" />
<text  x="394.39" y="1583.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (1 samples, 0.02%)</title><rect x="999.9" y="1701" width="0.2" height="15.0" fill="rgb(246,120,50)" rx="2" ry="2" />
<text  x="1002.85" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="469.4" y="1669" width="0.2" height="15.0" fill="rgb(224,124,2)" rx="2" ry="2" />
<text  x="472.41" y="1679.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (1 samples, 0.02%)</title><rect x="660.4" y="1845" width="0.3" height="15.0" fill="rgb(219,64,3)" rx="2" ry="2" />
<text  x="663.43" y="1855.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (10 samples, 0.19%)</title><rect x="262.0" y="1605" width="2.2" height="15.0" fill="rgb(235,229,31)" rx="2" ry="2" />
<text  x="265.00" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (2 samples, 0.04%)</title><rect x="866.1" y="1781" width="0.4" height="15.0" fill="rgb(222,127,18)" rx="2" ry="2" />
<text  x="869.10" y="1791.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (2 samples, 0.04%)</title><rect x="71.2" y="1781" width="0.4" height="15.0" fill="rgb(249,214,0)" rx="2" ry="2" />
<text  x="74.20" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (2 samples, 0.04%)</title><rect x="103.3" y="1909" width="0.5" height="15.0" fill="rgb(223,229,14)" rx="2" ry="2" />
<text  x="106.32" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1893" width="0.3" height="15.0" fill="rgb(232,51,37)" rx="2" ry="2" />
<text  x="13.44" y="1903.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="1119.0" y="1589" width="0.2" height="15.0" fill="rgb(243,114,38)" rx="2" ry="2" />
<text  x="1121.97" y="1599.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1188.7" y="117" width="0.2" height="15.0" fill="rgb(233,181,0)" rx="2" ry="2" />
<text  x="1191.69" y="127.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (1 samples, 0.02%)</title><rect x="89.1" y="1909" width="0.2" height="15.0" fill="rgb(251,69,54)" rx="2" ry="2" />
<text  x="92.12" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="973.4" y="1733" width="0.2" height="15.0" fill="rgb(253,18,37)" rx="2" ry="2" />
<text  x="976.41" y="1743.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (4 samples, 0.07%)</title><rect x="1062.4" y="1717" width="0.8" height="15.0" fill="rgb(247,140,16)" rx="2" ry="2" />
<text  x="1065.36" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="443.4" y="1701" width="0.2" height="15.0" fill="rgb(235,166,22)" rx="2" ry="2" />
<text  x="446.40" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (6 samples, 0.11%)</title><rect x="716.2" y="1861" width="1.3" height="15.0" fill="rgb(217,103,53)" rx="2" ry="2" />
<text  x="719.16" y="1871.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (1 samples, 0.02%)</title><rect x="557.1" y="1813" width="0.2" height="15.0" fill="rgb(210,22,36)" rx="2" ry="2" />
<text  x="560.05" y="1823.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (270 samples, 5.00%)</title><rect x="21.4" y="1941" width="59.0" height="15.0" fill="rgb(239,91,31)" rx="2" ry="2" />
<text  x="24.37" y="1951.5" >single..</text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.02%)</title><rect x="917.5" y="1813" width="0.2" height="15.0" fill="rgb(233,115,18)" rx="2" ry="2" />
<text  x="920.46" y="1823.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.02%)</title><rect x="496.3" y="1685" width="0.2" height="15.0" fill="rgb(222,93,40)" rx="2" ry="2" />
<text  x="499.29" y="1695.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (1 samples, 0.02%)</title><rect x="1168.6" y="1909" width="0.2" height="15.0" fill="rgb(224,168,48)" rx="2" ry="2" />
<text  x="1171.58" y="1919.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (2 samples, 0.04%)</title><rect x="27.5" y="1605" width="0.4" height="15.0" fill="rgb(220,160,23)" rx="2" ry="2" />
<text  x="30.48" y="1615.5" ></text>
</g>
<g >
<title>database::query (101 samples, 1.87%)</title><rect x="1011.9" y="1685" width="22.0" height="15.0" fill="rgb(241,117,48)" rx="2" ry="2" />
<text  x="1014.87" y="1695.5" >d..</text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (4 samples, 0.07%)</title><rect x="1132.1" y="1637" width="0.9" height="15.0" fill="rgb(209,49,24)" rx="2" ry="2" />
<text  x="1135.08" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1187.4" y="197" width="0.2" height="15.0" fill="rgb(240,198,23)" rx="2" ry="2" />
<text  x="1190.38" y="207.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;single_fragment_range&lt; (1 samples, 0.02%)</title><rect x="19.8" y="1781" width="0.3" height="15.0" fill="rgb(230,150,8)" rx="2" ry="2" />
<text  x="22.84" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (4 samples, 0.07%)</title><rect x="399.5" y="1589" width="0.8" height="15.0" fill="rgb(228,111,28)" rx="2" ry="2" />
<text  x="402.47" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (2 samples, 0.04%)</title><rect x="570.8" y="1845" width="0.5" height="15.0" fill="rgb(248,39,38)" rx="2" ry="2" />
<text  x="573.82" y="1855.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (25 samples, 0.46%)</title><rect x="620.9" y="1861" width="5.4" height="15.0" fill="rgb(219,88,1)" rx="2" ry="2" />
<text  x="623.87" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="822.6" y="1781" width="0.2" height="15.0" fill="rgb(206,87,15)" rx="2" ry="2" />
<text  x="825.60" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="482.5" y="1733" width="0.5" height="15.0" fill="rgb(220,191,8)" rx="2" ry="2" />
<text  x="485.52" y="1743.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (1 samples, 0.02%)</title><rect x="867.2" y="1717" width="0.2" height="15.0" fill="rgb(233,60,53)" rx="2" ry="2" />
<text  x="870.19" y="1727.5" ></text>
</g>
<g >
<title>sstables::mc::writer::get_data_offset (1 samples, 0.02%)</title><rect x="1189.3" y="53" width="0.3" height="15.0" fill="rgb(249,16,25)" rx="2" ry="2" />
<text  x="1192.34" y="63.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="990.9" y="1685" width="0.2" height="15.0" fill="rgb(220,200,28)" rx="2" ry="2" />
<text  x="993.89" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.02%)</title><rect x="74.7" y="1813" width="0.2" height="15.0" fill="rgb(243,39,18)" rx="2" ry="2" />
<text  x="77.69" y="1823.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (3 samples, 0.06%)</title><rect x="795.9" y="1605" width="0.7" height="15.0" fill="rgb(248,204,34)" rx="2" ry="2" />
<text  x="798.94" y="1615.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.02%)</title><rect x="46.7" y="1717" width="0.2" height="15.0" fill="rgb(205,221,3)" rx="2" ry="2" />
<text  x="49.72" y="1727.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="10.4" y="245" width="0.3" height="15.0" fill="rgb(220,85,36)" rx="2" ry="2" />
<text  x="13.44" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="99.8" y="1685" width="0.2" height="15.0" fill="rgb(238,36,22)" rx="2" ry="2" />
<text  x="102.83" y="1695.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.02%)</title><rect x="81.3" y="1861" width="0.2" height="15.0" fill="rgb(234,114,39)" rx="2" ry="2" />
<text  x="84.25" y="1871.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (2 samples, 0.04%)</title><rect x="126.7" y="1797" width="0.4" height="15.0" fill="rgb(234,79,48)" rx="2" ry="2" />
<text  x="129.71" y="1807.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="1055.8" y="1765" width="0.4" height="15.0" fill="rgb(217,63,17)" rx="2" ry="2" />
<text  x="1058.80" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="51.5" y="1621" width="0.2" height="15.0" fill="rgb(220,19,35)" rx="2" ry="2" />
<text  x="54.53" y="1631.5" ></text>
</g>
<g >
<title>table::make_reader (1 samples, 0.02%)</title><rect x="555.7" y="1797" width="0.3" height="15.0" fill="rgb(253,94,50)" rx="2" ry="2" />
<text  x="558.74" y="1807.5" ></text>
</g>
<g >
<title>fmt::v7::basic_format_parse_context&lt;char, fmt::v7::detail::error_handler&gt;::next_arg_id (1 samples, 0.02%)</title><rect x="20.7" y="1909" width="0.2" height="15.0" fill="rgb(239,76,27)" rx="2" ry="2" />
<text  x="23.71" y="1919.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (99 samples, 1.83%)</title><rect x="787.2" y="1717" width="21.6" height="15.0" fill="rgb(206,12,13)" rx="2" ry="2" />
<text  x="790.20" y="1727.5" >s..</text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (1 samples, 0.02%)</title><rect x="720.3" y="1589" width="0.2" height="15.0" fill="rgb(231,89,41)" rx="2" ry="2" />
<text  x="723.32" y="1599.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="22.9" y="1749" width="0.2" height="15.0" fill="rgb(229,80,20)" rx="2" ry="2" />
<text  x="25.89" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (2 samples, 0.04%)</title><rect x="1088.6" y="1765" width="0.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1091.59" y="1775.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (28 samples, 0.52%)</title><rect x="1068.5" y="1669" width="6.1" height="15.0" fill="rgb(209,33,45)" rx="2" ry="2" />
<text  x="1071.48" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1029" width="0.3" height="15.0" fill="rgb(229,161,42)" rx="2" ry="2" />
<text  x="13.44" y="1039.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (7 samples, 0.13%)</title><rect x="237.3" y="1493" width="1.5" height="15.0" fill="rgb(206,102,54)" rx="2" ry="2" />
<text  x="240.30" y="1503.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::native_value_delete_visitor&gt; (1 samples, 0.02%)</title><rect x="101.1" y="1717" width="0.3" height="15.0" fill="rgb(249,113,3)" rx="2" ry="2" />
<text  x="104.14" y="1727.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="842.5" y="1765" width="0.2" height="15.0" fill="rgb(230,64,10)" rx="2" ry="2" />
<text  x="845.49" y="1775.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="51.7" y="1621" width="0.3" height="15.0" fill="rgb(235,168,21)" rx="2" ry="2" />
<text  x="54.74" y="1631.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1187.6" y="245" width="0.2" height="15.0" fill="rgb(249,94,27)" rx="2" ry="2" />
<text  x="1190.60" y="255.5" ></text>
</g>
<g >
<title>cql3::update_parameters::make_cell (1 samples, 0.02%)</title><rect x="867.6" y="1717" width="0.2" height="15.0" fill="rgb(252,226,52)" rx="2" ry="2" />
<text  x="870.63" y="1727.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="101.4" y="1861" width="0.2" height="15.0" fill="rgb(235,156,32)" rx="2" ry="2" />
<text  x="104.36" y="1871.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (4 samples, 0.07%)</title><rect x="610.8" y="1829" width="0.9" height="15.0" fill="rgb(231,93,35)" rx="2" ry="2" />
<text  x="613.82" y="1839.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (5 samples, 0.09%)</title><rect x="516.2" y="1733" width="1.1" height="15.0" fill="rgb(210,46,23)" rx="2" ry="2" />
<text  x="519.18" y="1743.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (11 samples, 0.20%)</title><rect x="867.4" y="1749" width="2.4" height="15.0" fill="rgb(220,196,50)" rx="2" ry="2" />
<text  x="870.41" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1573" width="0.3" height="15.0" fill="rgb(227,132,4)" rx="2" ry="2" />
<text  x="13.44" y="1583.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="636.8" y="1845" width="0.2" height="15.0" fill="rgb(246,92,4)" rx="2" ry="2" />
<text  x="639.83" y="1855.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (1 samples, 0.02%)</title><rect x="1156.1" y="1893" width="0.2" height="15.0" fill="rgb(212,219,15)" rx="2" ry="2" />
<text  x="1159.12" y="1903.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (459 samples, 8.50%)</title><rect x="189.4" y="1733" width="100.4" height="15.0" fill="rgb(240,207,38)" rx="2" ry="2" />
<text  x="192.44" y="1743.5" >partition_sn..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="891.9" y="1733" width="0.2" height="15.0" fill="rgb(216,18,0)" rx="2" ry="2" />
<text  x="894.89" y="1743.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="761.4" y="1765" width="0.2" height="15.0" fill="rgb(208,212,17)" rx="2" ry="2" />
<text  x="764.41" y="1775.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.02%)</title><rect x="1167.3" y="1925" width="0.2" height="15.0" fill="rgb(218,79,17)" rx="2" ry="2" />
<text  x="1170.27" y="1935.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="1187.6" y="197" width="0.2" height="15.0" fill="rgb(222,178,3)" rx="2" ry="2" />
<text  x="1190.60" y="207.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="849.9" y="1765" width="0.7" height="15.0" fill="rgb(248,180,23)" rx="2" ry="2" />
<text  x="852.92" y="1775.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (1 samples, 0.02%)</title><rect x="321.9" y="1781" width="0.2" height="15.0" fill="rgb(226,190,18)" rx="2" ry="2" />
<text  x="324.88" y="1791.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (2 samples, 0.04%)</title><rect x="100.3" y="1877" width="0.4" height="15.0" fill="rgb(248,110,19)" rx="2" ry="2" />
<text  x="103.26" y="1887.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (3 samples, 0.06%)</title><rect x="78.4" y="1845" width="0.7" height="15.0" fill="rgb(230,72,38)" rx="2" ry="2" />
<text  x="81.41" y="1855.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.02%)</title><rect x="1178.0" y="2053" width="0.2" height="15.0" fill="rgb(240,170,41)" rx="2" ry="2" />
<text  x="1180.98" y="2063.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="62.5" y="1669" width="0.2" height="15.0" fill="rgb(216,158,54)" rx="2" ry="2" />
<text  x="65.45" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="865.4" y="1797" width="0.3" height="15.0" fill="rgb(253,208,6)" rx="2" ry="2" />
<text  x="868.44" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (3 samples, 0.06%)</title><rect x="271.0" y="1637" width="0.6" height="15.0" fill="rgb(238,67,19)" rx="2" ry="2" />
<text  x="273.96" y="1647.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (1 samples, 0.02%)</title><rect x="548.3" y="1717" width="0.2" height="15.0" fill="rgb(236,2,34)" rx="2" ry="2" />
<text  x="551.31" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="47.6" y="1557" width="0.2" height="15.0" fill="rgb(235,39,3)" rx="2" ry="2" />
<text  x="50.59" y="1567.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (2 samples, 0.04%)</title><rect x="833.5" y="1845" width="0.5" height="15.0" fill="rgb(210,72,0)" rx="2" ry="2" />
<text  x="836.53" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="651.9" y="1861" width="0.2" height="15.0" fill="rgb(239,141,18)" rx="2" ry="2" />
<text  x="654.91" y="1871.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::find_bucket_index (2 samples, 0.04%)</title><rect x="686.7" y="1877" width="0.4" height="15.0" fill="rgb(253,175,31)" rx="2" ry="2" />
<text  x="689.66" y="1887.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.02%)</title><rect x="1092.5" y="1829" width="0.2" height="15.0" fill="rgb(223,217,35)" rx="2" ry="2" />
<text  x="1095.52" y="1839.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1509" width="2.9" height="15.0" fill="rgb(241,92,52)" rx="2" ry="2" />
<text  x="1189.94" y="1519.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (5 samples, 0.09%)</title><rect x="550.1" y="1685" width="1.1" height="15.0" fill="rgb(242,191,37)" rx="2" ry="2" />
<text  x="553.06" y="1695.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (1 samples, 0.02%)</title><rect x="860.4" y="1909" width="0.2" height="15.0" fill="rgb(228,118,47)" rx="2" ry="2" />
<text  x="863.41" y="1919.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,117 samples, 20.69%)</title><rect x="873.7" y="1893" width="244.2" height="15.0" fill="rgb(235,196,9)" rx="2" ry="2" />
<text  x="876.75" y="1903.5" >seastar::noncopyable_function&lt;se..</text>
</g>
<g >
<title>serialize (1 samples, 0.02%)</title><rect x="73.2" y="1717" width="0.2" height="15.0" fill="rgb(253,18,33)" rx="2" ry="2" />
<text  x="76.16" y="1727.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::take (1 samples, 0.02%)</title><rect x="1144.1" y="1893" width="0.2" height="15.0" fill="rgb(250,102,1)" rx="2" ry="2" />
<text  x="1147.10" y="1903.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (3 samples, 0.06%)</title><rect x="187.0" y="1669" width="0.7" height="15.0" fill="rgb(247,214,51)" rx="2" ry="2" />
<text  x="190.03" y="1679.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (2 samples, 0.04%)</title><rect x="282.8" y="1653" width="0.4" height="15.0" fill="rgb(245,65,29)" rx="2" ry="2" />
<text  x="285.76" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.4" y="1349" width="0.3" height="15.0" fill="rgb(227,78,5)" rx="2" ry="2" />
<text  x="13.44" y="1359.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="591.1" y="1781" width="0.5" height="15.0" fill="rgb(235,176,14)" rx="2" ry="2" />
<text  x="594.15" y="1791.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1 samples, 0.02%)</title><rect x="1167.9" y="1877" width="0.2" height="15.0" fill="rgb(224,222,42)" rx="2" ry="2" />
<text  x="1170.93" y="1887.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (1 samples, 0.02%)</title><rect x="595.7" y="1797" width="0.3" height="15.0" fill="rgb(219,166,45)" rx="2" ry="2" />
<text  x="598.74" y="1807.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (1 samples, 0.02%)</title><rect x="622.2" y="1845" width="0.2" height="15.0" fill="rgb(213,48,41)" rx="2" ry="2" />
<text  x="625.18" y="1855.5" ></text>
</g>
<g >
<title>partition_entry::make_evictable (1 samples, 0.02%)</title><rect x="18.5" y="1989" width="0.2" height="15.0" fill="rgb(244,65,3)" rx="2" ry="2" />
<text  x="21.52" y="1999.5" ></text>
</g>
<g >
<title>database::has_keyspace (15 samples, 0.28%)</title><rect x="841.0" y="1845" width="3.2" height="15.0" fill="rgb(220,175,48)" rx="2" ry="2" />
<text  x="843.96" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (10 samples, 0.19%)</title><rect x="231.6" y="1461" width="2.2" height="15.0" fill="rgb(221,47,1)" rx="2" ry="2" />
<text  x="234.62" y="1471.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="52.0" y="1685" width="0.2" height="15.0" fill="rgb(237,113,17)" rx="2" ry="2" />
<text  x="54.96" y="1695.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (45 samples, 0.83%)</title><rect x="558.8" y="1845" width="9.8" height="15.0" fill="rgb(228,167,45)" rx="2" ry="2" />
<text  x="561.80" y="1855.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.02%)</title><rect x="99.2" y="1717" width="0.2" height="15.0" fill="rgb(223,46,9)" rx="2" ry="2" />
<text  x="102.17" y="1727.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (9 samples, 0.17%)</title><rect x="687.1" y="1893" width="2.0" height="15.0" fill="rgb(240,227,29)" rx="2" ry="2" />
<text  x="690.10" y="1903.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="516.2" y="1717" width="1.1" height="15.0" fill="rgb(243,183,12)" rx="2" ry="2" />
<text  x="519.18" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier_raw&gt;::shared_ptr_count_for&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.02%)</title><rect x="46.9" y="1717" width="0.3" height="15.0" fill="rgb(223,154,37)" rx="2" ry="2" />
<text  x="49.94" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="46.3" y="1573" width="0.4" height="15.0" fill="rgb(231,203,54)" rx="2" ry="2" />
<text  x="49.28" y="1583.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (2 samples, 0.04%)</title><rect x="1132.3" y="1605" width="0.4" height="15.0" fill="rgb(232,217,2)" rx="2" ry="2" />
<text  x="1135.30" y="1615.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="838.1" y="1861" width="0.2" height="15.0" fill="rgb(234,143,12)" rx="2" ry="2" />
<text  x="841.12" y="1871.5" ></text>
</g>
<g >
<title>posix_memalign (8 samples, 0.15%)</title><rect x="237.1" y="1509" width="1.7" height="15.0" fill="rgb(212,161,27)" rx="2" ry="2" />
<text  x="240.08" y="1519.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (3 samples, 0.06%)</title><rect x="832.0" y="1845" width="0.7" height="15.0" fill="rgb(234,69,24)" rx="2" ry="2" />
<text  x="835.00" y="1855.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1189.6" y="101" width="0.2" height="15.0" fill="rgb(224,138,3)" rx="2" ry="2" />
<text  x="1192.56" y="111.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="696.9" y="1909" width="0.2" height="15.0" fill="rgb(231,223,48)" rx="2" ry="2" />
<text  x="699.93" y="1919.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="19.4" y="1829" width="0.2" height="15.0" fill="rgb(245,47,32)" rx="2" ry="2" />
<text  x="22.40" y="1839.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (1 samples, 0.02%)</title><rect x="19.0" y="1941" width="0.2" height="15.0" fill="rgb(218,123,29)" rx="2" ry="2" />
<text  x="21.96" y="1951.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="706.8" y="1893" width="0.2" height="15.0" fill="rgb(228,96,26)" rx="2" ry="2" />
<text  x="709.77" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.02%)</title><rect x="999.4" y="1605" width="0.2" height="15.0" fill="rgb(254,219,45)" rx="2" ry="2" />
<text  x="1002.42" y="1615.5" ></text>
</g>
<g >
<title>tombstone::apply (1 samples, 0.02%)</title><rect x="422.6" y="1637" width="0.3" height="15.0" fill="rgb(237,94,7)" rx="2" ry="2" />
<text  x="425.64" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (1 samples, 0.02%)</title><rect x="886.0" y="1829" width="0.2" height="15.0" fill="rgb(247,132,29)" rx="2" ry="2" />
<text  x="888.98" y="1839.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="910.2" y="1781" width="0.9" height="15.0" fill="rgb(220,25,39)" rx="2" ry="2" />
<text  x="913.24" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (5 samples, 0.09%)</title><rect x="946.1" y="1797" width="1.1" height="15.0" fill="rgb(249,113,37)" rx="2" ry="2" />
<text  x="949.09" y="1807.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="933.4" y="1749" width="0.2" height="15.0" fill="rgb(207,67,15)" rx="2" ry="2" />
<text  x="936.41" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.04%)</title><rect x="1187.8" y="293" width="0.5" height="15.0" fill="rgb(243,138,17)" rx="2" ry="2" />
<text  x="1190.81" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.02%)</title><rect x="343.3" y="1605" width="0.2" height="15.0" fill="rgb(231,79,9)" rx="2" ry="2" />
<text  x="346.30" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="81.5" y="1941" width="0.2" height="15.0" fill="rgb(229,117,9)" rx="2" ry="2" />
<text  x="84.47" y="1951.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (1 samples, 0.02%)</title><rect x="1187.4" y="261" width="0.2" height="15.0" fill="rgb(253,118,12)" rx="2" ry="2" />
<text  x="1190.38" y="271.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (8 samples, 0.15%)</title><rect x="738.0" y="1765" width="1.8" height="15.0" fill="rgb(226,114,16)" rx="2" ry="2" />
<text  x="741.02" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.24%)</title><rect x="1186.9" y="1797" width="2.9" height="15.0" fill="rgb(243,39,41)" rx="2" ry="2" />
<text  x="1189.94" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="17.4" y="2005" width="0.2" height="15.0" fill="rgb(226,146,10)" rx="2" ry="2" />
<text  x="20.43" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="48.7" y="1733" width="0.2" height="15.0" fill="rgb(213,72,38)" rx="2" ry="2" />
<text  x="51.68" y="1743.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (64 samples, 1.19%)</title><rect x="1019.1" y="1669" width="14.0" height="15.0" fill="rgb(236,190,54)" rx="2" ry="2" />
<text  x="1022.09" y="1679.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (2 samples, 0.04%)</title><rect x="750.5" y="1781" width="0.4" height="15.0" fill="rgb(245,23,28)" rx="2" ry="2" />
<text  x="753.48" y="1791.5" ></text>
</g>
</g>
</svg>
