<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1878.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1861" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1861" > </text>
<g id="frames">
<g >
<title>std::__uniq_ptr_impl&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="17.3" y="309" width="0.2" height="15.0" fill="rgb(213,162,48)" rx="2" ry="2" />
<text  x="20.30" y="319.5" ></text>
</g>
<g >
<title>auth::resource::parent (1 samples, 0.02%)</title><rect x="785.1" y="1573" width="0.3" height="15.0" fill="rgb(214,0,10)" rx="2" ry="2" />
<text  x="788.14" y="1583.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (50 samples, 0.91%)</title><rect x="542.2" y="1557" width="10.8" height="15.0" fill="rgb(207,105,26)" rx="2" ry="2" />
<text  x="545.22" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.05%)</title><rect x="736.0" y="1653" width="0.6" height="15.0" fill="rgb(223,157,50)" rx="2" ry="2" />
<text  x="738.96" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (3 samples, 0.05%)</title><rect x="249.0" y="1461" width="0.7" height="15.0" fill="rgb(212,89,42)" rx="2" ry="2" />
<text  x="252.05" y="1471.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="20.3" y="773" width="0.2" height="15.0" fill="rgb(215,94,44)" rx="2" ry="2" />
<text  x="23.31" y="783.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.02%)</title><rect x="25.9" y="1413" width="0.2" height="15.0" fill="rgb(212,223,20)" rx="2" ry="2" />
<text  x="28.89" y="1423.5" ></text>
</g>
<g >
<title>dht::maximum_token (2 samples, 0.04%)</title><rect x="517.5" y="1541" width="0.5" height="15.0" fill="rgb(216,78,22)" rx="2" ry="2" />
<text  x="520.52" y="1551.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="19.2" y="389" width="0.3" height="15.0" fill="rgb(226,229,38)" rx="2" ry="2" />
<text  x="22.24" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.29%)</title><rect x="320.4" y="1541" width="3.4" height="15.0" fill="rgb(231,4,27)" rx="2" ry="2" />
<text  x="323.36" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="25.0" y="1333" width="0.2" height="15.0" fill="rgb(248,102,11)" rx="2" ry="2" />
<text  x="28.03" y="1343.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="19.2" y="357" width="0.3" height="15.0" fill="rgb(234,12,6)" rx="2" ry="2" />
<text  x="22.24" y="367.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.04%)</title><rect x="829.6" y="1557" width="0.4" height="15.0" fill="rgb(216,180,39)" rx="2" ry="2" />
<text  x="832.60" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="942.8" y="1573" width="0.2" height="15.0" fill="rgb(222,166,21)" rx="2" ry="2" />
<text  x="945.79" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="645" width="9.9" height="15.0" fill="rgb(236,162,39)" rx="2" ry="2" />
<text  x="13.21" y="655.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1123.4" y="1541" width="0.2" height="15.0" fill="rgb(239,225,12)" rx="2" ry="2" />
<text  x="1126.42" y="1551.5" ></text>
</g>
<g >
<title>service::storage_service::mutate_token_metadata (1 samples, 0.02%)</title><rect x="31.7" y="1605" width="0.2" height="15.0" fill="rgb(208,166,0)" rx="2" ry="2" />
<text  x="34.69" y="1615.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.09%)</title><rect x="631.8" y="1653" width="1.1" height="15.0" fill="rgb(240,137,1)" rx="2" ry="2" />
<text  x="634.79" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="25.5" y="1349" width="0.2" height="15.0" fill="rgb(225,222,30)" rx="2" ry="2" />
<text  x="28.46" y="1359.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (2 samples, 0.04%)</title><rect x="1122.3" y="1589" width="0.5" height="15.0" fill="rgb(246,216,1)" rx="2" ry="2" />
<text  x="1125.34" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (3 samples, 0.05%)</title><rect x="855.4" y="1637" width="0.6" height="15.0" fill="rgb(251,123,20)" rx="2" ry="2" />
<text  x="858.37" y="1647.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (13 samples, 0.24%)</title><rect x="567.4" y="1525" width="2.7" height="15.0" fill="rgb(208,196,45)" rx="2" ry="2" />
<text  x="570.35" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="20.7" y="1029" width="0.3" height="15.0" fill="rgb(245,159,54)" rx="2" ry="2" />
<text  x="23.74" y="1039.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,215 samples, 22.12%)</title><rect x="861.0" y="1637" width="260.9" height="15.0" fill="rgb(211,134,5)" rx="2" ry="2" />
<text  x="863.96" y="1647.5" >seastar::noncopyable_function&lt;seas..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.02%)</title><rect x="23.7" y="1397" width="0.3" height="15.0" fill="rgb(220,26,15)" rx="2" ry="2" />
<text  x="26.75" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.05%)</title><rect x="473.5" y="1525" width="0.6" height="15.0" fill="rgb(228,89,5)" rx="2" ry="2" />
<text  x="476.49" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="18.6" y="213" width="0.2" height="15.0" fill="rgb(254,113,3)" rx="2" ry="2" />
<text  x="21.59" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (80 samples, 1.46%)</title><rect x="895.8" y="1573" width="17.1" height="15.0" fill="rgb(215,99,2)" rx="2" ry="2" />
<text  x="898.75" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="97.8" y="1621" width="0.3" height="15.0" fill="rgb(209,168,9)" rx="2" ry="2" />
<text  x="100.84" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="22.5" y="1429" width="0.2" height="15.0" fill="rgb(223,127,14)" rx="2" ry="2" />
<text  x="25.46" y="1439.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="20.1" y="1061" width="0.2" height="15.0" fill="rgb(242,113,24)" rx="2" ry="2" />
<text  x="23.09" y="1071.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (9 samples, 0.16%)</title><rect x="15.4" y="341" width="1.9" height="15.0" fill="rgb(223,176,11)" rx="2" ry="2" />
<text  x="18.37" y="351.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.31%)</title><rect x="1026.6" y="1413" width="3.6" height="15.0" fill="rgb(252,2,11)" rx="2" ry="2" />
<text  x="1029.55" y="1423.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="25.0" y="1301" width="0.2" height="15.0" fill="rgb(243,200,23)" rx="2" ry="2" />
<text  x="28.03" y="1311.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="20.7" y="1061" width="0.3" height="15.0" fill="rgb(250,72,45)" rx="2" ry="2" />
<text  x="23.74" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="25.5" y="1333" width="0.2" height="15.0" fill="rgb(208,108,28)" rx="2" ry="2" />
<text  x="28.46" y="1343.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (6 samples, 0.11%)</title><rect x="22.5" y="1461" width="1.2" height="15.0" fill="rgb(232,25,38)" rx="2" ry="2" />
<text  x="25.46" y="1471.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="891.7" y="1461" width="0.2" height="15.0" fill="rgb(217,123,26)" rx="2" ry="2" />
<text  x="894.67" y="1471.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="1047.2" y="1445" width="0.2" height="15.0" fill="rgb(226,200,30)" rx="2" ry="2" />
<text  x="1050.17" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="26.1" y="1285" width="0.2" height="15.0" fill="rgb(220,1,21)" rx="2" ry="2" />
<text  x="29.11" y="1295.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.40%)</title><rect x="138.9" y="1621" width="4.7" height="15.0" fill="rgb(210,159,52)" rx="2" ry="2" />
<text  x="141.87" y="1631.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::untyped_constant&amp;&amp;&gt; (1 samples, 0.02%)</title><rect x="23.7" y="1221" width="0.3" height="15.0" fill="rgb(243,156,2)" rx="2" ry="2" />
<text  x="26.75" y="1231.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (1 samples, 0.02%)</title><rect x="730.4" y="1653" width="0.2" height="15.0" fill="rgb(210,86,29)" rx="2" ry="2" />
<text  x="733.37" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="305.1" y="1493" width="0.2" height="15.0" fill="rgb(231,96,3)" rx="2" ry="2" />
<text  x="308.11" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (2 samples, 0.04%)</title><rect x="13.4" y="245" width="0.5" height="15.0" fill="rgb(234,225,20)" rx="2" ry="2" />
<text  x="16.44" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (11 samples, 0.20%)</title><rect x="658.4" y="1589" width="2.4" height="15.0" fill="rgb(224,113,49)" rx="2" ry="2" />
<text  x="661.42" y="1599.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.02%)</title><rect x="23.7" y="1413" width="0.3" height="15.0" fill="rgb(217,178,6)" rx="2" ry="2" />
<text  x="26.75" y="1423.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (48 samples, 0.87%)</title><rect x="364.2" y="1573" width="10.3" height="15.0" fill="rgb(242,115,52)" rx="2" ry="2" />
<text  x="367.17" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.02%)</title><rect x="316.1" y="1509" width="0.2" height="15.0" fill="rgb(227,85,48)" rx="2" ry="2" />
<text  x="319.06" y="1519.5" ></text>
</g>
<g >
<title>free (20 samples, 0.36%)</title><rect x="368.7" y="1525" width="4.3" height="15.0" fill="rgb(254,115,9)" rx="2" ry="2" />
<text  x="371.68" y="1535.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (78 samples, 1.42%)</title><rect x="1163.8" y="1797" width="16.7" height="15.0" fill="rgb(231,195,38)" rx="2" ry="2" />
<text  x="1166.80" y="1807.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.18%)</title><rect x="915.7" y="1573" width="2.2" height="15.0" fill="rgb(240,157,21)" rx="2" ry="2" />
<text  x="918.73" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="965" width="9.9" height="15.0" fill="rgb(206,96,43)" rx="2" ry="2" />
<text  x="13.21" y="975.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="16.4" y="245" width="0.3" height="15.0" fill="rgb(235,151,6)" rx="2" ry="2" />
<text  x="19.44" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="616.8" y="1621" width="0.2" height="15.0" fill="rgb(212,217,51)" rx="2" ry="2" />
<text  x="619.75" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="449.0" y="1573" width="0.2" height="15.0" fill="rgb(206,213,41)" rx="2" ry="2" />
<text  x="452.01" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::max_result_size (1 samples, 0.02%)</title><rect x="98.7" y="1637" width="0.2" height="15.0" fill="rgb(227,2,14)" rx="2" ry="2" />
<text  x="101.70" y="1647.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (6 samples, 0.11%)</title><rect x="768.0" y="1557" width="1.2" height="15.0" fill="rgb(205,44,10)" rx="2" ry="2" />
<text  x="770.96" y="1567.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="807.7" y="1509" width="0.6" height="15.0" fill="rgb(241,160,20)" rx="2" ry="2" />
<text  x="810.69" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="616.1" y="1621" width="0.2" height="15.0" fill="rgb(206,200,19)" rx="2" ry="2" />
<text  x="619.11" y="1631.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.29%)</title><rect x="320.4" y="1557" width="3.4" height="15.0" fill="rgb(223,73,33)" rx="2" ry="2" />
<text  x="323.36" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="15.6" y="277" width="0.2" height="15.0" fill="rgb(239,136,12)" rx="2" ry="2" />
<text  x="18.58" y="287.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.02%)</title><rect x="26.3" y="1509" width="0.2" height="15.0" fill="rgb(246,190,13)" rx="2" ry="2" />
<text  x="29.32" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.07%)</title><rect x="453.5" y="1605" width="0.9" height="15.0" fill="rgb(225,227,50)" rx="2" ry="2" />
<text  x="456.52" y="1615.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.02%)</title><rect x="925.8" y="1557" width="0.2" height="15.0" fill="rgb(236,206,30)" rx="2" ry="2" />
<text  x="928.82" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="12.4" y="149" width="0.2" height="15.0" fill="rgb(240,227,4)" rx="2" ry="2" />
<text  x="15.36" y="159.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (2 samples, 0.04%)</title><rect x="13.0" y="261" width="0.4" height="15.0" fill="rgb(205,192,14)" rx="2" ry="2" />
<text  x="16.01" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="20.3" y="1125" width="0.2" height="15.0" fill="rgb(210,34,31)" rx="2" ry="2" />
<text  x="23.31" y="1135.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.13%)</title><rect x="1143.4" y="1653" width="1.5" height="15.0" fill="rgb(248,32,34)" rx="2" ry="2" />
<text  x="1146.39" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (5 samples, 0.09%)</title><rect x="22.7" y="1445" width="1.0" height="15.0" fill="rgb(232,130,51)" rx="2" ry="2" />
<text  x="25.67" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="22.0" y="1637" width="0.2" height="15.0" fill="rgb(209,123,19)" rx="2" ry="2" />
<text  x="25.03" y="1647.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.02%)</title><rect x="18.8" y="453" width="0.2" height="15.0" fill="rgb(205,92,7)" rx="2" ry="2" />
<text  x="21.81" y="463.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.02%)</title><rect x="207.8" y="1509" width="0.2" height="15.0" fill="rgb(214,99,34)" rx="2" ry="2" />
<text  x="210.81" y="1519.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (2 samples, 0.04%)</title><rect x="617.0" y="1621" width="0.4" height="15.0" fill="rgb(250,75,52)" rx="2" ry="2" />
<text  x="619.97" y="1631.5" ></text>
</g>
<g >
<title>dht::sharder::shard_of (2 samples, 0.04%)</title><rect x="994.1" y="1477" width="0.5" height="15.0" fill="rgb(219,74,47)" rx="2" ry="2" />
<text  x="997.12" y="1487.5" ></text>
</g>
<g >
<title>do_cql_test (3 samples, 0.05%)</title><rect x="18.2" y="533" width="0.6" height="15.0" fill="rgb(236,95,48)" rx="2" ry="2" />
<text  x="21.16" y="543.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (2 samples, 0.04%)</title><rect x="21.8" y="1717" width="0.4" height="15.0" fill="rgb(223,52,24)" rx="2" ry="2" />
<text  x="24.81" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (3 samples, 0.05%)</title><rect x="19.2" y="421" width="0.7" height="15.0" fill="rgb(244,204,13)" rx="2" ry="2" />
<text  x="22.24" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.02%)</title><rect x="20.1" y="837" width="0.2" height="15.0" fill="rgb(230,91,41)" rx="2" ry="2" />
<text  x="23.09" y="847.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="558.8" y="1525" width="0.4" height="15.0" fill="rgb(246,113,7)" rx="2" ry="2" />
<text  x="561.76" y="1535.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="24.4" y="1413" width="0.4" height="15.0" fill="rgb(234,186,19)" rx="2" ry="2" />
<text  x="27.39" y="1423.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="45.0" y="1653" width="0.2" height="15.0" fill="rgb(214,31,5)" rx="2" ry="2" />
<text  x="48.01" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.04%)</title><rect x="22.9" y="1381" width="0.4" height="15.0" fill="rgb(236,108,2)" rx="2" ry="2" />
<text  x="25.89" y="1391.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.22%)</title><rect x="1104.1" y="1557" width="2.6" height="15.0" fill="rgb(222,200,8)" rx="2" ry="2" />
<text  x="1107.09" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="1112.9" y="1541" width="0.2" height="15.0" fill="rgb(213,76,0)" rx="2" ry="2" />
<text  x="1115.89" y="1551.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (10 samples, 0.18%)</title><rect x="689.8" y="1653" width="2.1" height="15.0" fill="rgb(250,96,42)" rx="2" ry="2" />
<text  x="692.78" y="1663.5" ></text>
</g>
<g >
<title>__strlen_avx2 (5 samples, 0.09%)</title><rect x="1016.2" y="1429" width="1.1" height="15.0" fill="rgb(213,174,13)" rx="2" ry="2" />
<text  x="1019.24" y="1439.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (1 samples, 0.02%)</title><rect x="1160.6" y="1621" width="0.2" height="15.0" fill="rgb(221,209,15)" rx="2" ry="2" />
<text  x="1163.58" y="1631.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (4 samples, 0.07%)</title><rect x="1036.9" y="1381" width="0.8" height="15.0" fill="rgb(235,189,9)" rx="2" ry="2" />
<text  x="1039.86" y="1391.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (182 samples, 3.31%)</title><rect x="260.0" y="1445" width="39.1" height="15.0" fill="rgb(210,76,20)" rx="2" ry="2" />
<text  x="263.00" y="1455.5" >com..</text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="20.7" y="1333" width="0.3" height="15.0" fill="rgb(237,88,47)" rx="2" ry="2" />
<text  x="23.74" y="1343.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.04%)</title><rect x="418.9" y="1557" width="0.5" height="15.0" fill="rgb(210,36,3)" rx="2" ry="2" />
<text  x="421.94" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="917" width="9.9" height="15.0" fill="rgb(222,61,16)" rx="2" ry="2" />
<text  x="13.21" y="927.5" ></text>
</g>
<g >
<title>dht::shard_of (7 samples, 0.13%)</title><rect x="998.6" y="1461" width="1.5" height="15.0" fill="rgb(246,153,26)" rx="2" ry="2" />
<text  x="1001.63" y="1471.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (10 samples, 0.18%)</title><rect x="873.4" y="1589" width="2.2" height="15.0" fill="rgb(239,103,42)" rx="2" ry="2" />
<text  x="876.41" y="1599.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (40 samples, 0.73%)</title><rect x="126.0" y="1621" width="8.6" height="15.0" fill="rgb(240,101,48)" rx="2" ry="2" />
<text  x="128.98" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.02%)</title><rect x="855.8" y="1525" width="0.2" height="15.0" fill="rgb(223,109,3)" rx="2" ry="2" />
<text  x="858.80" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="448.8" y="1573" width="0.2" height="15.0" fill="rgb(207,172,2)" rx="2" ry="2" />
<text  x="451.80" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="10.6" y="261" width="0.3" height="15.0" fill="rgb(241,189,44)" rx="2" ry="2" />
<text  x="13.64" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="19.2" y="277" width="0.3" height="15.0" fill="rgb(234,204,13)" rx="2" ry="2" />
<text  x="22.24" y="287.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.11%)</title><rect x="434.2" y="1557" width="1.3" height="15.0" fill="rgb(213,226,26)" rx="2" ry="2" />
<text  x="437.19" y="1567.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="679.0" y="1653" width="0.3" height="15.0" fill="rgb(226,221,44)" rx="2" ry="2" />
<text  x="682.04" y="1663.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="22.0" y="1701" width="0.2" height="15.0" fill="rgb(224,77,49)" rx="2" ry="2" />
<text  x="25.03" y="1711.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (2 samples, 0.04%)</title><rect x="604.9" y="1541" width="0.5" height="15.0" fill="rgb(225,144,23)" rx="2" ry="2" />
<text  x="607.94" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (4 samples, 0.07%)</title><rect x="10.2" y="517" width="0.9" height="15.0" fill="rgb(221,75,9)" rx="2" ry="2" />
<text  x="13.21" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.04%)</title><rect x="16.0" y="309" width="0.4" height="15.0" fill="rgb(238,196,25)" rx="2" ry="2" />
<text  x="19.01" y="319.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="786.4" y="1573" width="1.1" height="15.0" fill="rgb(254,225,23)" rx="2" ry="2" />
<text  x="789.43" y="1583.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="14.9" y="293" width="0.3" height="15.0" fill="rgb(211,159,22)" rx="2" ry="2" />
<text  x="17.94" y="303.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="258.9" y="1445" width="0.2" height="15.0" fill="rgb(218,19,1)" rx="2" ry="2" />
<text  x="261.93" y="1455.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="19.2" y="373" width="0.3" height="15.0" fill="rgb(215,110,19)" rx="2" ry="2" />
<text  x="22.24" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (7 samples, 0.13%)</title><rect x="449.2" y="1573" width="1.5" height="15.0" fill="rgb(212,17,19)" rx="2" ry="2" />
<text  x="452.22" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.05%)</title><rect x="591.0" y="1557" width="0.6" height="15.0" fill="rgb(215,79,16)" rx="2" ry="2" />
<text  x="593.98" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="523.5" y="1541" width="0.5" height="15.0" fill="rgb(230,55,15)" rx="2" ry="2" />
<text  x="526.54" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="479.3" y="1509" width="0.2" height="15.0" fill="rgb(243,49,9)" rx="2" ry="2" />
<text  x="482.29" y="1519.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (1 samples, 0.02%)</title><rect x="11.5" y="357" width="0.2" height="15.0" fill="rgb(221,218,45)" rx="2" ry="2" />
<text  x="14.50" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="373.0" y="1525" width="0.2" height="15.0" fill="rgb(216,41,30)" rx="2" ry="2" />
<text  x="375.98" y="1535.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (1 samples, 0.02%)</title><rect x="1096.1" y="1477" width="0.3" height="15.0" fill="rgb(226,107,24)" rx="2" ry="2" />
<text  x="1099.14" y="1487.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.02%)</title><rect x="1069.5" y="1493" width="0.2" height="15.0" fill="rgb(223,63,22)" rx="2" ry="2" />
<text  x="1072.51" y="1503.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::attach_service_level_statement*, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="17.5" y="325" width="0.2" height="15.0" fill="rgb(240,27,30)" rx="2" ry="2" />
<text  x="20.52" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="12.8" y="165" width="0.2" height="15.0" fill="rgb(239,152,29)" rx="2" ry="2" />
<text  x="15.79" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1048.0" y="1461" width="0.2" height="15.0" fill="rgb(207,182,48)" rx="2" ry="2" />
<text  x="1051.03" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="134.4" y="1605" width="0.2" height="15.0" fill="rgb(253,15,39)" rx="2" ry="2" />
<text  x="137.36" y="1615.5" ></text>
</g>
<g >
<title>row::~row (2 samples, 0.04%)</title><rect x="317.1" y="1509" width="0.5" height="15.0" fill="rgb(242,79,19)" rx="2" ry="2" />
<text  x="320.14" y="1519.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="379.6" y="1573" width="1.1" height="15.0" fill="rgb(216,84,51)" rx="2" ry="2" />
<text  x="382.64" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.04%)</title><rect x="1039.4" y="1397" width="0.5" height="15.0" fill="rgb(249,16,51)" rx="2" ry="2" />
<text  x="1042.44" y="1407.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.02%)</title><rect x="20.3" y="1045" width="0.2" height="15.0" fill="rgb(251,198,34)" rx="2" ry="2" />
<text  x="23.31" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1717" width="10.8" height="15.0" fill="rgb(249,173,28)" rx="2" ry="2" />
<text  x="13.21" y="1727.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="644.0" y="1653" width="0.2" height="15.0" fill="rgb(240,129,39)" rx="2" ry="2" />
<text  x="647.03" y="1663.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.05%)</title><rect x="484.7" y="1573" width="0.6" height="15.0" fill="rgb(250,20,12)" rx="2" ry="2" />
<text  x="487.66" y="1583.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="31.9" y="1685" width="0.2" height="15.0" fill="rgb(248,1,40)" rx="2" ry="2" />
<text  x="34.91" y="1695.5" ></text>
</g>
<g >
<title>row::~row (2 samples, 0.04%)</title><rect x="210.6" y="1493" width="0.4" height="15.0" fill="rgb(238,150,12)" rx="2" ry="2" />
<text  x="213.60" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="1039.9" y="1397" width="0.4" height="15.0" fill="rgb(238,198,54)" rx="2" ry="2" />
<text  x="1042.87" y="1407.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (5 samples, 0.09%)</title><rect x="1113.1" y="1589" width="1.1" height="15.0" fill="rgb(211,174,51)" rx="2" ry="2" />
<text  x="1116.11" y="1599.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.02%)</title><rect x="1122.1" y="1525" width="0.2" height="15.0" fill="rgb(241,115,54)" rx="2" ry="2" />
<text  x="1125.13" y="1535.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="10.2" y="293" width="0.2" height="15.0" fill="rgb(227,155,21)" rx="2" ry="2" />
<text  x="13.21" y="303.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1,250 samples, 22.75%)</title><rect x="854.9" y="1669" width="268.5" height="15.0" fill="rgb(208,5,3)" rx="2" ry="2" />
<text  x="857.94" y="1679.5" >seastar::lambda_task&lt;seastar::execu..</text>
</g>
<g >
<title>query::querier_base::close (1 samples, 0.02%)</title><rect x="1159.9" y="1653" width="0.2" height="15.0" fill="rgb(217,92,40)" rx="2" ry="2" />
<text  x="1162.93" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1701" width="10.8" height="15.0" fill="rgb(248,132,19)" rx="2" ry="2" />
<text  x="13.21" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.02%)</title><rect x="25.9" y="1397" width="0.2" height="15.0" fill="rgb(247,133,42)" rx="2" ry="2" />
<text  x="28.89" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.07%)</title><rect x="952.9" y="1509" width="0.8" height="15.0" fill="rgb(228,20,20)" rx="2" ry="2" />
<text  x="955.88" y="1519.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="17.3" y="293" width="0.2" height="15.0" fill="rgb(208,24,29)" rx="2" ry="2" />
<text  x="20.30" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.09%)</title><rect x="830.5" y="1589" width="1.0" height="15.0" fill="rgb(230,207,46)" rx="2" ry="2" />
<text  x="833.46" y="1599.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (1 samples, 0.02%)</title><rect x="33.0" y="1685" width="0.2" height="15.0" fill="rgb(208,78,26)" rx="2" ry="2" />
<text  x="35.98" y="1695.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="946.0" y="1557" width="0.2" height="15.0" fill="rgb(221,158,10)" rx="2" ry="2" />
<text  x="949.01" y="1567.5" ></text>
</g>
<g >
<title>partition_entry::read (8 samples, 0.15%)</title><rect x="580.5" y="1557" width="1.7" height="15.0" fill="rgb(236,53,24)" rx="2" ry="2" />
<text  x="583.46" y="1567.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.02%)</title><rect x="975.6" y="1509" width="0.3" height="15.0" fill="rgb(222,62,32)" rx="2" ry="2" />
<text  x="978.65" y="1519.5" ></text>
</g>
<g >
<title>do_cql_test (20 samples, 0.36%)</title><rect x="22.2" y="1701" width="4.3" height="15.0" fill="rgb(245,129,31)" rx="2" ry="2" />
<text  x="25.24" y="1711.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.24%)</title><rect x="841.6" y="1621" width="2.8" height="15.0" fill="rgb(207,53,11)" rx="2" ry="2" />
<text  x="844.63" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="20.3" y="725" width="0.2" height="15.0" fill="rgb(241,80,12)" rx="2" ry="2" />
<text  x="23.31" y="735.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="822.1" y="1541" width="0.2" height="15.0" fill="rgb(232,196,39)" rx="2" ry="2" />
<text  x="825.08" y="1551.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="10.6" y="229" width="0.3" height="15.0" fill="rgb(242,16,33)" rx="2" ry="2" />
<text  x="13.64" y="239.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (47 samples, 0.86%)</title><rect x="763.4" y="1589" width="10.1" height="15.0" fill="rgb(250,53,43)" rx="2" ry="2" />
<text  x="766.45" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="31.7" y="1733" width="0.2" height="15.0" fill="rgb(219,84,44)" rx="2" ry="2" />
<text  x="34.69" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_role_statement, std::default_delete&lt;cql3::statements::create_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="19.9" y="421" width="0.2" height="15.0" fill="rgb(248,84,14)" rx="2" ry="2" />
<text  x="22.88" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.04%)</title><rect x="689.3" y="1653" width="0.5" height="15.0" fill="rgb(205,84,18)" rx="2" ry="2" />
<text  x="692.35" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (3 samples, 0.05%)</title><rect x="323.8" y="1557" width="0.6" height="15.0" fill="rgb(206,46,34)" rx="2" ry="2" />
<text  x="326.79" y="1567.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (213 samples, 3.88%)</title><rect x="876.0" y="1589" width="45.7" height="15.0" fill="rgb(208,217,37)" rx="2" ry="2" />
<text  x="878.99" y="1599.5" >cql3..</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (20 samples, 0.36%)</title><rect x="22.2" y="1621" width="4.3" height="15.0" fill="rgb(249,16,41)" rx="2" ry="2" />
<text  x="25.24" y="1631.5" ></text>
</g>
<g >
<title>seastar::app_template::run (5,258 samples, 95.70%)</title><rect x="31.9" y="1749" width="1129.3" height="15.0" fill="rgb(240,97,25)" rx="2" ry="2" />
<text  x="34.91" y="1759.5" >seastar::app_template::run</text>
</g>
<g >
<title>cql3::query_processor::get_statement (6 samples, 0.11%)</title><rect x="18.8" y="485" width="1.3" height="15.0" fill="rgb(227,156,49)" rx="2" ry="2" />
<text  x="21.81" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (441 samples, 8.03%)</title><rect x="211.0" y="1509" width="94.8" height="15.0" fill="rgb(234,34,24)" rx="2" ry="2" />
<text  x="214.03" y="1519.5" >partition_s..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="15.4" y="277" width="0.2" height="15.0" fill="rgb(232,16,0)" rx="2" ry="2" />
<text  x="18.37" y="287.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.02%)</title><rect x="481.0" y="1541" width="0.2" height="15.0" fill="rgb(233,124,31)" rx="2" ry="2" />
<text  x="484.01" y="1551.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (3 samples, 0.05%)</title><rect x="729.5" y="1653" width="0.7" height="15.0" fill="rgb(250,33,42)" rx="2" ry="2" />
<text  x="732.51" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (521 samples, 9.48%)</title><rect x="205.7" y="1525" width="111.9" height="15.0" fill="rgb(209,20,27)" rx="2" ry="2" />
<text  x="208.66" y="1535.5" >partition_sna..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.05%)</title><rect x="131.8" y="1573" width="0.6" height="15.0" fill="rgb(239,105,14)" rx="2" ry="2" />
<text  x="134.78" y="1583.5" ></text>
</g>
<g >
<title>auth::resource::resource (4 samples, 0.07%)</title><rect x="785.4" y="1573" width="0.8" height="15.0" fill="rgb(225,17,47)" rx="2" ry="2" />
<text  x="788.35" y="1583.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.07%)</title><rect x="870.6" y="1589" width="0.9" height="15.0" fill="rgb(227,175,28)" rx="2" ry="2" />
<text  x="873.62" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.02%)</title><rect x="15.2" y="341" width="0.2" height="15.0" fill="rgb(215,157,5)" rx="2" ry="2" />
<text  x="18.15" y="351.5" ></text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.02%)</title><rect x="950.7" y="1541" width="0.3" height="15.0" fill="rgb(231,104,23)" rx="2" ry="2" />
<text  x="953.74" y="1551.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (3 samples, 0.05%)</title><rect x="28.3" y="1749" width="0.6" height="15.0" fill="rgb(246,23,45)" rx="2" ry="2" />
<text  x="31.26" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (48 samples, 0.87%)</title><rect x="10.2" y="1173" width="10.3" height="15.0" fill="rgb(212,29,25)" rx="2" ry="2" />
<text  x="13.21" y="1183.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (2 samples, 0.04%)</title><rect x="235.9" y="1461" width="0.5" height="15.0" fill="rgb(233,39,13)" rx="2" ry="2" />
<text  x="238.95" y="1471.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (32 samples, 0.58%)</title><rect x="421.9" y="1573" width="6.9" height="15.0" fill="rgb(206,6,16)" rx="2" ry="2" />
<text  x="424.95" y="1583.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.02%)</title><rect x="16.7" y="245" width="0.2" height="15.0" fill="rgb(230,3,51)" rx="2" ry="2" />
<text  x="19.66" y="255.5" ></text>
</g>
<g >
<title>__start_context (6 samples, 0.11%)</title><rect x="18.8" y="613" width="1.3" height="15.0" fill="rgb(240,229,3)" rx="2" ry="2" />
<text  x="21.81" y="623.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (9 samples, 0.16%)</title><rect x="84.7" y="1637" width="2.0" height="15.0" fill="rgb(243,147,2)" rx="2" ry="2" />
<text  x="87.74" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.05%)</title><rect x="837.1" y="1573" width="0.7" height="15.0" fill="rgb(218,210,39)" rx="2" ry="2" />
<text  x="840.12" y="1583.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.02%)</title><rect x="20.5" y="1141" width="0.2" height="15.0" fill="rgb(210,141,27)" rx="2" ry="2" />
<text  x="23.52" y="1151.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="300.4" y="1477" width="0.2" height="15.0" fill="rgb(245,165,6)" rx="2" ry="2" />
<text  x="303.38" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.02%)</title><rect x="16.7" y="117" width="0.2" height="15.0" fill="rgb(216,119,31)" rx="2" ry="2" />
<text  x="19.66" y="127.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="1041.8" y="1413" width="0.2" height="15.0" fill="rgb(213,185,51)" rx="2" ry="2" />
<text  x="1044.80" y="1423.5" ></text>
</g>
<g >
<title>[[vdso]] (51 samples, 0.93%)</title><rect x="1165.1" y="1781" width="10.9" height="15.0" fill="rgb(233,78,14)" rx="2" ry="2" />
<text  x="1168.09" y="1791.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="207.6" y="1509" width="0.2" height="15.0" fill="rgb(207,186,26)" rx="2" ry="2" />
<text  x="210.60" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="818.0" y="1509" width="1.7" height="15.0" fill="rgb(250,70,16)" rx="2" ry="2" />
<text  x="821.00" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1749" width="10.8" height="15.0" fill="rgb(251,19,54)" rx="2" ry="2" />
<text  x="13.21" y="1759.5" ></text>
</g>
<g >
<title>table::query (1 samples, 0.02%)</title><rect x="625.8" y="1653" width="0.2" height="15.0" fill="rgb(215,109,18)" rx="2" ry="2" />
<text  x="628.77" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="943.0" y="1573" width="0.4" height="15.0" fill="rgb(223,204,3)" rx="2" ry="2" />
<text  x="946.00" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="20.7" y="1285" width="0.3" height="15.0" fill="rgb(243,187,15)" rx="2" ry="2" />
<text  x="23.74" y="1295.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="606.2" y="1573" width="0.2" height="15.0" fill="rgb(211,52,13)" rx="2" ry="2" />
<text  x="609.23" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="821.2" y="1525" width="0.9" height="15.0" fill="rgb(223,150,29)" rx="2" ry="2" />
<text  x="824.22" y="1535.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (1 samples, 0.02%)</title><rect x="788.8" y="1573" width="0.2" height="15.0" fill="rgb(219,88,36)" rx="2" ry="2" />
<text  x="791.79" y="1583.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (9 samples, 0.16%)</title><rect x="132.4" y="1605" width="2.0" height="15.0" fill="rgb(205,227,53)" rx="2" ry="2" />
<text  x="135.42" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="1061" width="9.9" height="15.0" fill="rgb(211,142,37)" rx="2" ry="2" />
<text  x="13.21" y="1071.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="24.8" y="1301" width="0.2" height="15.0" fill="rgb(241,201,51)" rx="2" ry="2" />
<text  x="27.82" y="1311.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (2 samples, 0.04%)</title><rect x="95.9" y="1605" width="0.4" height="15.0" fill="rgb(230,103,44)" rx="2" ry="2" />
<text  x="98.91" y="1615.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="25.9" y="1285" width="0.2" height="15.0" fill="rgb(236,88,40)" rx="2" ry="2" />
<text  x="28.89" y="1295.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="855.2" y="1653" width="0.2" height="15.0" fill="rgb(230,199,10)" rx="2" ry="2" />
<text  x="858.16" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.02%)</title><rect x="25.5" y="1413" width="0.2" height="15.0" fill="rgb(230,66,0)" rx="2" ry="2" />
<text  x="28.46" y="1423.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (9 samples, 0.16%)</title><rect x="1119.1" y="1589" width="2.0" height="15.0" fill="rgb(216,4,44)" rx="2" ry="2" />
<text  x="1122.12" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="20.3" y="789" width="0.2" height="15.0" fill="rgb(246,56,39)" rx="2" ry="2" />
<text  x="23.31" y="799.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (3 samples, 0.05%)</title><rect x="1051.0" y="1525" width="0.7" height="15.0" fill="rgb(238,128,49)" rx="2" ry="2" />
<text  x="1054.04" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (10 samples, 0.18%)</title><rect x="1145.1" y="1653" width="2.2" height="15.0" fill="rgb(211,96,2)" rx="2" ry="2" />
<text  x="1148.11" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="19.2" y="309" width="0.3" height="15.0" fill="rgb(244,154,33)" rx="2" ry="2" />
<text  x="22.24" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="18.6" y="245" width="0.2" height="15.0" fill="rgb(246,4,23)" rx="2" ry="2" />
<text  x="21.59" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.02%)</title><rect x="25.5" y="1397" width="0.2" height="15.0" fill="rgb(219,143,40)" rx="2" ry="2" />
<text  x="28.46" y="1407.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (2 samples, 0.04%)</title><rect x="806.2" y="1509" width="0.4" height="15.0" fill="rgb(212,82,43)" rx="2" ry="2" />
<text  x="809.19" y="1519.5" ></text>
</g>
<g >
<title>query_result_builder::consume (178 samples, 3.24%)</title><rect x="381.4" y="1573" width="38.2" height="15.0" fill="rgb(237,16,12)" rx="2" ry="2" />
<text  x="384.35" y="1583.5" >que..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="15.6" y="181" width="0.2" height="15.0" fill="rgb(232,54,43)" rx="2" ry="2" />
<text  x="18.58" y="191.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (2 samples, 0.04%)</title><rect x="725.4" y="1637" width="0.5" height="15.0" fill="rgb(215,167,50)" rx="2" ry="2" />
<text  x="728.43" y="1647.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (3 samples, 0.05%)</title><rect x="454.6" y="1605" width="0.6" height="15.0" fill="rgb(238,29,41)" rx="2" ry="2" />
<text  x="457.59" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (4 samples, 0.07%)</title><rect x="10.2" y="325" width="0.9" height="15.0" fill="rgb(242,29,42)" rx="2" ry="2" />
<text  x="13.21" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.02%)</title><rect x="12.4" y="165" width="0.2" height="15.0" fill="rgb(215,75,33)" rx="2" ry="2" />
<text  x="15.36" y="175.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (4 samples, 0.07%)</title><rect x="435.5" y="1573" width="0.8" height="15.0" fill="rgb(253,37,1)" rx="2" ry="2" />
<text  x="438.48" y="1583.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (4 samples, 0.07%)</title><rect x="247.5" y="1445" width="0.9" height="15.0" fill="rgb(247,181,23)" rx="2" ry="2" />
<text  x="250.55" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="807.5" y="1493" width="0.2" height="15.0" fill="rgb(237,42,13)" rx="2" ry="2" />
<text  x="810.48" y="1503.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.18%)</title><rect x="835.6" y="1605" width="2.2" height="15.0" fill="rgb(235,104,42)" rx="2" ry="2" />
<text  x="838.61" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1557" width="10.8" height="15.0" fill="rgb(211,21,11)" rx="2" ry="2" />
<text  x="13.21" y="1567.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.16%)</title><rect x="685.5" y="1653" width="1.9" height="15.0" fill="rgb(243,203,23)" rx="2" ry="2" />
<text  x="688.48" y="1663.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (32 samples, 0.58%)</title><rect x="11.3" y="437" width="6.9" height="15.0" fill="rgb(241,3,39)" rx="2" ry="2" />
<text  x="14.29" y="447.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.44%)</title><rect x="374.5" y="1573" width="5.1" height="15.0" fill="rgb(238,81,43)" rx="2" ry="2" />
<text  x="377.48" y="1583.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.04%)</title><rect x="1067.8" y="1493" width="0.4" height="15.0" fill="rgb(235,169,29)" rx="2" ry="2" />
<text  x="1070.79" y="1503.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (6 samples, 0.11%)</title><rect x="243.9" y="1461" width="1.3" height="15.0" fill="rgb(248,20,25)" rx="2" ry="2" />
<text  x="246.90" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="62.2" y="1637" width="0.2" height="15.0" fill="rgb(244,120,3)" rx="2" ry="2" />
<text  x="65.19" y="1647.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.02%)</title><rect x="20.5" y="1077" width="0.2" height="15.0" fill="rgb(210,40,21)" rx="2" ry="2" />
<text  x="23.52" y="1087.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (1 samples, 0.02%)</title><rect x="854.7" y="1653" width="0.2" height="15.0" fill="rgb(235,214,35)" rx="2" ry="2" />
<text  x="857.73" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="19.2" y="213" width="0.3" height="15.0" fill="rgb(242,33,28)" rx="2" ry="2" />
<text  x="22.24" y="223.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="757" width="9.9" height="15.0" fill="rgb(218,51,7)" rx="2" ry="2" />
<text  x="13.21" y="767.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (534 samples, 9.72%)</title><rect x="494.3" y="1605" width="114.7" height="15.0" fill="rgb(225,16,36)" rx="2" ry="2" />
<text  x="497.33" y="1615.5" >std::_Function..</text>
</g>
<g >
<title>cql3_parser::CqlParser::value (13 samples, 0.24%)</title><rect x="22.5" y="1477" width="2.7" height="15.0" fill="rgb(236,78,42)" rx="2" ry="2" />
<text  x="25.46" y="1487.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (2 samples, 0.04%)</title><rect x="823.6" y="1557" width="0.4" height="15.0" fill="rgb(250,203,35)" rx="2" ry="2" />
<text  x="826.59" y="1567.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (1 samples, 0.02%)</title><rect x="861.2" y="1621" width="0.2" height="15.0" fill="rgb(232,24,15)" rx="2" ry="2" />
<text  x="864.17" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.02%)</title><rect x="16.7" y="53" width="0.2" height="15.0" fill="rgb(220,124,16)" rx="2" ry="2" />
<text  x="19.66" y="63.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (3 samples, 0.05%)</title><rect x="18.2" y="565" width="0.6" height="15.0" fill="rgb(212,63,42)" rx="2" ry="2" />
<text  x="21.16" y="575.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (29 samples, 0.53%)</title><rect x="739.0" y="1621" width="6.2" height="15.0" fill="rgb(249,216,27)" rx="2" ry="2" />
<text  x="741.96" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="518.8" y="1525" width="0.4" height="15.0" fill="rgb(217,79,7)" rx="2" ry="2" />
<text  x="521.81" y="1535.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (270 samples, 4.91%)</title><rect x="773.5" y="1605" width="58.0" height="15.0" fill="rgb(239,151,48)" rx="2" ry="2" />
<text  x="776.54" y="1615.5" >cql3::..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="62.6" y="1653" width="0.5" height="15.0" fill="rgb(233,209,25)" rx="2" ry="2" />
<text  x="65.62" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.02%)</title><rect x="20.7" y="1141" width="0.3" height="15.0" fill="rgb(233,139,18)" rx="2" ry="2" />
<text  x="23.74" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (47 samples, 0.86%)</title><rect x="10.2" y="1141" width="10.1" height="15.0" fill="rgb(247,224,18)" rx="2" ry="2" />
<text  x="13.21" y="1151.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (3 samples, 0.05%)</title><rect x="21.0" y="1557" width="0.6" height="15.0" fill="rgb(248,136,44)" rx="2" ry="2" />
<text  x="23.95" y="1567.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.22%)</title><rect x="913.1" y="1573" width="2.6" height="15.0" fill="rgb(226,64,26)" rx="2" ry="2" />
<text  x="916.15" y="1583.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.02%)</title><rect x="771.4" y="1557" width="0.2" height="15.0" fill="rgb(248,202,41)" rx="2" ry="2" />
<text  x="774.39" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::mark_used (1 samples, 0.02%)</title><rect x="98.5" y="1637" width="0.2" height="15.0" fill="rgb(225,131,9)" rx="2" ry="2" />
<text  x="101.49" y="1647.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.02%)</title><rect x="1123.4" y="1621" width="0.2" height="15.0" fill="rgb(240,105,28)" rx="2" ry="2" />
<text  x="1126.42" y="1631.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.02%)</title><rect x="345.1" y="1589" width="0.2" height="15.0" fill="rgb(234,3,32)" rx="2" ry="2" />
<text  x="348.06" y="1599.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (1 samples, 0.02%)</title><rect x="730.4" y="1669" width="0.2" height="15.0" fill="rgb(250,15,28)" rx="2" ry="2" />
<text  x="733.37" y="1679.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (7 samples, 0.13%)</title><rect x="723.1" y="1637" width="1.5" height="15.0" fill="rgb(212,228,12)" rx="2" ry="2" />
<text  x="726.07" y="1647.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.18%)</title><rect x="733.8" y="1653" width="2.2" height="15.0" fill="rgb(215,134,9)" rx="2" ry="2" />
<text  x="736.81" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="20.5" y="1045" width="0.2" height="15.0" fill="rgb(228,221,48)" rx="2" ry="2" />
<text  x="23.52" y="1055.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.02%)</title><rect x="20.1" y="885" width="0.2" height="15.0" fill="rgb(222,33,12)" rx="2" ry="2" />
<text  x="23.09" y="895.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (45 samples, 0.82%)</title><rect x="626.2" y="1669" width="9.7" height="15.0" fill="rgb(217,203,18)" rx="2" ry="2" />
<text  x="629.20" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.04%)</title><rect x="931.8" y="1573" width="0.5" height="15.0" fill="rgb(209,129,9)" rx="2" ry="2" />
<text  x="934.83" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="22.0" y="1653" width="0.2" height="15.0" fill="rgb(223,127,15)" rx="2" ry="2" />
<text  x="25.03" y="1663.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (2 samples, 0.04%)</title><rect x="1106.7" y="1557" width="0.4" height="15.0" fill="rgb(209,200,16)" rx="2" ry="2" />
<text  x="1109.67" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="805" width="9.9" height="15.0" fill="rgb(231,98,16)" rx="2" ry="2" />
<text  x="13.21" y="815.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (1 samples, 0.02%)</title><rect x="1040.9" y="1413" width="0.3" height="15.0" fill="rgb(250,188,31)" rx="2" ry="2" />
<text  x="1043.94" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="23.3" y="1413" width="0.2" height="15.0" fill="rgb(224,15,24)" rx="2" ry="2" />
<text  x="26.32" y="1423.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (4 samples, 0.07%)</title><rect x="741.5" y="1605" width="0.9" height="15.0" fill="rgb(238,218,35)" rx="2" ry="2" />
<text  x="744.54" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1605" width="10.8" height="15.0" fill="rgb(218,131,30)" rx="2" ry="2" />
<text  x="13.21" y="1615.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="820.4" y="1541" width="0.8" height="15.0" fill="rgb(243,58,20)" rx="2" ry="2" />
<text  x="823.36" y="1551.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.02%)</title><rect x="774.2" y="1589" width="0.2" height="15.0" fill="rgb(245,223,16)" rx="2" ry="2" />
<text  x="777.19" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="23.1" y="1173" width="0.2" height="15.0" fill="rgb(225,211,18)" rx="2" ry="2" />
<text  x="26.10" y="1183.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (788 samples, 14.34%)</title><rect x="159.7" y="1573" width="169.2" height="15.0" fill="rgb(216,49,36)" rx="2" ry="2" />
<text  x="162.70" y="1583.5" >merging_reader&lt;mutati..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (29 samples, 0.53%)</title><rect x="252.7" y="1445" width="6.2" height="15.0" fill="rgb(214,152,30)" rx="2" ry="2" />
<text  x="255.70" y="1455.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (20 samples, 0.36%)</title><rect x="22.2" y="1605" width="4.3" height="15.0" fill="rgb(221,182,52)" rx="2" ry="2" />
<text  x="25.24" y="1615.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="597.0" y="1541" width="0.2" height="15.0" fill="rgb(236,35,15)" rx="2" ry="2" />
<text  x="599.99" y="1551.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="882.2" y="1573" width="0.2" height="15.0" fill="rgb(208,41,8)" rx="2" ry="2" />
<text  x="885.22" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (11 samples, 0.20%)</title><rect x="14.9" y="357" width="2.4" height="15.0" fill="rgb(244,2,11)" rx="2" ry="2" />
<text  x="17.94" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (2 samples, 0.04%)</title><rect x="13.4" y="261" width="0.5" height="15.0" fill="rgb(240,135,16)" rx="2" ry="2" />
<text  x="16.44" y="271.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="19.2" y="245" width="0.3" height="15.0" fill="rgb(248,97,32)" rx="2" ry="2" />
<text  x="22.24" y="255.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::StackType (1 samples, 0.02%)</title><rect x="11.5" y="325" width="0.2" height="15.0" fill="rgb(239,195,44)" rx="2" ry="2" />
<text  x="14.50" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (6 samples, 0.11%)</title><rect x="688.1" y="1653" width="1.2" height="15.0" fill="rgb(248,160,13)" rx="2" ry="2" />
<text  x="691.06" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.02%)</title><rect x="1161.0" y="1685" width="0.2" height="15.0" fill="rgb(252,175,1)" rx="2" ry="2" />
<text  x="1164.00" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="16.4" y="293" width="0.3" height="15.0" fill="rgb(249,58,15)" rx="2" ry="2" />
<text  x="19.44" y="303.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="24.4" y="1269" width="0.4" height="15.0" fill="rgb(234,46,34)" rx="2" ry="2" />
<text  x="27.39" y="1279.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (14 samples, 0.25%)</title><rect x="618.3" y="1621" width="3.0" height="15.0" fill="rgb(248,133,2)" rx="2" ry="2" />
<text  x="621.26" y="1631.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="341.6" y="1589" width="1.3" height="15.0" fill="rgb(222,224,35)" rx="2" ry="2" />
<text  x="344.62" y="1599.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.02%)</title><rect x="15.8" y="277" width="0.2" height="15.0" fill="rgb(250,24,32)" rx="2" ry="2" />
<text  x="18.80" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (29 samples, 0.53%)</title><rect x="654.6" y="1621" width="6.2" height="15.0" fill="rgb(230,59,42)" rx="2" ry="2" />
<text  x="657.55" y="1631.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.02%)</title><rect x="594.0" y="1557" width="0.2" height="15.0" fill="rgb(210,203,17)" rx="2" ry="2" />
<text  x="596.99" y="1567.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (37 samples, 0.67%)</title><rect x="1182.1" y="1797" width="7.9" height="15.0" fill="rgb(225,136,26)" rx="2" ry="2" />
<text  x="1185.05" y="1807.5" ></text>
</g>
<g >
<title>row::~row (45 samples, 0.82%)</title><rect x="364.8" y="1557" width="9.7" height="15.0" fill="rgb(241,4,54)" rx="2" ry="2" />
<text  x="367.82" y="1567.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.02%)</title><rect x="11.9" y="165" width="0.2" height="15.0" fill="rgb(254,184,44)" rx="2" ry="2" />
<text  x="14.93" y="175.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (56 samples, 1.02%)</title><rect x="761.5" y="1605" width="12.0" height="15.0" fill="rgb(209,99,34)" rx="2" ry="2" />
<text  x="764.51" y="1615.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.16%)</title><rect x="702.4" y="1653" width="2.0" height="15.0" fill="rgb(205,118,13)" rx="2" ry="2" />
<text  x="705.45" y="1663.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.02%)</title><rect x="21.8" y="1701" width="0.2" height="15.0" fill="rgb(228,76,12)" rx="2" ry="2" />
<text  x="24.81" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (47 samples, 0.86%)</title><rect x="10.2" y="1093" width="10.1" height="15.0" fill="rgb(214,166,5)" rx="2" ry="2" />
<text  x="13.21" y="1103.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (1 samples, 0.02%)</title><rect x="1160.6" y="1637" width="0.2" height="15.0" fill="rgb(236,90,54)" rx="2" ry="2" />
<text  x="1163.58" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (80 samples, 1.46%)</title><rect x="560.7" y="1541" width="17.2" height="15.0" fill="rgb(238,78,25)" rx="2" ry="2" />
<text  x="563.70" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="26.1" y="1301" width="0.2" height="15.0" fill="rgb(222,131,15)" rx="2" ry="2" />
<text  x="29.11" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.02%)</title><rect x="26.1" y="1381" width="0.2" height="15.0" fill="rgb(222,127,28)" rx="2" ry="2" />
<text  x="29.11" y="1391.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.02%)</title><rect x="10.9" y="197" width="0.2" height="15.0" fill="rgb(228,63,34)" rx="2" ry="2" />
<text  x="13.86" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="32.1" y="1685" width="0.2" height="15.0" fill="rgb(249,176,53)" rx="2" ry="2" />
<text  x="35.12" y="1695.5" ></text>
</g>
<g >
<title>utils::array_search_gt (4 samples, 0.07%)</title><rect x="606.4" y="1573" width="0.9" height="15.0" fill="rgb(246,15,33)" rx="2" ry="2" />
<text  x="609.44" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1493" width="10.8" height="15.0" fill="rgb(253,32,1)" rx="2" ry="2" />
<text  x="13.21" y="1503.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (12 samples, 0.22%)</title><rect x="246.5" y="1461" width="2.5" height="15.0" fill="rgb(214,214,30)" rx="2" ry="2" />
<text  x="249.47" y="1471.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (3 samples, 0.05%)</title><rect x="18.2" y="405" width="0.6" height="15.0" fill="rgb(240,73,33)" rx="2" ry="2" />
<text  x="21.16" y="415.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.89%)</title><rect x="10.2" y="1333" width="10.5" height="15.0" fill="rgb(228,155,38)" rx="2" ry="2" />
<text  x="13.21" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="23.7" y="1285" width="0.3" height="15.0" fill="rgb(244,215,34)" rx="2" ry="2" />
<text  x="26.75" y="1295.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (5 samples, 0.09%)</title><rect x="19.0" y="469" width="1.1" height="15.0" fill="rgb(237,99,17)" rx="2" ry="2" />
<text  x="22.02" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.11%)</title><rect x="18.8" y="581" width="1.3" height="15.0" fill="rgb(251,178,10)" rx="2" ry="2" />
<text  x="21.81" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.02%)</title><rect x="246.3" y="1461" width="0.2" height="15.0" fill="rgb(223,164,47)" rx="2" ry="2" />
<text  x="249.26" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="12.8" y="229" width="0.2" height="15.0" fill="rgb(233,39,1)" rx="2" ry="2" />
<text  x="15.79" y="239.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.02%)</title><rect x="20.5" y="1109" width="0.2" height="15.0" fill="rgb(250,187,38)" rx="2" ry="2" />
<text  x="23.52" y="1119.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (37 samples, 0.67%)</title><rect x="365.5" y="1541" width="7.9" height="15.0" fill="rgb(222,179,6)" rx="2" ry="2" />
<text  x="368.46" y="1551.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (10 samples, 0.18%)</title><rect x="461.5" y="1557" width="2.1" height="15.0" fill="rgb(225,98,39)" rx="2" ry="2" />
<text  x="464.47" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="31.7" y="1653" width="0.2" height="15.0" fill="rgb(227,169,25)" rx="2" ry="2" />
<text  x="34.69" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.07%)</title><rect x="10.2" y="533" width="0.9" height="15.0" fill="rgb(205,164,33)" rx="2" ry="2" />
<text  x="13.21" y="543.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.04%)</title><rect x="1114.2" y="1589" width="0.4" height="15.0" fill="rgb(211,229,51)" rx="2" ry="2" />
<text  x="1117.18" y="1599.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="834.8" y="1573" width="0.2" height="15.0" fill="rgb(212,190,54)" rx="2" ry="2" />
<text  x="837.75" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="849.6" y="1653" width="0.2" height="15.0" fill="rgb(208,166,29)" rx="2" ry="2" />
<text  x="852.57" y="1663.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (2 samples, 0.04%)</title><rect x="875.6" y="1589" width="0.4" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="878.56" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.04%)</title><rect x="25.7" y="1461" width="0.4" height="15.0" fill="rgb(215,93,30)" rx="2" ry="2" />
<text  x="28.68" y="1471.5" ></text>
</g>
<g >
<title>database::find_keyspace (17 samples, 0.31%)</title><rect x="1064.6" y="1509" width="3.6" height="15.0" fill="rgb(226,124,18)" rx="2" ry="2" />
<text  x="1067.57" y="1519.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="19.0" y="245" width="0.2" height="15.0" fill="rgb(237,201,27)" rx="2" ry="2" />
<text  x="22.02" y="255.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.02%)</title><rect x="20.1" y="965" width="0.2" height="15.0" fill="rgb(225,27,41)" rx="2" ry="2" />
<text  x="23.09" y="975.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_following (1 samples, 0.02%)</title><rect x="25.2" y="1509" width="0.3" height="15.0" fill="rgb(208,68,37)" rx="2" ry="2" />
<text  x="28.25" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="1121.9" y="1621" width="0.4" height="15.0" fill="rgb(205,192,7)" rx="2" ry="2" />
<text  x="1124.91" y="1631.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (1 samples, 0.02%)</title><rect x="1122.6" y="1429" width="0.2" height="15.0" fill="rgb(227,82,36)" rx="2" ry="2" />
<text  x="1125.56" y="1439.5" ></text>
</g>
<g >
<title>make_combined_reader (96 samples, 1.75%)</title><rect x="507.2" y="1573" width="20.6" height="15.0" fill="rgb(224,112,41)" rx="2" ry="2" />
<text  x="510.22" y="1583.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="855.6" y="1541" width="0.2" height="15.0" fill="rgb(252,177,35)" rx="2" ry="2" />
<text  x="858.59" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="987.0" y="1461" width="1.1" height="15.0" fill="rgb(226,152,22)" rx="2" ry="2" />
<text  x="990.03" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="24.8" y="1381" width="0.2" height="15.0" fill="rgb(219,70,22)" rx="2" ry="2" />
<text  x="27.82" y="1391.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="151.1" y="1621" width="0.2" height="15.0" fill="rgb(214,168,52)" rx="2" ry="2" />
<text  x="154.11" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="304.7" y="1493" width="0.2" height="15.0" fill="rgb(215,43,41)" rx="2" ry="2" />
<text  x="307.68" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="12.4" y="181" width="0.2" height="15.0" fill="rgb(220,187,15)" rx="2" ry="2" />
<text  x="15.36" y="191.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (3 samples, 0.05%)</title><rect x="724.8" y="1637" width="0.6" height="15.0" fill="rgb(225,133,52)" rx="2" ry="2" />
<text  x="727.79" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.05%)</title><rect x="838.0" y="1605" width="0.6" height="15.0" fill="rgb(248,77,3)" rx="2" ry="2" />
<text  x="840.98" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="558.8" y="1509" width="0.4" height="15.0" fill="rgb(222,131,2)" rx="2" ry="2" />
<text  x="561.76" y="1519.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_lower_bound (1 samples, 0.02%)</title><rect x="14.3" y="277" width="0.2" height="15.0" fill="rgb(249,52,39)" rx="2" ry="2" />
<text  x="17.30" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="837.8" y="1605" width="0.2" height="15.0" fill="rgb(234,164,45)" rx="2" ry="2" />
<text  x="840.76" y="1615.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.02%)</title><rect x="963.4" y="1525" width="0.2" height="15.0" fill="rgb(225,104,47)" rx="2" ry="2" />
<text  x="966.41" y="1535.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="235.1" y="1461" width="0.2" height="15.0" fill="rgb(247,98,9)" rx="2" ry="2" />
<text  x="238.09" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="18.2" y="325" width="0.2" height="15.0" fill="rgb(234,84,36)" rx="2" ry="2" />
<text  x="21.16" y="335.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.02%)</title><rect x="20.1" y="997" width="0.2" height="15.0" fill="rgb(238,201,39)" rx="2" ry="2" />
<text  x="23.09" y="1007.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (539 samples, 9.81%)</title><rect x="336.7" y="1605" width="115.7" height="15.0" fill="rgb(211,19,2)" rx="2" ry="2" />
<text  x="339.68" y="1615.5" >query::consume..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (69 samples, 1.26%)</title><rect x="466.6" y="1557" width="14.8" height="15.0" fill="rgb(229,170,10)" rx="2" ry="2" />
<text  x="469.62" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="26.1" y="1173" width="0.2" height="15.0" fill="rgb(239,94,1)" rx="2" ry="2" />
<text  x="29.11" y="1183.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="15.8" y="293" width="0.2" height="15.0" fill="rgb(227,132,47)" rx="2" ry="2" />
<text  x="18.80" y="303.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="22.0" y="1573" width="0.2" height="15.0" fill="rgb(224,175,34)" rx="2" ry="2" />
<text  x="25.03" y="1583.5" ></text>
</g>
<g >
<title>row::row (5 samples, 0.09%)</title><rect x="209.5" y="1493" width="1.1" height="15.0" fill="rgb(209,227,8)" rx="2" ry="2" />
<text  x="212.53" y="1503.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (33 samples, 0.60%)</title><rect x="11.1" y="549" width="7.1" height="15.0" fill="rgb(221,147,47)" rx="2" ry="2" />
<text  x="14.07" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="26.1" y="1221" width="0.2" height="15.0" fill="rgb(227,104,35)" rx="2" ry="2" />
<text  x="29.11" y="1231.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (3 samples, 0.05%)</title><rect x="932.3" y="1589" width="0.6" height="15.0" fill="rgb(214,216,16)" rx="2" ry="2" />
<text  x="935.26" y="1599.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (8 samples, 0.15%)</title><rect x="1161.2" y="1797" width="1.7" height="15.0" fill="rgb(242,115,52)" rx="2" ry="2" />
<text  x="1164.22" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.89%)</title><rect x="10.2" y="1301" width="10.5" height="15.0" fill="rgb(229,184,48)" rx="2" ry="2" />
<text  x="13.21" y="1311.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="805.8" y="1509" width="0.4" height="15.0" fill="rgb(235,170,30)" rx="2" ry="2" />
<text  x="808.76" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="82.8" y="1621" width="0.4" height="15.0" fill="rgb(246,44,26)" rx="2" ry="2" />
<text  x="85.81" y="1631.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (291 samples, 5.30%)</title><rect x="988.5" y="1493" width="62.5" height="15.0" fill="rgb(215,144,31)" rx="2" ry="2" />
<text  x="991.54" y="1503.5" >servic..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="771.2" y="1557" width="0.2" height="15.0" fill="rgb(243,63,24)" rx="2" ry="2" />
<text  x="774.18" y="1567.5" ></text>
</g>
<g >
<title>create_partitions (33 samples, 0.60%)</title><rect x="11.1" y="501" width="7.1" height="15.0" fill="rgb(216,58,17)" rx="2" ry="2" />
<text  x="14.07" y="511.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="22.2" y="1397" width="0.3" height="15.0" fill="rgb(224,26,42)" rx="2" ry="2" />
<text  x="25.24" y="1407.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="19.0" y="261" width="0.2" height="15.0" fill="rgb(225,190,41)" rx="2" ry="2" />
<text  x="22.02" y="271.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 0.73%)</title><rect x="10.2" y="613" width="8.6" height="15.0" fill="rgb(225,112,49)" rx="2" ry="2" />
<text  x="13.21" y="623.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1733" width="10.8" height="15.0" fill="rgb(242,117,38)" rx="2" ry="2" />
<text  x="13.21" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (5 samples, 0.09%)</title><rect x="19.0" y="437" width="1.1" height="15.0" fill="rgb(213,86,26)" rx="2" ry="2" />
<text  x="22.02" y="447.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1461" width="10.8" height="15.0" fill="rgb(248,56,51)" rx="2" ry="2" />
<text  x="13.21" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (2 samples, 0.04%)</title><rect x="894.2" y="1525" width="0.5" height="15.0" fill="rgb(217,32,28)" rx="2" ry="2" />
<text  x="897.25" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="19.2" y="261" width="0.3" height="15.0" fill="rgb(212,97,37)" rx="2" ry="2" />
<text  x="22.24" y="271.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (6 samples, 0.11%)</title><rect x="29.8" y="1749" width="1.2" height="15.0" fill="rgb(219,84,34)" rx="2" ry="2" />
<text  x="32.76" y="1759.5" ></text>
</g>
<g >
<title>make_combined_reader (73 samples, 1.33%)</title><rect x="508.5" y="1557" width="15.7" height="15.0" fill="rgb(229,227,48)" rx="2" ry="2" />
<text  x="511.50" y="1567.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.02%)</title><rect x="315.4" y="1477" width="0.2" height="15.0" fill="rgb(232,20,23)" rx="2" ry="2" />
<text  x="318.42" y="1487.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (3 samples, 0.05%)</title><rect x="18.2" y="453" width="0.6" height="15.0" fill="rgb(252,54,26)" rx="2" ry="2" />
<text  x="21.16" y="463.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.02%)</title><rect x="805.5" y="1509" width="0.3" height="15.0" fill="rgb(234,88,45)" rx="2" ry="2" />
<text  x="808.54" y="1519.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.05%)</title><rect x="891.0" y="1477" width="0.7" height="15.0" fill="rgb(227,152,35)" rx="2" ry="2" />
<text  x="894.03" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="671.5" y="1653" width="0.5" height="15.0" fill="rgb(222,87,38)" rx="2" ry="2" />
<text  x="674.52" y="1663.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (1 samples, 0.02%)</title><rect x="345.3" y="1589" width="0.2" height="15.0" fill="rgb(207,212,53)" rx="2" ry="2" />
<text  x="348.27" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.02%)</title><rect x="21.2" y="1541" width="0.2" height="15.0" fill="rgb(253,79,24)" rx="2" ry="2" />
<text  x="24.17" y="1551.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="644.0" y="1589" width="0.2" height="15.0" fill="rgb(251,89,42)" rx="2" ry="2" />
<text  x="647.03" y="1599.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (65 samples, 1.18%)</title><rect x="678.0" y="1669" width="13.9" height="15.0" fill="rgb(228,86,49)" rx="2" ry="2" />
<text  x="680.97" y="1679.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (77 samples, 1.40%)</title><rect x="1025.5" y="1429" width="16.5" height="15.0" fill="rgb(226,0,8)" rx="2" ry="2" />
<text  x="1028.48" y="1439.5" ></text>
</g>
<g >
<title>dht::tri_compare (15 samples, 0.27%)</title><rect x="1092.9" y="1445" width="3.2" height="15.0" fill="rgb(239,161,22)" rx="2" ry="2" />
<text  x="1095.92" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="715.8" y="1637" width="0.4" height="15.0" fill="rgb(226,171,43)" rx="2" ry="2" />
<text  x="718.77" y="1647.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (157 samples, 2.86%)</title><rect x="644.2" y="1669" width="33.8" height="15.0" fill="rgb(210,50,52)" rx="2" ry="2" />
<text  x="647.24" y="1679.5" >se..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="15.2" y="133" width="0.2" height="15.0" fill="rgb(248,56,33)" rx="2" ry="2" />
<text  x="18.15" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (11 samples, 0.20%)</title><rect x="978.2" y="1477" width="2.4" height="15.0" fill="rgb(253,227,54)" rx="2" ry="2" />
<text  x="981.23" y="1487.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="862.0" y="1605" width="0.2" height="15.0" fill="rgb(216,77,46)" rx="2" ry="2" />
<text  x="865.03" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="585.2" y="1557" width="0.2" height="15.0" fill="rgb(213,215,37)" rx="2" ry="2" />
<text  x="588.18" y="1567.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (292 samples, 5.31%)</title><rect x="527.8" y="1573" width="62.7" height="15.0" fill="rgb(226,185,48)" rx="2" ry="2" />
<text  x="530.83" y="1583.5" >memtab..</text>
</g>
<g >
<title>table::update_cache (1 samples, 0.02%)</title><rect x="1123.4" y="1653" width="0.2" height="15.0" fill="rgb(219,100,43)" rx="2" ry="2" />
<text  x="1126.42" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="20.5" y="1173" width="0.2" height="15.0" fill="rgb(218,31,6)" rx="2" ry="2" />
<text  x="23.52" y="1183.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (53 samples, 0.96%)</title><rect x="718.1" y="1653" width="11.4" height="15.0" fill="rgb(237,158,37)" rx="2" ry="2" />
<text  x="721.13" y="1663.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="62.2" y="1653" width="0.2" height="15.0" fill="rgb(242,32,46)" rx="2" ry="2" />
<text  x="65.19" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.02%)</title><rect x="20.3" y="917" width="0.2" height="15.0" fill="rgb(242,223,43)" rx="2" ry="2" />
<text  x="23.31" y="927.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="100.6" y="1637" width="0.5" height="15.0" fill="rgb(237,26,13)" rx="2" ry="2" />
<text  x="103.64" y="1647.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="21.0" y="1541" width="0.2" height="15.0" fill="rgb(220,60,18)" rx="2" ry="2" />
<text  x="23.95" y="1551.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="20.3" y="1157" width="0.2" height="15.0" fill="rgb(209,170,23)" rx="2" ry="2" />
<text  x="23.31" y="1167.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (4 samples, 0.07%)</title><rect x="847.6" y="1621" width="0.9" height="15.0" fill="rgb(236,117,15)" rx="2" ry="2" />
<text  x="850.64" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.09%)</title><rect x="335.6" y="1589" width="1.1" height="15.0" fill="rgb(237,142,54)" rx="2" ry="2" />
<text  x="338.61" y="1599.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="10.2" y="309" width="0.2" height="15.0" fill="rgb(223,55,51)" rx="2" ry="2" />
<text  x="13.21" y="319.5" ></text>
</g>
<g >
<title>sstring_hash::operator (3 samples, 0.05%)</title><rect x="847.0" y="1589" width="0.6" height="15.0" fill="rgb(242,142,26)" rx="2" ry="2" />
<text  x="850.00" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="573.6" y="1509" width="1.3" height="15.0" fill="rgb(220,162,37)" rx="2" ry="2" />
<text  x="576.58" y="1519.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (8 samples, 0.15%)</title><rect x="85.0" y="1621" width="1.7" height="15.0" fill="rgb(238,56,50)" rx="2" ry="2" />
<text  x="87.96" y="1631.5" ></text>
</g>
<g >
<title>__start_context (3 samples, 0.05%)</title><rect x="18.2" y="597" width="0.6" height="15.0" fill="rgb(234,111,27)" rx="2" ry="2" />
<text  x="21.16" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="672.0" y="1653" width="0.4" height="15.0" fill="rgb(230,84,15)" rx="2" ry="2" />
<text  x="674.95" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.02%)</title><rect x="16.2" y="229" width="0.2" height="15.0" fill="rgb(227,45,50)" rx="2" ry="2" />
<text  x="19.23" y="239.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (12 samples, 0.22%)</title><rect x="1048.2" y="1461" width="2.6" height="15.0" fill="rgb(220,129,4)" rx="2" ry="2" />
<text  x="1051.25" y="1471.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (3 samples, 0.05%)</title><rect x="1108.2" y="1573" width="0.6" height="15.0" fill="rgb(205,197,28)" rx="2" ry="2" />
<text  x="1111.17" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.05%)</title><rect x="703.7" y="1637" width="0.7" height="15.0" fill="rgb(208,180,34)" rx="2" ry="2" />
<text  x="706.74" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.02%)</title><rect x="20.5" y="981" width="0.2" height="15.0" fill="rgb(213,161,38)" rx="2" ry="2" />
<text  x="23.52" y="991.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1413" width="10.8" height="15.0" fill="rgb(216,222,3)" rx="2" ry="2" />
<text  x="13.21" y="1423.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;mutation_fragment*&gt;, flat_mutation_reader::peek (1 samples, 0.02%)</title><rect x="626.0" y="1669" width="0.2" height="15.0" fill="rgb(224,200,28)" rx="2" ry="2" />
<text  x="628.99" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1123.4" y="1605" width="0.2" height="15.0" fill="rgb(236,4,25)" rx="2" ry="2" />
<text  x="1126.42" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.89%)</title><rect x="10.2" y="1253" width="10.5" height="15.0" fill="rgb(210,221,11)" rx="2" ry="2" />
<text  x="13.21" y="1263.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.02%)</title><rect x="25.5" y="1445" width="0.2" height="15.0" fill="rgb(211,162,45)" rx="2" ry="2" />
<text  x="28.46" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1685" width="10.8" height="15.0" fill="rgb(223,7,21)" rx="2" ry="2" />
<text  x="13.21" y="1695.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.02%)</title><rect x="236.4" y="1477" width="0.2" height="15.0" fill="rgb(225,62,6)" rx="2" ry="2" />
<text  x="239.38" y="1487.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (6 samples, 0.11%)</title><rect x="1124.7" y="1669" width="1.3" height="15.0" fill="rgb(247,6,39)" rx="2" ry="2" />
<text  x="1127.71" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="24.0" y="1381" width="0.2" height="15.0" fill="rgb(217,92,7)" rx="2" ry="2" />
<text  x="26.96" y="1391.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (4 samples, 0.07%)</title><rect x="452.4" y="1605" width="0.9" height="15.0" fill="rgb(235,185,24)" rx="2" ry="2" />
<text  x="455.45" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="20.3" y="805" width="0.2" height="15.0" fill="rgb(235,99,50)" rx="2" ry="2" />
<text  x="23.31" y="815.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.02%)</title><rect x="872.6" y="1589" width="0.2" height="15.0" fill="rgb(220,154,10)" rx="2" ry="2" />
<text  x="875.56" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.05%)</title><rect x="1040.3" y="1397" width="0.6" height="15.0" fill="rgb(211,99,8)" rx="2" ry="2" />
<text  x="1043.30" y="1407.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (1 samples, 0.02%)</title><rect x="855.8" y="1541" width="0.2" height="15.0" fill="rgb(246,126,12)" rx="2" ry="2" />
<text  x="858.80" y="1551.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (1 samples, 0.02%)</title><rect x="11.5" y="389" width="0.2" height="15.0" fill="rgb(243,8,37)" rx="2" ry="2" />
<text  x="14.50" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="631.4" y="1637" width="0.4" height="15.0" fill="rgb(234,39,23)" rx="2" ry="2" />
<text  x="634.36" y="1647.5" ></text>
</g>
<g >
<title>db::filter_for_query (1 samples, 0.02%)</title><rect x="963.6" y="1525" width="0.2" height="15.0" fill="rgb(205,87,28)" rx="2" ry="2" />
<text  x="966.62" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (2 samples, 0.04%)</title><rect x="34.3" y="1685" width="0.4" height="15.0" fill="rgb(227,12,14)" rx="2" ry="2" />
<text  x="37.27" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="526.5" y="1557" width="0.5" height="15.0" fill="rgb(238,30,42)" rx="2" ry="2" />
<text  x="529.55" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="23.1" y="1221" width="0.2" height="15.0" fill="rgb(223,51,36)" rx="2" ry="2" />
<text  x="26.10" y="1231.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="632.9" y="1653" width="0.2" height="15.0" fill="rgb(233,99,5)" rx="2" ry="2" />
<text  x="635.86" y="1663.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1 samples, 0.02%)</title><rect x="1097.0" y="1557" width="0.2" height="15.0" fill="rgb(212,173,15)" rx="2" ry="2" />
<text  x="1100.00" y="1567.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="817.1" y="1525" width="0.9" height="15.0" fill="rgb(238,13,49)" rx="2" ry="2" />
<text  x="820.14" y="1535.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="288.8" y="1413" width="0.2" height="15.0" fill="rgb(212,57,10)" rx="2" ry="2" />
<text  x="291.78" y="1423.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.02%)</title><rect x="20.1" y="933" width="0.2" height="15.0" fill="rgb(211,111,4)" rx="2" ry="2" />
<text  x="23.09" y="943.5" ></text>
</g>
<g >
<title>seastar::memory::stats (5 samples, 0.09%)</title><rect x="204.4" y="1509" width="1.0" height="15.0" fill="rgb(242,106,48)" rx="2" ry="2" />
<text  x="207.38" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (9 samples, 0.16%)</title><rect x="1097.6" y="1573" width="2.0" height="15.0" fill="rgb(253,83,0)" rx="2" ry="2" />
<text  x="1100.64" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="20.7" y="1045" width="0.3" height="15.0" fill="rgb(227,43,18)" rx="2" ry="2" />
<text  x="23.74" y="1055.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="19.2" y="325" width="0.3" height="15.0" fill="rgb(244,199,5)" rx="2" ry="2" />
<text  x="22.24" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="986.4" y="1477" width="1.7" height="15.0" fill="rgb(205,101,47)" rx="2" ry="2" />
<text  x="989.39" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (2 samples, 0.04%)</title><rect x="860.1" y="1637" width="0.4" height="15.0" fill="rgb(252,67,11)" rx="2" ry="2" />
<text  x="863.10" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="26.1" y="1269" width="0.2" height="15.0" fill="rgb(251,82,28)" rx="2" ry="2" />
<text  x="29.11" y="1279.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (22 samples, 0.40%)</title><rect x="21.8" y="1733" width="4.7" height="15.0" fill="rgb(246,116,40)" rx="2" ry="2" />
<text  x="24.81" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (4 samples, 0.07%)</title><rect x="10.2" y="549" width="0.9" height="15.0" fill="rgb(205,72,38)" rx="2" ry="2" />
<text  x="13.21" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::revoke_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="17.9" y="373" width="0.3" height="15.0" fill="rgb(240,56,46)" rx="2" ry="2" />
<text  x="20.95" y="383.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.29%)</title><rect x="485.7" y="1573" width="3.5" height="15.0" fill="rgb(226,113,5)" rx="2" ry="2" />
<text  x="488.74" y="1583.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.04%)</title><rect x="22.9" y="1413" width="0.4" height="15.0" fill="rgb(237,4,54)" rx="2" ry="2" />
<text  x="25.89" y="1423.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="31.3" y="1701" width="0.2" height="15.0" fill="rgb(247,36,47)" rx="2" ry="2" />
<text  x="34.26" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="44.4" y="1637" width="0.4" height="15.0" fill="rgb(242,135,30)" rx="2" ry="2" />
<text  x="47.36" y="1647.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.02%)</title><rect x="25.5" y="1429" width="0.2" height="15.0" fill="rgb(243,204,15)" rx="2" ry="2" />
<text  x="28.46" y="1439.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="945.6" y="1557" width="0.2" height="15.0" fill="rgb(245,90,51)" rx="2" ry="2" />
<text  x="948.58" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="13.0" y="181" width="0.2" height="15.0" fill="rgb(232,207,30)" rx="2" ry="2" />
<text  x="16.01" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_valid (1 samples, 0.02%)</title><rect x="23.3" y="1397" width="0.2" height="15.0" fill="rgb(249,143,6)" rx="2" ry="2" />
<text  x="26.32" y="1407.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (7 samples, 0.13%)</title><rect x="12.6" y="309" width="1.5" height="15.0" fill="rgb(221,42,0)" rx="2" ry="2" />
<text  x="15.58" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_table_statement, std::default_delete&lt;cql3::statements::drop_table_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::drop_table_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="17.7" y="373" width="0.2" height="15.0" fill="rgb(226,195,4)" rx="2" ry="2" />
<text  x="20.73" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="946.7" y="1557" width="0.4" height="15.0" fill="rgb(227,42,54)" rx="2" ry="2" />
<text  x="949.65" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1365" width="10.8" height="15.0" fill="rgb(253,205,30)" rx="2" ry="2" />
<text  x="13.21" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="25.9" y="1317" width="0.2" height="15.0" fill="rgb(205,2,12)" rx="2" ry="2" />
<text  x="28.89" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="23.7" y="1317" width="0.3" height="15.0" fill="rgb(224,105,1)" rx="2" ry="2" />
<text  x="26.75" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="949" width="9.9" height="15.0" fill="rgb(253,183,15)" rx="2" ry="2" />
<text  x="13.21" y="959.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.05%)</title><rect x="553.0" y="1557" width="0.6" height="15.0" fill="rgb(219,202,42)" rx="2" ry="2" />
<text  x="555.96" y="1567.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::grant_statement*, std::default_delete&lt;cql3::statements::grant_statement&gt; &gt; (1 samples, 0.02%)</title><rect x="19.7" y="389" width="0.2" height="15.0" fill="rgb(205,30,42)" rx="2" ry="2" />
<text  x="22.67" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.05%)</title><rect x="11.9" y="197" width="0.7" height="15.0" fill="rgb(224,229,1)" rx="2" ry="2" />
<text  x="14.93" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="845.1" y="1621" width="0.2" height="15.0" fill="rgb(227,7,19)" rx="2" ry="2" />
<text  x="848.06" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (1 samples, 0.02%)</title><rect x="855.6" y="1557" width="0.2" height="15.0" fill="rgb(210,229,21)" rx="2" ry="2" />
<text  x="858.59" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="313.7" y="1477" width="0.9" height="15.0" fill="rgb(230,12,31)" rx="2" ry="2" />
<text  x="316.70" y="1487.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="10.9" y="213" width="0.2" height="15.0" fill="rgb(250,184,4)" rx="2" ry="2" />
<text  x="13.86" y="223.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="20.3" y="885" width="0.2" height="15.0" fill="rgb(218,157,18)" rx="2" ry="2" />
<text  x="23.31" y="895.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.05%)</title><rect x="642.1" y="1653" width="0.6" height="15.0" fill="rgb(217,79,5)" rx="2" ry="2" />
<text  x="645.10" y="1663.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;float  (1 samples, 0.02%)</title><rect x="1160.6" y="1589" width="0.2" height="15.0" fill="rgb(217,225,10)" rx="2" ry="2" />
<text  x="1163.58" y="1599.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="669.8" y="1653" width="0.6" height="15.0" fill="rgb(227,36,44)" rx="2" ry="2" />
<text  x="672.80" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (3 samples, 0.05%)</title><rect x="11.9" y="277" width="0.7" height="15.0" fill="rgb(226,139,43)" rx="2" ry="2" />
<text  x="14.93" y="287.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.02%)</title><rect x="769.2" y="1573" width="0.3" height="15.0" fill="rgb(253,103,5)" rx="2" ry="2" />
<text  x="772.25" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::stats (7 samples, 0.13%)</title><rect x="599.1" y="1525" width="1.5" height="15.0" fill="rgb(227,33,25)" rx="2" ry="2" />
<text  x="602.14" y="1535.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.02%)</title><rect x="20.7" y="1189" width="0.3" height="15.0" fill="rgb(207,174,5)" rx="2" ry="2" />
<text  x="23.74" y="1199.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::drop_table_statement*, std::default_delete&lt;cql3::statements::drop_table_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="17.7" y="309" width="0.2" height="15.0" fill="rgb(229,84,27)" rx="2" ry="2" />
<text  x="20.73" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (8 samples, 0.15%)</title><rect x="676.2" y="1653" width="1.8" height="15.0" fill="rgb(244,94,39)" rx="2" ry="2" />
<text  x="679.25" y="1663.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (10 samples, 0.18%)</title><rect x="428.8" y="1573" width="2.2" height="15.0" fill="rgb(222,224,45)" rx="2" ry="2" />
<text  x="431.82" y="1583.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (9 samples, 0.16%)</title><rect x="771.6" y="1557" width="1.9" height="15.0" fill="rgb(229,94,3)" rx="2" ry="2" />
<text  x="774.61" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (1 samples, 0.02%)</title><rect x="1122.8" y="1653" width="0.2" height="15.0" fill="rgb(232,195,27)" rx="2" ry="2" />
<text  x="1125.77" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (26 samples, 0.47%)</title><rect x="474.1" y="1541" width="5.6" height="15.0" fill="rgb(242,200,29)" rx="2" ry="2" />
<text  x="477.14" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="820.1" y="1525" width="0.3" height="15.0" fill="rgb(250,122,11)" rx="2" ry="2" />
<text  x="823.15" y="1535.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (718 samples, 13.07%)</title><rect x="943.4" y="1573" width="154.2" height="15.0" fill="rgb(246,95,18)" rx="2" ry="2" />
<text  x="946.43" y="1583.5" >service::storage_pr..</text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="23.1" y="1157" width="0.2" height="15.0" fill="rgb(253,219,4)" rx="2" ry="2" />
<text  x="26.10" y="1167.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.38%)</title><rect x="976.1" y="1509" width="4.5" height="15.0" fill="rgb(239,147,22)" rx="2" ry="2" />
<text  x="979.08" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1541" width="10.8" height="15.0" fill="rgb(221,31,24)" rx="2" ry="2" />
<text  x="13.21" y="1551.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="18.2" y="245" width="0.2" height="15.0" fill="rgb(215,94,16)" rx="2" ry="2" />
<text  x="21.16" y="255.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.05%)</title><rect x="722.4" y="1637" width="0.7" height="15.0" fill="rgb(244,193,12)" rx="2" ry="2" />
<text  x="725.42" y="1647.5" ></text>
</g>
<g >
<title>sstring_hash::operator (7 samples, 0.13%)</title><rect x="828.1" y="1541" width="1.5" height="15.0" fill="rgb(215,209,5)" rx="2" ry="2" />
<text  x="831.10" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="1112.9" y="1525" width="0.2" height="15.0" fill="rgb(213,42,34)" rx="2" ry="2" />
<text  x="1115.89" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.02%)</title><rect x="16.2" y="197" width="0.2" height="15.0" fill="rgb(240,125,31)" rx="2" ry="2" />
<text  x="19.23" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="15.6" y="197" width="0.2" height="15.0" fill="rgb(216,199,44)" rx="2" ry="2" />
<text  x="18.58" y="207.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="741" width="9.9" height="15.0" fill="rgb(251,33,7)" rx="2" ry="2" />
<text  x="13.21" y="751.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (11 samples, 0.20%)</title><rect x="845.3" y="1621" width="2.3" height="15.0" fill="rgb(235,225,9)" rx="2" ry="2" />
<text  x="848.28" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="571.2" y="1493" width="1.3" height="15.0" fill="rgb(234,41,30)" rx="2" ry="2" />
<text  x="574.22" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="26.1" y="1333" width="0.2" height="15.0" fill="rgb(234,204,31)" rx="2" ry="2" />
<text  x="29.11" y="1343.5" ></text>
</g>
<g >
<title>service::storage_service::join_token_ring (1 samples, 0.02%)</title><rect x="31.7" y="1621" width="0.2" height="15.0" fill="rgb(244,114,32)" rx="2" ry="2" />
<text  x="34.69" y="1631.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="480.8" y="1541" width="0.2" height="15.0" fill="rgb(245,133,52)" rx="2" ry="2" />
<text  x="483.80" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="581.1" y="1525" width="1.1" height="15.0" fill="rgb(249,118,19)" rx="2" ry="2" />
<text  x="584.10" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="954.4" y="1541" width="0.2" height="15.0" fill="rgb(228,164,11)" rx="2" ry="2" />
<text  x="957.39" y="1551.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (2 samples, 0.04%)</title><rect x="872.1" y="1589" width="0.5" height="15.0" fill="rgb(236,110,47)" rx="2" ry="2" />
<text  x="875.13" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.15%)</title><rect x="371.3" y="1509" width="1.7" height="15.0" fill="rgb(245,68,17)" rx="2" ry="2" />
<text  x="374.26" y="1519.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (25 samples, 0.46%)</title><rect x="195.1" y="1525" width="5.4" height="15.0" fill="rgb(223,221,36)" rx="2" ry="2" />
<text  x="198.14" y="1535.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="15.6" y="165" width="0.2" height="15.0" fill="rgb(251,81,34)" rx="2" ry="2" />
<text  x="18.58" y="175.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (15 samples, 0.27%)</title><rect x="570.1" y="1525" width="3.3" height="15.0" fill="rgb(238,141,30)" rx="2" ry="2" />
<text  x="573.15" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="10.2" y="581" width="0.9" height="15.0" fill="rgb(232,70,33)" rx="2" ry="2" />
<text  x="13.21" y="591.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.24%)</title><rect x="951.0" y="1541" width="2.7" height="15.0" fill="rgb(229,47,26)" rx="2" ry="2" />
<text  x="953.95" y="1551.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (1 samples, 0.02%)</title><rect x="24.0" y="1413" width="0.2" height="15.0" fill="rgb(246,139,9)" rx="2" ry="2" />
<text  x="26.96" y="1423.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (1 samples, 0.02%)</title><rect x="496.7" y="1589" width="0.2" height="15.0" fill="rgb(232,228,44)" rx="2" ry="2" />
<text  x="499.69" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="24.8" y="1397" width="0.2" height="15.0" fill="rgb(209,172,20)" rx="2" ry="2" />
<text  x="27.82" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="466.2" y="1541" width="0.2" height="15.0" fill="rgb(205,97,25)" rx="2" ry="2" />
<text  x="469.19" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (36 samples, 0.66%)</title><rect x="886.3" y="1509" width="7.7" height="15.0" fill="rgb(228,88,19)" rx="2" ry="2" />
<text  x="889.30" y="1519.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (13 samples, 0.24%)</title><rect x="766.5" y="1573" width="2.7" height="15.0" fill="rgb(234,212,2)" rx="2" ry="2" />
<text  x="769.45" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="20.3" y="1141" width="0.2" height="15.0" fill="rgb(248,193,51)" rx="2" ry="2" />
<text  x="23.31" y="1151.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="21.2" y="1493" width="0.2" height="15.0" fill="rgb(221,150,9)" rx="2" ry="2" />
<text  x="24.17" y="1503.5" ></text>
</g>
<g >
<title>schema::column_at (8 samples, 0.15%)</title><rect x="446.9" y="1525" width="1.7" height="15.0" fill="rgb(242,170,14)" rx="2" ry="2" />
<text  x="449.86" y="1535.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="714.7" y="1653" width="0.2" height="15.0" fill="rgb(218,30,3)" rx="2" ry="2" />
<text  x="717.69" y="1663.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (18 samples, 0.33%)</title><rect x="831.7" y="1589" width="3.9" height="15.0" fill="rgb(219,137,27)" rx="2" ry="2" />
<text  x="834.75" y="1599.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (95 samples, 1.73%)</title><rect x="1075.7" y="1477" width="20.4" height="15.0" fill="rgb(217,103,23)" rx="2" ry="2" />
<text  x="1078.74" y="1487.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (2 samples, 0.04%)</title><rect x="848.7" y="1637" width="0.4" height="15.0" fill="rgb(244,203,2)" rx="2" ry="2" />
<text  x="851.71" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::signal (6 samples, 0.11%)</title><rect x="327.7" y="1557" width="1.2" height="15.0" fill="rgb(205,227,54)" rx="2" ry="2" />
<text  x="330.66" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.05%)</title><rect x="560.1" y="1525" width="0.6" height="15.0" fill="rgb(218,2,50)" rx="2" ry="2" />
<text  x="563.05" y="1535.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (26 samples, 0.47%)</title><rect x="907.3" y="1541" width="5.6" height="15.0" fill="rgb(244,91,26)" rx="2" ry="2" />
<text  x="910.35" y="1551.5" ></text>
</g>
<g >
<title>seastar::app_template::run (5,258 samples, 95.70%)</title><rect x="31.9" y="1765" width="1129.3" height="15.0" fill="rgb(205,169,30)" rx="2" ry="2" />
<text  x="34.91" y="1775.5" >seastar::app_template::run</text>
</g>
<g >
<title>single_node_cql_env::execute_cql (20 samples, 0.36%)</title><rect x="22.2" y="1669" width="4.3" height="15.0" fill="rgb(240,169,18)" rx="2" ry="2" />
<text  x="25.24" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="13.0" y="197" width="0.2" height="15.0" fill="rgb(242,164,44)" rx="2" ry="2" />
<text  x="16.01" y="207.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.05%)</title><rect x="489.6" y="1589" width="0.6" height="15.0" fill="rgb(217,192,20)" rx="2" ry="2" />
<text  x="492.60" y="1599.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="714.9" y="1653" width="1.3" height="15.0" fill="rgb(235,96,27)" rx="2" ry="2" />
<text  x="717.91" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.36%)</title><rect x="1042.9" y="1429" width="4.3" height="15.0" fill="rgb(242,100,11)" rx="2" ry="2" />
<text  x="1045.88" y="1439.5" ></text>
</g>
<g >
<title>log@@GLIBC_2.29 (1 samples, 0.02%)</title><rect x="1160.6" y="1573" width="0.2" height="15.0" fill="rgb(213,194,47)" rx="2" ry="2" />
<text  x="1163.58" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="12.8" y="149" width="0.2" height="15.0" fill="rgb(246,147,24)" rx="2" ry="2" />
<text  x="15.79" y="159.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="220.9" y="1477" width="0.2" height="15.0" fill="rgb(206,57,15)" rx="2" ry="2" />
<text  x="223.91" y="1487.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="891.7" y="1477" width="0.2" height="15.0" fill="rgb(213,92,1)" rx="2" ry="2" />
<text  x="894.67" y="1487.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.44%)</title><rect x="469.0" y="1541" width="5.1" height="15.0" fill="rgb(211,13,47)" rx="2" ry="2" />
<text  x="471.98" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (13 samples, 0.24%)</title><rect x="14.7" y="373" width="2.8" height="15.0" fill="rgb(248,67,26)" rx="2" ry="2" />
<text  x="17.73" y="383.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (3 samples, 0.05%)</title><rect x="18.2" y="469" width="0.6" height="15.0" fill="rgb(232,191,30)" rx="2" ry="2" />
<text  x="21.16" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (3 samples, 0.05%)</title><rect x="21.0" y="1589" width="0.6" height="15.0" fill="rgb(233,142,39)" rx="2" ry="2" />
<text  x="23.95" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="20.1" y="789" width="0.2" height="15.0" fill="rgb(247,8,49)" rx="2" ry="2" />
<text  x="23.09" y="799.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (7 samples, 0.13%)</title><rect x="621.3" y="1637" width="1.5" height="15.0" fill="rgb(233,180,3)" rx="2" ry="2" />
<text  x="624.26" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="24.8" y="1317" width="0.2" height="15.0" fill="rgb(242,8,42)" rx="2" ry="2" />
<text  x="27.82" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="629" width="9.9" height="15.0" fill="rgb(211,89,17)" rx="2" ry="2" />
<text  x="13.21" y="639.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="10.2" y="213" width="0.2" height="15.0" fill="rgb(210,201,39)" rx="2" ry="2" />
<text  x="13.21" y="223.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.04%)</title><rect x="15.4" y="325" width="0.4" height="15.0" fill="rgb(251,87,4)" rx="2" ry="2" />
<text  x="18.37" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.02%)</title><rect x="1159.9" y="1637" width="0.2" height="15.0" fill="rgb(209,157,34)" rx="2" ry="2" />
<text  x="1162.93" y="1647.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="25.5" y="1461" width="0.2" height="15.0" fill="rgb(241,125,37)" rx="2" ry="2" />
<text  x="28.46" y="1471.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="17.3" y="277" width="0.2" height="15.0" fill="rgb(216,223,54)" rx="2" ry="2" />
<text  x="20.30" y="287.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="69.1" y="1653" width="1.0" height="15.0" fill="rgb(221,18,10)" rx="2" ry="2" />
<text  x="72.06" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="316.3" y="1509" width="0.4" height="15.0" fill="rgb(221,141,12)" rx="2" ry="2" />
<text  x="319.28" y="1519.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (1 samples, 0.02%)</title><rect x="364.0" y="1573" width="0.2" height="15.0" fill="rgb(249,52,41)" rx="2" ry="2" />
<text  x="366.96" y="1583.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="25.5" y="1493" width="0.2" height="15.0" fill="rgb(253,127,26)" rx="2" ry="2" />
<text  x="28.46" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::attributes::raw&gt;, void&gt; (1 samples, 0.02%)</title><rect x="17.3" y="341" width="0.2" height="15.0" fill="rgb(229,102,4)" rx="2" ry="2" />
<text  x="20.30" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.04%)</title><rect x="594.6" y="1557" width="0.5" height="15.0" fill="rgb(214,153,18)" rx="2" ry="2" />
<text  x="597.63" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (54 samples, 0.98%)</title><rect x="10.2" y="1765" width="11.6" height="15.0" fill="rgb(209,199,49)" rx="2" ry="2" />
<text  x="13.21" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (76 samples, 1.38%)</title><rect x="10.2" y="1781" width="16.3" height="15.0" fill="rgb(243,29,12)" rx="2" ry="2" />
<text  x="13.21" y="1791.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.05%)</title><rect x="50.2" y="1621" width="0.6" height="15.0" fill="rgb(243,197,0)" rx="2" ry="2" />
<text  x="53.16" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (3 samples, 0.05%)</title><rect x="11.9" y="309" width="0.7" height="15.0" fill="rgb(241,52,27)" rx="2" ry="2" />
<text  x="14.93" y="319.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="893.6" y="1477" width="0.2" height="15.0" fill="rgb(214,45,36)" rx="2" ry="2" />
<text  x="896.60" y="1487.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (95 samples, 1.73%)</title><rect x="796.7" y="1525" width="20.4" height="15.0" fill="rgb(207,106,49)" rx="2" ry="2" />
<text  x="799.74" y="1535.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="614.8" y="1605" width="0.4" height="15.0" fill="rgb(231,181,26)" rx="2" ry="2" />
<text  x="617.82" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="13.0" y="245" width="0.4" height="15.0" fill="rgb(252,66,7)" rx="2" ry="2" />
<text  x="16.01" y="255.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (1,202 samples, 21.88%)</title><rect x="862.9" y="1605" width="258.2" height="15.0" fill="rgb(251,120,26)" rx="2" ry="2" />
<text  x="865.89" y="1615.5" >cql3::statements::select_statement..</text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.18%)</title><rect x="505.1" y="1573" width="2.1" height="15.0" fill="rgb(225,208,7)" rx="2" ry="2" />
<text  x="508.07" y="1583.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.05%)</title><rect x="751.2" y="1621" width="0.6" height="15.0" fill="rgb(216,42,45)" rx="2" ry="2" />
<text  x="754.20" y="1631.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.02%)</title><rect x="576.6" y="1525" width="0.2" height="15.0" fill="rgb(217,182,26)" rx="2" ry="2" />
<text  x="579.59" y="1535.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (24 samples, 0.44%)</title><rect x="474.4" y="1525" width="5.1" height="15.0" fill="rgb(209,78,53)" rx="2" ry="2" />
<text  x="477.35" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.05%)</title><rect x="1071.7" y="1477" width="0.6" height="15.0" fill="rgb(253,56,3)" rx="2" ry="2" />
<text  x="1074.66" y="1487.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::deque (1 samples, 0.02%)</title><rect x="11.5" y="309" width="0.2" height="15.0" fill="rgb(252,32,3)" rx="2" ry="2" />
<text  x="14.50" y="319.5" ></text>
</g>
<g >
<title>__start_context (4 samples, 0.07%)</title><rect x="21.0" y="1749" width="0.8" height="15.0" fill="rgb(207,67,6)" rx="2" ry="2" />
<text  x="23.95" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (2 samples, 0.04%)</title><rect x="617.6" y="1621" width="0.4" height="15.0" fill="rgb(211,64,27)" rx="2" ry="2" />
<text  x="620.61" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="26.1" y="1189" width="0.2" height="15.0" fill="rgb(244,54,17)" rx="2" ry="2" />
<text  x="29.11" y="1199.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::run_and_dispose (1 samples, 0.02%)</title><rect x="34.1" y="1685" width="0.2" height="15.0" fill="rgb(234,150,43)" rx="2" ry="2" />
<text  x="37.06" y="1695.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="730.8" y="1669" width="0.4" height="15.0" fill="rgb(220,216,52)" rx="2" ry="2" />
<text  x="733.80" y="1679.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="22.2" y="1381" width="0.3" height="15.0" fill="rgb(224,54,36)" rx="2" ry="2" />
<text  x="25.24" y="1391.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="492.2" y="1605" width="1.7" height="15.0" fill="rgb(205,208,13)" rx="2" ry="2" />
<text  x="495.18" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="789.2" y="1573" width="0.2" height="15.0" fill="rgb(249,177,23)" rx="2" ry="2" />
<text  x="792.22" y="1583.5" ></text>
</g>
<g >
<title>__start_context (22 samples, 0.40%)</title><rect x="21.8" y="1765" width="4.7" height="15.0" fill="rgb(217,45,16)" rx="2" ry="2" />
<text  x="24.81" y="1775.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.02%)</title><rect x="97.6" y="1605" width="0.2" height="15.0" fill="rgb(228,21,21)" rx="2" ry="2" />
<text  x="100.63" y="1615.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (21 samples, 0.38%)</title><rect x="26.5" y="1781" width="4.5" height="15.0" fill="rgb(205,200,20)" rx="2" ry="2" />
<text  x="29.54" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="16.7" y="165" width="0.2" height="15.0" fill="rgb(223,146,8)" rx="2" ry="2" />
<text  x="19.66" y="175.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="20.3" y="741" width="0.2" height="15.0" fill="rgb(222,49,8)" rx="2" ry="2" />
<text  x="23.31" y="751.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.02%)</title><rect x="1123.4" y="1477" width="0.2" height="15.0" fill="rgb(239,16,54)" rx="2" ry="2" />
<text  x="1126.42" y="1487.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (2 samples, 0.04%)</title><rect x="1121.9" y="1653" width="0.4" height="15.0" fill="rgb(231,126,31)" rx="2" ry="2" />
<text  x="1124.91" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="997" width="9.9" height="15.0" fill="rgb(252,125,3)" rx="2" ry="2" />
<text  x="13.21" y="1007.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.02%)</title><rect x="21.4" y="1541" width="0.2" height="15.0" fill="rgb(247,118,18)" rx="2" ry="2" />
<text  x="24.38" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="1110.5" y="1573" width="0.5" height="15.0" fill="rgb(245,93,2)" rx="2" ry="2" />
<text  x="1113.53" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.07%)</title><rect x="1142.5" y="1621" width="0.9" height="15.0" fill="rgb(221,45,17)" rx="2" ry="2" />
<text  x="1145.53" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.02%)</title><rect x="16.2" y="261" width="0.2" height="15.0" fill="rgb(211,69,38)" rx="2" ry="2" />
<text  x="19.23" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.02%)</title><rect x="23.7" y="1365" width="0.3" height="15.0" fill="rgb(224,190,53)" rx="2" ry="2" />
<text  x="26.75" y="1375.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="1042.0" y="1429" width="0.2" height="15.0" fill="rgb(242,162,34)" rx="2" ry="2" />
<text  x="1045.02" y="1439.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.02%)</title><rect x="20.1" y="853" width="0.2" height="15.0" fill="rgb(219,217,13)" rx="2" ry="2" />
<text  x="23.09" y="863.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="1096.8" y="1509" width="0.2" height="15.0" fill="rgb(206,201,3)" rx="2" ry="2" />
<text  x="1099.79" y="1519.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::attach_service_level_statement*, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="17.5" y="309" width="0.2" height="15.0" fill="rgb(217,18,20)" rx="2" ry="2" />
<text  x="20.52" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="1144.9" y="1653" width="0.2" height="15.0" fill="rgb(205,195,7)" rx="2" ry="2" />
<text  x="1147.90" y="1663.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;multishard_combining_reader, dht::sharder const&amp;, seastar::shared_ptr&lt;reader_lifecycle_policy&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, nonwrapping_interval&lt;dht::ring_position&gt; const&amp;, query::partition_slice const&amp;, seastar::io_priority_class const&amp;, tracing::trace_state_ptr, seastar::bool_class&lt;flat_mutation_reader::partition_range_forwarding_tag&gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="31.7" y="1781" width="0.2" height="15.0" fill="rgb(248,58,14)" rx="2" ry="2" />
<text  x="34.69" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1509" width="10.8" height="15.0" fill="rgb(209,144,12)" rx="2" ry="2" />
<text  x="13.21" y="1519.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (86 samples, 1.57%)</title><rect x="649.0" y="1653" width="18.4" height="15.0" fill="rgb(235,70,51)" rx="2" ry="2" />
<text  x="651.97" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="23.7" y="1253" width="0.3" height="15.0" fill="rgb(226,110,23)" rx="2" ry="2" />
<text  x="26.75" y="1263.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="970.5" y="1525" width="0.2" height="15.0" fill="rgb(216,25,49)" rx="2" ry="2" />
<text  x="973.50" y="1535.5" ></text>
</g>
<g >
<title>service::storage_service::join_cluster (1 samples, 0.02%)</title><rect x="31.7" y="1701" width="0.2" height="15.0" fill="rgb(214,95,0)" rx="2" ry="2" />
<text  x="34.69" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.31%)</title><rect x="964.3" y="1509" width="3.6" height="15.0" fill="rgb(212,229,11)" rx="2" ry="2" />
<text  x="967.27" y="1519.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="24.2" y="1317" width="0.2" height="15.0" fill="rgb(205,192,33)" rx="2" ry="2" />
<text  x="27.18" y="1327.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="24.8" y="1285" width="0.2" height="15.0" fill="rgb(230,0,37)" rx="2" ry="2" />
<text  x="27.82" y="1295.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_allocate_map (1 samples, 0.02%)</title><rect x="11.5" y="261" width="0.2" height="15.0" fill="rgb(242,150,49)" rx="2" ry="2" />
<text  x="14.50" y="271.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.02%)</title><rect x="20.7" y="1253" width="0.3" height="15.0" fill="rgb(242,129,23)" rx="2" ry="2" />
<text  x="23.74" y="1263.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="988.3" y="1493" width="0.2" height="15.0" fill="rgb(242,70,24)" rx="2" ry="2" />
<text  x="991.32" y="1503.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="730.6" y="1669" width="0.2" height="15.0" fill="rgb(248,186,16)" rx="2" ry="2" />
<text  x="733.59" y="1679.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (1 samples, 0.02%)</title><rect x="1159.7" y="1669" width="0.2" height="15.0" fill="rgb(209,82,44)" rx="2" ry="2" />
<text  x="1162.72" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="746.5" y="1637" width="0.2" height="15.0" fill="rgb(240,126,37)" rx="2" ry="2" />
<text  x="749.48" y="1647.5" ></text>
</g>
<g >
<title>create_partitions (20 samples, 0.36%)</title><rect x="22.2" y="1685" width="4.3" height="15.0" fill="rgb(221,94,23)" rx="2" ry="2" />
<text  x="25.24" y="1695.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="19.0" y="229" width="0.2" height="15.0" fill="rgb(227,85,51)" rx="2" ry="2" />
<text  x="22.02" y="239.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="496.9" y="1589" width="0.2" height="15.0" fill="rgb(240,102,21)" rx="2" ry="2" />
<text  x="499.91" y="1599.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.04%)</title><rect x="1097.2" y="1557" width="0.4" height="15.0" fill="rgb(218,210,27)" rx="2" ry="2" />
<text  x="1100.22" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="1036.4" y="1381" width="0.5" height="15.0" fill="rgb(235,88,34)" rx="2" ry="2" />
<text  x="1039.43" y="1391.5" ></text>
</g>
<g >
<title>sstring_hash::operator (7 samples, 0.13%)</title><rect x="840.1" y="1605" width="1.5" height="15.0" fill="rgb(230,68,49)" rx="2" ry="2" />
<text  x="843.12" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (6 samples, 0.11%)</title><rect x="1098.3" y="1557" width="1.3" height="15.0" fill="rgb(252,65,35)" rx="2" ry="2" />
<text  x="1101.29" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="62.4" y="1653" width="0.2" height="15.0" fill="rgb(242,89,24)" rx="2" ry="2" />
<text  x="65.41" y="1663.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.07%)</title><rect x="24.4" y="1429" width="0.8" height="15.0" fill="rgb(254,122,32)" rx="2" ry="2" />
<text  x="27.39" y="1439.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="31.7" y="1637" width="0.2" height="15.0" fill="rgb(208,21,35)" rx="2" ry="2" />
<text  x="34.69" y="1647.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (2 samples, 0.04%)</title><rect x="252.3" y="1445" width="0.4" height="15.0" fill="rgb(220,104,43)" rx="2" ry="2" />
<text  x="255.27" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="24.2" y="1381" width="0.2" height="15.0" fill="rgb(227,140,51)" rx="2" ry="2" />
<text  x="27.18" y="1391.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="222.2" y="1493" width="0.4" height="15.0" fill="rgb(229,79,13)" rx="2" ry="2" />
<text  x="225.20" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="616.3" y="1621" width="0.5" height="15.0" fill="rgb(239,182,20)" rx="2" ry="2" />
<text  x="619.32" y="1631.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="16.2" y="133" width="0.2" height="15.0" fill="rgb(234,131,48)" rx="2" ry="2" />
<text  x="19.23" y="143.5" ></text>
</g>
<g >
<title>schema::get_partitioner (1 samples, 0.02%)</title><rect x="917.9" y="1573" width="0.2" height="15.0" fill="rgb(235,32,51)" rx="2" ry="2" />
<text  x="920.87" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (1 samples, 0.02%)</title><rect x="894.0" y="1509" width="0.2" height="15.0" fill="rgb(239,117,5)" rx="2" ry="2" />
<text  x="897.03" y="1519.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="774.4" y="1589" width="0.2" height="15.0" fill="rgb(212,116,7)" rx="2" ry="2" />
<text  x="777.40" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="47.6" y="1621" width="0.4" height="15.0" fill="rgb(242,45,8)" rx="2" ry="2" />
<text  x="50.59" y="1631.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="25.0" y="1285" width="0.2" height="15.0" fill="rgb(231,70,46)" rx="2" ry="2" />
<text  x="28.03" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.04%)</title><rect x="13.0" y="213" width="0.4" height="15.0" fill="rgb(245,9,34)" rx="2" ry="2" />
<text  x="16.01" y="223.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.02%)</title><rect x="24.0" y="1429" width="0.2" height="15.0" fill="rgb(222,34,1)" rx="2" ry="2" />
<text  x="26.96" y="1439.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="25.5" y="1317" width="0.2" height="15.0" fill="rgb(229,180,49)" rx="2" ry="2" />
<text  x="28.46" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="23.7" y="1237" width="0.3" height="15.0" fill="rgb(209,112,11)" rx="2" ry="2" />
<text  x="26.75" y="1247.5" ></text>
</g>
<g >
<title>schema::partition_key_columns (1 samples, 0.02%)</title><rect x="21.6" y="1589" width="0.2" height="15.0" fill="rgb(237,179,12)" rx="2" ry="2" />
<text  x="24.60" y="1599.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (86 samples, 1.57%)</title><rect x="400.5" y="1541" width="18.4" height="15.0" fill="rgb(220,91,9)" rx="2" ry="2" />
<text  x="403.47" y="1551.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::attach_service_level_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="17.5" y="373" width="0.2" height="15.0" fill="rgb(241,194,16)" rx="2" ry="2" />
<text  x="20.52" y="383.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="677" width="9.9" height="15.0" fill="rgb(232,26,34)" rx="2" ry="2" />
<text  x="13.21" y="687.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (1 samples, 0.02%)</title><rect x="644.0" y="1637" width="0.2" height="15.0" fill="rgb(227,111,54)" rx="2" ry="2" />
<text  x="647.03" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="638.4" y="1653" width="0.3" height="15.0" fill="rgb(226,136,20)" rx="2" ry="2" />
<text  x="641.45" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="559.2" y="1525" width="0.2" height="15.0" fill="rgb(245,154,2)" rx="2" ry="2" />
<text  x="562.19" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="667.2" y="1605" width="0.2" height="15.0" fill="rgb(210,109,14)" rx="2" ry="2" />
<text  x="670.23" y="1615.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1050.8" y="1461" width="0.2" height="15.0" fill="rgb(246,108,40)" rx="2" ry="2" />
<text  x="1053.82" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.05%)</title><rect x="807.7" y="1493" width="0.6" height="15.0" fill="rgb(247,96,2)" rx="2" ry="2" />
<text  x="810.69" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (62 samples, 1.13%)</title><rect x="882.4" y="1573" width="13.4" height="15.0" fill="rgb(213,120,11)" rx="2" ry="2" />
<text  x="885.44" y="1583.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1161.0" y="1669" width="0.2" height="15.0" fill="rgb(249,107,51)" rx="2" ry="2" />
<text  x="1164.00" y="1679.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="24.8" y="1253" width="0.2" height="15.0" fill="rgb(210,103,53)" rx="2" ry="2" />
<text  x="27.82" y="1263.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="222.2" y="1477" width="0.4" height="15.0" fill="rgb(236,206,36)" rx="2" ry="2" />
<text  x="225.20" y="1487.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.02%)</title><rect x="20.3" y="1061" width="0.2" height="15.0" fill="rgb(237,226,45)" rx="2" ry="2" />
<text  x="23.31" y="1071.5" ></text>
</g>
<g >
<title>row::external_memory_usage (41 samples, 0.75%)</title><rect x="250.3" y="1461" width="8.8" height="15.0" fill="rgb(210,150,47)" rx="2" ry="2" />
<text  x="253.34" y="1471.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (8 samples, 0.15%)</title><rect x="420.2" y="1557" width="1.7" height="15.0" fill="rgb(224,79,34)" rx="2" ry="2" />
<text  x="423.23" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="16.4" y="213" width="0.3" height="15.0" fill="rgb(234,11,54)" rx="2" ry="2" />
<text  x="19.44" y="223.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (2 samples, 0.04%)</title><rect x="1074.4" y="1493" width="0.5" height="15.0" fill="rgb(234,15,40)" rx="2" ry="2" />
<text  x="1077.45" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.02%)</title><rect x="16.7" y="181" width="0.2" height="15.0" fill="rgb(229,48,17)" rx="2" ry="2" />
<text  x="19.66" y="191.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="25.0" y="1381" width="0.2" height="15.0" fill="rgb(205,45,44)" rx="2" ry="2" />
<text  x="28.03" y="1391.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="18.2" y="261" width="0.2" height="15.0" fill="rgb(206,74,12)" rx="2" ry="2" />
<text  x="21.16" y="271.5" ></text>
</g>
<g >
<title>create_partitions (3 samples, 0.05%)</title><rect x="18.2" y="517" width="0.6" height="15.0" fill="rgb(217,159,4)" rx="2" ry="2" />
<text  x="21.16" y="527.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1138.5" y="1637" width="0.2" height="15.0" fill="rgb(211,104,31)" rx="2" ry="2" />
<text  x="1141.45" y="1647.5" ></text>
</g>
<g >
<title>do_cql_test (6 samples, 0.11%)</title><rect x="18.8" y="549" width="1.3" height="15.0" fill="rgb(226,165,31)" rx="2" ry="2" />
<text  x="21.81" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="22.2" y="1429" width="0.3" height="15.0" fill="rgb(240,4,48)" rx="2" ry="2" />
<text  x="25.24" y="1439.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.02%)</title><rect x="20.5" y="1029" width="0.2" height="15.0" fill="rgb(218,92,9)" rx="2" ry="2" />
<text  x="23.52" y="1039.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="15.2" y="245" width="0.2" height="15.0" fill="rgb(234,213,36)" rx="2" ry="2" />
<text  x="18.15" y="255.5" ></text>
</g>
<g >
<title>__libc_start_main (5,258 samples, 95.70%)</title><rect x="31.9" y="1797" width="1129.3" height="15.0" fill="rgb(214,136,4)" rx="2" ry="2" />
<text  x="34.91" y="1807.5" >__libc_start_main</text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="1121.7" y="1605" width="0.2" height="15.0" fill="rgb(223,90,27)" rx="2" ry="2" />
<text  x="1124.70" y="1615.5" ></text>
</g>
<g >
<title>operator delete (11 samples, 0.20%)</title><rect x="667.4" y="1653" width="2.4" height="15.0" fill="rgb(207,5,50)" rx="2" ry="2" />
<text  x="670.44" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="19.0" y="357" width="0.2" height="15.0" fill="rgb(220,176,21)" rx="2" ry="2" />
<text  x="22.02" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="222.6" y="1493" width="0.2" height="15.0" fill="rgb(220,142,4)" rx="2" ry="2" />
<text  x="225.63" y="1503.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="489.2" y="1573" width="0.2" height="15.0" fill="rgb(208,206,38)" rx="2" ry="2" />
<text  x="492.17" y="1583.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="18.6" y="309" width="0.2" height="15.0" fill="rgb(228,167,43)" rx="2" ry="2" />
<text  x="21.59" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="138.4" y="1605" width="0.5" height="15.0" fill="rgb(228,142,6)" rx="2" ry="2" />
<text  x="141.44" y="1615.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.05%)</title><rect x="824.0" y="1557" width="0.7" height="15.0" fill="rgb(225,91,7)" rx="2" ry="2" />
<text  x="827.02" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="638.7" y="1653" width="0.2" height="15.0" fill="rgb(246,14,31)" rx="2" ry="2" />
<text  x="641.66" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.02%)</title><rect x="10.9" y="245" width="0.2" height="15.0" fill="rgb(244,64,3)" rx="2" ry="2" />
<text  x="13.86" y="255.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1121.5" y="1605" width="0.2" height="15.0" fill="rgb(238,113,28)" rx="2" ry="2" />
<text  x="1124.49" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (48 samples, 0.87%)</title><rect x="10.2" y="1189" width="10.3" height="15.0" fill="rgb(223,82,31)" rx="2" ry="2" />
<text  x="13.21" y="1199.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1122.6" y="1557" width="0.2" height="15.0" fill="rgb(238,206,0)" rx="2" ry="2" />
<text  x="1125.56" y="1567.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (1,238 samples, 22.53%)</title><rect x="856.0" y="1653" width="265.9" height="15.0" fill="rgb(238,105,41)" rx="2" ry="2" />
<text  x="859.02" y="1663.5" >seastar::concrete_execution_stage&lt;s..</text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (27 samples, 0.49%)</title><rect x="230.6" y="1477" width="5.8" height="15.0" fill="rgb(212,76,5)" rx="2" ry="2" />
<text  x="233.58" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.02%)</title><rect x="20.1" y="901" width="0.2" height="15.0" fill="rgb(244,21,40)" rx="2" ry="2" />
<text  x="23.09" y="911.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (1 samples, 0.02%)</title><rect x="11.5" y="341" width="0.2" height="15.0" fill="rgb(247,21,45)" rx="2" ry="2" />
<text  x="14.50" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.04%)</title><rect x="852.2" y="1669" width="0.4" height="15.0" fill="rgb(205,78,46)" rx="2" ry="2" />
<text  x="855.15" y="1679.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="846.8" y="1605" width="0.2" height="15.0" fill="rgb(218,119,24)" rx="2" ry="2" />
<text  x="849.78" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (4 samples, 0.07%)</title><rect x="10.2" y="341" width="0.9" height="15.0" fill="rgb(236,204,50)" rx="2" ry="2" />
<text  x="13.21" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (3 samples, 0.05%)</title><rect x="11.9" y="213" width="0.7" height="15.0" fill="rgb(215,78,28)" rx="2" ry="2" />
<text  x="14.93" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="15.6" y="229" width="0.2" height="15.0" fill="rgb(249,228,37)" rx="2" ry="2" />
<text  x="18.58" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (8 samples, 0.15%)</title><rect x="1023.8" y="1397" width="1.7" height="15.0" fill="rgb(248,91,45)" rx="2" ry="2" />
<text  x="1026.76" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="524.0" y="1541" width="0.2" height="15.0" fill="rgb(250,187,22)" rx="2" ry="2" />
<text  x="526.97" y="1551.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (22 samples, 0.40%)</title><rect x="21.8" y="1749" width="4.7" height="15.0" fill="rgb(246,52,35)" rx="2" ry="2" />
<text  x="24.81" y="1759.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.04%)</title><rect x="25.7" y="1445" width="0.4" height="15.0" fill="rgb(224,143,31)" rx="2" ry="2" />
<text  x="28.68" y="1455.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.02%)</title><rect x="20.3" y="1093" width="0.2" height="15.0" fill="rgb(239,6,46)" rx="2" ry="2" />
<text  x="23.31" y="1103.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (2 samples, 0.04%)</title><rect x="1126.0" y="1669" width="0.4" height="15.0" fill="rgb(245,221,51)" rx="2" ry="2" />
<text  x="1129.00" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="24.4" y="1365" width="0.4" height="15.0" fill="rgb(226,192,25)" rx="2" ry="2" />
<text  x="27.39" y="1375.5" ></text>
</g>
<g >
<title>all (5,494 samples, 100%)</title><rect x="10.0" y="1829" width="1180.0" height="15.0" fill="rgb(216,63,14)" rx="2" ry="2" />
<text  x="13.00" y="1839.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (131 samples, 2.38%)</title><rect x="794.2" y="1557" width="28.1" height="15.0" fill="rgb(231,98,4)" rx="2" ry="2" />
<text  x="797.16" y="1567.5" >s..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.07%)</title><rect x="706.7" y="1637" width="0.9" height="15.0" fill="rgb(250,15,46)" rx="2" ry="2" />
<text  x="709.75" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="16.0" y="277" width="0.2" height="15.0" fill="rgb(207,113,36)" rx="2" ry="2" />
<text  x="19.01" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="26.1" y="1365" width="0.2" height="15.0" fill="rgb(220,57,47)" rx="2" ry="2" />
<text  x="29.11" y="1375.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (1 samples, 0.02%)</title><rect x="1160.6" y="1653" width="0.2" height="15.0" fill="rgb(222,193,33)" rx="2" ry="2" />
<text  x="1163.58" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.22%)</title><rect x="742.4" y="1589" width="2.6" height="15.0" fill="rgb(210,3,52)" rx="2" ry="2" />
<text  x="745.40" y="1599.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="83.2" y="1637" width="0.3" height="15.0" fill="rgb(222,26,44)" rx="2" ry="2" />
<text  x="86.24" y="1647.5" ></text>
</g>
<g >
<title>hwloc_linux_set_tid_cpubind (7 samples, 0.13%)</title><rect x="1180.5" y="1797" width="1.6" height="15.0" fill="rgb(213,123,5)" rx="2" ry="2" />
<text  x="1183.55" y="1807.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="15.2" y="309" width="0.2" height="15.0" fill="rgb(239,21,7)" rx="2" ry="2" />
<text  x="18.15" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (9 samples, 0.16%)</title><rect x="1157.1" y="1669" width="2.0" height="15.0" fill="rgb(229,15,26)" rx="2" ry="2" />
<text  x="1160.14" y="1679.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="20.5" y="1205" width="0.2" height="15.0" fill="rgb(220,71,30)" rx="2" ry="2" />
<text  x="23.52" y="1215.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="818.0" y="1525" width="1.7" height="15.0" fill="rgb(249,87,7)" rx="2" ry="2" />
<text  x="821.00" y="1535.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::with_scheduling_group&lt;table::try_flush_memtable_to_sstable (1 samples, 0.02%)</title><rect x="1123.4" y="1669" width="0.2" height="15.0" fill="rgb(215,206,3)" rx="2" ry="2" />
<text  x="1126.42" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.04%)</title><rect x="25.7" y="1477" width="0.4" height="15.0" fill="rgb(226,2,29)" rx="2" ry="2" />
<text  x="28.68" y="1487.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="581.1" y="1541" width="1.1" height="15.0" fill="rgb(230,136,1)" rx="2" ry="2" />
<text  x="584.10" y="1551.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.02%)</title><rect x="18.4" y="341" width="0.2" height="15.0" fill="rgb(222,152,47)" rx="2" ry="2" />
<text  x="21.38" y="351.5" ></text>
</g>
<g >
<title>seastar::smp::configure (2 samples, 0.04%)</title><rect x="1160.8" y="1717" width="0.4" height="15.0" fill="rgb(228,57,9)" rx="2" ry="2" />
<text  x="1163.79" y="1727.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.02%)</title><rect x="235.7" y="1461" width="0.2" height="15.0" fill="rgb(244,33,37)" rx="2" ry="2" />
<text  x="238.73" y="1471.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.35%)</title><rect x="128.3" y="1605" width="4.1" height="15.0" fill="rgb(224,14,40)" rx="2" ry="2" />
<text  x="131.34" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="20.7" y="1077" width="0.3" height="15.0" fill="rgb(207,167,39)" rx="2" ry="2" />
<text  x="23.74" y="1087.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.05%)</title><rect x="691.3" y="1621" width="0.6" height="15.0" fill="rgb(240,143,15)" rx="2" ry="2" />
<text  x="694.28" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.02%)</title><rect x="23.5" y="1429" width="0.2" height="15.0" fill="rgb(252,17,19)" rx="2" ry="2" />
<text  x="26.53" y="1439.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (5,239 samples, 95.36%)</title><rect x="34.9" y="1685" width="1125.2" height="15.0" fill="rgb(209,214,20)" rx="2" ry="2" />
<text  x="37.91" y="1695.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (4 samples, 0.07%)</title><rect x="21.0" y="1605" width="0.8" height="15.0" fill="rgb(238,31,4)" rx="2" ry="2" />
<text  x="23.95" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.02%)</title><rect x="20.3" y="949" width="0.2" height="15.0" fill="rgb(211,172,38)" rx="2" ry="2" />
<text  x="23.31" y="959.5" ></text>
</g>
<g >
<title>auth::get_permissions (114 samples, 2.07%)</title><rect x="795.9" y="1541" width="24.5" height="15.0" fill="rgb(209,114,2)" rx="2" ry="2" />
<text  x="798.88" y="1551.5" >a..</text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="885.2" y="1509" width="1.1" height="15.0" fill="rgb(221,152,14)" rx="2" ry="2" />
<text  x="888.23" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="342.7" y="1573" width="0.2" height="15.0" fill="rgb(211,149,47)" rx="2" ry="2" />
<text  x="345.69" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="808.8" y="1509" width="0.2" height="15.0" fill="rgb(205,70,52)" rx="2" ry="2" />
<text  x="811.77" y="1519.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (2 samples, 0.04%)</title><rect x="895.3" y="1557" width="0.5" height="15.0" fill="rgb(252,168,52)" rx="2" ry="2" />
<text  x="898.32" y="1567.5" ></text>
</g>
<g >
<title>schema::get_sharder (2 samples, 0.04%)</title><rect x="1008.9" y="1461" width="0.5" height="15.0" fill="rgb(253,115,10)" rx="2" ry="2" />
<text  x="1011.94" y="1471.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (2 samples, 0.04%)</title><rect x="594.2" y="1557" width="0.4" height="15.0" fill="rgb(253,213,51)" rx="2" ry="2" />
<text  x="597.20" y="1567.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (20 samples, 0.36%)</title><rect x="22.2" y="1653" width="4.3" height="15.0" fill="rgb(207,152,17)" rx="2" ry="2" />
<text  x="25.24" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (5 samples, 0.09%)</title><rect x="298.0" y="1397" width="1.1" height="15.0" fill="rgb(249,2,10)" rx="2" ry="2" />
<text  x="301.02" y="1407.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="15.2" y="149" width="0.2" height="15.0" fill="rgb(226,28,1)" rx="2" ry="2" />
<text  x="18.15" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (12 samples, 0.22%)</title><rect x="918.1" y="1573" width="2.6" height="15.0" fill="rgb(218,142,18)" rx="2" ry="2" />
<text  x="921.09" y="1583.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (1 samples, 0.02%)</title><rect x="1122.6" y="1445" width="0.2" height="15.0" fill="rgb(244,48,11)" rx="2" ry="2" />
<text  x="1125.56" y="1455.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.05%)</title><rect x="816.1" y="1493" width="0.6" height="15.0" fill="rgb(243,200,35)" rx="2" ry="2" />
<text  x="819.07" y="1503.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (1 samples, 0.02%)</title><rect x="1122.6" y="1525" width="0.2" height="15.0" fill="rgb(212,61,23)" rx="2" ry="2" />
<text  x="1125.56" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="26.1" y="1237" width="0.2" height="15.0" fill="rgb(239,49,30)" rx="2" ry="2" />
<text  x="29.11" y="1247.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="17.1" y="277" width="0.2" height="15.0" fill="rgb(219,123,43)" rx="2" ry="2" />
<text  x="20.09" y="287.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (48 samples, 0.87%)</title><rect x="595.1" y="1557" width="10.3" height="15.0" fill="rgb(224,51,0)" rx="2" ry="2" />
<text  x="598.06" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.02%)</title><rect x="25.9" y="1381" width="0.2" height="15.0" fill="rgb(218,78,42)" rx="2" ry="2" />
<text  x="28.89" y="1391.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="10.2" y="245" width="0.2" height="15.0" fill="rgb(224,54,52)" rx="2" ry="2" />
<text  x="13.21" y="255.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="787.5" y="1573" width="1.3" height="15.0" fill="rgb(205,106,39)" rx="2" ry="2" />
<text  x="790.50" y="1583.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (6 samples, 0.11%)</title><rect x="18.8" y="517" width="1.3" height="15.0" fill="rgb(243,57,49)" rx="2" ry="2" />
<text  x="21.81" y="527.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (8 samples, 0.15%)</title><rect x="607.3" y="1573" width="1.7" height="15.0" fill="rgb(237,169,44)" rx="2" ry="2" />
<text  x="610.30" y="1583.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (20 samples, 0.36%)</title><rect x="22.2" y="1637" width="4.3" height="15.0" fill="rgb(226,126,16)" rx="2" ry="2" />
<text  x="25.24" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="901" width="9.9" height="15.0" fill="rgb(233,115,22)" rx="2" ry="2" />
<text  x="13.21" y="911.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (114 samples, 2.07%)</title><rect x="1072.3" y="1509" width="24.5" height="15.0" fill="rgb(220,193,7)" rx="2" ry="2" />
<text  x="1075.30" y="1519.5" >s..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="20.1" y="1045" width="0.2" height="15.0" fill="rgb(252,60,20)" rx="2" ry="2" />
<text  x="23.09" y="1055.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.05%)</title><rect x="11.9" y="261" width="0.7" height="15.0" fill="rgb(225,151,52)" rx="2" ry="2" />
<text  x="14.93" y="271.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="578.7" y="1557" width="1.1" height="15.0" fill="rgb(241,54,32)" rx="2" ry="2" />
<text  x="581.74" y="1567.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="704.4" y="1653" width="0.4" height="15.0" fill="rgb(212,62,5)" rx="2" ry="2" />
<text  x="707.38" y="1663.5" ></text>
</g>
<g >
<title>rows_entry::memory_usage (1 samples, 0.02%)</title><rect x="1123.4" y="1509" width="0.2" height="15.0" fill="rgb(231,136,33)" rx="2" ry="2" />
<text  x="1126.42" y="1519.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.18%)</title><rect x="342.9" y="1589" width="2.2" height="15.0" fill="rgb(247,179,18)" rx="2" ry="2" />
<text  x="345.91" y="1599.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.02%)</title><rect x="125.8" y="1621" width="0.2" height="15.0" fill="rgb(219,198,40)" rx="2" ry="2" />
<text  x="128.77" y="1631.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1 samples, 0.02%)</title><rect x="34.7" y="1685" width="0.2" height="15.0" fill="rgb(237,225,20)" rx="2" ry="2" />
<text  x="37.70" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1106.5" y="1525" width="0.2" height="15.0" fill="rgb(239,69,23)" rx="2" ry="2" />
<text  x="1109.45" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="789" width="9.9" height="15.0" fill="rgb(205,195,21)" rx="2" ry="2" />
<text  x="13.21" y="799.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::drop_table_statement, std::default_delete&lt;cql3::statements::drop_table_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="17.7" y="357" width="0.2" height="15.0" fill="rgb(214,22,22)" rx="2" ry="2" />
<text  x="20.73" y="367.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="854.7" y="1637" width="0.2" height="15.0" fill="rgb(242,55,46)" rx="2" ry="2" />
<text  x="857.73" y="1647.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (3 samples, 0.05%)</title><rect x="203.1" y="1525" width="0.6" height="15.0" fill="rgb(215,55,52)" rx="2" ry="2" />
<text  x="206.09" y="1535.5" ></text>
</g>
<g >
<title>mutation_querier::consume (174 samples, 3.17%)</title><rect x="381.6" y="1557" width="37.3" height="15.0" fill="rgb(206,187,25)" rx="2" ry="2" />
<text  x="384.57" y="1567.5" >mut..</text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1589" width="10.8" height="15.0" fill="rgb(222,4,15)" rx="2" ry="2" />
<text  x="13.21" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (3 samples, 0.05%)</title><rect x="18.2" y="581" width="0.6" height="15.0" fill="rgb(239,128,1)" rx="2" ry="2" />
<text  x="21.16" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="222.0" y="1477" width="0.2" height="15.0" fill="rgb(242,34,13)" rx="2" ry="2" />
<text  x="224.99" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.02%)</title><rect x="20.5" y="997" width="0.2" height="15.0" fill="rgb(227,222,29)" rx="2" ry="2" />
<text  x="23.52" y="1007.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (12 samples, 0.22%)</title><rect x="1000.1" y="1461" width="2.6" height="15.0" fill="rgb(236,166,11)" rx="2" ry="2" />
<text  x="1003.13" y="1471.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.02%)</title><rect x="17.1" y="197" width="0.2" height="15.0" fill="rgb(220,186,27)" rx="2" ry="2" />
<text  x="20.09" y="207.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (19 samples, 0.35%)</title><rect x="769.5" y="1573" width="4.0" height="15.0" fill="rgb(242,197,21)" rx="2" ry="2" />
<text  x="772.46" y="1583.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1123.4" y="1573" width="0.2" height="15.0" fill="rgb(211,108,45)" rx="2" ry="2" />
<text  x="1126.42" y="1583.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (475 samples, 8.65%)</title><rect x="746.7" y="1637" width="102.0" height="15.0" fill="rgb(226,68,31)" rx="2" ry="2" />
<text  x="749.69" y="1647.5" >single_node_..</text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="20.7" y="1317" width="0.3" height="15.0" fill="rgb(248,159,7)" rx="2" ry="2" />
<text  x="23.74" y="1327.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.05%)</title><rect x="73.6" y="1653" width="0.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="76.57" y="1663.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.05%)</title><rect x="329.8" y="1605" width="0.7" height="15.0" fill="rgb(231,205,14)" rx="2" ry="2" />
<text  x="332.81" y="1615.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.07%)</title><rect x="765.6" y="1573" width="0.9" height="15.0" fill="rgb(248,107,44)" rx="2" ry="2" />
<text  x="768.60" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="450.9" y="1589" width="0.3" height="15.0" fill="rgb(254,135,16)" rx="2" ry="2" />
<text  x="453.94" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="661.2" y="1621" width="1.7" height="15.0" fill="rgb(218,158,37)" rx="2" ry="2" />
<text  x="664.21" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.02%)</title><rect x="25.9" y="1365" width="0.2" height="15.0" fill="rgb(241,67,46)" rx="2" ry="2" />
<text  x="28.89" y="1375.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="31.3" y="1781" width="0.2" height="15.0" fill="rgb(246,84,8)" rx="2" ry="2" />
<text  x="34.26" y="1791.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.02%)</title><rect x="542.0" y="1557" width="0.2" height="15.0" fill="rgb(241,170,10)" rx="2" ry="2" />
<text  x="545.01" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (8 samples, 0.15%)</title><rect x="1155.4" y="1669" width="1.7" height="15.0" fill="rgb(251,197,35)" rx="2" ry="2" />
<text  x="1158.42" y="1679.5" ></text>
</g>
<g >
<title>auth::operator== (1 samples, 0.02%)</title><rect x="816.9" y="1493" width="0.2" height="15.0" fill="rgb(224,223,19)" rx="2" ry="2" />
<text  x="819.93" y="1503.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (3 samples, 0.05%)</title><rect x="21.0" y="1573" width="0.6" height="15.0" fill="rgb(223,148,16)" rx="2" ry="2" />
<text  x="23.95" y="1583.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (4 samples, 0.07%)</title><rect x="63.1" y="1653" width="0.8" height="15.0" fill="rgb(229,10,22)" rx="2" ry="2" />
<text  x="66.05" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.02%)</title><rect x="21.2" y="1525" width="0.2" height="15.0" fill="rgb(206,10,45)" rx="2" ry="2" />
<text  x="24.17" y="1535.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.16%)</title><rect x="524.6" y="1557" width="1.9" height="15.0" fill="rgb(247,178,25)" rx="2" ry="2" />
<text  x="527.61" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.02%)</title><rect x="16.7" y="149" width="0.2" height="15.0" fill="rgb(205,156,29)" rx="2" ry="2" />
<text  x="19.66" y="159.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.02%)</title><rect x="70.1" y="1653" width="0.3" height="15.0" fill="rgb(243,205,7)" rx="2" ry="2" />
<text  x="73.14" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::stats (5 samples, 0.09%)</title><rect x="555.3" y="1541" width="1.1" height="15.0" fill="rgb(246,183,22)" rx="2" ry="2" />
<text  x="558.33" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.05%)</title><rect x="319.7" y="1541" width="0.7" height="15.0" fill="rgb(243,7,15)" rx="2" ry="2" />
<text  x="322.71" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="16.2" y="181" width="0.2" height="15.0" fill="rgb(217,122,30)" rx="2" ry="2" />
<text  x="19.23" y="191.5" ></text>
</g>
<g >
<title>query_state::query_state (29 samples, 0.53%)</title><rect x="609.0" y="1621" width="6.2" height="15.0" fill="rgb(222,158,38)" rx="2" ry="2" />
<text  x="612.02" y="1631.5" ></text>
</g>
<g >
<title>locator::token_metadata::tokens_iterator::operator* (1 samples, 0.02%)</title><rect x="31.7" y="1541" width="0.2" height="15.0" fill="rgb(218,0,25)" rx="2" ry="2" />
<text  x="34.69" y="1551.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.04%)</title><rect x="316.7" y="1509" width="0.4" height="15.0" fill="rgb(224,64,44)" rx="2" ry="2" />
<text  x="319.71" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.24%)</title><rect x="841.6" y="1605" width="2.8" height="15.0" fill="rgb(219,67,53)" rx="2" ry="2" />
<text  x="844.63" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (20 samples, 0.36%)</title><rect x="22.2" y="1717" width="4.3" height="15.0" fill="rgb(208,144,31)" rx="2" ry="2" />
<text  x="25.24" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1112.9" y="1557" width="0.2" height="15.0" fill="rgb(239,31,54)" rx="2" ry="2" />
<text  x="1115.89" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="11.5" y="197" width="0.2" height="15.0" fill="rgb(228,203,12)" rx="2" ry="2" />
<text  x="14.50" y="207.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.04%)</title><rect x="22.9" y="1285" width="0.4" height="15.0" fill="rgb(233,69,41)" rx="2" ry="2" />
<text  x="25.89" y="1295.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (7 samples, 0.13%)</title><rect x="397.7" y="1541" width="1.5" height="15.0" fill="rgb(224,126,9)" rx="2" ry="2" />
<text  x="400.68" y="1551.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.04%)</title><rect x="556.0" y="1525" width="0.4" height="15.0" fill="rgb(250,23,26)" rx="2" ry="2" />
<text  x="558.97" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="966.8" y="1493" width="1.1" height="15.0" fill="rgb(240,116,8)" rx="2" ry="2" />
<text  x="969.84" y="1503.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (4 samples, 0.07%)</title><rect x="597.2" y="1541" width="0.9" height="15.0" fill="rgb(212,49,24)" rx="2" ry="2" />
<text  x="600.21" y="1551.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="18.8" y="437" width="0.2" height="15.0" fill="rgb(240,82,6)" rx="2" ry="2" />
<text  x="21.81" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="1121.9" y="1637" width="0.4" height="15.0" fill="rgb(210,79,7)" rx="2" ry="2" />
<text  x="1124.91" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="10.2" y="133" width="0.2" height="15.0" fill="rgb(243,164,29)" rx="2" ry="2" />
<text  x="13.21" y="143.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.36%)</title><rect x="1042.9" y="1445" width="4.3" height="15.0" fill="rgb(208,102,32)" rx="2" ry="2" />
<text  x="1045.88" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.02%)</title><rect x="16.7" y="213" width="0.2" height="15.0" fill="rgb(212,82,35)" rx="2" ry="2" />
<text  x="19.66" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="24.8" y="1349" width="0.2" height="15.0" fill="rgb(213,52,26)" rx="2" ry="2" />
<text  x="27.82" y="1359.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (3 samples, 0.05%)</title><rect x="18.2" y="421" width="0.6" height="15.0" fill="rgb(242,119,50)" rx="2" ry="2" />
<text  x="21.16" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (541 samples, 9.85%)</title><rect x="201.4" y="1541" width="116.2" height="15.0" fill="rgb(253,72,2)" rx="2" ry="2" />
<text  x="204.37" y="1551.5" >partition_snap..</text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.02%)</title><rect x="177.7" y="1541" width="0.3" height="15.0" fill="rgb(245,132,42)" rx="2" ry="2" />
<text  x="180.74" y="1551.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="134.6" y="1621" width="0.2" height="15.0" fill="rgb(241,34,8)" rx="2" ry="2" />
<text  x="137.57" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (1 samples, 0.02%)</title><rect x="18.6" y="373" width="0.2" height="15.0" fill="rgb(214,41,47)" rx="2" ry="2" />
<text  x="21.59" y="383.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.02%)</title><rect x="448.6" y="1573" width="0.2" height="15.0" fill="rgb(248,36,54)" rx="2" ry="2" />
<text  x="451.58" y="1583.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.02%)</title><rect x="20.7" y="1221" width="0.3" height="15.0" fill="rgb(243,132,16)" rx="2" ry="2" />
<text  x="23.74" y="1231.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (53 samples, 0.96%)</title><rect x="437.2" y="1557" width="11.4" height="15.0" fill="rgb(238,128,53)" rx="2" ry="2" />
<text  x="440.20" y="1567.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="569.9" y="1493" width="0.2" height="15.0" fill="rgb(222,36,44)" rx="2" ry="2" />
<text  x="572.93" y="1503.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (2 samples, 0.04%)</title><rect x="14.1" y="309" width="0.4" height="15.0" fill="rgb(240,92,51)" rx="2" ry="2" />
<text  x="17.08" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.02%)</title><rect x="16.7" y="101" width="0.2" height="15.0" fill="rgb(212,144,13)" rx="2" ry="2" />
<text  x="19.66" y="111.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.02%)</title><rect x="31.7" y="1717" width="0.2" height="15.0" fill="rgb(230,40,32)" rx="2" ry="2" />
<text  x="34.69" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.02%)</title><rect x="16.7" y="37" width="0.2" height="15.0" fill="rgb(227,61,38)" rx="2" ry="2" />
<text  x="19.66" y="47.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="23.7" y="1461" width="0.5" height="15.0" fill="rgb(221,117,53)" rx="2" ry="2" />
<text  x="26.75" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (17 samples, 0.31%)</title><rect x="927.5" y="1541" width="3.7" height="15.0" fill="rgb(212,135,39)" rx="2" ry="2" />
<text  x="930.54" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="25.9" y="1349" width="0.2" height="15.0" fill="rgb(243,199,9)" rx="2" ry="2" />
<text  x="28.89" y="1359.5" ></text>
</g>
<g >
<title>row::compact_and_expire (57 samples, 1.04%)</title><rect x="436.3" y="1573" width="12.3" height="15.0" fill="rgb(237,192,40)" rx="2" ry="2" />
<text  x="439.34" y="1583.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (12 samples, 0.22%)</title><rect x="324.4" y="1557" width="2.6" height="15.0" fill="rgb(228,8,44)" rx="2" ry="2" />
<text  x="327.44" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (2 samples, 0.04%)</title><rect x="13.0" y="229" width="0.4" height="15.0" fill="rgb(221,192,43)" rx="2" ry="2" />
<text  x="16.01" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (4 samples, 0.07%)</title><rect x="10.2" y="373" width="0.9" height="15.0" fill="rgb(246,146,5)" rx="2" ry="2" />
<text  x="13.21" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.02%)</title><rect x="971.1" y="1525" width="0.3" height="15.0" fill="rgb(216,168,10)" rx="2" ry="2" />
<text  x="974.14" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="685.3" y="1637" width="0.2" height="15.0" fill="rgb(234,26,41)" rx="2" ry="2" />
<text  x="688.27" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.05%)</title><rect x="844.4" y="1621" width="0.7" height="15.0" fill="rgb(238,166,6)" rx="2" ry="2" />
<text  x="847.42" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="25.0" y="1349" width="0.2" height="15.0" fill="rgb(218,140,24)" rx="2" ry="2" />
<text  x="28.03" y="1359.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::grant_statement, std::default_delete&lt;cql3::statements::grant_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="19.7" y="405" width="0.2" height="15.0" fill="rgb(207,189,41)" rx="2" ry="2" />
<text  x="22.67" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="1159.1" y="1669" width="0.2" height="15.0" fill="rgb(247,34,10)" rx="2" ry="2" />
<text  x="1162.07" y="1679.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (672 samples, 12.23%)</title><rect x="173.2" y="1557" width="144.4" height="15.0" fill="rgb(249,60,47)" rx="2" ry="2" />
<text  x="176.23" y="1567.5" >mutation_reader_me..</text>
</g>
<g >
<title>query::partition_slice::partition_slice (5 samples, 0.09%)</title><rect x="1107.1" y="1573" width="1.1" height="15.0" fill="rgb(219,15,12)" rx="2" ry="2" />
<text  x="1110.10" y="1583.5" ></text>
</g>
<g >
<title>CryptoPP::Weak1::MD5::Transform (1 samples, 0.02%)</title><rect x="10.0" y="1797" width="0.2" height="15.0" fill="rgb(219,65,53)" rx="2" ry="2" />
<text  x="13.00" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="18.2" y="293" width="0.2" height="15.0" fill="rgb(237,56,46)" rx="2" ry="2" />
<text  x="21.16" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.02%)</title><rect x="11.5" y="373" width="0.2" height="15.0" fill="rgb(242,129,32)" rx="2" ry="2" />
<text  x="14.50" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="31.3" y="1749" width="0.2" height="15.0" fill="rgb(227,216,39)" rx="2" ry="2" />
<text  x="34.26" y="1759.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (799 samples, 14.54%)</title><rect x="158.2" y="1589" width="171.6" height="15.0" fill="rgb(232,126,5)" rx="2" ry="2" />
<text  x="161.20" y="1599.5" >merging_reader&lt;mutatio..</text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="559.6" y="1541" width="0.2" height="15.0" fill="rgb(230,85,43)" rx="2" ry="2" />
<text  x="562.62" y="1551.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (14 samples, 0.25%)</title><rect x="50.8" y="1621" width="3.0" height="15.0" fill="rgb(237,139,16)" rx="2" ry="2" />
<text  x="53.81" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="1077" width="9.9" height="15.0" fill="rgb(213,135,0)" rx="2" ry="2" />
<text  x="13.21" y="1087.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="701.4" y="1653" width="0.2" height="15.0" fill="rgb(236,122,36)" rx="2" ry="2" />
<text  x="704.38" y="1663.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="16.4" y="277" width="0.3" height="15.0" fill="rgb(227,59,23)" rx="2" ry="2" />
<text  x="19.44" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (292 samples, 5.31%)</title><rect x="236.6" y="1477" width="62.7" height="15.0" fill="rgb(224,50,37)" rx="2" ry="2" />
<text  x="239.59" y="1487.5" >partit..</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="23.7" y="1333" width="0.3" height="15.0" fill="rgb(216,128,51)" rx="2" ry="2" />
<text  x="26.75" y="1343.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (2 samples, 0.04%)</title><rect x="855.6" y="1573" width="0.4" height="15.0" fill="rgb(234,134,46)" rx="2" ry="2" />
<text  x="858.59" y="1583.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.02%)</title><rect x="150.9" y="1605" width="0.2" height="15.0" fill="rgb(220,101,30)" rx="2" ry="2" />
<text  x="153.90" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="525.5" y="1541" width="1.0" height="15.0" fill="rgb(221,6,19)" rx="2" ry="2" />
<text  x="528.47" y="1551.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="20.3" y="869" width="0.2" height="15.0" fill="rgb(209,143,52)" rx="2" ry="2" />
<text  x="23.31" y="879.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.24%)</title><rect x="951.0" y="1525" width="2.7" height="15.0" fill="rgb(237,106,31)" rx="2" ry="2" />
<text  x="953.95" y="1535.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (4 samples, 0.07%)</title><rect x="24.4" y="1445" width="0.8" height="15.0" fill="rgb(246,51,47)" rx="2" ry="2" />
<text  x="27.39" y="1455.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="822.3" y="1573" width="0.4" height="15.0" fill="rgb(210,138,38)" rx="2" ry="2" />
<text  x="825.30" y="1583.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (21 samples, 0.38%)</title><rect x="639.7" y="1669" width="4.5" height="15.0" fill="rgb(240,74,11)" rx="2" ry="2" />
<text  x="642.73" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="10.9" y="293" width="0.2" height="15.0" fill="rgb(208,163,33)" rx="2" ry="2" />
<text  x="13.86" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="1122.6" y="1493" width="0.2" height="15.0" fill="rgb(247,195,5)" rx="2" ry="2" />
<text  x="1125.56" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="10.2" y="277" width="0.2" height="15.0" fill="rgb(208,147,10)" rx="2" ry="2" />
<text  x="13.21" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="20.7" y="981" width="0.3" height="15.0" fill="rgb(237,180,23)" rx="2" ry="2" />
<text  x="23.74" y="991.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.07%)</title><rect x="378.8" y="1557" width="0.8" height="15.0" fill="rgb(239,28,50)" rx="2" ry="2" />
<text  x="381.78" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (3 samples, 0.05%)</title><rect x="605.4" y="1557" width="0.6" height="15.0" fill="rgb(243,139,46)" rx="2" ry="2" />
<text  x="608.37" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.29%)</title><rect x="939.4" y="1557" width="3.4" height="15.0" fill="rgb(243,131,17)" rx="2" ry="2" />
<text  x="942.35" y="1567.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="1138.9" y="1653" width="1.5" height="15.0" fill="rgb(210,180,25)" rx="2" ry="2" />
<text  x="1141.88" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (12 samples, 0.22%)</title><rect x="664.9" y="1621" width="2.5" height="15.0" fill="rgb(232,168,31)" rx="2" ry="2" />
<text  x="667.86" y="1631.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (5 samples, 0.09%)</title><rect x="980.6" y="1509" width="1.1" height="15.0" fill="rgb(210,68,20)" rx="2" ry="2" />
<text  x="983.59" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="10.2" y="181" width="0.2" height="15.0" fill="rgb(232,67,7)" rx="2" ry="2" />
<text  x="13.21" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (9 samples, 0.16%)</title><rect x="940.9" y="1541" width="1.9" height="15.0" fill="rgb(252,130,1)" rx="2" ry="2" />
<text  x="943.86" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="604.3" y="1541" width="0.2" height="15.0" fill="rgb(216,11,38)" rx="2" ry="2" />
<text  x="607.30" y="1551.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.02%)</title><rect x="1042.7" y="1445" width="0.2" height="15.0" fill="rgb(221,191,25)" rx="2" ry="2" />
<text  x="1045.66" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="837" width="9.9" height="15.0" fill="rgb(236,17,0)" rx="2" ry="2" />
<text  x="13.21" y="847.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (551 samples, 10.03%)</title><rect x="490.7" y="1621" width="118.3" height="15.0" fill="rgb(229,56,43)" rx="2" ry="2" />
<text  x="493.68" y="1631.5" >query::querier..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="954.2" y="1541" width="0.2" height="15.0" fill="rgb(215,144,54)" rx="2" ry="2" />
<text  x="957.17" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="24.4" y="1349" width="0.4" height="15.0" fill="rgb(225,52,48)" rx="2" ry="2" />
<text  x="27.39" y="1359.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (2 samples, 0.04%)</title><rect x="317.6" y="1557" width="0.4" height="15.0" fill="rgb(233,213,17)" rx="2" ry="2" />
<text  x="320.56" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1637" width="10.8" height="15.0" fill="rgb(205,193,12)" rx="2" ry="2" />
<text  x="13.21" y="1647.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (2 samples, 0.04%)</title><rect x="733.4" y="1653" width="0.4" height="15.0" fill="rgb(207,57,13)" rx="2" ry="2" />
<text  x="736.38" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.04%)</title><rect x="22.9" y="1301" width="0.4" height="15.0" fill="rgb(240,91,26)" rx="2" ry="2" />
<text  x="25.89" y="1311.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (7 samples, 0.13%)</title><rect x="1037.7" y="1381" width="1.5" height="15.0" fill="rgb(234,170,26)" rx="2" ry="2" />
<text  x="1040.72" y="1391.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.02%)</title><rect x="26.3" y="1477" width="0.2" height="15.0" fill="rgb(238,165,16)" rx="2" ry="2" />
<text  x="29.32" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="779.3" y="1589" width="0.3" height="15.0" fill="rgb(217,41,4)" rx="2" ry="2" />
<text  x="782.34" y="1599.5" ></text>
</g>
<g >
<title>create_partitions (4 samples, 0.07%)</title><rect x="10.2" y="485" width="0.9" height="15.0" fill="rgb(214,4,36)" rx="2" ry="2" />
<text  x="13.21" y="495.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="304.5" y="1493" width="0.2" height="15.0" fill="rgb(238,98,22)" rx="2" ry="2" />
<text  x="307.46" y="1503.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (2 samples, 0.04%)</title><rect x="301.7" y="1493" width="0.4" height="15.0" fill="rgb(234,60,39)" rx="2" ry="2" />
<text  x="304.67" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="379.6" y="1557" width="1.1" height="15.0" fill="rgb(209,121,1)" rx="2" ry="2" />
<text  x="382.64" y="1567.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="17.5" y="357" width="0.2" height="15.0" fill="rgb(211,28,2)" rx="2" ry="2" />
<text  x="20.52" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.04%)</title><rect x="10.6" y="309" width="0.5" height="15.0" fill="rgb(243,92,25)" rx="2" ry="2" />
<text  x="13.64" y="319.5" ></text>
</g>
<g >
<title>table::apply (1 samples, 0.02%)</title><rect x="1122.1" y="1557" width="0.2" height="15.0" fill="rgb(229,204,2)" rx="2" ry="2" />
<text  x="1125.13" y="1567.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="986.4" y="1493" width="1.7" height="15.0" fill="rgb(236,33,16)" rx="2" ry="2" />
<text  x="989.39" y="1503.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (6 samples, 0.11%)</title><rect x="582.2" y="1557" width="1.3" height="15.0" fill="rgb(221,34,30)" rx="2" ry="2" />
<text  x="585.17" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="149.0" y="1589" width="1.7" height="15.0" fill="rgb(250,44,9)" rx="2" ry="2" />
<text  x="151.96" y="1599.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (2 samples, 0.04%)</title><rect x="330.5" y="1605" width="0.4" height="15.0" fill="rgb(237,154,5)" rx="2" ry="2" />
<text  x="333.45" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="16.2" y="293" width="0.2" height="15.0" fill="rgb(216,67,47)" rx="2" ry="2" />
<text  x="19.23" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.02%)</title><rect x="26.1" y="1445" width="0.2" height="15.0" fill="rgb(211,212,33)" rx="2" ry="2" />
<text  x="29.11" y="1455.5" ></text>
</g>
<g >
<title>database::has_keyspace (12 samples, 0.22%)</title><rect x="839.0" y="1621" width="2.6" height="15.0" fill="rgb(214,19,33)" rx="2" ry="2" />
<text  x="842.05" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="585.4" y="1557" width="0.2" height="15.0" fill="rgb(214,107,37)" rx="2" ry="2" />
<text  x="588.39" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;2ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="26.1" y="1109" width="0.2" height="15.0" fill="rgb(219,207,17)" rx="2" ry="2" />
<text  x="29.11" y="1119.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (2 samples, 0.04%)</title><rect x="855.6" y="1605" width="0.4" height="15.0" fill="rgb(231,201,33)" rx="2" ry="2" />
<text  x="858.59" y="1615.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.02%)</title><rect x="912.9" y="1573" width="0.2" height="15.0" fill="rgb(217,214,10)" rx="2" ry="2" />
<text  x="915.93" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (22 samples, 0.40%)</title><rect x="289.9" y="1381" width="4.7" height="15.0" fill="rgb(219,22,33)" rx="2" ry="2" />
<text  x="292.86" y="1391.5" ></text>
</g>
<g >
<title>schema_registry::get (11 samples, 0.20%)</title><rect x="967.9" y="1525" width="2.4" height="15.0" fill="rgb(206,76,17)" rx="2" ry="2" />
<text  x="970.92" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="684.8" y="1621" width="0.5" height="15.0" fill="rgb(250,83,19)" rx="2" ry="2" />
<text  x="687.84" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.05%)</title><rect x="74.2" y="1653" width="0.7" height="15.0" fill="rgb(226,137,10)" rx="2" ry="2" />
<text  x="77.22" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="25.0" y="1413" width="0.2" height="15.0" fill="rgb(245,119,19)" rx="2" ry="2" />
<text  x="28.03" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="17.1" y="181" width="0.2" height="15.0" fill="rgb(250,153,10)" rx="2" ry="2" />
<text  x="20.09" y="191.5" ></text>
</g>
<g >
<title>reader_permit::consume (3 samples, 0.05%)</title><rect x="327.0" y="1557" width="0.7" height="15.0" fill="rgb(225,120,1)" rx="2" ry="2" />
<text  x="330.01" y="1567.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="10.2" y="101" width="0.2" height="15.0" fill="rgb(251,57,44)" rx="2" ry="2" />
<text  x="13.21" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="14.9" y="277" width="0.3" height="15.0" fill="rgb(227,86,7)" rx="2" ry="2" />
<text  x="17.94" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="17.5" y="293" width="0.2" height="15.0" fill="rgb(246,108,43)" rx="2" ry="2" />
<text  x="20.52" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.04%)</title><rect x="98.1" y="1621" width="0.4" height="15.0" fill="rgb(213,219,44)" rx="2" ry="2" />
<text  x="101.06" y="1631.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (2 samples, 0.04%)</title><rect x="855.6" y="1589" width="0.4" height="15.0" fill="rgb(230,161,9)" rx="2" ry="2" />
<text  x="858.59" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="12.8" y="197" width="0.2" height="15.0" fill="rgb(212,7,52)" rx="2" ry="2" />
<text  x="15.79" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.09%)</title><rect x="716.8" y="1653" width="1.1" height="15.0" fill="rgb(233,62,41)" rx="2" ry="2" />
<text  x="719.84" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="734.2" y="1637" width="1.8" height="15.0" fill="rgb(234,180,4)" rx="2" ry="2" />
<text  x="737.24" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="10.9" y="277" width="0.2" height="15.0" fill="rgb(215,125,25)" rx="2" ry="2" />
<text  x="13.86" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (18 samples, 0.33%)</title><rect x="635.9" y="1669" width="3.8" height="15.0" fill="rgb(221,68,4)" rx="2" ry="2" />
<text  x="638.87" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.02%)</title><rect x="12.8" y="213" width="0.2" height="15.0" fill="rgb(218,131,48)" rx="2" ry="2" />
<text  x="15.79" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.18%)</title><rect x="835.6" y="1589" width="2.2" height="15.0" fill="rgb(229,226,11)" rx="2" ry="2" />
<text  x="838.61" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="559.4" y="1541" width="0.2" height="15.0" fill="rgb(221,25,34)" rx="2" ry="2" />
<text  x="562.41" y="1551.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="481.9" y="1557" width="0.4" height="15.0" fill="rgb(231,141,4)" rx="2" ry="2" />
<text  x="484.87" y="1567.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.04%)</title><rect x="493.9" y="1605" width="0.4" height="15.0" fill="rgb(245,215,49)" rx="2" ry="2" />
<text  x="496.90" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (1 samples, 0.02%)</title><rect x="923.7" y="1573" width="0.2" height="15.0" fill="rgb(247,200,49)" rx="2" ry="2" />
<text  x="926.67" y="1583.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.02%)</title><rect x="31.7" y="1557" width="0.2" height="15.0" fill="rgb(221,100,50)" rx="2" ry="2" />
<text  x="34.69" y="1567.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (3 samples, 0.05%)</title><rect x="18.2" y="501" width="0.6" height="15.0" fill="rgb(254,16,25)" rx="2" ry="2" />
<text  x="21.16" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (8 samples, 0.15%)</title><rect x="853.0" y="1669" width="1.7" height="15.0" fill="rgb(231,222,45)" rx="2" ry="2" />
<text  x="856.01" y="1679.5" ></text>
</g>
<g >
<title>perf_simple_que (5,494 samples, 100.00%)</title><rect x="10.0" y="1813" width="1180.0" height="15.0" fill="rgb(242,60,54)" rx="2" ry="2" />
<text  x="13.00" y="1823.5" >perf_simple_que</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="25.0" y="1317" width="0.2" height="15.0" fill="rgb(206,0,17)" rx="2" ry="2" />
<text  x="28.03" y="1327.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="704.8" y="1653" width="0.2" height="15.0" fill="rgb(215,75,3)" rx="2" ry="2" />
<text  x="707.81" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="19.0" y="325" width="0.2" height="15.0" fill="rgb(248,142,48)" rx="2" ry="2" />
<text  x="22.02" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (20 samples, 0.36%)</title><rect x="22.2" y="1589" width="4.3" height="15.0" fill="rgb(247,138,24)" rx="2" ry="2" />
<text  x="25.24" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,213 samples, 22.08%)</title><rect x="861.4" y="1621" width="260.5" height="15.0" fill="rgb(248,151,40)" rx="2" ry="2" />
<text  x="864.39" y="1631.5" >seastar::noncopyable_function&lt;seas..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.04%)</title><rect x="24.4" y="1397" width="0.4" height="15.0" fill="rgb(207,78,21)" rx="2" ry="2" />
<text  x="27.39" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="606.0" y="1573" width="0.2" height="15.0" fill="rgb(243,33,24)" rx="2" ry="2" />
<text  x="609.01" y="1583.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (5,256 samples, 95.67%)</title><rect x="31.9" y="1701" width="1128.9" height="15.0" fill="rgb(222,10,11)" rx="2" ry="2" />
<text  x="34.91" y="1711.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.02%)</title><rect x="20.7" y="1157" width="0.3" height="15.0" fill="rgb(248,200,0)" rx="2" ry="2" />
<text  x="23.74" y="1167.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.05%)</title><rect x="579.8" y="1541" width="0.7" height="15.0" fill="rgb(223,192,33)" rx="2" ry="2" />
<text  x="582.81" y="1551.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (2 samples, 0.04%)</title><rect x="1122.3" y="1653" width="0.5" height="15.0" fill="rgb(244,224,25)" rx="2" ry="2" />
<text  x="1125.34" y="1663.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.07%)</title><rect x="662.9" y="1637" width="0.9" height="15.0" fill="rgb(241,196,28)" rx="2" ry="2" />
<text  x="665.93" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (3 samples, 0.05%)</title><rect x="101.1" y="1637" width="0.6" height="15.0" fill="rgb(240,154,13)" rx="2" ry="2" />
<text  x="104.07" y="1647.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="636.7" y="1653" width="0.9" height="15.0" fill="rgb(249,32,13)" rx="2" ry="2" />
<text  x="639.73" y="1663.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="18.4" y="277" width="0.2" height="15.0" fill="rgb(249,84,16)" rx="2" ry="2" />
<text  x="21.38" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.02%)</title><rect x="17.1" y="245" width="0.2" height="15.0" fill="rgb(233,187,34)" rx="2" ry="2" />
<text  x="20.09" y="255.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (211 samples, 3.84%)</title><rect x="1051.7" y="1525" width="45.3" height="15.0" fill="rgb(240,116,19)" rx="2" ry="2" />
<text  x="1054.68" y="1535.5" >serv..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.07%)</title><rect x="784.3" y="1573" width="0.8" height="15.0" fill="rgb(234,88,36)" rx="2" ry="2" />
<text  x="787.28" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (2 samples, 0.04%)</title><rect x="33.2" y="1685" width="0.4" height="15.0" fill="rgb(231,107,0)" rx="2" ry="2" />
<text  x="36.20" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="10.2" y="261" width="0.2" height="15.0" fill="rgb(220,14,28)" rx="2" ry="2" />
<text  x="13.21" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (2 samples, 0.04%)</title><rect x="300.0" y="1477" width="0.4" height="15.0" fill="rgb(206,162,21)" rx="2" ry="2" />
<text  x="302.95" y="1487.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (371 samples, 6.75%)</title><rect x="971.4" y="1525" width="79.6" height="15.0" fill="rgb(248,23,7)" rx="2" ry="2" />
<text  x="974.35" y="1535.5" >service::..</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.04%)</title><rect x="1041.2" y="1413" width="0.4" height="15.0" fill="rgb(233,162,9)" rx="2" ry="2" />
<text  x="1044.16" y="1423.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (1 samples, 0.02%)</title><rect x="737.7" y="1637" width="0.2" height="15.0" fill="rgb(215,96,40)" rx="2" ry="2" />
<text  x="740.67" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="709" width="9.9" height="15.0" fill="rgb(235,166,4)" rx="2" ry="2" />
<text  x="13.21" y="719.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="15.6" y="133" width="0.2" height="15.0" fill="rgb(210,214,51)" rx="2" ry="2" />
<text  x="18.58" y="143.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="806.6" y="1509" width="1.1" height="15.0" fill="rgb(233,174,22)" rx="2" ry="2" />
<text  x="809.62" y="1519.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (2 samples, 0.04%)</title><rect x="584.8" y="1557" width="0.4" height="15.0" fill="rgb(222,149,22)" rx="2" ry="2" />
<text  x="587.75" y="1567.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (8 samples, 0.15%)</title><rect x="891.9" y="1477" width="1.7" height="15.0" fill="rgb(243,206,47)" rx="2" ry="2" />
<text  x="894.89" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (3 samples, 0.05%)</title><rect x="25.7" y="1493" width="0.6" height="15.0" fill="rgb(217,208,19)" rx="2" ry="2" />
<text  x="28.68" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="15.2" y="325" width="0.2" height="15.0" fill="rgb(218,31,49)" rx="2" ry="2" />
<text  x="18.15" y="335.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="149.0" y="1605" width="1.7" height="15.0" fill="rgb(212,133,52)" rx="2" ry="2" />
<text  x="151.96" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (6 samples, 0.11%)</title><rect x="583.5" y="1557" width="1.3" height="15.0" fill="rgb(230,66,31)" rx="2" ry="2" />
<text  x="586.46" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (5 samples, 0.09%)</title><rect x="98.9" y="1637" width="1.1" height="15.0" fill="rgb(208,111,17)" rx="2" ry="2" />
<text  x="101.92" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="74.9" y="1653" width="0.4" height="15.0" fill="rgb(254,27,46)" rx="2" ry="2" />
<text  x="77.86" y="1663.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (35 samples, 0.64%)</title><rect x="441.1" y="1541" width="7.5" height="15.0" fill="rgb(248,124,22)" rx="2" ry="2" />
<text  x="444.06" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="687.0" y="1637" width="0.4" height="15.0" fill="rgb(251,91,20)" rx="2" ry="2" />
<text  x="689.99" y="1647.5" ></text>
</g>
<g >
<title>auth::resource::parent (5 samples, 0.09%)</title><rect x="793.1" y="1557" width="1.1" height="15.0" fill="rgb(247,60,26)" rx="2" ry="2" />
<text  x="796.09" y="1567.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (45 samples, 0.82%)</title><rect x="46.1" y="1653" width="9.6" height="15.0" fill="rgb(221,74,42)" rx="2" ry="2" />
<text  x="49.08" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (3 samples, 0.05%)</title><rect x="220.3" y="1477" width="0.6" height="15.0" fill="rgb(217,58,44)" rx="2" ry="2" />
<text  x="223.27" y="1487.5" ></text>
</g>
<g >
<title>memtable::apply (1 samples, 0.02%)</title><rect x="1122.1" y="1541" width="0.2" height="15.0" fill="rgb(229,171,38)" rx="2" ry="2" />
<text  x="1125.13" y="1551.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (1 samples, 0.02%)</title><rect x="701.4" y="1669" width="0.2" height="15.0" fill="rgb(245,186,51)" rx="2" ry="2" />
<text  x="704.38" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="20.3" y="853" width="0.2" height="15.0" fill="rgb(223,116,53)" rx="2" ry="2" />
<text  x="23.31" y="863.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.89%)</title><rect x="10.2" y="1317" width="10.5" height="15.0" fill="rgb(224,227,16)" rx="2" ry="2" />
<text  x="13.21" y="1327.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.02%)</title><rect x="786.2" y="1573" width="0.2" height="15.0" fill="rgb(207,206,21)" rx="2" ry="2" />
<text  x="789.21" y="1583.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.02%)</title><rect x="643.8" y="1653" width="0.2" height="15.0" fill="rgb(230,172,19)" rx="2" ry="2" />
<text  x="646.82" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.31%)</title><rect x="1026.6" y="1397" width="3.6" height="15.0" fill="rgb(251,223,18)" rx="2" ry="2" />
<text  x="1029.55" y="1407.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="202.9" y="1525" width="0.2" height="15.0" fill="rgb(216,22,25)" rx="2" ry="2" />
<text  x="205.87" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="642.7" y="1653" width="0.5" height="15.0" fill="rgb(220,136,36)" rx="2" ry="2" />
<text  x="645.74" y="1663.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.02%)</title><rect x="299.1" y="1445" width="0.2" height="15.0" fill="rgb(248,21,36)" rx="2" ry="2" />
<text  x="302.09" y="1455.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.05%)</title><rect x="86.0" y="1605" width="0.7" height="15.0" fill="rgb(205,152,38)" rx="2" ry="2" />
<text  x="89.03" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="25.0" y="1365" width="0.2" height="15.0" fill="rgb(249,33,37)" rx="2" ry="2" />
<text  x="28.03" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.02%)</title><rect x="1161.0" y="1701" width="0.2" height="15.0" fill="rgb(244,216,8)" rx="2" ry="2" />
<text  x="1164.00" y="1711.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.02%)</title><rect x="725.2" y="1621" width="0.2" height="15.0" fill="rgb(234,172,0)" rx="2" ry="2" />
<text  x="728.22" y="1631.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="10.2" y="149" width="0.2" height="15.0" fill="rgb(217,203,37)" rx="2" ry="2" />
<text  x="13.21" y="159.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (4 samples, 0.07%)</title><rect x="10.2" y="389" width="0.9" height="15.0" fill="rgb(217,110,30)" rx="2" ry="2" />
<text  x="13.21" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="988.1" y="1493" width="0.2" height="15.0" fill="rgb(206,24,50)" rx="2" ry="2" />
<text  x="991.11" y="1503.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="15.2" y="165" width="0.2" height="15.0" fill="rgb(245,92,46)" rx="2" ry="2" />
<text  x="18.15" y="175.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1477" width="10.8" height="15.0" fill="rgb(250,160,19)" rx="2" ry="2" />
<text  x="13.21" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1349" width="10.8" height="15.0" fill="rgb(229,215,46)" rx="2" ry="2" />
<text  x="13.21" y="1359.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.04%)</title><rect x="25.7" y="1429" width="0.4" height="15.0" fill="rgb(239,170,28)" rx="2" ry="2" />
<text  x="28.68" y="1439.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="24.4" y="1253" width="0.4" height="15.0" fill="rgb(245,15,7)" rx="2" ry="2" />
<text  x="27.39" y="1263.5" ></text>
</g>
<g >
<title>service::client_state::has_access (153 samples, 2.78%)</title><rect x="789.4" y="1573" width="32.9" height="15.0" fill="rgb(215,67,30)" rx="2" ry="2" />
<text  x="792.44" y="1583.5" >se..</text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.02%)</title><rect x="393.0" y="1541" width="0.2" height="15.0" fill="rgb(231,47,33)" rx="2" ry="2" />
<text  x="395.95" y="1551.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::attributes::raw&gt; (1 samples, 0.02%)</title><rect x="17.3" y="357" width="0.2" height="15.0" fill="rgb(216,103,46)" rx="2" ry="2" />
<text  x="20.30" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (50 samples, 0.91%)</title><rect x="1030.2" y="1413" width="10.7" height="15.0" fill="rgb(248,196,18)" rx="2" ry="2" />
<text  x="1033.20" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="245.2" y="1445" width="1.1" height="15.0" fill="rgb(248,130,32)" rx="2" ry="2" />
<text  x="248.18" y="1455.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.02%)</title><rect x="31.7" y="1573" width="0.2" height="15.0" fill="rgb(245,177,45)" rx="2" ry="2" />
<text  x="34.69" y="1583.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="10.6" y="245" width="0.3" height="15.0" fill="rgb(226,142,15)" rx="2" ry="2" />
<text  x="13.64" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.05%)</title><rect x="735.3" y="1621" width="0.7" height="15.0" fill="rgb(247,36,10)" rx="2" ry="2" />
<text  x="738.31" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="25.0" y="1397" width="0.2" height="15.0" fill="rgb(238,107,7)" rx="2" ry="2" />
<text  x="28.03" y="1407.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.02%)</title><rect x="815.9" y="1493" width="0.2" height="15.0" fill="rgb(207,95,53)" rx="2" ry="2" />
<text  x="818.85" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="920.5" y="1557" width="0.2" height="15.0" fill="rgb(227,105,38)" rx="2" ry="2" />
<text  x="923.45" y="1567.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (2 samples, 0.04%)</title><rect x="1121.9" y="1589" width="0.4" height="15.0" fill="rgb(254,20,22)" rx="2" ry="2" />
<text  x="1124.91" y="1599.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (46 samples, 0.84%)</title><rect x="305.8" y="1509" width="9.8" height="15.0" fill="rgb(236,24,53)" rx="2" ry="2" />
<text  x="308.75" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="26.1" y="1157" width="0.2" height="15.0" fill="rgb(248,180,51)" rx="2" ry="2" />
<text  x="29.11" y="1167.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (319 samples, 5.81%)</title><rect x="982.5" y="1509" width="68.5" height="15.0" fill="rgb(239,102,3)" rx="2" ry="2" />
<text  x="985.52" y="1519.5" >service..</text>
</g>
<g >
<title>utils::array_search_gt_impl (22 samples, 0.40%)</title><rect x="585.8" y="1557" width="4.7" height="15.0" fill="rgb(216,173,46)" rx="2" ry="2" />
<text  x="588.82" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="15.2" y="277" width="0.2" height="15.0" fill="rgb(236,43,21)" rx="2" ry="2" />
<text  x="18.15" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.20%)</title><rect x="55.7" y="1669" width="2.4" height="15.0" fill="rgb(217,128,54)" rx="2" ry="2" />
<text  x="58.75" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (3 samples, 0.05%)</title><rect x="18.2" y="389" width="0.6" height="15.0" fill="rgb(235,79,38)" rx="2" ry="2" />
<text  x="21.16" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.02%)</title><rect x="23.7" y="1381" width="0.3" height="15.0" fill="rgb(217,223,15)" rx="2" ry="2" />
<text  x="26.75" y="1391.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (11 samples, 0.20%)</title><rect x="598.3" y="1541" width="2.3" height="15.0" fill="rgb(250,85,28)" rx="2" ry="2" />
<text  x="601.28" y="1551.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::drop_table_statement*, std::default_delete&lt;cql3::statements::drop_table_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="17.7" y="325" width="0.2" height="15.0" fill="rgb(253,46,8)" rx="2" ry="2" />
<text  x="20.73" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.05%)</title><rect x="643.2" y="1653" width="0.6" height="15.0" fill="rgb(231,94,39)" rx="2" ry="2" />
<text  x="646.17" y="1663.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="143.6" y="1621" width="0.2" height="15.0" fill="rgb(233,102,1)" rx="2" ry="2" />
<text  x="146.59" y="1631.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (2 samples, 0.04%)</title><rect x="346.1" y="1589" width="0.5" height="15.0" fill="rgb(253,75,18)" rx="2" ry="2" />
<text  x="349.13" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (37 samples, 0.67%)</title><rect x="10.2" y="597" width="8.0" height="15.0" fill="rgb(251,163,41)" rx="2" ry="2" />
<text  x="13.21" y="607.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.07%)</title><rect x="28.9" y="1749" width="0.9" height="15.0" fill="rgb(223,2,7)" rx="2" ry="2" />
<text  x="31.90" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="20.5" y="1157" width="0.2" height="15.0" fill="rgb(209,178,35)" rx="2" ry="2" />
<text  x="23.52" y="1167.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.02%)</title><rect x="373.2" y="1525" width="0.2" height="15.0" fill="rgb(235,133,20)" rx="2" ry="2" />
<text  x="376.19" y="1535.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="712.5" y="1637" width="0.3" height="15.0" fill="rgb(205,135,52)" rx="2" ry="2" />
<text  x="715.54" y="1647.5" ></text>
</g>
<g >
<title>dht::shard_of (13 samples, 0.24%)</title><rect x="991.3" y="1477" width="2.8" height="15.0" fill="rgb(251,112,0)" rx="2" ry="2" />
<text  x="994.33" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (47 samples, 0.86%)</title><rect x="10.2" y="1109" width="10.1" height="15.0" fill="rgb(213,226,4)" rx="2" ry="2" />
<text  x="13.21" y="1119.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (698 samples, 12.70%)</title><rect x="947.1" y="1557" width="149.9" height="15.0" fill="rgb(252,134,22)" rx="2" ry="2" />
<text  x="950.08" y="1567.5" >service::storage_pr..</text>
</g>
<g >
<title>operator delete (11 samples, 0.20%)</title><rect x="318.0" y="1557" width="2.4" height="15.0" fill="rgb(234,201,7)" rx="2" ry="2" />
<text  x="320.99" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="1029" width="9.9" height="15.0" fill="rgb(224,75,4)" rx="2" ry="2" />
<text  x="13.21" y="1039.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="1123.4" y="1589" width="0.2" height="15.0" fill="rgb(244,177,26)" rx="2" ry="2" />
<text  x="1126.42" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.02%)</title><rect x="617.4" y="1621" width="0.2" height="15.0" fill="rgb(218,42,23)" rx="2" ry="2" />
<text  x="620.40" y="1631.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (20 samples, 0.36%)</title><rect x="216.8" y="1493" width="4.3" height="15.0" fill="rgb(233,83,42)" rx="2" ry="2" />
<text  x="219.83" y="1503.5" ></text>
</g>
<g >
<title>schema::column_at (6 samples, 0.11%)</title><rect x="399.2" y="1541" width="1.3" height="15.0" fill="rgb(214,110,32)" rx="2" ry="2" />
<text  x="402.18" y="1551.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.02%)</title><rect x="585.6" y="1557" width="0.2" height="15.0" fill="rgb(240,85,5)" rx="2" ry="2" />
<text  x="588.61" y="1567.5" ></text>
</g>
<g >
<title>table::make_reader (519 samples, 9.45%)</title><rect x="497.6" y="1589" width="111.4" height="15.0" fill="rgb(209,45,4)" rx="2" ry="2" />
<text  x="500.55" y="1599.5" >table::make_r..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.02%)</title><rect x="25.5" y="1381" width="0.2" height="15.0" fill="rgb(232,39,2)" rx="2" ry="2" />
<text  x="28.46" y="1391.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="524.2" y="1557" width="0.4" height="15.0" fill="rgb(231,175,8)" rx="2" ry="2" />
<text  x="527.18" y="1567.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="482.3" y="1573" width="0.2" height="15.0" fill="rgb(229,207,30)" rx="2" ry="2" />
<text  x="485.30" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (6 samples, 0.11%)</title><rect x="18.8" y="565" width="1.3" height="15.0" fill="rgb(250,61,18)" rx="2" ry="2" />
<text  x="21.81" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;4ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="26.1" y="1141" width="0.2" height="15.0" fill="rgb(223,68,19)" rx="2" ry="2" />
<text  x="29.11" y="1151.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (3 samples, 0.05%)</title><rect x="157.6" y="1589" width="0.6" height="15.0" fill="rgb(211,75,19)" rx="2" ry="2" />
<text  x="160.55" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.35%)</title><rect x="139.5" y="1605" width="4.1" height="15.0" fill="rgb(232,106,26)" rx="2" ry="2" />
<text  x="142.51" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="21.2" y="1461" width="0.2" height="15.0" fill="rgb(234,109,43)" rx="2" ry="2" />
<text  x="24.17" y="1471.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="22.0" y="1621" width="0.2" height="15.0" fill="rgb(237,17,37)" rx="2" ry="2" />
<text  x="25.03" y="1631.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="25.5" y="1269" width="0.2" height="15.0" fill="rgb(224,17,27)" rx="2" ry="2" />
<text  x="28.46" y="1279.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::substr[abi:cxx11] (1 samples, 0.02%)</title><rect x="24.2" y="1429" width="0.2" height="15.0" fill="rgb(236,76,19)" rx="2" ry="2" />
<text  x="27.18" y="1439.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (32 samples, 0.58%)</title><rect x="11.3" y="453" width="6.9" height="15.0" fill="rgb(229,226,1)" rx="2" ry="2" />
<text  x="14.29" y="463.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (44 samples, 0.80%)</title><rect x="903.5" y="1557" width="9.4" height="15.0" fill="rgb(214,56,48)" rx="2" ry="2" />
<text  x="906.48" y="1567.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.07%)</title><rect x="638.9" y="1653" width="0.8" height="15.0" fill="rgb(235,159,32)" rx="2" ry="2" />
<text  x="641.88" y="1663.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="975.9" y="1509" width="0.2" height="15.0" fill="rgb(206,94,12)" rx="2" ry="2" />
<text  x="978.86" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="1042.4" y="1429" width="0.3" height="15.0" fill="rgb(223,229,41)" rx="2" ry="2" />
<text  x="1045.45" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="819.5" y="1493" width="0.2" height="15.0" fill="rgb(210,61,18)" rx="2" ry="2" />
<text  x="822.50" y="1503.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_initialize_map (1 samples, 0.02%)</title><rect x="11.5" y="277" width="0.2" height="15.0" fill="rgb(237,142,39)" rx="2" ry="2" />
<text  x="14.50" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="15.2" y="197" width="0.2" height="15.0" fill="rgb(230,218,42)" rx="2" ry="2" />
<text  x="18.15" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.02%)</title><rect x="1112.9" y="1509" width="0.2" height="15.0" fill="rgb(239,124,29)" rx="2" ry="2" />
<text  x="1115.89" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.02%)</title><rect x="20.7" y="1125" width="0.3" height="15.0" fill="rgb(248,94,32)" rx="2" ry="2" />
<text  x="23.74" y="1135.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="687.4" y="1653" width="0.2" height="15.0" fill="rgb(208,6,50)" rx="2" ry="2" />
<text  x="690.42" y="1663.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (32 samples, 0.58%)</title><rect x="11.3" y="469" width="6.9" height="15.0" fill="rgb(209,125,24)" rx="2" ry="2" />
<text  x="14.29" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="1042.2" y="1429" width="0.2" height="15.0" fill="rgb(217,99,54)" rx="2" ry="2" />
<text  x="1045.23" y="1439.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.05%)</title><rect x="716.2" y="1653" width="0.6" height="15.0" fill="rgb(218,143,31)" rx="2" ry="2" />
<text  x="719.20" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.02%)</title><rect x="20.1" y="805" width="0.2" height="15.0" fill="rgb(241,172,13)" rx="2" ry="2" />
<text  x="23.09" y="815.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="313.7" y="1493" width="0.9" height="15.0" fill="rgb(234,72,23)" rx="2" ry="2" />
<text  x="316.70" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (562 samples, 10.23%)</title><rect x="731.4" y="1669" width="120.8" height="15.0" fill="rgb(234,221,13)" rx="2" ry="2" />
<text  x="734.45" y="1679.5" >seastar::intern..</text>
</g>
<g >
<title>operator new (20 samples, 0.36%)</title><rect x="519.2" y="1541" width="4.3" height="15.0" fill="rgb(216,50,42)" rx="2" ry="2" />
<text  x="522.24" y="1551.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (2 samples, 0.04%)</title><rect x="313.3" y="1493" width="0.4" height="15.0" fill="rgb(246,136,39)" rx="2" ry="2" />
<text  x="316.27" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="860.5" y="1637" width="0.5" height="15.0" fill="rgb(231,45,22)" rx="2" ry="2" />
<text  x="863.53" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base (1 samples, 0.02%)</title><rect x="26.3" y="1445" width="0.2" height="15.0" fill="rgb(218,55,16)" rx="2" ry="2" />
<text  x="29.32" y="1455.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="24.4" y="1317" width="0.4" height="15.0" fill="rgb(219,68,12)" rx="2" ry="2" />
<text  x="27.39" y="1327.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="25.0" y="1269" width="0.2" height="15.0" fill="rgb(223,64,21)" rx="2" ry="2" />
<text  x="28.03" y="1279.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_destroy&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="18.4" y="293" width="0.2" height="15.0" fill="rgb(227,63,8)" rx="2" ry="2" />
<text  x="21.38" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="20.5" y="949" width="0.2" height="15.0" fill="rgb(212,201,27)" rx="2" ry="2" />
<text  x="23.52" y="959.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.02%)</title><rect x="26.1" y="1397" width="0.2" height="15.0" fill="rgb(229,150,22)" rx="2" ry="2" />
<text  x="29.11" y="1407.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="1122.3" y="1637" width="0.5" height="15.0" fill="rgb(252,160,53)" rx="2" ry="2" />
<text  x="1125.34" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.02%)</title><rect x="634.6" y="1637" width="0.2" height="15.0" fill="rgb(231,178,13)" rx="2" ry="2" />
<text  x="637.58" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.05%)</title><rect x="578.1" y="1541" width="0.6" height="15.0" fill="rgb(217,177,15)" rx="2" ry="2" />
<text  x="581.09" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (1 samples, 0.02%)</title><rect x="13.9" y="277" width="0.2" height="15.0" fill="rgb(226,195,40)" rx="2" ry="2" />
<text  x="16.87" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="1099.4" y="1541" width="0.2" height="15.0" fill="rgb(238,170,43)" rx="2" ry="2" />
<text  x="1102.36" y="1551.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (15 samples, 0.27%)</title><rect x="600.6" y="1541" width="3.3" height="15.0" fill="rgb(210,122,45)" rx="2" ry="2" />
<text  x="603.64" y="1551.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.05%)</title><rect x="11.9" y="229" width="0.7" height="15.0" fill="rgb(232,84,49)" rx="2" ry="2" />
<text  x="14.93" y="239.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (3 samples, 0.05%)</title><rect x="931.2" y="1573" width="0.6" height="15.0" fill="rgb(221,155,16)" rx="2" ry="2" />
<text  x="934.19" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3 samples, 0.05%)</title><rect x="18.2" y="549" width="0.6" height="15.0" fill="rgb(215,89,6)" rx="2" ry="2" />
<text  x="21.16" y="559.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="701.4" y="1637" width="0.2" height="15.0" fill="rgb(212,152,44)" rx="2" ry="2" />
<text  x="704.38" y="1647.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.02%)</title><rect x="20.1" y="1013" width="0.2" height="15.0" fill="rgb(254,151,34)" rx="2" ry="2" />
<text  x="23.09" y="1023.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.02%)</title><rect x="20.3" y="1013" width="0.2" height="15.0" fill="rgb(237,126,22)" rx="2" ry="2" />
<text  x="23.31" y="1023.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.02%)</title><rect x="16.0" y="293" width="0.2" height="15.0" fill="rgb(249,34,25)" rx="2" ry="2" />
<text  x="19.01" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="15.2" y="229" width="0.2" height="15.0" fill="rgb(215,67,54)" rx="2" ry="2" />
<text  x="18.15" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1 samples, 0.02%)</title><rect x="11.9" y="181" width="0.2" height="15.0" fill="rgb(252,76,49)" rx="2" ry="2" />
<text  x="14.93" y="191.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.02%)</title><rect x="20.3" y="965" width="0.2" height="15.0" fill="rgb(216,35,23)" rx="2" ry="2" />
<text  x="23.31" y="975.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.02%)</title><rect x="553.6" y="1557" width="0.2" height="15.0" fill="rgb(250,66,50)" rx="2" ry="2" />
<text  x="556.61" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.89%)</title><rect x="10.2" y="1269" width="10.5" height="15.0" fill="rgb(231,180,48)" rx="2" ry="2" />
<text  x="13.21" y="1279.5" ></text>
</g>
<g >
<title>std::addressof&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="25.5" y="1237" width="0.2" height="15.0" fill="rgb(209,19,13)" rx="2" ry="2" />
<text  x="28.46" y="1247.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="20.5" y="1189" width="0.2" height="15.0" fill="rgb(238,17,13)" rx="2" ry="2" />
<text  x="23.52" y="1199.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="687.6" y="1653" width="0.5" height="15.0" fill="rgb(221,139,21)" rx="2" ry="2" />
<text  x="690.63" y="1663.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="886.5" y="1493" width="0.2" height="15.0" fill="rgb(254,199,52)" rx="2" ry="2" />
<text  x="889.52" y="1503.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="571.2" y="1509" width="1.3" height="15.0" fill="rgb(228,129,13)" rx="2" ry="2" />
<text  x="574.22" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.04%)</title><rect x="22.9" y="1333" width="0.4" height="15.0" fill="rgb(232,53,32)" rx="2" ry="2" />
<text  x="25.89" y="1343.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="16.2" y="117" width="0.2" height="15.0" fill="rgb(251,208,30)" rx="2" ry="2" />
<text  x="19.23" y="127.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (32 samples, 0.58%)</title><rect x="482.7" y="1589" width="6.9" height="15.0" fill="rgb(215,100,49)" rx="2" ry="2" />
<text  x="485.73" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1429" width="10.8" height="15.0" fill="rgb(231,193,39)" rx="2" ry="2" />
<text  x="13.21" y="1439.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (14 samples, 0.25%)</title><rect x="22.2" y="1541" width="3.0" height="15.0" fill="rgb(210,211,14)" rx="2" ry="2" />
<text  x="25.24" y="1551.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (134 samples, 2.44%)</title><rect x="1126.4" y="1669" width="28.8" height="15.0" fill="rgb(250,158,4)" rx="2" ry="2" />
<text  x="1129.43" y="1679.5" >se..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="20.7" y="997" width="0.3" height="15.0" fill="rgb(223,78,7)" rx="2" ry="2" />
<text  x="23.74" y="1007.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.02%)</title><rect x="20.5" y="1061" width="0.2" height="15.0" fill="rgb(211,110,23)" rx="2" ry="2" />
<text  x="23.52" y="1071.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (80 samples, 1.46%)</title><rect x="277.8" y="1429" width="17.2" height="15.0" fill="rgb(228,9,13)" rx="2" ry="2" />
<text  x="280.83" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="885" width="9.9" height="15.0" fill="rgb(240,223,53)" rx="2" ry="2" />
<text  x="13.21" y="895.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (5 samples, 0.09%)</title><rect x="920.7" y="1573" width="1.0" height="15.0" fill="rgb(245,140,33)" rx="2" ry="2" />
<text  x="923.67" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.05%)</title><rect x="72.9" y="1653" width="0.7" height="15.0" fill="rgb(226,9,11)" rx="2" ry="2" />
<text  x="75.93" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.07%)</title><rect x="96.8" y="1605" width="0.8" height="15.0" fill="rgb(238,161,39)" rx="2" ry="2" />
<text  x="99.77" y="1615.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="31.3" y="1717" width="0.2" height="15.0" fill="rgb(212,179,47)" rx="2" ry="2" />
<text  x="34.26" y="1727.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (3 samples, 0.05%)</title><rect x="463.6" y="1557" width="0.7" height="15.0" fill="rgb(219,107,7)" rx="2" ry="2" />
<text  x="466.61" y="1567.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="204.2" y="1509" width="0.2" height="15.0" fill="rgb(246,84,53)" rx="2" ry="2" />
<text  x="207.16" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (1 samples, 0.02%)</title><rect x="466.4" y="1557" width="0.2" height="15.0" fill="rgb(251,217,17)" rx="2" ry="2" />
<text  x="469.41" y="1567.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (1 samples, 0.02%)</title><rect x="893.8" y="1493" width="0.2" height="15.0" fill="rgb(237,143,14)" rx="2" ry="2" />
<text  x="896.82" y="1503.5" ></text>
</g>
<g >
<title>posix_memalign (24 samples, 0.44%)</title><rect x="289.4" y="1397" width="5.2" height="15.0" fill="rgb(228,53,1)" rx="2" ry="2" />
<text  x="292.43" y="1407.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (2 samples, 0.04%)</title><rect x="862.5" y="1605" width="0.4" height="15.0" fill="rgb(215,226,13)" rx="2" ry="2" />
<text  x="865.46" y="1615.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (11 samples, 0.20%)</title><rect x="849.8" y="1653" width="2.4" height="15.0" fill="rgb(254,191,42)" rx="2" ry="2" />
<text  x="852.79" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="17.5" y="341" width="0.2" height="15.0" fill="rgb(243,219,13)" rx="2" ry="2" />
<text  x="20.52" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (12 samples, 0.22%)</title><rect x="11.9" y="373" width="2.6" height="15.0" fill="rgb(244,184,7)" rx="2" ry="2" />
<text  x="14.93" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="844.2" y="1589" width="0.2" height="15.0" fill="rgb(215,206,38)" rx="2" ry="2" />
<text  x="847.20" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="915.5" y="1557" width="0.2" height="15.0" fill="rgb(254,107,4)" rx="2" ry="2" />
<text  x="918.51" y="1567.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (11 samples, 0.20%)</title><rect x="419.6" y="1573" width="2.3" height="15.0" fill="rgb(221,40,34)" rx="2" ry="2" />
<text  x="422.59" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="50.6" y="1605" width="0.2" height="15.0" fill="rgb(227,202,37)" rx="2" ry="2" />
<text  x="53.59" y="1615.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.04%)</title><rect x="906.9" y="1541" width="0.4" height="15.0" fill="rgb(209,138,54)" rx="2" ry="2" />
<text  x="909.92" y="1551.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="31.7" y="1669" width="0.2" height="15.0" fill="rgb(218,155,51)" rx="2" ry="2" />
<text  x="34.69" y="1679.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::constants::setter&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="644.0" y="1621" width="0.2" height="15.0" fill="rgb(212,199,0)" rx="2" ry="2" />
<text  x="647.03" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.04%)</title><rect x="660.8" y="1621" width="0.4" height="15.0" fill="rgb(239,105,13)" rx="2" ry="2" />
<text  x="663.78" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.02%)</title><rect x="16.4" y="261" width="0.3" height="15.0" fill="rgb(226,180,11)" rx="2" ry="2" />
<text  x="19.44" y="271.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (4 samples, 0.07%)</title><rect x="558.5" y="1541" width="0.9" height="15.0" fill="rgb(239,63,45)" rx="2" ry="2" />
<text  x="561.55" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="20.3" y="821" width="0.2" height="15.0" fill="rgb(210,34,36)" rx="2" ry="2" />
<text  x="23.31" y="831.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="15.6" y="149" width="0.2" height="15.0" fill="rgb(250,36,2)" rx="2" ry="2" />
<text  x="18.58" y="159.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (3 samples, 0.05%)</title><rect x="572.5" y="1509" width="0.7" height="15.0" fill="rgb(249,217,25)" rx="2" ry="2" />
<text  x="575.51" y="1519.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="821.2" y="1541" width="0.9" height="15.0" fill="rgb(236,104,0)" rx="2" ry="2" />
<text  x="824.22" y="1551.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (4 samples, 0.07%)</title><rect x="21.0" y="1621" width="0.8" height="15.0" fill="rgb(250,40,20)" rx="2" ry="2" />
<text  x="23.95" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_table_statement, std::default_delete&lt;cql3::statements::drop_table_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="17.7" y="341" width="0.2" height="15.0" fill="rgb(217,54,27)" rx="2" ry="2" />
<text  x="20.73" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (4 samples, 0.07%)</title><rect x="229.7" y="1477" width="0.9" height="15.0" fill="rgb(213,126,52)" rx="2" ry="2" />
<text  x="232.72" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1036.2" y="1381" width="0.2" height="15.0" fill="rgb(245,112,34)" rx="2" ry="2" />
<text  x="1039.22" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="65.2" y="1653" width="0.4" height="15.0" fill="rgb(253,212,34)" rx="2" ry="2" />
<text  x="68.20" y="1663.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="722.2" y="1637" width="0.2" height="15.0" fill="rgb(248,85,6)" rx="2" ry="2" />
<text  x="725.21" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1122.6" y="1509" width="0.2" height="15.0" fill="rgb(209,21,18)" rx="2" ry="2" />
<text  x="1125.56" y="1519.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (22 samples, 0.40%)</title><rect x="548.2" y="1541" width="4.8" height="15.0" fill="rgb(222,4,24)" rx="2" ry="2" />
<text  x="551.24" y="1551.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.49%)</title><rect x="330.9" y="1605" width="5.8" height="15.0" fill="rgb(209,144,14)" rx="2" ry="2" />
<text  x="333.88" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.09%)</title><rect x="576.8" y="1525" width="1.1" height="15.0" fill="rgb(240,129,39)" rx="2" ry="2" />
<text  x="579.80" y="1535.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.02%)</title><rect x="652.2" y="1637" width="0.2" height="15.0" fill="rgb(216,158,31)" rx="2" ry="2" />
<text  x="655.19" y="1647.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="23.7" y="1445" width="0.5" height="15.0" fill="rgb(210,173,45)" rx="2" ry="2" />
<text  x="26.75" y="1455.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="31.7" y="1765" width="0.2" height="15.0" fill="rgb(225,195,6)" rx="2" ry="2" />
<text  x="34.69" y="1775.5" ></text>
</g>
<g >
<title>dht::tri_compare (8 samples, 0.15%)</title><rect x="1085.6" y="1461" width="1.7" height="15.0" fill="rgb(231,74,48)" rx="2" ry="2" />
<text  x="1088.62" y="1471.5" ></text>
</g>
<g >
<title>table::query (2,419 samples, 44.03%)</title><rect x="101.7" y="1637" width="519.6" height="15.0" fill="rgb(238,55,43)" rx="2" ry="2" />
<text  x="104.71" y="1647.5" >table::query</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.02%)</title><rect x="18.4" y="357" width="0.2" height="15.0" fill="rgb(224,102,51)" rx="2" ry="2" />
<text  x="21.38" y="367.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.29%)</title><rect x="939.4" y="1573" width="3.4" height="15.0" fill="rgb(216,162,0)" rx="2" ry="2" />
<text  x="942.35" y="1583.5" ></text>
</g>
<g >
<title>_dl_new_object (1 samples, 0.02%)</title><rect x="31.5" y="1781" width="0.2" height="15.0" fill="rgb(235,149,23)" rx="2" ry="2" />
<text  x="34.48" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (47 samples, 0.86%)</title><rect x="10.2" y="1157" width="10.1" height="15.0" fill="rgb(240,164,35)" rx="2" ry="2" />
<text  x="13.21" y="1167.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (18 samples, 0.33%)</title><rect x="672.4" y="1653" width="3.8" height="15.0" fill="rgb(214,73,0)" rx="2" ry="2" />
<text  x="675.38" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="17.9" y="357" width="0.3" height="15.0" fill="rgb(243,44,16)" rx="2" ry="2" />
<text  x="20.95" y="367.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.02%)</title><rect x="16.2" y="245" width="0.2" height="15.0" fill="rgb(227,220,10)" rx="2" ry="2" />
<text  x="19.23" y="255.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (29 samples, 0.53%)</title><rect x="679.3" y="1653" width="6.2" height="15.0" fill="rgb(243,183,7)" rx="2" ry="2" />
<text  x="682.25" y="1663.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (4 samples, 0.07%)</title><rect x="10.2" y="453" width="0.9" height="15.0" fill="rgb(219,55,53)" rx="2" ry="2" />
<text  x="13.21" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.02%)</title><rect x="1122.1" y="1493" width="0.2" height="15.0" fill="rgb(230,219,7)" rx="2" ry="2" />
<text  x="1125.13" y="1503.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (41 samples, 0.75%)</title><rect x="1087.3" y="1461" width="8.8" height="15.0" fill="rgb(227,69,6)" rx="2" ry="2" />
<text  x="1090.34" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="18.6" y="181" width="0.2" height="15.0" fill="rgb(253,45,49)" rx="2" ry="2" />
<text  x="21.59" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.22%)</title><rect x="1104.1" y="1541" width="2.6" height="15.0" fill="rgb(253,122,34)" rx="2" ry="2" />
<text  x="1107.09" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="26.1" y="1205" width="0.2" height="15.0" fill="rgb(214,91,12)" rx="2" ry="2" />
<text  x="29.11" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1669" width="10.8" height="15.0" fill="rgb(241,23,45)" rx="2" ry="2" />
<text  x="13.21" y="1679.5" ></text>
</g>
<g >
<title>create_partitions (4 samples, 0.07%)</title><rect x="21.0" y="1669" width="0.8" height="15.0" fill="rgb(217,169,17)" rx="2" ry="2" />
<text  x="23.95" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="18.4" y="325" width="0.2" height="15.0" fill="rgb(253,199,25)" rx="2" ry="2" />
<text  x="21.38" y="335.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.02%)</title><rect x="1159.9" y="1605" width="0.2" height="15.0" fill="rgb(245,153,39)" rx="2" ry="2" />
<text  x="1162.93" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (3 samples, 0.05%)</title><rect x="11.9" y="293" width="0.7" height="15.0" fill="rgb(237,36,32)" rx="2" ry="2" />
<text  x="14.93" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (1 samples, 0.02%)</title><rect x="20.7" y="1109" width="0.3" height="15.0" fill="rgb(234,56,54)" rx="2" ry="2" />
<text  x="23.74" y="1119.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.04%)</title><rect x="1159.3" y="1669" width="0.4" height="15.0" fill="rgb(230,188,38)" rx="2" ry="2" />
<text  x="1162.29" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="869" width="9.9" height="15.0" fill="rgb(253,58,43)" rx="2" ry="2" />
<text  x="13.21" y="879.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.09%)</title><rect x="48.0" y="1637" width="1.1" height="15.0" fill="rgb(210,216,5)" rx="2" ry="2" />
<text  x="51.02" y="1647.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (19 samples, 0.35%)</title><rect x="831.5" y="1605" width="4.1" height="15.0" fill="rgb(226,229,10)" rx="2" ry="2" />
<text  x="834.53" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="45.2" y="1653" width="0.2" height="15.0" fill="rgb(217,201,39)" rx="2" ry="2" />
<text  x="48.22" y="1663.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.02%)</title><rect x="26.3" y="1493" width="0.2" height="15.0" fill="rgb(247,89,3)" rx="2" ry="2" />
<text  x="29.32" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1030.0" y="1381" width="0.2" height="15.0" fill="rgb(220,176,22)" rx="2" ry="2" />
<text  x="1032.99" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.20%)</title><rect x="1069.9" y="1493" width="2.4" height="15.0" fill="rgb(220,145,43)" rx="2" ry="2" />
<text  x="1072.94" y="1503.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="81.7" y="1637" width="1.5" height="15.0" fill="rgb(254,83,0)" rx="2" ry="2" />
<text  x="84.74" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="12.1" y="181" width="0.3" height="15.0" fill="rgb(253,120,3)" rx="2" ry="2" />
<text  x="15.15" y="191.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="20.3" y="901" width="0.2" height="15.0" fill="rgb(218,203,19)" rx="2" ry="2" />
<text  x="23.31" y="911.5" ></text>
</g>
<g >
<title>database::query (148 samples, 2.69%)</title><rect x="1010.9" y="1445" width="31.8" height="15.0" fill="rgb(240,11,53)" rx="2" ry="2" />
<text  x="1013.87" y="1455.5" >da..</text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.02%)</title><rect x="17.1" y="293" width="0.2" height="15.0" fill="rgb(254,214,16)" rx="2" ry="2" />
<text  x="20.09" y="303.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="19.2" y="197" width="0.3" height="15.0" fill="rgb(211,16,13)" rx="2" ry="2" />
<text  x="22.24" y="207.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.02%)</title><rect x="20.1" y="981" width="0.2" height="15.0" fill="rgb(229,138,1)" rx="2" ry="2" />
<text  x="23.09" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.02%)</title><rect x="13.2" y="197" width="0.2" height="15.0" fill="rgb(214,82,3)" rx="2" ry="2" />
<text  x="16.22" y="207.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.04%)</title><rect x="15.4" y="309" width="0.4" height="15.0" fill="rgb(208,80,44)" rx="2" ry="2" />
<text  x="18.37" y="319.5" ></text>
</g>
<g >
<title>query::querier&lt; (1,411 samples, 25.68%)</title><rect x="151.3" y="1621" width="303.1" height="15.0" fill="rgb(228,78,34)" rx="2" ry="2" />
<text  x="154.33" y="1631.5" >query::querier&lt;</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.02%)</title><rect x="22.2" y="1445" width="0.3" height="15.0" fill="rgb(212,44,4)" rx="2" ry="2" />
<text  x="25.24" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.11%)</title><rect x="1045.9" y="1413" width="1.3" height="15.0" fill="rgb(212,138,54)" rx="2" ry="2" />
<text  x="1048.88" y="1423.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1160.6" y="1605" width="0.2" height="15.0" fill="rgb(208,109,46)" rx="2" ry="2" />
<text  x="1163.58" y="1615.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (2 samples, 0.04%)</title><rect x="299.5" y="1477" width="0.5" height="15.0" fill="rgb(217,17,26)" rx="2" ry="2" />
<text  x="302.52" y="1487.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="464.0" y="1541" width="0.3" height="15.0" fill="rgb(228,18,38)" rx="2" ry="2" />
<text  x="467.04" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (5 samples, 0.09%)</title><rect x="24.2" y="1461" width="1.0" height="15.0" fill="rgb(249,94,45)" rx="2" ry="2" />
<text  x="27.18" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (6 samples, 0.11%)</title><rect x="52.5" y="1605" width="1.3" height="15.0" fill="rgb(243,145,6)" rx="2" ry="2" />
<text  x="55.53" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (48 samples, 0.87%)</title><rect x="10.2" y="1205" width="10.3" height="15.0" fill="rgb(217,51,52)" rx="2" ry="2" />
<text  x="13.21" y="1215.5" ></text>
</g>
<g >
<title>free (5 samples, 0.09%)</title><rect x="51.5" y="1605" width="1.0" height="15.0" fill="rgb(236,67,32)" rx="2" ry="2" />
<text  x="54.45" y="1615.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="1147.3" y="1653" width="0.2" height="15.0" fill="rgb(218,1,16)" rx="2" ry="2" />
<text  x="1150.26" y="1663.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (4 samples, 0.07%)</title><rect x="21.0" y="1637" width="0.8" height="15.0" fill="rgb(219,153,27)" rx="2" ry="2" />
<text  x="23.95" y="1647.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="23.1" y="1253" width="0.2" height="15.0" fill="rgb(238,80,37)" rx="2" ry="2" />
<text  x="26.10" y="1263.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="10.2" y="229" width="0.2" height="15.0" fill="rgb(213,228,5)" rx="2" ry="2" />
<text  x="13.21" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (2 samples, 0.04%)</title><rect x="14.1" y="293" width="0.4" height="15.0" fill="rgb(237,43,14)" rx="2" ry="2" />
<text  x="17.08" y="303.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::attributes::raw&gt;, true&gt;::_Head_base (1 samples, 0.02%)</title><rect x="17.3" y="261" width="0.2" height="15.0" fill="rgb(239,64,8)" rx="2" ry="2" />
<text  x="20.30" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="787.1" y="1557" width="0.4" height="15.0" fill="rgb(224,27,12)" rx="2" ry="2" />
<text  x="790.07" y="1567.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.20%)</title><rect x="1069.9" y="1509" width="2.4" height="15.0" fill="rgb(219,174,44)" rx="2" ry="2" />
<text  x="1072.94" y="1519.5" ></text>
</g>
<g >
<title>do_cql_test (4 samples, 0.07%)</title><rect x="21.0" y="1685" width="0.8" height="15.0" fill="rgb(226,182,8)" rx="2" ry="2" />
<text  x="23.95" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.04%)</title><rect x="24.4" y="1381" width="0.4" height="15.0" fill="rgb(241,175,6)" rx="2" ry="2" />
<text  x="27.39" y="1391.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (3 samples, 0.05%)</title><rect x="81.1" y="1637" width="0.6" height="15.0" fill="rgb(251,35,1)" rx="2" ry="2" />
<text  x="84.09" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (259 samples, 4.71%)</title><rect x="995.2" y="1477" width="55.6" height="15.0" fill="rgb(253,5,45)" rx="2" ry="2" />
<text  x="998.19" y="1487.5" >servi..</text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="712.8" y="1637" width="0.2" height="15.0" fill="rgb(235,54,47)" rx="2" ry="2" />
<text  x="715.76" y="1647.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (49 samples, 0.89%)</title><rect x="87.3" y="1621" width="10.5" height="15.0" fill="rgb(211,110,14)" rx="2" ry="2" />
<text  x="90.32" y="1631.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (2 samples, 0.04%)</title><rect x="481.4" y="1557" width="0.5" height="15.0" fill="rgb(223,30,32)" rx="2" ry="2" />
<text  x="484.44" y="1567.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.02%)</title><rect x="1114.6" y="1589" width="0.2" height="15.0" fill="rgb(231,20,26)" rx="2" ry="2" />
<text  x="1117.61" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="1122.3" y="1605" width="0.5" height="15.0" fill="rgb(212,155,9)" rx="2" ry="2" />
<text  x="1125.34" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::stats (7 samples, 0.13%)</title><rect x="568.6" y="1509" width="1.5" height="15.0" fill="rgb(237,178,4)" rx="2" ry="2" />
<text  x="571.64" y="1519.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (1 samples, 0.02%)</title><rect x="1069.7" y="1509" width="0.2" height="15.0" fill="rgb(238,103,3)" rx="2" ry="2" />
<text  x="1072.72" y="1519.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="12.8" y="133" width="0.2" height="15.0" fill="rgb(245,173,54)" rx="2" ry="2" />
<text  x="15.79" y="143.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.02%)</title><rect x="22.2" y="1477" width="0.3" height="15.0" fill="rgb(207,194,0)" rx="2" ry="2" />
<text  x="25.24" y="1487.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="497.1" y="1589" width="0.5" height="15.0" fill="rgb(207,167,11)" rx="2" ry="2" />
<text  x="500.12" y="1599.5" ></text>
</g>
<g >
<title>database::find_column_family (11 samples, 0.20%)</title><rect x="1062.2" y="1509" width="2.4" height="15.0" fill="rgb(219,157,32)" rx="2" ry="2" />
<text  x="1065.21" y="1519.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="329.2" y="1573" width="0.2" height="15.0" fill="rgb(235,162,50)" rx="2" ry="2" />
<text  x="332.16" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="20.1" y="917" width="0.2" height="15.0" fill="rgb(219,89,3)" rx="2" ry="2" />
<text  x="23.09" y="927.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.02%)</title><rect x="20.5" y="1013" width="0.2" height="15.0" fill="rgb(249,190,43)" rx="2" ry="2" />
<text  x="23.52" y="1023.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="19.0" y="293" width="0.2" height="15.0" fill="rgb(250,216,30)" rx="2" ry="2" />
<text  x="22.02" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="1039.2" y="1397" width="0.2" height="15.0" fill="rgb(207,111,10)" rx="2" ry="2" />
<text  x="1042.22" y="1407.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (3 samples, 0.05%)</title><rect x="468.3" y="1541" width="0.7" height="15.0" fill="rgb(251,99,13)" rx="2" ry="2" />
<text  x="471.34" y="1551.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="19.0" y="389" width="0.2" height="15.0" fill="rgb(233,39,3)" rx="2" ry="2" />
<text  x="22.02" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="24.4" y="1301" width="0.4" height="15.0" fill="rgb(250,218,49)" rx="2" ry="2" />
<text  x="27.39" y="1311.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (18 samples, 0.33%)</title><rect x="1151.3" y="1653" width="3.9" height="15.0" fill="rgb(230,69,40)" rx="2" ry="2" />
<text  x="1154.34" y="1663.5" ></text>
</g>
<g >
<title>table::set_hit_rate (1 samples, 0.02%)</title><rect x="730.2" y="1653" width="0.2" height="15.0" fill="rgb(238,177,28)" rx="2" ry="2" />
<text  x="733.16" y="1663.5" ></text>
</g>
<g >
<title>__start_context (4 samples, 0.07%)</title><rect x="10.2" y="565" width="0.9" height="15.0" fill="rgb(236,43,8)" rx="2" ry="2" />
<text  x="13.21" y="575.5" ></text>
</g>
<g >
<title>database::query (27 samples, 0.49%)</title><rect x="58.1" y="1669" width="5.8" height="15.0" fill="rgb(222,0,25)" rx="2" ry="2" />
<text  x="61.11" y="1679.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.02%)</title><rect x="20.1" y="949" width="0.2" height="15.0" fill="rgb(240,23,25)" rx="2" ry="2" />
<text  x="23.09" y="959.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.02%)</title><rect x="26.3" y="1461" width="0.2" height="15.0" fill="rgb(230,167,51)" rx="2" ry="2" />
<text  x="29.32" y="1471.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="19.0" y="421" width="0.2" height="15.0" fill="rgb(244,103,30)" rx="2" ry="2" />
<text  x="22.02" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="16.9" y="245" width="0.2" height="15.0" fill="rgb(248,37,24)" rx="2" ry="2" />
<text  x="19.87" y="255.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="25.9" y="1301" width="0.2" height="15.0" fill="rgb(245,100,45)" rx="2" ry="2" />
<text  x="28.89" y="1311.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="479.5" y="1525" width="0.2" height="15.0" fill="rgb(236,183,1)" rx="2" ry="2" />
<text  x="482.51" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="18.2" y="341" width="0.2" height="15.0" fill="rgb(228,112,45)" rx="2" ry="2" />
<text  x="21.16" y="351.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (5,258 samples, 95.70%)</title><rect x="31.9" y="1733" width="1129.3" height="15.0" fill="rgb(240,114,13)" rx="2" ry="2" />
<text  x="34.91" y="1743.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>logalloc::allocating_section::reserve (12 samples, 0.22%)</title><rect x="553.8" y="1557" width="2.6" height="15.0" fill="rgb(247,163,39)" rx="2" ry="2" />
<text  x="556.82" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (55 samples, 1.00%)</title><rect x="86.7" y="1637" width="11.8" height="15.0" fill="rgb(211,66,25)" rx="2" ry="2" />
<text  x="89.68" y="1647.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (5 samples, 0.09%)</title><rect x="456.5" y="1573" width="1.1" height="15.0" fill="rgb(243,51,49)" rx="2" ry="2" />
<text  x="459.53" y="1583.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (63 samples, 1.15%)</title><rect x="42.2" y="1669" width="13.5" height="15.0" fill="rgb(232,7,37)" rx="2" ry="2" />
<text  x="45.22" y="1679.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="1138.7" y="1637" width="0.2" height="15.0" fill="rgb(222,65,44)" rx="2" ry="2" />
<text  x="1141.67" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="577.9" y="1541" width="0.2" height="15.0" fill="rgb(216,101,6)" rx="2" ry="2" />
<text  x="580.88" y="1551.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.02%)</title><rect x="1050.8" y="1477" width="0.2" height="15.0" fill="rgb(241,27,11)" rx="2" ry="2" />
<text  x="1053.82" y="1487.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="221.1" y="1493" width="1.1" height="15.0" fill="rgb(250,53,48)" rx="2" ry="2" />
<text  x="224.13" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.02%)</title><rect x="931.0" y="1525" width="0.2" height="15.0" fill="rgb(252,41,25)" rx="2" ry="2" />
<text  x="933.98" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.18%)</title><rect x="915.7" y="1557" width="2.2" height="15.0" fill="rgb(220,52,12)" rx="2" ry="2" />
<text  x="918.73" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="22.2" y="1461" width="0.3" height="15.0" fill="rgb(209,206,27)" rx="2" ry="2" />
<text  x="25.24" y="1471.5" ></text>
</g>
<g >
<title>table::query (1 samples, 0.02%)</title><rect x="1159.9" y="1669" width="0.2" height="15.0" fill="rgb(205,35,13)" rx="2" ry="2" />
<text  x="1162.93" y="1679.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.24%)</title><rect x="476.5" y="1509" width="2.8" height="15.0" fill="rgb(217,176,27)" rx="2" ry="2" />
<text  x="479.50" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="1047.6" y="1461" width="0.4" height="15.0" fill="rgb(206,169,6)" rx="2" ry="2" />
<text  x="1050.60" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1381" width="10.8" height="15.0" fill="rgb(240,65,49)" rx="2" ry="2" />
<text  x="13.21" y="1391.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.05%)</title><rect x="871.5" y="1589" width="0.6" height="15.0" fill="rgb(223,86,41)" rx="2" ry="2" />
<text  x="874.48" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.89%)</title><rect x="10.2" y="1221" width="10.5" height="15.0" fill="rgb(235,108,51)" rx="2" ry="2" />
<text  x="13.21" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="18.6" y="165" width="0.2" height="15.0" fill="rgb(235,164,36)" rx="2" ry="2" />
<text  x="21.59" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="25.5" y="1477" width="0.2" height="15.0" fill="rgb(205,228,5)" rx="2" ry="2" />
<text  x="28.46" y="1487.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (9 samples, 0.16%)</title><rect x="705.7" y="1653" width="1.9" height="15.0" fill="rgb(217,118,9)" rx="2" ry="2" />
<text  x="708.67" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (12 samples, 0.22%)</title><rect x="11.9" y="325" width="2.6" height="15.0" fill="rgb(230,164,25)" rx="2" ry="2" />
<text  x="14.93" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="22.0" y="1685" width="0.2" height="15.0" fill="rgb(253,182,8)" rx="2" ry="2" />
<text  x="25.03" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (48 samples, 0.87%)</title><rect x="883.9" y="1525" width="10.3" height="15.0" fill="rgb(229,144,38)" rx="2" ry="2" />
<text  x="886.94" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_keyspace_statement, std::default_delete&lt;cql3::statements::alter_keyspace_statement&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="19.5" y="405" width="0.2" height="15.0" fill="rgb(249,129,16)" rx="2" ry="2" />
<text  x="22.45" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="26.1" y="1349" width="0.2" height="15.0" fill="rgb(222,151,10)" rx="2" ry="2" />
<text  x="29.11" y="1359.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (2 samples, 0.04%)</title><rect x="1160.4" y="1685" width="0.4" height="15.0" fill="rgb(222,54,33)" rx="2" ry="2" />
<text  x="1163.36" y="1695.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (3 samples, 0.05%)</title><rect x="855.4" y="1653" width="0.6" height="15.0" fill="rgb(208,181,4)" rx="2" ry="2" />
<text  x="858.37" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="15.8" y="309" width="0.2" height="15.0" fill="rgb(228,111,41)" rx="2" ry="2" />
<text  x="18.80" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="518.0" y="1541" width="0.4" height="15.0" fill="rgb(219,95,36)" rx="2" ry="2" />
<text  x="520.95" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="953.7" y="1541" width="0.5" height="15.0" fill="rgb(220,40,18)" rx="2" ry="2" />
<text  x="956.74" y="1551.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (5 samples, 0.09%)</title><rect x="300.6" y="1477" width="1.1" height="15.0" fill="rgb(205,160,24)" rx="2" ry="2" />
<text  x="303.60" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect x="24.2" y="1349" width="0.2" height="15.0" fill="rgb(230,144,35)" rx="2" ry="2" />
<text  x="27.18" y="1359.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="15.8" y="325" width="0.2" height="15.0" fill="rgb(208,144,18)" rx="2" ry="2" />
<text  x="18.80" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (37 samples, 0.67%)</title><rect x="1017.5" y="1413" width="8.0" height="15.0" fill="rgb(245,162,13)" rx="2" ry="2" />
<text  x="1020.53" y="1423.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="19.0" y="405" width="0.2" height="15.0" fill="rgb(253,153,25)" rx="2" ry="2" />
<text  x="22.02" y="415.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="725" width="9.9" height="15.0" fill="rgb(222,158,48)" rx="2" ry="2" />
<text  x="13.21" y="735.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="1122.6" y="1477" width="0.2" height="15.0" fill="rgb(230,187,48)" rx="2" ry="2" />
<text  x="1125.56" y="1487.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.13%)</title><rect x="46.5" y="1637" width="1.5" height="15.0" fill="rgb(246,149,53)" rx="2" ry="2" />
<text  x="49.51" y="1647.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.02%)</title><rect x="18.6" y="293" width="0.2" height="15.0" fill="rgb(227,227,53)" rx="2" ry="2" />
<text  x="21.59" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (4 samples, 0.07%)</title><rect x="1118.3" y="1589" width="0.8" height="15.0" fill="rgb(211,24,36)" rx="2" ry="2" />
<text  x="1121.26" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="15.6" y="261" width="0.2" height="15.0" fill="rgb(214,213,25)" rx="2" ry="2" />
<text  x="18.58" y="271.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1525" width="10.8" height="15.0" fill="rgb(231,214,10)" rx="2" ry="2" />
<text  x="13.21" y="1535.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (1 samples, 0.02%)</title><rect x="855.8" y="1557" width="0.2" height="15.0" fill="rgb(216,194,36)" rx="2" ry="2" />
<text  x="858.80" y="1567.5" ></text>
</g>
<g >
<title>database::find_schema (22 samples, 0.40%)</title><rect x="774.6" y="1589" width="4.7" height="15.0" fill="rgb(233,25,31)" rx="2" ry="2" />
<text  x="777.62" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (4 samples, 0.07%)</title><rect x="21.0" y="1733" width="0.8" height="15.0" fill="rgb(209,182,24)" rx="2" ry="2" />
<text  x="23.95" y="1743.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.02%)</title><rect x="304.2" y="1493" width="0.3" height="15.0" fill="rgb(238,26,44)" rx="2" ry="2" />
<text  x="307.25" y="1503.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.02%)</title><rect x="717.9" y="1653" width="0.2" height="15.0" fill="rgb(222,121,13)" rx="2" ry="2" />
<text  x="720.91" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;**&gt;::allocate (1 samples, 0.02%)</title><rect x="11.5" y="229" width="0.2" height="15.0" fill="rgb(243,91,10)" rx="2" ry="2" />
<text  x="14.50" y="239.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.02%)</title><rect x="18.8" y="469" width="0.2" height="15.0" fill="rgb(243,179,35)" rx="2" ry="2" />
<text  x="21.81" y="479.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (2 samples, 0.04%)</title><rect x="305.3" y="1493" width="0.5" height="15.0" fill="rgb(229,58,15)" rx="2" ry="2" />
<text  x="308.32" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="18.2" y="373" width="0.2" height="15.0" fill="rgb(215,202,16)" rx="2" ry="2" />
<text  x="21.16" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="601.7" y="1509" width="1.7" height="15.0" fill="rgb(211,93,24)" rx="2" ry="2" />
<text  x="604.72" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="304.9" y="1493" width="0.2" height="15.0" fill="rgb(234,51,9)" rx="2" ry="2" />
<text  x="307.89" y="1503.5" ></text>
</g>
<g >
<title>schema::column_at (5 samples, 0.09%)</title><rect x="257.9" y="1429" width="1.0" height="15.0" fill="rgb(239,80,52)" rx="2" ry="2" />
<text  x="260.86" y="1439.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (6 samples, 0.11%)</title><rect x="574.9" y="1525" width="1.3" height="15.0" fill="rgb(248,83,8)" rx="2" ry="2" />
<text  x="577.87" y="1535.5" ></text>
</g>
<g >
<title>operator new (38 samples, 0.69%)</title><rect x="1017.3" y="1429" width="8.2" height="15.0" fill="rgb(208,119,36)" rx="2" ry="2" />
<text  x="1020.32" y="1439.5" ></text>
</g>
<g >
<title>schema::column_at (12 samples, 0.22%)</title><rect x="295.0" y="1429" width="2.6" height="15.0" fill="rgb(246,38,26)" rx="2" ry="2" />
<text  x="298.01" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.02%)</title><rect x="16.7" y="85" width="0.2" height="15.0" fill="rgb(240,201,16)" rx="2" ry="2" />
<text  x="19.66" y="95.5" ></text>
</g>
<g >
<title>database::apply_in_memory (1 samples, 0.02%)</title><rect x="1122.1" y="1573" width="0.2" height="15.0" fill="rgb(252,98,33)" rx="2" ry="2" />
<text  x="1125.13" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (101 samples, 1.84%)</title><rect x="10.2" y="1797" width="21.7" height="15.0" fill="rgb(249,25,27)" rx="2" ry="2" />
<text  x="13.21" y="1807.5" >[..</text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (1 samples, 0.02%)</title><rect x="1160.6" y="1669" width="0.2" height="15.0" fill="rgb(205,40,39)" rx="2" ry="2" />
<text  x="1163.58" y="1679.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="630.9" y="1653" width="0.9" height="15.0" fill="rgb(208,37,9)" rx="2" ry="2" />
<text  x="633.93" y="1663.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (2 samples, 0.04%)</title><rect x="754.9" y="1621" width="0.4" height="15.0" fill="rgb(226,131,40)" rx="2" ry="2" />
<text  x="757.86" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (14 samples, 0.25%)</title><rect x="22.2" y="1525" width="3.0" height="15.0" fill="rgb(230,160,10)" rx="2" ry="2" />
<text  x="25.24" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (6 samples, 0.11%)</title><rect x="16.0" y="325" width="1.3" height="15.0" fill="rgb(211,206,37)" rx="2" ry="2" />
<text  x="19.01" y="335.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.15%)</title><rect x="683.5" y="1637" width="1.8" height="15.0" fill="rgb(208,186,16)" rx="2" ry="2" />
<text  x="686.55" y="1647.5" ></text>
</g>
<g >
<title>TLS wrapper function for logalloc::shard_segment_pool (1 samples, 0.02%)</title><rect x="1122.1" y="1477" width="0.2" height="15.0" fill="rgb(233,108,41)" rx="2" ry="2" />
<text  x="1125.13" y="1487.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="573.4" y="1525" width="0.2" height="15.0" fill="rgb(227,168,5)" rx="2" ry="2" />
<text  x="576.37" y="1535.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="1123.4" y="1493" width="0.2" height="15.0" fill="rgb(235,72,52)" rx="2" ry="2" />
<text  x="1126.42" y="1503.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="19.2" y="293" width="0.3" height="15.0" fill="rgb(243,141,53)" rx="2" ry="2" />
<text  x="22.24" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (4 samples, 0.07%)</title><rect x="25.5" y="1509" width="0.8" height="15.0" fill="rgb(216,134,38)" rx="2" ry="2" />
<text  x="28.46" y="1519.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (32 samples, 0.58%)</title><rect x="11.3" y="485" width="6.9" height="15.0" fill="rgb(214,202,39)" rx="2" ry="2" />
<text  x="14.29" y="495.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="26.1" y="1461" width="0.2" height="15.0" fill="rgb(205,197,35)" rx="2" ry="2" />
<text  x="29.11" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.02%)</title><rect x="12.8" y="245" width="0.2" height="15.0" fill="rgb(237,79,45)" rx="2" ry="2" />
<text  x="15.79" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (2 samples, 0.04%)</title><rect x="1123.0" y="1653" width="0.4" height="15.0" fill="rgb(230,66,50)" rx="2" ry="2" />
<text  x="1125.99" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (1 samples, 0.02%)</title><rect x="12.8" y="261" width="0.2" height="15.0" fill="rgb(234,17,23)" rx="2" ry="2" />
<text  x="15.79" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (14 samples, 0.25%)</title><rect x="622.8" y="1653" width="3.0" height="15.0" fill="rgb(214,152,33)" rx="2" ry="2" />
<text  x="625.77" y="1663.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="745.2" y="1637" width="1.3" height="15.0" fill="rgb(206,8,21)" rx="2" ry="2" />
<text  x="748.19" y="1647.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="26.1" y="1317" width="0.2" height="15.0" fill="rgb(230,0,27)" rx="2" ry="2" />
<text  x="29.11" y="1327.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::run_and_dispose (1 samples, 0.02%)</title><rect x="1124.5" y="1669" width="0.2" height="15.0" fill="rgb(244,33,49)" rx="2" ry="2" />
<text  x="1127.49" y="1679.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (21 samples, 0.38%)</title><rect x="393.2" y="1541" width="4.5" height="15.0" fill="rgb(252,37,51)" rx="2" ry="2" />
<text  x="396.17" y="1551.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.02%)</title><rect x="26.1" y="1429" width="0.2" height="15.0" fill="rgb(233,92,8)" rx="2" ry="2" />
<text  x="29.11" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.02%)</title><rect x="16.7" y="197" width="0.2" height="15.0" fill="rgb(208,1,17)" rx="2" ry="2" />
<text  x="19.66" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (3 samples, 0.05%)</title><rect x="54.9" y="1637" width="0.6" height="15.0" fill="rgb(213,47,31)" rx="2" ry="2" />
<text  x="57.89" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (30 samples, 0.55%)</title><rect x="11.7" y="421" width="6.5" height="15.0" fill="rgb(213,220,3)" rx="2" ry="2" />
<text  x="14.72" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.02%)</title><rect x="26.1" y="1413" width="0.2" height="15.0" fill="rgb(212,193,32)" rx="2" ry="2" />
<text  x="29.11" y="1423.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (3 samples, 0.05%)</title><rect x="855.4" y="1621" width="0.6" height="15.0" fill="rgb(250,10,30)" rx="2" ry="2" />
<text  x="858.37" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="10.4" y="309" width="0.2" height="15.0" fill="rgb(207,132,22)" rx="2" ry="2" />
<text  x="13.43" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="745.6" y="1621" width="0.9" height="15.0" fill="rgb(240,125,31)" rx="2" ry="2" />
<text  x="748.62" y="1631.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.04%)</title><rect x="576.2" y="1525" width="0.4" height="15.0" fill="rgb(252,91,46)" rx="2" ry="2" />
<text  x="579.16" y="1535.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (3 samples, 0.05%)</title><rect x="249.7" y="1461" width="0.6" height="15.0" fill="rgb(226,150,50)" rx="2" ry="2" />
<text  x="252.69" y="1471.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (662 samples, 12.05%)</title><rect x="954.8" y="1541" width="142.2" height="15.0" fill="rgb(246,93,35)" rx="2" ry="2" />
<text  x="957.82" y="1551.5" >service::storage_p..</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.02%)</title><rect x="20.1" y="821" width="0.2" height="15.0" fill="rgb(238,120,34)" rx="2" ry="2" />
<text  x="23.09" y="831.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="18.6" y="261" width="0.2" height="15.0" fill="rgb(233,109,35)" rx="2" ry="2" />
<text  x="21.59" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="24.8" y="1333" width="0.2" height="15.0" fill="rgb(239,28,26)" rx="2" ry="2" />
<text  x="27.82" y="1343.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (5 samples, 0.09%)</title><rect x="479.7" y="1541" width="1.1" height="15.0" fill="rgb(253,178,40)" rx="2" ry="2" />
<text  x="482.72" y="1551.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (13 samples, 0.24%)</title><rect x="208.2" y="1509" width="2.8" height="15.0" fill="rgb(228,93,49)" rx="2" ry="2" />
<text  x="211.24" y="1519.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (124 samples, 2.26%)</title><rect x="456.1" y="1589" width="26.6" height="15.0" fill="rgb(219,226,39)" rx="2" ry="2" />
<text  x="459.10" y="1599.5" >m..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.02%)</title><rect x="16.7" y="69" width="0.2" height="15.0" fill="rgb(207,25,31)" rx="2" ry="2" />
<text  x="19.66" y="79.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="699.0" y="1653" width="0.9" height="15.0" fill="rgb(245,78,50)" rx="2" ry="2" />
<text  x="702.01" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="19.2" y="341" width="0.3" height="15.0" fill="rgb(229,209,43)" rx="2" ry="2" />
<text  x="22.24" y="351.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.25%)</title><rect x="1140.4" y="1653" width="3.0" height="15.0" fill="rgb(234,54,35)" rx="2" ry="2" />
<text  x="1143.39" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="489.4" y="1573" width="0.2" height="15.0" fill="rgb(240,7,8)" rx="2" ry="2" />
<text  x="492.39" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;3ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="26.1" y="1125" width="0.2" height="15.0" fill="rgb(244,83,12)" rx="2" ry="2" />
<text  x="29.11" y="1135.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.04%)</title><rect x="16.7" y="293" width="0.4" height="15.0" fill="rgb(238,203,44)" rx="2" ry="2" />
<text  x="19.66" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.11%)</title><rect x="219.0" y="1445" width="1.3" height="15.0" fill="rgb(240,43,25)" rx="2" ry="2" />
<text  x="221.98" y="1455.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="24.4" y="1285" width="0.4" height="15.0" fill="rgb(247,76,2)" rx="2" ry="2" />
<text  x="27.39" y="1295.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="579.8" y="1557" width="0.7" height="15.0" fill="rgb(244,51,16)" rx="2" ry="2" />
<text  x="582.81" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.04%)</title><rect x="22.9" y="1349" width="0.4" height="15.0" fill="rgb(232,186,43)" rx="2" ry="2" />
<text  x="25.89" y="1359.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="205.2" y="1493" width="0.2" height="15.0" fill="rgb(216,30,54)" rx="2" ry="2" />
<text  x="208.23" y="1503.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (2 samples, 0.04%)</title><rect x="374.1" y="1541" width="0.4" height="15.0" fill="rgb(220,85,32)" rx="2" ry="2" />
<text  x="377.05" y="1551.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (178 samples, 3.24%)</title><rect x="1009.4" y="1461" width="38.2" height="15.0" fill="rgb(214,55,29)" rx="2" ry="2" />
<text  x="1012.37" y="1471.5" >sea..</text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (1 samples, 0.02%)</title><rect x="1159.9" y="1621" width="0.2" height="15.0" fill="rgb(254,200,53)" rx="2" ry="2" />
<text  x="1162.93" y="1631.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="490.2" y="1589" width="0.3" height="15.0" fill="rgb(212,166,18)" rx="2" ry="2" />
<text  x="493.25" y="1599.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (78 samples, 1.42%)</title><rect x="713.6" y="1669" width="16.8" height="15.0" fill="rgb(241,177,46)" rx="2" ry="2" />
<text  x="716.62" y="1679.5" ></text>
</g>
<g >
<title>do_cql_test (33 samples, 0.60%)</title><rect x="11.1" y="517" width="7.1" height="15.0" fill="rgb(209,58,45)" rx="2" ry="2" />
<text  x="14.07" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (3 samples, 0.05%)</title><rect x="16.7" y="309" width="0.6" height="15.0" fill="rgb(212,103,18)" rx="2" ry="2" />
<text  x="19.66" y="319.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="20.1" y="1077" width="0.2" height="15.0" fill="rgb(232,168,32)" rx="2" ry="2" />
<text  x="23.09" y="1087.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.02%)</title><rect x="22.5" y="1445" width="0.2" height="15.0" fill="rgb(254,214,43)" rx="2" ry="2" />
<text  x="25.46" y="1455.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (14 samples, 0.25%)</title><rect x="22.2" y="1509" width="3.0" height="15.0" fill="rgb(231,22,30)" rx="2" ry="2" />
<text  x="25.24" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="821" width="9.9" height="15.0" fill="rgb(212,77,38)" rx="2" ry="2" />
<text  x="13.21" y="831.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (18 samples, 0.33%)</title><rect x="1147.5" y="1653" width="3.8" height="15.0" fill="rgb(244,98,12)" rx="2" ry="2" />
<text  x="1150.47" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1621" width="10.8" height="15.0" fill="rgb(221,140,31)" rx="2" ry="2" />
<text  x="13.21" y="1631.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (3 samples, 0.05%)</title><rect x="70.4" y="1653" width="0.6" height="15.0" fill="rgb(245,0,35)" rx="2" ry="2" />
<text  x="73.35" y="1663.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (24 samples, 0.44%)</title><rect x="812.0" y="1509" width="5.1" height="15.0" fill="rgb(252,88,30)" rx="2" ry="2" />
<text  x="814.99" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="450.7" y="1573" width="0.2" height="15.0" fill="rgb(250,104,52)" rx="2" ry="2" />
<text  x="453.73" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (5 samples, 0.09%)</title><rect x="19.0" y="453" width="1.1" height="15.0" fill="rgb(216,161,13)" rx="2" ry="2" />
<text  x="22.02" y="463.5" ></text>
</g>
<g >
<title>do_cql_test (4 samples, 0.07%)</title><rect x="10.2" y="501" width="0.9" height="15.0" fill="rgb(216,221,32)" rx="2" ry="2" />
<text  x="13.21" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="150.7" y="1605" width="0.2" height="15.0" fill="rgb(207,48,20)" rx="2" ry="2" />
<text  x="153.68" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (3 samples, 0.05%)</title><rect x="652.6" y="1637" width="0.7" height="15.0" fill="rgb(229,38,5)" rx="2" ry="2" />
<text  x="655.62" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1123.4" y="1557" width="0.2" height="15.0" fill="rgb(217,30,8)" rx="2" ry="2" />
<text  x="1126.42" y="1567.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (388 samples, 7.06%)</title><rect x="755.3" y="1621" width="83.3" height="15.0" fill="rgb(212,124,31)" rx="2" ry="2" />
<text  x="758.29" y="1631.5" >cql3::que..</text>
</g>
<g >
<title>seastar::thread_context::main (6 samples, 0.11%)</title><rect x="18.8" y="597" width="1.3" height="15.0" fill="rgb(223,192,44)" rx="2" ry="2" />
<text  x="21.81" y="607.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (21 samples, 0.38%)</title><rect x="1176.0" y="1781" width="4.5" height="15.0" fill="rgb(220,146,8)" rx="2" ry="2" />
<text  x="1179.04" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (33 samples, 0.60%)</title><rect x="886.7" y="1493" width="7.1" height="15.0" fill="rgb(241,47,0)" rx="2" ry="2" />
<text  x="889.73" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="25.9" y="1333" width="0.2" height="15.0" fill="rgb(242,177,4)" rx="2" ry="2" />
<text  x="28.89" y="1343.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (524 samples, 9.54%)</title><rect x="736.6" y="1653" width="112.5" height="15.0" fill="rgb(221,6,26)" rx="2" ry="2" />
<text  x="739.60" y="1663.5" >single_node_c..</text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.02%)</title><rect x="652.4" y="1637" width="0.2" height="15.0" fill="rgb(228,23,24)" rx="2" ry="2" />
<text  x="655.41" y="1647.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::destroy&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="18.4" y="309" width="0.2" height="15.0" fill="rgb(227,18,53)" rx="2" ry="2" />
<text  x="21.38" y="319.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="946.4" y="1557" width="0.3" height="15.0" fill="rgb(248,18,17)" rx="2" ry="2" />
<text  x="949.44" y="1567.5" ></text>
</g>
<g >
<title>validation::validate_column_family (36 samples, 0.66%)</title><rect x="822.7" y="1573" width="7.8" height="15.0" fill="rgb(225,148,9)" rx="2" ry="2" />
<text  x="825.73" y="1583.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (16 samples, 0.29%)</title><rect x="1114.8" y="1589" width="3.5" height="15.0" fill="rgb(250,155,11)" rx="2" ry="2" />
<text  x="1117.83" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.36%)</title><rect x="976.3" y="1493" width="4.3" height="15.0" fill="rgb(242,199,40)" rx="2" ry="2" />
<text  x="979.29" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (20 samples, 0.36%)</title><rect x="22.2" y="1573" width="4.3" height="15.0" fill="rgb(239,16,25)" rx="2" ry="2" />
<text  x="25.24" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="10.2" y="197" width="0.2" height="15.0" fill="rgb(221,203,24)" rx="2" ry="2" />
<text  x="13.21" y="207.5" ></text>
</g>
<g >
<title>[unknown] (47 samples, 0.86%)</title><rect x="10.2" y="1125" width="10.1" height="15.0" fill="rgb(240,130,26)" rx="2" ry="2" />
<text  x="13.21" y="1135.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="20.3" y="757" width="0.2" height="15.0" fill="rgb(215,99,32)" rx="2" ry="2" />
<text  x="23.31" y="767.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="573.2" y="1509" width="0.2" height="15.0" fill="rgb(236,198,16)" rx="2" ry="2" />
<text  x="576.15" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="24.0" y="1397" width="0.2" height="15.0" fill="rgb(253,179,37)" rx="2" ry="2" />
<text  x="26.96" y="1407.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="1122.3" y="1621" width="0.5" height="15.0" fill="rgb(240,68,16)" rx="2" ry="2" />
<text  x="1125.34" y="1631.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="661.2" y="1637" width="1.7" height="15.0" fill="rgb(232,7,6)" rx="2" ry="2" />
<text  x="664.21" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (1 samples, 0.02%)</title><rect x="205.4" y="1525" width="0.3" height="15.0" fill="rgb(235,196,5)" rx="2" ry="2" />
<text  x="208.45" y="1535.5" ></text>
</g>
<g >
<title>database::do_apply (2 samples, 0.04%)</title><rect x="1121.9" y="1605" width="0.4" height="15.0" fill="rgb(224,127,34)" rx="2" ry="2" />
<text  x="1124.91" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="970.3" y="1525" width="0.2" height="15.0" fill="rgb(217,173,16)" rx="2" ry="2" />
<text  x="973.28" y="1535.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.07%)</title><rect x="1162.9" y="1797" width="0.9" height="15.0" fill="rgb(242,160,39)" rx="2" ry="2" />
<text  x="1165.94" y="1807.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (2 samples, 0.04%)</title><rect x="485.3" y="1573" width="0.4" height="15.0" fill="rgb(224,150,27)" rx="2" ry="2" />
<text  x="488.31" y="1583.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (1 samples, 0.02%)</title><rect x="862.2" y="1605" width="0.3" height="15.0" fill="rgb(230,159,12)" rx="2" ry="2" />
<text  x="865.25" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (6 samples, 0.11%)</title><rect x="12.6" y="277" width="1.3" height="15.0" fill="rgb(209,78,10)" rx="2" ry="2" />
<text  x="15.58" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="10.9" y="229" width="0.2" height="15.0" fill="rgb(209,16,16)" rx="2" ry="2" />
<text  x="13.86" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (10 samples, 0.18%)</title><rect x="1006.8" y="1429" width="2.1" height="15.0" fill="rgb(209,46,45)" rx="2" ry="2" />
<text  x="1009.79" y="1439.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (4 samples, 0.07%)</title><rect x="541.2" y="1557" width="0.8" height="15.0" fill="rgb(254,103,6)" rx="2" ry="2" />
<text  x="544.15" y="1567.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.02%)</title><rect x="31.3" y="1733" width="0.2" height="15.0" fill="rgb(248,184,20)" rx="2" ry="2" />
<text  x="34.26" y="1743.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="23.7" y="1301" width="0.3" height="15.0" fill="rgb(250,18,10)" rx="2" ry="2" />
<text  x="26.75" y="1311.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="492.2" y="1589" width="1.7" height="15.0" fill="rgb(249,175,38)" rx="2" ry="2" />
<text  x="495.18" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (1 samples, 0.02%)</title><rect x="954.6" y="1541" width="0.2" height="15.0" fill="rgb(212,226,3)" rx="2" ry="2" />
<text  x="957.60" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (22 samples, 0.40%)</title><rect x="656.1" y="1605" width="4.7" height="15.0" fill="rgb(232,92,39)" rx="2" ry="2" />
<text  x="659.06" y="1615.5" ></text>
</g>
<g >
<title>query::querier&lt; (4 samples, 0.07%)</title><rect x="83.5" y="1637" width="0.8" height="15.0" fill="rgb(246,8,51)" rx="2" ry="2" />
<text  x="86.45" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="44.8" y="1653" width="0.2" height="15.0" fill="rgb(205,33,31)" rx="2" ry="2" />
<text  x="47.79" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (14 samples, 0.25%)</title><rect x="751.8" y="1621" width="3.1" height="15.0" fill="rgb(229,204,50)" rx="2" ry="2" />
<text  x="754.85" y="1631.5" ></text>
</g>
<g >
<title>row_cache::make_reader (66 samples, 1.20%)</title><rect x="591.8" y="1573" width="14.2" height="15.0" fill="rgb(254,3,44)" rx="2" ry="2" />
<text  x="594.84" y="1583.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (7 samples, 0.13%)</title><rect x="297.6" y="1429" width="1.5" height="15.0" fill="rgb(217,160,17)" rx="2" ry="2" />
<text  x="300.59" y="1439.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="573.6" y="1525" width="1.3" height="15.0" fill="rgb(213,217,6)" rx="2" ry="2" />
<text  x="576.58" y="1535.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.02%)</title><rect x="654.3" y="1621" width="0.3" height="15.0" fill="rgb(233,167,5)" rx="2" ry="2" />
<text  x="657.34" y="1631.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (1 samples, 0.02%)</title><rect x="32.8" y="1685" width="0.2" height="15.0" fill="rgb(224,11,3)" rx="2" ry="2" />
<text  x="35.77" y="1695.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.22%)</title><rect x="742.4" y="1605" width="2.6" height="15.0" fill="rgb(233,12,36)" rx="2" ry="2" />
<text  x="745.40" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (17 samples, 0.31%)</title><rect x="663.8" y="1637" width="3.6" height="15.0" fill="rgb(211,108,17)" rx="2" ry="2" />
<text  x="666.79" y="1647.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.02%)</title><rect x="308.8" y="1493" width="0.2" height="15.0" fill="rgb(209,81,34)" rx="2" ry="2" />
<text  x="311.76" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="644.0" y="1605" width="0.2" height="15.0" fill="rgb(224,158,35)" rx="2" ry="2" />
<text  x="647.03" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="20.3" y="997" width="0.2" height="15.0" fill="rgb(254,24,36)" rx="2" ry="2" />
<text  x="23.31" y="1007.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="26.1" y="1093" width="0.2" height="15.0" fill="rgb(251,159,51)" rx="2" ry="2" />
<text  x="29.11" y="1103.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (1 samples, 0.02%)</title><rect x="11.5" y="421" width="0.2" height="15.0" fill="rgb(205,95,14)" rx="2" ry="2" />
<text  x="14.50" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1122.6" y="1541" width="0.2" height="15.0" fill="rgb(208,150,12)" rx="2" ry="2" />
<text  x="1125.56" y="1551.5" ></text>
</g>
<g >
<title>database::has_keyspace (11 samples, 0.20%)</title><rect x="827.2" y="1557" width="2.4" height="15.0" fill="rgb(214,111,13)" rx="2" ry="2" />
<text  x="830.24" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="637.4" y="1637" width="0.2" height="15.0" fill="rgb(223,121,28)" rx="2" ry="2" />
<text  x="640.37" y="1647.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (776 samples, 14.12%)</title><rect x="932.9" y="1589" width="166.7" height="15.0" fill="rgb(248,136,39)" rx="2" ry="2" />
<text  x="935.91" y="1599.5" >cql3::statements::sel..</text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="830.0" y="1557" width="0.5" height="15.0" fill="rgb(227,32,26)" rx="2" ry="2" />
<text  x="833.03" y="1567.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (28 samples, 0.51%)</title><rect x="289.0" y="1413" width="6.0" height="15.0" fill="rgb(220,41,27)" rx="2" ry="2" />
<text  x="292.00" y="1423.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (3 samples, 0.05%)</title><rect x="835.0" y="1573" width="0.6" height="15.0" fill="rgb(243,137,9)" rx="2" ry="2" />
<text  x="837.97" y="1583.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (2 samples, 0.04%)</title><rect x="257.4" y="1429" width="0.5" height="15.0" fill="rgb(238,183,46)" rx="2" ry="2" />
<text  x="260.43" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="17.1" y="229" width="0.2" height="15.0" fill="rgb(254,69,26)" rx="2" ry="2" />
<text  x="20.09" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="23.1" y="1205" width="0.2" height="15.0" fill="rgb(222,156,14)" rx="2" ry="2" />
<text  x="26.10" y="1215.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="373.8" y="1525" width="0.3" height="15.0" fill="rgb(205,50,15)" rx="2" ry="2" />
<text  x="376.84" y="1535.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (3 samples, 0.05%)</title><rect x="45.4" y="1653" width="0.7" height="15.0" fill="rgb(209,51,43)" rx="2" ry="2" />
<text  x="48.44" y="1663.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (55 samples, 1.00%)</title><rect x="883.5" y="1541" width="11.8" height="15.0" fill="rgb(229,133,17)" rx="2" ry="2" />
<text  x="886.51" y="1551.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.02%)</title><rect x="20.5" y="1093" width="0.2" height="15.0" fill="rgb(210,95,43)" rx="2" ry="2" />
<text  x="23.52" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.02%)</title><rect x="16.7" y="133" width="0.2" height="15.0" fill="rgb(212,76,31)" rx="2" ry="2" />
<text  x="19.66" y="143.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="598.1" y="1541" width="0.2" height="15.0" fill="rgb(222,207,40)" rx="2" ry="2" />
<text  x="601.07" y="1551.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.02%)</title><rect x="20.3" y="1029" width="0.2" height="15.0" fill="rgb(241,193,47)" rx="2" ry="2" />
<text  x="23.31" y="1039.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (8 samples, 0.15%)</title><rect x="203.7" y="1525" width="1.7" height="15.0" fill="rgb(252,197,48)" rx="2" ry="2" />
<text  x="206.73" y="1535.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (4 samples, 0.07%)</title><rect x="21.0" y="1701" width="0.8" height="15.0" fill="rgb(254,83,26)" rx="2" ry="2" />
<text  x="23.95" y="1711.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (6 samples, 0.11%)</title><rect x="18.8" y="501" width="1.3" height="15.0" fill="rgb(248,218,27)" rx="2" ry="2" />
<text  x="21.81" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (2 samples, 0.04%)</title><rect x="1121.1" y="1605" width="0.4" height="15.0" fill="rgb(209,174,45)" rx="2" ry="2" />
<text  x="1124.06" y="1615.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (12 samples, 0.22%)</title><rect x="612.2" y="1605" width="2.6" height="15.0" fill="rgb(244,104,2)" rx="2" ry="2" />
<text  x="615.24" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="24.8" y="1365" width="0.2" height="15.0" fill="rgb(241,124,48)" rx="2" ry="2" />
<text  x="27.82" y="1375.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (1 samples, 0.02%)</title><rect x="838.8" y="1621" width="0.2" height="15.0" fill="rgb(228,71,34)" rx="2" ry="2" />
<text  x="841.84" y="1631.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (5 samples, 0.09%)</title><rect x="314.6" y="1493" width="1.0" height="15.0" fill="rgb(248,151,10)" rx="2" ry="2" />
<text  x="317.56" y="1503.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (1 samples, 0.02%)</title><rect x="55.5" y="1637" width="0.2" height="15.0" fill="rgb(253,101,11)" rx="2" ry="2" />
<text  x="58.53" y="1647.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (4 samples, 0.07%)</title><rect x="143.8" y="1621" width="0.9" height="15.0" fill="rgb(207,71,5)" rx="2" ry="2" />
<text  x="146.81" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="15.4" y="293" width="0.2" height="15.0" fill="rgb(246,185,51)" rx="2" ry="2" />
<text  x="18.37" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (4 samples, 0.07%)</title><rect x="527.0" y="1557" width="0.8" height="15.0" fill="rgb(232,127,29)" rx="2" ry="2" />
<text  x="529.97" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1573" width="10.8" height="15.0" fill="rgb(253,130,22)" rx="2" ry="2" />
<text  x="13.21" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.02%)</title><rect x="1123.4" y="1525" width="0.2" height="15.0" fill="rgb(229,148,41)" rx="2" ry="2" />
<text  x="1126.42" y="1535.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="14.9" y="309" width="0.3" height="15.0" fill="rgb(210,47,54)" rx="2" ry="2" />
<text  x="17.94" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="25.5" y="1301" width="0.2" height="15.0" fill="rgb(226,153,22)" rx="2" ry="2" />
<text  x="28.46" y="1311.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="453.3" y="1605" width="0.2" height="15.0" fill="rgb(238,167,7)" rx="2" ry="2" />
<text  x="456.31" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="10.2" y="117" width="0.2" height="15.0" fill="rgb(213,119,9)" rx="2" ry="2" />
<text  x="13.21" y="127.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (20 samples, 0.36%)</title><rect x="22.2" y="1557" width="4.3" height="15.0" fill="rgb(244,186,40)" rx="2" ry="2" />
<text  x="25.24" y="1567.5" ></text>
</g>
<g >
<title>row::row (187 samples, 3.40%)</title><rect x="259.1" y="1461" width="40.2" height="15.0" fill="rgb(245,25,44)" rx="2" ry="2" />
<text  x="262.14" y="1471.5" >row..</text>
</g>
<g >
<title>operator new (10 samples, 0.18%)</title><rect x="1111.0" y="1589" width="2.1" height="15.0" fill="rgb(233,117,32)" rx="2" ry="2" />
<text  x="1113.96" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (3 samples, 0.05%)</title><rect x="725.9" y="1637" width="0.6" height="15.0" fill="rgb(235,198,11)" rx="2" ry="2" />
<text  x="728.86" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="773" width="9.9" height="15.0" fill="rgb(231,213,34)" rx="2" ry="2" />
<text  x="13.21" y="783.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="819.7" y="1525" width="0.4" height="15.0" fill="rgb(230,138,6)" rx="2" ry="2" />
<text  x="822.72" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="23.7" y="1349" width="0.3" height="15.0" fill="rgb(214,129,6)" rx="2" ry="2" />
<text  x="26.75" y="1359.5" ></text>
</g>
<g >
<title>dht::tri_compare (16 samples, 0.29%)</title><rect x="544.8" y="1541" width="3.4" height="15.0" fill="rgb(229,30,16)" rx="2" ry="2" />
<text  x="547.80" y="1551.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (115 samples, 2.09%)</title><rect x="457.6" y="1573" width="24.7" height="15.0" fill="rgb(230,226,2)" rx="2" ry="2" />
<text  x="460.60" y="1583.5" >m..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="860.3" y="1621" width="0.2" height="15.0" fill="rgb(205,143,23)" rx="2" ry="2" />
<text  x="863.31" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="1140.0" y="1637" width="0.4" height="15.0" fill="rgb(236,15,44)" rx="2" ry="2" />
<text  x="1142.96" y="1647.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (104 samples, 1.89%)</title><rect x="556.4" y="1557" width="22.3" height="15.0" fill="rgb(212,53,3)" rx="2" ry="2" />
<text  x="559.40" y="1567.5" >m..</text>
</g>
<g >
<title>db::is_serial_consistency (2 samples, 0.04%)</title><rect x="1108.8" y="1589" width="0.4" height="15.0" fill="rgb(226,155,28)" rx="2" ry="2" />
<text  x="1111.81" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (804 samples, 14.63%)</title><rect x="157.1" y="1605" width="172.7" height="15.0" fill="rgb(242,190,40)" rx="2" ry="2" />
<text  x="160.12" y="1615.5" >flat_mutation_reader::..</text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.02%)</title><rect x="23.1" y="1189" width="0.2" height="15.0" fill="rgb(229,60,52)" rx="2" ry="2" />
<text  x="26.10" y="1199.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="745.0" y="1605" width="0.2" height="15.0" fill="rgb(223,26,52)" rx="2" ry="2" />
<text  x="747.98" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,549 samples, 46.40%)</title><rect x="75.3" y="1653" width="547.5" height="15.0" fill="rgb(231,54,23)" rx="2" ry="2" />
<text  x="78.29" y="1663.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="518.4" y="1541" width="0.8" height="15.0" fill="rgb(241,98,33)" rx="2" ry="2" />
<text  x="521.38" y="1551.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="15.6" y="293" width="0.2" height="15.0" fill="rgb(207,41,11)" rx="2" ry="2" />
<text  x="18.58" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (3 samples, 0.05%)</title><rect x="18.2" y="437" width="0.6" height="15.0" fill="rgb(220,89,9)" rx="2" ry="2" />
<text  x="21.16" y="447.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.89%)</title><rect x="10.2" y="1285" width="10.5" height="15.0" fill="rgb(214,145,17)" rx="2" ry="2" />
<text  x="13.21" y="1295.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.02%)</title><rect x="14.5" y="373" width="0.2" height="15.0" fill="rgb(249,176,40)" rx="2" ry="2" />
<text  x="17.51" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="24.2" y="1397" width="0.2" height="15.0" fill="rgb(250,126,54)" rx="2" ry="2" />
<text  x="27.18" y="1407.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (34 samples, 0.62%)</title><rect x="923.9" y="1573" width="7.3" height="15.0" fill="rgb(227,116,36)" rx="2" ry="2" />
<text  x="926.89" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="20.7" y="1173" width="0.3" height="15.0" fill="rgb(216,134,14)" rx="2" ry="2" />
<text  x="23.74" y="1183.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="706.3" y="1637" width="0.4" height="15.0" fill="rgb(235,171,48)" rx="2" ry="2" />
<text  x="709.32" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1445" width="10.8" height="15.0" fill="rgb(214,87,35)" rx="2" ry="2" />
<text  x="13.21" y="1455.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="23.1" y="1237" width="0.2" height="15.0" fill="rgb(228,215,33)" rx="2" ry="2" />
<text  x="26.10" y="1247.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.07%)</title><rect x="21.0" y="1717" width="0.8" height="15.0" fill="rgb(222,16,21)" rx="2" ry="2" />
<text  x="23.95" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (1 samples, 0.02%)</title><rect x="18.6" y="357" width="0.2" height="15.0" fill="rgb(249,30,17)" rx="2" ry="2" />
<text  x="21.59" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="20.7" y="1013" width="0.3" height="15.0" fill="rgb(210,211,15)" rx="2" ry="2" />
<text  x="23.74" y="1023.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="10.2" y="165" width="0.2" height="15.0" fill="rgb(228,127,28)" rx="2" ry="2" />
<text  x="13.21" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="18.6" y="341" width="0.2" height="15.0" fill="rgb(240,40,4)" rx="2" ry="2" />
<text  x="21.59" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="26.1" y="1477" width="0.2" height="15.0" fill="rgb(217,63,53)" rx="2" ry="2" />
<text  x="29.11" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.02%)</title><rect x="16.4" y="229" width="0.3" height="15.0" fill="rgb(214,193,10)" rx="2" ry="2" />
<text  x="19.44" y="239.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (12 samples, 0.22%)</title><rect x="11.9" y="357" width="2.6" height="15.0" fill="rgb(234,18,37)" rx="2" ry="2" />
<text  x="14.93" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="24.2" y="1365" width="0.2" height="15.0" fill="rgb(251,51,13)" rx="2" ry="2" />
<text  x="27.18" y="1375.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (486 samples, 8.85%)</title><rect x="346.6" y="1589" width="104.3" height="15.0" fill="rgb(223,112,48)" rx="2" ry="2" />
<text  x="349.56" y="1599.5" >seastar::do_..</text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1397" width="10.8" height="15.0" fill="rgb(211,90,49)" rx="2" ry="2" />
<text  x="13.21" y="1407.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.02%)</title><rect x="22.2" y="1413" width="0.3" height="15.0" fill="rgb(227,52,1)" rx="2" ry="2" />
<text  x="25.24" y="1423.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="24.8" y="1269" width="0.2" height="15.0" fill="rgb(225,203,31)" rx="2" ry="2" />
<text  x="27.82" y="1279.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.02%)</title><rect x="655.8" y="1605" width="0.3" height="15.0" fill="rgb(224,122,36)" rx="2" ry="2" />
<text  x="658.84" y="1615.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="14.9" y="325" width="0.3" height="15.0" fill="rgb(205,16,8)" rx="2" ry="2" />
<text  x="17.94" y="335.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.89%)</title><rect x="10.2" y="1237" width="10.5" height="15.0" fill="rgb(245,181,13)" rx="2" ry="2" />
<text  x="13.21" y="1247.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (237 samples, 4.31%)</title><rect x="779.6" y="1589" width="50.9" height="15.0" fill="rgb(236,62,20)" rx="2" ry="2" />
<text  x="782.56" y="1599.5" >servi..</text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (18 samples, 0.33%)</title><rect x="1147.5" y="1637" width="3.8" height="15.0" fill="rgb(233,170,27)" rx="2" ry="2" />
<text  x="1150.47" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.02%)</title><rect x="22.0" y="1589" width="0.2" height="15.0" fill="rgb(234,226,19)" rx="2" ry="2" />
<text  x="25.03" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="18.6" y="197" width="0.2" height="15.0" fill="rgb(220,107,32)" rx="2" ry="2" />
<text  x="21.59" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="23.1" y="1269" width="0.2" height="15.0" fill="rgb(239,196,44)" rx="2" ry="2" />
<text  x="26.10" y="1279.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.05%)</title><rect x="478.6" y="1493" width="0.7" height="15.0" fill="rgb(216,0,18)" rx="2" ry="2" />
<text  x="481.65" y="1503.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.04%)</title><rect x="22.9" y="1397" width="0.4" height="15.0" fill="rgb(248,169,35)" rx="2" ry="2" />
<text  x="25.89" y="1407.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.02%)</title><rect x="848.5" y="1621" width="0.2" height="15.0" fill="rgb(236,90,1)" rx="2" ry="2" />
<text  x="851.50" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="789.0" y="1573" width="0.2" height="15.0" fill="rgb(213,116,48)" rx="2" ry="2" />
<text  x="792.01" y="1583.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="16.2" y="277" width="0.2" height="15.0" fill="rgb(243,181,6)" rx="2" ry="2" />
<text  x="19.23" y="287.5" ></text>
</g>
<g >
<title>row::append_cell (1 samples, 0.02%)</title><rect x="1122.1" y="1509" width="0.2" height="15.0" fill="rgb(214,186,24)" rx="2" ry="2" />
<text  x="1125.13" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="15.2" y="181" width="0.2" height="15.0" fill="rgb(254,211,32)" rx="2" ry="2" />
<text  x="18.15" y="191.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="20.1" y="1029" width="0.2" height="15.0" fill="rgb(216,2,2)" rx="2" ry="2" />
<text  x="23.09" y="1039.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~RuleReturnValue (1 samples, 0.02%)</title><rect x="14.7" y="357" width="0.2" height="15.0" fill="rgb(220,2,18)" rx="2" ry="2" />
<text  x="17.73" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (24 samples, 0.44%)</title><rect x="926.0" y="1557" width="5.2" height="15.0" fill="rgb(209,207,26)" rx="2" ry="2" />
<text  x="929.04" y="1567.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (4 samples, 0.07%)</title><rect x="10.2" y="437" width="0.9" height="15.0" fill="rgb(241,164,12)" rx="2" ry="2" />
<text  x="13.21" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1 samples, 0.02%)</title><rect x="1160.1" y="1685" width="0.3" height="15.0" fill="rgb(206,195,34)" rx="2" ry="2" />
<text  x="1163.15" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="25.5" y="1365" width="0.2" height="15.0" fill="rgb(233,179,38)" rx="2" ry="2" />
<text  x="28.46" y="1375.5" ></text>
</g>
<g >
<title>db::filter_for_query (2 samples, 0.04%)</title><rect x="1069.3" y="1509" width="0.4" height="15.0" fill="rgb(209,35,45)" rx="2" ry="2" />
<text  x="1072.29" y="1519.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="25.0" y="1253" width="0.2" height="15.0" fill="rgb(238,123,12)" rx="2" ry="2" />
<text  x="28.03" y="1263.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (2 samples, 0.04%)</title><rect x="294.6" y="1397" width="0.4" height="15.0" fill="rgb(226,126,47)" rx="2" ry="2" />
<text  x="297.58" y="1407.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="701.2" y="1653" width="0.2" height="15.0" fill="rgb(239,142,44)" rx="2" ry="2" />
<text  x="704.16" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="603.9" y="1541" width="0.4" height="15.0" fill="rgb(222,62,12)" rx="2" ry="2" />
<text  x="606.87" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 0.91%)</title><rect x="10.2" y="1653" width="10.8" height="15.0" fill="rgb(248,52,14)" rx="2" ry="2" />
<text  x="13.21" y="1663.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.07%)</title><rect x="637.6" y="1653" width="0.8" height="15.0" fill="rgb(236,186,2)" rx="2" ry="2" />
<text  x="640.59" y="1663.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.25%)</title><rect x="217.3" y="1477" width="3.0" height="15.0" fill="rgb(248,60,20)" rx="2" ry="2" />
<text  x="220.26" y="1487.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (27 samples, 0.49%)</title><rect x="707.6" y="1653" width="5.8" height="15.0" fill="rgb(250,36,34)" rx="2" ry="2" />
<text  x="710.60" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="24.2" y="1413" width="0.2" height="15.0" fill="rgb(246,88,38)" rx="2" ry="2" />
<text  x="27.18" y="1423.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (4 samples, 0.07%)</title><rect x="10.2" y="421" width="0.9" height="15.0" fill="rgb(234,149,14)" rx="2" ry="2" />
<text  x="13.21" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="31.3" y="1685" width="0.2" height="15.0" fill="rgb(231,181,16)" rx="2" ry="2" />
<text  x="34.26" y="1695.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (10 samples, 0.18%)</title><rect x="1136.7" y="1653" width="2.2" height="15.0" fill="rgb(237,171,30)" rx="2" ry="2" />
<text  x="1139.73" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="19.2" y="229" width="0.3" height="15.0" fill="rgb(233,144,32)" rx="2" ry="2" />
<text  x="22.24" y="239.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.53%)</title><rect x="1002.7" y="1461" width="6.2" height="15.0" fill="rgb(213,181,12)" rx="2" ry="2" />
<text  x="1005.71" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="853" width="9.9" height="15.0" fill="rgb(220,210,25)" rx="2" ry="2" />
<text  x="13.21" y="863.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="1041.6" y="1413" width="0.2" height="15.0" fill="rgb(244,65,4)" rx="2" ry="2" />
<text  x="1044.59" y="1423.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.02%)</title><rect x="20.7" y="1269" width="0.3" height="15.0" fill="rgb(211,99,32)" rx="2" ry="2" />
<text  x="23.74" y="1279.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="18.2" y="277" width="0.2" height="15.0" fill="rgb(233,209,0)" rx="2" ry="2" />
<text  x="21.16" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="713.0" y="1637" width="0.4" height="15.0" fill="rgb(234,166,44)" rx="2" ry="2" />
<text  x="715.97" y="1647.5" ></text>
</g>
<g >
<title>main (5,258 samples, 95.70%)</title><rect x="31.9" y="1781" width="1129.3" height="15.0" fill="rgb(218,203,50)" rx="2" ry="2" />
<text  x="34.91" y="1791.5" >main</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.02%)</title><rect x="16.7" y="229" width="0.2" height="15.0" fill="rgb(238,34,49)" rx="2" ry="2" />
<text  x="19.66" y="239.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.02%)</title><rect x="18.6" y="277" width="0.2" height="15.0" fill="rgb(247,176,5)" rx="2" ry="2" />
<text  x="21.59" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (33 samples, 0.60%)</title><rect x="11.1" y="533" width="7.1" height="15.0" fill="rgb(211,119,35)" rx="2" ry="2" />
<text  x="14.07" y="543.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="559.8" y="1541" width="0.9" height="15.0" fill="rgb(207,213,6)" rx="2" ry="2" />
<text  x="562.84" y="1551.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="10.9" y="261" width="0.2" height="15.0" fill="rgb(224,160,40)" rx="2" ry="2" />
<text  x="13.86" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="15.6" y="213" width="0.2" height="15.0" fill="rgb(225,183,6)" rx="2" ry="2" />
<text  x="18.58" y="223.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.02%)</title><rect x="945.8" y="1557" width="0.2" height="15.0" fill="rgb(212,100,17)" rx="2" ry="2" />
<text  x="948.80" y="1567.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="17.3" y="325" width="0.2" height="15.0" fill="rgb(227,132,19)" rx="2" ry="2" />
<text  x="20.30" y="335.5" ></text>
</g>
<g >
<title>__start_context (33 samples, 0.60%)</title><rect x="11.1" y="581" width="7.1" height="15.0" fill="rgb(213,179,45)" rx="2" ry="2" />
<text  x="14.07" y="591.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (57 samples, 1.04%)</title><rect x="883.1" y="1557" width="12.2" height="15.0" fill="rgb(244,189,13)" rx="2" ry="2" />
<text  x="886.08" y="1567.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.02%)</title><rect x="724.6" y="1637" width="0.2" height="15.0" fill="rgb(222,139,52)" rx="2" ry="2" />
<text  x="727.57" y="1647.5" ></text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::~allocator (1 samples, 0.02%)</title><rect x="22.5" y="1413" width="0.2" height="15.0" fill="rgb(250,213,3)" rx="2" ry="2" />
<text  x="25.46" y="1423.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="19.0" y="309" width="0.2" height="15.0" fill="rgb(219,51,51)" rx="2" ry="2" />
<text  x="22.02" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (44 samples, 0.80%)</title><rect x="691.9" y="1669" width="9.5" height="15.0" fill="rgb(240,20,10)" rx="2" ry="2" />
<text  x="694.93" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="14.9" y="341" width="0.3" height="15.0" fill="rgb(232,77,34)" rx="2" ry="2" />
<text  x="17.94" y="351.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.02%)</title><rect x="490.5" y="1589" width="0.2" height="15.0" fill="rgb(253,64,54)" rx="2" ry="2" />
<text  x="493.46" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="20.3" y="837" width="0.2" height="15.0" fill="rgb(225,207,49)" rx="2" ry="2" />
<text  x="23.31" y="847.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.04%)</title><rect x="22.9" y="1317" width="0.4" height="15.0" fill="rgb(226,93,54)" rx="2" ry="2" />
<text  x="25.89" y="1327.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="15.6" y="245" width="0.2" height="15.0" fill="rgb(223,13,37)" rx="2" ry="2" />
<text  x="18.58" y="255.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (3 samples, 0.05%)</title><rect x="345.5" y="1589" width="0.6" height="15.0" fill="rgb(235,1,1)" rx="2" ry="2" />
<text  x="348.49" y="1599.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="995.0" y="1477" width="0.2" height="15.0" fill="rgb(206,155,16)" rx="2" ry="2" />
<text  x="997.98" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="808.3" y="1509" width="0.5" height="15.0" fill="rgb(216,94,10)" rx="2" ry="2" />
<text  x="811.34" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (6 samples, 0.11%)</title><rect x="25.2" y="1525" width="1.3" height="15.0" fill="rgb(222,14,44)" rx="2" ry="2" />
<text  x="28.25" y="1535.5" ></text>
</g>
<g >
<title>create_partitions (6 samples, 0.11%)</title><rect x="18.8" y="533" width="1.3" height="15.0" fill="rgb(240,1,11)" rx="2" ry="2" />
<text  x="21.81" y="543.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (3 samples, 0.05%)</title><rect x="248.4" y="1445" width="0.6" height="15.0" fill="rgb(230,123,50)" rx="2" ry="2" />
<text  x="251.41" y="1455.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="18.6" y="325" width="0.2" height="15.0" fill="rgb(206,31,1)" rx="2" ry="2" />
<text  x="21.59" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="84.5" y="1637" width="0.2" height="15.0" fill="rgb(222,45,30)" rx="2" ry="2" />
<text  x="87.53" y="1647.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (23 samples, 0.42%)</title><rect x="272.9" y="1429" width="4.9" height="15.0" fill="rgb(252,89,33)" rx="2" ry="2" />
<text  x="275.89" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.05%)</title><rect x="705.0" y="1653" width="0.7" height="15.0" fill="rgb(228,22,5)" rx="2" ry="2" />
<text  x="708.03" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.15%)</title><rect x="1111.4" y="1573" width="1.7" height="15.0" fill="rgb(205,55,25)" rx="2" ry="2" />
<text  x="1114.39" y="1583.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="10.6" y="277" width="0.3" height="15.0" fill="rgb(227,167,29)" rx="2" ry="2" />
<text  x="13.64" y="287.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (8 samples, 0.15%)</title><rect x="26.5" y="1749" width="1.8" height="15.0" fill="rgb(216,38,10)" rx="2" ry="2" />
<text  x="29.54" y="1759.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (4 samples, 0.07%)</title><rect x="981.7" y="1509" width="0.8" height="15.0" fill="rgb(216,117,42)" rx="2" ry="2" />
<text  x="984.66" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (14 samples, 0.25%)</title><rect x="22.2" y="1493" width="3.0" height="15.0" fill="rgb(208,219,24)" rx="2" ry="2" />
<text  x="25.24" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="618.0" y="1621" width="0.3" height="15.0" fill="rgb(238,188,9)" rx="2" ry="2" />
<text  x="621.04" y="1631.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="463.6" y="1541" width="0.4" height="15.0" fill="rgb(236,14,12)" rx="2" ry="2" />
<text  x="466.61" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="933" width="9.9" height="15.0" fill="rgb(219,114,53)" rx="2" ry="2" />
<text  x="13.21" y="943.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="31.7" y="1749" width="0.2" height="15.0" fill="rgb(235,47,5)" rx="2" ry="2" />
<text  x="34.69" y="1759.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.05%)</title><rect x="100.0" y="1637" width="0.6" height="15.0" fill="rgb(211,55,34)" rx="2" ry="2" />
<text  x="102.99" y="1647.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (2 samples, 0.04%)</title><rect x="32.3" y="1685" width="0.5" height="15.0" fill="rgb(244,15,40)" rx="2" ry="2" />
<text  x="35.34" y="1695.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="10.6" y="293" width="0.3" height="15.0" fill="rgb(238,214,46)" rx="2" ry="2" />
<text  x="13.64" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.02%)</title><rect x="16.4" y="309" width="0.3" height="15.0" fill="rgb(208,101,54)" rx="2" ry="2" />
<text  x="19.44" y="319.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="18.2" y="357" width="0.2" height="15.0" fill="rgb(236,1,23)" rx="2" ry="2" />
<text  x="21.16" y="367.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.02%)</title><rect x="20.7" y="1237" width="0.3" height="15.0" fill="rgb(242,85,46)" rx="2" ry="2" />
<text  x="23.74" y="1247.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="946.2" y="1557" width="0.2" height="15.0" fill="rgb(208,39,5)" rx="2" ry="2" />
<text  x="949.22" y="1567.5" ></text>
</g>
<g >
<title>query::querier_base::close (169 samples, 3.08%)</title><rect x="454.4" y="1621" width="36.3" height="15.0" fill="rgb(231,53,27)" rx="2" ry="2" />
<text  x="457.38" y="1631.5" >que..</text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (17 samples, 0.31%)</title><rect x="549.3" y="1525" width="3.7" height="15.0" fill="rgb(231,145,0)" rx="2" ry="2" />
<text  x="552.31" y="1535.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (10 samples, 0.18%)</title><rect x="302.1" y="1493" width="2.1" height="15.0" fill="rgb(207,195,50)" rx="2" ry="2" />
<text  x="305.10" y="1503.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.07%)</title><rect x="10.2" y="405" width="0.9" height="15.0" fill="rgb(217,111,15)" rx="2" ry="2" />
<text  x="13.21" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="24.4" y="1333" width="0.4" height="15.0" fill="rgb(234,229,21)" rx="2" ry="2" />
<text  x="27.39" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="25.5" y="1253" width="0.2" height="15.0" fill="rgb(243,177,44)" rx="2" ry="2" />
<text  x="28.46" y="1263.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (4 samples, 0.07%)</title><rect x="728.7" y="1621" width="0.8" height="15.0" fill="rgb(227,167,25)" rx="2" ry="2" />
<text  x="731.65" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (2 samples, 0.04%)</title><rect x="33.6" y="1685" width="0.5" height="15.0" fill="rgb(233,138,13)" rx="2" ry="2" />
<text  x="36.63" y="1695.5" ></text>
</g>
<g >
<title>malloc (9 samples, 0.16%)</title><rect x="612.7" y="1589" width="1.9" height="15.0" fill="rgb(231,7,47)" rx="2" ry="2" />
<text  x="615.67" y="1599.5" ></text>
</g>
<g >
<title>posix_memalign (5 samples, 0.09%)</title><rect x="298.0" y="1413" width="1.1" height="15.0" fill="rgb(218,206,51)" rx="2" ry="2" />
<text  x="301.02" y="1423.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (367 samples, 6.68%)</title><rect x="222.8" y="1493" width="78.9" height="15.0" fill="rgb(243,48,0)" rx="2" ry="2" />
<text  x="225.85" y="1503.5" >partition..</text>
</g>
<g >
<title>cql3::query_options::query_options (34 samples, 0.62%)</title><rect x="737.9" y="1637" width="7.3" height="15.0" fill="rgb(244,152,48)" rx="2" ry="2" />
<text  x="740.89" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.02%)</title><rect x="16.2" y="213" width="0.2" height="15.0" fill="rgb(207,150,46)" rx="2" ry="2" />
<text  x="19.23" y="223.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="15.2" y="293" width="0.2" height="15.0" fill="rgb(244,16,20)" rx="2" ry="2" />
<text  x="18.15" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.46%)</title><rect x="1003.6" y="1445" width="5.3" height="15.0" fill="rgb(231,95,20)" rx="2" ry="2" />
<text  x="1006.57" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="12.8" y="181" width="0.2" height="15.0" fill="rgb(246,175,17)" rx="2" ry="2" />
<text  x="15.79" y="191.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="15.2" y="261" width="0.2" height="15.0" fill="rgb(207,129,40)" rx="2" ry="2" />
<text  x="18.15" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (1 samples, 0.02%)</title><rect x="11.5" y="405" width="0.2" height="15.0" fill="rgb(214,95,6)" rx="2" ry="2" />
<text  x="14.50" y="415.5" ></text>
</g>
<g >
<title>query_result_builder::query_result_builder (1 samples, 0.02%)</title><rect x="84.3" y="1637" width="0.2" height="15.0" fill="rgb(238,43,6)" rx="2" ry="2" />
<text  x="87.31" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.04%)</title><rect x="16.7" y="277" width="0.4" height="15.0" fill="rgb(223,188,1)" rx="2" ry="2" />
<text  x="19.66" y="287.5" ></text>
</g>
<g >
<title>database::has_keyspace (3 samples, 0.05%)</title><rect x="847.0" y="1605" width="0.6" height="15.0" fill="rgb(225,188,5)" rx="2" ry="2" />
<text  x="850.00" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="24.8" y="1413" width="0.2" height="15.0" fill="rgb(243,48,11)" rx="2" ry="2" />
<text  x="27.82" y="1423.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (4 samples, 0.07%)</title><rect x="21.0" y="1653" width="0.8" height="15.0" fill="rgb(250,109,17)" rx="2" ry="2" />
<text  x="23.95" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (33 samples, 0.60%)</title><rect x="11.1" y="565" width="7.1" height="15.0" fill="rgb(217,29,32)" rx="2" ry="2" />
<text  x="14.07" y="575.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (78 samples, 1.42%)</title><rect x="184.6" y="1541" width="16.8" height="15.0" fill="rgb(245,99,45)" rx="2" ry="2" />
<text  x="187.62" y="1551.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (37 samples, 0.67%)</title><rect x="653.3" y="1637" width="7.9" height="15.0" fill="rgb(245,165,48)" rx="2" ry="2" />
<text  x="656.27" y="1647.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="22.0" y="1605" width="0.2" height="15.0" fill="rgb(236,171,3)" rx="2" ry="2" />
<text  x="25.03" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.02%)</title><rect x="24.2" y="1445" width="0.2" height="15.0" fill="rgb(230,89,21)" rx="2" ry="2" />
<text  x="27.18" y="1455.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="852.6" y="1669" width="0.4" height="15.0" fill="rgb(234,159,21)" rx="2" ry="2" />
<text  x="855.58" y="1679.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (30 samples, 0.55%)</title><rect x="144.7" y="1621" width="6.4" height="15.0" fill="rgb(211,57,13)" rx="2" ry="2" />
<text  x="147.67" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.02%)</title><rect x="20.1" y="869" width="0.2" height="15.0" fill="rgb(215,176,17)" rx="2" ry="2" />
<text  x="23.09" y="879.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.15%)</title><rect x="63.9" y="1669" width="1.7" height="15.0" fill="rgb(239,103,23)" rx="2" ry="2" />
<text  x="66.91" y="1679.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (8 samples, 0.15%)</title><rect x="71.0" y="1653" width="1.7" height="15.0" fill="rgb(210,195,6)" rx="2" ry="2" />
<text  x="74.00" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="1122.6" y="1573" width="0.2" height="15.0" fill="rgb(231,13,29)" rx="2" ry="2" />
<text  x="1125.56" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (8 samples, 0.15%)</title><rect x="633.1" y="1653" width="1.7" height="15.0" fill="rgb(244,196,48)" rx="2" ry="2" />
<text  x="636.08" y="1663.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (3 samples, 0.05%)</title><rect x="872.8" y="1589" width="0.6" height="15.0" fill="rgb(230,201,1)" rx="2" ry="2" />
<text  x="875.77" y="1599.5" ></text>
</g>
<g >
<title>db::block_for (2 samples, 0.04%)</title><rect x="1068.4" y="1493" width="0.5" height="15.0" fill="rgb(211,16,33)" rx="2" ry="2" />
<text  x="1071.43" y="1503.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="603.4" y="1525" width="0.5" height="15.0" fill="rgb(239,166,32)" rx="2" ry="2" />
<text  x="606.44" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="661" width="9.9" height="15.0" fill="rgb(236,82,42)" rx="2" ry="2" />
<text  x="13.21" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (6 samples, 0.11%)</title><rect x="451.2" y="1589" width="1.2" height="15.0" fill="rgb(245,121,27)" rx="2" ry="2" />
<text  x="454.16" y="1599.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (1 samples, 0.02%)</title><rect x="455.2" y="1605" width="0.3" height="15.0" fill="rgb(229,102,2)" rx="2" ry="2" />
<text  x="458.24" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="72.7" y="1653" width="0.2" height="15.0" fill="rgb(226,58,27)" rx="2" ry="2" />
<text  x="75.72" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="18.2" y="309" width="0.2" height="15.0" fill="rgb(233,31,28)" rx="2" ry="2" />
<text  x="21.16" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (22 samples, 0.40%)</title><rect x="49.1" y="1637" width="4.7" height="15.0" fill="rgb(207,118,3)" rx="2" ry="2" />
<text  x="52.09" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (30 samples, 0.55%)</title><rect x="11.7" y="389" width="6.5" height="15.0" fill="rgb(238,29,8)" rx="2" ry="2" />
<text  x="14.72" y="399.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (15 samples, 0.27%)</title><rect x="1115.0" y="1573" width="3.3" height="15.0" fill="rgb(207,186,36)" rx="2" ry="2" />
<text  x="1118.04" y="1583.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.35%)</title><rect x="963.8" y="1525" width="4.1" height="15.0" fill="rgb(254,74,11)" rx="2" ry="2" />
<text  x="966.84" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2 samples, 0.04%)</title><rect x="315.6" y="1509" width="0.5" height="15.0" fill="rgb(229,147,7)" rx="2" ry="2" />
<text  x="318.63" y="1519.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="20.3" y="1109" width="0.2" height="15.0" fill="rgb(226,102,54)" rx="2" ry="2" />
<text  x="23.31" y="1119.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.18%)</title><rect x="342.9" y="1573" width="2.2" height="15.0" fill="rgb(245,22,11)" rx="2" ry="2" />
<text  x="345.91" y="1583.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.15%)</title><rect x="43.1" y="1653" width="1.7" height="15.0" fill="rgb(234,209,5)" rx="2" ry="2" />
<text  x="46.08" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="19.0" y="277" width="0.2" height="15.0" fill="rgb(219,91,41)" rx="2" ry="2" />
<text  x="22.02" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_Deque_base (1 samples, 0.02%)</title><rect x="11.5" y="293" width="0.2" height="15.0" fill="rgb(216,35,37)" rx="2" ry="2" />
<text  x="14.50" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (1 samples, 0.02%)</title><rect x="925.6" y="1557" width="0.2" height="15.0" fill="rgb(230,214,26)" rx="2" ry="2" />
<text  x="928.61" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.02%)</title><rect x="23.7" y="1429" width="0.3" height="15.0" fill="rgb(230,1,23)" rx="2" ry="2" />
<text  x="26.75" y="1439.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="590.5" y="1573" width="1.1" height="15.0" fill="rgb(216,27,2)" rx="2" ry="2" />
<text  x="593.55" y="1583.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (16 samples, 0.29%)</title><rect x="1103.7" y="1573" width="3.4" height="15.0" fill="rgb(223,166,1)" rx="2" ry="2" />
<text  x="1106.66" y="1583.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.07%)</title><rect x="699.9" y="1653" width="0.8" height="15.0" fill="rgb(235,179,35)" rx="2" ry="2" />
<text  x="702.87" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="31.3" y="1765" width="0.2" height="15.0" fill="rgb(209,224,18)" rx="2" ry="2" />
<text  x="34.26" y="1775.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.05%)</title><rect x="22.9" y="1429" width="0.6" height="15.0" fill="rgb(222,182,39)" rx="2" ry="2" />
<text  x="25.89" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.02%)</title><rect x="17.1" y="213" width="0.2" height="15.0" fill="rgb(219,153,20)" rx="2" ry="2" />
<text  x="20.09" y="223.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="481.2" y="1541" width="0.2" height="15.0" fill="rgb(225,167,7)" rx="2" ry="2" />
<text  x="484.23" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.02%)</title><rect x="12.6" y="261" width="0.2" height="15.0" fill="rgb(226,189,31)" rx="2" ry="2" />
<text  x="15.58" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (164 samples, 2.99%)</title><rect x="455.5" y="1605" width="35.2" height="15.0" fill="rgb(211,156,20)" rx="2" ry="2" />
<text  x="458.45" y="1615.5" >st..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (12 samples, 0.22%)</title><rect x="11.9" y="341" width="2.6" height="15.0" fill="rgb(226,216,38)" rx="2" ry="2" />
<text  x="14.93" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="614.6" y="1589" width="0.2" height="15.0" fill="rgb(242,190,54)" rx="2" ry="2" />
<text  x="617.61" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.02%)</title><rect x="20.5" y="965" width="0.2" height="15.0" fill="rgb(206,21,36)" rx="2" ry="2" />
<text  x="23.52" y="975.5" ></text>
</g>
<g >
<title>dht::minimum_token (1 samples, 0.02%)</title><rect x="508.3" y="1557" width="0.2" height="15.0" fill="rgb(227,25,44)" rx="2" ry="2" />
<text  x="511.29" y="1567.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (4 samples, 0.07%)</title><rect x="10.2" y="469" width="0.9" height="15.0" fill="rgb(219,204,8)" rx="2" ry="2" />
<text  x="13.21" y="479.5" ></text>
</g>
<g >
<title>std::forward&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="14.9" y="261" width="0.3" height="15.0" fill="rgb(236,114,22)" rx="2" ry="2" />
<text  x="17.94" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (1 samples, 0.02%)</title><rect x="482.5" y="1573" width="0.2" height="15.0" fill="rgb(206,110,4)" rx="2" ry="2" />
<text  x="485.52" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="16.2" y="149" width="0.2" height="15.0" fill="rgb(238,167,32)" rx="2" ry="2" />
<text  x="19.23" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.04%)</title><rect x="849.1" y="1653" width="0.5" height="15.0" fill="rgb(234,103,53)" rx="2" ry="2" />
<text  x="852.14" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (21 samples, 0.38%)</title><rect x="26.5" y="1765" width="4.5" height="15.0" fill="rgb(218,108,34)" rx="2" ry="2" />
<text  x="29.54" y="1775.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;**&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="11.5" y="245" width="0.2" height="15.0" fill="rgb(224,110,30)" rx="2" ry="2" />
<text  x="14.50" y="255.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="1045" width="9.9" height="15.0" fill="rgb(232,90,52)" rx="2" ry="2" />
<text  x="13.21" y="1055.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="208.0" y="1509" width="0.2" height="15.0" fill="rgb(248,174,16)" rx="2" ry="2" />
<text  x="211.03" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (4 samples, 0.07%)</title><rect x="10.2" y="357" width="0.9" height="15.0" fill="rgb(242,59,20)" rx="2" ry="2" />
<text  x="13.21" y="367.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (2 samples, 0.04%)</title><rect x="970.7" y="1525" width="0.4" height="15.0" fill="rgb(245,93,28)" rx="2" ry="2" />
<text  x="973.71" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.02%)</title><rect x="18.4" y="373" width="0.2" height="15.0" fill="rgb(211,129,24)" rx="2" ry="2" />
<text  x="21.38" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.04%)</title><rect x="329.4" y="1573" width="0.4" height="15.0" fill="rgb(251,155,43)" rx="2" ry="2" />
<text  x="332.38" y="1583.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="15.6" y="117" width="0.2" height="15.0" fill="rgb(246,90,38)" rx="2" ry="2" />
<text  x="18.58" y="127.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="981" width="9.9" height="15.0" fill="rgb(231,83,7)" rx="2" ry="2" />
<text  x="13.21" y="991.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.16%)</title><rect x="612.7" y="1573" width="1.9" height="15.0" fill="rgb(211,175,33)" rx="2" ry="2" />
<text  x="615.67" y="1583.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.09%)</title><rect x="548.2" y="1525" width="1.1" height="15.0" fill="rgb(237,92,18)" rx="2" ry="2" />
<text  x="551.24" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.02%)</title><rect x="20.3" y="933" width="0.2" height="15.0" fill="rgb(233,220,41)" rx="2" ry="2" />
<text  x="23.31" y="943.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="65.6" y="1669" width="0.2" height="15.0" fill="rgb(206,2,16)" rx="2" ry="2" />
<text  x="68.63" y="1679.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="25.5" y="1285" width="0.2" height="15.0" fill="rgb(217,152,11)" rx="2" ry="2" />
<text  x="28.46" y="1295.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (1 samples, 0.02%)</title><rect x="838.6" y="1621" width="0.2" height="15.0" fill="rgb(223,173,18)" rx="2" ry="2" />
<text  x="841.62" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (30 samples, 0.55%)</title><rect x="11.7" y="405" width="6.5" height="15.0" fill="rgb(225,150,35)" rx="2" ry="2" />
<text  x="14.72" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="17.1" y="261" width="0.2" height="15.0" fill="rgb(223,179,51)" rx="2" ry="2" />
<text  x="20.09" y="271.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.02%)</title><rect x="20.7" y="1205" width="0.3" height="15.0" fill="rgb(232,84,29)" rx="2" ry="2" />
<text  x="23.74" y="1215.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.02%)</title><rect x="994.6" y="1477" width="0.2" height="15.0" fill="rgb(214,178,38)" rx="2" ry="2" />
<text  x="997.55" y="1487.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (49 samples, 0.89%)</title><rect x="921.7" y="1589" width="10.6" height="15.0" fill="rgb(237,133,40)" rx="2" ry="2" />
<text  x="924.74" y="1599.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.02%)</title><rect x="882.0" y="1573" width="0.2" height="15.0" fill="rgb(239,53,39)" rx="2" ry="2" />
<text  x="885.01" y="1583.5" ></text>
</g>
<g >
<title>free (3 samples, 0.05%)</title><rect x="373.4" y="1541" width="0.7" height="15.0" fill="rgb(245,189,14)" rx="2" ry="2" />
<text  x="376.41" y="1551.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.09%)</title><rect x="670.4" y="1653" width="1.1" height="15.0" fill="rgb(233,117,54)" rx="2" ry="2" />
<text  x="673.45" y="1663.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (20 samples, 0.36%)</title><rect x="309.0" y="1493" width="4.3" height="15.0" fill="rgb(245,149,17)" rx="2" ry="2" />
<text  x="311.97" y="1503.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (3 samples, 0.05%)</title><rect x="18.2" y="485" width="0.6" height="15.0" fill="rgb(217,130,42)" rx="2" ry="2" />
<text  x="21.16" y="495.5" ></text>
</g>
<g >
<title>table::set_hit_rate (14 samples, 0.25%)</title><rect x="726.5" y="1637" width="3.0" height="15.0" fill="rgb(220,118,1)" rx="2" ry="2" />
<text  x="729.51" y="1647.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (56 samples, 1.02%)</title><rect x="701.6" y="1669" width="12.0" height="15.0" fill="rgb(206,69,2)" rx="2" ry="2" />
<text  x="704.59" y="1679.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (14 samples, 0.25%)</title><rect x="809.0" y="1509" width="3.0" height="15.0" fill="rgb(247,106,18)" rx="2" ry="2" />
<text  x="811.98" y="1519.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (33 samples, 0.60%)</title><rect x="1032.1" y="1397" width="7.1" height="15.0" fill="rgb(205,140,33)" rx="2" ry="2" />
<text  x="1035.14" y="1407.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (5 samples, 0.09%)</title><rect x="634.8" y="1653" width="1.1" height="15.0" fill="rgb(227,148,14)" rx="2" ry="2" />
<text  x="637.79" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.07%)</title><rect x="1123.6" y="1669" width="0.9" height="15.0" fill="rgb(236,115,7)" rx="2" ry="2" />
<text  x="1126.63" y="1679.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="23.7" y="1269" width="0.3" height="15.0" fill="rgb(241,8,39)" rx="2" ry="2" />
<text  x="26.75" y="1279.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (1 samples, 0.02%)</title><rect x="1155.2" y="1669" width="0.2" height="15.0" fill="rgb(226,115,32)" rx="2" ry="2" />
<text  x="1158.21" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (6 samples, 0.11%)</title><rect x="25.2" y="1541" width="1.3" height="15.0" fill="rgb(210,135,12)" rx="2" ry="2" />
<text  x="28.25" y="1551.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="11.5" y="213" width="0.2" height="15.0" fill="rgb(246,124,7)" rx="2" ry="2" />
<text  x="14.50" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="1122.6" y="1461" width="0.2" height="15.0" fill="rgb(242,137,0)" rx="2" ry="2" />
<text  x="1125.56" y="1471.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.02%)</title><rect x="939.1" y="1573" width="0.3" height="15.0" fill="rgb(228,178,31)" rx="2" ry="2" />
<text  x="942.14" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="96.3" y="1605" width="0.5" height="15.0" fill="rgb(230,54,44)" rx="2" ry="2" />
<text  x="99.34" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.09%)</title><rect x="53.8" y="1637" width="1.1" height="15.0" fill="rgb(232,107,12)" rx="2" ry="2" />
<text  x="56.82" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="18.6" y="229" width="0.2" height="15.0" fill="rgb(253,196,28)" rx="2" ry="2" />
<text  x="21.59" y="239.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.02%)</title><rect x="31.7" y="1589" width="0.2" height="15.0" fill="rgb(215,74,12)" rx="2" ry="2" />
<text  x="34.69" y="1599.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.05%)</title><rect x="11.9" y="245" width="0.7" height="15.0" fill="rgb(249,11,2)" rx="2" ry="2" />
<text  x="14.93" y="255.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="31.0" y="1781" width="0.3" height="15.0" fill="rgb(217,126,25)" rx="2" ry="2" />
<text  x="34.05" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="26.1" y="1253" width="0.2" height="15.0" fill="rgb(216,93,51)" rx="2" ry="2" />
<text  x="29.11" y="1263.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (20 samples, 0.36%)</title><rect x="431.2" y="1573" width="4.3" height="15.0" fill="rgb(213,29,52)" rx="2" ry="2" />
<text  x="434.18" y="1583.5" ></text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::allocator (1 samples, 0.02%)</title><rect x="23.1" y="1141" width="0.2" height="15.0" fill="rgb(231,116,3)" rx="2" ry="2" />
<text  x="26.10" y="1151.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (2,608 samples, 47.47%)</title><rect x="65.8" y="1669" width="560.2" height="15.0" fill="rgb(224,165,19)" rx="2" ry="2" />
<text  x="68.84" y="1679.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.35%)</title><rect x="519.5" y="1525" width="4.0" height="15.0" fill="rgb(228,47,16)" rx="2" ry="2" />
<text  x="522.46" y="1535.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.02%)</title><rect x="1074.9" y="1493" width="0.2" height="15.0" fill="rgb(234,62,5)" rx="2" ry="2" />
<text  x="1077.88" y="1503.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.02%)</title><rect x="816.7" y="1493" width="0.2" height="15.0" fill="rgb(217,137,15)" rx="2" ry="2" />
<text  x="819.71" y="1503.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.02%)</title><rect x="20.3" y="1077" width="0.2" height="15.0" fill="rgb(240,42,19)" rx="2" ry="2" />
<text  x="23.31" y="1087.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.24%)</title><rect x="1140.6" y="1637" width="2.8" height="15.0" fill="rgb(215,16,47)" rx="2" ry="2" />
<text  x="1143.60" y="1647.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="21.2" y="1477" width="0.2" height="15.0" fill="rgb(243,224,36)" rx="2" ry="2" />
<text  x="24.17" y="1487.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="994.8" y="1477" width="0.2" height="15.0" fill="rgb(225,62,19)" rx="2" ry="2" />
<text  x="997.77" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="24.2" y="1333" width="0.2" height="15.0" fill="rgb(230,2,26)" rx="2" ry="2" />
<text  x="27.18" y="1343.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (2 samples, 0.04%)</title><rect x="604.5" y="1541" width="0.4" height="15.0" fill="rgb(216,129,15)" rx="2" ry="2" />
<text  x="607.51" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="15.2" y="213" width="0.2" height="15.0" fill="rgb(208,101,32)" rx="2" ry="2" />
<text  x="18.15" y="223.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="31.7" y="1685" width="0.2" height="15.0" fill="rgb(205,183,24)" rx="2" ry="2" />
<text  x="34.69" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (1 samples, 0.02%)</title><rect x="731.2" y="1669" width="0.2" height="15.0" fill="rgb(245,144,28)" rx="2" ry="2" />
<text  x="734.23" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (7 samples, 0.13%)</title><rect x="12.6" y="293" width="1.5" height="15.0" fill="rgb(218,115,54)" rx="2" ry="2" />
<text  x="15.58" y="303.5" ></text>
</g>
<g >
<title>row_cache::update (1 samples, 0.02%)</title><rect x="1123.4" y="1637" width="0.2" height="15.0" fill="rgb(244,59,38)" rx="2" ry="2" />
<text  x="1126.42" y="1647.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="328.9" y="1573" width="0.3" height="15.0" fill="rgb(243,172,44)" rx="2" ry="2" />
<text  x="331.95" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="1013" width="9.9" height="15.0" fill="rgb(228,1,20)" rx="2" ry="2" />
<text  x="13.21" y="1023.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="591.6" y="1573" width="0.2" height="15.0" fill="rgb(206,191,40)" rx="2" ry="2" />
<text  x="594.62" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::run_and_dispose (1 samples, 0.02%)</title><rect x="854.7" y="1669" width="0.2" height="15.0" fill="rgb(206,46,39)" rx="2" ry="2" />
<text  x="857.73" y="1679.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="245.2" y="1461" width="1.1" height="15.0" fill="rgb(232,222,0)" rx="2" ry="2" />
<text  x="248.18" y="1471.5" ></text>
</g>
<g >
<title>seastar::reactor::run (5,256 samples, 95.67%)</title><rect x="31.9" y="1717" width="1128.9" height="15.0" fill="rgb(247,133,40)" rx="2" ry="2" />
<text  x="34.91" y="1727.5" >seastar::reactor::run</text>
</g>
<g >
<title>operator delete (19 samples, 0.35%)</title><rect x="134.8" y="1621" width="4.1" height="15.0" fill="rgb(232,176,43)" rx="2" ry="2" />
<text  x="137.79" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.02%)</title><rect x="21.2" y="1509" width="0.2" height="15.0" fill="rgb(251,88,20)" rx="2" ry="2" />
<text  x="24.17" y="1519.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (1 samples, 0.02%)</title><rect x="713.4" y="1653" width="0.2" height="15.0" fill="rgb(205,126,0)" rx="2" ry="2" />
<text  x="716.40" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1047.4" y="1445" width="0.2" height="15.0" fill="rgb(246,8,22)" rx="2" ry="2" />
<text  x="1050.39" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="885.4" y="1493" width="0.9" height="15.0" fill="rgb(244,85,43)" rx="2" ry="2" />
<text  x="888.44" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="20.7" y="1093" width="0.3" height="15.0" fill="rgb(228,107,24)" rx="2" ry="2" />
<text  x="23.74" y="1103.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (43 samples, 0.78%)</title><rect x="1099.6" y="1589" width="9.2" height="15.0" fill="rgb(236,35,21)" rx="2" ry="2" />
<text  x="1102.58" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.35%)</title><rect x="128.3" y="1589" width="4.1" height="15.0" fill="rgb(241,200,50)" rx="2" ry="2" />
<text  x="131.34" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.02%)</title><rect x="19.2" y="405" width="0.3" height="15.0" fill="rgb(234,214,46)" rx="2" ry="2" />
<text  x="22.24" y="415.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="419.4" y="1557" width="0.2" height="15.0" fill="rgb(225,114,25)" rx="2" ry="2" />
<text  x="422.37" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.24%)</title><rect x="217.5" y="1461" width="2.8" height="15.0" fill="rgb(240,52,47)" rx="2" ry="2" />
<text  x="220.48" y="1471.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (31 samples, 0.56%)</title><rect x="178.0" y="1541" width="6.6" height="15.0" fill="rgb(228,158,5)" rx="2" ry="2" />
<text  x="180.96" y="1551.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (3 samples, 0.05%)</title><rect x="1068.2" y="1509" width="0.7" height="15.0" fill="rgb(237,86,33)" rx="2" ry="2" />
<text  x="1071.22" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="16.2" y="165" width="0.2" height="15.0" fill="rgb(229,110,33)" rx="2" ry="2" />
<text  x="19.23" y="175.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.02%)</title><rect x="431.0" y="1573" width="0.2" height="15.0" fill="rgb(238,16,6)" rx="2" ry="2" />
<text  x="433.97" y="1583.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.15%)</title><rect x="1109.2" y="1589" width="1.8" height="15.0" fill="rgb(205,202,45)" rx="2" ry="2" />
<text  x="1112.24" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.02%)</title><rect x="20.3" y="981" width="0.2" height="15.0" fill="rgb(219,74,16)" rx="2" ry="2" />
<text  x="23.31" y="991.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="700.7" y="1653" width="0.2" height="15.0" fill="rgb(234,213,30)" rx="2" ry="2" />
<text  x="703.73" y="1663.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (2 samples, 0.04%)</title><rect x="1096.4" y="1493" width="0.4" height="15.0" fill="rgb(219,163,40)" rx="2" ry="2" />
<text  x="1099.36" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="19.0" y="373" width="0.2" height="15.0" fill="rgb(240,209,22)" rx="2" ry="2" />
<text  x="22.02" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (3 samples, 0.05%)</title><rect x="380.7" y="1573" width="0.7" height="15.0" fill="rgb(251,62,39)" rx="2" ry="2" />
<text  x="383.71" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="20.7" y="1301" width="0.3" height="15.0" fill="rgb(214,54,50)" rx="2" ry="2" />
<text  x="23.74" y="1311.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="787.5" y="1557" width="1.3" height="15.0" fill="rgb(243,142,23)" rx="2" ry="2" />
<text  x="790.50" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (3 samples, 0.05%)</title><rect x="894.7" y="1525" width="0.6" height="15.0" fill="rgb(208,21,46)" rx="2" ry="2" />
<text  x="897.68" y="1535.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.18%)</title><rect x="464.3" y="1557" width="2.1" height="15.0" fill="rgb(251,97,53)" rx="2" ry="2" />
<text  x="467.26" y="1567.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (2 samples, 0.04%)</title><rect x="80.7" y="1637" width="0.4" height="15.0" fill="rgb(215,33,24)" rx="2" ry="2" />
<text  x="83.66" y="1647.5" ></text>
</g>
<g >
<title>database::find_schema (12 samples, 0.22%)</title><rect x="824.7" y="1557" width="2.5" height="15.0" fill="rgb(226,142,9)" rx="2" ry="2" />
<text  x="827.66" y="1567.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="690.9" y="1637" width="1.0" height="15.0" fill="rgb(246,135,38)" rx="2" ry="2" />
<text  x="693.85" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="22.0" y="1669" width="0.2" height="15.0" fill="rgb(245,39,15)" rx="2" ry="2" />
<text  x="25.03" y="1679.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (2 samples, 0.04%)</title><rect x="235.3" y="1461" width="0.4" height="15.0" fill="rgb(239,140,21)" rx="2" ry="2" />
<text  x="238.30" y="1471.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.07%)</title><rect x="615.2" y="1621" width="0.9" height="15.0" fill="rgb(219,95,27)" rx="2" ry="2" />
<text  x="618.25" y="1631.5" ></text>
</g>
<g >
<title>db::block_for (2 samples, 0.04%)</title><rect x="1068.9" y="1509" width="0.4" height="15.0" fill="rgb(252,191,22)" rx="2" ry="2" />
<text  x="1071.86" y="1519.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (99 samples, 1.80%)</title><rect x="1075.1" y="1493" width="21.3" height="15.0" fill="rgb(237,203,48)" rx="2" ry="2" />
<text  x="1078.09" y="1503.5" >l..</text>
</g>
<g >
<title>operator new (8 samples, 0.15%)</title><rect x="601.7" y="1525" width="1.7" height="15.0" fill="rgb(225,10,38)" rx="2" ry="2" />
<text  x="604.72" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="19.0" y="341" width="0.2" height="15.0" fill="rgb(212,89,50)" rx="2" ry="2" />
<text  x="22.02" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (4 samples, 0.07%)</title><rect x="200.5" y="1525" width="0.9" height="15.0" fill="rgb(238,10,17)" rx="2" ry="2" />
<text  x="203.51" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 0.84%)</title><rect x="10.2" y="693" width="9.9" height="15.0" fill="rgb(220,192,20)" rx="2" ry="2" />
<text  x="13.21" y="703.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.02%)</title><rect x="20.5" y="1125" width="0.2" height="15.0" fill="rgb(224,105,20)" rx="2" ry="2" />
<text  x="23.52" y="1135.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.04%)</title><rect x="16.7" y="261" width="0.4" height="15.0" fill="rgb(239,29,2)" rx="2" ry="2" />
<text  x="19.66" y="271.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="10.6" y="213" width="0.3" height="15.0" fill="rgb(222,208,48)" rx="2" ry="2" />
<text  x="13.64" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.04%)</title><rect x="22.9" y="1365" width="0.4" height="15.0" fill="rgb(247,126,1)" rx="2" ry="2" />
<text  x="25.89" y="1375.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (1 samples, 0.02%)</title><rect x="299.3" y="1477" width="0.2" height="15.0" fill="rgb(230,189,1)" rx="2" ry="2" />
<text  x="302.31" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="700.9" y="1653" width="0.3" height="15.0" fill="rgb(239,99,37)" rx="2" ry="2" />
<text  x="703.95" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.02%)</title><rect x="95.7" y="1605" width="0.2" height="15.0" fill="rgb(225,153,33)" rx="2" ry="2" />
<text  x="98.70" y="1615.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (1 samples, 0.02%)</title><rect x="11.1" y="485" width="0.2" height="15.0" fill="rgb(242,58,20)" rx="2" ry="2" />
<text  x="14.07" y="495.5" ></text>
</g>
</g>
</svg>
