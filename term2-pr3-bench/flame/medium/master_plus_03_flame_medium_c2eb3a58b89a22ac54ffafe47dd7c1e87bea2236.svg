<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>mutation_reader_merger::operator (630 samples, 11.25%)</title><rect x="176.3" y="341" width="132.7" height="15.0" fill="rgb(239,38,39)" rx="2" ry="2" />
<text  x="179.25" y="351.5" >mutation_reader_..</text>
</g>
<g >
<title>[perf_simple_query_g] (2 samples, 0.04%)</title><rect x="386.1" y="325" width="0.4" height="15.0" fill="rgb(246,180,40)" rx="2" ry="2" />
<text  x="389.12" y="335.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.02%)</title><rect x="333.2" y="373" width="0.2" height="15.0" fill="rgb(208,22,41)" rx="2" ry="2" />
<text  x="336.24" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="509.6" y="341" width="0.2" height="15.0" fill="rgb(224,162,19)" rx="2" ry="2" />
<text  x="512.60" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="19.9" y="213" width="0.2" height="15.0" fill="rgb(236,201,51)" rx="2" ry="2" />
<text  x="22.90" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (1 samples, 0.02%)</title><rect x="11.1" y="325" width="0.2" height="15.0" fill="rgb(209,43,53)" rx="2" ry="2" />
<text  x="14.05" y="335.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.02%)</title><rect x="300.6" y="277" width="0.2" height="15.0" fill="rgb(215,212,20)" rx="2" ry="2" />
<text  x="303.57" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="574.5" y="357" width="0.4" height="15.0" fill="rgb(206,212,36)" rx="2" ry="2" />
<text  x="577.50" y="367.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (5 samples, 0.09%)</title><rect x="86.3" y="421" width="1.0" height="15.0" fill="rgb(217,23,47)" rx="2" ry="2" />
<text  x="89.28" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.02%)</title><rect x="22.4" y="149" width="0.2" height="15.0" fill="rgb(233,188,47)" rx="2" ry="2" />
<text  x="25.43" y="159.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="1161.3" y="405" width="0.3" height="15.0" fill="rgb(233,72,48)" rx="2" ry="2" />
<text  x="1164.34" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="568.0" y="341" width="0.2" height="15.0" fill="rgb(249,167,24)" rx="2" ry="2" />
<text  x="570.97" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (5 samples, 0.09%)</title><rect x="10.4" y="405" width="1.1" height="15.0" fill="rgb(211,83,40)" rx="2" ry="2" />
<text  x="13.42" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="17.8" y="261" width="0.2" height="15.0" fill="rgb(226,12,32)" rx="2" ry="2" />
<text  x="20.80" y="271.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="675.0" y="437" width="0.2" height="15.0" fill="rgb(237,69,25)" rx="2" ry="2" />
<text  x="678.01" y="447.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (40 samples, 0.71%)</title><rect x="413.1" y="357" width="8.4" height="15.0" fill="rgb(218,202,20)" rx="2" ry="2" />
<text  x="416.10" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="15.3" y="213" width="0.2" height="15.0" fill="rgb(226,168,17)" rx="2" ry="2" />
<text  x="18.27" y="223.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (2 samples, 0.04%)</title><rect x="333.4" y="373" width="0.5" height="15.0" fill="rgb(231,4,54)" rx="2" ry="2" />
<text  x="336.45" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (3 samples, 0.05%)</title><rect x="13.4" y="213" width="0.6" height="15.0" fill="rgb(221,80,53)" rx="2" ry="2" />
<text  x="16.37" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="354.3" y="261" width="0.2" height="15.0" fill="rgb(239,189,51)" rx="2" ry="2" />
<text  x="357.31" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.02%)</title><rect x="1157.3" y="453" width="0.2" height="15.0" fill="rgb(229,95,9)" rx="2" ry="2" />
<text  x="1160.34" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="844.6" y="245" width="0.3" height="15.0" fill="rgb(246,149,14)" rx="2" ry="2" />
<text  x="847.64" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.07%)</title><rect x="791.3" y="293" width="0.9" height="15.0" fill="rgb(247,219,52)" rx="2" ry="2" />
<text  x="794.33" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="597.5" y="405" width="0.2" height="15.0" fill="rgb(231,149,5)" rx="2" ry="2" />
<text  x="600.47" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="12.3" y="245" width="0.2" height="15.0" fill="rgb(250,115,26)" rx="2" ry="2" />
<text  x="15.32" y="255.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="209.5" y="261" width="1.1" height="15.0" fill="rgb(211,25,20)" rx="2" ry="2" />
<text  x="212.55" y="271.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (8 samples, 0.14%)</title><rect x="749.2" y="357" width="1.7" height="15.0" fill="rgb(249,123,1)" rx="2" ry="2" />
<text  x="752.19" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.11%)</title><rect x="1122.6" y="421" width="1.2" height="15.0" fill="rgb(205,126,2)" rx="2" ry="2" />
<text  x="1125.57" y="431.5" ></text>
</g>
<g >
<title>query_state::query_state (26 samples, 0.46%)</title><rect x="590.3" y="405" width="5.5" height="15.0" fill="rgb(253,132,24)" rx="2" ry="2" />
<text  x="593.31" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (54 samples, 0.96%)</title><rect x="455.7" y="341" width="11.3" height="15.0" fill="rgb(246,31,37)" rx="2" ry="2" />
<text  x="458.66" y="351.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (15 samples, 0.27%)</title><rect x="837.1" y="437" width="3.1" height="15.0" fill="rgb(235,193,8)" rx="2" ry="2" />
<text  x="840.05" y="447.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="19.7" y="245" width="0.2" height="15.0" fill="rgb(242,46,39)" rx="2" ry="2" />
<text  x="22.69" y="255.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (2 samples, 0.04%)</title><rect x="779.1" y="341" width="0.4" height="15.0" fill="rgb(230,41,7)" rx="2" ry="2" />
<text  x="782.11" y="351.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (1 samples, 0.02%)</title><rect x="15.7" y="181" width="0.2" height="15.0" fill="rgb(229,225,8)" rx="2" ry="2" />
<text  x="18.69" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="831.4" y="405" width="0.2" height="15.0" fill="rgb(239,124,18)" rx="2" ry="2" />
<text  x="834.36" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="11.3" y="341" width="0.2" height="15.0" fill="rgb(220,120,27)" rx="2" ry="2" />
<text  x="14.26" y="351.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (2 samples, 0.04%)</title><rect x="14.0" y="229" width="0.4" height="15.0" fill="rgb(234,226,8)" rx="2" ry="2" />
<text  x="17.00" y="239.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (3 samples, 0.05%)</title><rect x="428.7" y="357" width="0.6" height="15.0" fill="rgb(234,161,33)" rx="2" ry="2" />
<text  x="431.69" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="12.5" y="213" width="0.2" height="15.0" fill="rgb(215,7,22)" rx="2" ry="2" />
<text  x="15.53" y="223.5" ></text>
</g>
<g >
<title>seastar::make_file_impl (1 samples, 0.02%)</title><rect x="661.5" y="437" width="0.2" height="15.0" fill="rgb(229,132,53)" rx="2" ry="2" />
<text  x="664.53" y="447.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="465.1" y="309" width="0.3" height="15.0" fill="rgb(246,48,36)" rx="2" ry="2" />
<text  x="468.14" y="319.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.02%)</title><rect x="844.2" y="293" width="0.2" height="15.0" fill="rgb(224,172,17)" rx="2" ry="2" />
<text  x="847.22" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="17.0" y="309" width="0.2" height="15.0" fill="rgb(211,117,4)" rx="2" ry="2" />
<text  x="19.95" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="19.5" y="245" width="0.2" height="15.0" fill="rgb(224,181,33)" rx="2" ry="2" />
<text  x="22.48" y="255.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (3 samples, 0.05%)</title><rect x="550.9" y="309" width="0.6" height="15.0" fill="rgb(234,218,34)" rx="2" ry="2" />
<text  x="553.90" y="319.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (1 samples, 0.02%)</title><rect x="1123.2" y="293" width="0.2" height="15.0" fill="rgb(206,205,54)" rx="2" ry="2" />
<text  x="1126.20" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (3 samples, 0.05%)</title><rect x="896.9" y="293" width="0.6" height="15.0" fill="rgb(222,29,30)" rx="2" ry="2" />
<text  x="899.90" y="303.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="17.8" y="117" width="0.2" height="15.0" fill="rgb(250,40,54)" rx="2" ry="2" />
<text  x="20.80" y="127.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="18.0" y="197" width="0.4" height="15.0" fill="rgb(237,224,7)" rx="2" ry="2" />
<text  x="21.01" y="207.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (33 samples, 0.59%)</title><rect x="713.6" y="405" width="6.9" height="15.0" fill="rgb(235,148,32)" rx="2" ry="2" />
<text  x="716.58" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="19.5" y="149" width="0.2" height="15.0" fill="rgb(218,61,34)" rx="2" ry="2" />
<text  x="22.48" y="159.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (12 samples, 0.21%)</title><rect x="294.5" y="277" width="2.5" height="15.0" fill="rgb(212,116,0)" rx="2" ry="2" />
<text  x="297.46" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,275 samples, 22.77%)</title><rect x="853.9" y="421" width="268.7" height="15.0" fill="rgb(249,7,10)" rx="2" ry="2" />
<text  x="856.91" y="431.5" >seastar::noncopyable_function&lt;seast..</text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (10 samples, 0.18%)</title><rect x="819.6" y="373" width="2.1" height="15.0" fill="rgb(213,197,38)" rx="2" ry="2" />
<text  x="822.56" y="383.5" ></text>
</g>
<g >
<title>make_combined_reader (81 samples, 1.45%)</title><rect x="493.2" y="357" width="17.0" height="15.0" fill="rgb(245,131,5)" rx="2" ry="2" />
<text  x="496.17" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.04%)</title><rect x="1036.6" y="181" width="0.4" height="15.0" fill="rgb(243,40,29)" rx="2" ry="2" />
<text  x="1039.60" y="191.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.02%)</title><rect x="364.8" y="325" width="0.3" height="15.0" fill="rgb(244,149,28)" rx="2" ry="2" />
<text  x="367.84" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.05%)</title><rect x="823.8" y="357" width="0.6" height="15.0" fill="rgb(253,84,49)" rx="2" ry="2" />
<text  x="826.78" y="367.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="20.3" y="245" width="0.2" height="15.0" fill="rgb(227,156,8)" rx="2" ry="2" />
<text  x="23.32" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="755.9" y="373" width="0.2" height="15.0" fill="rgb(208,94,49)" rx="2" ry="2" />
<text  x="758.93" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="354.3" y="245" width="0.2" height="15.0" fill="rgb(242,56,15)" rx="2" ry="2" />
<text  x="357.31" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="708.9" y="405" width="1.1" height="15.0" fill="rgb(251,215,22)" rx="2" ry="2" />
<text  x="711.94" y="415.5" ></text>
</g>
<g >
<title>database::find_column_family (7 samples, 0.12%)</title><rect x="1057.5" y="293" width="1.4" height="15.0" fill="rgb(244,130,19)" rx="2" ry="2" />
<text  x="1060.46" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.02%)</title><rect x="14.2" y="197" width="0.2" height="15.0" fill="rgb(228,10,5)" rx="2" ry="2" />
<text  x="17.21" y="207.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.25%)</title><rect x="131.6" y="389" width="2.9" height="15.0" fill="rgb(247,6,47)" rx="2" ry="2" />
<text  x="134.58" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (2 samples, 0.04%)</title><rect x="558.3" y="309" width="0.4" height="15.0" fill="rgb(221,182,20)" rx="2" ry="2" />
<text  x="561.28" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="945.8" y="341" width="0.2" height="15.0" fill="rgb(217,212,11)" rx="2" ry="2" />
<text  x="948.78" y="351.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (3 samples, 0.05%)</title><rect x="27.9" y="533" width="0.6" height="15.0" fill="rgb(219,165,12)" rx="2" ry="2" />
<text  x="30.91" y="543.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="20.1" y="133" width="0.2" height="15.0" fill="rgb(245,47,49)" rx="2" ry="2" />
<text  x="23.11" y="143.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="1095.2" y="277" width="0.2" height="15.0" fill="rgb(239,49,23)" rx="2" ry="2" />
<text  x="1098.18" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="17.2" y="213" width="0.2" height="15.0" fill="rgb(211,48,3)" rx="2" ry="2" />
<text  x="20.16" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.07%)</title><rect x="98.1" y="389" width="0.8" height="15.0" fill="rgb(245,155,37)" rx="2" ry="2" />
<text  x="101.08" y="399.5" ></text>
</g>
<g >
<title>row::~row (43 samples, 0.77%)</title><rect x="356.0" y="341" width="9.1" height="15.0" fill="rgb(206,198,22)" rx="2" ry="2" />
<text  x="358.99" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (53 samples, 0.95%)</title><rect x="650.4" y="453" width="11.1" height="15.0" fill="rgb(212,125,49)" rx="2" ry="2" />
<text  x="653.36" y="463.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="19.5" y="165" width="0.2" height="15.0" fill="rgb(239,1,30)" rx="2" ry="2" />
<text  x="22.48" y="175.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;gms::application_state, std::pair&lt;gms::application_state const, gms::versioned_value&gt;, std::_Select1st&lt;std::pair&lt;gms::application_state const, gms::versioned_value&gt; &gt;, std::less&lt;gms::application_state&gt;, std::allocator&lt;std::pair&lt;gms::application_state const, gms::versioned_value&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;gms::application_state, std::pair&lt;gms::application_state const, gms::versioned_value&gt;, std::_Select1st&lt;std::pair&lt;gms::application_state const, gms::versioned_value&gt; &gt;, std::less&lt;gms::application_state&gt;, std::allocator&lt;std::pair&lt;gms::application_state const, gms::versioned_value&gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.02%)</title><rect x="1161.3" y="309" width="0.3" height="15.0" fill="rgb(254,27,41)" rx="2" ry="2" />
<text  x="1164.34" y="319.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (46 samples, 0.82%)</title><rect x="745.6" y="373" width="9.7" height="15.0" fill="rgb(248,26,0)" rx="2" ry="2" />
<text  x="748.60" y="383.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (1 samples, 0.02%)</title><rect x="1038.1" y="197" width="0.2" height="15.0" fill="rgb(218,40,31)" rx="2" ry="2" />
<text  x="1041.08" y="207.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.04%)</title><rect x="835.6" y="373" width="0.4" height="15.0" fill="rgb(236,118,42)" rx="2" ry="2" />
<text  x="838.58" y="383.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (118 samples, 2.11%)</title><rect x="537.6" y="341" width="24.9" height="15.0" fill="rgb(208,96,8)" rx="2" ry="2" />
<text  x="540.63" y="351.5" >m..</text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="573.5" y="357" width="1.0" height="15.0" fill="rgb(240,68,36)" rx="2" ry="2" />
<text  x="576.45" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::run (5,358 samples, 95.68%)</title><rect x="33.2" y="501" width="1129.0" height="15.0" fill="rgb(229,60,12)" rx="2" ry="2" />
<text  x="36.18" y="511.5" >seastar::reactor::run</text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="15.7" y="197" width="0.2" height="15.0" fill="rgb(221,106,23)" rx="2" ry="2" />
<text  x="18.69" y="207.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (7 samples, 0.12%)</title><rect x="844.4" y="373" width="1.5" height="15.0" fill="rgb(208,85,47)" rx="2" ry="2" />
<text  x="847.43" y="383.5" ></text>
</g>
<g >
<title>[[vdso]] (45 samples, 0.80%)</title><rect x="1166.0" y="565" width="9.5" height="15.0" fill="rgb(212,33,49)" rx="2" ry="2" />
<text  x="1168.98" y="575.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.14%)</title><rect x="675.9" y="437" width="1.6" height="15.0" fill="rgb(209,195,28)" rx="2" ry="2" />
<text  x="678.86" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="22.4" y="229" width="0.2" height="15.0" fill="rgb(214,209,25)" rx="2" ry="2" />
<text  x="25.43" y="239.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.09%)</title><rect x="806.3" y="357" width="1.0" height="15.0" fill="rgb(210,113,51)" rx="2" ry="2" />
<text  x="809.29" y="367.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.38%)</title><rect x="939.2" y="357" width="4.5" height="15.0" fill="rgb(212,158,22)" rx="2" ry="2" />
<text  x="942.25" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.05%)</title><rect x="676.9" y="421" width="0.6" height="15.0" fill="rgb(235,77,38)" rx="2" ry="2" />
<text  x="679.91" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (302 samples, 5.39%)</title><rect x="983.7" y="293" width="63.6" height="15.0" fill="rgb(227,167,36)" rx="2" ry="2" />
<text  x="986.71" y="303.5" >servic..</text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (1 samples, 0.02%)</title><rect x="68.6" y="357" width="0.2" height="15.0" fill="rgb(216,182,31)" rx="2" ry="2" />
<text  x="71.58" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (6 samples, 0.11%)</title><rect x="981.8" y="293" width="1.3" height="15.0" fill="rgb(217,63,12)" rx="2" ry="2" />
<text  x="984.81" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (92 samples, 1.64%)</title><rect x="448.3" y="357" width="19.4" height="15.0" fill="rgb(237,183,13)" rx="2" ry="2" />
<text  x="451.29" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.02%)</title><rect x="22.4" y="165" width="0.2" height="15.0" fill="rgb(253,162,6)" rx="2" ry="2" />
<text  x="25.43" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="19.7" y="229" width="0.2" height="15.0" fill="rgb(212,160,35)" rx="2" ry="2" />
<text  x="22.69" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="209.5" y="245" width="0.9" height="15.0" fill="rgb(207,122,27)" rx="2" ry="2" />
<text  x="212.55" y="255.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.25%)</title><rect x="883.6" y="293" width="3.0" height="15.0" fill="rgb(234,82,51)" rx="2" ry="2" />
<text  x="886.62" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.05%)</title><rect x="460.9" y="309" width="0.7" height="15.0" fill="rgb(212,20,7)" rx="2" ry="2" />
<text  x="463.93" y="319.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.02%)</title><rect x="1150.4" y="437" width="0.2" height="15.0" fill="rgb(250,68,1)" rx="2" ry="2" />
<text  x="1153.39" y="447.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="585.9" y="325" width="0.2" height="15.0" fill="rgb(221,173,22)" rx="2" ry="2" />
<text  x="588.88" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (3 samples, 0.05%)</title><rect x="100.4" y="373" width="0.6" height="15.0" fill="rgb(226,81,49)" rx="2" ry="2" />
<text  x="103.40" y="383.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (1 samples, 0.02%)</title><rect x="68.4" y="341" width="0.2" height="15.0" fill="rgb(231,185,8)" rx="2" ry="2" />
<text  x="71.37" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (5 samples, 0.09%)</title><rect x="240.3" y="229" width="1.1" height="15.0" fill="rgb(213,58,52)" rx="2" ry="2" />
<text  x="243.31" y="239.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (2 samples, 0.04%)</title><rect x="292.1" y="261" width="0.5" height="15.0" fill="rgb(239,63,33)" rx="2" ry="2" />
<text  x="295.15" y="271.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.02%)</title><rect x="491.9" y="357" width="0.2" height="15.0" fill="rgb(234,125,9)" rx="2" ry="2" />
<text  x="494.90" y="367.5" ></text>
</g>
<g >
<title>schema::column_at (10 samples, 0.18%)</title><rect x="440.9" y="309" width="2.1" height="15.0" fill="rgb(244,183,8)" rx="2" ry="2" />
<text  x="443.91" y="319.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (30 samples, 0.54%)</title><rect x="467.9" y="373" width="6.3" height="15.0" fill="rgb(237,62,31)" rx="2" ry="2" />
<text  x="470.88" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (7 samples, 0.12%)</title><rect x="844.4" y="421" width="1.5" height="15.0" fill="rgb(223,59,32)" rx="2" ry="2" />
<text  x="847.43" y="431.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (124 samples, 2.21%)</title><rect x="780.2" y="341" width="26.1" height="15.0" fill="rgb(208,16,22)" rx="2" ry="2" />
<text  x="783.16" y="351.5" >s..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (18 samples, 0.32%)</title><rect x="12.5" y="325" width="3.8" height="15.0" fill="rgb(214,222,14)" rx="2" ry="2" />
<text  x="15.53" y="335.5" ></text>
</g>
<g >
<title>seastar::app_template::run (5,359 samples, 95.70%)</title><rect x="33.2" y="533" width="1129.2" height="15.0" fill="rgb(211,177,3)" rx="2" ry="2" />
<text  x="36.18" y="543.5" >seastar::app_template::run</text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (1 samples, 0.02%)</title><rect x="24.1" y="421" width="0.2" height="15.0" fill="rgb(219,203,49)" rx="2" ry="2" />
<text  x="27.12" y="431.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (2 samples, 0.04%)</title><rect x="1123.8" y="437" width="0.5" height="15.0" fill="rgb(254,52,38)" rx="2" ry="2" />
<text  x="1126.84" y="447.5" ></text>
</g>
<g >
<title>create_partitions (68 samples, 1.21%)</title><rect x="10.0" y="469" width="14.3" height="15.0" fill="rgb(226,28,40)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>database::has_keyspace (16 samples, 0.29%)</title><rect x="813.7" y="341" width="3.3" height="15.0" fill="rgb(222,136,35)" rx="2" ry="2" />
<text  x="816.66" y="351.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.27%)</title><rect x="1065.3" y="293" width="3.1" height="15.0" fill="rgb(222,100,11)" rx="2" ry="2" />
<text  x="1068.26" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.04%)</title><rect x="533.8" y="341" width="0.5" height="15.0" fill="rgb(220,75,20)" rx="2" ry="2" />
<text  x="536.84" y="351.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.04%)</title><rect x="528.6" y="325" width="0.4" height="15.0" fill="rgb(249,109,19)" rx="2" ry="2" />
<text  x="531.57" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="18.0" y="165" width="0.4" height="15.0" fill="rgb(243,185,30)" rx="2" ry="2" />
<text  x="21.01" y="175.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="897.5" y="309" width="0.2" height="15.0" fill="rgb(249,57,38)" rx="2" ry="2" />
<text  x="900.53" y="319.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.29%)</title><rect x="987.7" y="277" width="3.4" height="15.0" fill="rgb(229,144,0)" rx="2" ry="2" />
<text  x="990.71" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (13 samples, 0.23%)</title><rect x="554.1" y="309" width="2.7" height="15.0" fill="rgb(254,185,23)" rx="2" ry="2" />
<text  x="557.06" y="319.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="554.7" y="293" width="0.8" height="15.0" fill="rgb(246,79,7)" rx="2" ry="2" />
<text  x="557.70" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.11%)</title><rect x="841.5" y="453" width="1.2" height="15.0" fill="rgb(208,186,42)" rx="2" ry="2" />
<text  x="844.48" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.05%)</title><rect x="790.7" y="277" width="0.6" height="15.0" fill="rgb(205,184,17)" rx="2" ry="2" />
<text  x="793.70" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.04%)</title><rect x="752.6" y="341" width="0.4" height="15.0" fill="rgb(225,43,16)" rx="2" ry="2" />
<text  x="755.56" y="351.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="22.4" y="85" width="0.2" height="15.0" fill="rgb(241,118,37)" rx="2" ry="2" />
<text  x="25.43" y="95.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (236 samples, 4.21%)</title><rect x="996.1" y="261" width="49.8" height="15.0" fill="rgb(205,68,21)" rx="2" ry="2" />
<text  x="999.14" y="271.5" >servi..</text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (80 samples, 1.43%)</title><rect x="393.7" y="325" width="16.9" height="15.0" fill="rgb(250,17,26)" rx="2" ry="2" />
<text  x="396.71" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (6 samples, 0.11%)</title><rect x="20.3" y="261" width="1.3" height="15.0" fill="rgb(231,118,17)" rx="2" ry="2" />
<text  x="23.32" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (8 samples, 0.14%)</title><rect x="60.4" y="421" width="1.6" height="15.0" fill="rgb(233,133,39)" rx="2" ry="2" />
<text  x="63.36" y="431.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1 samples, 0.02%)</title><rect x="365.1" y="357" width="0.2" height="15.0" fill="rgb(246,8,1)" rx="2" ry="2" />
<text  x="368.05" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (44 samples, 0.79%)</title><rect x="887.6" y="293" width="9.3" height="15.0" fill="rgb(238,197,13)" rx="2" ry="2" />
<text  x="890.62" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (68 samples, 1.21%)</title><rect x="1095.4" y="373" width="14.3" height="15.0" fill="rgb(222,63,24)" rx="2" ry="2" />
<text  x="1098.39" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.21%)</title><rect x="1112.5" y="357" width="2.5" height="15.0" fill="rgb(212,208,3)" rx="2" ry="2" />
<text  x="1115.46" y="367.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.05%)</title><rect x="77.8" y="437" width="0.7" height="15.0" fill="rgb(244,29,43)" rx="2" ry="2" />
<text  x="80.85" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="924.3" y="357" width="0.2" height="15.0" fill="rgb(249,73,40)" rx="2" ry="2" />
<text  x="927.29" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="17.2" y="197" width="0.2" height="15.0" fill="rgb(228,111,47)" rx="2" ry="2" />
<text  x="20.16" y="207.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.04%)</title><rect x="19.9" y="229" width="0.4" height="15.0" fill="rgb(219,74,35)" rx="2" ry="2" />
<text  x="22.90" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.29%)</title><rect x="504.3" y="309" width="3.4" height="15.0" fill="rgb(239,86,45)" rx="2" ry="2" />
<text  x="507.34" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.02%)</title><rect x="291.7" y="197" width="0.2" height="15.0" fill="rgb(250,146,48)" rx="2" ry="2" />
<text  x="294.73" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="19.3" y="117" width="0.2" height="15.0" fill="rgb(223,18,43)" rx="2" ry="2" />
<text  x="22.27" y="127.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (7 samples, 0.12%)</title><rect x="238.6" y="229" width="1.5" height="15.0" fill="rgb(226,216,8)" rx="2" ry="2" />
<text  x="241.62" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.05%)</title><rect x="771.1" y="341" width="0.6" height="15.0" fill="rgb(231,197,2)" rx="2" ry="2" />
<text  x="774.10" y="351.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (1 samples, 0.02%)</title><rect x="1163.7" y="565" width="0.2" height="15.0" fill="rgb(228,122,13)" rx="2" ry="2" />
<text  x="1166.66" y="575.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.02%)</title><rect x="1122.4" y="389" width="0.2" height="15.0" fill="rgb(234,152,50)" rx="2" ry="2" />
<text  x="1125.36" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (5 samples, 0.09%)</title><rect x="10.4" y="389" width="1.1" height="15.0" fill="rgb(246,136,45)" rx="2" ry="2" />
<text  x="13.42" y="399.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.70%)</title><rect x="1004.6" y="245" width="8.2" height="15.0" fill="rgb(227,116,0)" rx="2" ry="2" />
<text  x="1007.57" y="255.5" ></text>
</g>
<g >
<title>fmt::v7::detail::parse_replacement_field&lt;char, fmt::v7::detail::format_handler&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char, fmt::v7::basic_format_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;&amp;&gt; (1 samples, 0.02%)</title><rect x="33.0" y="565" width="0.2" height="15.0" fill="rgb(206,65,36)" rx="2" ry="2" />
<text  x="35.97" y="575.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.02%)</title><rect x="702.2" y="405" width="0.2" height="15.0" fill="rgb(228,204,49)" rx="2" ry="2" />
<text  x="705.20" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.02%)</title><rect x="308.8" y="309" width="0.2" height="15.0" fill="rgb(248,134,6)" rx="2" ry="2" />
<text  x="311.79" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="22.4" y="117" width="0.2" height="15.0" fill="rgb(221,165,44)" rx="2" ry="2" />
<text  x="25.43" y="127.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="1123.8" y="405" width="0.5" height="15.0" fill="rgb(224,84,25)" rx="2" ry="2" />
<text  x="1126.84" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="573.5" y="341" width="1.0" height="15.0" fill="rgb(246,26,42)" rx="2" ry="2" />
<text  x="576.45" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="104.0" y="421" width="0.2" height="15.0" fill="rgb(251,150,38)" rx="2" ry="2" />
<text  x="106.98" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (101 samples, 1.80%)</title><rect x="876.2" y="309" width="21.3" height="15.0" fill="rgb(210,59,12)" rx="2" ry="2" />
<text  x="879.25" y="319.5" >c..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="23.7" y="309" width="0.2" height="15.0" fill="rgb(211,154,39)" rx="2" ry="2" />
<text  x="26.70" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (8 samples, 0.14%)</title><rect x="21.6" y="325" width="1.7" height="15.0" fill="rgb(237,65,54)" rx="2" ry="2" />
<text  x="24.59" y="335.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.02%)</title><rect x="1064.6" y="277" width="0.2" height="15.0" fill="rgb(233,14,21)" rx="2" ry="2" />
<text  x="1067.62" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="19.3" y="53" width="0.2" height="15.0" fill="rgb(222,132,51)" rx="2" ry="2" />
<text  x="22.27" y="63.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (56 samples, 1.00%)</title><rect x="12.3" y="373" width="11.8" height="15.0" fill="rgb(228,143,36)" rx="2" ry="2" />
<text  x="15.32" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="618.3" y="421" width="0.2" height="15.0" fill="rgb(218,133,5)" rx="2" ry="2" />
<text  x="621.33" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.07%)</title><rect x="990.2" y="245" width="0.9" height="15.0" fill="rgb(251,23,39)" rx="2" ry="2" />
<text  x="993.24" y="255.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.02%)</title><rect x="32.8" y="453" width="0.2" height="15.0" fill="rgb(243,117,9)" rx="2" ry="2" />
<text  x="35.76" y="463.5" ></text>
</g>
<g >
<title>cql3::constants::value::get (1 samples, 0.02%)</title><rect x="844.4" y="245" width="0.2" height="15.0" fill="rgb(251,178,10)" rx="2" ry="2" />
<text  x="847.43" y="255.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="474.2" y="373" width="0.8" height="15.0" fill="rgb(208,58,15)" rx="2" ry="2" />
<text  x="477.20" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="293.6" y="261" width="0.2" height="15.0" fill="rgb(251,83,52)" rx="2" ry="2" />
<text  x="296.62" y="271.5" ></text>
</g>
<g >
<title>main (5,359 samples, 95.70%)</title><rect x="33.2" y="565" width="1129.2" height="15.0" fill="rgb(246,154,22)" rx="2" ry="2" />
<text  x="36.18" y="575.5" >main</text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="886.6" y="293" width="0.8" height="15.0" fill="rgb(243,206,48)" rx="2" ry="2" />
<text  x="889.57" y="303.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="293.0" y="261" width="0.2" height="15.0" fill="rgb(242,109,45)" rx="2" ry="2" />
<text  x="295.99" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.04%)</title><rect x="18.0" y="245" width="0.4" height="15.0" fill="rgb(239,75,34)" rx="2" ry="2" />
<text  x="21.01" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::run_and_dispose (4 samples, 0.07%)</title><rect x="35.7" y="469" width="0.8" height="15.0" fill="rgb(228,71,12)" rx="2" ry="2" />
<text  x="38.71" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (2 samples, 0.04%)</title><rect x="14.4" y="229" width="0.4" height="15.0" fill="rgb(205,224,50)" rx="2" ry="2" />
<text  x="17.43" y="239.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="636.9" y="405" width="0.2" height="15.0" fill="rgb(227,185,10)" rx="2" ry="2" />
<text  x="639.88" y="415.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.02%)</title><rect x="308.6" y="309" width="0.2" height="15.0" fill="rgb(215,181,25)" rx="2" ry="2" />
<text  x="311.58" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.12%)</title><rect x="556.8" y="293" width="1.5" height="15.0" fill="rgb(208,44,5)" rx="2" ry="2" />
<text  x="559.80" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (2 samples, 0.04%)</title><rect x="34.4" y="469" width="0.5" height="15.0" fill="rgb(214,13,43)" rx="2" ry="2" />
<text  x="37.44" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.16%)</title><rect x="718.6" y="373" width="1.9" height="15.0" fill="rgb(216,132,51)" rx="2" ry="2" />
<text  x="721.63" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate (1 samples, 0.02%)</title><rect x="845.7" y="341" width="0.2" height="15.0" fill="rgb(233,40,20)" rx="2" ry="2" />
<text  x="848.69" y="351.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="306.7" y="277" width="0.8" height="15.0" fill="rgb(242,116,38)" rx="2" ry="2" />
<text  x="309.69" y="287.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (3 samples, 0.05%)</title><rect x="789.2" y="293" width="0.7" height="15.0" fill="rgb(205,127,41)" rx="2" ry="2" />
<text  x="792.22" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="79.7" y="437" width="0.3" height="15.0" fill="rgb(225,119,9)" rx="2" ry="2" />
<text  x="82.75" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.02%)</title><rect x="227.7" y="261" width="0.2" height="15.0" fill="rgb(238,169,35)" rx="2" ry="2" />
<text  x="230.67" y="271.5" ></text>
</g>
<g >
<title>__libc_start_main (5,359 samples, 95.70%)</title><rect x="33.2" y="581" width="1129.2" height="15.0" fill="rgb(248,83,26)" rx="2" ry="2" />
<text  x="36.18" y="591.5" >__libc_start_main</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="19.1" y="229" width="0.2" height="15.0" fill="rgb(217,87,16)" rx="2" ry="2" />
<text  x="22.06" y="239.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (11 samples, 0.20%)</title><rect x="753.0" y="341" width="2.3" height="15.0" fill="rgb(208,30,49)" rx="2" ry="2" />
<text  x="755.98" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.02%)</title><rect x="1039.3" y="213" width="0.2" height="15.0" fill="rgb(233,31,38)" rx="2" ry="2" />
<text  x="1042.34" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="12.5" y="229" width="0.2" height="15.0" fill="rgb(211,71,43)" rx="2" ry="2" />
<text  x="15.53" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="66.9" y="421" width="0.2" height="15.0" fill="rgb(206,225,22)" rx="2" ry="2" />
<text  x="69.89" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.27%)</title><rect x="1065.3" y="277" width="3.1" height="15.0" fill="rgb(239,197,3)" rx="2" ry="2" />
<text  x="1068.26" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.02%)</title><rect x="930.6" y="373" width="0.2" height="15.0" fill="rgb(211,107,47)" rx="2" ry="2" />
<text  x="933.61" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="844.2" y="405" width="0.2" height="15.0" fill="rgb(254,21,49)" rx="2" ry="2" />
<text  x="847.22" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.02%)</title><rect x="20.7" y="213" width="0.3" height="15.0" fill="rgb(229,194,36)" rx="2" ry="2" />
<text  x="23.75" y="223.5" ></text>
</g>
<g >
<title>auth::resource::resource (9 samples, 0.16%)</title><rect x="768.6" y="357" width="1.9" height="15.0" fill="rgb(225,208,37)" rx="2" ry="2" />
<text  x="771.57" y="367.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.02%)</title><rect x="19.3" y="213" width="0.2" height="15.0" fill="rgb(213,79,40)" rx="2" ry="2" />
<text  x="22.27" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.02%)</title><rect x="21.2" y="229" width="0.2" height="15.0" fill="rgb(247,227,38)" rx="2" ry="2" />
<text  x="24.17" y="239.5" ></text>
</g>
<g >
<title>schema::column_at (9 samples, 0.16%)</title><rect x="287.3" y="213" width="1.9" height="15.0" fill="rgb(209,168,43)" rx="2" ry="2" />
<text  x="290.30" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="597.7" y="405" width="0.2" height="15.0" fill="rgb(251,151,26)" rx="2" ry="2" />
<text  x="600.68" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="21.2" y="149" width="0.2" height="15.0" fill="rgb(242,154,12)" rx="2" ry="2" />
<text  x="24.17" y="159.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.02%)</title><rect x="24.3" y="533" width="0.2" height="15.0" fill="rgb(244,176,49)" rx="2" ry="2" />
<text  x="27.33" y="543.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (28 samples, 0.50%)</title><rect x="1102.3" y="357" width="5.9" height="15.0" fill="rgb(214,50,43)" rx="2" ry="2" />
<text  x="1105.34" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="68.4" y="213" width="0.2" height="15.0" fill="rgb(224,33,32)" rx="2" ry="2" />
<text  x="71.37" y="223.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (17 samples, 0.30%)</title><rect x="56.6" y="421" width="3.5" height="15.0" fill="rgb(233,0,25)" rx="2" ry="2" />
<text  x="59.57" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.05%)</title><rect x="443.9" y="357" width="0.6" height="15.0" fill="rgb(240,82,37)" rx="2" ry="2" />
<text  x="446.86" y="367.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (76 samples, 1.36%)</title><rect x="271.3" y="213" width="16.0" height="15.0" fill="rgb(211,206,20)" rx="2" ry="2" />
<text  x="274.29" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (52 samples, 0.93%)</title><rect x="51.3" y="437" width="11.0" height="15.0" fill="rgb(239,136,21)" rx="2" ry="2" />
<text  x="54.30" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (2 samples, 0.04%)</title><rect x="1123.8" y="309" width="0.5" height="15.0" fill="rgb(219,188,8)" rx="2" ry="2" />
<text  x="1126.84" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="17.2" y="229" width="0.2" height="15.0" fill="rgb(224,77,42)" rx="2" ry="2" />
<text  x="20.16" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.05%)</title><rect x="689.8" y="437" width="0.6" height="15.0" fill="rgb(215,106,45)" rx="2" ry="2" />
<text  x="692.76" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~deque (1 samples, 0.02%)</title><rect x="12.1" y="325" width="0.2" height="15.0" fill="rgb(244,35,22)" rx="2" ry="2" />
<text  x="15.11" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="12.5" y="245" width="0.2" height="15.0" fill="rgb(233,61,47)" rx="2" ry="2" />
<text  x="15.53" y="255.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="922.4" y="357" width="1.3" height="15.0" fill="rgb(239,224,41)" rx="2" ry="2" />
<text  x="925.39" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (4 samples, 0.07%)</title><rect x="632.9" y="405" width="0.8" height="15.0" fill="rgb(215,38,24)" rx="2" ry="2" />
<text  x="635.87" y="415.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (3 samples, 0.05%)</title><rect x="247.1" y="213" width="0.6" height="15.0" fill="rgb(209,213,10)" rx="2" ry="2" />
<text  x="250.05" y="223.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="22.2" y="245" width="0.2" height="15.0" fill="rgb(239,16,18)" rx="2" ry="2" />
<text  x="25.22" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="614.1" y="437" width="0.2" height="15.0" fill="rgb(207,20,41)" rx="2" ry="2" />
<text  x="617.12" y="447.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.21%)</title><rect x="1109.9" y="373" width="2.6" height="15.0" fill="rgb(214,76,30)" rx="2" ry="2" />
<text  x="1112.93" y="383.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.02%)</title><rect x="15.9" y="277" width="0.2" height="15.0" fill="rgb(253,137,17)" rx="2" ry="2" />
<text  x="18.90" y="287.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (2 samples, 0.04%)</title><rect x="219.2" y="261" width="0.5" height="15.0" fill="rgb(217,205,5)" rx="2" ry="2" />
<text  x="222.24" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="21.2" y="197" width="0.2" height="15.0" fill="rgb(243,220,12)" rx="2" ry="2" />
<text  x="24.17" y="207.5" ></text>
</g>
<g >
<title>database::has_keyspace (16 samples, 0.29%)</title><rect x="825.0" y="405" width="3.4" height="15.0" fill="rgb(231,131,1)" rx="2" ry="2" />
<text  x="828.04" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="12.3" y="293" width="0.2" height="15.0" fill="rgb(252,63,54)" rx="2" ry="2" />
<text  x="15.32" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="926.8" y="357" width="0.2" height="15.0" fill="rgb(249,102,53)" rx="2" ry="2" />
<text  x="929.82" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (16 samples, 0.29%)</title><rect x="534.3" y="341" width="3.3" height="15.0" fill="rgb(219,87,28)" rx="2" ry="2" />
<text  x="537.26" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="19.3" y="149" width="0.2" height="15.0" fill="rgb(227,5,15)" rx="2" ry="2" />
<text  x="22.27" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.02%)</title><rect x="20.7" y="181" width="0.3" height="15.0" fill="rgb(241,62,9)" rx="2" ry="2" />
<text  x="23.75" y="191.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (2 samples, 0.04%)</title><rect x="62.9" y="453" width="0.4" height="15.0" fill="rgb(241,195,20)" rx="2" ry="2" />
<text  x="65.89" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (2 samples, 0.04%)</title><rect x="292.6" y="261" width="0.4" height="15.0" fill="rgb(252,201,10)" rx="2" ry="2" />
<text  x="295.57" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="1122.8" y="309" width="0.2" height="15.0" fill="rgb(228,171,5)" rx="2" ry="2" />
<text  x="1125.78" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.02%)</title><rect x="18.6" y="277" width="0.3" height="15.0" fill="rgb(234,70,46)" rx="2" ry="2" />
<text  x="21.64" y="287.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="1123.8" y="181" width="0.2" height="15.0" fill="rgb(213,78,48)" rx="2" ry="2" />
<text  x="1126.84" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.04%)</title><rect x="101.0" y="405" width="0.5" height="15.0" fill="rgb(218,50,15)" rx="2" ry="2" />
<text  x="104.03" y="415.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (3 samples, 0.05%)</title><rect x="938.6" y="357" width="0.6" height="15.0" fill="rgb(222,84,2)" rx="2" ry="2" />
<text  x="941.62" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="887.4" y="293" width="0.2" height="15.0" fill="rgb(240,103,5)" rx="2" ry="2" />
<text  x="890.41" y="303.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (545 samples, 9.73%)</title><rect x="475.3" y="405" width="114.8" height="15.0" fill="rgb(243,31,32)" rx="2" ry="2" />
<text  x="478.26" y="415.5" >query::querier..</text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="618.3" y="437" width="0.2" height="15.0" fill="rgb(214,143,48)" rx="2" ry="2" />
<text  x="621.33" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (5 samples, 0.09%)</title><rect x="928.7" y="341" width="1.1" height="15.0" fill="rgb(205,109,1)" rx="2" ry="2" />
<text  x="931.71" y="351.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (2 samples, 0.04%)</title><rect x="589.3" y="357" width="0.4" height="15.0" fill="rgb(247,212,18)" rx="2" ry="2" />
<text  x="592.25" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (19 samples, 0.34%)</title><rect x="17.6" y="309" width="4.0" height="15.0" fill="rgb(240,25,42)" rx="2" ry="2" />
<text  x="20.59" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="201.5" y="309" width="0.3" height="15.0" fill="rgb(220,22,35)" rx="2" ry="2" />
<text  x="204.54" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (30 samples, 0.54%)</title><rect x="731.1" y="405" width="6.3" height="15.0" fill="rgb(223,49,20)" rx="2" ry="2" />
<text  x="734.06" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (2 samples, 0.04%)</title><rect x="897.7" y="309" width="0.5" height="15.0" fill="rgb(215,113,4)" rx="2" ry="2" />
<text  x="900.74" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="12.3" y="229" width="0.2" height="15.0" fill="rgb(207,164,18)" rx="2" ry="2" />
<text  x="15.32" y="239.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="354.3" y="357" width="0.2" height="15.0" fill="rgb(233,78,6)" rx="2" ry="2" />
<text  x="357.31" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="21.4" y="181" width="0.2" height="15.0" fill="rgb(250,4,35)" rx="2" ry="2" />
<text  x="24.38" y="191.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (50 samples, 0.89%)</title><rect x="354.5" y="357" width="10.6" height="15.0" fill="rgb(213,124,11)" rx="2" ry="2" />
<text  x="357.52" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="67.1" y="437" width="0.4" height="15.0" fill="rgb(212,132,1)" rx="2" ry="2" />
<text  x="70.10" y="447.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (1,313 samples, 23.45%)</title><rect x="845.9" y="437" width="276.7" height="15.0" fill="rgb(238,70,27)" rx="2" ry="2" />
<text  x="848.90" y="447.5" >seastar::concrete_execution_stage&lt;sea..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.20%)</title><rect x="614.3" y="437" width="2.3" height="15.0" fill="rgb(237,86,32)" rx="2" ry="2" />
<text  x="617.33" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="32.8" y="469" width="0.2" height="15.0" fill="rgb(235,149,50)" rx="2" ry="2" />
<text  x="35.76" y="479.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (5 samples, 0.09%)</title><rect x="305.6" y="277" width="1.1" height="15.0" fill="rgb(253,10,16)" rx="2" ry="2" />
<text  x="308.63" y="287.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (11 samples, 0.20%)</title><rect x="90.1" y="405" width="2.3" height="15.0" fill="rgb(221,24,32)" rx="2" ry="2" />
<text  x="93.07" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="1067.4" y="261" width="1.0" height="15.0" fill="rgb(246,155,50)" rx="2" ry="2" />
<text  x="1070.36" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="129.5" y="405" width="0.2" height="15.0" fill="rgb(214,103,21)" rx="2" ry="2" />
<text  x="132.47" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.02%)</title><rect x="17.4" y="245" width="0.2" height="15.0" fill="rgb(215,113,47)" rx="2" ry="2" />
<text  x="20.38" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~_Deque_base (1 samples, 0.02%)</title><rect x="12.1" y="309" width="0.2" height="15.0" fill="rgb(240,15,40)" rx="2" ry="2" />
<text  x="15.11" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (6 samples, 0.11%)</title><rect x="21.6" y="309" width="1.3" height="15.0" fill="rgb(230,229,31)" rx="2" ry="2" />
<text  x="24.59" y="319.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.27%)</title><rect x="655.4" y="437" width="3.2" height="15.0" fill="rgb(212,143,36)" rx="2" ry="2" />
<text  x="658.42" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3 samples, 0.05%)</title><rect x="13.4" y="197" width="0.6" height="15.0" fill="rgb(219,27,2)" rx="2" ry="2" />
<text  x="16.37" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.11%)</title><rect x="472.5" y="341" width="1.3" height="15.0" fill="rgb(239,181,34)" rx="2" ry="2" />
<text  x="475.52" y="351.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="1161.3" y="373" width="0.3" height="15.0" fill="rgb(213,26,1)" rx="2" ry="2" />
<text  x="1164.34" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.02%)</title><rect x="12.5" y="149" width="0.2" height="15.0" fill="rgb(251,124,38)" rx="2" ry="2" />
<text  x="15.53" y="159.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (2 samples, 0.04%)</title><rect x="598.3" y="405" width="0.4" height="15.0" fill="rgb(214,11,18)" rx="2" ry="2" />
<text  x="601.31" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (2 samples, 0.04%)</title><rect x="35.1" y="469" width="0.4" height="15.0" fill="rgb(219,8,49)" rx="2" ry="2" />
<text  x="38.08" y="479.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="12.5" y="181" width="0.2" height="15.0" fill="rgb(214,8,36)" rx="2" ry="2" />
<text  x="15.53" y="191.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_line (1 samples, 0.02%)</title><rect x="13.2" y="229" width="0.2" height="15.0" fill="rgb(251,115,5)" rx="2" ry="2" />
<text  x="16.16" y="239.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (729 samples, 13.02%)</title><rect x="163.8" y="357" width="153.6" height="15.0" fill="rgb(232,52,12)" rx="2" ry="2" />
<text  x="166.82" y="367.5" >merging_reader&lt;muta..</text>
</g>
<g >
<title>seastar::reactor::del_timer (3 samples, 0.05%)</title><rect x="697.6" y="405" width="0.6" height="15.0" fill="rgb(235,162,34)" rx="2" ry="2" />
<text  x="700.56" y="415.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (3 samples, 0.05%)</title><rect x="798.3" y="277" width="0.6" height="15.0" fill="rgb(223,17,37)" rx="2" ry="2" />
<text  x="801.28" y="287.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.23%)</title><rect x="821.7" y="389" width="2.7" height="15.0" fill="rgb(240,179,30)" rx="2" ry="2" />
<text  x="824.67" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="23.7" y="277" width="0.2" height="15.0" fill="rgb(205,31,37)" rx="2" ry="2" />
<text  x="26.70" y="287.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="541.0" y="309" width="0.6" height="15.0" fill="rgb(251,62,30)" rx="2" ry="2" />
<text  x="544.00" y="319.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (532 samples, 9.50%)</title><rect x="724.1" y="421" width="112.1" height="15.0" fill="rgb(237,49,15)" rx="2" ry="2" />
<text  x="727.11" y="431.5" >single_node_c..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="12.3" y="309" width="0.2" height="15.0" fill="rgb(241,82,48)" rx="2" ry="2" />
<text  x="15.32" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (22 samples, 0.39%)</title><rect x="17.0" y="325" width="4.6" height="15.0" fill="rgb(215,167,14)" rx="2" ry="2" />
<text  x="19.95" y="335.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.02%)</title><rect x="721.0" y="421" width="0.2" height="15.0" fill="rgb(245,135,32)" rx="2" ry="2" />
<text  x="723.95" y="431.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (30 samples, 0.54%)</title><rect x="281.0" y="197" width="6.3" height="15.0" fill="rgb(222,78,15)" rx="2" ry="2" />
<text  x="283.98" y="207.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="32.8" y="517" width="0.2" height="15.0" fill="rgb(236,26,51)" rx="2" ry="2" />
<text  x="35.76" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.23%)</title><rect x="951.7" y="309" width="2.7" height="15.0" fill="rgb(235,213,43)" rx="2" ry="2" />
<text  x="954.68" y="319.5" ></text>
</g>
<g >
<title>seastar::with_semaphore&lt;seastar::semaphore_default_exception_factory, gms::gossiper::run (1 samples, 0.02%)</title><rect x="1161.3" y="421" width="0.3" height="15.0" fill="rgb(209,91,46)" rx="2" ry="2" />
<text  x="1164.34" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="20.7" y="245" width="0.5" height="15.0" fill="rgb(249,191,39)" rx="2" ry="2" />
<text  x="23.75" y="255.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="21.4" y="229" width="0.2" height="15.0" fill="rgb(244,162,3)" rx="2" ry="2" />
<text  x="24.38" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="687.4" y="421" width="0.3" height="15.0" fill="rgb(225,6,47)" rx="2" ry="2" />
<text  x="690.45" y="431.5" ></text>
</g>
<g >
<title>schema::column_at (5 samples, 0.09%)</title><rect x="392.7" y="325" width="1.0" height="15.0" fill="rgb(253,42,23)" rx="2" ry="2" />
<text  x="395.66" y="335.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="78.5" y="437" width="0.2" height="15.0" fill="rgb(206,44,8)" rx="2" ry="2" />
<text  x="81.48" y="447.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (1 samples, 0.02%)</title><rect x="909.3" y="325" width="0.2" height="15.0" fill="rgb(224,130,46)" rx="2" ry="2" />
<text  x="912.33" y="335.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="354.3" y="325" width="0.2" height="15.0" fill="rgb(220,167,15)" rx="2" ry="2" />
<text  x="357.31" y="335.5" ></text>
</g>
<g >
<title>row_cache::make_reader (65 samples, 1.16%)</title><rect x="574.9" y="357" width="13.7" height="15.0" fill="rgb(254,161,21)" rx="2" ry="2" />
<text  x="577.92" y="367.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="674.8" y="405" width="0.2" height="15.0" fill="rgb(253,163,50)" rx="2" ry="2" />
<text  x="677.80" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1,274 samples, 22.75%)</title><rect x="854.1" y="405" width="268.5" height="15.0" fill="rgb(249,153,34)" rx="2" ry="2" />
<text  x="857.12" y="415.5" >seastar::noncopyable_function&lt;seast..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.09%)</title><rect x="658.6" y="437" width="1.0" height="15.0" fill="rgb(254,210,50)" rx="2" ry="2" />
<text  x="661.58" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (3 samples, 0.05%)</title><rect x="639.0" y="389" width="0.6" height="15.0" fill="rgb(212,39,0)" rx="2" ry="2" />
<text  x="641.98" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="212.9" y="261" width="1.3" height="15.0" fill="rgb(230,203,51)" rx="2" ry="2" />
<text  x="215.92" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="68.4" y="357" width="0.2" height="15.0" fill="rgb(225,93,7)" rx="2" ry="2" />
<text  x="71.37" y="367.5" ></text>
</g>
<g >
<title>dht::sharder::shard_of (1 samples, 0.02%)</title><rect x="995.5" y="261" width="0.2" height="15.0" fill="rgb(231,96,21)" rx="2" ry="2" />
<text  x="998.51" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="19.5" y="261" width="0.2" height="15.0" fill="rgb(209,1,40)" rx="2" ry="2" />
<text  x="22.48" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (2 samples, 0.04%)</title><rect x="21.2" y="245" width="0.4" height="15.0" fill="rgb(211,171,26)" rx="2" ry="2" />
<text  x="24.17" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="529.2" y="309" width="0.4" height="15.0" fill="rgb(224,137,22)" rx="2" ry="2" />
<text  x="532.20" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::update_write_metrics&lt;seastar::future&lt;void&gt; &gt; (1 samples, 0.02%)</title><rect x="675.0" y="453" width="0.2" height="15.0" fill="rgb(253,193,30)" rx="2" ry="2" />
<text  x="678.01" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (518 samples, 9.25%)</title><rect x="480.5" y="389" width="109.2" height="15.0" fill="rgb(234,43,22)" rx="2" ry="2" />
<text  x="483.52" y="399.5" >std::_Functio..</text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (3 samples, 0.05%)</title><rect x="197.3" y="325" width="0.7" height="15.0" fill="rgb(233,68,49)" rx="2" ry="2" />
<text  x="200.32" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.23%)</title><rect x="828.6" y="389" width="2.8" height="15.0" fill="rgb(250,101,32)" rx="2" ry="2" />
<text  x="831.62" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (1 samples, 0.02%)</title><rect x="1161.8" y="437" width="0.2" height="15.0" fill="rgb(231,1,17)" rx="2" ry="2" />
<text  x="1164.76" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2 samples, 0.04%)</title><rect x="307.9" y="293" width="0.5" height="15.0" fill="rgb(240,112,2)" rx="2" ry="2" />
<text  x="310.95" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="16.7" y="293" width="0.3" height="15.0" fill="rgb(248,133,52)" rx="2" ry="2" />
<text  x="19.74" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="886.6" y="277" width="0.8" height="15.0" fill="rgb(240,87,8)" rx="2" ry="2" />
<text  x="889.57" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="17.8" y="149" width="0.2" height="15.0" fill="rgb(229,89,13)" rx="2" ry="2" />
<text  x="20.80" y="159.5" ></text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.02%)</title><rect x="24.3" y="437" width="0.2" height="15.0" fill="rgb(212,139,52)" rx="2" ry="2" />
<text  x="27.33" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="19.3" y="133" width="0.2" height="15.0" fill="rgb(236,120,28)" rx="2" ry="2" />
<text  x="22.27" y="143.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (3 samples, 0.05%)</title><rect x="737.6" y="405" width="0.6" height="15.0" fill="rgb(214,106,13)" rx="2" ry="2" />
<text  x="740.60" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.02%)</title><rect x="13.8" y="133" width="0.2" height="15.0" fill="rgb(247,192,3)" rx="2" ry="2" />
<text  x="16.79" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (7 samples, 0.12%)</title><rect x="842.7" y="453" width="1.5" height="15.0" fill="rgb(235,68,39)" rx="2" ry="2" />
<text  x="845.74" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="478.8" y="373" width="1.1" height="15.0" fill="rgb(215,78,1)" rx="2" ry="2" />
<text  x="481.84" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (1 samples, 0.02%)</title><rect x="845.3" y="341" width="0.2" height="15.0" fill="rgb(231,116,14)" rx="2" ry="2" />
<text  x="848.27" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (70 samples, 1.25%)</title><rect x="688.1" y="453" width="14.7" height="15.0" fill="rgb(242,90,47)" rx="2" ry="2" />
<text  x="691.08" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (18 samples, 0.32%)</title><rect x="192.3" y="309" width="3.8" height="15.0" fill="rgb(233,83,3)" rx="2" ry="2" />
<text  x="195.27" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="507.7" y="325" width="0.2" height="15.0" fill="rgb(228,159,47)" rx="2" ry="2" />
<text  x="510.71" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (1 samples, 0.02%)</title><rect x="16.1" y="293" width="0.2" height="15.0" fill="rgb(234,205,22)" rx="2" ry="2" />
<text  x="19.11" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (2 samples, 0.04%)</title><rect x="1126.6" y="453" width="0.4" height="15.0" fill="rgb(217,204,24)" rx="2" ry="2" />
<text  x="1129.58" y="463.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="17.4" y="101" width="0.2" height="15.0" fill="rgb(245,121,12)" rx="2" ry="2" />
<text  x="20.38" y="111.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="22.2" y="277" width="0.2" height="15.0" fill="rgb(241,138,49)" rx="2" ry="2" />
<text  x="25.22" y="287.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.38%)</title><rect x="143.4" y="405" width="4.4" height="15.0" fill="rgb(231,121,21)" rx="2" ry="2" />
<text  x="146.38" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.27%)</title><rect x="1143.9" y="421" width="3.1" height="15.0" fill="rgb(243,90,6)" rx="2" ry="2" />
<text  x="1146.85" y="431.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (6 samples, 0.11%)</title><rect x="700.9" y="405" width="1.3" height="15.0" fill="rgb(227,62,18)" rx="2" ry="2" />
<text  x="703.93" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="19.3" y="85" width="0.2" height="15.0" fill="rgb(244,79,29)" rx="2" ry="2" />
<text  x="22.27" y="95.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.12%)</title><rect x="328.6" y="373" width="1.5" height="15.0" fill="rgb(221,184,21)" rx="2" ry="2" />
<text  x="331.60" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.02%)</title><rect x="844.2" y="421" width="0.2" height="15.0" fill="rgb(237,58,25)" rx="2" ry="2" />
<text  x="847.22" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.04%)</title><rect x="15.5" y="213" width="0.4" height="15.0" fill="rgb(247,35,43)" rx="2" ry="2" />
<text  x="18.48" y="223.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.02%)</title><rect x="68.6" y="309" width="0.2" height="15.0" fill="rgb(230,77,3)" rx="2" ry="2" />
<text  x="71.58" y="319.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="70.9" y="453" width="0.6" height="15.0" fill="rgb(226,46,17)" rx="2" ry="2" />
<text  x="73.90" y="463.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (35 samples, 0.62%)</title><rect x="1030.5" y="197" width="7.4" height="15.0" fill="rgb(235,38,5)" rx="2" ry="2" />
<text  x="1033.49" y="207.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (6 samples, 0.11%)</title><rect x="1162.4" y="581" width="1.3" height="15.0" fill="rgb(227,92,37)" rx="2" ry="2" />
<text  x="1165.40" y="591.5" ></text>
</g>
<g >
<title>__start_context (68 samples, 1.21%)</title><rect x="10.0" y="549" width="14.3" height="15.0" fill="rgb(239,90,42)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>query_result_builder::query_result_builder (1 samples, 0.02%)</title><rect x="590.1" y="405" width="0.2" height="15.0" fill="rgb(243,54,3)" rx="2" ry="2" />
<text  x="593.10" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.16%)</title><rect x="879.4" y="261" width="1.9" height="15.0" fill="rgb(217,140,25)" rx="2" ry="2" />
<text  x="882.41" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="1150.0" y="437" width="0.4" height="15.0" fill="rgb(248,185,19)" rx="2" ry="2" />
<text  x="1152.96" y="447.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="566.3" y="325" width="1.0" height="15.0" fill="rgb(228,11,11)" rx="2" ry="2" />
<text  x="569.29" y="335.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (5 samples, 0.09%)</title><rect x="1071.4" y="277" width="1.0" height="15.0" fill="rgb(235,15,34)" rx="2" ry="2" />
<text  x="1074.37" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (4 samples, 0.07%)</title><rect x="844.4" y="341" width="0.9" height="15.0" fill="rgb(224,178,38)" rx="2" ry="2" />
<text  x="847.43" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.02%)</title><rect x="22.2" y="293" width="0.2" height="15.0" fill="rgb(215,169,15)" rx="2" ry="2" />
<text  x="25.22" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (1 samples, 0.02%)</title><rect x="1124.0" y="213" width="0.3" height="15.0" fill="rgb(226,165,6)" rx="2" ry="2" />
<text  x="1127.05" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.18%)</title><rect x="707.9" y="421" width="2.1" height="15.0" fill="rgb(231,217,29)" rx="2" ry="2" />
<text  x="710.89" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="21.4" y="133" width="0.2" height="15.0" fill="rgb(238,151,45)" rx="2" ry="2" />
<text  x="24.38" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="853.5" y="421" width="0.4" height="15.0" fill="rgb(209,165,24)" rx="2" ry="2" />
<text  x="856.49" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="355.8" y="341" width="0.2" height="15.0" fill="rgb(250,8,18)" rx="2" ry="2" />
<text  x="358.78" y="351.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="24.3" y="517" width="0.2" height="15.0" fill="rgb(207,211,47)" rx="2" ry="2" />
<text  x="27.33" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="619.0" y="437" width="0.2" height="15.0" fill="rgb(235,122,14)" rx="2" ry="2" />
<text  x="621.96" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.05%)</title><rect x="1037.0" y="181" width="0.7" height="15.0" fill="rgb(208,181,21)" rx="2" ry="2" />
<text  x="1040.02" y="191.5" ></text>
</g>
<g >
<title>validation::validate_column_family (52 samples, 0.93%)</title><rect x="807.3" y="357" width="11.0" height="15.0" fill="rgb(252,137,20)" rx="2" ry="2" />
<text  x="810.34" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="354.3" y="213" width="0.2" height="15.0" fill="rgb(227,67,29)" rx="2" ry="2" />
<text  x="357.31" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (17 samples, 0.30%)</title><rect x="1118.4" y="373" width="3.5" height="15.0" fill="rgb(211,1,45)" rx="2" ry="2" />
<text  x="1121.36" y="383.5" ></text>
</g>
<g >
<title>frozen_mutation::partition (1 samples, 0.02%)</title><rect x="1123.0" y="309" width="0.2" height="15.0" fill="rgb(206,177,8)" rx="2" ry="2" />
<text  x="1125.99" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (28 samples, 0.50%)</title><rect x="634.6" y="421" width="5.9" height="15.0" fill="rgb(240,87,24)" rx="2" ry="2" />
<text  x="637.56" y="431.5" ></text>
</g>
<g >
<title>sstables::sstable::write_scylla_metadata (1 samples, 0.02%)</title><rect x="24.3" y="453" width="0.2" height="15.0" fill="rgb(207,3,2)" rx="2" ry="2" />
<text  x="27.33" y="463.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::explode (1 samples, 0.02%)</title><rect x="1123.8" y="149" width="0.2" height="15.0" fill="rgb(220,135,50)" rx="2" ry="2" />
<text  x="1126.84" y="159.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (9 samples, 0.16%)</title><rect x="411.2" y="341" width="1.9" height="15.0" fill="rgb(217,13,32)" rx="2" ry="2" />
<text  x="414.20" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.02%)</title><rect x="12.5" y="165" width="0.2" height="15.0" fill="rgb(218,36,22)" rx="2" ry="2" />
<text  x="15.53" y="175.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.05%)</title><rect x="57.2" y="405" width="0.6" height="15.0" fill="rgb(251,46,45)" rx="2" ry="2" />
<text  x="60.20" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (9 samples, 0.16%)</title><rect x="19.7" y="277" width="1.9" height="15.0" fill="rgb(243,205,38)" rx="2" ry="2" />
<text  x="22.69" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="1038.7" y="197" width="0.4" height="15.0" fill="rgb(217,131,9)" rx="2" ry="2" />
<text  x="1041.71" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (2 samples, 0.04%)</title><rect x="509.8" y="341" width="0.4" height="15.0" fill="rgb(207,45,47)" rx="2" ry="2" />
<text  x="512.81" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.23%)</title><rect x="1009.8" y="213" width="2.8" height="15.0" fill="rgb(212,92,54)" rx="2" ry="2" />
<text  x="1012.84" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.36%)</title><rect x="939.5" y="341" width="4.2" height="15.0" fill="rgb(209,78,51)" rx="2" ry="2" />
<text  x="942.46" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="840.2" y="453" width="0.2" height="15.0" fill="rgb(250,2,32)" rx="2" ry="2" />
<text  x="843.21" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1 samples, 0.02%)</title><rect x="1124.5" y="437" width="0.2" height="15.0" fill="rgb(228,135,25)" rx="2" ry="2" />
<text  x="1127.47" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (55 samples, 0.98%)</title><rect x="690.8" y="437" width="11.6" height="15.0" fill="rgb(232,153,33)" rx="2" ry="2" />
<text  x="693.82" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="503.9" y="309" width="0.4" height="15.0" fill="rgb(246,41,21)" rx="2" ry="2" />
<text  x="506.91" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::fstat (1 samples, 0.02%)</title><rect x="661.5" y="421" width="0.2" height="15.0" fill="rgb(205,128,15)" rx="2" ry="2" />
<text  x="664.53" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (9 samples, 0.16%)</title><rect x="199.6" y="309" width="1.9" height="15.0" fill="rgb(248,117,29)" rx="2" ry="2" />
<text  x="202.64" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.02%)</title><rect x="68.4" y="421" width="0.2" height="15.0" fill="rgb(205,39,28)" rx="2" ry="2" />
<text  x="71.37" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (2 samples, 0.04%)</title><rect x="1046.9" y="277" width="0.4" height="15.0" fill="rgb(238,38,17)" rx="2" ry="2" />
<text  x="1049.92" y="287.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (1 samples, 0.02%)</title><rect x="1123.8" y="197" width="0.2" height="15.0" fill="rgb(215,217,46)" rx="2" ry="2" />
<text  x="1126.84" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (6 samples, 0.11%)</title><rect x="290.5" y="181" width="1.2" height="15.0" fill="rgb(246,180,6)" rx="2" ry="2" />
<text  x="293.46" y="191.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (3 samples, 0.05%)</title><rect x="13.4" y="229" width="0.6" height="15.0" fill="rgb(249,59,39)" rx="2" ry="2" />
<text  x="16.37" y="239.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (1 samples, 0.02%)</title><rect x="15.1" y="213" width="0.2" height="15.0" fill="rgb(224,175,28)" rx="2" ry="2" />
<text  x="18.06" y="223.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="33.4" y="469" width="0.2" height="15.0" fill="rgb(234,101,35)" rx="2" ry="2" />
<text  x="36.39" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.02%)</title><rect x="20.1" y="213" width="0.2" height="15.0" fill="rgb(249,51,24)" rx="2" ry="2" />
<text  x="23.11" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1124.0" y="165" width="0.3" height="15.0" fill="rgb(216,211,23)" rx="2" ry="2" />
<text  x="1127.05" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (435 samples, 7.77%)</title><rect x="206.2" y="293" width="91.6" height="15.0" fill="rgb(237,214,45)" rx="2" ry="2" />
<text  x="209.18" y="303.5" >partition_..</text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (2 samples, 0.04%)</title><rect x="844.4" y="277" width="0.5" height="15.0" fill="rgb(240,88,40)" rx="2" ry="2" />
<text  x="847.43" y="287.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.16%)</title><rect x="879.4" y="277" width="1.9" height="15.0" fill="rgb(240,10,48)" rx="2" ry="2" />
<text  x="882.41" y="287.5" ></text>
</g>
<g >
<title>freeze (1 samples, 0.02%)</title><rect x="1123.8" y="213" width="0.2" height="15.0" fill="rgb(209,192,28)" rx="2" ry="2" />
<text  x="1126.84" y="223.5" ></text>
</g>
<g >
<title>partition_entry::read (9 samples, 0.16%)</title><rect x="565.4" y="341" width="1.9" height="15.0" fill="rgb(212,53,21)" rx="2" ry="2" />
<text  x="568.44" y="351.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.02%)</title><rect x="68.4" y="373" width="0.2" height="15.0" fill="rgb(228,204,9)" rx="2" ry="2" />
<text  x="71.37" y="383.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.02%)</title><rect x="756.1" y="373" width="0.3" height="15.0" fill="rgb(230,159,40)" rx="2" ry="2" />
<text  x="759.14" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="655.2" y="421" width="0.2" height="15.0" fill="rgb(233,215,6)" rx="2" ry="2" />
<text  x="658.21" y="431.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.02%)</title><rect x="68.6" y="261" width="0.2" height="15.0" fill="rgb(239,163,13)" rx="2" ry="2" />
<text  x="71.58" y="271.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="19.3" y="101" width="0.2" height="15.0" fill="rgb(220,140,53)" rx="2" ry="2" />
<text  x="22.27" y="111.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (21 samples, 0.38%)</title><rect x="891.4" y="261" width="4.4" height="15.0" fill="rgb(216,111,50)" rx="2" ry="2" />
<text  x="894.42" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (1 samples, 0.02%)</title><rect x="22.4" y="277" width="0.2" height="15.0" fill="rgb(214,79,3)" rx="2" ry="2" />
<text  x="25.43" y="287.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.05%)</title><rect x="479.9" y="389" width="0.6" height="15.0" fill="rgb(251,7,16)" rx="2" ry="2" />
<text  x="482.89" y="399.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.02%)</title><rect x="983.1" y="293" width="0.2" height="15.0" fill="rgb(249,23,10)" rx="2" ry="2" />
<text  x="986.08" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="1024.8" y="181" width="1.1" height="15.0" fill="rgb(214,174,0)" rx="2" ry="2" />
<text  x="1027.80" y="191.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="585.7" y="309" width="0.2" height="15.0" fill="rgb(235,66,5)" rx="2" ry="2" />
<text  x="588.67" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="17.8" y="181" width="0.2" height="15.0" fill="rgb(208,219,7)" rx="2" ry="2" />
<text  x="20.80" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="844.4" y="229" width="0.2" height="15.0" fill="rgb(232,207,17)" rx="2" ry="2" />
<text  x="847.43" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="467.0" y="341" width="0.2" height="15.0" fill="rgb(235,199,36)" rx="2" ry="2" />
<text  x="470.04" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1161.3" y="261" width="0.3" height="15.0" fill="rgb(231,91,25)" rx="2" ry="2" />
<text  x="1164.34" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (703 samples, 12.55%)</title><rect x="947.3" y="341" width="148.1" height="15.0" fill="rgb(254,174,7)" rx="2" ry="2" />
<text  x="950.26" y="351.5" >service::storage_p..</text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.02%)</title><rect x="354.3" y="229" width="0.2" height="15.0" fill="rgb(211,208,30)" rx="2" ry="2" />
<text  x="357.31" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.04%)</title><rect x="1160.7" y="453" width="0.4" height="15.0" fill="rgb(245,39,36)" rx="2" ry="2" />
<text  x="1163.71" y="463.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::grant_role_statement*, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="23.7" y="293" width="0.2" height="15.0" fill="rgb(248,200,25)" rx="2" ry="2" />
<text  x="26.70" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.04%)</title><rect x="1125.3" y="453" width="0.4" height="15.0" fill="rgb(215,199,32)" rx="2" ry="2" />
<text  x="1128.31" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="696.1" y="421" width="0.2" height="15.0" fill="rgb(250,53,13)" rx="2" ry="2" />
<text  x="699.09" y="431.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (37 samples, 0.66%)</title><rect x="24.5" y="565" width="7.8" height="15.0" fill="rgb(251,6,36)" rx="2" ry="2" />
<text  x="27.54" y="575.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.21%)</title><rect x="1112.5" y="373" width="2.5" height="15.0" fill="rgb(216,219,44)" rx="2" ry="2" />
<text  x="1115.46" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (265 samples, 4.73%)</title><rect x="991.1" y="277" width="55.8" height="15.0" fill="rgb(252,57,43)" rx="2" ry="2" />
<text  x="994.09" y="287.5" >servi..</text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="19.1" y="149" width="0.2" height="15.0" fill="rgb(221,56,51)" rx="2" ry="2" />
<text  x="22.06" y="159.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.04%)</title><rect x="205.5" y="277" width="0.5" height="15.0" fill="rgb(242,12,20)" rx="2" ry="2" />
<text  x="208.54" y="287.5" ></text>
</g>
<g >
<title>database::has_keyspace (10 samples, 0.18%)</title><rect x="833.9" y="389" width="2.1" height="15.0" fill="rgb(230,60,1)" rx="2" ry="2" />
<text  x="836.89" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (1 samples, 0.02%)</title><rect x="12.5" y="277" width="0.2" height="15.0" fill="rgb(217,76,49)" rx="2" ry="2" />
<text  x="15.53" y="287.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (9 samples, 0.16%)</title><rect x="599.4" y="405" width="1.9" height="15.0" fill="rgb(220,154,10)" rx="2" ry="2" />
<text  x="602.37" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="16.7" y="261" width="0.3" height="15.0" fill="rgb(223,223,44)" rx="2" ry="2" />
<text  x="19.74" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="17.4" y="181" width="0.2" height="15.0" fill="rgb(227,23,21)" rx="2" ry="2" />
<text  x="20.38" y="191.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.02%)</title><rect x="976.5" y="293" width="0.3" height="15.0" fill="rgb(250,72,43)" rx="2" ry="2" />
<text  x="979.55" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.41%)</title><rect x="976.8" y="277" width="4.8" height="15.0" fill="rgb(206,76,29)" rx="2" ry="2" />
<text  x="979.76" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="883.4" y="277" width="0.2" height="15.0" fill="rgb(247,37,26)" rx="2" ry="2" />
<text  x="886.41" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="541.6" y="325" width="0.5" height="15.0" fill="rgb(207,8,51)" rx="2" ry="2" />
<text  x="544.63" y="335.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (9 samples, 0.16%)</title><rect x="317.4" y="357" width="1.9" height="15.0" fill="rgb(250,197,11)" rx="2" ry="2" />
<text  x="320.43" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (56 samples, 1.00%)</title><rect x="12.3" y="389" width="11.8" height="15.0" fill="rgb(206,83,13)" rx="2" ry="2" />
<text  x="15.32" y="399.5" ></text>
</g>
<g >
<title>database::query (116 samples, 2.07%)</title><rect x="1015.1" y="229" width="24.4" height="15.0" fill="rgb(231,162,36)" rx="2" ry="2" />
<text  x="1018.11" y="239.5" >d..</text>
</g>
<g >
<title>gms::gossiper::is_alive (2 samples, 0.04%)</title><rect x="1064.8" y="293" width="0.5" height="15.0" fill="rgb(230,111,37)" rx="2" ry="2" />
<text  x="1067.84" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.04%)</title><rect x="32.5" y="533" width="0.5" height="15.0" fill="rgb(246,143,46)" rx="2" ry="2" />
<text  x="35.55" y="543.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="16.7" y="277" width="0.3" height="15.0" fill="rgb(244,84,53)" rx="2" ry="2" />
<text  x="19.74" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.05%)</title><rect x="585.0" y="293" width="0.7" height="15.0" fill="rgb(221,165,21)" rx="2" ry="2" />
<text  x="588.04" y="303.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (1 samples, 0.02%)</title><rect x="887.8" y="277" width="0.2" height="15.0" fill="rgb(208,193,14)" rx="2" ry="2" />
<text  x="890.84" y="287.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="19.5" y="197" width="0.2" height="15.0" fill="rgb(205,70,51)" rx="2" ry="2" />
<text  x="22.48" y="207.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (36 samples, 0.64%)</title><rect x="129.7" y="405" width="7.6" height="15.0" fill="rgb(212,196,45)" rx="2" ry="2" />
<text  x="132.69" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;gms::application_state, std::pair&lt;gms::application_state const, gms::versioned_value&gt;, std::_Select1st&lt;std::pair&lt;gms::application_state const, gms::versioned_value&gt; &gt;, std::less&lt;gms::application_state&gt;, std::allocator&lt;std::pair&lt;gms::application_state const, gms::versioned_value&gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;gms::application_state, std::pair&lt;gms::application_state const, gms::versioned_value&gt;, std::_Select1st&lt;std::pair&lt;gms::application_state const, gms::versioned_value&gt; &gt;, std::less&lt;gms::application_state&gt;, std::allocator&lt;std::pair&lt;gms::application_state const, gms::versioned_value&gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.02%)</title><rect x="1161.3" y="293" width="0.3" height="15.0" fill="rgb(246,164,45)" rx="2" ry="2" />
<text  x="1164.34" y="303.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="748.8" y="357" width="0.4" height="15.0" fill="rgb(241,159,51)" rx="2" ry="2" />
<text  x="751.76" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (12 samples, 0.21%)</title><rect x="551.5" y="309" width="2.6" height="15.0" fill="rgb(215,15,25)" rx="2" ry="2" />
<text  x="554.54" y="319.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (2 samples, 0.04%)</title><rect x="748.3" y="357" width="0.5" height="15.0" fill="rgb(241,152,8)" rx="2" ry="2" />
<text  x="751.34" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.07%)</title><rect x="921.5" y="341" width="0.9" height="15.0" fill="rgb(217,190,15)" rx="2" ry="2" />
<text  x="924.55" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="803.8" y="309" width="0.2" height="15.0" fill="rgb(237,66,22)" rx="2" ry="2" />
<text  x="806.76" y="319.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.18%)</title><rect x="1028.4" y="197" width="2.1" height="15.0" fill="rgb(215,25,5)" rx="2" ry="2" />
<text  x="1031.38" y="207.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (78 samples, 1.39%)</title><rect x="783.3" y="309" width="16.5" height="15.0" fill="rgb(239,153,7)" rx="2" ry="2" />
<text  x="786.32" y="319.5" ></text>
</g>
<g >
<title>gms::gossiper::run (1 samples, 0.02%)</title><rect x="1161.3" y="437" width="0.3" height="15.0" fill="rgb(239,62,11)" rx="2" ry="2" />
<text  x="1164.34" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="17.2" y="149" width="0.2" height="15.0" fill="rgb(252,56,13)" rx="2" ry="2" />
<text  x="20.16" y="159.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (2 samples, 0.04%)</title><rect x="451.4" y="341" width="0.5" height="15.0" fill="rgb(236,87,3)" rx="2" ry="2" />
<text  x="454.45" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="17.8" y="213" width="0.2" height="15.0" fill="rgb(233,224,53)" rx="2" ry="2" />
<text  x="20.80" y="223.5" ></text>
</g>
<g >
<title>db::system_keyspace::query_mutations (1 samples, 0.02%)</title><rect x="68.6" y="389" width="0.2" height="15.0" fill="rgb(246,159,54)" rx="2" ry="2" />
<text  x="71.58" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.02%)</title><rect x="287.1" y="181" width="0.2" height="15.0" fill="rgb(222,93,9)" rx="2" ry="2" />
<text  x="290.09" y="191.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (8 samples, 0.14%)</title><rect x="204.5" y="293" width="1.7" height="15.0" fill="rgb(248,98,53)" rx="2" ry="2" />
<text  x="207.49" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::stats (3 samples, 0.05%)</title><rect x="583.8" y="309" width="0.6" height="15.0" fill="rgb(239,45,3)" rx="2" ry="2" />
<text  x="586.77" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.12%)</title><rect x="542.5" y="309" width="1.5" height="15.0" fill="rgb(237,196,32)" rx="2" ry="2" />
<text  x="545.48" y="319.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.02%)</title><rect x="68.6" y="325" width="0.2" height="15.0" fill="rgb(251,129,29)" rx="2" ry="2" />
<text  x="71.58" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.14%)</title><rect x="369.3" y="341" width="1.7" height="15.0" fill="rgb(238,59,5)" rx="2" ry="2" />
<text  x="372.27" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="12.1" y="261" width="0.2" height="15.0" fill="rgb(235,68,37)" rx="2" ry="2" />
<text  x="15.11" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="968.5" y="277" width="1.1" height="15.0" fill="rgb(217,66,54)" rx="2" ry="2" />
<text  x="971.54" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.07%)</title><rect x="674.0" y="437" width="0.8" height="15.0" fill="rgb(245,225,41)" rx="2" ry="2" />
<text  x="676.96" y="447.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.02%)</title><rect x="845.5" y="325" width="0.2" height="15.0" fill="rgb(213,114,47)" rx="2" ry="2" />
<text  x="848.48" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (1 samples, 0.02%)</title><rect x="674.8" y="453" width="0.2" height="15.0" fill="rgb(238,191,17)" rx="2" ry="2" />
<text  x="677.80" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="689.1" y="421" width="0.2" height="15.0" fill="rgb(207,52,20)" rx="2" ry="2" />
<text  x="692.13" y="431.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="651.8" y="437" width="0.2" height="15.0" fill="rgb(214,148,9)" rx="2" ry="2" />
<text  x="654.84" y="447.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="699.0" y="405" width="0.2" height="15.0" fill="rgb(242,68,43)" rx="2" ry="2" />
<text  x="702.04" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.27%)</title><rect x="987.9" y="261" width="3.2" height="15.0" fill="rgb(228,163,23)" rx="2" ry="2" />
<text  x="990.92" y="271.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="21.4" y="213" width="0.2" height="15.0" fill="rgb(253,128,13)" rx="2" ry="2" />
<text  x="24.38" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="1123.8" y="389" width="0.5" height="15.0" fill="rgb(247,163,47)" rx="2" ry="2" />
<text  x="1126.84" y="399.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.12%)</title><rect x="556.8" y="309" width="1.5" height="15.0" fill="rgb(229,199,16)" rx="2" ry="2" />
<text  x="559.80" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (18 samples, 0.32%)</title><rect x="12.5" y="309" width="3.8" height="15.0" fill="rgb(245,124,19)" rx="2" ry="2" />
<text  x="15.53" y="319.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="688.9" y="437" width="0.4" height="15.0" fill="rgb(225,57,22)" rx="2" ry="2" />
<text  x="691.92" y="447.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.05%)</title><rect x="17.8" y="277" width="0.6" height="15.0" fill="rgb(220,166,22)" rx="2" ry="2" />
<text  x="20.80" y="287.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="19.3" y="245" width="0.2" height="15.0" fill="rgb(243,72,9)" rx="2" ry="2" />
<text  x="22.27" y="255.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.02%)</title><rect x="844.2" y="277" width="0.2" height="15.0" fill="rgb(222,192,11)" rx="2" ry="2" />
<text  x="847.22" y="287.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.04%)</title><rect x="18.0" y="261" width="0.4" height="15.0" fill="rgb(219,186,22)" rx="2" ry="2" />
<text  x="21.01" y="271.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (2 samples, 0.04%)</title><rect x="1126.2" y="453" width="0.4" height="15.0" fill="rgb(253,192,25)" rx="2" ry="2" />
<text  x="1129.15" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.11%)</title><rect x="1122.6" y="405" width="1.2" height="15.0" fill="rgb(210,129,43)" rx="2" ry="2" />
<text  x="1125.57" y="415.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (68 samples, 1.21%)</title><rect x="10.0" y="533" width="14.3" height="15.0" fill="rgb(252,140,10)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="475.0" y="373" width="0.3" height="15.0" fill="rgb(225,173,41)" rx="2" ry="2" />
<text  x="478.05" y="383.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (4 samples, 0.07%)</title><rect x="937.6" y="357" width="0.8" height="15.0" fill="rgb(219,136,38)" rx="2" ry="2" />
<text  x="940.56" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (2 samples, 0.04%)</title><rect x="855.0" y="389" width="0.4" height="15.0" fill="rgb(246,83,3)" rx="2" ry="2" />
<text  x="857.96" y="399.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="467.2" y="341" width="0.3" height="15.0" fill="rgb(249,37,23)" rx="2" ry="2" />
<text  x="470.25" y="351.5" ></text>
</g>
<g >
<title>database::find_keyspace (16 samples, 0.29%)</title><rect x="1058.9" y="293" width="3.4" height="15.0" fill="rgb(238,122,34)" rx="2" ry="2" />
<text  x="1061.94" y="303.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (1 samples, 0.02%)</title><rect x="1094.8" y="261" width="0.2" height="15.0" fill="rgb(214,24,50)" rx="2" ry="2" />
<text  x="1097.76" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="24.3" y="485" width="0.2" height="15.0" fill="rgb(226,112,52)" rx="2" ry="2" />
<text  x="27.33" y="495.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="236.5" y="245" width="0.9" height="15.0" fill="rgb(220,219,43)" rx="2" ry="2" />
<text  x="239.52" y="255.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.14%)</title><rect x="563.8" y="341" width="1.6" height="15.0" fill="rgb(251,150,18)" rx="2" ry="2" />
<text  x="566.76" y="351.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.18%)</title><rect x="68.8" y="453" width="2.1" height="15.0" fill="rgb(241,158,23)" rx="2" ry="2" />
<text  x="71.79" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::stats (6 samples, 0.11%)</title><rect x="552.8" y="293" width="1.3" height="15.0" fill="rgb(242,142,16)" rx="2" ry="2" />
<text  x="555.80" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (11 samples, 0.20%)</title><rect x="36.5" y="469" width="2.4" height="15.0" fill="rgb(218,214,15)" rx="2" ry="2" />
<text  x="39.55" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (274 samples, 4.89%)</title><rect x="867.8" y="373" width="57.8" height="15.0" fill="rgb(236,175,25)" rx="2" ry="2" />
<text  x="870.82" y="383.5" >cql3::..</text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="293.2" y="261" width="0.2" height="15.0" fill="rgb(251,211,18)" rx="2" ry="2" />
<text  x="296.20" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.02%)</title><rect x="226.0" y="245" width="0.2" height="15.0" fill="rgb(238,86,53)" rx="2" ry="2" />
<text  x="228.98" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="622.5" y="437" width="0.3" height="15.0" fill="rgb(254,52,45)" rx="2" ry="2" />
<text  x="625.55" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.18%)</title><rect x="1028.4" y="181" width="2.1" height="15.0" fill="rgb(240,190,22)" rx="2" ry="2" />
<text  x="1031.38" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.27%)</title><rect x="311.5" y="325" width="3.2" height="15.0" fill="rgb(233,86,19)" rx="2" ry="2" />
<text  x="314.53" y="335.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.25%)</title><rect x="828.4" y="405" width="3.0" height="15.0" fill="rgb(218,184,54)" rx="2" ry="2" />
<text  x="831.41" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.02%)</title><rect x="19.5" y="277" width="0.2" height="15.0" fill="rgb(218,101,28)" rx="2" ry="2" />
<text  x="22.48" y="287.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (3 samples, 0.05%)</title><rect x="556.0" y="293" width="0.6" height="15.0" fill="rgb(247,178,0)" rx="2" ry="2" />
<text  x="558.96" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="22.2" y="229" width="0.2" height="15.0" fill="rgb(251,122,32)" rx="2" ry="2" />
<text  x="25.22" y="239.5" ></text>
</g>
<g >
<title>table::set_hit_rate (1 samples, 0.02%)</title><rect x="702.6" y="437" width="0.2" height="15.0" fill="rgb(213,108,6)" rx="2" ry="2" />
<text  x="705.62" y="447.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (1 samples, 0.02%)</title><rect x="598.1" y="405" width="0.2" height="15.0" fill="rgb(253,67,7)" rx="2" ry="2" />
<text  x="601.10" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (2,531 samples, 45.20%)</title><rect x="71.5" y="453" width="533.3" height="15.0" fill="rgb(228,80,46)" rx="2" ry="2" />
<text  x="74.53" y="463.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="1162.0" y="485" width="0.2" height="15.0" fill="rgb(232,55,21)" rx="2" ry="2" />
<text  x="1164.97" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (5 samples, 0.09%)</title><rect x="679.6" y="437" width="1.1" height="15.0" fill="rgb(207,85,46)" rx="2" ry="2" />
<text  x="682.65" y="447.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.16%)</title><rect x="611.0" y="437" width="1.9" height="15.0" fill="rgb(217,94,36)" rx="2" ry="2" />
<text  x="613.96" y="447.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.02%)</title><rect x="19.1" y="277" width="0.2" height="15.0" fill="rgb(239,229,28)" rx="2" ry="2" />
<text  x="22.06" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.02%)</title><rect x="134.1" y="341" width="0.2" height="15.0" fill="rgb(250,210,37)" rx="2" ry="2" />
<text  x="137.11" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (2 samples, 0.04%)</title><rect x="1123.8" y="229" width="0.5" height="15.0" fill="rgb(238,215,53)" rx="2" ry="2" />
<text  x="1126.84" y="239.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (6 samples, 0.11%)</title><rect x="844.4" y="357" width="1.3" height="15.0" fill="rgb(236,150,33)" rx="2" ry="2" />
<text  x="847.43" y="367.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.14%)</title><rect x="309.6" y="341" width="1.7" height="15.0" fill="rgb(233,71,32)" rx="2" ry="2" />
<text  x="312.64" y="351.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.30%)</title><rect x="1022.3" y="213" width="3.6" height="15.0" fill="rgb(207,124,33)" rx="2" ry="2" />
<text  x="1025.27" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (304 samples, 5.43%)</title><rect x="227.9" y="261" width="64.0" height="15.0" fill="rgb(254,195,52)" rx="2" ry="2" />
<text  x="230.88" y="271.5" >partiti..</text>
</g>
<g >
<title>service::storage_proxy::query_singular (141 samples, 2.52%)</title><rect x="1127.4" y="453" width="29.7" height="15.0" fill="rgb(219,186,10)" rx="2" ry="2" />
<text  x="1130.42" y="463.5" >se..</text>
</g>
<g >
<title>row_cache::do_make_reader (50 samples, 0.89%)</title><rect x="577.7" y="341" width="10.5" height="15.0" fill="rgb(218,195,53)" rx="2" ry="2" />
<text  x="580.66" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (5 samples, 0.09%)</title><rect x="226.2" y="245" width="1.0" height="15.0" fill="rgb(242,51,14)" rx="2" ry="2" />
<text  x="229.19" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.07%)</title><rect x="831.6" y="405" width="0.8" height="15.0" fill="rgb(233,112,15)" rx="2" ry="2" />
<text  x="834.58" y="415.5" ></text>
</g>
<g >
<title>database::find_schema (24 samples, 0.43%)</title><rect x="756.4" y="373" width="5.0" height="15.0" fill="rgb(235,90,49)" rx="2" ry="2" />
<text  x="759.35" y="383.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (4 samples, 0.07%)</title><rect x="637.9" y="389" width="0.9" height="15.0" fill="rgb(240,107,47)" rx="2" ry="2" />
<text  x="640.93" y="399.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.02%)</title><rect x="206.0" y="277" width="0.2" height="15.0" fill="rgb(214,30,13)" rx="2" ry="2" />
<text  x="208.96" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.02%)</title><rect x="844.2" y="309" width="0.2" height="15.0" fill="rgb(251,223,26)" rx="2" ry="2" />
<text  x="847.22" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="22.2" y="181" width="0.2" height="15.0" fill="rgb(215,132,8)" rx="2" ry="2" />
<text  x="25.22" y="191.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="151.2" y="389" width="0.6" height="15.0" fill="rgb(207,146,12)" rx="2" ry="2" />
<text  x="154.18" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.02%)</title><rect x="844.2" y="341" width="0.2" height="15.0" fill="rgb(232,44,36)" rx="2" ry="2" />
<text  x="847.22" y="351.5" ></text>
</g>
<g >
<title>table::set_hit_rate (15 samples, 0.27%)</title><rect x="699.2" y="421" width="3.2" height="15.0" fill="rgb(234,46,7)" rx="2" ry="2" />
<text  x="702.25" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.09%)</title><rect x="102.7" y="421" width="1.1" height="15.0" fill="rgb(222,122,6)" rx="2" ry="2" />
<text  x="105.71" y="431.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.07%)</title><rect x="1164.1" y="581" width="0.8" height="15.0" fill="rgb(223,15,31)" rx="2" ry="2" />
<text  x="1167.08" y="591.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (44 samples, 0.79%)</title><rect x="433.7" y="325" width="9.3" height="15.0" fill="rgb(218,130,3)" rx="2" ry="2" />
<text  x="436.75" y="335.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.02%)</title><rect x="68.6" y="405" width="0.2" height="15.0" fill="rgb(213,3,16)" rx="2" ry="2" />
<text  x="71.58" y="415.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.02%)</title><rect x="1121.9" y="373" width="0.3" height="15.0" fill="rgb(218,225,46)" rx="2" ry="2" />
<text  x="1124.94" y="383.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.02%)</title><rect x="17.0" y="293" width="0.2" height="15.0" fill="rgb(243,94,48)" rx="2" ry="2" />
<text  x="19.95" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.05%)</title><rect x="466.0" y="325" width="0.6" height="15.0" fill="rgb(215,24,22)" rx="2" ry="2" />
<text  x="468.99" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.05%)</title><rect x="703.0" y="453" width="0.7" height="15.0" fill="rgb(224,165,39)" rx="2" ry="2" />
<text  x="706.04" y="463.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (16 samples, 0.29%)</title><rect x="652.0" y="437" width="3.4" height="15.0" fill="rgb(212,43,0)" rx="2" ry="2" />
<text  x="655.05" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="12.3" y="197" width="0.2" height="15.0" fill="rgb(237,46,24)" rx="2" ry="2" />
<text  x="15.32" y="207.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (512 samples, 9.14%)</title><rect x="336.6" y="373" width="107.9" height="15.0" fill="rgb(241,47,1)" rx="2" ry="2" />
<text  x="339.61" y="383.5" >seastar::do_w..</text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.02%)</title><rect x="104.2" y="421" width="0.2" height="15.0" fill="rgb(217,206,7)" rx="2" ry="2" />
<text  x="107.19" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="844.2" y="453" width="0.2" height="15.0" fill="rgb(230,203,36)" rx="2" ry="2" />
<text  x="847.22" y="463.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.21%)</title><rect x="707.5" y="437" width="2.5" height="15.0" fill="rgb(219,122,31)" rx="2" ry="2" />
<text  x="710.46" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="19.1" y="261" width="0.2" height="15.0" fill="rgb(244,95,43)" rx="2" ry="2" />
<text  x="22.06" y="271.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (2 samples, 0.04%)</title><rect x="422.4" y="357" width="0.4" height="15.0" fill="rgb(205,42,26)" rx="2" ry="2" />
<text  x="425.37" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (1 samples, 0.02%)</title><rect x="1161.8" y="453" width="0.2" height="15.0" fill="rgb(205,154,51)" rx="2" ry="2" />
<text  x="1164.76" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="14.2" y="181" width="0.2" height="15.0" fill="rgb(216,90,54)" rx="2" ry="2" />
<text  x="17.21" y="191.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (60 samples, 1.07%)</title><rect x="184.7" y="325" width="12.6" height="15.0" fill="rgb(208,78,17)" rx="2" ry="2" />
<text  x="187.68" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="364.6" y="325" width="0.2" height="15.0" fill="rgb(239,181,29)" rx="2" ry="2" />
<text  x="367.63" y="335.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="22.2" y="101" width="0.2" height="15.0" fill="rgb(249,179,30)" rx="2" ry="2" />
<text  x="25.22" y="111.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.11%)</title><rect x="484.1" y="373" width="1.3" height="15.0" fill="rgb(249,122,11)" rx="2" ry="2" />
<text  x="487.11" y="383.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.02%)</title><rect x="46.9" y="453" width="0.2" height="15.0" fill="rgb(206,60,50)" rx="2" ry="2" />
<text  x="49.88" y="463.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (2 samples, 0.04%)</title><rect x="307.5" y="277" width="0.4" height="15.0" fill="rgb(236,40,42)" rx="2" ry="2" />
<text  x="310.53" y="287.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="19.3" y="37" width="0.2" height="15.0" fill="rgb(252,105,33)" rx="2" ry="2" />
<text  x="22.27" y="47.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="677.8" y="437" width="0.4" height="15.0" fill="rgb(248,80,30)" rx="2" ry="2" />
<text  x="680.75" y="447.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.18%)</title><rect x="643.2" y="437" width="2.1" height="15.0" fill="rgb(209,133,42)" rx="2" ry="2" />
<text  x="646.20" y="447.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="68.4" y="405" width="0.2" height="15.0" fill="rgb(252,7,45)" rx="2" ry="2" />
<text  x="71.37" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (2 samples, 0.04%)</title><rect x="198.8" y="309" width="0.4" height="15.0" fill="rgb(247,104,16)" rx="2" ry="2" />
<text  x="201.80" y="319.5" ></text>
</g>
<g >
<title>db::filter_for_query (6 samples, 0.11%)</title><rect x="1063.6" y="293" width="1.2" height="15.0" fill="rgb(218,198,3)" rx="2" ry="2" />
<text  x="1066.57" y="303.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.04%)</title><rect x="18.0" y="85" width="0.4" height="15.0" fill="rgb(253,123,42)" rx="2" ry="2" />
<text  x="21.01" y="95.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="21.0" y="149" width="0.2" height="15.0" fill="rgb(219,166,45)" rx="2" ry="2" />
<text  x="23.96" y="159.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (1 samples, 0.02%)</title><rect x="966.0" y="309" width="0.2" height="15.0" fill="rgb(216,105,6)" rx="2" ry="2" />
<text  x="969.01" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (61 samples, 1.09%)</title><rect x="675.2" y="453" width="12.9" height="15.0" fill="rgb(217,68,29)" rx="2" ry="2" />
<text  x="678.23" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (1 samples, 0.02%)</title><rect x="12.5" y="261" width="0.2" height="15.0" fill="rgb(246,172,23)" rx="2" ry="2" />
<text  x="15.53" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="314.7" y="341" width="0.2" height="15.0" fill="rgb(250,220,13)" rx="2" ry="2" />
<text  x="317.69" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="22.4" y="53" width="0.2" height="15.0" fill="rgb(222,85,39)" rx="2" ry="2" />
<text  x="25.43" y="63.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (8 samples, 0.14%)</title><rect x="582.7" y="325" width="1.7" height="15.0" fill="rgb(240,61,28)" rx="2" ry="2" />
<text  x="585.72" y="335.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (13 samples, 0.23%)</title><rect x="1154.4" y="437" width="2.7" height="15.0" fill="rgb(241,27,13)" rx="2" ry="2" />
<text  x="1157.39" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="1042.7" y="229" width="0.2" height="15.0" fill="rgb(224,31,13)" rx="2" ry="2" />
<text  x="1045.71" y="239.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="770.5" y="357" width="1.2" height="15.0" fill="rgb(241,219,14)" rx="2" ry="2" />
<text  x="773.47" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.09%)</title><rect x="1116.7" y="373" width="1.0" height="15.0" fill="rgb(234,179,4)" rx="2" ry="2" />
<text  x="1119.67" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="21.4" y="165" width="0.2" height="15.0" fill="rgb(225,172,34)" rx="2" ry="2" />
<text  x="24.38" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.21%)</title><rect x="821.9" y="373" width="2.5" height="15.0" fill="rgb(217,195,24)" rx="2" ry="2" />
<text  x="824.88" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.02%)</title><rect x="32.8" y="437" width="0.2" height="15.0" fill="rgb(213,5,38)" rx="2" ry="2" />
<text  x="35.76" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.07%)</title><rect x="619.4" y="437" width="0.8" height="15.0" fill="rgb(212,136,47)" rx="2" ry="2" />
<text  x="622.39" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (2 samples, 0.04%)</title><rect x="1123.8" y="245" width="0.5" height="15.0" fill="rgb(243,129,48)" rx="2" ry="2" />
<text  x="1126.84" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="78.7" y="437" width="0.4" height="15.0" fill="rgb(242,187,26)" rx="2" ry="2" />
<text  x="81.69" y="447.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="12.3" y="341" width="0.2" height="15.0" fill="rgb(232,133,22)" rx="2" ry="2" />
<text  x="15.32" y="351.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (16 samples, 0.29%)</title><rect x="1151.0" y="437" width="3.4" height="15.0" fill="rgb(246,97,24)" rx="2" ry="2" />
<text  x="1154.02" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (381 samples, 6.80%)</title><rect x="214.2" y="277" width="80.3" height="15.0" fill="rgb(210,192,45)" rx="2" ry="2" />
<text  x="217.18" y="287.5" >partition..</text>
</g>
<g >
<title>table::table (1 samples, 0.02%)</title><rect x="68.4" y="277" width="0.2" height="15.0" fill="rgb(213,3,3)" rx="2" ry="2" />
<text  x="71.37" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.02%)</title><rect x="22.0" y="213" width="0.2" height="15.0" fill="rgb(216,60,33)" rx="2" ry="2" />
<text  x="25.01" y="223.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.04%)</title><rect x="28.5" y="533" width="0.5" height="15.0" fill="rgb(238,56,1)" rx="2" ry="2" />
<text  x="31.54" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="18.4" y="277" width="0.2" height="15.0" fill="rgb(239,18,26)" rx="2" ry="2" />
<text  x="21.43" y="287.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (349 samples, 6.23%)</title><rect x="974.0" y="309" width="73.6" height="15.0" fill="rgb(241,151,9)" rx="2" ry="2" />
<text  x="977.02" y="319.5" >service:..</text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (6 samples, 0.11%)</title><rect x="196.1" y="309" width="1.2" height="15.0" fill="rgb(210,45,15)" rx="2" ry="2" />
<text  x="199.06" y="319.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (1 samples, 0.02%)</title><rect x="469.8" y="357" width="0.2" height="15.0" fill="rgb(243,192,34)" rx="2" ry="2" />
<text  x="472.78" y="367.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (1 samples, 0.02%)</title><rect x="24.1" y="373" width="0.2" height="15.0" fill="rgb(245,180,49)" rx="2" ry="2" />
<text  x="27.12" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.27%)</title><rect x="966.4" y="293" width="3.2" height="15.0" fill="rgb(208,222,6)" rx="2" ry="2" />
<text  x="969.43" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (4 samples, 0.07%)</title><rect x="10.6" y="373" width="0.9" height="15.0" fill="rgb(252,86,35)" rx="2" ry="2" />
<text  x="13.63" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.04%)</title><rect x="17.2" y="293" width="0.4" height="15.0" fill="rgb(239,173,35)" rx="2" ry="2" />
<text  x="20.16" y="303.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.02%)</title><rect x="623.8" y="437" width="0.2" height="15.0" fill="rgb(236,94,45)" rx="2" ry="2" />
<text  x="626.81" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.02%)</title><rect x="19.3" y="229" width="0.2" height="15.0" fill="rgb(247,150,43)" rx="2" ry="2" />
<text  x="22.27" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="12.3" y="213" width="0.2" height="15.0" fill="rgb(219,202,34)" rx="2" ry="2" />
<text  x="15.32" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (5 samples, 0.09%)</title><rect x="698.2" y="421" width="1.0" height="15.0" fill="rgb(220,159,39)" rx="2" ry="2" />
<text  x="701.19" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="1112.2" y="357" width="0.3" height="15.0" fill="rgb(236,97,10)" rx="2" ry="2" />
<text  x="1115.25" y="367.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (5,359 samples, 95.70%)</title><rect x="33.2" y="517" width="1129.2" height="15.0" fill="rgb(226,80,46)" rx="2" ry="2" />
<text  x="36.18" y="527.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (5 samples, 0.09%)</title><rect x="581.5" y="325" width="1.0" height="15.0" fill="rgb(249,146,19)" rx="2" ry="2" />
<text  x="584.46" y="335.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="855.4" y="389" width="0.2" height="15.0" fill="rgb(223,107,20)" rx="2" ry="2" />
<text  x="858.39" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.02%)</title><rect x="20.1" y="149" width="0.2" height="15.0" fill="rgb(220,180,1)" rx="2" ry="2" />
<text  x="23.11" y="159.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (6 samples, 0.11%)</title><rect x="1122.6" y="437" width="1.2" height="15.0" fill="rgb(209,115,8)" rx="2" ry="2" />
<text  x="1125.57" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.02%)</title><rect x="134.1" y="309" width="0.2" height="15.0" fill="rgb(218,30,11)" rx="2" ry="2" />
<text  x="137.11" y="319.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (3 samples, 0.05%)</title><rect x="465.4" y="325" width="0.6" height="15.0" fill="rgb(248,177,52)" rx="2" ry="2" />
<text  x="468.35" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1043.3" y="229" width="0.3" height="15.0" fill="rgb(234,15,39)" rx="2" ry="2" />
<text  x="1046.34" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="14.0" y="197" width="0.2" height="15.0" fill="rgb(205,213,4)" rx="2" ry="2" />
<text  x="17.00" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="703.7" y="421" width="0.2" height="15.0" fill="rgb(251,81,22)" rx="2" ry="2" />
<text  x="706.67" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (2 samples, 0.04%)</title><rect x="1150.6" y="437" width="0.4" height="15.0" fill="rgb(229,194,25)" rx="2" ry="2" />
<text  x="1153.60" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (34 samples, 0.61%)</title><rect x="16.3" y="341" width="7.2" height="15.0" fill="rgb(249,142,48)" rx="2" ry="2" />
<text  x="19.32" y="351.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="790.7" y="293" width="0.6" height="15.0" fill="rgb(247,177,19)" rx="2" ry="2" />
<text  x="793.70" y="303.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.02%)</title><rect x="674.8" y="437" width="0.2" height="15.0" fill="rgb(218,67,30)" rx="2" ry="2" />
<text  x="677.80" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="20.1" y="181" width="0.2" height="15.0" fill="rgb(234,208,42)" rx="2" ry="2" />
<text  x="23.11" y="191.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (300 samples, 5.36%)</title><rect x="510.2" y="357" width="63.3" height="15.0" fill="rgb(224,23,12)" rx="2" ry="2" />
<text  x="513.24" y="367.5" >memtab..</text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (1 samples, 0.02%)</title><rect x="35.5" y="469" width="0.2" height="15.0" fill="rgb(235,32,8)" rx="2" ry="2" />
<text  x="38.50" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.02%)</title><rect x="558.7" y="309" width="0.2" height="15.0" fill="rgb(215,209,34)" rx="2" ry="2" />
<text  x="561.70" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="22.2" y="69" width="0.2" height="15.0" fill="rgb(241,148,16)" rx="2" ry="2" />
<text  x="25.22" y="79.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (10 samples, 0.18%)</title><rect x="916.5" y="341" width="2.1" height="15.0" fill="rgb(243,73,35)" rx="2" ry="2" />
<text  x="919.49" y="351.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (67 samples, 1.20%)</title><rect x="10.2" y="453" width="14.1" height="15.0" fill="rgb(235,206,35)" rx="2" ry="2" />
<text  x="13.21" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="689.3" y="437" width="0.5" height="15.0" fill="rgb(223,93,30)" rx="2" ry="2" />
<text  x="692.34" y="447.5" ></text>
</g>
<g >
<title>auth::get_permissions (104 samples, 1.86%)</title><rect x="782.3" y="325" width="21.9" height="15.0" fill="rgb(220,152,11)" rx="2" ry="2" />
<text  x="785.27" y="335.5" >a..</text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (3 samples, 0.05%)</title><rect x="1161.3" y="469" width="0.7" height="15.0" fill="rgb(227,36,31)" rx="2" ry="2" />
<text  x="1164.34" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.04%)</title><rect x="1038.3" y="197" width="0.4" height="15.0" fill="rgb(243,69,6)" rx="2" ry="2" />
<text  x="1041.29" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="655.0" y="405" width="0.2" height="15.0" fill="rgb(244,210,4)" rx="2" ry="2" />
<text  x="658.00" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="803.5" y="277" width="0.3" height="15.0" fill="rgb(252,174,47)" rx="2" ry="2" />
<text  x="806.55" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.18%)</title><rect x="771.7" y="341" width="2.1" height="15.0" fill="rgb(253,213,24)" rx="2" ry="2" />
<text  x="774.73" y="351.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (44 samples, 0.79%)</title><rect x="92.4" y="421" width="9.3" height="15.0" fill="rgb(245,206,22)" rx="2" ry="2" />
<text  x="95.39" y="431.5" ></text>
</g>
<g >
<title>sstables::sstable::write_components (1 samples, 0.02%)</title><rect x="24.3" y="549" width="0.2" height="15.0" fill="rgb(241,33,28)" rx="2" ry="2" />
<text  x="27.33" y="559.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (5 samples, 0.09%)</title><rect x="924.5" y="357" width="1.1" height="15.0" fill="rgb(210,203,38)" rx="2" ry="2" />
<text  x="927.50" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1162.2" y="453" width="0.2" height="15.0" fill="rgb(206,214,43)" rx="2" ry="2" />
<text  x="1165.19" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.04%)</title><rect x="18.0" y="117" width="0.4" height="15.0" fill="rgb(235,49,23)" rx="2" ry="2" />
<text  x="21.01" y="127.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="12.3" y="181" width="0.2" height="15.0" fill="rgb(240,113,36)" rx="2" ry="2" />
<text  x="15.32" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.07%)</title><rect x="324.0" y="373" width="0.8" height="15.0" fill="rgb(211,154,16)" rx="2" ry="2" />
<text  x="326.96" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="21.4" y="117" width="0.2" height="15.0" fill="rgb(220,212,32)" rx="2" ry="2" />
<text  x="24.38" y="127.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="21.4" y="101" width="0.2" height="15.0" fill="rgb(243,220,29)" rx="2" ry="2" />
<text  x="24.38" y="111.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="19.3" y="261" width="0.2" height="15.0" fill="rgb(252,16,10)" rx="2" ry="2" />
<text  x="22.27" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="17.4" y="229" width="0.2" height="15.0" fill="rgb(235,106,48)" rx="2" ry="2" />
<text  x="20.38" y="239.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="12.3" y="325" width="0.2" height="15.0" fill="rgb(229,162,2)" rx="2" ry="2" />
<text  x="15.32" y="335.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (1 samples, 0.02%)</title><rect x="1095.0" y="277" width="0.2" height="15.0" fill="rgb(208,87,48)" rx="2" ry="2" />
<text  x="1097.97" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::deallocate (1 samples, 0.02%)</title><rect x="12.1" y="245" width="0.2" height="15.0" fill="rgb(244,212,6)" rx="2" ry="2" />
<text  x="15.11" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (15 samples, 0.27%)</title><rect x="927.0" y="357" width="3.2" height="15.0" fill="rgb(226,1,44)" rx="2" ry="2" />
<text  x="930.03" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="12.3" y="261" width="0.2" height="15.0" fill="rgb(248,197,19)" rx="2" ry="2" />
<text  x="15.32" y="271.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.38%)</title><rect x="457.1" y="325" width="4.5" height="15.0" fill="rgb(252,100,14)" rx="2" ry="2" />
<text  x="460.14" y="335.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.02%)</title><rect x="22.0" y="229" width="0.2" height="15.0" fill="rgb(250,69,18)" rx="2" ry="2" />
<text  x="25.01" y="239.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="891.0" y="245" width="0.4" height="15.0" fill="rgb(209,214,46)" rx="2" ry="2" />
<text  x="894.00" y="255.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (13 samples, 0.23%)</title><rect x="529.0" y="325" width="2.7" height="15.0" fill="rgb(236,89,33)" rx="2" ry="2" />
<text  x="531.99" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (48 samples, 0.86%)</title><rect x="297.8" y="293" width="10.1" height="15.0" fill="rgb(212,55,7)" rx="2" ry="2" />
<text  x="300.84" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (669 samples, 11.95%)</title><rect x="954.4" y="325" width="141.0" height="15.0" fill="rgb(245,12,36)" rx="2" ry="2" />
<text  x="957.42" y="335.5" >service::storage_..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1124.3" y="437" width="0.2" height="15.0" fill="rgb(212,19,22)" rx="2" ry="2" />
<text  x="1127.26" y="447.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (1 samples, 0.02%)</title><rect x="365.3" y="357" width="0.2" height="15.0" fill="rgb(220,16,2)" rx="2" ry="2" />
<text  x="368.26" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.02%)</title><rect x="19.3" y="165" width="0.2" height="15.0" fill="rgb(218,174,47)" rx="2" ry="2" />
<text  x="22.27" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="790.5" y="277" width="0.2" height="15.0" fill="rgb(212,190,23)" rx="2" ry="2" />
<text  x="793.49" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;seastar::file_impl&gt; &gt;, seastar::reactor::open_file_dma (1 samples, 0.02%)</title><rect x="661.5" y="453" width="0.2" height="15.0" fill="rgb(237,34,43)" rx="2" ry="2" />
<text  x="664.53" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (5 samples, 0.09%)</title><rect x="1045.9" y="261" width="1.0" height="15.0" fill="rgb(252,139,16)" rx="2" ry="2" />
<text  x="1048.87" y="271.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.25%)</title><rect x="1039.8" y="229" width="2.9" height="15.0" fill="rgb(220,15,33)" rx="2" ry="2" />
<text  x="1042.76" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.02%)</title><rect x="616.6" y="437" width="0.3" height="15.0" fill="rgb(211,134,11)" rx="2" ry="2" />
<text  x="619.65" y="447.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (1 samples, 0.02%)</title><rect x="68.6" y="341" width="0.2" height="15.0" fill="rgb(247,43,22)" rx="2" ry="2" />
<text  x="71.58" y="351.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (2 samples, 0.04%)</title><rect x="1123.8" y="277" width="0.5" height="15.0" fill="rgb(212,190,2)" rx="2" ry="2" />
<text  x="1126.84" y="287.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.29%)</title><rect x="504.3" y="325" width="3.4" height="15.0" fill="rgb(208,159,16)" rx="2" ry="2" />
<text  x="507.34" y="335.5" ></text>
</g>
<g >
<title>database::find_keyspace (1 samples, 0.02%)</title><rect x="965.8" y="309" width="0.2" height="15.0" fill="rgb(221,197,19)" rx="2" ry="2" />
<text  x="968.80" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.02%)</title><rect x="23.7" y="325" width="0.2" height="15.0" fill="rgb(238,150,53)" rx="2" ry="2" />
<text  x="26.70" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="354.3" y="309" width="0.2" height="15.0" fill="rgb(252,68,27)" rx="2" ry="2" />
<text  x="357.31" y="319.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.05%)</title><rect x="17.8" y="293" width="0.6" height="15.0" fill="rgb(249,5,34)" rx="2" ry="2" />
<text  x="20.80" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="19.3" y="277" width="0.2" height="15.0" fill="rgb(227,220,9)" rx="2" ry="2" />
<text  x="22.27" y="287.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="22.2" y="261" width="0.2" height="15.0" fill="rgb(226,147,39)" rx="2" ry="2" />
<text  x="25.22" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="22.2" y="149" width="0.2" height="15.0" fill="rgb(239,7,44)" rx="2" ry="2" />
<text  x="25.22" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="647.0" y="437" width="0.4" height="15.0" fill="rgb(249,68,43)" rx="2" ry="2" />
<text  x="649.99" y="447.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="507.9" y="341" width="1.1" height="15.0" fill="rgb(234,51,9)" rx="2" ry="2" />
<text  x="510.92" y="351.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.18%)</title><rect x="801.7" y="309" width="2.1" height="15.0" fill="rgb(236,10,43)" rx="2" ry="2" />
<text  x="804.65" y="319.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.02%)</title><rect x="240.1" y="229" width="0.2" height="15.0" fill="rgb(253,167,8)" rx="2" ry="2" />
<text  x="243.10" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.02%)</title><rect x="24.5" y="533" width="0.3" height="15.0" fill="rgb(233,182,15)" rx="2" ry="2" />
<text  x="27.54" y="543.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::add_restriction (1 samples, 0.02%)</title><rect x="11.1" y="277" width="0.2" height="15.0" fill="rgb(223,174,8)" rx="2" ry="2" />
<text  x="14.05" y="287.5" ></text>
</g>
<g >
<title>table::query (2,357 samples, 42.09%)</title><rect x="104.6" y="421" width="496.7" height="15.0" fill="rgb(232,4,35)" rx="2" ry="2" />
<text  x="107.61" y="431.5" >table::query</text>
</g>
<g >
<title>service::client_state::set_keyspace (17 samples, 0.30%)</title><rect x="832.4" y="405" width="3.6" height="15.0" fill="rgb(220,103,40)" rx="2" ry="2" />
<text  x="835.42" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="21.4" y="85" width="0.2" height="15.0" fill="rgb(212,55,52)" rx="2" ry="2" />
<text  x="24.38" y="95.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;sstables::sstable::update_info_for_opened_data (1 samples, 0.02%)</title><rect x="703.7" y="437" width="0.2" height="15.0" fill="rgb(237,110,36)" rx="2" ry="2" />
<text  x="706.67" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.02%)</title><rect x="844.2" y="357" width="0.2" height="15.0" fill="rgb(245,101,15)" rx="2" ry="2" />
<text  x="847.22" y="367.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (72 samples, 1.29%)</title><rect x="47.1" y="453" width="15.2" height="15.0" fill="rgb(235,184,50)" rx="2" ry="2" />
<text  x="50.09" y="463.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="559.3" y="309" width="0.2" height="15.0" fill="rgb(230,185,41)" rx="2" ry="2" />
<text  x="562.33" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.02%)</title><rect x="17.4" y="165" width="0.2" height="15.0" fill="rgb(217,120,2)" rx="2" ry="2" />
<text  x="20.38" y="175.5" ></text>
</g>
<g >
<title>db::block_for (3 samples, 0.05%)</title><rect x="1062.7" y="277" width="0.7" height="15.0" fill="rgb(220,75,10)" rx="2" ry="2" />
<text  x="1065.73" y="287.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.04%)</title><rect x="18.0" y="133" width="0.4" height="15.0" fill="rgb(252,44,12)" rx="2" ry="2" />
<text  x="21.01" y="143.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (2 samples, 0.04%)</title><rect x="38.9" y="469" width="0.4" height="15.0" fill="rgb(241,216,51)" rx="2" ry="2" />
<text  x="41.87" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="22.2" y="117" width="0.2" height="15.0" fill="rgb(218,91,53)" rx="2" ry="2" />
<text  x="25.22" y="127.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="946.8" y="341" width="0.2" height="15.0" fill="rgb(250,191,34)" rx="2" ry="2" />
<text  x="949.84" y="351.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.11%)</title><rect x="865.3" y="373" width="1.3" height="15.0" fill="rgb(248,216,1)" rx="2" ry="2" />
<text  x="868.29" y="383.5" ></text>
</g>
<g >
<title>query::querier_base::close (141 samples, 2.52%)</title><rect x="445.5" y="405" width="29.8" height="15.0" fill="rgb(237,122,6)" rx="2" ry="2" />
<text  x="448.55" y="415.5" >qu..</text>
</g>
<g >
<title>std::_Hash_bytes (6 samples, 0.11%)</title><rect x="817.0" y="341" width="1.3" height="15.0" fill="rgb(235,113,16)" rx="2" ry="2" />
<text  x="820.04" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (34 samples, 0.61%)</title><rect x="220.5" y="261" width="7.2" height="15.0" fill="rgb(212,59,12)" rx="2" ry="2" />
<text  x="223.50" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (2 samples, 0.04%)</title><rect x="22.9" y="309" width="0.4" height="15.0" fill="rgb(239,12,35)" rx="2" ry="2" />
<text  x="25.85" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_destroy_nodes (1 samples, 0.02%)</title><rect x="12.1" y="293" width="0.2" height="15.0" fill="rgb(222,11,2)" rx="2" ry="2" />
<text  x="15.11" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="680.3" y="421" width="0.4" height="15.0" fill="rgb(239,123,50)" rx="2" ry="2" />
<text  x="683.28" y="431.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (42 samples, 0.75%)</title><rect x="711.7" y="421" width="8.8" height="15.0" fill="rgb(241,36,21)" rx="2" ry="2" />
<text  x="714.68" y="431.5" ></text>
</g>
<g >
<title>posix_memalign (2 samples, 0.04%)</title><rect x="280.6" y="197" width="0.4" height="15.0" fill="rgb(237,147,11)" rx="2" ry="2" />
<text  x="283.56" y="207.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.04%)</title><rect x="816.6" y="325" width="0.4" height="15.0" fill="rgb(232,188,19)" rx="2" ry="2" />
<text  x="819.61" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.04%)</title><rect x="19.9" y="261" width="0.4" height="15.0" fill="rgb(219,69,29)" rx="2" ry="2" />
<text  x="22.90" y="271.5" ></text>
</g>
<g >
<title>make_combined_reader (64 samples, 1.14%)</title><rect x="494.4" y="341" width="13.5" height="15.0" fill="rgb(230,110,2)" rx="2" ry="2" />
<text  x="497.43" y="351.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (2 samples, 0.04%)</title><rect x="798.9" y="277" width="0.4" height="15.0" fill="rgb(218,184,34)" rx="2" ry="2" />
<text  x="801.91" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="210.4" y="245" width="0.2" height="15.0" fill="rgb(210,227,48)" rx="2" ry="2" />
<text  x="213.39" y="255.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (1 samples, 0.02%)</title><rect x="21.0" y="197" width="0.2" height="15.0" fill="rgb(243,52,45)" rx="2" ry="2" />
<text  x="23.96" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.02%)</title><rect x="568.2" y="341" width="0.2" height="15.0" fill="rgb(219,198,43)" rx="2" ry="2" />
<text  x="571.18" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.02%)</title><rect x="867.0" y="373" width="0.2" height="15.0" fill="rgb(234,63,48)" rx="2" ry="2" />
<text  x="869.98" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="199.4" y="309" width="0.2" height="15.0" fill="rgb(222,50,46)" rx="2" ry="2" />
<text  x="202.43" y="319.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.02%)</title><rect x="22.4" y="197" width="0.2" height="15.0" fill="rgb(254,135,46)" rx="2" ry="2" />
<text  x="25.43" y="207.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.02%)</title><rect x="674.8" y="421" width="0.2" height="15.0" fill="rgb(208,91,17)" rx="2" ry="2" />
<text  x="677.80" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="57.6" y="389" width="0.2" height="15.0" fill="rgb(247,136,51)" rx="2" ry="2" />
<text  x="60.62" y="399.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1 samples, 0.02%)</title><rect x="24.1" y="389" width="0.2" height="15.0" fill="rgb(221,73,0)" rx="2" ry="2" />
<text  x="27.12" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.04%)</title><rect x="18.0" y="101" width="0.4" height="15.0" fill="rgb(247,126,15)" rx="2" ry="2" />
<text  x="21.01" y="111.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="661.3" y="437" width="0.2" height="15.0" fill="rgb(231,187,29)" rx="2" ry="2" />
<text  x="664.32" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (720 samples, 12.86%)</title><rect x="943.7" y="357" width="151.7" height="15.0" fill="rgb(223,62,53)" rx="2" ry="2" />
<text  x="946.67" y="367.5" >service::storage_pr..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1043.8" y="245" width="0.2" height="15.0" fill="rgb(221,111,10)" rx="2" ry="2" />
<text  x="1046.76" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="483.5" y="373" width="0.4" height="15.0" fill="rgb(251,138,16)" rx="2" ry="2" />
<text  x="486.48" y="383.5" ></text>
</g>
<g >
<title>dht::shard_of (3 samples, 0.05%)</title><rect x="1003.5" y="245" width="0.6" height="15.0" fill="rgb(214,172,36)" rx="2" ry="2" />
<text  x="1006.52" y="255.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (1 samples, 0.02%)</title><rect x="68.6" y="245" width="0.2" height="15.0" fill="rgb(227,206,54)" rx="2" ry="2" />
<text  x="71.58" y="255.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.46%)</title><rect x="137.9" y="405" width="5.5" height="15.0" fill="rgb(220,108,7)" rx="2" ry="2" />
<text  x="140.90" y="415.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (56 samples, 1.00%)</title><rect x="904.7" y="341" width="11.8" height="15.0" fill="rgb(245,12,54)" rx="2" ry="2" />
<text  x="907.69" y="351.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="553.9" y="277" width="0.2" height="15.0" fill="rgb(240,162,20)" rx="2" ry="2" />
<text  x="556.85" y="287.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.04%)</title><rect x="595.4" y="389" width="0.4" height="15.0" fill="rgb(230,101,46)" rx="2" ry="2" />
<text  x="598.36" y="399.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="1163.9" y="581" width="0.2" height="15.0" fill="rgb(210,36,16)" rx="2" ry="2" />
<text  x="1166.87" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="70.5" y="437" width="0.4" height="15.0" fill="rgb(239,229,49)" rx="2" ry="2" />
<text  x="73.47" y="447.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="319.3" y="357" width="0.5" height="15.0" fill="rgb(230,9,6)" rx="2" ry="2" />
<text  x="322.33" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.04%)</title><rect x="896.1" y="261" width="0.4" height="15.0" fill="rgb(244,92,30)" rx="2" ry="2" />
<text  x="899.05" y="271.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.04%)</title><rect x="32.5" y="549" width="0.5" height="15.0" fill="rgb(225,10,4)" rx="2" ry="2" />
<text  x="35.55" y="559.5" ></text>
</g>
<g >
<title>sstables::compaction_strategy_impl::compaction_strategy_impl (1 samples, 0.02%)</title><rect x="68.4" y="245" width="0.2" height="15.0" fill="rgb(217,172,7)" rx="2" ry="2" />
<text  x="71.37" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="622.1" y="421" width="0.4" height="15.0" fill="rgb(206,63,51)" rx="2" ry="2" />
<text  x="625.12" y="431.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.21%)</title><rect x="453.1" y="341" width="2.6" height="15.0" fill="rgb(245,133,15)" rx="2" ry="2" />
<text  x="456.13" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.02%)</title><rect x="328.4" y="373" width="0.2" height="15.0" fill="rgb(220,224,50)" rx="2" ry="2" />
<text  x="331.39" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (5 samples, 0.09%)</title><rect x="1108.7" y="357" width="1.0" height="15.0" fill="rgb(217,195,1)" rx="2" ry="2" />
<text  x="1111.66" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (11 samples, 0.20%)</title><rect x="819.4" y="389" width="2.3" height="15.0" fill="rgb(238,39,42)" rx="2" ry="2" />
<text  x="822.35" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="452.5" y="325" width="0.2" height="15.0" fill="rgb(221,134,17)" rx="2" ry="2" />
<text  x="455.50" y="335.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.07%)</title><rect x="804.2" y="325" width="0.8" height="15.0" fill="rgb(226,98,8)" rx="2" ry="2" />
<text  x="807.18" y="335.5" ></text>
</g>
<g >
<title>hwloc_linux_set_tid_cpubind (7 samples, 0.12%)</title><rect x="1180.7" y="581" width="1.5" height="15.0" fill="rgb(230,67,13)" rx="2" ry="2" />
<text  x="1183.73" y="591.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (15 samples, 0.27%)</title><rect x="12.7" y="261" width="3.2" height="15.0" fill="rgb(241,25,19)" rx="2" ry="2" />
<text  x="15.74" y="271.5" ></text>
</g>
<g >
<title>schema_registry::get (21 samples, 0.38%)</title><rect x="969.6" y="309" width="4.4" height="15.0" fill="rgb(232,7,25)" rx="2" ry="2" />
<text  x="972.59" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (6 samples, 0.11%)</title><rect x="678.4" y="437" width="1.2" height="15.0" fill="rgb(237,61,11)" rx="2" ry="2" />
<text  x="681.39" y="447.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="577.5" y="341" width="0.2" height="15.0" fill="rgb(232,72,10)" rx="2" ry="2" />
<text  x="580.45" y="351.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (1 samples, 0.02%)</title><rect x="68.4" y="325" width="0.2" height="15.0" fill="rgb(212,37,14)" rx="2" ry="2" />
<text  x="71.37" y="335.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (24 samples, 0.43%)</title><rect x="568.4" y="341" width="5.1" height="15.0" fill="rgb(228,127,33)" rx="2" ry="2" />
<text  x="571.39" y="351.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (3 samples, 0.05%)</title><rect x="808.4" y="341" width="0.6" height="15.0" fill="rgb(253,192,22)" rx="2" ry="2" />
<text  x="811.40" y="351.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (3 samples, 0.05%)</title><rect x="456.5" y="325" width="0.6" height="15.0" fill="rgb(209,157,5)" rx="2" ry="2" />
<text  x="459.50" y="335.5" ></text>
</g>
<g >
<title>gms::gossiper::make_random_gossip_digest (1 samples, 0.02%)</title><rect x="1161.3" y="325" width="0.3" height="15.0" fill="rgb(248,70,3)" rx="2" ry="2" />
<text  x="1164.34" y="335.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (104 samples, 1.86%)</title><rect x="1073.1" y="277" width="21.9" height="15.0" fill="rgb(249,64,34)" rx="2" ry="2" />
<text  x="1076.05" y="287.5" >l..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.02%)</title><rect x="18.6" y="245" width="0.3" height="15.0" fill="rgb(223,30,14)" rx="2" ry="2" />
<text  x="21.64" y="255.5" ></text>
</g>
<g >
<title>seastar::schedule (2 samples, 0.04%)</title><rect x="67.9" y="437" width="0.5" height="15.0" fill="rgb(205,135,45)" rx="2" ry="2" />
<text  x="70.95" y="447.5" ></text>
</g>
<g >
<title>utils::array_search_gt (2 samples, 0.04%)</title><rect x="588.8" y="357" width="0.5" height="15.0" fill="rgb(212,127,21)" rx="2" ry="2" />
<text  x="591.83" y="367.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.12%)</title><rect x="640.5" y="421" width="1.4" height="15.0" fill="rgb(222,224,2)" rx="2" ry="2" />
<text  x="643.46" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (781 samples, 13.95%)</title><rect x="930.8" y="373" width="164.6" height="15.0" fill="rgb(218,22,18)" rx="2" ry="2" />
<text  x="933.82" y="383.5" >cql3::statements::sel..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.04%)</title><rect x="929.3" y="325" width="0.5" height="15.0" fill="rgb(227,136,12)" rx="2" ry="2" />
<text  x="932.35" y="335.5" ></text>
</g>
<g >
<title>mutation_querier::consume (182 samples, 3.25%)</title><rect x="372.2" y="341" width="38.4" height="15.0" fill="rgb(232,171,36)" rx="2" ry="2" />
<text  x="375.22" y="351.5" >mut..</text>
</g>
<g >
<title>table::make_reader (2 samples, 0.04%)</title><rect x="589.7" y="389" width="0.4" height="15.0" fill="rgb(232,25,36)" rx="2" ry="2" />
<text  x="592.67" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="101.5" y="405" width="0.2" height="15.0" fill="rgb(227,39,11)" rx="2" ry="2" />
<text  x="104.45" y="415.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="68.4" y="229" width="0.2" height="15.0" fill="rgb(208,189,44)" rx="2" ry="2" />
<text  x="71.37" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.04%)</title><rect x="18.0" y="213" width="0.4" height="15.0" fill="rgb(219,186,23)" rx="2" ry="2" />
<text  x="21.01" y="223.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.05%)</title><rect x="62.3" y="453" width="0.6" height="15.0" fill="rgb(240,174,29)" rx="2" ry="2" />
<text  x="65.26" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="17.8" y="229" width="0.2" height="15.0" fill="rgb(210,113,37)" rx="2" ry="2" />
<text  x="20.80" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="687.7" y="421" width="0.4" height="15.0" fill="rgb(221,31,51)" rx="2" ry="2" />
<text  x="690.66" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::stats (3 samples, 0.05%)</title><rect x="200.9" y="293" width="0.6" height="15.0" fill="rgb(206,111,5)" rx="2" ry="2" />
<text  x="203.91" y="303.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="621.5" y="437" width="1.0" height="15.0" fill="rgb(207,37,7)" rx="2" ry="2" />
<text  x="624.49" y="447.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="104.4" y="421" width="0.2" height="15.0" fill="rgb(227,202,11)" rx="2" ry="2" />
<text  x="107.40" y="431.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.41%)</title><rect x="976.8" y="293" width="4.8" height="15.0" fill="rgb(233,40,47)" rx="2" ry="2" />
<text  x="979.76" y="303.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (4 samples, 0.07%)</title><rect x="391.8" y="325" width="0.9" height="15.0" fill="rgb(245,200,42)" rx="2" ry="2" />
<text  x="394.81" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (37 samples, 0.66%)</title><rect x="242.4" y="229" width="7.8" height="15.0" fill="rgb(214,74,35)" rx="2" ry="2" />
<text  x="245.42" y="239.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="47.9" y="437" width="1.3" height="15.0" fill="rgb(221,210,31)" rx="2" ry="2" />
<text  x="50.93" y="447.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.30%)</title><rect x="365.5" y="357" width="3.6" height="15.0" fill="rgb(254,91,53)" rx="2" ry="2" />
<text  x="368.48" y="367.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.02%)</title><rect x="21.4" y="69" width="0.2" height="15.0" fill="rgb(207,111,8)" rx="2" ry="2" />
<text  x="24.38" y="79.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="455.2" y="325" width="0.5" height="15.0" fill="rgb(205,21,30)" rx="2" ry="2" />
<text  x="458.24" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.02%)</title><rect x="20.1" y="197" width="0.2" height="15.0" fill="rgb(248,130,32)" rx="2" ry="2" />
<text  x="23.11" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="79.5" y="437" width="0.2" height="15.0" fill="rgb(217,154,21)" rx="2" ry="2" />
<text  x="82.54" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="1042.9" y="229" width="0.4" height="15.0" fill="rgb(231,211,47)" rx="2" ry="2" />
<text  x="1045.92" y="239.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (147 samples, 2.62%)</title><rect x="1012.8" y="245" width="31.0" height="15.0" fill="rgb(252,0,30)" rx="2" ry="2" />
<text  x="1015.79" y="255.5" >se..</text>
</g>
<g >
<title>[unknown] (110 samples, 1.96%)</title><rect x="10.0" y="581" width="23.2" height="15.0" fill="rgb(230,80,39)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >[..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.02%)</title><rect x="629.1" y="437" width="0.2" height="15.0" fill="rgb(220,198,52)" rx="2" ry="2" />
<text  x="632.08" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (1 samples, 0.02%)</title><rect x="14.8" y="229" width="0.3" height="15.0" fill="rgb(236,177,53)" rx="2" ry="2" />
<text  x="17.85" y="239.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.04%)</title><rect x="1142.6" y="421" width="0.4" height="15.0" fill="rgb(218,200,6)" rx="2" ry="2" />
<text  x="1145.59" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (198 samples, 3.54%)</title><rect x="250.2" y="229" width="41.7" height="15.0" fill="rgb(205,140,15)" rx="2" ry="2" />
<text  x="253.21" y="239.5" >com..</text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (13 samples, 0.23%)</title><rect x="134.5" y="389" width="2.8" height="15.0" fill="rgb(235,110,47)" rx="2" ry="2" />
<text  x="137.53" y="399.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (2 samples, 0.04%)</title><rect x="604.8" y="453" width="0.5" height="15.0" fill="rgb(228,115,26)" rx="2" ry="2" />
<text  x="607.85" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.02%)</title><rect x="15.9" y="261" width="0.2" height="15.0" fill="rgb(229,70,0)" rx="2" ry="2" />
<text  x="18.90" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (115 samples, 2.05%)</title><rect x="874.4" y="357" width="24.2" height="15.0" fill="rgb(244,44,12)" rx="2" ry="2" />
<text  x="877.35" y="367.5" >c..</text>
</g>
<g >
<title>db::validate_for_read (1 samples, 0.02%)</title><rect x="1109.7" y="373" width="0.2" height="15.0" fill="rgb(232,12,34)" rx="2" ry="2" />
<text  x="1112.72" y="383.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (14 samples, 0.25%)</title><rect x="1119.0" y="357" width="2.9" height="15.0" fill="rgb(250,10,2)" rx="2" ry="2" />
<text  x="1121.99" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="21.0" y="181" width="0.2" height="15.0" fill="rgb(251,4,2)" rx="2" ry="2" />
<text  x="23.96" y="191.5" ></text>
</g>
<g >
<title>query::querier&lt; (1,386 samples, 24.75%)</title><rect x="153.5" y="405" width="292.0" height="15.0" fill="rgb(236,71,2)" rx="2" ry="2" />
<text  x="156.50" y="415.5" >query::querier&lt;</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.02%)</title><rect x="17.4" y="149" width="0.2" height="15.0" fill="rgb(239,50,34)" rx="2" ry="2" />
<text  x="20.38" y="159.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.02%)</title><rect x="20.5" y="245" width="0.2" height="15.0" fill="rgb(237,52,33)" rx="2" ry="2" />
<text  x="23.54" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.05%)</title><rect x="1114.4" y="341" width="0.6" height="15.0" fill="rgb(254,98,48)" rx="2" ry="2" />
<text  x="1117.35" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="22.2" y="133" width="0.2" height="15.0" fill="rgb(212,97,10)" rx="2" ry="2" />
<text  x="25.22" y="143.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (1 samples, 0.02%)</title><rect x="447.0" y="389" width="0.2" height="15.0" fill="rgb(212,203,26)" rx="2" ry="2" />
<text  x="450.02" y="399.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="22.2" y="53" width="0.2" height="15.0" fill="rgb(242,186,34)" rx="2" ry="2" />
<text  x="25.22" y="63.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="1037.7" y="181" width="0.2" height="15.0" fill="rgb(227,187,52)" rx="2" ry="2" />
<text  x="1040.65" y="191.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (35 samples, 0.62%)</title><rect x="680.7" y="437" width="7.4" height="15.0" fill="rgb(220,56,54)" rx="2" ry="2" />
<text  x="683.70" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (11 samples, 0.20%)</title><rect x="90.1" y="421" width="2.3" height="15.0" fill="rgb(248,34,18)" rx="2" ry="2" />
<text  x="93.07" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.04%)</title><rect x="929.8" y="341" width="0.4" height="15.0" fill="rgb(228,95,4)" rx="2" ry="2" />
<text  x="932.77" y="351.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.14%)</title><rect x="211.0" y="277" width="1.7" height="15.0" fill="rgb(226,99,18)" rx="2" ry="2" />
<text  x="214.02" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (3 samples, 0.05%)</title><rect x="533.2" y="341" width="0.6" height="15.0" fill="rgb(221,195,27)" rx="2" ry="2" />
<text  x="536.20" y="351.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (19 samples, 0.34%)</title><rect x="1032.6" y="181" width="4.0" height="15.0" fill="rgb(251,179,50)" rx="2" ry="2" />
<text  x="1035.60" y="191.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="636.7" y="405" width="0.2" height="15.0" fill="rgb(238,55,49)" rx="2" ry="2" />
<text  x="639.66" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (2 samples, 0.04%)</title><rect x="867.2" y="373" width="0.4" height="15.0" fill="rgb(222,161,43)" rx="2" ry="2" />
<text  x="870.19" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (7 samples, 0.12%)</title><rect x="844.4" y="389" width="1.5" height="15.0" fill="rgb(244,40,35)" rx="2" ry="2" />
<text  x="847.43" y="399.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="452.7" y="325" width="0.4" height="15.0" fill="rgb(246,156,51)" rx="2" ry="2" />
<text  x="455.71" y="335.5" ></text>
</g>
<g >
<title>_dl_map_object (1 samples, 0.02%)</title><rect x="1163.7" y="581" width="0.2" height="15.0" fill="rgb(222,130,34)" rx="2" ry="2" />
<text  x="1166.66" y="591.5" ></text>
</g>
<g >
<title>range_tombstone_list::apply_monotonically (1 samples, 0.02%)</title><rect x="1123.6" y="293" width="0.2" height="15.0" fill="rgb(225,37,47)" rx="2" ry="2" />
<text  x="1126.62" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.02%)</title><rect x="13.8" y="117" width="0.2" height="15.0" fill="rgb(210,186,16)" rx="2" ry="2" />
<text  x="16.79" y="127.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::grant_role_statement&gt;, void&gt; (1 samples, 0.02%)</title><rect x="23.7" y="341" width="0.2" height="15.0" fill="rgb(218,76,39)" rx="2" ry="2" />
<text  x="26.70" y="351.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="17.2" y="261" width="0.2" height="15.0" fill="rgb(213,46,32)" rx="2" ry="2" />
<text  x="20.16" y="271.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="333.9" y="373" width="0.4" height="15.0" fill="rgb(238,94,18)" rx="2" ry="2" />
<text  x="336.87" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::create_clustering_ranges (1 samples, 0.02%)</title><rect x="845.5" y="341" width="0.2" height="15.0" fill="rgb(250,207,50)" rx="2" ry="2" />
<text  x="848.48" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (17 samples, 0.30%)</title><rect x="12.5" y="293" width="3.6" height="15.0" fill="rgb(231,56,29)" rx="2" ry="2" />
<text  x="15.53" y="303.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (3 samples, 0.05%)</title><rect x="151.8" y="389" width="0.6" height="15.0" fill="rgb(225,146,14)" rx="2" ry="2" />
<text  x="154.81" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="947.0" y="341" width="0.3" height="15.0" fill="rgb(232,0,35)" rx="2" ry="2" />
<text  x="950.05" y="351.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.11%)</title><rect x="559.5" y="309" width="1.3" height="15.0" fill="rgb(219,144,23)" rx="2" ry="2" />
<text  x="562.54" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (7 samples, 0.12%)</title><rect x="980.1" y="261" width="1.5" height="15.0" fill="rgb(236,44,8)" rx="2" ry="2" />
<text  x="983.13" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.02%)</title><rect x="19.7" y="261" width="0.2" height="15.0" fill="rgb(228,44,39)" rx="2" ry="2" />
<text  x="22.69" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="16.7" y="325" width="0.3" height="15.0" fill="rgb(226,72,48)" rx="2" ry="2" />
<text  x="19.74" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2,476 samples, 44.21%)</title><rect x="80.0" y="437" width="521.7" height="15.0" fill="rgb(209,55,44)" rx="2" ry="2" />
<text  x="82.96" y="447.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="710.4" y="437" width="0.2" height="15.0" fill="rgb(212,122,37)" rx="2" ry="2" />
<text  x="713.41" y="447.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="844.6" y="261" width="0.3" height="15.0" fill="rgb(227,213,5)" rx="2" ry="2" />
<text  x="847.64" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="1123.8" y="421" width="0.5" height="15.0" fill="rgb(222,4,53)" rx="2" ry="2" />
<text  x="1126.84" y="431.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (25 samples, 0.45%)</title><rect x="1175.5" y="565" width="5.2" height="15.0" fill="rgb(233,216,10)" rx="2" ry="2" />
<text  x="1178.46" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (2 samples, 0.04%)</title><rect x="227.2" y="245" width="0.5" height="15.0" fill="rgb(244,22,16)" rx="2" ry="2" />
<text  x="230.25" y="255.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.02%)</title><rect x="32.8" y="501" width="0.2" height="15.0" fill="rgb(244,79,47)" rx="2" ry="2" />
<text  x="35.76" y="511.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.02%)</title><rect x="12.3" y="357" width="0.2" height="15.0" fill="rgb(244,183,47)" rx="2" ry="2" />
<text  x="15.32" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (11 samples, 0.20%)</title><rect x="208.7" y="277" width="2.3" height="15.0" fill="rgb(220,89,12)" rx="2" ry="2" />
<text  x="211.70" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="844.2" y="373" width="0.2" height="15.0" fill="rgb(220,73,47)" rx="2" ry="2" />
<text  x="847.22" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (1 samples, 0.02%)</title><rect x="702.8" y="453" width="0.2" height="15.0" fill="rgb(214,147,10)" rx="2" ry="2" />
<text  x="705.83" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.11%)</title><rect x="671.6" y="437" width="1.3" height="15.0" fill="rgb(250,32,13)" rx="2" ry="2" />
<text  x="674.64" y="447.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.04%)</title><rect x="32.5" y="565" width="0.5" height="15.0" fill="rgb(218,145,7)" rx="2" ry="2" />
<text  x="35.55" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.09%)</title><rect x="672.9" y="437" width="1.1" height="15.0" fill="rgb(206,49,24)" rx="2" ry="2" />
<text  x="675.91" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="79.1" y="437" width="0.4" height="15.0" fill="rgb(239,51,54)" rx="2" ry="2" />
<text  x="82.11" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (25 samples, 0.45%)</title><rect x="386.5" y="325" width="5.3" height="15.0" fill="rgb(248,91,17)" rx="2" ry="2" />
<text  x="389.55" y="335.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (13 samples, 0.23%)</title><rect x="462.4" y="309" width="2.7" height="15.0" fill="rgb(206,81,46)" rx="2" ry="2" />
<text  x="465.40" y="319.5" ></text>
</g>
<g >
<title>free (19 samples, 0.34%)</title><rect x="359.6" y="309" width="4.0" height="15.0" fill="rgb(253,73,30)" rx="2" ry="2" />
<text  x="362.57" y="319.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.30%)</title><rect x="918.8" y="357" width="3.6" height="15.0" fill="rgb(228,31,32)" rx="2" ry="2" />
<text  x="921.81" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (1 samples, 0.02%)</title><rect x="15.1" y="229" width="0.2" height="15.0" fill="rgb(247,78,14)" rx="2" ry="2" />
<text  x="18.06" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1148.7" y="437" width="0.2" height="15.0" fill="rgb(206,143,18)" rx="2" ry="2" />
<text  x="1151.70" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.02%)</title><rect x="22.6" y="277" width="0.3" height="15.0" fill="rgb(212,177,49)" rx="2" ry="2" />
<text  x="25.64" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.04%)</title><rect x="18.0" y="149" width="0.4" height="15.0" fill="rgb(252,139,34)" rx="2" ry="2" />
<text  x="21.01" y="159.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.04%)</title><rect x="19.9" y="245" width="0.4" height="15.0" fill="rgb(230,146,32)" rx="2" ry="2" />
<text  x="22.90" y="255.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (2 samples, 0.04%)</title><rect x="523.9" y="341" width="0.5" height="15.0" fill="rgb(254,224,31)" rx="2" ry="2" />
<text  x="526.93" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.05%)</title><rect x="659.6" y="437" width="0.7" height="15.0" fill="rgb(252,51,53)" rx="2" ry="2" />
<text  x="662.63" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.07%)</title><rect x="851.8" y="421" width="0.8" height="15.0" fill="rgb(211,114,42)" rx="2" ry="2" />
<text  x="854.80" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (62 samples, 1.11%)</title><rect x="661.7" y="453" width="13.1" height="15.0" fill="rgb(237,185,29)" rx="2" ry="2" />
<text  x="664.74" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.05%)</title><rect x="1146.4" y="405" width="0.6" height="15.0" fill="rgb(219,24,2)" rx="2" ry="2" />
<text  x="1149.38" y="415.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (28 samples, 0.50%)</title><rect x="422.8" y="357" width="5.9" height="15.0" fill="rgb(235,110,35)" rx="2" ry="2" />
<text  x="425.79" y="367.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.16%)</title><rect x="799.8" y="309" width="1.9" height="15.0" fill="rgb(247,73,42)" rx="2" ry="2" />
<text  x="802.76" y="319.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (2 samples, 0.04%)</title><rect x="20.7" y="229" width="0.5" height="15.0" fill="rgb(220,88,8)" rx="2" ry="2" />
<text  x="23.75" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.04%)</title><rect x="67.5" y="437" width="0.4" height="15.0" fill="rgb(231,26,25)" rx="2" ry="2" />
<text  x="70.53" y="447.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="645.3" y="437" width="0.6" height="15.0" fill="rgb(247,193,27)" rx="2" ry="2" />
<text  x="648.30" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (1 samples, 0.02%)</title><rect x="62.0" y="421" width="0.3" height="15.0" fill="rgb(218,229,52)" rx="2" ry="2" />
<text  x="65.05" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (8 samples, 0.14%)</title><rect x="1115.0" y="373" width="1.7" height="15.0" fill="rgb(241,98,43)" rx="2" ry="2" />
<text  x="1117.99" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="17.4" y="197" width="0.2" height="15.0" fill="rgb(210,210,7)" rx="2" ry="2" />
<text  x="20.38" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (506 samples, 9.04%)</title><rect x="201.8" y="309" width="106.6" height="15.0" fill="rgb(207,144,53)" rx="2" ry="2" />
<text  x="204.75" y="319.5" >partition_sna..</text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1047.3" y="293" width="0.3" height="15.0" fill="rgb(235,194,26)" rx="2" ry="2" />
<text  x="1050.35" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.05%)</title><rect x="953.8" y="293" width="0.6" height="15.0" fill="rgb(238,165,23)" rx="2" ry="2" />
<text  x="956.79" y="303.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (11 samples, 0.20%)</title><rect x="57.8" y="405" width="2.3" height="15.0" fill="rgb(216,22,28)" rx="2" ry="2" />
<text  x="60.83" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="928.5" y="341" width="0.2" height="15.0" fill="rgb(229,48,44)" rx="2" ry="2" />
<text  x="931.50" y="351.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (2 samples, 0.04%)</title><rect x="555.5" y="293" width="0.5" height="15.0" fill="rgb(226,206,38)" rx="2" ry="2" />
<text  x="558.54" y="303.5" ></text>
</g>
<g >
<title>[unknown] (69 samples, 1.23%)</title><rect x="10.0" y="565" width="14.5" height="15.0" fill="rgb(228,183,3)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (4 samples, 0.07%)</title><rect x="421.5" y="357" width="0.9" height="15.0" fill="rgb(211,187,10)" rx="2" ry="2" />
<text  x="424.52" y="367.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (2 samples, 0.04%)</title><rect x="799.3" y="277" width="0.5" height="15.0" fill="rgb(251,146,14)" rx="2" ry="2" />
<text  x="802.34" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="236.5" y="229" width="0.9" height="15.0" fill="rgb(228,76,2)" rx="2" ry="2" />
<text  x="239.52" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (5,325 samples, 95.09%)</title><rect x="39.3" y="469" width="1122.0" height="15.0" fill="rgb(226,15,51)" rx="2" ry="2" />
<text  x="42.29" y="479.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.02%)</title><rect x="1020.4" y="213" width="0.2" height="15.0" fill="rgb(253,71,13)" rx="2" ry="2" />
<text  x="1023.38" y="223.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.09%)</title><rect x="727.9" y="405" width="1.1" height="15.0" fill="rgb(207,209,42)" rx="2" ry="2" />
<text  x="730.90" y="415.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (412 samples, 7.36%)</title><rect x="738.2" y="405" width="86.8" height="15.0" fill="rgb(250,60,5)" rx="2" ry="2" />
<text  x="741.23" y="415.5" >cql3::quer..</text>
</g>
<g >
<title>operator new (7 samples, 0.12%)</title><rect x="212.7" y="277" width="1.5" height="15.0" fill="rgb(212,55,5)" rx="2" ry="2" />
<text  x="215.71" y="287.5" ></text>
</g>
<g >
<title>dht::tri_compare (6 samples, 0.11%)</title><rect x="531.7" y="341" width="1.3" height="15.0" fill="rgb(230,79,44)" rx="2" ry="2" />
<text  x="534.73" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="612.6" y="421" width="0.3" height="15.0" fill="rgb(226,148,29)" rx="2" ry="2" />
<text  x="615.64" y="431.5" ></text>
</g>
<g >
<title>all (5,600 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(234,155,10)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (7 samples, 0.12%)</title><rect x="55.1" y="421" width="1.5" height="15.0" fill="rgb(231,107,1)" rx="2" ry="2" />
<text  x="58.09" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (15 samples, 0.27%)</title><rect x="12.7" y="245" width="3.2" height="15.0" fill="rgb(221,229,0)" rx="2" ry="2" />
<text  x="15.74" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (19 samples, 0.34%)</title><rect x="237.4" y="245" width="4.0" height="15.0" fill="rgb(222,36,24)" rx="2" ry="2" />
<text  x="240.36" y="255.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (5 samples, 0.09%)</title><rect x="697.1" y="421" width="1.1" height="15.0" fill="rgb(207,85,36)" rx="2" ry="2" />
<text  x="700.14" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (1 samples, 0.02%)</title><rect x="845.1" y="325" width="0.2" height="15.0" fill="rgb(244,41,49)" rx="2" ry="2" />
<text  x="848.06" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (14 samples, 0.25%)</title><rect x="637.1" y="405" width="2.9" height="15.0" fill="rgb(227,108,28)" rx="2" ry="2" />
<text  x="640.09" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="199.2" y="309" width="0.2" height="15.0" fill="rgb(229,34,5)" rx="2" ry="2" />
<text  x="202.22" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="1044.0" y="245" width="0.4" height="15.0" fill="rgb(232,80,3)" rx="2" ry="2" />
<text  x="1046.97" y="255.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="882.6" y="277" width="0.8" height="15.0" fill="rgb(244,152,42)" rx="2" ry="2" />
<text  x="885.57" y="287.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (1 samples, 0.02%)</title><rect x="1161.8" y="389" width="0.2" height="15.0" fill="rgb(224,186,2)" rx="2" ry="2" />
<text  x="1164.76" y="399.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (57 samples, 1.02%)</title><rect x="743.5" y="389" width="12.0" height="15.0" fill="rgb(221,6,38)" rx="2" ry="2" />
<text  x="746.50" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.09%)</title><rect x="566.3" y="309" width="1.0" height="15.0" fill="rgb(230,184,46)" rx="2" ry="2" />
<text  x="569.29" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="17.0" y="277" width="0.2" height="15.0" fill="rgb(253,94,43)" rx="2" ry="2" />
<text  x="19.95" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.04%)</title><rect x="14.0" y="213" width="0.4" height="15.0" fill="rgb(208,1,42)" rx="2" ry="2" />
<text  x="17.00" y="223.5" ></text>
</g>
<g >
<title>row::compact_and_expire (65 samples, 1.16%)</title><rect x="429.3" y="357" width="13.7" height="15.0" fill="rgb(223,186,26)" rx="2" ry="2" />
<text  x="432.32" y="367.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (58 samples, 1.04%)</title><rect x="11.9" y="405" width="12.2" height="15.0" fill="rgb(214,198,49)" rx="2" ry="2" />
<text  x="14.90" y="415.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (3 samples, 0.05%)</title><rect x="1107.6" y="341" width="0.6" height="15.0" fill="rgb(218,122,38)" rx="2" ry="2" />
<text  x="1110.61" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="469.6" y="357" width="0.2" height="15.0" fill="rgb(217,111,33)" rx="2" ry="2" />
<text  x="472.57" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.04%)</title><rect x="928.1" y="325" width="0.4" height="15.0" fill="rgb(226,216,10)" rx="2" ry="2" />
<text  x="931.08" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="137.5" y="405" width="0.4" height="15.0" fill="rgb(242,85,15)" rx="2" ry="2" />
<text  x="140.48" y="415.5" ></text>
</g>
<g >
<title>reader_permit::signal (4 samples, 0.07%)</title><rect x="316.6" y="341" width="0.8" height="15.0" fill="rgb(222,143,30)" rx="2" ry="2" />
<text  x="319.59" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.02%)</title><rect x="19.3" y="181" width="0.2" height="15.0" fill="rgb(238,224,23)" rx="2" ry="2" />
<text  x="22.27" y="191.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (5 samples, 0.09%)</title><rect x="908.3" y="325" width="1.0" height="15.0" fill="rgb(221,113,34)" rx="2" ry="2" />
<text  x="911.27" y="335.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.05%)</title><rect x="509.0" y="341" width="0.6" height="15.0" fill="rgb(213,209,12)" rx="2" ry="2" />
<text  x="511.97" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (1 samples, 0.02%)</title><rect x="12.1" y="389" width="0.2" height="15.0" fill="rgb(231,83,5)" rx="2" ry="2" />
<text  x="15.11" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="133.9" y="357" width="0.4" height="15.0" fill="rgb(243,65,45)" rx="2" ry="2" />
<text  x="136.90" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.02%)</title><rect x="633.9" y="421" width="0.2" height="15.0" fill="rgb(206,181,19)" rx="2" ry="2" />
<text  x="636.92" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="21.0" y="101" width="0.2" height="15.0" fill="rgb(232,177,43)" rx="2" ry="2" />
<text  x="23.96" y="111.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_view_statement, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="23.5" y="341" width="0.2" height="15.0" fill="rgb(237,150,31)" rx="2" ry="2" />
<text  x="26.49" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.05%)</title><rect x="362.9" y="293" width="0.7" height="15.0" fill="rgb(251,106,21)" rx="2" ry="2" />
<text  x="365.95" y="303.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.02%)</title><rect x="844.2" y="325" width="0.2" height="15.0" fill="rgb(245,47,37)" rx="2" ry="2" />
<text  x="847.22" y="335.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.02%)</title><rect x="844.4" y="261" width="0.2" height="15.0" fill="rgb(227,182,26)" rx="2" ry="2" />
<text  x="847.43" y="271.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (1 samples, 0.02%)</title><rect x="291.9" y="261" width="0.2" height="15.0" fill="rgb(206,19,37)" rx="2" ry="2" />
<text  x="294.94" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.02%)</title><rect x="22.4" y="101" width="0.2" height="15.0" fill="rgb(236,56,23)" rx="2" ry="2" />
<text  x="25.43" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="210.0" y="229" width="0.4" height="15.0" fill="rgb(226,68,44)" rx="2" ry="2" />
<text  x="212.97" y="239.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (3 samples, 0.05%)</title><rect x="927.9" y="341" width="0.6" height="15.0" fill="rgb(210,3,6)" rx="2" ry="2" />
<text  x="930.87" y="351.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (101 samples, 1.80%)</title><rect x="1073.5" y="261" width="21.3" height="15.0" fill="rgb(227,138,52)" rx="2" ry="2" />
<text  x="1076.47" y="271.5" >l..</text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (3 samples, 0.05%)</title><rect x="309.0" y="341" width="0.6" height="15.0" fill="rgb(211,118,32)" rx="2" ry="2" />
<text  x="312.00" y="351.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="13.6" y="133" width="0.2" height="15.0" fill="rgb(239,187,8)" rx="2" ry="2" />
<text  x="16.58" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (15 samples, 0.27%)</title><rect x="1157.5" y="453" width="3.2" height="15.0" fill="rgb(221,214,41)" rx="2" ry="2" />
<text  x="1160.55" y="463.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (13 samples, 0.23%)</title><rect x="289.2" y="213" width="2.7" height="15.0" fill="rgb(235,126,7)" rx="2" ry="2" />
<text  x="292.20" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.02%)</title><rect x="1161.3" y="357" width="0.3" height="15.0" fill="rgb(246,68,13)" rx="2" ry="2" />
<text  x="1164.34" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="22.2" y="85" width="0.2" height="15.0" fill="rgb(229,195,20)" rx="2" ry="2" />
<text  x="25.22" y="95.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (1 samples, 0.02%)</title><rect x="33.2" y="469" width="0.2" height="15.0" fill="rgb(229,164,42)" rx="2" ry="2" />
<text  x="36.18" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="882.6" y="261" width="0.8" height="15.0" fill="rgb(224,51,41)" rx="2" ry="2" />
<text  x="885.57" y="271.5" ></text>
</g>
<g >
<title>sstring_hash::operator (5 samples, 0.09%)</title><rect x="827.4" y="389" width="1.0" height="15.0" fill="rgb(217,135,54)" rx="2" ry="2" />
<text  x="830.36" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="1154.2" y="405" width="0.2" height="15.0" fill="rgb(235,142,11)" rx="2" ry="2" />
<text  x="1157.18" y="415.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (20 samples, 0.36%)</title><rect x="751.1" y="357" width="4.2" height="15.0" fill="rgb(229,223,43)" rx="2" ry="2" />
<text  x="754.08" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (106 samples, 1.89%)</title><rect x="876.2" y="325" width="22.4" height="15.0" fill="rgb(209,125,23)" rx="2" ry="2" />
<text  x="879.25" y="335.5" >_..</text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="354.3" y="341" width="0.2" height="15.0" fill="rgb(205,96,1)" rx="2" ry="2" />
<text  x="357.31" y="351.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (13 samples, 0.23%)</title><rect x="592.6" y="389" width="2.8" height="15.0" fill="rgb(220,165,14)" rx="2" ry="2" />
<text  x="595.62" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (2 samples, 0.04%)</title><rect x="930.2" y="357" width="0.4" height="15.0" fill="rgb(229,141,21)" rx="2" ry="2" />
<text  x="933.19" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (227 samples, 4.05%)</title><rect x="1047.6" y="309" width="47.8" height="15.0" fill="rgb(228,98,21)" rx="2" ry="2" />
<text  x="1050.56" y="319.5" >serv..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="17.2" y="181" width="0.2" height="15.0" fill="rgb(225,177,24)" rx="2" ry="2" />
<text  x="20.16" y="191.5" ></text>
</g>
<g >
<title>schema::position (1 samples, 0.02%)</title><rect x="923.9" y="357" width="0.2" height="15.0" fill="rgb(241,109,20)" rx="2" ry="2" />
<text  x="926.87" y="367.5" ></text>
</g>
<g >
<title>reader_permit::max_result_size (2 samples, 0.04%)</title><rect x="595.8" y="405" width="0.4" height="15.0" fill="rgb(235,138,29)" rx="2" ry="2" />
<text  x="598.79" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (18 samples, 0.32%)</title><rect x="620.2" y="453" width="3.8" height="15.0" fill="rgb(213,8,25)" rx="2" ry="2" />
<text  x="623.23" y="463.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (1 samples, 0.02%)</title><rect x="824.8" y="389" width="0.2" height="15.0" fill="rgb(248,139,7)" rx="2" ry="2" />
<text  x="827.83" y="399.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (50 samples, 0.89%)</title><rect x="1084.2" y="245" width="10.6" height="15.0" fill="rgb(246,156,11)" rx="2" ry="2" />
<text  x="1087.22" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="17.8" y="197" width="0.2" height="15.0" fill="rgb(216,204,4)" rx="2" ry="2" />
<text  x="20.80" y="207.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (22 samples, 0.39%)</title><rect x="147.8" y="405" width="4.6" height="15.0" fill="rgb(227,214,32)" rx="2" ry="2" />
<text  x="150.81" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (128 samples, 2.29%)</title><rect x="1068.4" y="293" width="27.0" height="15.0" fill="rgb(250,172,6)" rx="2" ry="2" />
<text  x="1071.42" y="303.5" >s..</text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.02%)</title><rect x="798.1" y="277" width="0.2" height="15.0" fill="rgb(233,158,4)" rx="2" ry="2" />
<text  x="801.07" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.02%)</title><rect x="20.1" y="165" width="0.2" height="15.0" fill="rgb(239,195,14)" rx="2" ry="2" />
<text  x="23.11" y="175.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (1 samples, 0.02%)</title><rect x="12.1" y="357" width="0.2" height="15.0" fill="rgb(210,176,10)" rx="2" ry="2" />
<text  x="15.11" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.02%)</title><rect x="694.8" y="421" width="0.2" height="15.0" fill="rgb(225,87,37)" rx="2" ry="2" />
<text  x="697.82" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="564.2" y="325" width="1.2" height="15.0" fill="rgb(227,37,42)" rx="2" ry="2" />
<text  x="567.18" y="335.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="19.5" y="181" width="0.2" height="15.0" fill="rgb(226,89,1)" rx="2" ry="2" />
<text  x="22.48" y="191.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="492.7" y="357" width="0.3" height="15.0" fill="rgb(208,131,19)" rx="2" ry="2" />
<text  x="495.75" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.04%)</title><rect x="466.6" y="325" width="0.4" height="15.0" fill="rgb(217,164,37)" rx="2" ry="2" />
<text  x="469.62" y="335.5" ></text>
</g>
<g >
<title>database::apply_in_memory (6 samples, 0.11%)</title><rect x="1122.6" y="357" width="1.2" height="15.0" fill="rgb(250,26,52)" rx="2" ry="2" />
<text  x="1125.57" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7 samples, 0.12%)</title><rect x="792.4" y="293" width="1.5" height="15.0" fill="rgb(248,129,21)" rx="2" ry="2" />
<text  x="795.38" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="49.0" y="421" width="0.2" height="15.0" fill="rgb(215,6,8)" rx="2" ry="2" />
<text  x="51.98" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_with_triggers (1 samples, 0.02%)</title><rect x="845.7" y="357" width="0.2" height="15.0" fill="rgb(214,166,46)" rx="2" ry="2" />
<text  x="848.69" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.02%)</title><rect x="89.0" y="421" width="0.2" height="15.0" fill="rgb(206,121,52)" rx="2" ry="2" />
<text  x="92.02" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (1 samples, 0.02%)</title><rect x="845.3" y="325" width="0.2" height="15.0" fill="rgb(229,49,7)" rx="2" ry="2" />
<text  x="848.27" y="335.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (1 samples, 0.02%)</title><rect x="12.1" y="341" width="0.2" height="15.0" fill="rgb(225,196,8)" rx="2" ry="2" />
<text  x="15.11" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (1 samples, 0.02%)</title><rect x="11.1" y="293" width="0.2" height="15.0" fill="rgb(223,216,35)" rx="2" ry="2" />
<text  x="14.05" y="303.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (1 samples, 0.02%)</title><rect x="702.4" y="437" width="0.2" height="15.0" fill="rgb(251,180,36)" rx="2" ry="2" />
<text  x="705.41" y="447.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (7 samples, 0.12%)</title><rect x="584.4" y="325" width="1.5" height="15.0" fill="rgb(240,129,35)" rx="2" ry="2" />
<text  x="587.41" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (38 samples, 0.68%)</title><rect x="93.0" y="405" width="8.0" height="15.0" fill="rgb(226,227,41)" rx="2" ry="2" />
<text  x="96.02" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.18%)</title><rect x="729.0" y="405" width="2.1" height="15.0" fill="rgb(234,220,38)" rx="2" ry="2" />
<text  x="731.96" y="415.5" ></text>
</g>
<g >
<title>query_result_builder::query_result_builder (2 samples, 0.04%)</title><rect x="89.7" y="421" width="0.4" height="15.0" fill="rgb(213,162,47)" rx="2" ry="2" />
<text  x="92.65" y="431.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.14%)</title><rect x="87.3" y="421" width="1.7" height="15.0" fill="rgb(244,198,54)" rx="2" ry="2" />
<text  x="90.33" y="431.5" ></text>
</g>
<g >
<title>database::find_schema (15 samples, 0.27%)</title><rect x="810.5" y="341" width="3.2" height="15.0" fill="rgb(220,176,34)" rx="2" ry="2" />
<text  x="813.50" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (1 samples, 0.02%)</title><rect x="11.1" y="341" width="0.2" height="15.0" fill="rgb(231,179,6)" rx="2" ry="2" />
<text  x="14.05" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="853.3" y="405" width="0.2" height="15.0" fill="rgb(206,229,5)" rx="2" ry="2" />
<text  x="856.28" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_initial_partition_key_restrictions (1 samples, 0.02%)</title><rect x="10.6" y="357" width="0.2" height="15.0" fill="rgb(246,29,49)" rx="2" ry="2" />
<text  x="13.63" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="17.8" y="165" width="0.2" height="15.0" fill="rgb(225,154,32)" rx="2" ry="2" />
<text  x="20.80" y="175.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (6 samples, 0.11%)</title><rect x="371.0" y="357" width="1.2" height="15.0" fill="rgb(240,27,33)" rx="2" ry="2" />
<text  x="373.95" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (1 samples, 0.02%)</title><rect x="33.6" y="469" width="0.2" height="15.0" fill="rgb(238,71,18)" rx="2" ry="2" />
<text  x="36.60" y="479.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.02%)</title><rect x="1039.5" y="229" width="0.3" height="15.0" fill="rgb(210,144,35)" rx="2" ry="2" />
<text  x="1042.55" y="239.5" ></text>
</g>
<g >
<title>schema::partition_key_size (2 samples, 0.04%)</title><rect x="1117.7" y="373" width="0.4" height="15.0" fill="rgb(218,192,48)" rx="2" ry="2" />
<text  x="1120.72" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (4 samples, 0.07%)</title><rect x="561.0" y="325" width="0.9" height="15.0" fill="rgb(226,175,6)" rx="2" ry="2" />
<text  x="564.02" y="335.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (2 samples, 0.04%)</title><rect x="707.0" y="437" width="0.5" height="15.0" fill="rgb(251,43,23)" rx="2" ry="2" />
<text  x="710.04" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="21.2" y="165" width="0.2" height="15.0" fill="rgb(241,81,50)" rx="2" ry="2" />
<text  x="24.17" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.05%)</title><rect x="1124.7" y="453" width="0.6" height="15.0" fill="rgb(207,8,3)" rx="2" ry="2" />
<text  x="1127.68" y="463.5" ></text>
</g>
<g >
<title>schema::get_partitioner (1 samples, 0.02%)</title><rect x="923.7" y="357" width="0.2" height="15.0" fill="rgb(252,106,0)" rx="2" ry="2" />
<text  x="926.66" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (34 samples, 0.61%)</title><rect x="356.6" y="325" width="7.2" height="15.0" fill="rgb(222,86,32)" rx="2" ry="2" />
<text  x="359.62" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="306.7" y="261" width="0.8" height="15.0" fill="rgb(248,213,16)" rx="2" ry="2" />
<text  x="309.69" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.02%)</title><rect x="18.4" y="245" width="0.2" height="15.0" fill="rgb(229,187,9)" rx="2" ry="2" />
<text  x="21.43" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.02%)</title><rect x="640.2" y="405" width="0.3" height="15.0" fill="rgb(238,106,32)" rx="2" ry="2" />
<text  x="643.25" y="415.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (5 samples, 0.09%)</title><rect x="1044.8" y="245" width="1.1" height="15.0" fill="rgb(243,214,10)" rx="2" ry="2" />
<text  x="1047.82" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="49.2" y="437" width="0.4" height="15.0" fill="rgb(251,93,34)" rx="2" ry="2" />
<text  x="52.19" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="508.1" y="325" width="0.9" height="15.0" fill="rgb(217,87,42)" rx="2" ry="2" />
<text  x="511.13" y="335.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.02%)</title><rect x="22.6" y="261" width="0.3" height="15.0" fill="rgb(216,132,45)" rx="2" ry="2" />
<text  x="25.64" y="271.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (1 samples, 0.02%)</title><rect x="443.0" y="357" width="0.2" height="15.0" fill="rgb(236,64,31)" rx="2" ry="2" />
<text  x="446.02" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (16 samples, 0.29%)</title><rect x="425.3" y="341" width="3.4" height="15.0" fill="rgb(207,197,36)" rx="2" ry="2" />
<text  x="428.32" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.02%)</title><rect x="19.3" y="197" width="0.2" height="15.0" fill="rgb(244,75,20)" rx="2" ry="2" />
<text  x="22.27" y="207.5" ></text>
</g>
<g >
<title>sstring_hash::operator (7 samples, 0.12%)</title><rect x="1060.8" y="277" width="1.5" height="15.0" fill="rgb(229,86,36)" rx="2" ry="2" />
<text  x="1063.83" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (2 samples, 0.04%)</title><rect x="1123.8" y="261" width="0.5" height="15.0" fill="rgb(222,62,41)" rx="2" ry="2" />
<text  x="1126.84" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.04%)</title><rect x="836.6" y="437" width="0.5" height="15.0" fill="rgb(217,157,11)" rx="2" ry="2" />
<text  x="839.63" y="447.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.09%)</title><rect x="478.8" y="389" width="1.1" height="15.0" fill="rgb(235,135,16)" rx="2" ry="2" />
<text  x="481.84" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (527 samples, 9.41%)</title><rect x="198.0" y="325" width="111.0" height="15.0" fill="rgb(229,78,42)" rx="2" ry="2" />
<text  x="200.96" y="335.5" >partition_sna..</text>
</g>
<g >
<title>malloc (7 samples, 0.12%)</title><rect x="593.9" y="373" width="1.5" height="15.0" fill="rgb(226,172,37)" rx="2" ry="2" />
<text  x="596.89" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.25%)</title><rect x="1039.8" y="213" width="2.9" height="15.0" fill="rgb(209,133,4)" rx="2" ry="2" />
<text  x="1042.76" y="223.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.02%)</title><rect x="12.3" y="149" width="0.2" height="15.0" fill="rgb(233,21,29)" rx="2" ry="2" />
<text  x="15.32" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="443.2" y="357" width="0.2" height="15.0" fill="rgb(212,116,24)" rx="2" ry="2" />
<text  x="446.23" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="22.2" y="165" width="0.2" height="15.0" fill="rgb(205,225,15)" rx="2" ry="2" />
<text  x="25.22" y="175.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (2 samples, 0.04%)</title><rect x="778.7" y="341" width="0.4" height="15.0" fill="rgb(219,119,10)" rx="2" ry="2" />
<text  x="781.69" y="351.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (1 samples, 0.02%)</title><rect x="1161.8" y="421" width="0.2" height="15.0" fill="rgb(231,68,46)" rx="2" ry="2" />
<text  x="1164.76" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (18 samples, 0.32%)</title><rect x="461.6" y="325" width="3.8" height="15.0" fill="rgb(250,124,54)" rx="2" ry="2" />
<text  x="464.56" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.11%)</title><rect x="942.4" y="325" width="1.3" height="15.0" fill="rgb(253,179,8)" rx="2" ry="2" />
<text  x="945.41" y="335.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.16%)</title><rect x="718.6" y="389" width="1.9" height="15.0" fill="rgb(217,170,26)" rx="2" ry="2" />
<text  x="721.63" y="399.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1 samples, 0.02%)</title><rect x="13.8" y="85" width="0.2" height="15.0" fill="rgb(244,46,42)" rx="2" ry="2" />
<text  x="16.79" y="95.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (1 samples, 0.02%)</title><rect x="1161.8" y="405" width="0.2" height="15.0" fill="rgb(247,202,6)" rx="2" ry="2" />
<text  x="1164.76" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="678.2" y="437" width="0.2" height="15.0" fill="rgb(244,156,53)" rx="2" ry="2" />
<text  x="681.17" y="447.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (6 samples, 0.11%)</title><rect x="450.2" y="341" width="1.2" height="15.0" fill="rgb(220,92,32)" rx="2" ry="2" />
<text  x="453.18" y="351.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (1 samples, 0.02%)</title><rect x="447.9" y="373" width="0.2" height="15.0" fill="rgb(229,120,35)" rx="2" ry="2" />
<text  x="450.86" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="22.2" y="197" width="0.2" height="15.0" fill="rgb(245,62,54)" rx="2" ry="2" />
<text  x="25.22" y="207.5" ></text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.02%)</title><rect x="1162.2" y="501" width="0.2" height="15.0" fill="rgb(221,33,25)" rx="2" ry="2" />
<text  x="1165.19" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="54.7" y="405" width="0.4" height="15.0" fill="rgb(207,173,26)" rx="2" ry="2" />
<text  x="57.67" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (133 samples, 2.38%)</title><rect x="447.2" y="389" width="28.1" height="15.0" fill="rgb(231,48,52)" rx="2" ry="2" />
<text  x="450.23" y="399.5" >s..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="103.8" y="421" width="0.2" height="15.0" fill="rgb(235,67,7)" rx="2" ry="2" />
<text  x="106.77" y="431.5" ></text>
</g>
<g >
<title>schema::column_at (12 samples, 0.21%)</title><rect x="247.7" y="213" width="2.5" height="15.0" fill="rgb(236,149,31)" rx="2" ry="2" />
<text  x="250.69" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (2 samples, 0.04%)</title><rect x="586.1" y="325" width="0.4" height="15.0" fill="rgb(232,72,35)" rx="2" ry="2" />
<text  x="589.09" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="563.5" y="325" width="0.3" height="15.0" fill="rgb(238,132,50)" rx="2" ry="2" />
<text  x="566.55" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="134.3" y="373" width="0.2" height="15.0" fill="rgb(238,134,9)" rx="2" ry="2" />
<text  x="137.32" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.02%)</title><rect x="68.6" y="277" width="0.2" height="15.0" fill="rgb(227,85,42)" rx="2" ry="2" />
<text  x="71.58" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (1,263 samples, 22.55%)</title><rect x="856.0" y="389" width="266.2" height="15.0" fill="rgb(207,152,27)" rx="2" ry="2" />
<text  x="859.02" y="399.5" >cql3::statements::select_statement:..</text>
</g>
<g >
<title>database::add_column_family (1 samples, 0.02%)</title><rect x="68.4" y="293" width="0.2" height="15.0" fill="rgb(249,137,20)" rx="2" ry="2" />
<text  x="71.37" y="303.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (2 samples, 0.04%)</title><rect x="720.5" y="421" width="0.5" height="15.0" fill="rgb(247,146,6)" rx="2" ry="2" />
<text  x="723.53" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="368.8" y="341" width="0.3" height="15.0" fill="rgb(237,175,48)" rx="2" ry="2" />
<text  x="371.85" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="134.1" y="325" width="0.2" height="15.0" fill="rgb(215,103,53)" rx="2" ry="2" />
<text  x="137.11" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="560.8" y="309" width="0.2" height="15.0" fill="rgb(254,142,33)" rx="2" ry="2" />
<text  x="563.81" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.04%)</title><rect x="896.5" y="277" width="0.4" height="15.0" fill="rgb(223,2,22)" rx="2" ry="2" />
<text  x="899.48" y="287.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.02%)</title><rect x="32.5" y="517" width="0.3" height="15.0" fill="rgb(228,102,20)" rx="2" ry="2" />
<text  x="35.55" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="21.0" y="133" width="0.2" height="15.0" fill="rgb(205,182,20)" rx="2" ry="2" />
<text  x="23.96" y="143.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (270 samples, 4.82%)</title><rect x="761.4" y="373" width="56.9" height="15.0" fill="rgb(238,72,14)" rx="2" ry="2" />
<text  x="764.41" y="383.5" >servic..</text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (1 samples, 0.02%)</title><rect x="1157.1" y="453" width="0.2" height="15.0" fill="rgb(230,32,8)" rx="2" ry="2" />
<text  x="1160.13" y="463.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (1 samples, 0.02%)</title><rect x="737.4" y="405" width="0.2" height="15.0" fill="rgb(239,107,31)" rx="2" ry="2" />
<text  x="740.39" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.02%)</title><rect x="836.0" y="405" width="0.2" height="15.0" fill="rgb(236,64,53)" rx="2" ry="2" />
<text  x="839.00" y="415.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="32.3" y="565" width="0.2" height="15.0" fill="rgb(250,90,35)" rx="2" ry="2" />
<text  x="35.34" y="575.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="1123.8" y="293" width="0.5" height="15.0" fill="rgb(232,51,37)" rx="2" ry="2" />
<text  x="1126.84" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="22.4" y="245" width="0.2" height="15.0" fill="rgb(224,37,50)" rx="2" ry="2" />
<text  x="25.43" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="17.4" y="117" width="0.2" height="15.0" fill="rgb(231,190,5)" rx="2" ry="2" />
<text  x="20.38" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="805.0" y="309" width="1.3" height="15.0" fill="rgb(253,212,11)" rx="2" ry="2" />
<text  x="808.02" y="319.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.02%)</title><rect x="363.6" y="309" width="0.2" height="15.0" fill="rgb(209,118,42)" rx="2" ry="2" />
<text  x="366.58" y="319.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.27%)</title><rect x="330.1" y="373" width="3.1" height="15.0" fill="rgb(230,175,27)" rx="2" ry="2" />
<text  x="333.07" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.05%)</title><rect x="644.7" y="421" width="0.6" height="15.0" fill="rgb(245,212,33)" rx="2" ry="2" />
<text  x="647.67" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.02%)</title><rect x="22.4" y="213" width="0.2" height="15.0" fill="rgb(207,30,37)" rx="2" ry="2" />
<text  x="25.43" y="223.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (107 samples, 1.91%)</title><rect x="876.0" y="341" width="22.6" height="15.0" fill="rgb(210,88,50)" rx="2" ry="2" />
<text  x="879.04" y="351.5" >_..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="474.8" y="357" width="0.2" height="15.0" fill="rgb(227,193,22)" rx="2" ry="2" />
<text  x="477.84" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (3 samples, 0.05%)</title><rect x="293.8" y="261" width="0.7" height="15.0" fill="rgb(217,106,13)" rx="2" ry="2" />
<text  x="296.83" y="271.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.02%)</title><rect x="22.6" y="293" width="0.3" height="15.0" fill="rgb(220,211,20)" rx="2" ry="2" />
<text  x="25.64" y="303.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.14%)</title><rect x="653.5" y="421" width="1.7" height="15.0" fill="rgb(250,123,29)" rx="2" ry="2" />
<text  x="656.52" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.18%)</title><rect x="801.7" y="293" width="2.1" height="15.0" fill="rgb(228,220,19)" rx="2" ry="2" />
<text  x="804.65" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.05%)</title><rect x="541.0" y="293" width="0.6" height="15.0" fill="rgb(254,119,51)" rx="2" ry="2" />
<text  x="544.00" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.02%)</title><rect x="17.8" y="133" width="0.2" height="15.0" fill="rgb(252,180,6)" rx="2" ry="2" />
<text  x="20.80" y="143.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (5 samples, 0.09%)</title><rect x="749.8" y="341" width="1.1" height="15.0" fill="rgb(232,172,17)" rx="2" ry="2" />
<text  x="752.82" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.07%)</title><rect x="645.9" y="437" width="0.9" height="15.0" fill="rgb(222,33,51)" rx="2" ry="2" />
<text  x="648.94" y="447.5" ></text>
</g>
<g >
<title>auth::resource::parent (3 samples, 0.05%)</title><rect x="779.5" y="341" width="0.7" height="15.0" fill="rgb(205,70,7)" rx="2" ry="2" />
<text  x="782.53" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.02%)</title><rect x="640.0" y="405" width="0.2" height="15.0" fill="rgb(239,122,17)" rx="2" ry="2" />
<text  x="643.04" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="1106.6" y="309" width="1.0" height="15.0" fill="rgb(249,43,33)" rx="2" ry="2" />
<text  x="1109.56" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (96 samples, 1.71%)</title><rect x="898.6" y="357" width="20.2" height="15.0" fill="rgb(246,115,25)" rx="2" ry="2" />
<text  x="901.58" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.02%)</title><rect x="18.6" y="293" width="0.3" height="15.0" fill="rgb(205,124,37)" rx="2" ry="2" />
<text  x="21.64" y="303.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.05%)</title><rect x="464.5" y="293" width="0.6" height="15.0" fill="rgb(206,9,50)" rx="2" ry="2" />
<text  x="467.51" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="880.2" y="245" width="1.1" height="15.0" fill="rgb(253,33,40)" rx="2" ry="2" />
<text  x="883.25" y="255.5" ></text>
</g>
<g >
<title>db::validate_for_read (1 samples, 0.02%)</title><rect x="1122.2" y="389" width="0.2" height="15.0" fill="rgb(247,24,27)" rx="2" ry="2" />
<text  x="1125.15" y="399.5" ></text>
</g>
<g >
<title>schema::get_partitioner (1 samples, 0.02%)</title><rect x="918.6" y="341" width="0.2" height="15.0" fill="rgb(238,144,30)" rx="2" ry="2" />
<text  x="921.60" y="351.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.11%)</title><rect x="562.5" y="341" width="1.3" height="15.0" fill="rgb(244,82,47)" rx="2" ry="2" />
<text  x="565.49" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="92.2" y="389" width="0.2" height="15.0" fill="rgb(226,126,25)" rx="2" ry="2" />
<text  x="95.18" y="399.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (2 samples, 0.04%)</title><rect x="821.2" y="357" width="0.5" height="15.0" fill="rgb(222,118,53)" rx="2" ry="2" />
<text  x="824.25" y="367.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (15 samples, 0.27%)</title><rect x="24.8" y="533" width="3.1" height="15.0" fill="rgb(251,1,15)" rx="2" ry="2" />
<text  x="27.75" y="543.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (2 samples, 0.04%)</title><rect x="1127.0" y="453" width="0.4" height="15.0" fill="rgb(238,184,51)" rx="2" ry="2" />
<text  x="1130.00" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (81 samples, 1.45%)</title><rect x="544.0" y="325" width="17.0" height="15.0" fill="rgb(254,189,4)" rx="2" ry="2" />
<text  x="546.95" y="335.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.36%)</title><rect x="1103.4" y="341" width="4.2" height="15.0" fill="rgb(211,191,28)" rx="2" ry="2" />
<text  x="1106.40" y="351.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (3 samples, 0.05%)</title><rect x="1072.4" y="277" width="0.7" height="15.0" fill="rgb(244,24,8)" rx="2" ry="2" />
<text  x="1075.42" y="287.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (1 samples, 0.02%)</title><rect x="68.4" y="453" width="0.2" height="15.0" fill="rgb(228,181,16)" rx="2" ry="2" />
<text  x="71.37" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.02%)</title><rect x="22.4" y="293" width="0.2" height="15.0" fill="rgb(241,191,11)" rx="2" ry="2" />
<text  x="25.43" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.02%)</title><rect x="22.0" y="245" width="0.2" height="15.0" fill="rgb(205,123,42)" rx="2" ry="2" />
<text  x="25.01" y="255.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.02%)</title><rect x="68.6" y="293" width="0.2" height="15.0" fill="rgb(220,178,6)" rx="2" ry="2" />
<text  x="71.58" y="303.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (2 samples, 0.04%)</title><rect x="502.9" y="325" width="0.4" height="15.0" fill="rgb(235,224,28)" rx="2" ry="2" />
<text  x="505.86" y="335.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.02%)</title><rect x="660.3" y="437" width="0.2" height="15.0" fill="rgb(234,136,20)" rx="2" ry="2" />
<text  x="663.26" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.02%)</title><rect x="13.8" y="149" width="0.2" height="15.0" fill="rgb(220,40,51)" rx="2" ry="2" />
<text  x="16.79" y="159.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="633.7" y="421" width="0.2" height="15.0" fill="rgb(238,196,24)" rx="2" ry="2" />
<text  x="636.71" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (2 samples, 0.04%)</title><rect x="598.7" y="405" width="0.5" height="15.0" fill="rgb(252,45,51)" rx="2" ry="2" />
<text  x="601.74" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="19.1" y="213" width="0.2" height="15.0" fill="rgb(221,224,36)" rx="2" ry="2" />
<text  x="22.06" y="223.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="474.0" y="357" width="0.2" height="15.0" fill="rgb(251,162,23)" rx="2" ry="2" />
<text  x="476.99" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.02%)</title><rect x="1012.6" y="229" width="0.2" height="15.0" fill="rgb(240,119,4)" rx="2" ry="2" />
<text  x="1015.58" y="239.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (3 samples, 0.05%)</title><rect x="844.4" y="325" width="0.7" height="15.0" fill="rgb(209,125,26)" rx="2" ry="2" />
<text  x="847.43" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (15 samples, 0.27%)</title><rect x="601.7" y="437" width="3.1" height="15.0" fill="rgb(251,229,27)" rx="2" ry="2" />
<text  x="604.69" y="447.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (1 samples, 0.02%)</title><rect x="102.5" y="421" width="0.2" height="15.0" fill="rgb(227,123,47)" rx="2" ry="2" />
<text  x="105.50" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="17.8" y="245" width="0.2" height="15.0" fill="rgb(223,178,45)" rx="2" ry="2" />
<text  x="20.80" y="255.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (1 samples, 0.02%)</title><rect x="68.6" y="453" width="0.2" height="15.0" fill="rgb(246,103,37)" rx="2" ry="2" />
<text  x="71.58" y="463.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="59.1" y="389" width="0.2" height="15.0" fill="rgb(234,197,39)" rx="2" ry="2" />
<text  x="62.10" y="399.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="24.1" y="325" width="0.2" height="15.0" fill="rgb(250,20,24)" rx="2" ry="2" />
<text  x="27.12" y="335.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="584.2" y="293" width="0.2" height="15.0" fill="rgb(216,57,37)" rx="2" ry="2" />
<text  x="587.20" y="303.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.04%)</title><rect x="1072.0" y="261" width="0.4" height="15.0" fill="rgb(240,25,25)" rx="2" ry="2" />
<text  x="1075.00" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="12.5" y="197" width="0.2" height="15.0" fill="rgb(244,62,46)" rx="2" ry="2" />
<text  x="15.53" y="207.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.02%)</title><rect x="68.4" y="389" width="0.2" height="15.0" fill="rgb(239,16,12)" rx="2" ry="2" />
<text  x="71.37" y="399.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.02%)</title><rect x="1123.8" y="165" width="0.2" height="15.0" fill="rgb(218,151,47)" rx="2" ry="2" />
<text  x="1126.84" y="175.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (37 samples, 0.66%)</title><rect x="1182.2" y="581" width="7.8" height="15.0" fill="rgb(246,35,53)" rx="2" ry="2" />
<text  x="1185.20" y="591.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.02%)</title><rect x="236.3" y="245" width="0.2" height="15.0" fill="rgb(244,217,42)" rx="2" ry="2" />
<text  x="239.31" y="255.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.05%)</title><rect x="790.1" y="293" width="0.6" height="15.0" fill="rgb(233,205,9)" rx="2" ry="2" />
<text  x="793.06" y="303.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::substr[abi:cxx11] (1 samples, 0.02%)</title><rect x="21.2" y="213" width="0.2" height="15.0" fill="rgb(247,210,4)" rx="2" ry="2" />
<text  x="24.17" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (4 samples, 0.07%)</title><rect x="852.6" y="421" width="0.9" height="15.0" fill="rgb(240,9,48)" rx="2" ry="2" />
<text  x="855.65" y="431.5" ></text>
</g>
<g >
<title>query_result_builder::consume (184 samples, 3.29%)</title><rect x="372.2" y="357" width="38.8" height="15.0" fill="rgb(243,86,42)" rx="2" ry="2" />
<text  x="375.22" y="367.5" >que..</text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.11%)</title><rect x="314.9" y="341" width="1.3" height="15.0" fill="rgb(227,10,11)" rx="2" ry="2" />
<text  x="317.90" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.05%)</title><rect x="151.2" y="373" width="0.6" height="15.0" fill="rgb(225,55,9)" rx="2" ry="2" />
<text  x="154.18" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="78.3" y="421" width="0.2" height="15.0" fill="rgb(215,146,15)" rx="2" ry="2" />
<text  x="81.27" y="431.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.02%)</title><rect x="1161.3" y="389" width="0.3" height="15.0" fill="rgb(209,148,1)" rx="2" ry="2" />
<text  x="1164.34" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (3 samples, 0.05%)</title><rect x="13.4" y="165" width="0.6" height="15.0" fill="rgb(206,40,24)" rx="2" ry="2" />
<text  x="16.37" y="175.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (1 samples, 0.02%)</title><rect x="11.1" y="309" width="0.2" height="15.0" fill="rgb(250,28,52)" rx="2" ry="2" />
<text  x="14.05" y="319.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.02%)</title><rect x="750.9" y="357" width="0.2" height="15.0" fill="rgb(251,129,49)" rx="2" ry="2" />
<text  x="753.87" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="12.3" y="277" width="0.2" height="15.0" fill="rgb(210,10,15)" rx="2" ry="2" />
<text  x="15.32" y="287.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (2 samples, 0.04%)</title><rect x="421.1" y="341" width="0.4" height="15.0" fill="rgb(205,122,3)" rx="2" ry="2" />
<text  x="424.10" y="351.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.02%)</title><rect x="20.3" y="213" width="0.2" height="15.0" fill="rgb(240,43,2)" rx="2" ry="2" />
<text  x="23.32" y="223.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="204.3" y="293" width="0.2" height="15.0" fill="rgb(240,104,8)" rx="2" ry="2" />
<text  x="207.28" y="303.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="661.1" y="421" width="0.2" height="15.0" fill="rgb(223,224,45)" rx="2" ry="2" />
<text  x="664.11" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (647 samples, 11.55%)</title><rect x="703.9" y="453" width="136.3" height="15.0" fill="rgb(219,76,24)" rx="2" ry="2" />
<text  x="706.88" y="463.5" >seastar::internal..</text>
</g>
<g >
<title>seastar::reactor::do_expire_lowres_timers (1 samples, 0.02%)</title><rect x="1161.3" y="453" width="0.3" height="15.0" fill="rgb(247,155,42)" rx="2" ry="2" />
<text  x="1164.34" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::stats (5 samples, 0.09%)</title><rect x="536.6" y="325" width="1.0" height="15.0" fill="rgb(241,19,12)" rx="2" ry="2" />
<text  x="539.58" y="335.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (1 samples, 0.02%)</title><rect x="68.6" y="437" width="0.2" height="15.0" fill="rgb(224,16,30)" rx="2" ry="2" />
<text  x="71.58" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.02%)</title><rect x="844.2" y="245" width="0.2" height="15.0" fill="rgb(225,133,7)" rx="2" ry="2" />
<text  x="847.22" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="556.6" y="293" width="0.2" height="15.0" fill="rgb(240,193,25)" rx="2" ry="2" />
<text  x="559.59" y="303.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (33 samples, 0.59%)</title><rect x="909.5" y="325" width="7.0" height="15.0" fill="rgb(221,178,14)" rx="2" ry="2" />
<text  x="912.54" y="335.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (10 samples, 0.18%)</title><rect x="529.6" y="309" width="2.1" height="15.0" fill="rgb(252,65,31)" rx="2" ry="2" />
<text  x="532.62" y="319.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (35 samples, 0.62%)</title><rect x="524.4" y="341" width="7.3" height="15.0" fill="rgb(222,166,2)" rx="2" ry="2" />
<text  x="527.35" y="351.5" ></text>
</g>
<g >
<title>database::query (2 samples, 0.04%)</title><rect x="1003.1" y="245" width="0.4" height="15.0" fill="rgb(236,134,28)" rx="2" ry="2" />
<text  x="1006.10" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.04%)</title><rect x="21.8" y="293" width="0.4" height="15.0" fill="rgb(213,7,49)" rx="2" ry="2" />
<text  x="24.80" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="895.8" y="261" width="0.3" height="15.0" fill="rgb(247,86,50)" rx="2" ry="2" />
<text  x="898.84" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.11%)</title><rect x="922.4" y="341" width="1.3" height="15.0" fill="rgb(240,200,8)" rx="2" ry="2" />
<text  x="925.39" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="588.6" y="357" width="0.2" height="15.0" fill="rgb(223,104,15)" rx="2" ry="2" />
<text  x="591.62" y="367.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (10 samples, 0.18%)</title><rect x="98.9" y="389" width="2.1" height="15.0" fill="rgb(206,138,0)" rx="2" ry="2" />
<text  x="101.92" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (63 samples, 1.12%)</title><rect x="1025.9" y="213" width="13.2" height="15.0" fill="rgb(219,190,25)" rx="2" ry="2" />
<text  x="1028.85" y="223.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.29%)</title><rect x="966.2" y="309" width="3.4" height="15.0" fill="rgb(251,16,43)" rx="2" ry="2" />
<text  x="969.22" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (756 samples, 13.50%)</title><rect x="160.4" y="389" width="159.4" height="15.0" fill="rgb(252,199,48)" rx="2" ry="2" />
<text  x="163.45" y="399.5" >flat_mutation_reader..</text>
</g>
<g >
<title>operator new (9 samples, 0.16%)</title><rect x="369.1" y="357" width="1.9" height="15.0" fill="rgb(248,109,46)" rx="2" ry="2" />
<text  x="372.06" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.04%)</title><rect x="18.0" y="229" width="0.4" height="15.0" fill="rgb(212,67,47)" rx="2" ry="2" />
<text  x="21.01" y="239.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (3 samples, 0.05%)</title><rect x="10.8" y="357" width="0.7" height="15.0" fill="rgb(241,58,1)" rx="2" ry="2" />
<text  x="13.84" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="17.2" y="165" width="0.2" height="15.0" fill="rgb(252,198,46)" rx="2" ry="2" />
<text  x="20.16" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.04%)</title><rect x="898.2" y="309" width="0.4" height="15.0" fill="rgb(209,79,54)" rx="2" ry="2" />
<text  x="901.16" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="1123.8" y="357" width="0.5" height="15.0" fill="rgb(221,197,32)" rx="2" ry="2" />
<text  x="1126.84" y="367.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (66 samples, 1.18%)</title><rect x="10.4" y="437" width="13.9" height="15.0" fill="rgb(240,156,8)" rx="2" ry="2" />
<text  x="13.42" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (7 samples, 0.12%)</title><rect x="648.9" y="437" width="1.5" height="15.0" fill="rgb(236,151,42)" rx="2" ry="2" />
<text  x="651.89" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.02%)</title><rect x="137.3" y="405" width="0.2" height="15.0" fill="rgb(211,177,27)" rx="2" ry="2" />
<text  x="140.27" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (40 samples, 0.71%)</title><rect x="888.0" y="277" width="8.5" height="15.0" fill="rgb(212,160,9)" rx="2" ry="2" />
<text  x="891.05" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (68 samples, 1.21%)</title><rect x="10.0" y="501" width="14.3" height="15.0" fill="rgb(212,201,13)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (1 samples, 0.02%)</title><rect x="10.0" y="453" width="0.2" height="15.0" fill="rgb(231,109,20)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="467.5" y="341" width="0.2" height="15.0" fill="rgb(241,229,53)" rx="2" ry="2" />
<text  x="470.46" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="19.5" y="133" width="0.2" height="15.0" fill="rgb(220,129,32)" rx="2" ry="2" />
<text  x="22.48" y="143.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (7 samples, 0.12%)</title><rect x="844.4" y="405" width="1.5" height="15.0" fill="rgb(241,70,25)" rx="2" ry="2" />
<text  x="847.43" y="415.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (11 samples, 0.20%)</title><rect x="334.3" y="373" width="2.3" height="15.0" fill="rgb(251,226,36)" rx="2" ry="2" />
<text  x="337.29" y="383.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="866.6" y="373" width="0.2" height="15.0" fill="rgb(253,60,39)" rx="2" ry="2" />
<text  x="869.55" y="383.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.02%)</title><rect x="755.3" y="373" width="0.2" height="15.0" fill="rgb(247,4,35)" rx="2" ry="2" />
<text  x="758.30" y="383.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (94 samples, 1.68%)</title><rect x="448.1" y="373" width="19.8" height="15.0" fill="rgb(251,97,38)" rx="2" ry="2" />
<text  x="451.07" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (7 samples, 0.12%)</title><rect x="647.4" y="437" width="1.5" height="15.0" fill="rgb(215,217,6)" rx="2" ry="2" />
<text  x="650.41" y="447.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.32%)</title><rect x="470.0" y="357" width="3.8" height="15.0" fill="rgb(219,58,32)" rx="2" ry="2" />
<text  x="472.99" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (125 samples, 2.23%)</title><rect x="624.0" y="453" width="26.4" height="15.0" fill="rgb(249,175,36)" rx="2" ry="2" />
<text  x="627.02" y="463.5" >s..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.09%)</title><rect x="642.1" y="421" width="1.1" height="15.0" fill="rgb(235,74,34)" rx="2" ry="2" />
<text  x="645.14" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.02%)</title><rect x="445.3" y="389" width="0.2" height="15.0" fill="rgb(233,222,9)" rx="2" ry="2" />
<text  x="448.34" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (5,357 samples, 95.66%)</title><rect x="33.2" y="485" width="1128.8" height="15.0" fill="rgb(251,25,24)" rx="2" ry="2" />
<text  x="36.18" y="495.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>operator new (10 samples, 0.18%)</title><rect x="771.7" y="357" width="2.1" height="15.0" fill="rgb(216,14,16)" rx="2" ry="2" />
<text  x="774.73" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="17.4" y="261" width="0.2" height="15.0" fill="rgb(226,182,31)" rx="2" ry="2" />
<text  x="20.38" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="60.1" y="421" width="0.3" height="15.0" fill="rgb(218,215,47)" rx="2" ry="2" />
<text  x="63.15" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.04%)</title><rect x="18.0" y="181" width="0.4" height="15.0" fill="rgb(220,221,4)" rx="2" ry="2" />
<text  x="21.01" y="191.5" ></text>
</g>
<g >
<title>gms::gossiper::run (1 samples, 0.02%)</title><rect x="1161.3" y="341" width="0.3" height="15.0" fill="rgb(208,146,31)" rx="2" ry="2" />
<text  x="1164.34" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.12%)</title><rect x="593.9" y="357" width="1.5" height="15.0" fill="rgb(245,7,44)" rx="2" ry="2" />
<text  x="596.89" y="367.5" ></text>
</g>
<g >
<title>do_cql_test (68 samples, 1.21%)</title><rect x="10.0" y="485" width="14.3" height="15.0" fill="rgb(254,63,41)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (55 samples, 0.98%)</title><rect x="605.3" y="453" width="11.6" height="15.0" fill="rgb(217,215,30)" rx="2" ry="2" />
<text  x="608.27" y="463.5" ></text>
</g>
<g >
<title>fmt::v7::formatter&lt;fmt::v7::basic_string_view&lt;char&gt;, char, void&gt;::format&lt;fmt::v7::basic_format_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (1 samples, 0.02%)</title><rect x="33.0" y="533" width="0.2" height="15.0" fill="rgb(231,176,53)" rx="2" ry="2" />
<text  x="35.97" y="543.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (2 samples, 0.04%)</title><rect x="225.6" y="245" width="0.4" height="15.0" fill="rgb(220,152,49)" rx="2" ry="2" />
<text  x="228.56" y="255.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="585.0" y="309" width="0.7" height="15.0" fill="rgb(222,45,19)" rx="2" ry="2" />
<text  x="588.04" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="319.8" y="389" width="0.4" height="15.0" fill="rgb(240,40,38)" rx="2" ry="2" />
<text  x="322.75" y="399.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.02%)</title><rect x="696.3" y="421" width="0.2" height="15.0" fill="rgb(239,10,48)" rx="2" ry="2" />
<text  x="699.30" y="431.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.09%)</title><rect x="818.3" y="373" width="1.1" height="15.0" fill="rgb(210,67,19)" rx="2" ry="2" />
<text  x="821.30" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="21.0" y="165" width="0.2" height="15.0" fill="rgb(240,31,26)" rx="2" ry="2" />
<text  x="23.96" y="175.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (6 samples, 0.11%)</title><rect x="1035.3" y="165" width="1.3" height="15.0" fill="rgb(222,18,49)" rx="2" ry="2" />
<text  x="1038.34" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.04%)</title><rect x="1044.4" y="245" width="0.4" height="15.0" fill="rgb(240,132,49)" rx="2" ry="2" />
<text  x="1047.40" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="17.8" y="101" width="0.2" height="15.0" fill="rgb(205,178,26)" rx="2" ry="2" />
<text  x="20.80" y="111.5" ></text>
</g>
<g >
<title>row::external_memory_usage (40 samples, 0.71%)</title><rect x="241.8" y="245" width="8.4" height="15.0" fill="rgb(238,52,24)" rx="2" ry="2" />
<text  x="244.79" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.04%)</title><rect x="13.4" y="149" width="0.4" height="15.0" fill="rgb(215,224,34)" rx="2" ry="2" />
<text  x="16.37" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.07%)</title><rect x="310.5" y="325" width="0.8" height="15.0" fill="rgb(206,2,9)" rx="2" ry="2" />
<text  x="313.48" y="335.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.02%)</title><rect x="297.4" y="277" width="0.2" height="15.0" fill="rgb(224,35,32)" rx="2" ry="2" />
<text  x="300.41" y="287.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (1 samples, 0.02%)</title><rect x="448.1" y="357" width="0.2" height="15.0" fill="rgb(211,124,41)" rx="2" ry="2" />
<text  x="451.07" y="367.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (2 samples, 0.04%)</title><rect x="836.2" y="421" width="0.4" height="15.0" fill="rgb(218,159,54)" rx="2" ry="2" />
<text  x="839.21" y="431.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.23%)</title><rect x="52.4" y="421" width="2.7" height="15.0" fill="rgb(215,197,30)" rx="2" ry="2" />
<text  x="55.35" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (1 samples, 0.02%)</title><rect x="1124.0" y="197" width="0.3" height="15.0" fill="rgb(213,63,8)" rx="2" ry="2" />
<text  x="1127.05" y="207.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.05%)</title><rect x="946.2" y="341" width="0.6" height="15.0" fill="rgb(251,215,3)" rx="2" ry="2" />
<text  x="949.20" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (25 samples, 0.45%)</title><rect x="179.4" y="325" width="5.3" height="15.0" fill="rgb(224,57,18)" rx="2" ry="2" />
<text  x="182.41" y="335.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.02%)</title><rect x="844.2" y="261" width="0.2" height="15.0" fill="rgb(217,204,39)" rx="2" ry="2" />
<text  x="847.22" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="690.4" y="437" width="0.4" height="15.0" fill="rgb(239,24,43)" rx="2" ry="2" />
<text  x="693.40" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.04%)</title><rect x="17.2" y="309" width="0.4" height="15.0" fill="rgb(224,224,38)" rx="2" ry="2" />
<text  x="20.16" y="319.5" ></text>
</g>
<g >
<title>seastar::schedule (2 samples, 0.04%)</title><rect x="1125.7" y="453" width="0.5" height="15.0" fill="rgb(252,217,2)" rx="2" ry="2" />
<text  x="1128.73" y="463.5" ></text>
</g>
<g >
<title>dht::shard_of (8 samples, 0.14%)</title><rect x="993.8" y="261" width="1.7" height="15.0" fill="rgb(241,56,50)" rx="2" ry="2" />
<text  x="996.83" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (5 samples, 0.09%)</title><rect x="622.8" y="437" width="1.0" height="15.0" fill="rgb(249,56,53)" rx="2" ry="2" />
<text  x="625.76" y="447.5" ></text>
</g>
<g >
<title>table::make_reader (495 samples, 8.84%)</title><rect x="485.4" y="373" width="104.3" height="15.0" fill="rgb(208,215,41)" rx="2" ry="2" />
<text  x="488.37" y="383.5" >table::make_..</text>
</g>
<g >
<title>memtable::apply (6 samples, 0.11%)</title><rect x="1122.6" y="325" width="1.2" height="15.0" fill="rgb(226,59,11)" rx="2" ry="2" />
<text  x="1125.57" y="335.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="865.1" y="373" width="0.2" height="15.0" fill="rgb(247,132,41)" rx="2" ry="2" />
<text  x="868.08" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (2 samples, 0.04%)</title><rect x="983.3" y="293" width="0.4" height="15.0" fill="rgb(234,85,49)" rx="2" ry="2" />
<text  x="986.29" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.02%)</title><rect x="68.6" y="373" width="0.2" height="15.0" fill="rgb(236,113,42)" rx="2" ry="2" />
<text  x="71.58" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (1 samples, 0.02%)</title><rect x="467.7" y="357" width="0.2" height="15.0" fill="rgb(237,43,40)" rx="2" ry="2" />
<text  x="470.67" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (303 samples, 5.41%)</title><rect x="755.5" y="389" width="63.9" height="15.0" fill="rgb(237,20,32)" rx="2" ry="2" />
<text  x="758.51" y="399.5" >cql3::s..</text>
</g>
<g >
<title>dht::tri_compare (16 samples, 0.29%)</title><rect x="525.2" y="325" width="3.4" height="15.0" fill="rgb(214,116,21)" rx="2" ry="2" />
<text  x="528.20" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.11%)</title><rect x="612.9" y="437" width="1.2" height="15.0" fill="rgb(206,68,12)" rx="2" ry="2" />
<text  x="615.85" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.62%)</title><rect x="1005.2" y="229" width="7.4" height="15.0" fill="rgb(219,204,21)" rx="2" ry="2" />
<text  x="1008.20" y="239.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.02%)</title><rect x="864.9" y="373" width="0.2" height="15.0" fill="rgb(227,132,31)" rx="2" ry="2" />
<text  x="867.87" y="383.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.02%)</title><rect x="32.5" y="501" width="0.3" height="15.0" fill="rgb(218,22,10)" rx="2" ry="2" />
<text  x="35.55" y="511.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (4 samples, 0.07%)</title><rect x="540.8" y="325" width="0.8" height="15.0" fill="rgb(231,160,38)" rx="2" ry="2" />
<text  x="543.79" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.04%)</title><rect x="212.3" y="261" width="0.4" height="15.0" fill="rgb(223,134,22)" rx="2" ry="2" />
<text  x="215.29" y="271.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (11 samples, 0.20%)</title><rect x="881.3" y="293" width="2.3" height="15.0" fill="rgb(213,63,28)" rx="2" ry="2" />
<text  x="884.30" y="303.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (1 samples, 0.02%)</title><rect x="10.4" y="373" width="0.2" height="15.0" fill="rgb(250,15,26)" rx="2" ry="2" />
<text  x="13.42" y="383.5" ></text>
</g>
<g >
<title>row::apply (1 samples, 0.02%)</title><rect x="844.9" y="293" width="0.2" height="15.0" fill="rgb(251,49,34)" rx="2" ry="2" />
<text  x="847.85" y="303.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (12 samples, 0.21%)</title><rect x="878.8" y="293" width="2.5" height="15.0" fill="rgb(252,10,32)" rx="2" ry="2" />
<text  x="881.77" y="303.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="241.4" y="245" width="0.4" height="15.0" fill="rgb(234,81,39)" rx="2" ry="2" />
<text  x="244.36" y="255.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.09%)</title><rect x="695.0" y="421" width="1.1" height="15.0" fill="rgb(249,119,13)" rx="2" ry="2" />
<text  x="698.03" y="431.5" ></text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.02%)</title><rect x="951.0" y="325" width="0.3" height="15.0" fill="rgb(237,44,27)" rx="2" ry="2" />
<text  x="954.05" y="335.5" ></text>
</g>
<g >
<title>posix_memalign (22 samples, 0.39%)</title><rect x="282.5" y="181" width="4.6" height="15.0" fill="rgb(216,103,47)" rx="2" ry="2" />
<text  x="285.45" y="191.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="22.0" y="261" width="0.2" height="15.0" fill="rgb(218,209,42)" rx="2" ry="2" />
<text  x="25.01" y="271.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (75 samples, 1.34%)</title><rect x="1164.9" y="581" width="15.8" height="15.0" fill="rgb(217,210,11)" rx="2" ry="2" />
<text  x="1167.92" y="591.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.02%)</title><rect x="677.5" y="437" width="0.3" height="15.0" fill="rgb(216,49,18)" rx="2" ry="2" />
<text  x="680.54" y="447.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="688.7" y="437" width="0.2" height="15.0" fill="rgb(222,145,10)" rx="2" ry="2" />
<text  x="691.71" y="447.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.02%)</title><rect x="15.5" y="197" width="0.2" height="15.0" fill="rgb(209,141,36)" rx="2" ry="2" />
<text  x="18.48" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_lower_bound (1 samples, 0.02%)</title><rect x="15.9" y="245" width="0.2" height="15.0" fill="rgb(230,22,28)" rx="2" ry="2" />
<text  x="18.90" y="255.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.04%)</title><rect x="17.2" y="277" width="0.4" height="15.0" fill="rgb(216,153,24)" rx="2" ry="2" />
<text  x="20.16" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.02%)</title><rect x="638.8" y="389" width="0.2" height="15.0" fill="rgb(230,29,12)" rx="2" ry="2" />
<text  x="641.77" y="399.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.04%)</title><rect x="297.0" y="277" width="0.4" height="15.0" fill="rgb(220,205,22)" rx="2" ry="2" />
<text  x="299.99" y="287.5" ></text>
</g>
<g >
<title>partition_entry::apply (2 samples, 0.04%)</title><rect x="1123.4" y="309" width="0.4" height="15.0" fill="rgb(242,127,5)" rx="2" ry="2" />
<text  x="1126.41" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="723.7" y="421" width="0.2" height="15.0" fill="rgb(246,122,26)" rx="2" ry="2" />
<text  x="726.69" y="431.5" ></text>
</g>
<g >
<title>perf_simple_que (5,600 samples, 100.00%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(242,18,19)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >perf_simple_que</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.04%)</title><rect x="639.6" y="389" width="0.4" height="15.0" fill="rgb(244,59,47)" rx="2" ry="2" />
<text  x="642.61" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.02%)</title><rect x="22.4" y="133" width="0.2" height="15.0" fill="rgb(213,44,49)" rx="2" ry="2" />
<text  x="25.43" y="143.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.16%)</title><rect x="542.1" y="325" width="1.9" height="15.0" fill="rgb(245,28,40)" rx="2" ry="2" />
<text  x="545.05" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.02%)</title><rect x="619.2" y="437" width="0.2" height="15.0" fill="rgb(224,185,35)" rx="2" ry="2" />
<text  x="622.17" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.02%)</title><rect x="582.5" y="325" width="0.2" height="15.0" fill="rgb(242,79,53)" rx="2" ry="2" />
<text  x="585.51" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (4 samples, 0.07%)</title><rect x="219.7" y="261" width="0.8" height="15.0" fill="rgb(227,135,26)" rx="2" ry="2" />
<text  x="222.66" y="271.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.02%)</title><rect x="21.0" y="213" width="0.2" height="15.0" fill="rgb(242,105,17)" rx="2" ry="2" />
<text  x="23.96" y="223.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (6 samples, 0.11%)</title><rect x="451.9" y="341" width="1.2" height="15.0" fill="rgb(241,63,28)" rx="2" ry="2" />
<text  x="454.87" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.21%)</title><rect x="721.2" y="405" width="2.5" height="15.0" fill="rgb(214,207,35)" rx="2" ry="2" />
<text  x="724.16" y="415.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (1 samples, 0.02%)</title><rect x="1123.2" y="309" width="0.2" height="15.0" fill="rgb(213,67,10)" rx="2" ry="2" />
<text  x="1126.20" y="319.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.02%)</title><rect x="68.6" y="421" width="0.2" height="15.0" fill="rgb(240,130,41)" rx="2" ry="2" />
<text  x="71.58" y="431.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.02%)</title><rect x="307.7" y="261" width="0.2" height="15.0" fill="rgb(223,58,16)" rx="2" ry="2" />
<text  x="310.74" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (3 samples, 0.05%)</title><rect x="844.4" y="309" width="0.7" height="15.0" fill="rgb(235,66,40)" rx="2" ry="2" />
<text  x="847.43" y="319.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.02%)</title><rect x="1161.1" y="453" width="0.2" height="15.0" fill="rgb(235,140,2)" rx="2" ry="2" />
<text  x="1164.13" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (2 samples, 0.04%)</title><rect x="634.1" y="421" width="0.5" height="15.0" fill="rgb(218,176,17)" rx="2" ry="2" />
<text  x="637.14" y="431.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.02%)</title><rect x="20.7" y="197" width="0.3" height="15.0" fill="rgb(240,57,6)" rx="2" ry="2" />
<text  x="23.75" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.04%)</title><rect x="444.5" y="373" width="0.4" height="15.0" fill="rgb(245,100,15)" rx="2" ry="2" />
<text  x="447.49" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.07%)</title><rect x="142.5" y="389" width="0.9" height="15.0" fill="rgb(228,178,22)" rx="2" ry="2" />
<text  x="145.54" y="399.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="536.4" y="325" width="0.2" height="15.0" fill="rgb(234,208,13)" rx="2" ry="2" />
<text  x="539.36" y="335.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit&lt;seastar::syscall_result_extra&lt;stat&gt; &gt; (1 samples, 0.02%)</title><rect x="661.5" y="405" width="0.2" height="15.0" fill="rgb(222,1,21)" rx="2" ry="2" />
<text  x="664.53" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.02%)</title><rect x="16.7" y="309" width="0.3" height="15.0" fill="rgb(229,70,9)" rx="2" ry="2" />
<text  x="19.74" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.09%)</title><rect x="889.9" y="261" width="1.1" height="15.0" fill="rgb(238,28,2)" rx="2" ry="2" />
<text  x="892.94" y="271.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.02%)</title><rect x="24.3" y="469" width="0.2" height="15.0" fill="rgb(221,172,53)" rx="2" ry="2" />
<text  x="27.33" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.05%)</title><rect x="657.9" y="421" width="0.7" height="15.0" fill="rgb(208,173,33)" rx="2" ry="2" />
<text  x="660.95" y="431.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (753 samples, 13.45%)</title><rect x="161.1" y="373" width="158.7" height="15.0" fill="rgb(220,15,52)" rx="2" ry="2" />
<text  x="164.08" y="383.5" >merging_reader&lt;mutat..</text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="66.0" y="437" width="1.1" height="15.0" fill="rgb(218,9,36)" rx="2" ry="2" />
<text  x="69.05" y="447.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.09%)</title><rect x="503.3" y="325" width="1.0" height="15.0" fill="rgb(252,216,32)" rx="2" ry="2" />
<text  x="506.28" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="19.1" y="245" width="0.2" height="15.0" fill="rgb(249,224,4)" rx="2" ry="2" />
<text  x="22.06" y="255.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (16 samples, 0.29%)</title><rect x="1151.0" y="421" width="3.4" height="15.0" fill="rgb(235,60,39)" rx="2" ry="2" />
<text  x="1154.02" y="431.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.02%)</title><rect x="13.8" y="101" width="0.2" height="15.0" fill="rgb(241,135,5)" rx="2" ry="2" />
<text  x="16.79" y="111.5" ></text>
</g>
<g >
<title>__strlen_avx2 (8 samples, 0.14%)</title><rect x="1020.6" y="213" width="1.7" height="15.0" fill="rgb(232,150,42)" rx="2" ry="2" />
<text  x="1023.59" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (28 samples, 0.50%)</title><rect x="265.4" y="213" width="5.9" height="15.0" fill="rgb(248,85,48)" rx="2" ry="2" />
<text  x="268.39" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="22.0" y="277" width="0.2" height="15.0" fill="rgb(244,107,2)" rx="2" ry="2" />
<text  x="25.01" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.02%)</title><rect x="646.8" y="437" width="0.2" height="15.0" fill="rgb(251,69,10)" rx="2" ry="2" />
<text  x="649.78" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.02%)</title><rect x="20.7" y="165" width="0.3" height="15.0" fill="rgb(233,179,18)" rx="2" ry="2" />
<text  x="23.75" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.04%)</title><rect x="443.4" y="357" width="0.5" height="15.0" fill="rgb(206,222,12)" rx="2" ry="2" />
<text  x="446.44" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="15.3" y="229" width="0.6" height="15.0" fill="rgb(218,19,18)" rx="2" ry="2" />
<text  x="18.27" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (5 samples, 0.09%)</title><rect x="840.4" y="453" width="1.1" height="15.0" fill="rgb(224,125,31)" rx="2" ry="2" />
<text  x="843.42" y="463.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="995.7" y="261" width="0.4" height="15.0" fill="rgb(223,43,13)" rx="2" ry="2" />
<text  x="998.72" y="271.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.02%)</title><rect x="24.3" y="501" width="0.2" height="15.0" fill="rgb(237,103,12)" rx="2" ry="2" />
<text  x="27.33" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="21.2" y="181" width="0.2" height="15.0" fill="rgb(246,86,13)" rx="2" ry="2" />
<text  x="24.17" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (60 samples, 1.07%)</title><rect x="430.4" y="341" width="12.6" height="15.0" fill="rgb(213,145,52)" rx="2" ry="2" />
<text  x="433.38" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="10.4" y="357" width="0.2" height="15.0" fill="rgb(210,110,33)" rx="2" ry="2" />
<text  x="13.42" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.04%)</title><rect x="710.0" y="437" width="0.4" height="15.0" fill="rgb(237,227,50)" rx="2" ry="2" />
<text  x="712.99" y="447.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (8 samples, 0.14%)</title><rect x="586.5" y="325" width="1.7" height="15.0" fill="rgb(205,134,23)" rx="2" ry="2" />
<text  x="589.51" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="1037.9" y="181" width="0.2" height="15.0" fill="rgb(205,150,18)" rx="2" ry="2" />
<text  x="1040.86" y="191.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1161.3" y="277" width="0.3" height="15.0" fill="rgb(206,8,48)" rx="2" ry="2" />
<text  x="1164.34" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.09%)</title><rect x="1148.9" y="437" width="1.1" height="15.0" fill="rgb(237,129,45)" rx="2" ry="2" />
<text  x="1151.91" y="447.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (65 samples, 1.16%)</title><rect x="10.4" y="421" width="13.7" height="15.0" fill="rgb(245,199,37)" rx="2" ry="2" />
<text  x="13.42" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.02%)</title><rect x="20.3" y="229" width="0.2" height="15.0" fill="rgb(242,157,20)" rx="2" ry="2" />
<text  x="23.32" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (4 samples, 0.07%)</title><rect x="660.5" y="437" width="0.8" height="15.0" fill="rgb(209,66,41)" rx="2" ry="2" />
<text  x="663.48" y="447.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.29%)</title><rect x="311.3" y="341" width="3.4" height="15.0" fill="rgb(232,167,51)" rx="2" ry="2" />
<text  x="314.32" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="502.4" y="325" width="0.5" height="15.0" fill="rgb(212,25,32)" rx="2" ry="2" />
<text  x="505.44" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="21.4" y="149" width="0.2" height="15.0" fill="rgb(252,149,35)" rx="2" ry="2" />
<text  x="24.38" y="159.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (24 samples, 0.43%)</title><rect x="925.6" y="373" width="5.0" height="15.0" fill="rgb(234,101,31)" rx="2" ry="2" />
<text  x="928.55" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="32.8" y="485" width="0.2" height="15.0" fill="rgb(249,223,53)" rx="2" ry="2" />
<text  x="35.76" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (20 samples, 0.36%)</title><rect x="282.9" y="165" width="4.2" height="15.0" fill="rgb(228,184,42)" rx="2" ry="2" />
<text  x="285.88" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.02%)</title><rect x="19.5" y="229" width="0.2" height="15.0" fill="rgb(251,57,16)" rx="2" ry="2" />
<text  x="22.48" y="239.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (16 samples, 0.29%)</title><rect x="29.0" y="533" width="3.3" height="15.0" fill="rgb(224,116,20)" rx="2" ry="2" />
<text  x="31.96" y="543.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.02%)</title><rect x="204.1" y="293" width="0.2" height="15.0" fill="rgb(246,173,45)" rx="2" ry="2" />
<text  x="207.07" y="303.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (570 samples, 10.18%)</title><rect x="324.8" y="389" width="120.1" height="15.0" fill="rgb(219,53,26)" rx="2" ry="2" />
<text  x="327.81" y="399.5" >query::consume..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.05%)</title><rect x="801.0" y="293" width="0.7" height="15.0" fill="rgb(231,168,16)" rx="2" ry="2" />
<text  x="804.02" y="303.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (28 samples, 0.50%)</title><rect x="793.9" y="293" width="5.9" height="15.0" fill="rgb(211,96,36)" rx="2" ry="2" />
<text  x="796.86" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.07%)</title><rect x="59.3" y="389" width="0.8" height="15.0" fill="rgb(253,154,34)" rx="2" ry="2" />
<text  x="62.31" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.02%)</title><rect x="1149.8" y="421" width="0.2" height="15.0" fill="rgb(240,167,18)" rx="2" ry="2" />
<text  x="1152.75" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="22.4" y="261" width="0.2" height="15.0" fill="rgb(246,54,16)" rx="2" ry="2" />
<text  x="25.43" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.02%)</title><rect x="473.8" y="357" width="0.2" height="15.0" fill="rgb(243,183,35)" rx="2" ry="2" />
<text  x="476.78" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_deallocate_node (1 samples, 0.02%)</title><rect x="12.1" y="277" width="0.2" height="15.0" fill="rgb(231,138,11)" rx="2" ry="2" />
<text  x="15.11" y="287.5" ></text>
</g>
<g >
<title>posix_memalign (8 samples, 0.14%)</title><rect x="290.0" y="197" width="1.7" height="15.0" fill="rgb(237,73,40)" rx="2" ry="2" />
<text  x="293.04" y="207.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.12%)</title><rect x="809.0" y="341" width="1.5" height="15.0" fill="rgb(230,82,42)" rx="2" ry="2" />
<text  x="812.03" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (18 samples, 0.32%)</title><rect x="12.5" y="341" width="3.8" height="15.0" fill="rgb(206,92,51)" rx="2" ry="2" />
<text  x="15.53" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.02%)</title><rect x="97.9" y="389" width="0.2" height="15.0" fill="rgb(238,115,51)" rx="2" ry="2" />
<text  x="100.87" y="399.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.29%)</title><rect x="1143.6" y="437" width="3.4" height="15.0" fill="rgb(246,53,8)" rx="2" ry="2" />
<text  x="1146.64" y="447.5" ></text>
</g>
<g >
<title>dht::tri_compare (4 samples, 0.07%)</title><rect x="1083.4" y="245" width="0.8" height="15.0" fill="rgb(227,132,33)" rx="2" ry="2" />
<text  x="1086.38" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.05%)</title><rect x="492.1" y="357" width="0.6" height="15.0" fill="rgb(247,122,17)" rx="2" ry="2" />
<text  x="495.11" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="11.3" y="325" width="0.2" height="15.0" fill="rgb(227,216,5)" rx="2" ry="2" />
<text  x="14.26" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.09%)</title><rect x="722.6" y="389" width="1.1" height="15.0" fill="rgb(251,228,39)" rx="2" ry="2" />
<text  x="725.64" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (15 samples, 0.27%)</title><rect x="12.7" y="277" width="3.2" height="15.0" fill="rgb(246,75,26)" rx="2" ry="2" />
<text  x="15.74" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (2 samples, 0.04%)</title><rect x="1108.2" y="357" width="0.5" height="15.0" fill="rgb(213,181,37)" rx="2" ry="2" />
<text  x="1111.24" y="367.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="804.0" y="309" width="0.2" height="15.0" fill="rgb(234,163,48)" rx="2" ry="2" />
<text  x="806.97" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.02%)</title><rect x="18.4" y="293" width="0.2" height="15.0" fill="rgb(210,110,49)" rx="2" ry="2" />
<text  x="21.43" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.09%)</title><rect x="152.4" y="405" width="1.1" height="15.0" fill="rgb(252,142,32)" rx="2" ry="2" />
<text  x="155.44" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="1124.0" y="181" width="0.3" height="15.0" fill="rgb(250,192,41)" rx="2" ry="2" />
<text  x="1127.05" y="191.5" ></text>
</g>
<g >
<title>row::row (198 samples, 3.54%)</title><rect x="250.2" y="245" width="41.7" height="15.0" fill="rgb(246,132,45)" rx="2" ry="2" />
<text  x="253.21" y="255.5" >row..</text>
</g>
<g >
<title>service::client_state::has_column_family_access (1 samples, 0.02%)</title><rect x="24.1" y="405" width="0.2" height="15.0" fill="rgb(214,148,49)" rx="2" ry="2" />
<text  x="27.12" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (1 samples, 0.02%)</title><rect x="12.1" y="373" width="0.2" height="15.0" fill="rgb(254,32,2)" rx="2" ry="2" />
<text  x="15.11" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.02%)</title><rect x="21.4" y="53" width="0.2" height="15.0" fill="rgb(216,95,35)" rx="2" ry="2" />
<text  x="24.38" y="63.5" ></text>
</g>
<g >
<title>service::client_state::has_access (154 samples, 2.75%)</title><rect x="773.8" y="357" width="32.5" height="15.0" fill="rgb(226,69,48)" rx="2" ry="2" />
<text  x="776.84" y="367.5" >se..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.02%)</title><rect x="723.9" y="421" width="0.2" height="15.0" fill="rgb(242,193,32)" rx="2" ry="2" />
<text  x="726.90" y="431.5" ></text>
</g>
<g >
<title>mutation_partition::apply_monotonically (1 samples, 0.02%)</title><rect x="1123.4" y="293" width="0.2" height="15.0" fill="rgb(223,204,32)" rx="2" ry="2" />
<text  x="1126.41" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="22.4" y="69" width="0.2" height="15.0" fill="rgb(235,205,36)" rx="2" ry="2" />
<text  x="25.43" y="79.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.02%)</title><rect x="1162.2" y="485" width="0.2" height="15.0" fill="rgb(246,219,32)" rx="2" ry="2" />
<text  x="1165.19" y="495.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="15.3" y="197" width="0.2" height="15.0" fill="rgb(226,25,39)" rx="2" ry="2" />
<text  x="18.27" y="207.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (2 samples, 0.04%)</title><rect x="601.3" y="421" width="0.4" height="15.0" fill="rgb(208,176,51)" rx="2" ry="2" />
<text  x="604.26" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="981.6" y="293" width="0.2" height="15.0" fill="rgb(207,166,10)" rx="2" ry="2" />
<text  x="984.60" y="303.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.39%)</title><rect x="320.2" y="389" width="4.6" height="15.0" fill="rgb(244,73,27)" rx="2" ry="2" />
<text  x="323.17" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (8 samples, 0.14%)</title><rect x="49.6" y="437" width="1.7" height="15.0" fill="rgb(249,7,40)" rx="2" ry="2" />
<text  x="52.61" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::syscall_pollfn::poll (1 samples, 0.02%)</title><rect x="1161.6" y="453" width="0.2" height="15.0" fill="rgb(205,122,17)" rx="2" ry="2" />
<text  x="1164.55" y="463.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.04%)</title><rect x="11.5" y="389" width="0.4" height="15.0" fill="rgb(254,80,49)" rx="2" ry="2" />
<text  x="14.47" y="399.5" ></text>
</g>
<g >
<title>database::add_column_family_and_make_directory (1 samples, 0.02%)</title><rect x="68.4" y="309" width="0.2" height="15.0" fill="rgb(219,107,41)" rx="2" ry="2" />
<text  x="71.37" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (8 samples, 0.14%)</title><rect x="1041.0" y="197" width="1.7" height="15.0" fill="rgb(243,120,7)" rx="2" ry="2" />
<text  x="1044.03" y="207.5" ></text>
</g>
<g >
<title>database::query (24 samples, 0.43%)</title><rect x="63.3" y="453" width="5.1" height="15.0" fill="rgb(217,132,21)" rx="2" ry="2" />
<text  x="66.31" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.02%)</title><rect x="17.4" y="213" width="0.2" height="15.0" fill="rgb(240,31,38)" rx="2" ry="2" />
<text  x="20.38" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.02%)</title><rect x="308.4" y="309" width="0.2" height="15.0" fill="rgb(247,229,23)" rx="2" ry="2" />
<text  x="311.37" y="319.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (7 samples, 0.12%)</title><rect x="844.4" y="437" width="1.5" height="15.0" fill="rgb(220,26,21)" rx="2" ry="2" />
<text  x="847.43" y="447.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.02%)</title><rect x="946.0" y="341" width="0.2" height="15.0" fill="rgb(243,127,22)" rx="2" ry="2" />
<text  x="948.99" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (66 samples, 1.18%)</title><rect x="629.3" y="437" width="13.9" height="15.0" fill="rgb(212,171,26)" rx="2" ry="2" />
<text  x="632.29" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::get (1 samples, 0.02%)</title><rect x="23.9" y="341" width="0.2" height="15.0" fill="rgb(244,134,32)" rx="2" ry="2" />
<text  x="26.91" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.36%)</title><rect x="1103.4" y="325" width="4.2" height="15.0" fill="rgb(213,202,10)" rx="2" ry="2" />
<text  x="1106.40" y="335.5" ></text>
</g>
<g >
<title>auth::get_permissions (1 samples, 0.02%)</title><rect x="24.1" y="357" width="0.2" height="15.0" fill="rgb(234,170,1)" rx="2" ry="2" />
<text  x="27.12" y="367.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (2 samples, 0.04%)</title><rect x="410.6" y="341" width="0.4" height="15.0" fill="rgb(247,41,25)" rx="2" ry="2" />
<text  x="413.57" y="351.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.05%)</title><rect x="1143.0" y="437" width="0.6" height="15.0" fill="rgb(230,145,8)" rx="2" ry="2" />
<text  x="1146.01" y="447.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (5 samples, 0.09%)</title><rect x="1062.3" y="293" width="1.1" height="15.0" fill="rgb(206,180,30)" rx="2" ry="2" />
<text  x="1065.31" y="303.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.27%)</title><rect x="951.3" y="325" width="3.1" height="15.0" fill="rgb(249,191,2)" rx="2" ry="2" />
<text  x="954.26" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="1123.8" y="325" width="0.5" height="15.0" fill="rgb(217,78,37)" rx="2" ry="2" />
<text  x="1126.84" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (2 samples, 0.04%)</title><rect x="11.5" y="405" width="0.4" height="15.0" fill="rgb(238,94,12)" rx="2" ry="2" />
<text  x="14.47" y="415.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.16%)</title><rect x="669.7" y="437" width="1.9" height="15.0" fill="rgb(224,105,52)" rx="2" ry="2" />
<text  x="672.75" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (1 samples, 0.02%)</title><rect x="1037.9" y="197" width="0.2" height="15.0" fill="rgb(246,129,39)" rx="2" ry="2" />
<text  x="1040.86" y="207.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.02%)</title><rect x="17.4" y="133" width="0.2" height="15.0" fill="rgb(239,151,20)" rx="2" ry="2" />
<text  x="20.38" y="143.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (1 samples, 0.02%)</title><rect x="68.4" y="437" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="71.37" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (3 samples, 0.05%)</title><rect x="13.4" y="181" width="0.6" height="15.0" fill="rgb(228,19,38)" rx="2" ry="2" />
<text  x="16.37" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="924.1" y="357" width="0.2" height="15.0" fill="rgb(245,40,28)" rx="2" ry="2" />
<text  x="927.08" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="844.2" y="437" width="0.2" height="15.0" fill="rgb(242,4,5)" rx="2" ry="2" />
<text  x="847.22" y="447.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.02%)</title><rect x="1063.4" y="293" width="0.2" height="15.0" fill="rgb(212,16,38)" rx="2" ry="2" />
<text  x="1066.36" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.02%)</title><rect x="19.1" y="197" width="0.2" height="15.0" fill="rgb(240,119,18)" rx="2" ry="2" />
<text  x="22.06" y="207.5" ></text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_format_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt; &gt; (1 samples, 0.02%)</title><rect x="33.0" y="549" width="0.2" height="15.0" fill="rgb(213,17,44)" rx="2" ry="2" />
<text  x="35.97" y="559.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (6 samples, 0.11%)</title><rect x="1122.6" y="373" width="1.2" height="15.0" fill="rgb(220,136,22)" rx="2" ry="2" />
<text  x="1125.57" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.02%)</title><rect x="19.5" y="213" width="0.2" height="15.0" fill="rgb(229,23,43)" rx="2" ry="2" />
<text  x="22.48" y="223.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.02%)</title><rect x="641.9" y="421" width="0.2" height="15.0" fill="rgb(236,79,49)" rx="2" ry="2" />
<text  x="644.93" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.04%)</title><rect x="494.0" y="341" width="0.4" height="15.0" fill="rgb(231,199,30)" rx="2" ry="2" />
<text  x="497.01" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.02%)</title><rect x="493.0" y="357" width="0.2" height="15.0" fill="rgb(233,125,46)" rx="2" ry="2" />
<text  x="495.96" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (3 samples, 0.05%)</title><rect x="33.8" y="469" width="0.6" height="15.0" fill="rgb(242,140,2)" rx="2" ry="2" />
<text  x="36.81" y="479.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.21%)</title><rect x="766.0" y="357" width="2.6" height="15.0" fill="rgb(220,221,13)" rx="2" ry="2" />
<text  x="769.04" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (3 samples, 0.05%)</title><rect x="446.4" y="389" width="0.6" height="15.0" fill="rgb(229,188,31)" rx="2" ry="2" />
<text  x="449.39" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.02%)</title><rect x="867.6" y="373" width="0.2" height="15.0" fill="rgb(251,114,22)" rx="2" ry="2" />
<text  x="870.61" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.02%)</title><rect x="533.0" y="341" width="0.2" height="15.0" fill="rgb(251,178,17)" rx="2" ry="2" />
<text  x="535.99" y="351.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit_item (1 samples, 0.02%)</title><rect x="661.5" y="389" width="0.2" height="15.0" fill="rgb(214,165,24)" rx="2" ry="2" />
<text  x="664.53" y="399.5" ></text>
</g>
<g >
<title>reader_permit::mark_used (4 samples, 0.07%)</title><rect x="101.7" y="421" width="0.8" height="15.0" fill="rgb(222,222,51)" rx="2" ry="2" />
<text  x="104.66" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.02%)</title><rect x="21.0" y="117" width="0.2" height="15.0" fill="rgb(226,4,4)" rx="2" ry="2" />
<text  x="23.96" y="127.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="19.1" y="165" width="0.2" height="15.0" fill="rgb(228,17,41)" rx="2" ry="2" />
<text  x="22.06" y="175.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.02%)</title><rect x="21.4" y="197" width="0.2" height="15.0" fill="rgb(246,133,35)" rx="2" ry="2" />
<text  x="24.38" y="207.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="789.9" y="293" width="0.2" height="15.0" fill="rgb(233,45,42)" rx="2" ry="2" />
<text  x="792.85" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="354.3" y="293" width="0.2" height="15.0" fill="rgb(246,13,37)" rx="2" ry="2" />
<text  x="357.31" y="303.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1,330 samples, 23.75%)</title><rect x="844.4" y="453" width="280.3" height="15.0" fill="rgb(244,40,6)" rx="2" ry="2" />
<text  x="847.43" y="463.5" >seastar::lambda_task&lt;seastar::executi..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="830.9" y="373" width="0.5" height="15.0" fill="rgb(234,196,47)" rx="2" ry="2" />
<text  x="833.94" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="293.4" y="261" width="0.2" height="15.0" fill="rgb(224,61,33)" rx="2" ry="2" />
<text  x="296.41" y="271.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.02%)</title><rect x="18.6" y="261" width="0.3" height="15.0" fill="rgb(254,7,33)" rx="2" ry="2" />
<text  x="21.64" y="271.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (10 samples, 0.18%)</title><rect x="411.0" y="357" width="2.1" height="15.0" fill="rgb(231,112,50)" rx="2" ry="2" />
<text  x="413.99" y="367.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.02%)</title><rect x="297.6" y="277" width="0.2" height="15.0" fill="rgb(229,105,5)" rx="2" ry="2" />
<text  x="300.62" y="287.5" ></text>
</g>
<g >
<title>seastar::app_template::run (5,359 samples, 95.70%)</title><rect x="33.2" y="549" width="1129.2" height="15.0" fill="rgb(253,144,40)" rx="2" ry="2" />
<text  x="36.18" y="559.5" >seastar::app_template::run</text>
</g>
<g >
<title>database::do_apply (6 samples, 0.11%)</title><rect x="1122.6" y="389" width="1.2" height="15.0" fill="rgb(227,125,53)" rx="2" ry="2" />
<text  x="1125.57" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.27%)</title><rect x="1022.7" y="197" width="3.2" height="15.0" fill="rgb(213,0,45)" rx="2" ry="2" />
<text  x="1025.69" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (3 samples, 0.05%)</title><rect x="567.3" y="341" width="0.7" height="15.0" fill="rgb(230,130,4)" rx="2" ry="2" />
<text  x="570.34" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.07%)</title><rect x="1147.9" y="437" width="0.8" height="15.0" fill="rgb(246,228,54)" rx="2" ry="2" />
<text  x="1150.86" y="447.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (2 samples, 0.04%)</title><rect x="1004.1" y="245" width="0.5" height="15.0" fill="rgb(239,197,36)" rx="2" ry="2" />
<text  x="1007.15" y="255.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (598 samples, 10.68%)</title><rect x="710.6" y="437" width="126.0" height="15.0" fill="rgb(247,90,11)" rx="2" ry="2" />
<text  x="713.62" y="447.5" >single_node_cql..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.02%)</title><rect x="19.3" y="69" width="0.2" height="15.0" fill="rgb(244,182,2)" rx="2" ry="2" />
<text  x="22.27" y="79.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (2 samples, 0.04%)</title><rect x="891.0" y="261" width="0.4" height="15.0" fill="rgb(235,165,33)" rx="2" ry="2" />
<text  x="894.00" y="271.5" ></text>
</g>
<g >
<title>sstables::make_compaction_strategy (1 samples, 0.02%)</title><rect x="68.4" y="261" width="0.2" height="15.0" fill="rgb(249,185,46)" rx="2" ry="2" />
<text  x="71.37" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.02%)</title><rect x="969.4" y="261" width="0.2" height="15.0" fill="rgb(212,197,39)" rx="2" ry="2" />
<text  x="972.38" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.02%)</title><rect x="792.2" y="293" width="0.2" height="15.0" fill="rgb(254,67,15)" rx="2" ry="2" />
<text  x="795.17" y="303.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1 samples, 0.02%)</title><rect x="24.1" y="341" width="0.2" height="15.0" fill="rgb(245,99,2)" rx="2" ry="2" />
<text  x="27.12" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (4 samples, 0.07%)</title><rect x="478.0" y="389" width="0.8" height="15.0" fill="rgb(234,220,9)" rx="2" ry="2" />
<text  x="481.00" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.02%)</title><rect x="354.3" y="277" width="0.2" height="15.0" fill="rgb(241,160,23)" rx="2" ry="2" />
<text  x="357.31" y="287.5" ></text>
</g>
<g >
<title>std::forward&lt;std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="23.3" y="325" width="0.2" height="15.0" fill="rgb(244,224,25)" rx="2" ry="2" />
<text  x="26.27" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (13 samples, 0.23%)</title><rect x="18.9" y="293" width="2.7" height="15.0" fill="rgb(243,228,18)" rx="2" ry="2" />
<text  x="21.85" y="303.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.11%)</title><rect x="596.2" y="405" width="1.3" height="15.0" fill="rgb(242,33,5)" rx="2" ry="2" />
<text  x="599.21" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (16 samples, 0.29%)</title><rect x="616.9" y="453" width="3.3" height="15.0" fill="rgb(215,141,6)" rx="2" ry="2" />
<text  x="619.86" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="483.9" y="373" width="0.2" height="15.0" fill="rgb(220,11,36)" rx="2" ry="2" />
<text  x="486.90" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (4 samples, 0.07%)</title><rect x="1147.0" y="437" width="0.9" height="15.0" fill="rgb(209,78,28)" rx="2" ry="2" />
<text  x="1150.01" y="447.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.02%)</title><rect x="32.5" y="485" width="0.3" height="15.0" fill="rgb(207,199,26)" rx="2" ry="2" />
<text  x="35.55" y="495.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (2 samples, 0.04%)</title><rect x="855.6" y="389" width="0.4" height="15.0" fill="rgb(248,85,9)" rx="2" ry="2" />
<text  x="858.60" y="399.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.04%)</title><rect x="444.9" y="389" width="0.4" height="15.0" fill="rgb(218,30,52)" rx="2" ry="2" />
<text  x="447.91" y="399.5" ></text>
</g>
<g >
<title>free (4 samples, 0.07%)</title><rect x="363.8" y="325" width="0.8" height="15.0" fill="rgb(209,5,20)" rx="2" ry="2" />
<text  x="366.79" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (68 samples, 1.21%)</title><rect x="10.0" y="517" width="14.3" height="15.0" fill="rgb(233,57,11)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.02%)</title><rect x="17.2" y="245" width="0.2" height="15.0" fill="rgb(238,119,34)" rx="2" ry="2" />
<text  x="20.16" y="255.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="12.1" y="229" width="0.2" height="15.0" fill="rgb(233,45,32)" rx="2" ry="2" />
<text  x="15.11" y="239.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (2 samples, 0.04%)</title><rect x="16.3" y="325" width="0.4" height="15.0" fill="rgb(218,99,0)" rx="2" ry="2" />
<text  x="19.32" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.02%)</title><rect x="22.4" y="181" width="0.2" height="15.0" fill="rgb(217,194,0)" rx="2" ry="2" />
<text  x="25.43" y="191.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.02%)</title><rect x="844.2" y="389" width="0.2" height="15.0" fill="rgb(210,124,6)" rx="2" ry="2" />
<text  x="847.22" y="399.5" ></text>
</g>
<g >
<title>query::querier&lt; (2 samples, 0.04%)</title><rect x="89.2" y="421" width="0.5" height="15.0" fill="rgb(229,158,30)" rx="2" ry="2" />
<text  x="92.23" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.07%)</title><rect x="554.7" y="277" width="0.8" height="15.0" fill="rgb(213,155,4)" rx="2" ry="2" />
<text  x="557.70" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.04%)</title><rect x="1030.1" y="165" width="0.4" height="15.0" fill="rgb(223,173,27)" rx="2" ry="2" />
<text  x="1033.07" y="175.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (55 samples, 0.98%)</title><rect x="12.5" y="357" width="11.6" height="15.0" fill="rgb(223,109,19)" rx="2" ry="2" />
<text  x="15.53" y="367.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.04%)</title><rect x="210.6" y="261" width="0.4" height="15.0" fill="rgb(219,14,11)" rx="2" ry="2" />
<text  x="213.60" y="271.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.02%)</title><rect x="583.6" y="309" width="0.2" height="15.0" fill="rgb(245,105,49)" rx="2" ry="2" />
<text  x="586.56" y="319.5" ></text>
</g>
<g >
<title>table::estimate_read_memory_cost (1 samples, 0.02%)</title><rect x="1043.6" y="229" width="0.2" height="15.0" fill="rgb(216,147,44)" rx="2" ry="2" />
<text  x="1046.55" y="239.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.02%)</title><rect x="866.8" y="373" width="0.2" height="15.0" fill="rgb(217,79,2)" rx="2" ry="2" />
<text  x="869.76" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (1 samples, 0.02%)</title><rect x="34.9" y="469" width="0.2" height="15.0" fill="rgb(217,96,2)" rx="2" ry="2" />
<text  x="37.86" y="479.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="938.4" y="357" width="0.2" height="15.0" fill="rgb(229,206,10)" rx="2" ry="2" />
<text  x="941.41" y="367.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.04%)</title><rect x="316.2" y="341" width="0.4" height="15.0" fill="rgb(226,53,22)" rx="2" ry="2" />
<text  x="319.17" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.02%)</title><rect x="671.4" y="421" width="0.2" height="15.0" fill="rgb(209,130,1)" rx="2" ry="2" />
<text  x="674.43" y="431.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (6 samples, 0.11%)</title><rect x="1141.7" y="437" width="1.3" height="15.0" fill="rgb(227,136,44)" rx="2" ry="2" />
<text  x="1144.75" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.04%)</title><rect x="618.5" y="437" width="0.5" height="15.0" fill="rgb(250,36,15)" rx="2" ry="2" />
<text  x="621.54" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (3 samples, 0.05%)</title><rect x="696.5" y="421" width="0.6" height="15.0" fill="rgb(210,16,33)" rx="2" ry="2" />
<text  x="699.51" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.05%)</title><rect x="561.9" y="325" width="0.6" height="15.0" fill="rgb(223,182,29)" rx="2" ry="2" />
<text  x="564.86" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.25%)</title><rect x="330.3" y="357" width="2.9" height="15.0" fill="rgb(235,151,34)" rx="2" ry="2" />
<text  x="333.29" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.02%)</title><rect x="1118.1" y="373" width="0.3" height="15.0" fill="rgb(225,169,34)" rx="2" ry="2" />
<text  x="1121.15" y="383.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.02%)</title><rect x="661.5" y="373" width="0.2" height="15.0" fill="rgb(213,228,43)" rx="2" ry="2" />
<text  x="664.53" y="383.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (6 samples, 0.11%)</title><rect x="632.5" y="421" width="1.2" height="15.0" fill="rgb(250,44,26)" rx="2" ry="2" />
<text  x="635.45" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.02%)</title><rect x="599.2" y="405" width="0.2" height="15.0" fill="rgb(238,170,21)" rx="2" ry="2" />
<text  x="602.16" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.04%)</title><rect x="873.9" y="357" width="0.5" height="15.0" fill="rgb(247,30,18)" rx="2" ry="2" />
<text  x="876.93" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.34%)</title><rect x="143.8" y="389" width="4.0" height="15.0" fill="rgb(220,107,41)" rx="2" ry="2" />
<text  x="146.80" y="399.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (23 samples, 0.41%)</title><rect x="300.8" y="277" width="4.8" height="15.0" fill="rgb(214,144,35)" rx="2" ry="2" />
<text  x="303.79" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.04%)</title><rect x="558.9" y="309" width="0.4" height="15.0" fill="rgb(233,188,26)" rx="2" ry="2" />
<text  x="561.91" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.02%)</title><rect x="22.0" y="197" width="0.2" height="15.0" fill="rgb(243,115,22)" rx="2" ry="2" />
<text  x="25.01" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.02%)</title><rect x="12.3" y="165" width="0.2" height="15.0" fill="rgb(247,82,2)" rx="2" ry="2" />
<text  x="15.32" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.12%)</title><rect x="640.5" y="405" width="1.4" height="15.0" fill="rgb(226,177,18)" rx="2" ry="2" />
<text  x="643.46" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.02%)</title><rect x="1162.2" y="469" width="0.2" height="15.0" fill="rgb(218,28,32)" rx="2" ry="2" />
<text  x="1165.19" y="479.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.21%)</title><rect x="721.2" y="421" width="2.5" height="15.0" fill="rgb(212,187,42)" rx="2" ry="2" />
<text  x="724.16" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.02%)</title><rect x="22.2" y="213" width="0.2" height="15.0" fill="rgb(221,106,0)" rx="2" ry="2" />
<text  x="25.22" y="223.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.02%)</title><rect x="588.4" y="341" width="0.2" height="15.0" fill="rgb(237,11,17)" rx="2" ry="2" />
<text  x="591.41" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.02%)</title><rect x="18.4" y="261" width="0.2" height="15.0" fill="rgb(244,69,18)" rx="2" ry="2" />
<text  x="21.43" y="271.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (2 samples, 0.04%)</title><rect x="844.4" y="293" width="0.5" height="15.0" fill="rgb(251,133,38)" rx="2" ry="2" />
<text  x="847.43" y="303.5" ></text>
</g>
<g >
<title>table::apply (6 samples, 0.11%)</title><rect x="1122.6" y="341" width="1.2" height="15.0" fill="rgb(234,4,27)" rx="2" ry="2" />
<text  x="1125.57" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.02%)</title><rect x="1039.1" y="213" width="0.2" height="15.0" fill="rgb(223,29,16)" rx="2" ry="2" />
<text  x="1042.13" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::do_for_each_state&lt;std::__detail::_Node_iterator&lt;sstables::component_type, true, true&gt;, sstables::sstable::update_info_for_opened_data (1 samples, 0.02%)</title><rect x="703.7" y="453" width="0.2" height="15.0" fill="rgb(238,124,11)" rx="2" ry="2" />
<text  x="706.67" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.04%)</title><rect x="1123.8" y="341" width="0.5" height="15.0" fill="rgb(244,203,31)" rx="2" ry="2" />
<text  x="1126.84" y="351.5" ></text>
</g>
<g >
<title>dht::tri_compare (21 samples, 0.38%)</title><rect x="1090.3" y="229" width="4.5" height="15.0" fill="rgb(220,32,53)" rx="2" ry="2" />
<text  x="1093.33" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.02%)</title><rect x="588.2" y="341" width="0.2" height="15.0" fill="rgb(234,185,7)" rx="2" ry="2" />
<text  x="591.20" y="351.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.11%)</title><rect x="805.0" y="325" width="1.3" height="15.0" fill="rgb(252,4,3)" rx="2" ry="2" />
<text  x="808.02" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.02%)</title><rect x="19.1" y="181" width="0.2" height="15.0" fill="rgb(218,57,42)" rx="2" ry="2" />
<text  x="22.06" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect x="21.2" y="133" width="0.2" height="15.0" fill="rgb(233,104,39)" rx="2" ry="2" />
<text  x="24.17" y="143.5" ></text>
</g>
<g >
<title>[unknown] (37 samples, 0.66%)</title><rect x="24.5" y="549" width="7.8" height="15.0" fill="rgb(244,83,34)" rx="2" ry="2" />
<text  x="27.54" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.21%)</title><rect x="131.8" y="373" width="2.5" height="15.0" fill="rgb(209,158,4)" rx="2" ry="2" />
<text  x="134.79" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.04%)</title><rect x="824.4" y="389" width="0.4" height="15.0" fill="rgb(229,47,44)" rx="2" ry="2" />
<text  x="827.41" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.02%)</title><rect x="597.9" y="405" width="0.2" height="15.0" fill="rgb(227,47,3)" rx="2" ry="2" />
<text  x="600.89" y="415.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (2 samples, 0.04%)</title><rect x="1123.8" y="373" width="0.5" height="15.0" fill="rgb(247,224,50)" rx="2" ry="2" />
<text  x="1126.84" y="383.5" ></text>
</g>
</g>
</svg>
