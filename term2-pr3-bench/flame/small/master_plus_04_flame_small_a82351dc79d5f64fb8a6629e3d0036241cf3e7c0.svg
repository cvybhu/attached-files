<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="806.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="789" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="789" > </text>
<g id="frames">
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.29%)</title><rect x="447.0" y="469" width="3.4" height="15.0" fill="rgb(241,179,16)" rx="2" ry="2" />
<text  x="449.97" y="479.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (1 samples, 0.14%)</title><rect x="375.6" y="517" width="1.7" height="15.0" fill="rgb(218,106,29)" rx="2" ry="2" />
<text  x="378.56" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2 samples, 0.29%)</title><rect x="351.8" y="437" width="3.4" height="15.0" fill="rgb(222,85,52)" rx="2" ry="2" />
<text  x="354.76" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (3 samples, 0.43%)</title><rect x="32.1" y="405" width="5.1" height="15.0" fill="rgb(206,49,21)" rx="2" ry="2" />
<text  x="35.10" y="415.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (56 samples, 8.07%)</title><rect x="15.1" y="565" width="95.2" height="15.0" fill="rgb(225,140,47)" rx="2" ry="2" />
<text  x="18.10" y="575.5" >cql3::query..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="45.7" y="309" width="1.7" height="15.0" fill="rgb(224,87,15)" rx="2" ry="2" />
<text  x="48.71" y="319.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.14%)</title><rect x="525.2" y="517" width="1.7" height="15.0" fill="rgb(238,181,2)" rx="2" ry="2" />
<text  x="528.19" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.14%)</title><rect x="66.1" y="229" width="1.7" height="15.0" fill="rgb(214,69,20)" rx="2" ry="2" />
<text  x="69.11" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.14%)</title><rect x="81.4" y="389" width="1.7" height="15.0" fill="rgb(213,2,20)" rx="2" ry="2" />
<text  x="84.41" y="399.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="95.0" y="389" width="1.7" height="15.0" fill="rgb(249,82,11)" rx="2" ry="2" />
<text  x="98.01" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.14%)</title><rect x="982.6" y="373" width="1.7" height="15.0" fill="rgb(221,138,48)" rx="2" ry="2" />
<text  x="985.56" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="45.7" y="373" width="1.7" height="15.0" fill="rgb(232,2,49)" rx="2" ry="2" />
<text  x="48.71" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.29%)</title><rect x="98.4" y="421" width="3.4" height="15.0" fill="rgb(206,125,26)" rx="2" ry="2" />
<text  x="101.41" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.14%)</title><rect x="28.7" y="485" width="1.7" height="15.0" fill="rgb(215,1,15)" rx="2" ry="2" />
<text  x="31.70" y="495.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_partition (1 samples, 0.14%)</title><rect x="129.0" y="645" width="1.7" height="15.0" fill="rgb(209,155,52)" rx="2" ry="2" />
<text  x="132.02" y="655.5" ></text>
</g>
<g >
<title>__start_context (61 samples, 8.79%)</title><rect x="10.0" y="693" width="103.7" height="15.0" fill="rgb(213,131,39)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >__start_cont..</text>
</g>
<g >
<title>operator new (4 samples, 0.58%)</title><rect x="1067.6" y="581" width="6.8" height="15.0" fill="rgb(237,74,0)" rx="2" ry="2" />
<text  x="1070.58" y="591.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.29%)</title><rect x="312.7" y="357" width="3.4" height="15.0" fill="rgb(230,226,46)" rx="2" ry="2" />
<text  x="315.65" y="367.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (155 samples, 22.33%)</title><rect x="793.8" y="597" width="263.6" height="15.0" fill="rgb(250,206,1)" rx="2" ry="2" />
<text  x="796.83" y="607.5" >seastar::lambda_task&lt;seastar::execu..</text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="678.2" y="581" width="1.7" height="15.0" fill="rgb(242,23,16)" rx="2" ry="2" />
<text  x="681.21" y="591.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (3 samples, 0.43%)</title><rect x="793.8" y="517" width="5.1" height="15.0" fill="rgb(244,132,16)" rx="2" ry="2" />
<text  x="796.83" y="527.5" ></text>
</g>
<g >
<title>mutation_querier::consume (21 samples, 3.03%)</title><rect x="433.4" y="485" width="35.7" height="15.0" fill="rgb(215,58,38)" rx="2" ry="2" />
<text  x="436.37" y="495.5" >mut..</text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="897.6" y="437" width="5.1" height="15.0" fill="rgb(206,93,45)" rx="2" ry="2" />
<text  x="900.55" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="921.4" y="405" width="5.1" height="15.0" fill="rgb(228,99,31)" rx="2" ry="2" />
<text  x="924.35" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.14%)</title><rect x="676.5" y="533" width="1.7" height="15.0" fill="rgb(210,158,20)" rx="2" ry="2" />
<text  x="679.51" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (3 samples, 0.43%)</title><rect x="333.1" y="309" width="5.1" height="15.0" fill="rgb(215,197,22)" rx="2" ry="2" />
<text  x="336.05" y="319.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (61 samples, 8.79%)</title><rect x="10.0" y="677" width="103.7" height="15.0" fill="rgb(205,175,48)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >seastar::thr..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (3 samples, 0.43%)</title><rect x="793.8" y="549" width="5.1" height="15.0" fill="rgb(242,182,22)" rx="2" ry="2" />
<text  x="796.83" y="559.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (9 samples, 1.30%)</title><rect x="749.6" y="485" width="15.3" height="15.0" fill="rgb(241,99,49)" rx="2" ry="2" />
<text  x="752.63" y="495.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (11 samples, 1.59%)</title><rect x="639.1" y="597" width="18.7" height="15.0" fill="rgb(221,82,33)" rx="2" ry="2" />
<text  x="642.11" y="607.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (2 samples, 0.29%)</title><rect x="125.6" y="645" width="3.4" height="15.0" fill="rgb(252,163,28)" rx="2" ry="2" />
<text  x="128.62" y="655.5" ></text>
</g>
<g >
<title>schema::get_sharder (1 samples, 0.14%)</title><rect x="946.9" y="389" width="1.7" height="15.0" fill="rgb(229,199,45)" rx="2" ry="2" />
<text  x="949.86" y="399.5" ></text>
</g>
<g >
<title>memtable::apply (5 samples, 0.72%)</title><rect x="1037.0" y="469" width="8.5" height="15.0" fill="rgb(251,49,25)" rx="2" ry="2" />
<text  x="1039.97" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (4 samples, 0.58%)</title><rect x="45.7" y="469" width="6.8" height="15.0" fill="rgb(230,83,6)" rx="2" ry="2" />
<text  x="48.71" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="88.2" y="261" width="1.7" height="15.0" fill="rgb(208,166,18)" rx="2" ry="2" />
<text  x="91.21" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.14%)</title><rect x="88.2" y="181" width="1.7" height="15.0" fill="rgb(230,220,38)" rx="2" ry="2" />
<text  x="91.21" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (2 samples, 0.29%)</title><rect x="33.8" y="389" width="3.4" height="15.0" fill="rgb(244,39,4)" rx="2" ry="2" />
<text  x="36.80" y="399.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (8 samples, 1.15%)</title><rect x="144.3" y="597" width="13.6" height="15.0" fill="rgb(243,138,45)" rx="2" ry="2" />
<text  x="147.32" y="607.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.14%)</title><rect x="780.2" y="501" width="1.7" height="15.0" fill="rgb(218,176,30)" rx="2" ry="2" />
<text  x="783.23" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator= (1 samples, 0.14%)</title><rect x="89.9" y="373" width="1.7" height="15.0" fill="rgb(232,35,11)" rx="2" ry="2" />
<text  x="92.91" y="383.5" ></text>
</g>
<g >
<title>cql3::attributes::get_timestamp (1 samples, 0.14%)</title><rect x="795.5" y="501" width="1.7" height="15.0" fill="rgb(207,147,12)" rx="2" ry="2" />
<text  x="798.53" y="511.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.14%)</title><rect x="78.0" y="325" width="1.7" height="15.0" fill="rgb(227,11,13)" rx="2" ry="2" />
<text  x="81.01" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.14%)</title><rect x="59.3" y="261" width="1.7" height="15.0" fill="rgb(249,149,49)" rx="2" ry="2" />
<text  x="62.31" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="213" width="1.7" height="15.0" fill="rgb(240,208,35)" rx="2" ry="2" />
<text  x="82.71" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="309" width="1.7" height="15.0" fill="rgb(212,113,5)" rx="2" ry="2" />
<text  x="82.71" y="319.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (7 samples, 1.01%)</title><rect x="560.9" y="485" width="11.9" height="15.0" fill="rgb(236,5,35)" rx="2" ry="2" />
<text  x="563.89" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="152.8" y="533" width="1.7" height="15.0" fill="rgb(237,109,15)" rx="2" ry="2" />
<text  x="155.82" y="543.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="496.3" y="485" width="3.4" height="15.0" fill="rgb(251,188,17)" rx="2" ry="2" />
<text  x="499.28" y="495.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (1 samples, 0.14%)</title><rect x="606.8" y="469" width="1.7" height="15.0" fill="rgb(246,222,26)" rx="2" ry="2" />
<text  x="609.80" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.29%)</title><rect x="57.6" y="341" width="3.4" height="15.0" fill="rgb(218,217,25)" rx="2" ry="2" />
<text  x="60.61" y="351.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.14%)</title><rect x="13.4" y="565" width="1.7" height="15.0" fill="rgb(239,84,39)" rx="2" ry="2" />
<text  x="16.40" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.14%)</title><rect x="100.1" y="357" width="1.7" height="15.0" fill="rgb(251,198,33)" rx="2" ry="2" />
<text  x="103.12" y="367.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.14%)</title><rect x="13.4" y="533" width="1.7" height="15.0" fill="rgb(205,189,8)" rx="2" ry="2" />
<text  x="16.40" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::allocate (1 samples, 0.14%)</title><rect x="35.5" y="341" width="1.7" height="15.0" fill="rgb(229,47,20)" rx="2" ry="2" />
<text  x="38.50" y="351.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.43%)</title><rect x="271.8" y="405" width="5.1" height="15.0" fill="rgb(233,184,53)" rx="2" ry="2" />
<text  x="274.84" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (5 samples, 0.72%)</title><rect x="16.8" y="533" width="8.5" height="15.0" fill="rgb(208,210,51)" rx="2" ry="2" />
<text  x="19.80" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="389" width="1.7" height="15.0" fill="rgb(241,209,31)" rx="2" ry="2" />
<text  x="82.71" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (1 samples, 0.14%)</title><rect x="101.8" y="421" width="1.7" height="15.0" fill="rgb(213,152,33)" rx="2" ry="2" />
<text  x="104.82" y="431.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.14%)</title><rect x="360.3" y="485" width="1.7" height="15.0" fill="rgb(245,168,20)" rx="2" ry="2" />
<text  x="363.26" y="495.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.14%)</title><rect x="95.0" y="405" width="1.7" height="15.0" fill="rgb(229,100,39)" rx="2" ry="2" />
<text  x="98.01" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="707.1" y="549" width="1.7" height="15.0" fill="rgb(234,170,42)" rx="2" ry="2" />
<text  x="710.12" y="559.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="681.6" y="581" width="3.4" height="15.0" fill="rgb(222,169,24)" rx="2" ry="2" />
<text  x="684.61" y="591.5" ></text>
</g>
<g >
<title>seastar::reactor::run (564 samples, 81.27%)</title><rect x="132.4" y="645" width="959.0" height="15.0" fill="rgb(225,228,9)" rx="2" ry="2" />
<text  x="135.42" y="655.5" >seastar::reactor::run</text>
</g>
<g >
<title>__start_context (7 samples, 1.01%)</title><rect x="120.5" y="709" width="11.9" height="15.0" fill="rgb(222,166,12)" rx="2" ry="2" />
<text  x="123.52" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.14%)</title><rect x="71.2" y="389" width="1.7" height="15.0" fill="rgb(212,141,52)" rx="2" ry="2" />
<text  x="74.21" y="399.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (2 samples, 0.29%)</title><rect x="600.0" y="485" width="3.4" height="15.0" fill="rgb(218,11,31)" rx="2" ry="2" />
<text  x="603.00" y="495.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (7 samples, 1.01%)</title><rect x="120.5" y="693" width="11.9" height="15.0" fill="rgb(230,179,43)" rx="2" ry="2" />
<text  x="123.52" y="703.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (2 samples, 0.29%)</title><rect x="678.2" y="597" width="3.4" height="15.0" fill="rgb(215,183,43)" rx="2" ry="2" />
<text  x="681.21" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.14%)</title><rect x="999.6" y="373" width="1.7" height="15.0" fill="rgb(247,148,2)" rx="2" ry="2" />
<text  x="1002.57" y="383.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (2 samples, 0.29%)</title><rect x="16.8" y="453" width="3.4" height="15.0" fill="rgb(247,188,29)" rx="2" ry="2" />
<text  x="19.80" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.14%)</title><rect x="100.1" y="341" width="1.7" height="15.0" fill="rgb(211,63,46)" rx="2" ry="2" />
<text  x="103.12" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (3 samples, 0.43%)</title><rect x="793.8" y="565" width="5.1" height="15.0" fill="rgb(235,57,51)" rx="2" ry="2" />
<text  x="796.83" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="20.2" y="501" width="1.7" height="15.0" fill="rgb(230,21,9)" rx="2" ry="2" />
<text  x="23.20" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="154.5" y="565" width="1.7" height="15.0" fill="rgb(211,221,41)" rx="2" ry="2" />
<text  x="157.52" y="575.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.14%)</title><rect x="88.2" y="213" width="1.7" height="15.0" fill="rgb(247,113,31)" rx="2" ry="2" />
<text  x="91.21" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.14%)</title><rect x="644.2" y="549" width="1.7" height="15.0" fill="rgb(245,49,31)" rx="2" ry="2" />
<text  x="647.21" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="719.0" y="517" width="1.7" height="15.0" fill="rgb(216,102,42)" rx="2" ry="2" />
<text  x="722.02" y="527.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.14%)</title><rect x="122.2" y="645" width="1.7" height="15.0" fill="rgb(244,63,1)" rx="2" ry="2" />
<text  x="125.22" y="655.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (5 samples, 0.72%)</title><rect x="661.2" y="597" width="8.5" height="15.0" fill="rgb(206,156,23)" rx="2" ry="2" />
<text  x="664.21" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="924.8" y="389" width="1.7" height="15.0" fill="rgb(222,218,26)" rx="2" ry="2" />
<text  x="927.76" y="399.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (2 samples, 0.29%)</title><rect x="40.6" y="357" width="3.4" height="15.0" fill="rgb(225,8,48)" rx="2" ry="2" />
<text  x="43.61" y="367.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (1 samples, 0.14%)</title><rect x="679.9" y="581" width="1.7" height="15.0" fill="rgb(221,1,23)" rx="2" ry="2" />
<text  x="682.91" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;1ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="69" width="1.7" height="15.0" fill="rgb(209,199,10)" rx="2" ry="2" />
<text  x="82.71" y="79.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="25.3" y="517" width="1.7" height="15.0" fill="rgb(243,94,37)" rx="2" ry="2" />
<text  x="28.30" y="527.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.14%)</title><rect x="756.4" y="437" width="1.7" height="15.0" fill="rgb(208,225,8)" rx="2" ry="2" />
<text  x="759.43" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.14%)</title><rect x="487.8" y="517" width="1.7" height="15.0" fill="rgb(239,66,19)" rx="2" ry="2" />
<text  x="490.78" y="527.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="355.2" y="485" width="1.7" height="15.0" fill="rgb(235,137,20)" rx="2" ry="2" />
<text  x="358.16" y="495.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (1 samples, 0.14%)</title><rect x="112.0" y="613" width="1.7" height="15.0" fill="rgb(213,228,32)" rx="2" ry="2" />
<text  x="115.02" y="623.5" ></text>
</g>
<g >
<title>query::querier_base::close (22 samples, 3.17%)</title><rect x="489.5" y="549" width="37.4" height="15.0" fill="rgb(210,57,11)" rx="2" ry="2" />
<text  x="492.48" y="559.5" >que..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="88.2" y="245" width="1.7" height="15.0" fill="rgb(238,227,0)" rx="2" ry="2" />
<text  x="91.21" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="30.4" y="389" width="1.7" height="15.0" fill="rgb(210,228,9)" rx="2" ry="2" />
<text  x="33.40" y="399.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (3 samples, 0.43%)</title><rect x="1050.6" y="517" width="5.1" height="15.0" fill="rgb(250,14,18)" rx="2" ry="2" />
<text  x="1053.58" y="527.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.14%)</title><rect x="81.4" y="357" width="1.7" height="15.0" fill="rgb(254,12,5)" rx="2" ry="2" />
<text  x="84.41" y="367.5" ></text>
</g>
<g >
<title>dht::tri_compare (2 samples, 0.29%)</title><rect x="564.3" y="469" width="3.4" height="15.0" fill="rgb(208,47,23)" rx="2" ry="2" />
<text  x="567.29" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.43%)</title><rect x="1050.6" y="565" width="5.1" height="15.0" fill="rgb(237,125,52)" rx="2" ry="2" />
<text  x="1053.58" y="575.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql3_type::raw&gt;::shared_ptr (1 samples, 0.14%)</title><rect x="91.6" y="405" width="1.7" height="15.0" fill="rgb(207,34,1)" rx="2" ry="2" />
<text  x="94.61" y="415.5" ></text>
</g>
<g >
<title>seastar::app_template::run (565 samples, 81.41%)</title><rect x="132.4" y="693" width="960.7" height="15.0" fill="rgb(214,101,52)" rx="2" ry="2" />
<text  x="135.42" y="703.5" >seastar::app_template::run</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="45.7" y="421" width="1.7" height="15.0" fill="rgb(233,70,22)" rx="2" ry="2" />
<text  x="48.71" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.14%)</title><rect x="477.6" y="485" width="1.7" height="15.0" fill="rgb(213,213,46)" rx="2" ry="2" />
<text  x="480.58" y="495.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.14%)</title><rect x="574.5" y="469" width="1.7" height="15.0" fill="rgb(205,32,30)" rx="2" ry="2" />
<text  x="577.50" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (18 samples, 2.59%)</title><rect x="62.7" y="437" width="30.6" height="15.0" fill="rgb(244,97,17)" rx="2" ry="2" />
<text  x="65.71" y="447.5" >cq..</text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::_Optional_payload (1 samples, 0.14%)</title><rect x="103.5" y="405" width="1.7" height="15.0" fill="rgb(220,201,51)" rx="2" ry="2" />
<text  x="106.52" y="415.5" ></text>
</g>
<g >
<title>sstables::sstable::write_filter (1 samples, 0.14%)</title><rect x="130.7" y="645" width="1.7" height="15.0" fill="rgb(241,101,14)" rx="2" ry="2" />
<text  x="133.72" y="655.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (48 samples, 6.92%)</title><rect x="530.3" y="533" width="81.6" height="15.0" fill="rgb(239,5,51)" rx="2" ry="2" />
<text  x="533.29" y="543.5" >std::_Fun..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;5ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="133" width="1.7" height="15.0" fill="rgb(252,40,13)" rx="2" ry="2" />
<text  x="82.71" y="143.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="72.9" y="325" width="1.7" height="15.0" fill="rgb(237,139,24)" rx="2" ry="2" />
<text  x="75.91" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (2 samples, 0.29%)</title><rect x="173.2" y="549" width="3.4" height="15.0" fill="rgb(217,0,17)" rx="2" ry="2" />
<text  x="176.23" y="559.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.14%)</title><rect x="28.7" y="357" width="1.7" height="15.0" fill="rgb(210,63,16)" rx="2" ry="2" />
<text  x="31.70" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.14%)</title><rect x="129.0" y="661" width="1.7" height="15.0" fill="rgb(236,157,9)" rx="2" ry="2" />
<text  x="132.02" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="596.6" y="469" width="1.7" height="15.0" fill="rgb(218,98,31)" rx="2" ry="2" />
<text  x="599.60" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.14%)</title><rect x="64.4" y="261" width="1.7" height="15.0" fill="rgb(205,148,29)" rx="2" ry="2" />
<text  x="67.41" y="271.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="72.9" y="357" width="1.7" height="15.0" fill="rgb(244,154,54)" rx="2" ry="2" />
<text  x="75.91" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (36 samples, 5.19%)</title><rect x="45.7" y="485" width="61.2" height="15.0" fill="rgb(219,174,7)" rx="2" ry="2" />
<text  x="48.71" y="495.5" >cql3_p..</text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (271 samples, 39.05%)</title><rect x="163.0" y="597" width="460.8" height="15.0" fill="rgb(214,164,23)" rx="2" ry="2" />
<text  x="166.03" y="607.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (2 samples, 0.29%)</title><rect x="484.4" y="469" width="3.4" height="15.0" fill="rgb(231,64,36)" rx="2" ry="2" />
<text  x="487.38" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.14%)</title><rect x="96.7" y="309" width="1.7" height="15.0" fill="rgb(254,135,39)" rx="2" ry="2" />
<text  x="99.71" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="72.9" y="309" width="1.7" height="15.0" fill="rgb(221,186,18)" rx="2" ry="2" />
<text  x="75.91" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.43%)</title><rect x="1050.6" y="549" width="5.1" height="15.0" fill="rgb(230,106,43)" rx="2" ry="2" />
<text  x="1053.58" y="559.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.14%)</title><rect x="676.5" y="581" width="1.7" height="15.0" fill="rgb(247,169,19)" rx="2" ry="2" />
<text  x="679.51" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.14%)</title><rect x="790.4" y="597" width="1.7" height="15.0" fill="rgb(212,11,10)" rx="2" ry="2" />
<text  x="793.43" y="607.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (8 samples, 1.15%)</title><rect x="1004.7" y="405" width="13.6" height="15.0" fill="rgb(230,75,33)" rx="2" ry="2" />
<text  x="1007.67" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="159.6" y="597" width="1.7" height="15.0" fill="rgb(247,32,49)" rx="2" ry="2" />
<text  x="162.63" y="607.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="761.5" y="469" width="1.7" height="15.0" fill="rgb(253,163,40)" rx="2" ry="2" />
<text  x="764.53" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (86 samples, 12.39%)</title><rect x="872.0" y="485" width="146.3" height="15.0" fill="rgb(218,90,54)" rx="2" ry="2" />
<text  x="875.05" y="495.5" >service::storage_p..</text>
</g>
<g >
<title>query_result_builder::consume (22 samples, 3.17%)</title><rect x="431.7" y="501" width="37.4" height="15.0" fill="rgb(239,67,8)" rx="2" ry="2" />
<text  x="434.67" y="511.5" >que..</text>
</g>
<g >
<title>std::optional&lt;cql3::expr::expression&gt;::optional (1 samples, 0.14%)</title><rect x="103.5" y="437" width="1.7" height="15.0" fill="rgb(224,85,7)" rx="2" ry="2" />
<text  x="106.52" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="45.7" y="405" width="1.7" height="15.0" fill="rgb(252,185,15)" rx="2" ry="2" />
<text  x="48.71" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (10 samples, 1.44%)</title><rect x="1001.3" y="437" width="17.0" height="15.0" fill="rgb(227,190,18)" rx="2" ry="2" />
<text  x="1004.27" y="447.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (10 samples, 1.44%)</title><rect x="574.5" y="485" width="17.0" height="15.0" fill="rgb(250,172,53)" rx="2" ry="2" />
<text  x="577.50" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (1 samples, 0.14%)</title><rect x="637.4" y="581" width="1.7" height="15.0" fill="rgb(225,57,1)" rx="2" ry="2" />
<text  x="640.41" y="591.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::update_statement (1 samples, 0.14%)</title><rect x="105.2" y="453" width="1.7" height="15.0" fill="rgb(214,115,31)" rx="2" ry="2" />
<text  x="108.22" y="463.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (565 samples, 81.41%)</title><rect x="132.4" y="661" width="960.7" height="15.0" fill="rgb(242,59,29)" rx="2" ry="2" />
<text  x="135.42" y="671.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (22 samples, 3.17%)</title><rect x="815.9" y="517" width="37.4" height="15.0" fill="rgb(245,207,11)" rx="2" ry="2" />
<text  x="818.94" y="527.5" >cql..</text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (3 samples, 0.43%)</title><rect x="271.8" y="421" width="5.1" height="15.0" fill="rgb(219,185,11)" rx="2" ry="2" />
<text  x="274.84" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="95.0" y="373" width="1.7" height="15.0" fill="rgb(240,183,4)" rx="2" ry="2" />
<text  x="98.01" y="383.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="76.3" y="357" width="3.4" height="15.0" fill="rgb(232,7,5)" rx="2" ry="2" />
<text  x="79.31" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="61.0" y="421" width="1.7" height="15.0" fill="rgb(221,221,54)" rx="2" ry="2" />
<text  x="64.01" y="431.5" ></text>
</g>
<g >
<title>table::query (256 samples, 36.89%)</title><rect x="185.1" y="565" width="435.3" height="15.0" fill="rgb(238,179,47)" rx="2" ry="2" />
<text  x="188.13" y="575.5" >table::query</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (3 samples, 0.43%)</title><rect x="300.7" y="389" width="5.2" height="15.0" fill="rgb(234,220,42)" rx="2" ry="2" />
<text  x="303.75" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="761.5" y="453" width="1.7" height="15.0" fill="rgb(253,118,41)" rx="2" ry="2" />
<text  x="764.53" y="463.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (3 samples, 0.43%)</title><rect x="1013.2" y="389" width="5.1" height="15.0" fill="rgb(219,204,15)" rx="2" ry="2" />
<text  x="1016.17" y="399.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.14%)</title><rect x="797.2" y="421" width="1.7" height="15.0" fill="rgb(235,19,29)" rx="2" ry="2" />
<text  x="800.23" y="431.5" ></text>
</g>
<g >
<title>table::apply (5 samples, 0.72%)</title><rect x="1037.0" y="485" width="8.5" height="15.0" fill="rgb(247,30,27)" rx="2" ry="2" />
<text  x="1039.97" y="495.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="821.0" y="437" width="1.7" height="15.0" fill="rgb(230,183,10)" rx="2" ry="2" />
<text  x="824.04" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (33 samples, 4.76%)</title><rect x="929.9" y="405" width="56.1" height="15.0" fill="rgb(212,28,46)" rx="2" ry="2" />
<text  x="932.86" y="415.5" >servi..</text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (3 samples, 0.43%)</title><rect x="567.7" y="469" width="5.1" height="15.0" fill="rgb(218,70,18)" rx="2" ry="2" />
<text  x="570.69" y="479.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.14%)</title><rect x="122.2" y="629" width="1.7" height="15.0" fill="rgb(225,7,22)" rx="2" ry="2" />
<text  x="125.22" y="639.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="1074.4" y="581" width="1.7" height="15.0" fill="rgb(225,13,32)" rx="2" ry="2" />
<text  x="1077.38" y="591.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (2 samples, 0.29%)</title><rect x="632.3" y="597" width="3.4" height="15.0" fill="rgb(225,185,16)" rx="2" ry="2" />
<text  x="635.31" y="607.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.14%)</title><rect x="52.5" y="437" width="1.7" height="15.0" fill="rgb(240,9,22)" rx="2" ry="2" />
<text  x="55.51" y="447.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.29%)</title><rect x="57.6" y="437" width="3.4" height="15.0" fill="rgb(228,132,8)" rx="2" ry="2" />
<text  x="60.61" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (6 samples, 0.86%)</title><rect x="147.7" y="581" width="10.2" height="15.0" fill="rgb(225,71,12)" rx="2" ry="2" />
<text  x="150.72" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.29%)</title><rect x="977.5" y="341" width="3.4" height="15.0" fill="rgb(244,76,29)" rx="2" ry="2" />
<text  x="980.46" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (5 samples, 0.72%)</title><rect x="83.1" y="389" width="8.5" height="15.0" fill="rgb(245,4,44)" rx="2" ry="2" />
<text  x="86.11" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="1026.8" y="501" width="3.4" height="15.0" fill="rgb(252,96,4)" rx="2" ry="2" />
<text  x="1029.77" y="511.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.29%)</title><rect x="57.6" y="293" width="3.4" height="15.0" fill="rgb(232,149,41)" rx="2" ry="2" />
<text  x="60.61" y="303.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (1 samples, 0.14%)</title><rect x="1042.1" y="453" width="1.7" height="15.0" fill="rgb(206,106,30)" rx="2" ry="2" />
<text  x="1045.07" y="463.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (9 samples, 1.30%)</title><rect x="817.6" y="469" width="15.3" height="15.0" fill="rgb(247,126,50)" rx="2" ry="2" />
<text  x="820.64" y="479.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.14%)</title><rect x="419.8" y="485" width="1.7" height="15.0" fill="rgb(240,199,46)" rx="2" ry="2" />
<text  x="422.77" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.14%)</title><rect x="69.5" y="405" width="1.7" height="15.0" fill="rgb(252,50,23)" rx="2" ry="2" />
<text  x="72.51" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (18 samples, 2.59%)</title><rect x="987.7" y="453" width="30.6" height="15.0" fill="rgb(207,11,8)" rx="2" ry="2" />
<text  x="990.67" y="463.5" >se..</text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="870.3" y="485" width="1.7" height="15.0" fill="rgb(253,80,33)" rx="2" ry="2" />
<text  x="873.35" y="495.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.14%)</title><rect x="676.5" y="453" width="1.7" height="15.0" fill="rgb(212,13,14)" rx="2" ry="2" />
<text  x="679.51" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.29%)</title><rect x="57.6" y="357" width="3.4" height="15.0" fill="rgb(229,48,9)" rx="2" ry="2" />
<text  x="60.61" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.14%)</title><rect x="1021.7" y="501" width="1.7" height="15.0" fill="rgb(208,76,32)" rx="2" ry="2" />
<text  x="1024.67" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="28.7" y="389" width="1.7" height="15.0" fill="rgb(211,3,43)" rx="2" ry="2" />
<text  x="31.70" y="399.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.43%)</title><rect x="921.4" y="421" width="5.1" height="15.0" fill="rgb(210,87,17)" rx="2" ry="2" />
<text  x="924.35" y="431.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.14%)</title><rect x="571.1" y="453" width="1.7" height="15.0" fill="rgb(239,125,12)" rx="2" ry="2" />
<text  x="574.10" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="50.8" y="389" width="1.7" height="15.0" fill="rgb(224,214,28)" rx="2" ry="2" />
<text  x="53.81" y="399.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.14%)</title><rect x="362.0" y="533" width="1.7" height="15.0" fill="rgb(205,188,4)" rx="2" ry="2" />
<text  x="364.96" y="543.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="147.7" y="565" width="3.4" height="15.0" fill="rgb(207,63,42)" rx="2" ry="2" />
<text  x="150.72" y="575.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.14%)</title><rect x="120.5" y="677" width="1.7" height="15.0" fill="rgb(236,205,11)" rx="2" ry="2" />
<text  x="123.52" y="687.5" ></text>
</g>
<g >
<title>[[vdso]] (5 samples, 0.72%)</title><rect x="1103.3" y="709" width="8.5" height="15.0" fill="rgb(226,94,43)" rx="2" ry="2" />
<text  x="1106.29" y="719.5" ></text>
</g>
<g >
<title>operator new (7 samples, 1.01%)</title><rect x="208.9" y="533" width="11.9" height="15.0" fill="rgb(243,225,28)" rx="2" ry="2" />
<text  x="211.93" y="543.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (4 samples, 0.58%)</title><rect x="843.1" y="469" width="6.8" height="15.0" fill="rgb(234,130,14)" rx="2" ry="2" />
<text  x="846.14" y="479.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (3 samples, 0.43%)</title><rect x="503.1" y="453" width="5.1" height="15.0" fill="rgb(246,197,18)" rx="2" ry="2" />
<text  x="506.08" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="574.5" y="437" width="1.7" height="15.0" fill="rgb(226,174,1)" rx="2" ry="2" />
<text  x="577.50" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (132 samples, 19.02%)</title><rect x="810.8" y="549" width="224.5" height="15.0" fill="rgb(235,225,30)" rx="2" ry="2" />
<text  x="813.84" y="559.5" >seastar::noncopyable_function..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="76.3" y="373" width="3.4" height="15.0" fill="rgb(219,219,16)" rx="2" ry="2" />
<text  x="79.31" y="383.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="720.7" y="565" width="3.4" height="15.0" fill="rgb(205,100,52)" rx="2" ry="2" />
<text  x="723.72" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="67.8" y="309" width="1.7" height="15.0" fill="rgb(232,189,38)" rx="2" ry="2" />
<text  x="70.81" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (89 samples, 12.82%)</title><rect x="866.9" y="501" width="151.4" height="15.0" fill="rgb(208,56,39)" rx="2" ry="2" />
<text  x="869.95" y="511.5" >service::storage_pr..</text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (6 samples, 0.86%)</title><rect x="513.3" y="517" width="10.2" height="15.0" fill="rgb(226,124,1)" rx="2" ry="2" />
<text  x="516.29" y="527.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="758.1" y="453" width="3.4" height="15.0" fill="rgb(230,225,40)" rx="2" ry="2" />
<text  x="761.13" y="463.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="373" width="1.7" height="15.0" fill="rgb(219,37,33)" rx="2" ry="2" />
<text  x="82.71" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="350.1" y="405" width="1.7" height="15.0" fill="rgb(220,64,33)" rx="2" ry="2" />
<text  x="353.06" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.29%)</title><rect x="76.3" y="389" width="3.4" height="15.0" fill="rgb(243,60,4)" rx="2" ry="2" />
<text  x="79.31" y="399.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="1026.8" y="517" width="3.4" height="15.0" fill="rgb(244,99,18)" rx="2" ry="2" />
<text  x="1029.77" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.14%)</title><rect x="81.4" y="373" width="1.7" height="15.0" fill="rgb(232,153,23)" rx="2" ry="2" />
<text  x="84.41" y="383.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.14%)</title><rect x="797.2" y="405" width="1.7" height="15.0" fill="rgb(229,220,48)" rx="2" ry="2" />
<text  x="800.23" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="45.7" y="389" width="1.7" height="15.0" fill="rgb(233,164,10)" rx="2" ry="2" />
<text  x="48.71" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="67.8" y="373" width="1.7" height="15.0" fill="rgb(207,205,38)" rx="2" ry="2" />
<text  x="70.81" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.29%)</title><rect x="64.4" y="293" width="3.4" height="15.0" fill="rgb(207,33,27)" rx="2" ry="2" />
<text  x="67.41" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (2 samples, 0.29%)</title><rect x="1030.2" y="517" width="3.4" height="15.0" fill="rgb(251,67,41)" rx="2" ry="2" />
<text  x="1033.17" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="1069.3" y="565" width="5.1" height="15.0" fill="rgb(236,159,5)" rx="2" ry="2" />
<text  x="1072.28" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="50.8" y="405" width="1.7" height="15.0" fill="rgb(252,131,30)" rx="2" ry="2" />
<text  x="53.81" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (2 samples, 0.29%)</title><rect x="40.6" y="373" width="3.4" height="15.0" fill="rgb(225,34,20)" rx="2" ry="2" />
<text  x="43.61" y="383.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (46 samples, 6.63%)</title><rect x="708.8" y="581" width="78.2" height="15.0" fill="rgb(207,123,16)" rx="2" ry="2" />
<text  x="711.82" y="591.5" >single_no..</text>
</g>
<g >
<title>cql3::query_options::query_options (5 samples, 0.72%)</title><rect x="712.2" y="565" width="8.5" height="15.0" fill="rgb(230,188,26)" rx="2" ry="2" />
<text  x="715.22" y="575.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (266 samples, 38.33%)</title><rect x="168.1" y="581" width="452.3" height="15.0" fill="rgb(239,158,9)" rx="2" ry="2" />
<text  x="171.13" y="591.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="960.5" y="309" width="1.7" height="15.0" fill="rgb(239,220,21)" rx="2" ry="2" />
<text  x="963.46" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (564 samples, 81.27%)</title><rect x="132.4" y="629" width="959.0" height="15.0" fill="rgb(218,4,46)" rx="2" ry="2" />
<text  x="135.42" y="639.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (9 samples, 1.30%)</title><rect x="576.2" y="469" width="15.3" height="15.0" fill="rgb(224,32,33)" rx="2" ry="2" />
<text  x="579.20" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="95.0" y="293" width="1.7" height="15.0" fill="rgb(223,139,28)" rx="2" ry="2" />
<text  x="98.01" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.14%)</title><rect x="101.8" y="389" width="1.7" height="15.0" fill="rgb(251,196,13)" rx="2" ry="2" />
<text  x="104.82" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (4 samples, 0.58%)</title><rect x="625.5" y="597" width="6.8" height="15.0" fill="rgb(244,137,48)" rx="2" ry="2" />
<text  x="628.50" y="607.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.14%)</title><rect x="88.2" y="165" width="1.7" height="15.0" fill="rgb(206,41,53)" rx="2" ry="2" />
<text  x="91.21" y="175.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (1 samples, 0.14%)</title><rect x="797.2" y="453" width="1.7" height="15.0" fill="rgb(236,136,5)" rx="2" ry="2" />
<text  x="800.23" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="781.9" y="549" width="1.7" height="15.0" fill="rgb(244,137,52)" rx="2" ry="2" />
<text  x="784.93" y="559.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.14%)</title><rect x="95.0" y="421" width="1.7" height="15.0" fill="rgb(230,178,48)" rx="2" ry="2" />
<text  x="98.01" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="540.5" y="469" width="1.7" height="15.0" fill="rgb(232,222,2)" rx="2" ry="2" />
<text  x="543.49" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.14%)</title><rect x="21.9" y="501" width="1.7" height="15.0" fill="rgb(248,0,21)" rx="2" ry="2" />
<text  x="24.90" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (6 samples, 0.86%)</title><rect x="16.8" y="549" width="10.2" height="15.0" fill="rgb(225,213,46)" rx="2" ry="2" />
<text  x="19.80" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.14%)</title><rect x="76.3" y="325" width="1.7" height="15.0" fill="rgb(219,127,24)" rx="2" ry="2" />
<text  x="79.31" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="95.0" y="341" width="1.7" height="15.0" fill="rgb(222,129,9)" rx="2" ry="2" />
<text  x="98.01" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (2 samples, 0.29%)</title><rect x="1086.3" y="597" width="3.4" height="15.0" fill="rgb(218,174,14)" rx="2" ry="2" />
<text  x="1089.28" y="607.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (2 samples, 0.29%)</title><rect x="173.2" y="565" width="3.4" height="15.0" fill="rgb(244,36,17)" rx="2" ry="2" />
<text  x="176.23" y="575.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.14%)</title><rect x="1040.4" y="453" width="1.7" height="15.0" fill="rgb(251,109,46)" rx="2" ry="2" />
<text  x="1043.37" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="50.8" y="341" width="1.7" height="15.0" fill="rgb(209,217,5)" rx="2" ry="2" />
<text  x="53.81" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (13 samples, 1.87%)</title><rect x="958.8" y="357" width="22.1" height="15.0" fill="rgb(233,138,16)" rx="2" ry="2" />
<text  x="961.76" y="367.5" >r..</text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (1 samples, 0.14%)</title><rect x="11.7" y="597" width="1.7" height="15.0" fill="rgb(252,27,54)" rx="2" ry="2" />
<text  x="14.70" y="607.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (2 samples, 0.29%)</title><rect x="1050.6" y="421" width="3.4" height="15.0" fill="rgb(237,36,27)" rx="2" ry="2" />
<text  x="1053.58" y="431.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (71 samples, 10.23%)</title><rect x="368.8" y="533" width="120.7" height="15.0" fill="rgb(222,38,29)" rx="2" ry="2" />
<text  x="371.76" y="543.5" >query::consume_..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="277" width="1.7" height="15.0" fill="rgb(225,134,41)" rx="2" ry="2" />
<text  x="82.71" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (1 samples, 0.14%)</title><rect x="27.0" y="533" width="1.7" height="15.0" fill="rgb(208,103,8)" rx="2" ry="2" />
<text  x="30.00" y="543.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (47 samples, 6.77%)</title><rect x="907.8" y="453" width="79.9" height="15.0" fill="rgb(244,60,24)" rx="2" ry="2" />
<text  x="910.75" y="463.5" >service::..</text>
</g>
<g >
<title>seastar::(anonymous namespace)::thread_wake_task::run_and_dispose (1 samples, 0.14%)</title><rect x="623.8" y="597" width="1.7" height="15.0" fill="rgb(247,226,15)" rx="2" ry="2" />
<text  x="626.80" y="607.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.14%)</title><rect x="122.2" y="661" width="1.7" height="15.0" fill="rgb(213,119,50)" rx="2" ry="2" />
<text  x="125.22" y="671.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="96.7" y="389" width="1.7" height="15.0" fill="rgb(210,39,41)" rx="2" ry="2" />
<text  x="99.71" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.43%)</title><rect x="1050.6" y="485" width="5.1" height="15.0" fill="rgb(223,201,5)" rx="2" ry="2" />
<text  x="1053.58" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.14%)</title><rect x="44.0" y="421" width="1.7" height="15.0" fill="rgb(241,217,5)" rx="2" ry="2" />
<text  x="47.01" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.14%)</title><rect x="88.2" y="357" width="1.7" height="15.0" fill="rgb(227,145,22)" rx="2" ry="2" />
<text  x="91.21" y="367.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.14%)</title><rect x="618.7" y="549" width="1.7" height="15.0" fill="rgb(240,160,22)" rx="2" ry="2" />
<text  x="621.70" y="559.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="591.5" y="485" width="3.4" height="15.0" fill="rgb(246,205,8)" rx="2" ry="2" />
<text  x="594.50" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.14%)</title><rect x="535.4" y="501" width="1.7" height="15.0" fill="rgb(244,144,3)" rx="2" ry="2" />
<text  x="538.39" y="511.5" ></text>
</g>
<g >
<title>make_combined_reader (6 samples, 0.86%)</title><rect x="537.1" y="501" width="10.2" height="15.0" fill="rgb(233,110,20)" rx="2" ry="2" />
<text  x="540.09" y="511.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (2 samples, 0.29%)</title><rect x="1050.6" y="373" width="3.4" height="15.0" fill="rgb(249,106,32)" rx="2" ry="2" />
<text  x="1053.58" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="30.4" y="405" width="1.7" height="15.0" fill="rgb(216,174,39)" rx="2" ry="2" />
<text  x="33.40" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.14%)</title><rect x="788.7" y="597" width="1.7" height="15.0" fill="rgb(219,131,45)" rx="2" ry="2" />
<text  x="791.73" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.14%)</title><rect x="100.1" y="405" width="1.7" height="15.0" fill="rgb(213,200,49)" rx="2" ry="2" />
<text  x="103.12" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="574.5" y="453" width="1.7" height="15.0" fill="rgb(229,171,19)" rx="2" ry="2" />
<text  x="577.50" y="463.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="1054.0" y="373" width="1.7" height="15.0" fill="rgb(238,136,21)" rx="2" ry="2" />
<text  x="1056.98" y="383.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (1 samples, 0.14%)</title><rect x="664.6" y="581" width="1.7" height="15.0" fill="rgb(251,29,24)" rx="2" ry="2" />
<text  x="667.61" y="591.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (1 samples, 0.14%)</title><rect x="523.5" y="517" width="1.7" height="15.0" fill="rgb(220,122,14)" rx="2" ry="2" />
<text  x="526.49" y="527.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.14%)</title><rect x="430.0" y="501" width="1.7" height="15.0" fill="rgb(248,200,2)" rx="2" ry="2" />
<text  x="432.97" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.14%)</title><rect x="52.5" y="421" width="1.7" height="15.0" fill="rgb(248,84,15)" rx="2" ry="2" />
<text  x="55.51" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (41 samples, 5.91%)</title><rect x="918.0" y="437" width="69.7" height="15.0" fill="rgb(251,170,7)" rx="2" ry="2" />
<text  x="920.95" y="447.5" >service..</text>
</g>
<g >
<title>operator new (4 samples, 0.58%)</title><rect x="940.1" y="389" width="6.8" height="15.0" fill="rgb(226,11,19)" rx="2" ry="2" />
<text  x="943.06" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.14%)</title><rect x="61.0" y="357" width="1.7" height="15.0" fill="rgb(235,222,32)" rx="2" ry="2" />
<text  x="64.01" y="367.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.14%)</title><rect x="780.2" y="517" width="1.7" height="15.0" fill="rgb(209,165,9)" rx="2" ry="2" />
<text  x="783.23" y="527.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::~single_column_relation (1 samples, 0.14%)</title><rect x="15.1" y="549" width="1.7" height="15.0" fill="rgb(216,204,46)" rx="2" ry="2" />
<text  x="18.10" y="559.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.14%)</title><rect x="28.7" y="309" width="1.7" height="15.0" fill="rgb(205,136,49)" rx="2" ry="2" />
<text  x="31.70" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.29%)</title><rect x="620.4" y="581" width="3.4" height="15.0" fill="rgb(252,173,19)" rx="2" ry="2" />
<text  x="623.40" y="591.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (9 samples, 1.30%)</title><rect x="251.4" y="469" width="15.3" height="15.0" fill="rgb(237,33,48)" rx="2" ry="2" />
<text  x="254.44" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;3ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="101" width="1.7" height="15.0" fill="rgb(213,205,16)" rx="2" ry="2" />
<text  x="82.71" y="111.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.14%)</title><rect x="637.4" y="565" width="1.7" height="15.0" fill="rgb(232,82,39)" rx="2" ry="2" />
<text  x="640.41" y="575.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (4 samples, 0.58%)</title><rect x="1048.9" y="581" width="6.8" height="15.0" fill="rgb(239,66,23)" rx="2" ry="2" />
<text  x="1051.88" y="591.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.14%)</title><rect x="72.9" y="373" width="1.7" height="15.0" fill="rgb(225,16,38)" rx="2" ry="2" />
<text  x="75.91" y="383.5" ></text>
</g>
<g >
<title>row::row (18 samples, 2.59%)</title><rect x="309.3" y="389" width="30.6" height="15.0" fill="rgb(246,227,52)" rx="2" ry="2" />
<text  x="312.25" y="399.5" >ro..</text>
</g>
<g >
<title>cql3::constants::marker::to_expression (1 samples, 0.14%)</title><rect x="819.3" y="437" width="1.7" height="15.0" fill="rgb(227,174,38)" rx="2" ry="2" />
<text  x="822.34" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (564 samples, 81.27%)</title><rect x="132.4" y="613" width="959.0" height="15.0" fill="rgb(230,61,47)" rx="2" ry="2" />
<text  x="135.42" y="623.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.14%)</title><rect x="30.4" y="501" width="1.7" height="15.0" fill="rgb(238,198,17)" rx="2" ry="2" />
<text  x="33.40" y="511.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (7 samples, 1.01%)</title><rect x="1037.0" y="517" width="11.9" height="15.0" fill="rgb(236,104,18)" rx="2" ry="2" />
<text  x="1039.97" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="67.8" y="357" width="1.7" height="15.0" fill="rgb(230,63,9)" rx="2" ry="2" />
<text  x="70.81" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.86%)</title><rect x="406.2" y="469" width="10.2" height="15.0" fill="rgb(237,184,11)" rx="2" ry="2" />
<text  x="409.17" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.14%)</title><rect x="986.0" y="405" width="1.7" height="15.0" fill="rgb(225,140,12)" rx="2" ry="2" />
<text  x="988.97" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="72.9" y="293" width="1.7" height="15.0" fill="rgb(207,68,42)" rx="2" ry="2" />
<text  x="75.91" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.14%)</title><rect x="61.0" y="437" width="1.7" height="15.0" fill="rgb(213,140,29)" rx="2" ry="2" />
<text  x="64.01" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (3 samples, 0.43%)</title><rect x="1050.6" y="469" width="5.1" height="15.0" fill="rgb(229,177,24)" rx="2" ry="2" />
<text  x="1053.58" y="479.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (33 samples, 4.76%)</title><rect x="547.3" y="501" width="56.1" height="15.0" fill="rgb(216,145,50)" rx="2" ry="2" />
<text  x="550.29" y="511.5" >memta..</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.14%)</title><rect x="61.0" y="389" width="1.7" height="15.0" fill="rgb(221,26,37)" rx="2" ry="2" />
<text  x="64.01" y="399.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.14%)</title><rect x="79.7" y="357" width="1.7" height="15.0" fill="rgb(214,121,13)" rx="2" ry="2" />
<text  x="82.71" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.43%)</title><rect x="176.6" y="549" width="5.1" height="15.0" fill="rgb(227,21,39)" rx="2" ry="2" />
<text  x="179.63" y="559.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.14%)</title><rect x="668.0" y="581" width="1.7" height="15.0" fill="rgb(228,192,48)" rx="2" ry="2" />
<text  x="671.01" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.14%)</title><rect x="883.9" y="469" width="1.7" height="15.0" fill="rgb(218,106,32)" rx="2" ry="2" />
<text  x="886.95" y="479.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="1091.4" y="597" width="1.7" height="15.0" fill="rgb(241,167,37)" rx="2" ry="2" />
<text  x="1094.38" y="607.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (3 samples, 0.43%)</title><rect x="1050.6" y="453" width="5.1" height="15.0" fill="rgb(217,181,4)" rx="2" ry="2" />
<text  x="1053.58" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="418.1" y="453" width="1.7" height="15.0" fill="rgb(243,112,38)" rx="2" ry="2" />
<text  x="421.07" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.14%)</title><rect x="28.7" y="501" width="1.7" height="15.0" fill="rgb(206,190,0)" rx="2" ry="2" />
<text  x="31.70" y="511.5" ></text>
</g>
<g >
<title>seastar::app_template::run (565 samples, 81.41%)</title><rect x="132.4" y="677" width="960.7" height="15.0" fill="rgb(205,125,2)" rx="2" ry="2" />
<text  x="135.42" y="687.5" >seastar::app_template::run</text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="1023.4" y="517" width="3.4" height="15.0" fill="rgb(252,7,5)" rx="2" ry="2" />
<text  x="1026.37" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.29%)</title><rect x="57.6" y="421" width="3.4" height="15.0" fill="rgb(232,78,2)" rx="2" ry="2" />
<text  x="60.61" y="431.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.43%)</title><rect x="583.0" y="437" width="5.1" height="15.0" fill="rgb(205,21,33)" rx="2" ry="2" />
<text  x="586.00" y="447.5" ></text>
</g>
<g >
<title>database::query (1 samples, 0.14%)</title><rect x="157.9" y="597" width="1.7" height="15.0" fill="rgb(252,167,51)" rx="2" ry="2" />
<text  x="160.93" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="95.0" y="261" width="1.7" height="15.0" fill="rgb(223,196,33)" rx="2" ry="2" />
<text  x="98.01" y="271.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.14%)</title><rect x="345.0" y="421" width="1.7" height="15.0" fill="rgb(218,152,33)" rx="2" ry="2" />
<text  x="347.96" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="222.5" y="533" width="1.7" height="15.0" fill="rgb(206,34,49)" rx="2" ry="2" />
<text  x="225.54" y="543.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.14%)</title><rect x="674.8" y="581" width="1.7" height="15.0" fill="rgb(252,109,36)" rx="2" ry="2" />
<text  x="677.81" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.29%)</title><rect x="76.3" y="341" width="3.4" height="15.0" fill="rgb(206,167,7)" rx="2" ry="2" />
<text  x="79.31" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.14%)</title><rect x="181.7" y="549" width="1.7" height="15.0" fill="rgb(216,162,42)" rx="2" ry="2" />
<text  x="184.73" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.14%)</title><rect x="93.3" y="405" width="1.7" height="15.0" fill="rgb(246,192,44)" rx="2" ry="2" />
<text  x="96.31" y="415.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.14%)</title><rect x="118.8" y="709" width="1.7" height="15.0" fill="rgb(236,192,16)" rx="2" ry="2" />
<text  x="121.82" y="719.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="67.8" y="325" width="1.7" height="15.0" fill="rgb(241,212,24)" rx="2" ry="2" />
<text  x="70.81" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="276.9" y="405" width="1.7" height="15.0" fill="rgb(222,33,14)" rx="2" ry="2" />
<text  x="279.95" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="30.4" y="469" width="1.7" height="15.0" fill="rgb(225,4,6)" rx="2" ry="2" />
<text  x="33.40" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (45 samples, 6.48%)</title><rect x="32.1" y="501" width="76.5" height="15.0" fill="rgb(208,1,24)" rx="2" ry="2" />
<text  x="35.10" y="511.5" >cql3_par..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="819.3" y="389" width="1.7" height="15.0" fill="rgb(219,120,33)" rx="2" ry="2" />
<text  x="822.34" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (2 samples, 0.29%)</title><rect x="125.6" y="629" width="3.4" height="15.0" fill="rgb(242,57,49)" rx="2" ry="2" />
<text  x="128.62" y="639.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.29%)</title><rect x="57.6" y="373" width="3.4" height="15.0" fill="rgb(205,41,26)" rx="2" ry="2" />
<text  x="60.61" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="72.9" y="341" width="1.7" height="15.0" fill="rgb(253,166,2)" rx="2" ry="2" />
<text  x="75.91" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.14%)</title><rect x="928.2" y="421" width="1.7" height="15.0" fill="rgb(217,26,35)" rx="2" ry="2" />
<text  x="931.16" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (15 samples, 2.16%)</title><rect x="67.8" y="421" width="25.5" height="15.0" fill="rgb(209,158,0)" rx="2" ry="2" />
<text  x="70.81" y="431.5" >c..</text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (2 samples, 0.29%)</title><rect x="1077.8" y="581" width="3.4" height="15.0" fill="rgb(243,192,26)" rx="2" ry="2" />
<text  x="1080.78" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.29%)</title><rect x="64.4" y="421" width="3.4" height="15.0" fill="rgb(220,134,2)" rx="2" ry="2" />
<text  x="67.41" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="865.2" y="485" width="1.7" height="15.0" fill="rgb(212,44,49)" rx="2" ry="2" />
<text  x="868.24" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (52 samples, 7.49%)</title><rect x="700.3" y="597" width="88.4" height="15.0" fill="rgb(239,43,25)" rx="2" ry="2" />
<text  x="703.32" y="607.5" >seastar::i..</text>
</g>
<g >
<title>database::find_schema (2 samples, 0.29%)</title><rect x="732.6" y="517" width="3.4" height="15.0" fill="rgb(219,40,1)" rx="2" ry="2" />
<text  x="735.62" y="527.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="45.7" y="437" width="1.7" height="15.0" fill="rgb(244,167,9)" rx="2" ry="2" />
<text  x="48.71" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Optional_payload_base (1 samples, 0.14%)</title><rect x="103.5" y="373" width="1.7" height="15.0" fill="rgb(225,119,12)" rx="2" ry="2" />
<text  x="106.52" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (3 samples, 0.43%)</title><rect x="287.1" y="389" width="5.1" height="15.0" fill="rgb(230,218,16)" rx="2" ry="2" />
<text  x="290.15" y="399.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (75 samples, 10.81%)</title><rect x="234.4" y="501" width="127.6" height="15.0" fill="rgb(209,215,1)" rx="2" ry="2" />
<text  x="237.44" y="511.5" >merging_reader&lt;m..</text>
</g>
<g >
<title>database::query (19 samples, 2.74%)</title><rect x="950.3" y="373" width="32.3" height="15.0" fill="rgb(221,116,3)" rx="2" ry="2" />
<text  x="953.26" y="383.5" >da..</text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (139 samples, 20.03%)</title><rect x="798.9" y="581" width="236.4" height="15.0" fill="rgb(219,36,51)" rx="2" ry="2" />
<text  x="801.93" y="591.5" >seastar::concrete_execution_sta..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="598.3" y="485" width="1.7" height="15.0" fill="rgb(244,16,23)" rx="2" ry="2" />
<text  x="601.30" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.14%)</title><rect x="78.0" y="293" width="1.7" height="15.0" fill="rgb(222,49,47)" rx="2" ry="2" />
<text  x="81.01" y="303.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (1 samples, 0.14%)</title><rect x="1052.3" y="325" width="1.7" height="15.0" fill="rgb(248,229,0)" rx="2" ry="2" />
<text  x="1055.28" y="335.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (57 samples, 8.21%)</title><rect x="13.4" y="597" width="96.9" height="15.0" fill="rgb(210,57,15)" rx="2" ry="2" />
<text  x="16.40" y="607.5" >single_node..</text>
</g>
<g >
<title>__strcmp_avx2 (2 samples, 0.29%)</title><rect x="115.4" y="677" width="3.4" height="15.0" fill="rgb(209,42,6)" rx="2" ry="2" />
<text  x="118.42" y="687.5" ></text>
</g>
<g >
<title>strcmp (1 samples, 0.14%)</title><rect x="1188.3" y="725" width="1.7" height="15.0" fill="rgb(248,134,18)" rx="2" ry="2" />
<text  x="1191.30" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.14%)</title><rect x="999.6" y="389" width="1.7" height="15.0" fill="rgb(205,85,23)" rx="2" ry="2" />
<text  x="1002.57" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (27 samples, 3.89%)</title><rect x="732.6" y="533" width="45.9" height="15.0" fill="rgb(234,76,32)" rx="2" ry="2" />
<text  x="735.62" y="543.5" >cql3..</text>
</g>
<g >
<title>mutation_reader_merger::operator (65 samples, 9.37%)</title><rect x="244.6" y="485" width="110.6" height="15.0" fill="rgb(249,157,47)" rx="2" ry="2" />
<text  x="247.64" y="495.5" >mutation_read..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="53" width="1.7" height="15.0" fill="rgb(217,88,24)" rx="2" ry="2" />
<text  x="82.71" y="63.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.14%)</title><rect x="47.4" y="437" width="1.7" height="15.0" fill="rgb(226,54,26)" rx="2" ry="2" />
<text  x="50.41" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (4 samples, 0.58%)</title><rect x="37.2" y="405" width="6.8" height="15.0" fill="rgb(214,55,43)" rx="2" ry="2" />
<text  x="40.20" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="984.3" y="389" width="1.7" height="15.0" fill="rgb(220,158,24)" rx="2" ry="2" />
<text  x="987.27" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.14%)</title><rect x="93.3" y="389" width="1.7" height="15.0" fill="rgb(206,119,37)" rx="2" ry="2" />
<text  x="96.31" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (4 samples, 0.58%)</title><rect x="669.7" y="597" width="6.8" height="15.0" fill="rgb(213,225,5)" rx="2" ry="2" />
<text  x="672.71" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.29%)</title><rect x="84.8" y="325" width="3.4" height="15.0" fill="rgb(235,39,4)" rx="2" ry="2" />
<text  x="87.81" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.58%)</title><rect x="940.1" y="373" width="6.8" height="15.0" fill="rgb(207,59,32)" rx="2" ry="2" />
<text  x="943.06" y="383.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (1 samples, 0.14%)</title><rect x="1045.5" y="485" width="1.7" height="15.0" fill="rgb(219,188,27)" rx="2" ry="2" />
<text  x="1048.48" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="1021.7" y="469" width="1.7" height="15.0" fill="rgb(221,169,34)" rx="2" ry="2" />
<text  x="1024.67" y="479.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="741.1" y="501" width="1.7" height="15.0" fill="rgb(235,89,33)" rx="2" ry="2" />
<text  x="744.12" y="511.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="657.8" y="581" width="3.4" height="15.0" fill="rgb(224,24,45)" rx="2" ry="2" />
<text  x="660.81" y="591.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.14%)</title><rect x="676.5" y="421" width="1.7" height="15.0" fill="rgb(241,21,16)" rx="2" ry="2" />
<text  x="679.51" y="431.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.14%)</title><rect x="610.2" y="501" width="1.7" height="15.0" fill="rgb(249,96,46)" rx="2" ry="2" />
<text  x="613.20" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (1 samples, 0.14%)</title><rect x="797.2" y="469" width="1.7" height="15.0" fill="rgb(216,193,50)" rx="2" ry="2" />
<text  x="800.23" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.14%)</title><rect x="676.5" y="469" width="1.7" height="15.0" fill="rgb(220,3,26)" rx="2" ry="2" />
<text  x="679.51" y="479.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.14%)</title><rect x="753.0" y="437" width="1.7" height="15.0" fill="rgb(240,156,40)" rx="2" ry="2" />
<text  x="756.03" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (8 samples, 1.15%)</title><rect x="32.1" y="437" width="13.6" height="15.0" fill="rgb(219,49,23)" rx="2" ry="2" />
<text  x="35.10" y="447.5" ></text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.14%)</title><rect x="130.7" y="629" width="1.7" height="15.0" fill="rgb(231,41,34)" rx="2" ry="2" />
<text  x="133.72" y="639.5" ></text>
</g>
<g >
<title>free (2 samples, 0.29%)</title><rect x="413.0" y="453" width="3.4" height="15.0" fill="rgb(237,135,0)" rx="2" ry="2" />
<text  x="415.97" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="50.8" y="357" width="1.7" height="15.0" fill="rgb(220,11,4)" rx="2" ry="2" />
<text  x="53.81" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.29%)</title><rect x="64.4" y="373" width="3.4" height="15.0" fill="rgb(247,93,0)" rx="2" ry="2" />
<text  x="67.41" y="383.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.14%)</title><rect x="305.9" y="389" width="1.7" height="15.0" fill="rgb(253,171,7)" rx="2" ry="2" />
<text  x="308.85" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (1 samples, 0.14%)</title><rect x="156.2" y="565" width="1.7" height="15.0" fill="rgb(240,40,50)" rx="2" ry="2" />
<text  x="159.22" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.14%)</title><rect x="100.1" y="373" width="1.7" height="15.0" fill="rgb(210,77,1)" rx="2" ry="2" />
<text  x="103.12" y="383.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.14%)</title><rect x="1052.3" y="309" width="1.7" height="15.0" fill="rgb(237,184,51)" rx="2" ry="2" />
<text  x="1055.28" y="319.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::parse_header (1 samples, 0.14%)</title><rect x="11.7" y="581" width="1.7" height="15.0" fill="rgb(230,128,52)" rx="2" ry="2" />
<text  x="14.70" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="50.8" y="373" width="1.7" height="15.0" fill="rgb(241,19,52)" rx="2" ry="2" />
<text  x="53.81" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.14%)</title><rect x="125.6" y="597" width="1.7" height="15.0" fill="rgb(209,174,2)" rx="2" ry="2" />
<text  x="128.62" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="1072.7" y="549" width="1.7" height="15.0" fill="rgb(215,80,23)" rx="2" ry="2" />
<text  x="1075.68" y="559.5" ></text>
</g>
<g >
<title>posix_memalign (3 samples, 0.43%)</title><rect x="333.1" y="325" width="5.1" height="15.0" fill="rgb(217,105,43)" rx="2" ry="2" />
<text  x="336.05" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;2ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="85" width="1.7" height="15.0" fill="rgb(237,203,17)" rx="2" ry="2" />
<text  x="82.71" y="95.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, true, false, false&gt;::_Optional_payload (1 samples, 0.14%)</title><rect x="103.5" y="389" width="1.7" height="15.0" fill="rgb(238,111,11)" rx="2" ry="2" />
<text  x="106.52" y="399.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="64.4" y="389" width="3.4" height="15.0" fill="rgb(221,204,23)" rx="2" ry="2" />
<text  x="67.41" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (8 samples, 1.15%)</title><rect x="32.1" y="469" width="13.6" height="15.0" fill="rgb(218,203,40)" rx="2" ry="2" />
<text  x="35.10" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (2 samples, 0.29%)</title><rect x="1077.8" y="565" width="3.4" height="15.0" fill="rgb(206,202,4)" rx="2" ry="2" />
<text  x="1080.78" y="575.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 10.37%)</title><rect x="10.0" y="725" width="122.4" height="15.0" fill="rgb(209,157,18)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="1076.1" y="581" width="1.7" height="15.0" fill="rgb(239,100,54)" rx="2" ry="2" />
<text  x="1079.08" y="591.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.14%)</title><rect x="61.0" y="373" width="1.7" height="15.0" fill="rgb(226,211,38)" rx="2" ry="2" />
<text  x="64.01" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.14%)</title><rect x="589.8" y="453" width="1.7" height="15.0" fill="rgb(232,161,21)" rx="2" ry="2" />
<text  x="592.80" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.14%)</title><rect x="64.4" y="277" width="1.7" height="15.0" fill="rgb(254,152,3)" rx="2" ry="2" />
<text  x="67.41" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.14%)</title><rect x="676.5" y="597" width="1.7" height="15.0" fill="rgb(239,15,47)" rx="2" ry="2" />
<text  x="679.51" y="607.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (21 samples, 3.03%)</title><rect x="57.6" y="453" width="35.7" height="15.0" fill="rgb(246,148,53)" rx="2" ry="2" />
<text  x="60.61" y="463.5" >cql..</text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.29%)</title><rect x="615.3" y="549" width="3.4" height="15.0" fill="rgb(254,24,4)" rx="2" ry="2" />
<text  x="618.30" y="559.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.14%)</title><rect x="698.6" y="549" width="1.7" height="15.0" fill="rgb(209,168,16)" rx="2" ry="2" />
<text  x="701.62" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="276.9" y="421" width="1.7" height="15.0" fill="rgb(253,70,1)" rx="2" ry="2" />
<text  x="279.95" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.29%)</title><rect x="151.1" y="565" width="3.4" height="15.0" fill="rgb(205,206,52)" rx="2" ry="2" />
<text  x="154.12" y="575.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (2 samples, 0.29%)</title><rect x="508.2" y="469" width="3.4" height="15.0" fill="rgb(246,206,43)" rx="2" ry="2" />
<text  x="511.18" y="479.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="630.6" y="581" width="1.7" height="15.0" fill="rgb(211,210,17)" rx="2" ry="2" />
<text  x="633.61" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="593.2" y="469" width="1.7" height="15.0" fill="rgb(221,150,38)" rx="2" ry="2" />
<text  x="596.20" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (3 samples, 0.43%)</title><rect x="32.1" y="421" width="5.1" height="15.0" fill="rgb(236,72,12)" rx="2" ry="2" />
<text  x="35.10" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.14%)</title><rect x="88.2" y="373" width="1.7" height="15.0" fill="rgb(241,7,48)" rx="2" ry="2" />
<text  x="91.21" y="383.5" ></text>
</g>
<g >
<title>make_combined_reader (2 samples, 0.29%)</title><rect x="538.8" y="485" width="3.4" height="15.0" fill="rgb(213,181,32)" rx="2" ry="2" />
<text  x="541.79" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (48 samples, 6.92%)</title><rect x="28.7" y="517" width="81.6" height="15.0" fill="rgb(230,70,13)" rx="2" ry="2" />
<text  x="31.70" y="527.5" >cql3_pars..</text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.14%)</title><rect x="851.6" y="501" width="1.7" height="15.0" fill="rgb(247,14,33)" rx="2" ry="2" />
<text  x="854.64" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (8 samples, 1.15%)</title><rect x="32.1" y="453" width="13.6" height="15.0" fill="rgb(228,39,45)" rx="2" ry="2" />
<text  x="35.10" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="78.0" y="149" width="1.7" height="15.0" fill="rgb(237,221,40)" rx="2" ry="2" />
<text  x="81.01" y="159.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1 samples, 0.14%)</title><rect x="1055.7" y="581" width="1.7" height="15.0" fill="rgb(224,44,31)" rx="2" ry="2" />
<text  x="1058.68" y="591.5" ></text>
</g>
<g >
<title>_dl_map_object (1 samples, 0.14%)</title><rect x="1094.8" y="725" width="1.7" height="15.0" fill="rgb(222,226,13)" rx="2" ry="2" />
<text  x="1097.78" y="735.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="95.0" y="357" width="1.7" height="15.0" fill="rgb(242,123,12)" rx="2" ry="2" />
<text  x="98.01" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.14%)</title><rect x="59.3" y="245" width="1.7" height="15.0" fill="rgb(219,171,19)" rx="2" ry="2" />
<text  x="62.31" y="255.5" ></text>
</g>
<g >
<title>partition_entry::read (2 samples, 0.29%)</title><rect x="594.9" y="485" width="3.4" height="15.0" fill="rgb(213,86,47)" rx="2" ry="2" />
<text  x="597.90" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="66.1" y="261" width="1.7" height="15.0" fill="rgb(214,119,21)" rx="2" ry="2" />
<text  x="69.11" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="1028.5" y="485" width="1.7" height="15.0" fill="rgb(252,39,30)" rx="2" ry="2" />
<text  x="1031.47" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="542.2" y="485" width="1.7" height="15.0" fill="rgb(236,72,1)" rx="2" ry="2" />
<text  x="545.19" y="495.5" ></text>
</g>
<g >
<title>[unknown] (61 samples, 8.79%)</title><rect x="10.0" y="709" width="103.7" height="15.0" fill="rgb(223,105,15)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="678.2" y="565" width="1.7" height="15.0" fill="rgb(237,93,49)" rx="2" ry="2" />
<text  x="681.21" y="575.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (78 samples, 11.24%)</title><rect x="885.6" y="469" width="132.7" height="15.0" fill="rgb(231,151,49)" rx="2" ry="2" />
<text  x="888.65" y="479.5" >service::storage..</text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (1 samples, 0.14%)</title><rect x="809.1" y="549" width="1.7" height="15.0" fill="rgb(246,195,44)" rx="2" ry="2" />
<text  x="812.14" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="165" width="1.7" height="15.0" fill="rgb(225,124,24)" rx="2" ry="2" />
<text  x="82.71" y="175.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (32 samples, 4.61%)</title><rect x="727.5" y="549" width="54.4" height="15.0" fill="rgb(244,118,17)" rx="2" ry="2" />
<text  x="730.52" y="559.5" >cql3:..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 1.01%)</title><rect x="1037.0" y="549" width="11.9" height="15.0" fill="rgb(236,169,48)" rx="2" ry="2" />
<text  x="1039.97" y="559.5" ></text>
</g>
<g >
<title>query_state::query_state (2 samples, 0.29%)</title><rect x="611.9" y="549" width="3.4" height="15.0" fill="rgb(210,114,53)" rx="2" ry="2" />
<text  x="614.90" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.14%)</title><rect x="95.0" y="213" width="1.7" height="15.0" fill="rgb(236,37,31)" rx="2" ry="2" />
<text  x="98.01" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.14%)</title><rect x="78.0" y="133" width="1.7" height="15.0" fill="rgb(217,218,52)" rx="2" ry="2" />
<text  x="81.01" y="143.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.29%)</title><rect x="57.6" y="309" width="3.4" height="15.0" fill="rgb(215,168,45)" rx="2" ry="2" />
<text  x="60.61" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.43%)</title><rect x="224.2" y="549" width="5.1" height="15.0" fill="rgb(233,21,16)" rx="2" ry="2" />
<text  x="227.24" y="559.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.14%)</title><rect x="676.5" y="437" width="1.7" height="15.0" fill="rgb(243,205,1)" rx="2" ry="2" />
<text  x="679.51" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (8 samples, 1.15%)</title><rect x="499.7" y="485" width="13.6" height="15.0" fill="rgb(231,205,38)" rx="2" ry="2" />
<text  x="502.68" y="495.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.58%)</title><rect x="909.5" y="437" width="6.8" height="15.0" fill="rgb(236,179,13)" rx="2" ry="2" />
<text  x="912.45" y="447.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_token_present (1 samples, 0.14%)</title><rect x="38.9" y="373" width="1.7" height="15.0" fill="rgb(219,134,42)" rx="2" ry="2" />
<text  x="41.90" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (3 samples, 0.43%)</title><rect x="1050.6" y="437" width="5.1" height="15.0" fill="rgb(217,20,20)" rx="2" ry="2" />
<text  x="1053.58" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="654.4" y="581" width="1.7" height="15.0" fill="rgb(233,72,43)" rx="2" ry="2" />
<text  x="657.41" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="325" width="1.7" height="15.0" fill="rgb(252,91,47)" rx="2" ry="2" />
<text  x="82.71" y="335.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (8 samples, 1.15%)</title><rect x="1035.3" y="581" width="13.6" height="15.0" fill="rgb(246,218,11)" rx="2" ry="2" />
<text  x="1038.27" y="591.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::operator= (1 samples, 0.14%)</title><rect x="54.2" y="437" width="1.7" height="15.0" fill="rgb(206,127,34)" rx="2" ry="2" />
<text  x="57.21" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.14%)</title><rect x="916.3" y="437" width="1.7" height="15.0" fill="rgb(215,47,41)" rx="2" ry="2" />
<text  x="919.25" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (2 samples, 0.29%)</title><rect x="642.5" y="565" width="3.4" height="15.0" fill="rgb(228,107,32)" rx="2" ry="2" />
<text  x="645.51" y="575.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (8 samples, 1.15%)</title><rect x="1004.7" y="421" width="13.6" height="15.0" fill="rgb(238,160,12)" rx="2" ry="2" />
<text  x="1007.67" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.43%)</title><rect x="941.8" y="357" width="5.1" height="15.0" fill="rgb(248,9,42)" rx="2" ry="2" />
<text  x="944.76" y="367.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="754.7" y="437" width="1.7" height="15.0" fill="rgb(227,34,4)" rx="2" ry="2" />
<text  x="757.73" y="447.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="78.0" y="181" width="1.7" height="15.0" fill="rgb(242,129,8)" rx="2" ry="2" />
<text  x="81.01" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.86%)</title><rect x="122.2" y="677" width="10.2" height="15.0" fill="rgb(242,102,24)" rx="2" ry="2" />
<text  x="125.22" y="687.5" ></text>
</g>
<g >
<title>std::forward&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.14%)</title><rect x="33.8" y="357" width="1.7" height="15.0" fill="rgb(206,137,53)" rx="2" ry="2" />
<text  x="36.80" y="367.5" ></text>
</g>
<g >
<title>row_cache::make_reader (3 samples, 0.43%)</title><rect x="605.1" y="501" width="5.1" height="15.0" fill="rgb(253,167,47)" rx="2" ry="2" />
<text  x="608.10" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.14%)</title><rect x="96.7" y="293" width="1.7" height="15.0" fill="rgb(253,102,22)" rx="2" ry="2" />
<text  x="99.71" y="303.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.14%)</title><rect x="676.5" y="549" width="1.7" height="15.0" fill="rgb(223,63,34)" rx="2" ry="2" />
<text  x="679.51" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="45.7" y="341" width="1.7" height="15.0" fill="rgb(226,15,37)" rx="2" ry="2" />
<text  x="48.71" y="351.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (3 samples, 0.43%)</title><rect x="113.7" y="709" width="5.1" height="15.0" fill="rgb(205,125,2)" rx="2" ry="2" />
<text  x="116.72" y="719.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (50 samples, 7.20%)</title><rect x="526.9" y="549" width="85.0" height="15.0" fill="rgb(205,63,41)" rx="2" ry="2" />
<text  x="529.89" y="559.5" >query::que..</text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="819.3" y="421" width="1.7" height="15.0" fill="rgb(238,37,42)" rx="2" ry="2" />
<text  x="822.34" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.14%)</title><rect x="1052.3" y="293" width="1.7" height="15.0" fill="rgb(243,62,21)" rx="2" ry="2" />
<text  x="1055.28" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.14%)</title><rect x="84.8" y="261" width="1.7" height="15.0" fill="rgb(227,68,11)" rx="2" ry="2" />
<text  x="87.81" y="271.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (57 samples, 8.21%)</title><rect x="13.4" y="581" width="96.9" height="15.0" fill="rgb(221,199,12)" rx="2" ry="2" />
<text  x="16.40" y="591.5" >cql3::query..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.14%)</title><rect x="30.4" y="357" width="1.7" height="15.0" fill="rgb(235,67,3)" rx="2" ry="2" />
<text  x="33.40" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.43%)</title><rect x="1050.6" y="501" width="5.1" height="15.0" fill="rgb(234,167,9)" rx="2" ry="2" />
<text  x="1053.58" y="511.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.14%)</title><rect x="307.6" y="389" width="1.7" height="15.0" fill="rgb(244,22,10)" rx="2" ry="2" />
<text  x="310.55" y="399.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.14%)</title><rect x="95.0" y="245" width="1.7" height="15.0" fill="rgb(205,134,38)" rx="2" ry="2" />
<text  x="98.01" y="255.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (13 samples, 1.87%)</title><rect x="316.1" y="357" width="22.1" height="15.0" fill="rgb(225,95,11)" rx="2" ry="2" />
<text  x="319.05" y="367.5" >a..</text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.14%)</title><rect x="603.4" y="501" width="1.7" height="15.0" fill="rgb(220,17,18)" rx="2" ry="2" />
<text  x="606.40" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_permissions_statement, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt;::~unique_ptr (1 samples, 0.14%)</title><rect x="108.6" y="501" width="1.7" height="15.0" fill="rgb(234,183,34)" rx="2" ry="2" />
<text  x="111.62" y="511.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.14%)</title><rect x="304.1" y="373" width="1.8" height="15.0" fill="rgb(251,65,31)" rx="2" ry="2" />
<text  x="307.15" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (1 samples, 0.14%)</title><rect x="52.5" y="389" width="1.7" height="15.0" fill="rgb(224,144,29)" rx="2" ry="2" />
<text  x="55.51" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="849.9" y="501" width="1.7" height="15.0" fill="rgb(240,11,11)" rx="2" ry="2" />
<text  x="852.94" y="511.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="666.3" y="581" width="1.7" height="15.0" fill="rgb(213,105,42)" rx="2" ry="2" />
<text  x="669.31" y="591.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (1 samples, 0.14%)</title><rect x="730.9" y="533" width="1.7" height="15.0" fill="rgb(244,93,4)" rx="2" ry="2" />
<text  x="733.92" y="543.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (3 samples, 0.43%)</title><rect x="1018.3" y="517" width="5.1" height="15.0" fill="rgb(234,68,54)" rx="2" ry="2" />
<text  x="1021.27" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (4 samples, 0.58%)</title><rect x="37.2" y="389" width="6.8" height="15.0" fill="rgb(230,52,9)" rx="2" ry="2" />
<text  x="40.20" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.29%)</title><rect x="49.1" y="421" width="3.4" height="15.0" fill="rgb(242,30,37)" rx="2" ry="2" />
<text  x="52.11" y="431.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.58%)</title><rect x="1096.5" y="725" width="6.8" height="15.0" fill="rgb(225,131,10)" rx="2" ry="2" />
<text  x="1099.48" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="645.9" y="549" width="1.7" height="15.0" fill="rgb(246,34,14)" rx="2" ry="2" />
<text  x="648.91" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="722.4" y="549" width="1.7" height="15.0" fill="rgb(206,168,42)" rx="2" ry="2" />
<text  x="725.42" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (4 samples, 0.58%)</title><rect x="37.2" y="421" width="6.8" height="15.0" fill="rgb(251,117,9)" rx="2" ry="2" />
<text  x="40.20" y="431.5" ></text>
</g>
<g >
<title>service::client_state::has_access (12 samples, 1.73%)</title><rect x="744.5" y="501" width="20.4" height="15.0" fill="rgb(250,179,41)" rx="2" ry="2" />
<text  x="747.52" y="511.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="30.4" y="453" width="1.7" height="15.0" fill="rgb(207,222,46)" rx="2" ry="2" />
<text  x="33.40" y="463.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (35 samples, 5.04%)</title><rect x="1128.8" y="725" width="59.5" height="15.0" fill="rgb(235,220,36)" rx="2" ry="2" />
<text  x="1131.79" y="735.5" >sched_..</text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.14%)</title><rect x="608.5" y="469" width="1.7" height="15.0" fill="rgb(231,194,23)" rx="2" ry="2" />
<text  x="611.50" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (3 samples, 0.43%)</title><rect x="793.8" y="533" width="5.1" height="15.0" fill="rgb(215,128,0)" rx="2" ry="2" />
<text  x="796.83" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.14%)</title><rect x="88.2" y="341" width="1.7" height="15.0" fill="rgb(216,5,42)" rx="2" ry="2" />
<text  x="91.21" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.14%)</title><rect x="1052.3" y="277" width="1.7" height="15.0" fill="rgb(243,177,30)" rx="2" ry="2" />
<text  x="1055.28" y="287.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.14%)</title><rect x="95.0" y="197" width="1.7" height="15.0" fill="rgb(216,214,32)" rx="2" ry="2" />
<text  x="98.01" y="207.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.29%)</title><rect x="57.6" y="389" width="3.4" height="15.0" fill="rgb(215,9,24)" rx="2" ry="2" />
<text  x="60.61" y="399.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (1 samples, 0.14%)</title><rect x="1031.9" y="501" width="1.7" height="15.0" fill="rgb(241,196,50)" rx="2" ry="2" />
<text  x="1034.87" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="20.2" y="485" width="1.7" height="15.0" fill="rgb(250,195,2)" rx="2" ry="2" />
<text  x="23.20" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.14%)</title><rect x="45.7" y="277" width="1.7" height="15.0" fill="rgb(206,29,50)" rx="2" ry="2" />
<text  x="48.71" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.14%)</title><rect x="50.8" y="293" width="1.7" height="15.0" fill="rgb(216,99,40)" rx="2" ry="2" />
<text  x="53.81" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="293" width="1.7" height="15.0" fill="rgb(219,6,52)" rx="2" ry="2" />
<text  x="82.71" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (22 samples, 3.17%)</title><rect x="55.9" y="469" width="37.4" height="15.0" fill="rgb(214,48,1)" rx="2" ry="2" />
<text  x="58.91" y="479.5" >cql..</text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.14%)</title><rect x="1091.4" y="629" width="1.7" height="15.0" fill="rgb(252,130,2)" rx="2" ry="2" />
<text  x="1094.38" y="639.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="28.7" y="469" width="1.7" height="15.0" fill="rgb(225,221,10)" rx="2" ry="2" />
<text  x="31.70" y="479.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (1 samples, 0.14%)</title><rect x="1042.1" y="437" width="1.7" height="15.0" fill="rgb(245,33,8)" rx="2" ry="2" />
<text  x="1045.07" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_cql (2 samples, 0.29%)</title><rect x="657.8" y="597" width="3.4" height="15.0" fill="rgb(228,181,42)" rx="2" ry="2" />
<text  x="660.81" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base (1 samples, 0.14%)</title><rect x="103.5" y="421" width="1.7" height="15.0" fill="rgb(224,139,50)" rx="2" ry="2" />
<text  x="106.52" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.14%)</title><rect x="101.8" y="357" width="1.7" height="15.0" fill="rgb(234,141,26)" rx="2" ry="2" />
<text  x="104.82" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (10 samples, 1.44%)</title><rect x="404.5" y="501" width="17.0" height="15.0" fill="rgb(228,140,12)" rx="2" ry="2" />
<text  x="407.47" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="271.8" y="389" width="5.1" height="15.0" fill="rgb(238,15,36)" rx="2" ry="2" />
<text  x="274.84" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="30.4" y="373" width="1.7" height="15.0" fill="rgb(235,30,6)" rx="2" ry="2" />
<text  x="33.40" y="383.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.14%)</title><rect x="52.5" y="453" width="1.7" height="15.0" fill="rgb(243,54,53)" rx="2" ry="2" />
<text  x="55.51" y="463.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.14%)</title><rect x="174.9" y="533" width="1.7" height="15.0" fill="rgb(228,36,19)" rx="2" ry="2" />
<text  x="177.93" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (3 samples, 0.43%)</title><rect x="826.1" y="421" width="5.1" height="15.0" fill="rgb(214,204,23)" rx="2" ry="2" />
<text  x="829.14" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="245" width="1.7" height="15.0" fill="rgb(242,72,53)" rx="2" ry="2" />
<text  x="82.71" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="827.8" y="405" width="1.7" height="15.0" fill="rgb(241,59,54)" rx="2" ry="2" />
<text  x="830.84" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.14%)</title><rect x="1089.7" y="597" width="1.7" height="15.0" fill="rgb(223,125,7)" rx="2" ry="2" />
<text  x="1092.68" y="607.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (45 samples, 6.48%)</title><rect x="270.1" y="437" width="76.6" height="15.0" fill="rgb(225,182,33)" rx="2" ry="2" />
<text  x="273.14" y="447.5" >partitio..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.14%)</title><rect x="28.7" y="325" width="1.7" height="15.0" fill="rgb(242,179,49)" rx="2" ry="2" />
<text  x="31.70" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="229" width="1.7" height="15.0" fill="rgb(238,85,30)" rx="2" ry="2" />
<text  x="82.71" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="67.8" y="341" width="1.7" height="15.0" fill="rgb(218,165,13)" rx="2" ry="2" />
<text  x="70.81" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="197" width="1.7" height="15.0" fill="rgb(249,123,7)" rx="2" ry="2" />
<text  x="82.71" y="207.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.14%)</title><rect x="96.7" y="357" width="1.7" height="15.0" fill="rgb(215,96,7)" rx="2" ry="2" />
<text  x="99.71" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.14%)</title><rect x="28.7" y="341" width="1.7" height="15.0" fill="rgb(213,138,15)" rx="2" ry="2" />
<text  x="31.70" y="351.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (1 samples, 0.14%)</title><rect x="797.2" y="437" width="1.7" height="15.0" fill="rgb(214,2,45)" rx="2" ry="2" />
<text  x="800.23" y="447.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.14%)</title><rect x="59.3" y="229" width="1.7" height="15.0" fill="rgb(237,105,44)" rx="2" ry="2" />
<text  x="62.31" y="239.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (1 samples, 0.14%)</title><rect x="829.5" y="405" width="1.7" height="15.0" fill="rgb(253,160,17)" rx="2" ry="2" />
<text  x="832.54" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="999.6" y="421" width="1.7" height="15.0" fill="rgb(229,164,8)" rx="2" ry="2" />
<text  x="1002.57" y="431.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.14%)</title><rect x="113.7" y="677" width="1.7" height="15.0" fill="rgb(208,0,18)" rx="2" ry="2" />
<text  x="116.72" y="687.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (2 samples, 0.29%)</title><rect x="1050.6" y="405" width="3.4" height="15.0" fill="rgb(220,40,13)" rx="2" ry="2" />
<text  x="1053.58" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="958.8" y="325" width="3.4" height="15.0" fill="rgb(216,152,37)" rx="2" ry="2" />
<text  x="961.76" y="335.5" ></text>
</g>
<g >
<title>__libc_start_main (565 samples, 81.41%)</title><rect x="132.4" y="725" width="960.7" height="15.0" fill="rgb(244,198,41)" rx="2" ry="2" />
<text  x="135.42" y="735.5" >__libc_start_main</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="540.5" y="453" width="1.7" height="15.0" fill="rgb(228,217,36)" rx="2" ry="2" />
<text  x="543.49" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.14%)</title><rect x="23.6" y="501" width="1.7" height="15.0" fill="rgb(213,224,40)" rx="2" ry="2" />
<text  x="26.60" y="511.5" ></text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.14%)</title><rect x="1091.4" y="645" width="1.7" height="15.0" fill="rgb(249,73,29)" rx="2" ry="2" />
<text  x="1094.38" y="655.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="719.0" y="533" width="1.7" height="15.0" fill="rgb(248,229,27)" rx="2" ry="2" />
<text  x="722.02" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="95.0" y="325" width="1.7" height="15.0" fill="rgb(251,150,22)" rx="2" ry="2" />
<text  x="98.01" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.14%)</title><rect x="95.0" y="229" width="1.7" height="15.0" fill="rgb(220,46,15)" rx="2" ry="2" />
<text  x="98.01" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.14%)</title><rect x="55.9" y="453" width="1.7" height="15.0" fill="rgb(213,21,9)" rx="2" ry="2" />
<text  x="58.91" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.14%)</title><rect x="146.0" y="581" width="1.7" height="15.0" fill="rgb(239,135,7)" rx="2" ry="2" />
<text  x="149.02" y="591.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (134 samples, 19.31%)</title><rect x="807.4" y="565" width="227.9" height="15.0" fill="rgb(248,86,28)" rx="2" ry="2" />
<text  x="810.44" y="575.5" >seastar::noncopyable_function&lt;..</text>
</g>
<g >
<title>auth::resource::parent (2 samples, 0.29%)</title><rect x="746.2" y="485" width="3.4" height="15.0" fill="rgb(233,66,48)" rx="2" ry="2" />
<text  x="749.22" y="495.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.14%)</title><rect x="557.5" y="485" width="1.7" height="15.0" fill="rgb(248,173,53)" rx="2" ry="2" />
<text  x="560.49" y="495.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::raw (1 samples, 0.14%)</title><rect x="103.5" y="453" width="1.7" height="15.0" fill="rgb(207,167,5)" rx="2" ry="2" />
<text  x="106.52" y="463.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (6 samples, 0.86%)</title><rect x="839.7" y="485" width="10.2" height="15.0" fill="rgb(246,60,27)" rx="2" ry="2" />
<text  x="842.74" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="781.9" y="533" width="1.7" height="15.0" fill="rgb(227,33,41)" rx="2" ry="2" />
<text  x="784.93" y="543.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.14%)</title><rect x="30.4" y="485" width="1.7" height="15.0" fill="rgb(220,113,3)" rx="2" ry="2" />
<text  x="33.40" y="495.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (2 samples, 0.29%)</title><rect x="1050.6" y="341" width="3.4" height="15.0" fill="rgb(251,61,26)" rx="2" ry="2" />
<text  x="1053.58" y="351.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.14%)</title><rect x="841.4" y="469" width="1.7" height="15.0" fill="rgb(246,121,14)" rx="2" ry="2" />
<text  x="844.44" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="878.8" y="453" width="5.1" height="15.0" fill="rgb(215,4,3)" rx="2" ry="2" />
<text  x="881.85" y="463.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="81.4" y="341" width="1.7" height="15.0" fill="rgb(220,217,20)" rx="2" ry="2" />
<text  x="84.41" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::untyped_constant (1 samples, 0.14%)</title><rect x="79.7" y="37" width="1.7" height="15.0" fill="rgb(211,161,31)" rx="2" ry="2" />
<text  x="82.71" y="47.5" ></text>
</g>
<g >
<title>row::~row (8 samples, 1.15%)</title><rect x="406.2" y="485" width="13.6" height="15.0" fill="rgb(235,140,8)" rx="2" ry="2" />
<text  x="409.17" y="495.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="506.5" y="437" width="1.7" height="15.0" fill="rgb(218,224,53)" rx="2" ry="2" />
<text  x="509.48" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="37.2" y="357" width="1.7" height="15.0" fill="rgb(245,224,38)" rx="2" ry="2" />
<text  x="40.20" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="96.7" y="277" width="1.7" height="15.0" fill="rgb(206,24,1)" rx="2" ry="2" />
<text  x="99.71" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="28.7" y="453" width="1.7" height="15.0" fill="rgb(208,41,18)" rx="2" ry="2" />
<text  x="31.70" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (4 samples, 0.58%)</title><rect x="96.7" y="437" width="6.8" height="15.0" fill="rgb(224,124,29)" rx="2" ry="2" />
<text  x="99.71" y="447.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (2 samples, 0.29%)</title><rect x="1045.5" y="501" width="3.4" height="15.0" fill="rgb(245,130,12)" rx="2" ry="2" />
<text  x="1048.48" y="511.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.14%)</title><rect x="957.1" y="357" width="1.7" height="15.0" fill="rgb(240,207,18)" rx="2" ry="2" />
<text  x="960.06" y="367.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (65 samples, 9.37%)</title><rect x="377.3" y="517" width="110.5" height="15.0" fill="rgb(240,76,8)" rx="2" ry="2" />
<text  x="380.26" y="527.5" >seastar::do_w..</text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="161.3" y="597" width="1.7" height="15.0" fill="rgb(238,195,8)" rx="2" ry="2" />
<text  x="164.33" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.14%)</title><rect x="572.8" y="469" width="1.7" height="15.0" fill="rgb(246,109,49)" rx="2" ry="2" />
<text  x="575.80" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.14%)</title><rect x="93.3" y="421" width="1.7" height="15.0" fill="rgb(210,38,9)" rx="2" ry="2" />
<text  x="96.31" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.14%)</title><rect x="35.5" y="373" width="1.7" height="15.0" fill="rgb(214,182,29)" rx="2" ry="2" />
<text  x="38.50" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (3 samples, 0.43%)</title><rect x="826.1" y="437" width="5.1" height="15.0" fill="rgb(205,167,41)" rx="2" ry="2" />
<text  x="829.14" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.14%)</title><rect x="30.4" y="341" width="1.7" height="15.0" fill="rgb(215,202,44)" rx="2" ry="2" />
<text  x="33.40" y="351.5" ></text>
</g>
<g >
<title>main (565 samples, 81.41%)</title><rect x="132.4" y="709" width="960.7" height="15.0" fill="rgb(252,39,31)" rx="2" ry="2" />
<text  x="135.42" y="719.5" >main</text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="822.7" y="421" width="3.4" height="15.0" fill="rgb(241,184,51)" rx="2" ry="2" />
<text  x="825.74" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (9 samples, 1.30%)</title><rect x="817.6" y="485" width="15.3" height="15.0" fill="rgb(242,191,7)" rx="2" ry="2" />
<text  x="820.64" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (1 samples, 0.14%)</title><rect x="13.4" y="549" width="1.7" height="15.0" fill="rgb(218,83,39)" rx="2" ry="2" />
<text  x="16.40" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="30.4" y="437" width="1.7" height="15.0" fill="rgb(205,80,47)" rx="2" ry="2" />
<text  x="33.40" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false&gt;::operator= (1 samples, 0.14%)</title><rect x="54.2" y="421" width="1.7" height="15.0" fill="rgb(206,133,39)" rx="2" ry="2" />
<text  x="57.21" y="431.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.14%)</title><rect x="130.7" y="661" width="1.7" height="15.0" fill="rgb(214,150,44)" rx="2" ry="2" />
<text  x="133.72" y="671.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (3 samples, 0.43%)</title><rect x="333.1" y="341" width="5.1" height="15.0" fill="rgb(235,191,15)" rx="2" ry="2" />
<text  x="336.05" y="351.5" ></text>
</g>
<g >
<title>table::estimate_read_memory_cost (1 samples, 0.14%)</title><rect x="980.9" y="357" width="1.7" height="15.0" fill="rgb(205,95,43)" rx="2" ry="2" />
<text  x="983.86" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="181" width="1.7" height="15.0" fill="rgb(248,80,35)" rx="2" ry="2" />
<text  x="82.71" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="149.4" y="549" width="1.7" height="15.0" fill="rgb(249,98,22)" rx="2" ry="2" />
<text  x="152.42" y="559.5" ></text>
</g>
<g >
<title>database::find_schema (3 samples, 0.43%)</title><rect x="768.3" y="485" width="5.1" height="15.0" fill="rgb(247,21,17)" rx="2" ry="2" />
<text  x="771.33" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.14%)</title><rect x="906.1" y="453" width="1.7" height="15.0" fill="rgb(219,228,23)" rx="2" ry="2" />
<text  x="909.05" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.14%)</title><rect x="78.0" y="309" width="1.7" height="15.0" fill="rgb(240,158,42)" rx="2" ry="2" />
<text  x="81.01" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="1093.1" y="725" width="1.7" height="15.0" fill="rgb(231,123,37)" rx="2" ry="2" />
<text  x="1096.08" y="735.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.14%)</title><rect x="69.5" y="389" width="1.7" height="15.0" fill="rgb(210,68,47)" rx="2" ry="2" />
<text  x="72.51" y="399.5" ></text>
</g>
<g >
<title>database::apply_in_memory (5 samples, 0.72%)</title><rect x="1037.0" y="501" width="8.5" height="15.0" fill="rgb(223,39,11)" rx="2" ry="2" />
<text  x="1039.97" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="865.2" y="469" width="1.7" height="15.0" fill="rgb(222,209,39)" rx="2" ry="2" />
<text  x="868.24" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (76 samples, 10.95%)</title><rect x="232.7" y="533" width="129.3" height="15.0" fill="rgb(222,146,10)" rx="2" ry="2" />
<text  x="235.74" y="543.5" >flat_mutation_re..</text>
</g>
<g >
<title>row::compact_and_expire (5 samples, 0.72%)</title><rect x="479.3" y="501" width="8.5" height="15.0" fill="rgb(241,174,31)" rx="2" ry="2" />
<text  x="482.28" y="511.5" ></text>
</g>
<g >
<title>free (2 samples, 0.29%)</title><rect x="416.4" y="469" width="3.4" height="15.0" fill="rgb(215,126,21)" rx="2" ry="2" />
<text  x="419.37" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (6 samples, 0.86%)</title><rect x="93.3" y="469" width="10.2" height="15.0" fill="rgb(237,42,1)" rx="2" ry="2" />
<text  x="96.31" y="479.5" ></text>
</g>
<g >
<title>create_partitions (59 samples, 8.50%)</title><rect x="10.0" y="613" width="100.3" height="15.0" fill="rgb(234,11,54)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >create_parti..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (2 samples, 0.29%)</title><rect x="84.8" y="309" width="3.4" height="15.0" fill="rgb(241,184,26)" rx="2" ry="2" />
<text  x="87.81" y="319.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (2 samples, 0.29%)</title><rect x="16.8" y="485" width="3.4" height="15.0" fill="rgb(239,10,11)" rx="2" ry="2" />
<text  x="19.80" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.14%)</title><rect x="511.6" y="469" width="1.7" height="15.0" fill="rgb(232,119,47)" rx="2" ry="2" />
<text  x="514.59" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (2 samples, 0.29%)</title><rect x="1050.6" y="389" width="3.4" height="15.0" fill="rgb(231,37,52)" rx="2" ry="2" />
<text  x="1053.58" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (3 samples, 0.43%)</title><rect x="346.7" y="437" width="5.1" height="15.0" fill="rgb(240,132,12)" rx="2" ry="2" />
<text  x="349.66" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.14%)</title><rect x="999.6" y="357" width="1.7" height="15.0" fill="rgb(251,48,9)" rx="2" ry="2" />
<text  x="1002.57" y="367.5" ></text>
</g>
<g >
<title>table::set_hit_rate (2 samples, 0.29%)</title><rect x="696.9" y="565" width="3.4" height="15.0" fill="rgb(225,116,52)" rx="2" ry="2" />
<text  x="699.92" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="1021.7" y="485" width="1.7" height="15.0" fill="rgb(213,150,29)" rx="2" ry="2" />
<text  x="1024.67" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="999.6" y="437" width="1.7" height="15.0" fill="rgb(236,51,0)" rx="2" ry="2" />
<text  x="1002.57" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (4 samples, 0.58%)</title><rect x="583.0" y="453" width="6.8" height="15.0" fill="rgb(240,190,39)" rx="2" ry="2" />
<text  x="586.00" y="463.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.14%)</title><rect x="307.6" y="373" width="1.7" height="15.0" fill="rgb(216,219,51)" rx="2" ry="2" />
<text  x="310.55" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (18 samples, 2.59%)</title><rect x="309.3" y="373" width="30.6" height="15.0" fill="rgb(226,12,40)" rx="2" ry="2" />
<text  x="312.25" y="383.5" >co..</text>
</g>
<g >
<title>freeze (2 samples, 0.29%)</title><rect x="1050.6" y="357" width="3.4" height="15.0" fill="rgb(219,136,45)" rx="2" ry="2" />
<text  x="1053.58" y="367.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::substr[abi:cxx11] (2 samples, 0.29%)</title><rect x="84.8" y="357" width="3.4" height="15.0" fill="rgb(206,33,9)" rx="2" ry="2" />
<text  x="87.81" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.14%)</title><rect x="86.5" y="277" width="1.7" height="15.0" fill="rgb(205,123,37)" rx="2" ry="2" />
<text  x="89.51" y="287.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (25 samples, 3.60%)</title><rect x="736.0" y="517" width="42.5" height="15.0" fill="rgb(246,49,4)" rx="2" ry="2" />
<text  x="739.02" y="527.5" >serv..</text>
</g>
<g >
<title>mutation_reader_merger::operator (3 samples, 0.43%)</title><rect x="246.3" y="469" width="5.1" height="15.0" fill="rgb(254,174,18)" rx="2" ry="2" />
<text  x="249.34" y="479.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.14%)</title><rect x="559.2" y="485" width="1.7" height="15.0" fill="rgb(250,193,23)" rx="2" ry="2" />
<text  x="562.19" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.14%)</title><rect x="123.9" y="645" width="1.7" height="15.0" fill="rgb(232,14,37)" rx="2" ry="2" />
<text  x="126.92" y="655.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.29%)</title><rect x="775.1" y="485" width="3.4" height="15.0" fill="rgb(243,147,25)" rx="2" ry="2" />
<text  x="778.13" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="652.7" y="565" width="1.7" height="15.0" fill="rgb(234,154,27)" rx="2" ry="2" />
<text  x="655.71" y="575.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (2 samples, 0.29%)</title><rect x="635.7" y="597" width="3.4" height="15.0" fill="rgb(234,157,53)" rx="2" ry="2" />
<text  x="638.71" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="370.5" y="501" width="5.1" height="15.0" fill="rgb(205,67,37)" rx="2" ry="2" />
<text  x="373.46" y="511.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (9 samples, 1.30%)</title><rect x="962.2" y="341" width="15.3" height="15.0" fill="rgb(215,89,13)" rx="2" ry="2" />
<text  x="965.16" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="72.9" y="261" width="1.7" height="15.0" fill="rgb(231,10,21)" rx="2" ry="2" />
<text  x="75.91" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.29%)</title><rect x="57.6" y="325" width="3.4" height="15.0" fill="rgb(228,164,29)" rx="2" ry="2" />
<text  x="60.61" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="72.9" y="277" width="1.7" height="15.0" fill="rgb(221,54,13)" rx="2" ry="2" />
<text  x="75.91" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (17 samples, 2.45%)</title><rect x="1057.4" y="597" width="28.9" height="15.0" fill="rgb(212,201,35)" rx="2" ry="2" />
<text  x="1060.38" y="607.5" >se..</text>
</g>
<g >
<title>cql3_parser::CqlParser::value (11 samples, 1.59%)</title><rect x="72.9" y="405" width="18.7" height="15.0" fill="rgb(250,91,40)" rx="2" ry="2" />
<text  x="75.91" y="415.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.14%)</title><rect x="127.3" y="581" width="1.7" height="15.0" fill="rgb(224,194,6)" rx="2" ry="2" />
<text  x="130.32" y="591.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (10 samples, 1.44%)</title><rect x="452.1" y="469" width="17.0" height="15.0" fill="rgb(238,167,44)" rx="2" ry="2" />
<text  x="455.07" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="25.3" y="533" width="1.7" height="15.0" fill="rgb(232,118,2)" rx="2" ry="2" />
<text  x="28.30" y="543.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.14%)</title><rect x="343.3" y="421" width="1.7" height="15.0" fill="rgb(218,146,35)" rx="2" ry="2" />
<text  x="346.26" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="30.4" y="421" width="1.7" height="15.0" fill="rgb(229,114,22)" rx="2" ry="2" />
<text  x="33.40" y="431.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.14%)</title><rect x="764.9" y="501" width="1.7" height="15.0" fill="rgb(254,122,36)" rx="2" ry="2" />
<text  x="767.93" y="511.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (1 samples, 0.14%)</title><rect x="1054.0" y="405" width="1.7" height="15.0" fill="rgb(249,156,35)" rx="2" ry="2" />
<text  x="1056.98" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="50.8" y="325" width="1.7" height="15.0" fill="rgb(235,172,43)" rx="2" ry="2" />
<text  x="53.81" y="335.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (2 samples, 0.29%)</title><rect x="783.6" y="549" width="3.4" height="15.0" fill="rgb(225,50,29)" rx="2" ry="2" />
<text  x="786.63" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="117" width="1.7" height="15.0" fill="rgb(243,197,19)" rx="2" ry="2" />
<text  x="82.71" y="127.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="45.7" y="325" width="1.7" height="15.0" fill="rgb(251,175,12)" rx="2" ry="2" />
<text  x="48.71" y="335.5" ></text>
</g>
<g >
<title>row_cache::invalidate (1 samples, 0.14%)</title><rect x="676.5" y="565" width="1.7" height="15.0" fill="rgb(223,220,50)" rx="2" ry="2" />
<text  x="679.51" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.14%)</title><rect x="67.8" y="389" width="1.7" height="15.0" fill="rgb(244,20,20)" rx="2" ry="2" />
<text  x="70.81" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.29%)</title><rect x="84.8" y="293" width="3.4" height="15.0" fill="rgb(243,193,49)" rx="2" ry="2" />
<text  x="87.81" y="303.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (2 samples, 0.29%)</title><rect x="339.9" y="405" width="3.4" height="15.0" fill="rgb(215,125,36)" rx="2" ry="2" />
<text  x="342.86" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.14%)</title><rect x="96.7" y="325" width="1.7" height="15.0" fill="rgb(247,126,21)" rx="2" ry="2" />
<text  x="99.71" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.29%)</title><rect x="49.1" y="437" width="3.4" height="15.0" fill="rgb(206,175,10)" rx="2" ry="2" />
<text  x="52.11" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.14%)</title><rect x="180.0" y="533" width="1.7" height="15.0" fill="rgb(232,203,5)" rx="2" ry="2" />
<text  x="183.03" y="543.5" ></text>
</g>
<g >
<title>do_cql_test (61 samples, 8.79%)</title><rect x="10.0" y="629" width="103.7" height="15.0" fill="rgb(220,9,44)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >do_cql_test</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="428.3" y="485" width="1.7" height="15.0" fill="rgb(254,161,10)" rx="2" ry="2" />
<text  x="431.27" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="414.7" y="437" width="1.7" height="15.0" fill="rgb(225,166,28)" rx="2" ry="2" />
<text  x="417.67" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.14%)</title><rect x="84.8" y="277" width="1.7" height="15.0" fill="rgb(210,137,35)" rx="2" ry="2" />
<text  x="87.81" y="287.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="822.7" y="437" width="3.4" height="15.0" fill="rgb(225,3,34)" rx="2" ry="2" />
<text  x="825.74" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.14%)</title><rect x="1043.8" y="453" width="1.7" height="15.0" fill="rgb(224,17,2)" rx="2" ry="2" />
<text  x="1046.78" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="542.2" y="469" width="1.7" height="15.0" fill="rgb(210,148,11)" rx="2" ry="2" />
<text  x="545.19" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="999.6" y="405" width="1.7" height="15.0" fill="rgb(254,162,13)" rx="2" ry="2" />
<text  x="1002.57" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (2 samples, 0.29%)</title><rect x="52.5" y="469" width="3.4" height="15.0" fill="rgb(244,12,14)" rx="2" ry="2" />
<text  x="55.51" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="819.3" y="405" width="1.7" height="15.0" fill="rgb(233,220,44)" rx="2" ry="2" />
<text  x="822.34" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="95.0" y="277" width="1.7" height="15.0" fill="rgb(237,119,16)" rx="2" ry="2" />
<text  x="98.01" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.29%)</title><rect x="912.9" y="405" width="3.4" height="15.0" fill="rgb(246,49,7)" rx="2" ry="2" />
<text  x="915.85" y="415.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (1 samples, 0.14%)</title><rect x="469.1" y="501" width="1.7" height="15.0" fill="rgb(207,229,32)" rx="2" ry="2" />
<text  x="472.08" y="511.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (3 samples, 0.43%)</title><rect x="970.7" y="325" width="5.1" height="15.0" fill="rgb(215,23,37)" rx="2" ry="2" />
<text  x="973.66" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.14%)</title><rect x="831.2" y="453" width="1.7" height="15.0" fill="rgb(254,22,5)" rx="2" ry="2" />
<text  x="834.24" y="463.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (1 samples, 0.14%)</title><rect x="1033.6" y="533" width="1.7" height="15.0" fill="rgb(241,106,6)" rx="2" ry="2" />
<text  x="1036.57" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.14%)</title><rect x="78.0" y="197" width="1.7" height="15.0" fill="rgb(213,58,23)" rx="2" ry="2" />
<text  x="81.01" y="207.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.43%)</title><rect x="878.8" y="469" width="5.1" height="15.0" fill="rgb(243,137,54)" rx="2" ry="2" />
<text  x="881.85" y="479.5" ></text>
</g>
<g >
<title>from_hex (2 samples, 0.29%)</title><rect x="16.8" y="437" width="3.4" height="15.0" fill="rgb(225,27,36)" rx="2" ry="2" />
<text  x="19.80" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (8 samples, 1.15%)</title><rect x="817.6" y="453" width="13.6" height="15.0" fill="rgb(223,109,28)" rx="2" ry="2" />
<text  x="820.64" y="463.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.14%)</title><rect x="986.0" y="389" width="1.7" height="15.0" fill="rgb(244,192,42)" rx="2" ry="2" />
<text  x="988.97" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.14%)</title><rect x="32.1" y="389" width="1.7" height="15.0" fill="rgb(251,73,2)" rx="2" ry="2" />
<text  x="35.10" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="95.0" y="309" width="1.7" height="15.0" fill="rgb(245,8,14)" rx="2" ry="2" />
<text  x="98.01" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="88.2" y="229" width="1.7" height="15.0" fill="rgb(212,123,7)" rx="2" ry="2" />
<text  x="91.21" y="239.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.14%)</title><rect x="676.5" y="485" width="1.7" height="15.0" fill="rgb(245,223,51)" rx="2" ry="2" />
<text  x="679.51" y="495.5" ></text>
</g>
<g >
<title>database::do_apply (7 samples, 1.01%)</title><rect x="1037.0" y="533" width="11.9" height="15.0" fill="rgb(235,71,45)" rx="2" ry="2" />
<text  x="1039.97" y="543.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="61.0" y="405" width="1.7" height="15.0" fill="rgb(247,168,23)" rx="2" ry="2" />
<text  x="64.01" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="758.1" y="437" width="3.4" height="15.0" fill="rgb(237,198,32)" rx="2" ry="2" />
<text  x="761.13" y="447.5" ></text>
</g>
<g >
<title>all (694 samples, 100%)</title><rect x="10.0" y="757" width="1180.0" height="15.0" fill="rgb(231,25,19)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.14%)</title><rect x="792.1" y="597" width="1.7" height="15.0" fill="rgb(214,71,37)" rx="2" ry="2" />
<text  x="795.13" y="607.5" ></text>
</g>
<g >
<title>validation::validate_column_family (7 samples, 1.01%)</title><rect x="766.6" y="501" width="11.9" height="15.0" fill="rgb(240,24,9)" rx="2" ry="2" />
<text  x="769.63" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.29%)</title><rect x="57.6" y="405" width="3.4" height="15.0" fill="rgb(249,140,21)" rx="2" ry="2" />
<text  x="60.61" y="415.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.58%)</title><rect x="895.9" y="453" width="6.8" height="15.0" fill="rgb(208,43,13)" rx="2" ry="2" />
<text  x="898.85" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (48 samples, 6.92%)</title><rect x="28.7" y="533" width="81.6" height="15.0" fill="rgb(239,55,0)" rx="2" ry="2" />
<text  x="31.70" y="543.5" >seastar::..</text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="583.0" y="421" width="5.1" height="15.0" fill="rgb(208,91,26)" rx="2" ry="2" />
<text  x="586.00" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (7 samples, 1.01%)</title><rect x="282.0" y="405" width="11.9" height="15.0" fill="rgb(208,145,39)" rx="2" ry="2" />
<text  x="285.05" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.43%)</title><rect x="215.7" y="501" width="5.1" height="15.0" fill="rgb(210,185,36)" rx="2" ry="2" />
<text  x="218.73" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.14%)</title><rect x="926.5" y="421" width="1.7" height="15.0" fill="rgb(232,141,44)" rx="2" ry="2" />
<text  x="929.46" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (1 samples, 0.14%)</title><rect x="797.2" y="485" width="1.7" height="15.0" fill="rgb(236,214,31)" rx="2" ry="2" />
<text  x="800.23" y="495.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.14%)</title><rect x="613.6" y="533" width="1.7" height="15.0" fill="rgb(237,10,39)" rx="2" ry="2" />
<text  x="616.60" y="543.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="78.0" y="165" width="1.7" height="15.0" fill="rgb(213,105,1)" rx="2" ry="2" />
<text  x="81.01" y="175.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.14%)</title><rect x="676.5" y="501" width="1.7" height="15.0" fill="rgb(248,127,50)" rx="2" ry="2" />
<text  x="679.51" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="88.2" y="277" width="1.7" height="15.0" fill="rgb(250,103,28)" rx="2" ry="2" />
<text  x="91.21" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.43%)</title><rect x="1050.6" y="533" width="5.1" height="15.0" fill="rgb(244,55,26)" rx="2" ry="2" />
<text  x="1053.58" y="543.5" ></text>
</g>
<g >
<title>free (1 samples, 0.14%)</title><rect x="151.1" y="549" width="1.7" height="15.0" fill="rgb(218,79,28)" rx="2" ry="2" />
<text  x="154.12" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.14%)</title><rect x="71.2" y="405" width="1.7" height="15.0" fill="rgb(218,192,10)" rx="2" ry="2" />
<text  x="74.21" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (131 samples, 18.88%)</title><rect x="810.8" y="533" width="222.8" height="15.0" fill="rgb(215,77,39)" rx="2" ry="2" />
<text  x="813.84" y="543.5" >cql3::statements::select_stat..</text>
</g>
<g >
<title>cql3::expr::prepare_term (2 samples, 0.29%)</title><rect x="16.8" y="501" width="3.4" height="15.0" fill="rgb(250,228,12)" rx="2" ry="2" />
<text  x="19.80" y="511.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (8 samples, 1.15%)</title><rect x="32.1" y="485" width="13.6" height="15.0" fill="rgb(242,104,30)" rx="2" ry="2" />
<text  x="35.10" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.14%)</title><rect x="572.8" y="485" width="1.7" height="15.0" fill="rgb(228,62,53)" rx="2" ry="2" />
<text  x="575.80" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (1 samples, 0.14%)</title><rect x="95.0" y="437" width="1.7" height="15.0" fill="rgb(238,221,19)" rx="2" ry="2" />
<text  x="98.01" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (4 samples, 0.58%)</title><rect x="501.4" y="469" width="6.8" height="15.0" fill="rgb(218,106,12)" rx="2" ry="2" />
<text  x="504.38" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="220.8" y="533" width="1.7" height="15.0" fill="rgb(248,12,33)" rx="2" ry="2" />
<text  x="223.84" y="543.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;db::commitlog::segment_manager::request_controller_timeout_exception_factory, seastar::lowres_clock&gt;::wait (1 samples, 0.14%)</title><rect x="1047.2" y="485" width="1.7" height="15.0" fill="rgb(219,159,30)" rx="2" ry="2" />
<text  x="1050.18" y="495.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (75 samples, 10.81%)</title><rect x="234.4" y="517" width="127.6" height="15.0" fill="rgb(211,149,40)" rx="2" ry="2" />
<text  x="237.44" y="527.5" >merging_reader&lt;m..</text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (4 samples, 0.58%)</title><rect x="640.8" y="581" width="6.8" height="15.0" fill="rgb(251,54,45)" rx="2" ry="2" />
<text  x="643.81" y="591.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.14%)</title><rect x="100.1" y="389" width="1.7" height="15.0" fill="rgb(242,98,17)" rx="2" ry="2" />
<text  x="103.12" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.14%)</title><rect x="975.8" y="325" width="1.7" height="15.0" fill="rgb(228,98,16)" rx="2" ry="2" />
<text  x="978.76" y="335.5" ></text>
</g>
<g >
<title>perf_simple_que (694 samples, 100.00%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(249,116,36)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >perf_simple_que</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.14%)</title><rect x="78.0" y="277" width="1.7" height="15.0" fill="rgb(237,55,33)" rx="2" ry="2" />
<text  x="81.01" y="287.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (1 samples, 0.14%)</title><rect x="79.7" y="341" width="1.7" height="15.0" fill="rgb(229,98,7)" rx="2" ry="2" />
<text  x="82.71" y="351.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.14%)</title><rect x="742.8" y="501" width="1.7" height="15.0" fill="rgb(224,176,24)" rx="2" ry="2" />
<text  x="745.82" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="28.7" y="421" width="1.7" height="15.0" fill="rgb(245,86,30)" rx="2" ry="2" />
<text  x="31.70" y="431.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.14%)</title><rect x="72.9" y="245" width="1.7" height="15.0" fill="rgb(205,204,46)" rx="2" ry="2" />
<text  x="75.91" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="45.7" y="357" width="1.7" height="15.0" fill="rgb(214,74,27)" rx="2" ry="2" />
<text  x="48.71" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="28.7" y="373" width="1.7" height="15.0" fill="rgb(250,33,19)" rx="2" ry="2" />
<text  x="31.70" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 1.01%)</title><rect x="208.9" y="517" width="11.9" height="15.0" fill="rgb(247,30,11)" rx="2" ry="2" />
<text  x="211.93" y="527.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (21 samples, 3.03%)</title><rect x="948.6" y="389" width="35.7" height="15.0" fill="rgb(247,3,48)" rx="2" ry="2" />
<text  x="951.56" y="399.5" >sea..</text>
</g>
<g >
<title>compact_mutation_state&lt; (9 samples, 1.30%)</title><rect x="205.5" y="549" width="15.3" height="15.0" fill="rgb(247,59,3)" rx="2" ry="2" />
<text  x="208.53" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.14%)</title><rect x="61.0" y="341" width="1.7" height="15.0" fill="rgb(247,214,25)" rx="2" ry="2" />
<text  x="64.01" y="351.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.14%)</title><rect x="110.3" y="613" width="1.7" height="15.0" fill="rgb(247,15,41)" rx="2" ry="2" />
<text  x="113.32" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.14%)</title><rect x="974.1" y="309" width="1.7" height="15.0" fill="rgb(224,118,15)" rx="2" ry="2" />
<text  x="977.06" y="319.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.14%)</title><rect x="55.9" y="437" width="1.7" height="15.0" fill="rgb(218,215,34)" rx="2" ry="2" />
<text  x="58.91" y="447.5" ></text>
</g>
<g >
<title>db::filter_for_query (3 samples, 0.43%)</title><rect x="994.5" y="437" width="5.1" height="15.0" fill="rgb(239,86,6)" rx="2" ry="2" />
<text  x="997.47" y="447.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.14%)</title><rect x="157.9" y="581" width="1.7" height="15.0" fill="rgb(246,139,36)" rx="2" ry="2" />
<text  x="160.93" y="591.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.14%)</title><rect x="331.4" y="341" width="1.7" height="15.0" fill="rgb(235,218,47)" rx="2" ry="2" />
<text  x="334.35" y="351.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.14%)</title><rect x="992.8" y="437" width="1.7" height="15.0" fill="rgb(242,19,1)" rx="2" ry="2" />
<text  x="995.77" y="447.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.14%)</title><rect x="494.6" y="469" width="1.7" height="15.0" fill="rgb(249,222,12)" rx="2" ry="2" />
<text  x="497.58" y="479.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.14%)</title><rect x="773.4" y="485" width="1.7" height="15.0" fill="rgb(241,128,29)" rx="2" ry="2" />
<text  x="776.43" y="495.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (9 samples, 1.30%)</title><rect x="685.0" y="581" width="15.3" height="15.0" fill="rgb(227,98,5)" rx="2" ry="2" />
<text  x="688.01" y="591.5" ></text>
</g>
<g >
<title>cql3::cf_name::operator= (1 samples, 0.14%)</title><rect x="54.2" y="453" width="1.7" height="15.0" fill="rgb(225,148,0)" rx="2" ry="2" />
<text  x="57.21" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.29%)</title><rect x="691.8" y="565" width="3.4" height="15.0" fill="rgb(243,226,48)" rx="2" ry="2" />
<text  x="694.82" y="575.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.43%)</title><rect x="703.7" y="581" width="5.1" height="15.0" fill="rgb(246,128,6)" rx="2" ry="2" />
<text  x="706.72" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.14%)</title><rect x="763.2" y="469" width="1.7" height="15.0" fill="rgb(232,3,17)" rx="2" ry="2" />
<text  x="766.23" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.14%)</title><rect x="101.8" y="373" width="1.7" height="15.0" fill="rgb(239,212,48)" rx="2" ry="2" />
<text  x="104.82" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (61 samples, 8.79%)</title><rect x="10.0" y="661" width="103.7" height="15.0" fill="rgb(210,83,31)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >seastar::non..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="28.7" y="405" width="1.7" height="15.0" fill="rgb(238,106,7)" rx="2" ry="2" />
<text  x="31.70" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="703.7" y="565" width="5.1" height="15.0" fill="rgb(210,34,2)" rx="2" ry="2" />
<text  x="706.72" y="575.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.43%)</title><rect x="113.7" y="693" width="5.1" height="15.0" fill="rgb(246,117,0)" rx="2" ry="2" />
<text  x="116.72" y="703.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.14%)</title><rect x="232.7" y="517" width="1.7" height="15.0" fill="rgb(211,103,5)" rx="2" ry="2" />
<text  x="235.74" y="527.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.29%)</title><rect x="64.4" y="357" width="3.4" height="15.0" fill="rgb(252,85,47)" rx="2" ry="2" />
<text  x="67.41" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="64.4" y="405" width="3.4" height="15.0" fill="rgb(210,136,53)" rx="2" ry="2" />
<text  x="67.41" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="78.0" y="245" width="1.7" height="15.0" fill="rgb(253,53,43)" rx="2" ry="2" />
<text  x="81.01" y="255.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (3 samples, 0.43%)</title><rect x="16.8" y="517" width="5.1" height="15.0" fill="rgb(238,73,0)" rx="2" ry="2" />
<text  x="19.80" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="28.7" y="437" width="1.7" height="15.0" fill="rgb(219,90,7)" rx="2" ry="2" />
<text  x="31.70" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.14%)</title><rect x="72.9" y="229" width="1.7" height="15.0" fill="rgb(237,58,20)" rx="2" ry="2" />
<text  x="75.91" y="239.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.14%)</title><rect x="662.9" y="581" width="1.7" height="15.0" fill="rgb(229,90,47)" rx="2" ry="2" />
<text  x="665.91" y="591.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::attributes::raw&gt; (1 samples, 0.14%)</title><rect x="103.5" y="469" width="1.7" height="15.0" fill="rgb(250,191,13)" rx="2" ry="2" />
<text  x="106.52" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (5 samples, 0.72%)</title><rect x="479.3" y="485" width="8.5" height="15.0" fill="rgb(240,158,18)" rx="2" ry="2" />
<text  x="482.28" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.14%)</title><rect x="695.2" y="565" width="1.7" height="15.0" fill="rgb(249,168,8)" rx="2" ry="2" />
<text  x="698.22" y="575.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.14%)</title><rect x="676.5" y="517" width="1.7" height="15.0" fill="rgb(234,76,0)" rx="2" ry="2" />
<text  x="679.51" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (27 samples, 3.89%)</title><rect x="293.9" y="405" width="46.0" height="15.0" fill="rgb(237,216,23)" rx="2" ry="2" />
<text  x="296.95" y="415.5" >part..</text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (10 samples, 1.44%)</title><rect x="832.9" y="501" width="17.0" height="15.0" fill="rgb(236,59,27)" rx="2" ry="2" />
<text  x="835.94" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.14%)</title><rect x="96.7" y="341" width="1.7" height="15.0" fill="rgb(235,224,28)" rx="2" ry="2" />
<text  x="99.71" y="351.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.14%)</title><rect x="785.3" y="533" width="1.7" height="15.0" fill="rgb(227,162,31)" rx="2" ry="2" />
<text  x="788.33" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (1 samples, 0.14%)</title><rect x="545.6" y="485" width="1.7" height="15.0" fill="rgb(247,177,5)" rx="2" ry="2" />
<text  x="548.59" y="495.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.14%)</title><rect x="50.8" y="309" width="1.7" height="15.0" fill="rgb(205,149,28)" rx="2" ry="2" />
<text  x="53.81" y="319.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="220.8" y="549" width="1.7" height="15.0" fill="rgb(218,175,53)" rx="2" ry="2" />
<text  x="223.84" y="559.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (1 samples, 0.14%)</title><rect x="105.2" y="469" width="1.7" height="15.0" fill="rgb(249,28,8)" rx="2" ry="2" />
<text  x="108.22" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (2 samples, 0.29%)</title><rect x="84.8" y="373" width="3.4" height="15.0" fill="rgb(206,212,34)" rx="2" ry="2" />
<text  x="87.81" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="634.0" y="581" width="1.7" height="15.0" fill="rgb(240,158,38)" rx="2" ry="2" />
<text  x="637.01" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.29%)</title><rect x="880.5" y="437" width="3.4" height="15.0" fill="rgb(210,10,2)" rx="2" ry="2" />
<text  x="883.55" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.14%)</title><rect x="37.2" y="341" width="1.7" height="15.0" fill="rgb(229,229,32)" rx="2" ry="2" />
<text  x="40.20" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.14%)</title><rect x="74.6" y="389" width="1.7" height="15.0" fill="rgb(214,210,36)" rx="2" ry="2" />
<text  x="77.61" y="399.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (3 samples, 0.43%)</title><rect x="605.1" y="485" width="5.1" height="15.0" fill="rgb(206,44,23)" rx="2" ry="2" />
<text  x="608.10" y="495.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (6 samples, 0.86%)</title><rect x="1103.3" y="725" width="10.2" height="15.0" fill="rgb(214,105,46)" rx="2" ry="2" />
<text  x="1106.29" y="735.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="645.9" y="565" width="1.7" height="15.0" fill="rgb(220,204,8)" rx="2" ry="2" />
<text  x="648.91" y="575.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (1 samples, 0.14%)</title><rect x="37.2" y="373" width="1.7" height="15.0" fill="rgb(253,155,29)" rx="2" ry="2" />
<text  x="40.20" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.14%)</title><rect x="33.8" y="373" width="1.7" height="15.0" fill="rgb(224,189,29)" rx="2" ry="2" />
<text  x="36.80" y="383.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.14%)</title><rect x="588.1" y="437" width="1.7" height="15.0" fill="rgb(253,99,45)" rx="2" ry="2" />
<text  x="591.10" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.29%)</title><rect x="64.4" y="309" width="3.4" height="15.0" fill="rgb(236,21,13)" rx="2" ry="2" />
<text  x="67.41" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.29%)</title><rect x="57.6" y="277" width="3.4" height="15.0" fill="rgb(232,207,1)" rx="2" ry="2" />
<text  x="60.61" y="287.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (1 samples, 0.14%)</title><rect x="1094.8" y="709" width="1.7" height="15.0" fill="rgb(229,48,2)" rx="2" ry="2" />
<text  x="1097.78" y="719.5" ></text>
</g>
<g >
<title>schema_registry::get (2 samples, 0.29%)</title><rect x="902.7" y="453" width="3.4" height="15.0" fill="rgb(242,92,5)" rx="2" ry="2" />
<text  x="905.65" y="463.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="673.1" y="581" width="1.7" height="15.0" fill="rgb(223,81,27)" rx="2" ry="2" />
<text  x="676.11" y="591.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (1 samples, 0.14%)</title><rect x="1054.0" y="389" width="1.7" height="15.0" fill="rgb(206,77,50)" rx="2" ry="2" />
<text  x="1056.98" y="399.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (3 samples, 0.43%)</title><rect x="470.8" y="501" width="5.1" height="15.0" fill="rgb(232,128,35)" rx="2" ry="2" />
<text  x="473.78" y="511.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (4 samples, 0.58%)</title><rect x="176.6" y="565" width="6.8" height="15.0" fill="rgb(244,141,35)" rx="2" ry="2" />
<text  x="179.63" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="166.4" y="581" width="1.7" height="15.0" fill="rgb(233,210,18)" rx="2" ry="2" />
<text  x="169.43" y="591.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (3 samples, 0.43%)</title><rect x="715.6" y="549" width="5.1" height="15.0" fill="rgb(232,2,23)" rx="2" ry="2" />
<text  x="718.62" y="559.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (3 samples, 0.43%)</title><rect x="123.9" y="661" width="5.1" height="15.0" fill="rgb(247,178,12)" rx="2" ry="2" />
<text  x="126.92" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.29%)</title><rect x="64.4" y="325" width="3.4" height="15.0" fill="rgb(228,145,31)" rx="2" ry="2" />
<text  x="67.41" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (1 samples, 0.14%)</title><rect x="725.8" y="549" width="1.7" height="15.0" fill="rgb(225,173,39)" rx="2" ry="2" />
<text  x="728.82" y="559.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.58%)</title><rect x="647.6" y="581" width="6.8" height="15.0" fill="rgb(219,84,28)" rx="2" ry="2" />
<text  x="650.61" y="591.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="569.4" y="453" width="1.7" height="15.0" fill="rgb(240,140,42)" rx="2" ry="2" />
<text  x="572.39" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (10 samples, 1.44%)</title><rect x="815.9" y="501" width="17.0" height="15.0" fill="rgb(217,46,48)" rx="2" ry="2" />
<text  x="818.94" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="498.0" y="469" width="1.7" height="15.0" fill="rgb(206,61,20)" rx="2" ry="2" />
<text  x="500.98" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (2 samples, 0.29%)</title><rect x="263.3" y="453" width="3.4" height="15.0" fill="rgb(211,172,4)" rx="2" ry="2" />
<text  x="266.34" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (38 samples, 5.48%)</title><rect x="278.6" y="421" width="64.7" height="15.0" fill="rgb(229,60,33)" rx="2" ry="2" />
<text  x="281.65" y="431.5" >partiti..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.29%)</title><rect x="84.8" y="341" width="3.4" height="15.0" fill="rgb(248,28,28)" rx="2" ry="2" />
<text  x="87.81" y="351.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (37 samples, 5.33%)</title><rect x="724.1" y="565" width="62.9" height="15.0" fill="rgb(234,161,35)" rx="2" ry="2" />
<text  x="727.12" y="575.5" >single..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.14%)</title><rect x="72.9" y="389" width="1.7" height="15.0" fill="rgb(214,75,3)" rx="2" ry="2" />
<text  x="75.91" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.14%)</title><rect x="1091.4" y="613" width="1.7" height="15.0" fill="rgb(233,207,42)" rx="2" ry="2" />
<text  x="1094.38" y="623.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="958.8" y="341" width="3.4" height="15.0" fill="rgb(234,123,46)" rx="2" ry="2" />
<text  x="961.76" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (1 samples, 0.14%)</title><rect x="797.2" y="501" width="1.7" height="15.0" fill="rgb(224,220,12)" rx="2" ry="2" />
<text  x="800.23" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.14%)</title><rect x="78.0" y="261" width="1.7" height="15.0" fill="rgb(228,29,46)" rx="2" ry="2" />
<text  x="81.01" y="271.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="66.1" y="245" width="1.7" height="15.0" fill="rgb(240,189,7)" rx="2" ry="2" />
<text  x="69.11" y="255.5" ></text>
</g>
<g >
<title>query::querier&lt; (153 samples, 22.05%)</title><rect x="229.3" y="549" width="260.2" height="15.0" fill="rgb(252,198,0)" rx="2" ry="2" />
<text  x="232.34" y="559.5" >query::querier&lt;</text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (34 samples, 4.90%)</title><rect x="929.9" y="421" width="57.8" height="15.0" fill="rgb(225,2,44)" rx="2" ry="2" />
<text  x="932.86" y="431.5" >servic..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 1.01%)</title><rect x="1037.0" y="565" width="11.9" height="15.0" fill="rgb(206,11,23)" rx="2" ry="2" />
<text  x="1039.97" y="575.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (1 samples, 0.14%)</title><rect x="469.1" y="485" width="1.7" height="15.0" fill="rgb(222,70,10)" rx="2" ry="2" />
<text  x="472.08" y="495.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.43%)</title><rect x="370.5" y="517" width="5.1" height="15.0" fill="rgb(239,35,42)" rx="2" ry="2" />
<text  x="373.46" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.14%)</title><rect x="96.7" y="421" width="1.7" height="15.0" fill="rgb(214,118,13)" rx="2" ry="2" />
<text  x="99.71" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="183.4" y="565" width="1.7" height="15.0" fill="rgb(210,204,48)" rx="2" ry="2" />
<text  x="186.43" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (2 samples, 0.29%)</title><rect x="778.5" y="533" width="3.4" height="15.0" fill="rgb(224,105,6)" rx="2" ry="2" />
<text  x="781.53" y="543.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.43%)</title><rect x="363.7" y="533" width="5.1" height="15.0" fill="rgb(209,195,50)" rx="2" ry="2" />
<text  x="366.66" y="543.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.14%)</title><rect x="656.1" y="581" width="1.7" height="15.0" fill="rgb(213,52,17)" rx="2" ry="2" />
<text  x="659.11" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.14%)</title><rect x="88.2" y="197" width="1.7" height="15.0" fill="rgb(211,195,30)" rx="2" ry="2" />
<text  x="91.21" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="149" width="1.7" height="15.0" fill="rgb(214,211,30)" rx="2" ry="2" />
<text  x="82.71" y="159.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.14%)</title><rect x="52.5" y="405" width="1.7" height="15.0" fill="rgb(253,134,29)" rx="2" ry="2" />
<text  x="55.51" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.14%)</title><rect x="93.3" y="437" width="1.7" height="15.0" fill="rgb(249,88,42)" rx="2" ry="2" />
<text  x="96.31" y="447.5" ></text>
</g>
<g >
<title>table::make_reader (46 samples, 6.63%)</title><rect x="533.7" y="517" width="78.2" height="15.0" fill="rgb(220,225,7)" rx="2" ry="2" />
<text  x="536.69" y="527.5" >table::ma..</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (49 samples, 7.06%)</title><rect x="27.0" y="549" width="83.3" height="15.0" fill="rgb(222,172,43)" rx="2" ry="2" />
<text  x="30.00" y="559.5" >cql3::uti..</text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.14%)</title><rect x="35.5" y="357" width="1.7" height="15.0" fill="rgb(242,99,37)" rx="2" ry="2" />
<text  x="38.50" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.14%)</title><rect x="101.8" y="405" width="1.7" height="15.0" fill="rgb(213,187,9)" rx="2" ry="2" />
<text  x="104.82" y="415.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (3 samples, 0.43%)</title><rect x="793.8" y="581" width="5.1" height="15.0" fill="rgb(227,103,2)" rx="2" ry="2" />
<text  x="796.83" y="591.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.58%)</title><rect x="516.7" y="501" width="6.8" height="15.0" fill="rgb(223,191,2)" rx="2" ry="2" />
<text  x="519.69" y="511.5" ></text>
</g>
<g >
<title>auth::get_permissions (7 samples, 1.01%)</title><rect x="749.6" y="469" width="11.9" height="15.0" fill="rgb(223,77,47)" rx="2" ry="2" />
<text  x="752.63" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.14%)</title><rect x="67.8" y="405" width="1.7" height="15.0" fill="rgb(220,71,32)" rx="2" ry="2" />
<text  x="70.81" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (1 samples, 0.14%)</title><rect x="27.0" y="517" width="1.7" height="15.0" fill="rgb(218,90,2)" rx="2" ry="2" />
<text  x="30.00" y="527.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.58%)</title><rect x="421.5" y="501" width="6.8" height="15.0" fill="rgb(247,71,10)" rx="2" ry="2" />
<text  x="424.47" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (2 samples, 0.29%)</title><rect x="21.9" y="517" width="3.4" height="15.0" fill="rgb(236,195,45)" rx="2" ry="2" />
<text  x="24.90" y="527.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.14%)</title><rect x="515.0" y="501" width="1.7" height="15.0" fill="rgb(207,31,38)" rx="2" ry="2" />
<text  x="517.99" y="511.5" ></text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.14%)</title><rect x="877.1" y="469" width="1.7" height="15.0" fill="rgb(226,26,28)" rx="2" ry="2" />
<text  x="880.15" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="666.3" y="565" width="1.7" height="15.0" fill="rgb(209,190,9)" rx="2" ry="2" />
<text  x="669.31" y="575.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="78.0" y="213" width="1.7" height="15.0" fill="rgb(229,71,51)" rx="2" ry="2" />
<text  x="81.01" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.14%)</title><rect x="127.3" y="597" width="1.7" height="15.0" fill="rgb(229,178,13)" rx="2" ry="2" />
<text  x="130.32" y="607.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (61 samples, 8.79%)</title><rect x="10.0" y="645" width="103.7" height="15.0" fill="rgb(231,9,43)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >std::_Functi..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.29%)</title><rect x="64.4" y="341" width="3.4" height="15.0" fill="rgb(220,3,9)" rx="2" ry="2" />
<text  x="67.41" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.58%)</title><rect x="909.5" y="421" width="6.8" height="15.0" fill="rgb(252,227,40)" rx="2" ry="2" />
<text  x="912.45" y="431.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.14%)</title><rect x="338.2" y="357" width="1.7" height="15.0" fill="rgb(245,46,25)" rx="2" ry="2" />
<text  x="341.16" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.14%)</title><rect x="358.6" y="485" width="1.7" height="15.0" fill="rgb(208,229,46)" rx="2" ry="2" />
<text  x="361.56" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="356.9" y="485" width="1.7" height="15.0" fill="rgb(248,55,20)" rx="2" ry="2" />
<text  x="359.86" y="495.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (3 samples, 0.43%)</title><rect x="753.0" y="453" width="5.1" height="15.0" fill="rgb(227,37,25)" rx="2" ry="2" />
<text  x="756.03" y="463.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.14%)</title><rect x="543.9" y="485" width="1.7" height="15.0" fill="rgb(240,175,50)" rx="2" ry="2" />
<text  x="546.89" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="96.7" y="405" width="1.7" height="15.0" fill="rgb(209,135,20)" rx="2" ry="2" />
<text  x="99.71" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="78.0" y="229" width="1.7" height="15.0" fill="rgb(230,40,54)" rx="2" ry="2" />
<text  x="81.01" y="239.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (3 samples, 0.43%)</title><rect x="1081.2" y="581" width="5.1" height="15.0" fill="rgb(239,139,20)" rx="2" ry="2" />
<text  x="1084.18" y="591.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.58%)</title><rect x="45.7" y="453" width="6.8" height="15.0" fill="rgb(225,59,3)" rx="2" ry="2" />
<text  x="48.71" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.14%)</title><rect x="106.9" y="485" width="1.7" height="15.0" fill="rgb(231,228,3)" rx="2" ry="2" />
<text  x="109.92" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="66.1" y="277" width="1.7" height="15.0" fill="rgb(241,199,16)" rx="2" ry="2" />
<text  x="69.11" y="287.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (1 samples, 0.14%)</title><rect x="787.0" y="581" width="1.7" height="15.0" fill="rgb(250,151,17)" rx="2" ry="2" />
<text  x="790.03" y="591.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="766.6" y="485" width="1.7" height="15.0" fill="rgb(247,52,10)" rx="2" ry="2" />
<text  x="769.63" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="350.1" y="421" width="1.7" height="15.0" fill="rgb(247,30,8)" rx="2" ry="2" />
<text  x="353.06" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="222.5" y="549" width="1.7" height="15.0" fill="rgb(222,40,49)" rx="2" ry="2" />
<text  x="225.54" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="356.9" y="469" width="1.7" height="15.0" fill="rgb(243,114,40)" rx="2" ry="2" />
<text  x="359.86" y="479.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.14%)</title><rect x="45.7" y="293" width="1.7" height="15.0" fill="rgb(205,114,0)" rx="2" ry="2" />
<text  x="48.71" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="88.2" y="293" width="1.7" height="15.0" fill="rgb(244,50,38)" rx="2" ry="2" />
<text  x="91.21" y="303.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.14%)</title><rect x="494.6" y="485" width="1.7" height="15.0" fill="rgb(226,225,41)" rx="2" ry="2" />
<text  x="497.58" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (1 samples, 0.14%)</title><rect x="152.8" y="549" width="1.7" height="15.0" fill="rgb(242,21,6)" rx="2" ry="2" />
<text  x="155.82" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="88.2" y="309" width="1.7" height="15.0" fill="rgb(248,136,2)" rx="2" ry="2" />
<text  x="91.21" y="319.5" ></text>
</g>
<g >
<title>hwloc_linux_set_tid_cpubind (9 samples, 1.30%)</title><rect x="1113.5" y="725" width="15.3" height="15.0" fill="rgb(230,70,30)" rx="2" ry="2" />
<text  x="1116.49" y="735.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.14%)</title><rect x="450.4" y="469" width="1.7" height="15.0" fill="rgb(229,51,0)" rx="2" ry="2" />
<text  x="453.37" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.14%)</title><rect x="88.2" y="325" width="1.7" height="15.0" fill="rgb(225,39,36)" rx="2" ry="2" />
<text  x="91.21" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (97 samples, 13.98%)</title><rect x="853.3" y="517" width="165.0" height="15.0" fill="rgb(248,51,32)" rx="2" ry="2" />
<text  x="856.34" y="527.5" >cql3::statements::sel..</text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.14%)</title><rect x="1054.0" y="421" width="1.7" height="15.0" fill="rgb(244,35,17)" rx="2" ry="2" />
<text  x="1056.98" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.14%)</title><rect x="292.2" y="389" width="1.7" height="15.0" fill="rgb(220,33,10)" rx="2" ry="2" />
<text  x="295.25" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (2 samples, 0.29%)</title><rect x="125.6" y="613" width="3.4" height="15.0" fill="rgb(237,90,49)" rx="2" ry="2" />
<text  x="128.62" y="623.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (52 samples, 7.49%)</title><rect x="266.7" y="469" width="88.5" height="15.0" fill="rgb(230,74,28)" rx="2" ry="2" />
<text  x="269.74" y="479.5" >partition_..</text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.29%)</title><rect x="475.9" y="501" width="3.4" height="15.0" fill="rgb(229,188,40)" rx="2" ry="2" />
<text  x="478.88" y="511.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="428.3" y="501" width="1.7" height="15.0" fill="rgb(233,106,46)" rx="2" ry="2" />
<text  x="431.27" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (6 samples, 0.86%)</title><rect x="93.3" y="453" width="10.2" height="15.0" fill="rgb(241,172,4)" rx="2" ry="2" />
<text  x="96.31" y="463.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.14%)</title><rect x="1111.8" y="709" width="1.7" height="15.0" fill="rgb(225,131,9)" rx="2" ry="2" />
<text  x="1114.79" y="719.5" ></text>
</g>
<g >
<title>seastar::jmp_buf_link::switch_in (1 samples, 0.14%)</title><rect x="623.8" y="581" width="1.7" height="15.0" fill="rgb(243,125,1)" rx="2" ry="2" />
<text  x="626.80" y="591.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.14%)</title><rect x="30.4" y="325" width="1.7" height="15.0" fill="rgb(246,0,31)" rx="2" ry="2" />
<text  x="33.40" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.14%)</title><rect x="96.7" y="373" width="1.7" height="15.0" fill="rgb(235,102,41)" rx="2" ry="2" />
<text  x="99.71" y="383.5" ></text>
</g>
<g >
<title>abstract_type::from_string (2 samples, 0.29%)</title><rect x="16.8" y="469" width="3.4" height="15.0" fill="rgb(241,93,17)" rx="2" ry="2" />
<text  x="19.80" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;cql3::expr::expression*, cql3::expr::expression&gt; (1 samples, 0.14%)</title><rect x="69.5" y="373" width="1.7" height="15.0" fill="rgb(207,123,11)" rx="2" ry="2" />
<text  x="72.51" y="383.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (13 samples, 1.87%)</title><rect x="491.2" y="517" width="22.1" height="15.0" fill="rgb(248,18,51)" rx="2" ry="2" />
<text  x="494.18" y="527.5" >m..</text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="499.7" y="469" width="1.7" height="15.0" fill="rgb(247,213,2)" rx="2" ry="2" />
<text  x="502.68" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (22 samples, 3.17%)</title><rect x="489.5" y="533" width="37.4" height="15.0" fill="rgb(207,145,35)" rx="2" ry="2" />
<text  x="492.48" y="543.5" >std..</text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="865.2" y="501" width="1.7" height="15.0" fill="rgb(252,149,24)" rx="2" ry="2" />
<text  x="868.24" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="79.7" y="261" width="1.7" height="15.0" fill="rgb(207,2,33)" rx="2" ry="2" />
<text  x="82.71" y="271.5" ></text>
</g>
<g >
<title>sstables::sstable::component_basename (1 samples, 0.14%)</title><rect x="130.7" y="613" width="1.7" height="15.0" fill="rgb(205,165,50)" rx="2" ry="2" />
<text  x="133.72" y="623.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (11 samples, 1.59%)</title><rect x="681.6" y="597" width="18.7" height="15.0" fill="rgb(250,211,37)" rx="2" ry="2" />
<text  x="684.61" y="607.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (51 samples, 7.35%)</title><rect x="268.4" y="453" width="86.8" height="15.0" fill="rgb(230,24,29)" rx="2" ry="2" />
<text  x="271.44" y="463.5" >partition_..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.14%)</title><rect x="814.2" y="517" width="1.7" height="15.0" fill="rgb(237,160,35)" rx="2" ry="2" />
<text  x="817.24" y="527.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (13 samples, 1.87%)</title><rect x="491.2" y="501" width="22.1" height="15.0" fill="rgb(235,199,21)" rx="2" ry="2" />
<text  x="494.18" y="511.5" >m..</text>
</g>
</g>
</svg>
