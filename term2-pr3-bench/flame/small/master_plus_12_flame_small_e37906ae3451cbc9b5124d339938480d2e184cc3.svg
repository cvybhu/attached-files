<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1846" onload="init(evt)" viewBox="0 0 1200 1846" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1846.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1829" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1829" > </text>
<g id="frames">
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~deque (1 samples, 0.15%)</title><rect x="78.6" y="405" width="1.7" height="15.0" fill="rgb(226,92,42)" rx="2" ry="2" />
<text  x="81.60" y="415.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (11 samples, 1.60%)</title><rect x="447.4" y="1509" width="18.8" height="15.0" fill="rgb(223,176,16)" rx="2" ry="2" />
<text  x="450.35" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="377.0" y="1509" width="1.8" height="15.0" fill="rgb(234,121,48)" rx="2" ry="2" />
<text  x="380.03" y="1519.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.15%)</title><rect x="757.8" y="1605" width="1.7" height="15.0" fill="rgb(220,137,47)" rx="2" ry="2" />
<text  x="760.79" y="1615.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="958.5" y="1461" width="3.4" height="15.0" fill="rgb(239,205,24)" rx="2" ry="2" />
<text  x="961.46" y="1471.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="49.4" y="85" width="1.8" height="15.0" fill="rgb(238,163,12)" rx="2" ry="2" />
<text  x="52.45" y="95.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (78 samples, 11.34%)</title><rect x="534.8" y="1573" width="133.8" height="15.0" fill="rgb(207,91,13)" rx="2" ry="2" />
<text  x="537.83" y="1583.5" >std::_Function_h..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="797.2" y="1525" width="1.8" height="15.0" fill="rgb(252,211,26)" rx="2" ry="2" />
<text  x="800.24" y="1535.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="123.2" y="1333" width="1.7" height="15.0" fill="rgb(236,186,2)" rx="2" ry="2" />
<text  x="126.20" y="1343.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.15%)</title><rect x="75.2" y="229" width="1.7" height="15.0" fill="rgb(234,173,32)" rx="2" ry="2" />
<text  x="78.17" y="239.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.15%)</title><rect x="514.2" y="1525" width="1.8" height="15.0" fill="rgb(218,206,4)" rx="2" ry="2" />
<text  x="517.24" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="49.4" y="53" width="1.8" height="15.0" fill="rgb(210,164,21)" rx="2" ry="2" />
<text  x="52.45" y="63.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (3 samples, 0.44%)</title><rect x="51.2" y="309" width="5.1" height="15.0" fill="rgb(228,125,40)" rx="2" ry="2" />
<text  x="54.16" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="49.4" y="181" width="1.8" height="15.0" fill="rgb(206,125,3)" rx="2" ry="2" />
<text  x="52.45" y="191.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (7 samples, 1.02%)</title><rect x="884.7" y="1509" width="12.0" height="15.0" fill="rgb(251,80,48)" rx="2" ry="2" />
<text  x="887.71" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokenIndex (1 samples, 0.15%)</title><rect x="94.0" y="469" width="1.8" height="15.0" fill="rgb(220,43,33)" rx="2" ry="2" />
<text  x="97.04" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.15%)</title><rect x="788.7" y="1557" width="1.7" height="15.0" fill="rgb(213,46,8)" rx="2" ry="2" />
<text  x="791.66" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (16 samples, 2.33%)</title><rect x="15.1" y="325" width="27.5" height="15.0" fill="rgb(208,57,18)" rx="2" ry="2" />
<text  x="18.15" y="335.5" >c..</text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.15%)</title><rect x="68.3" y="469" width="1.7" height="15.0" fill="rgb(215,185,4)" rx="2" ry="2" />
<text  x="71.31" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="1047.6" y="1637" width="1.8" height="15.0" fill="rgb(206,48,41)" rx="2" ry="2" />
<text  x="1050.65" y="1647.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="58.0" y="277" width="1.7" height="15.0" fill="rgb(213,177,36)" rx="2" ry="2" />
<text  x="61.02" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.29%)</title><rect x="812.7" y="1477" width="3.4" height="15.0" fill="rgb(209,183,5)" rx="2" ry="2" />
<text  x="815.67" y="1487.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.15%)</title><rect x="325.6" y="1413" width="1.7" height="15.0" fill="rgb(246,62,14)" rx="2" ry="2" />
<text  x="328.58" y="1423.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (7 samples, 1.02%)</title><rect x="78.6" y="581" width="12.0" height="15.0" fill="rgb(247,139,31)" rx="2" ry="2" />
<text  x="81.60" y="591.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (3 samples, 0.44%)</title><rect x="1037.4" y="1493" width="5.1" height="15.0" fill="rgb(233,207,19)" rx="2" ry="2" />
<text  x="1040.35" y="1503.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (89 samples, 12.94%)</title><rect x="231.2" y="1541" width="152.7" height="15.0" fill="rgb(227,57,45)" rx="2" ry="2" />
<text  x="234.25" y="1551.5" >merging_reader&lt;muta..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="732.1" y="1621" width="1.7" height="15.0" fill="rgb(215,183,15)" rx="2" ry="2" />
<text  x="735.06" y="1631.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (78 samples, 11.34%)</title><rect x="534.8" y="1589" width="133.8" height="15.0" fill="rgb(238,107,37)" rx="2" ry="2" />
<text  x="537.83" y="1599.5" >query::querier_b..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.58%)</title><rect x="979.0" y="1397" width="6.9" height="15.0" fill="rgb(211,202,8)" rx="2" ry="2" />
<text  x="982.04" y="1407.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.15%)</title><rect x="70.0" y="229" width="1.7" height="15.0" fill="rgb(252,220,12)" rx="2" ry="2" />
<text  x="73.03" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="61.5" y="69" width="1.7" height="15.0" fill="rgb(215,194,40)" rx="2" ry="2" />
<text  x="64.45" y="79.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (2 samples, 0.29%)</title><rect x="100.9" y="1541" width="3.4" height="15.0" fill="rgb(222,73,17)" rx="2" ry="2" />
<text  x="103.90" y="1551.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (4 samples, 0.58%)</title><rect x="852.1" y="1589" width="6.9" height="15.0" fill="rgb(229,134,37)" rx="2" ry="2" />
<text  x="855.12" y="1599.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (14 samples, 2.03%)</title><rect x="689.2" y="1637" width="24.0" height="15.0" fill="rgb(234,50,11)" rx="2" ry="2" />
<text  x="692.19" y="1647.5" >s..</text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (1 samples, 0.15%)</title><rect x="78.6" y="421" width="1.7" height="15.0" fill="rgb(223,17,22)" rx="2" ry="2" />
<text  x="81.60" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.44%)</title><rect x="124.9" y="1413" width="5.2" height="15.0" fill="rgb(239,71,51)" rx="2" ry="2" />
<text  x="127.91" y="1423.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.15%)</title><rect x="1035.6" y="1573" width="1.8" height="15.0" fill="rgb(210,5,30)" rx="2" ry="2" />
<text  x="1038.64" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="51.2" y="165" width="1.7" height="15.0" fill="rgb(226,70,48)" rx="2" ry="2" />
<text  x="54.16" y="175.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (2 samples, 0.29%)</title><rect x="908.7" y="1525" width="3.5" height="15.0" fill="rgb(217,171,37)" rx="2" ry="2" />
<text  x="911.72" y="1535.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.15%)</title><rect x="857.3" y="1445" width="1.7" height="15.0" fill="rgb(236,143,30)" rx="2" ry="2" />
<text  x="860.27" y="1455.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="97.5" y="629" width="1.7" height="15.0" fill="rgb(219,223,25)" rx="2" ry="2" />
<text  x="100.47" y="639.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (1 samples, 0.15%)</title><rect x="723.5" y="1621" width="1.7" height="15.0" fill="rgb(205,178,24)" rx="2" ry="2" />
<text  x="726.49" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.15%)</title><rect x="118.1" y="1365" width="1.7" height="15.0" fill="rgb(241,43,40)" rx="2" ry="2" />
<text  x="121.05" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="119.8" y="1221" width="1.7" height="15.0" fill="rgb(235,219,31)" rx="2" ry="2" />
<text  x="122.77" y="1231.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (20 samples, 2.91%)</title><rect x="11.7" y="453" width="34.3" height="15.0" fill="rgb(238,222,23)" rx="2" ry="2" />
<text  x="14.72" y="463.5" >st..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (7 samples, 1.02%)</title><rect x="884.7" y="1525" width="12.0" height="15.0" fill="rgb(212,64,5)" rx="2" ry="2" />
<text  x="887.71" y="1535.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::allocate (1 samples, 0.15%)</title><rect x="92.3" y="341" width="1.7" height="15.0" fill="rgb(219,106,7)" rx="2" ry="2" />
<text  x="95.33" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (2 samples, 0.29%)</title><rect x="11.7" y="341" width="3.4" height="15.0" fill="rgb(240,49,18)" rx="2" ry="2" />
<text  x="14.72" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.15%)</title><rect x="47.7" y="213" width="1.7" height="15.0" fill="rgb(210,50,23)" rx="2" ry="2" />
<text  x="50.73" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.15%)</title><rect x="157.5" y="1621" width="1.7" height="15.0" fill="rgb(223,224,52)" rx="2" ry="2" />
<text  x="160.50" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::~unique_ptr (1 samples, 0.15%)</title><rect x="85.5" y="421" width="1.7" height="15.0" fill="rgb(223,117,49)" rx="2" ry="2" />
<text  x="88.47" y="431.5" ></text>
</g>
<g >
<title>row_cache::update (1 samples, 0.15%)</title><rect x="1045.9" y="1605" width="1.7" height="15.0" fill="rgb(225,3,38)" rx="2" ry="2" />
<text  x="1048.93" y="1615.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (4 samples, 0.58%)</title><rect x="778.4" y="1557" width="6.8" height="15.0" fill="rgb(208,39,29)" rx="2" ry="2" />
<text  x="781.37" y="1567.5" ></text>
</g>
<g >
<title>create_partitions (2 samples, 0.29%)</title><rect x="90.6" y="629" width="3.4" height="15.0" fill="rgb(220,99,41)" rx="2" ry="2" />
<text  x="93.61" y="639.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.29%)</title><rect x="94.0" y="629" width="3.5" height="15.0" fill="rgb(238,182,37)" rx="2" ry="2" />
<text  x="97.04" y="639.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 7.27%)</title><rect x="11.7" y="885" width="85.8" height="15.0" fill="rgb(247,62,7)" rx="2" ry="2" />
<text  x="14.72" y="895.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (2 samples, 0.29%)</title><rect x="135.2" y="1445" width="3.4" height="15.0" fill="rgb(212,135,44)" rx="2" ry="2" />
<text  x="138.20" y="1455.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.44%)</title><rect x="124.9" y="1429" width="5.2" height="15.0" fill="rgb(228,180,25)" rx="2" ry="2" />
<text  x="127.91" y="1439.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="71.7" y="277" width="1.8" height="15.0" fill="rgb(207,152,46)" rx="2" ry="2" />
<text  x="74.74" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.15%)</title><rect x="66.6" y="325" width="1.7" height="15.0" fill="rgb(222,6,12)" rx="2" ry="2" />
<text  x="69.60" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (2 samples, 0.29%)</title><rect x="15.1" y="229" width="3.5" height="15.0" fill="rgb(224,164,53)" rx="2" ry="2" />
<text  x="18.15" y="239.5" ></text>
</g>
<g >
<title>table::update_cache (1 samples, 0.15%)</title><rect x="1045.9" y="1621" width="1.7" height="15.0" fill="rgb(254,135,48)" rx="2" ry="2" />
<text  x="1048.93" y="1631.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (17 samples, 2.47%)</title><rect x="967.0" y="1445" width="29.2" height="15.0" fill="rgb(254,150,22)" rx="2" ry="2" />
<text  x="970.03" y="1455.5" >se..</text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.15%)</title><rect x="66.6" y="453" width="1.7" height="15.0" fill="rgb(220,100,26)" rx="2" ry="2" />
<text  x="69.60" y="463.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (1 samples, 0.15%)</title><rect x="32.3" y="165" width="1.7" height="15.0" fill="rgb(230,207,4)" rx="2" ry="2" />
<text  x="35.30" y="175.5" ></text>
</g>
<g >
<title>std::optional&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator= (1 samples, 0.15%)</title><rect x="37.4" y="245" width="1.8" height="15.0" fill="rgb(207,158,22)" rx="2" ry="2" />
<text  x="40.44" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="663.5" y="1477" width="1.7" height="15.0" fill="rgb(211,121,20)" rx="2" ry="2" />
<text  x="666.46" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.15%)</title><rect x="97.5" y="677" width="1.7" height="15.0" fill="rgb(207,40,31)" rx="2" ry="2" />
<text  x="100.47" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.29%)</title><rect x="22.0" y="149" width="3.4" height="15.0" fill="rgb(226,209,31)" rx="2" ry="2" />
<text  x="25.01" y="159.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (18 samples, 2.62%)</title><rect x="1051.1" y="1637" width="30.8" height="15.0" fill="rgb(233,137,30)" rx="2" ry="2" />
<text  x="1054.08" y="1647.5" >se..</text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.15%)</title><rect x="836.7" y="1589" width="1.7" height="15.0" fill="rgb(214,202,45)" rx="2" ry="2" />
<text  x="839.69" y="1599.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (3 samples, 0.44%)</title><rect x="46.0" y="373" width="5.2" height="15.0" fill="rgb(239,32,49)" rx="2" ry="2" />
<text  x="49.02" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.29%)</title><rect x="550.3" y="1541" width="3.4" height="15.0" fill="rgb(207,48,18)" rx="2" ry="2" />
<text  x="553.26" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1061" width="87.5" height="15.0" fill="rgb(236,200,13)" rx="2" ry="2" />
<text  x="14.72" y="1071.5" >[unknown]</text>
</g>
<g >
<title>row::row (21 samples, 3.05%)</title><rect x="325.6" y="1429" width="36.0" height="15.0" fill="rgb(217,83,37)" rx="2" ry="2" />
<text  x="328.58" y="1439.5" >row..</text>
</g>
<g >
<title>cql3::query_processor::get_statement (18 samples, 2.62%)</title><rect x="11.7" y="373" width="30.9" height="15.0" fill="rgb(249,198,47)" rx="2" ry="2" />
<text  x="14.72" y="383.5" >cq..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.58%)</title><rect x="71.7" y="453" width="6.9" height="15.0" fill="rgb(221,120,5)" rx="2" ry="2" />
<text  x="74.74" y="463.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 7.27%)</title><rect x="11.7" y="805" width="85.8" height="15.0" fill="rgb(239,6,32)" rx="2" ry="2" />
<text  x="14.72" y="815.5" >[unknown]</text>
</g>
<g >
<title>atomic_cell_or_collection::copy (7 samples, 1.02%)</title><rect x="344.4" y="1397" width="12.1" height="15.0" fill="rgb(215,154,20)" rx="2" ry="2" />
<text  x="347.45" y="1407.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3 samples, 0.44%)</title><rect x="46.0" y="469" width="5.2" height="15.0" fill="rgb(212,133,28)" rx="2" ry="2" />
<text  x="49.02" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (9 samples, 1.31%)</title><rect x="123.2" y="1509" width="15.4" height="15.0" fill="rgb(230,82,27)" rx="2" ry="2" />
<text  x="126.20" y="1519.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (3 samples, 0.44%)</title><rect x="853.8" y="1493" width="5.2" height="15.0" fill="rgb(246,206,22)" rx="2" ry="2" />
<text  x="856.84" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.15%)</title><rect x="40.9" y="149" width="1.7" height="15.0" fill="rgb(248,175,9)" rx="2" ry="2" />
<text  x="43.87" y="159.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (3 samples, 0.44%)</title><rect x="195.2" y="1605" width="5.2" height="15.0" fill="rgb(219,145,35)" rx="2" ry="2" />
<text  x="198.23" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1301" width="87.5" height="15.0" fill="rgb(226,32,52)" rx="2" ry="2" />
<text  x="14.72" y="1311.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="66.6" y="533" width="1.7" height="15.0" fill="rgb(251,18,30)" rx="2" ry="2" />
<text  x="69.60" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.15%)</title><rect x="61.5" y="117" width="1.7" height="15.0" fill="rgb(230,60,53)" rx="2" ry="2" />
<text  x="64.45" y="127.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (2 samples, 0.29%)</title><rect x="992.8" y="1365" width="3.4" height="15.0" fill="rgb(236,188,22)" rx="2" ry="2" />
<text  x="995.76" y="1375.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::operator= (1 samples, 0.15%)</title><rect x="37.4" y="261" width="1.8" height="15.0" fill="rgb(238,143,7)" rx="2" ry="2" />
<text  x="40.44" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="135.2" y="1253" width="1.7" height="15.0" fill="rgb(247,129,32)" rx="2" ry="2" />
<text  x="138.20" y="1263.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (1 samples, 0.15%)</title><rect x="109.5" y="1461" width="1.7" height="15.0" fill="rgb(231,11,49)" rx="2" ry="2" />
<text  x="112.48" y="1471.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.29%)</title><rect x="52.9" y="245" width="3.4" height="15.0" fill="rgb(211,159,29)" rx="2" ry="2" />
<text  x="55.88" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="56.3" y="309" width="1.7" height="15.0" fill="rgb(228,161,26)" rx="2" ry="2" />
<text  x="59.31" y="319.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (3 samples, 0.44%)</title><rect x="1011.6" y="1429" width="5.2" height="15.0" fill="rgb(233,9,31)" rx="2" ry="2" />
<text  x="1014.63" y="1439.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.15%)</title><rect x="637.7" y="1525" width="1.7" height="15.0" fill="rgb(208,65,8)" rx="2" ry="2" />
<text  x="640.73" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.15%)</title><rect x="92.3" y="373" width="1.7" height="15.0" fill="rgb(223,220,43)" rx="2" ry="2" />
<text  x="95.33" y="383.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.29%)</title><rect x="94.0" y="725" width="3.5" height="15.0" fill="rgb(212,62,43)" rx="2" ry="2" />
<text  x="97.04" y="735.5" ></text>
</g>
<g >
<title>seastar::cgroup::cpu_set (1 samples, 0.15%)</title><rect x="1085.4" y="1669" width="1.7" height="15.0" fill="rgb(246,48,24)" rx="2" ry="2" />
<text  x="1088.38" y="1679.5" ></text>
</g>
<g >
<title>perf_simple_que (688 samples, 100.00%)</title><rect x="10.0" y="1781" width="1180.0" height="15.0" fill="rgb(244,11,49)" rx="2" ry="2" />
<text  x="13.00" y="1791.5" >perf_simple_que</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="375.3" y="1509" width="1.7" height="15.0" fill="rgb(249,190,12)" rx="2" ry="2" />
<text  x="378.32" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (36 samples, 5.23%)</title><rect x="774.9" y="1589" width="61.8" height="15.0" fill="rgb(244,111,16)" rx="2" ry="2" />
<text  x="777.94" y="1599.5" >cql3::..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="747.5" y="1621" width="1.7" height="15.0" fill="rgb(236,189,10)" rx="2" ry="2" />
<text  x="750.50" y="1631.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.29%)</title><rect x="15.1" y="181" width="3.5" height="15.0" fill="rgb(218,34,51)" rx="2" ry="2" />
<text  x="18.15" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.15%)</title><rect x="306.7" y="1429" width="1.7" height="15.0" fill="rgb(240,34,8)" rx="2" ry="2" />
<text  x="309.72" y="1439.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="49.4" y="261" width="1.8" height="15.0" fill="rgb(220,161,4)" rx="2" ry="2" />
<text  x="52.45" y="271.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.15%)</title><rect x="1045.9" y="1589" width="1.7" height="15.0" fill="rgb(229,190,6)" rx="2" ry="2" />
<text  x="1048.93" y="1599.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl (1 samples, 0.15%)</title><rect x="75.2" y="181" width="1.7" height="15.0" fill="rgb(217,168,23)" rx="2" ry="2" />
<text  x="78.17" y="191.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (7 samples, 1.02%)</title><rect x="111.2" y="1509" width="12.0" height="15.0" fill="rgb(248,182,32)" rx="2" ry="2" />
<text  x="114.19" y="1519.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.15%)</title><rect x="16.9" y="53" width="1.7" height="15.0" fill="rgb(228,103,48)" rx="2" ry="2" />
<text  x="19.86" y="63.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="135.2" y="1429" width="1.7" height="15.0" fill="rgb(245,90,53)" rx="2" ry="2" />
<text  x="138.20" y="1439.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (64 samples, 9.30%)</title><rect x="392.5" y="1557" width="109.7" height="15.0" fill="rgb(247,164,43)" rx="2" ry="2" />
<text  x="395.47" y="1567.5" >seastar::do_w..</text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1013" width="87.5" height="15.0" fill="rgb(241,121,44)" rx="2" ry="2" />
<text  x="14.72" y="1023.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.15%)</title><rect x="70.0" y="277" width="1.7" height="15.0" fill="rgb(222,28,23)" rx="2" ry="2" />
<text  x="73.03" y="287.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.15%)</title><rect x="70.0" y="597" width="1.7" height="15.0" fill="rgb(232,202,14)" rx="2" ry="2" />
<text  x="73.03" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="116.3" y="1285" width="1.8" height="15.0" fill="rgb(226,122,38)" rx="2" ry="2" />
<text  x="119.34" y="1295.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="569.1" y="1509" width="1.7" height="15.0" fill="rgb(205,160,33)" rx="2" ry="2" />
<text  x="572.13" y="1519.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (3 samples, 0.44%)</title><rect x="51.2" y="517" width="5.1" height="15.0" fill="rgb(250,181,36)" rx="2" ry="2" />
<text  x="54.16" y="527.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (2 samples, 0.29%)</title><rect x="94.0" y="645" width="3.5" height="15.0" fill="rgb(205,35,48)" rx="2" ry="2" />
<text  x="97.04" y="655.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="768.1" y="1605" width="3.4" height="15.0" fill="rgb(248,36,26)" rx="2" ry="2" />
<text  x="771.08" y="1615.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.15%)</title><rect x="73.5" y="357" width="1.7" height="15.0" fill="rgb(250,107,32)" rx="2" ry="2" />
<text  x="76.46" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.15%)</title><rect x="47.7" y="133" width="1.7" height="15.0" fill="rgb(238,188,32)" rx="2" ry="2" />
<text  x="50.73" y="143.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="570.8" y="1525" width="3.5" height="15.0" fill="rgb(238,55,38)" rx="2" ry="2" />
<text  x="573.84" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (26 samples, 3.78%)</title><rect x="11.7" y="549" width="44.6" height="15.0" fill="rgb(249,200,1)" rx="2" ry="2" />
<text  x="14.72" y="559.5" >[unk..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.15%)</title><rect x="126.6" y="1381" width="1.7" height="15.0" fill="rgb(252,174,16)" rx="2" ry="2" />
<text  x="129.63" y="1391.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="49.4" y="165" width="1.8" height="15.0" fill="rgb(207,121,0)" rx="2" ry="2" />
<text  x="52.45" y="175.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="989.3" y="1397" width="1.7" height="15.0" fill="rgb(243,209,53)" rx="2" ry="2" />
<text  x="992.33" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="769.8" y="1573" width="1.7" height="15.0" fill="rgb(250,202,20)" rx="2" ry="2" />
<text  x="772.80" y="1583.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="646.3" y="1541" width="1.7" height="15.0" fill="rgb(214,151,30)" rx="2" ry="2" />
<text  x="649.31" y="1551.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.15%)</title><rect x="109.5" y="1525" width="1.7" height="15.0" fill="rgb(236,192,3)" rx="2" ry="2" />
<text  x="112.48" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="51.2" y="133" width="1.7" height="15.0" fill="rgb(210,67,23)" rx="2" ry="2" />
<text  x="54.16" y="143.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="35.7" y="277" width="1.7" height="15.0" fill="rgb(230,90,39)" rx="2" ry="2" />
<text  x="38.73" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="123.2" y="1381" width="1.7" height="15.0" fill="rgb(244,205,30)" rx="2" ry="2" />
<text  x="126.20" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.15%)</title><rect x="1081.9" y="1637" width="1.8" height="15.0" fill="rgb(207,68,13)" rx="2" ry="2" />
<text  x="1084.95" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.15%)</title><rect x="1083.7" y="1653" width="1.7" height="15.0" fill="rgb(238,121,53)" rx="2" ry="2" />
<text  x="1086.66" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="47.7" y="261" width="1.7" height="15.0" fill="rgb(247,219,20)" rx="2" ry="2" />
<text  x="50.73" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="68.3" y="421" width="1.7" height="15.0" fill="rgb(246,132,0)" rx="2" ry="2" />
<text  x="71.31" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.15%)</title><rect x="16.9" y="69" width="1.7" height="15.0" fill="rgb(233,118,45)" rx="2" ry="2" />
<text  x="19.86" y="79.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.15%)</title><rect x="949.9" y="1477" width="1.7" height="15.0" fill="rgb(240,198,43)" rx="2" ry="2" />
<text  x="952.88" y="1487.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.15%)</title><rect x="735.5" y="1621" width="1.7" height="15.0" fill="rgb(214,31,44)" rx="2" ry="2" />
<text  x="738.49" y="1631.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.15%)</title><rect x="97.5" y="821" width="1.7" height="15.0" fill="rgb(238,70,51)" rx="2" ry="2" />
<text  x="100.47" y="831.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false&gt;::operator= (1 samples, 0.15%)</title><rect x="37.4" y="229" width="1.8" height="15.0" fill="rgb(220,227,18)" rx="2" ry="2" />
<text  x="40.44" y="239.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.15%)</title><rect x="44.3" y="389" width="1.7" height="15.0" fill="rgb(245,5,23)" rx="2" ry="2" />
<text  x="47.30" y="399.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.15%)</title><rect x="97.5" y="869" width="1.7" height="15.0" fill="rgb(233,85,15)" rx="2" ry="2" />
<text  x="100.47" y="879.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.15%)</title><rect x="1045.9" y="1573" width="1.7" height="15.0" fill="rgb(236,119,4)" rx="2" ry="2" />
<text  x="1048.93" y="1583.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.15%)</title><rect x="49.4" y="213" width="1.8" height="15.0" fill="rgb(206,90,12)" rx="2" ry="2" />
<text  x="52.45" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="68.3" y="181" width="1.7" height="15.0" fill="rgb(240,137,49)" rx="2" ry="2" />
<text  x="71.31" y="191.5" ></text>
</g>
<g >
<title>seastar::smp::configure (2 samples, 0.29%)</title><rect x="1085.4" y="1685" width="3.4" height="15.0" fill="rgb(218,222,28)" rx="2" ry="2" />
<text  x="1088.38" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="92.3" y="485" width="1.7" height="15.0" fill="rgb(214,183,51)" rx="2" ry="2" />
<text  x="95.33" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (3 samples, 0.44%)</title><rect x="991.0" y="1397" width="5.2" height="15.0" fill="rgb(208,134,4)" rx="2" ry="2" />
<text  x="994.05" y="1407.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="135.2" y="1365" width="1.7" height="15.0" fill="rgb(246,125,15)" rx="2" ry="2" />
<text  x="138.20" y="1375.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.15%)</title><rect x="58.0" y="245" width="1.7" height="15.0" fill="rgb(224,1,29)" rx="2" ry="2" />
<text  x="61.02" y="255.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.15%)</title><rect x="365.0" y="1461" width="1.7" height="15.0" fill="rgb(229,80,17)" rx="2" ry="2" />
<text  x="368.03" y="1471.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.15%)</title><rect x="56.3" y="277" width="1.7" height="15.0" fill="rgb(251,37,5)" rx="2" ry="2" />
<text  x="59.31" y="287.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.15%)</title><rect x="269.0" y="1477" width="1.7" height="15.0" fill="rgb(207,44,16)" rx="2" ry="2" />
<text  x="271.98" y="1487.5" ></text>
</g>
<g >
<title>__start_context (4 samples, 0.58%)</title><rect x="71.7" y="613" width="6.9" height="15.0" fill="rgb(228,9,27)" rx="2" ry="2" />
<text  x="74.74" y="623.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (6 samples, 0.87%)</title><rect x="409.6" y="1541" width="10.3" height="15.0" fill="rgb(234,31,12)" rx="2" ry="2" />
<text  x="412.62" y="1551.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="68.3" y="149" width="1.7" height="15.0" fill="rgb(209,133,14)" rx="2" ry="2" />
<text  x="71.31" y="159.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (6 samples, 0.87%)</title><rect x="56.3" y="357" width="10.3" height="15.0" fill="rgb(224,142,10)" rx="2" ry="2" />
<text  x="59.31" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (1 samples, 0.15%)</title><rect x="82.0" y="405" width="1.8" height="15.0" fill="rgb(243,196,51)" rx="2" ry="2" />
<text  x="85.03" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.15%)</title><rect x="70.0" y="309" width="1.7" height="15.0" fill="rgb(211,46,45)" rx="2" ry="2" />
<text  x="73.03" y="319.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="61.5" y="213" width="1.7" height="15.0" fill="rgb(243,189,53)" rx="2" ry="2" />
<text  x="64.45" y="223.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (2 samples, 0.29%)</title><rect x="140.3" y="1717" width="3.5" height="15.0" fill="rgb(223,206,48)" rx="2" ry="2" />
<text  x="143.35" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (1 samples, 0.15%)</title><rect x="90.6" y="549" width="1.7" height="15.0" fill="rgb(234,30,49)" rx="2" ry="2" />
<text  x="93.61" y="559.5" ></text>
</g>
<g >
<title>row_cache::invalidate (1 samples, 0.15%)</title><rect x="735.5" y="1605" width="1.7" height="15.0" fill="rgb(237,210,42)" rx="2" ry="2" />
<text  x="738.49" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.15%)</title><rect x="625.7" y="1509" width="1.7" height="15.0" fill="rgb(235,90,40)" rx="2" ry="2" />
<text  x="628.73" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="981" width="87.5" height="15.0" fill="rgb(210,176,53)" rx="2" ry="2" />
<text  x="14.72" y="991.5" >[unknown]</text>
</g>
<g >
<title>row::~row (5 samples, 0.73%)</title><rect x="411.3" y="1525" width="8.6" height="15.0" fill="rgb(213,186,18)" rx="2" ry="2" />
<text  x="414.34" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="66.6" y="101" width="1.7" height="15.0" fill="rgb(254,41,43)" rx="2" ry="2" />
<text  x="69.60" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="569.1" y="1493" width="1.7" height="15.0" fill="rgb(244,169,16)" rx="2" ry="2" />
<text  x="572.13" y="1503.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.15%)</title><rect x="701.2" y="1573" width="1.7" height="15.0" fill="rgb(240,191,54)" rx="2" ry="2" />
<text  x="704.19" y="1583.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (1 samples, 0.15%)</title><rect x="783.5" y="1525" width="1.7" height="15.0" fill="rgb(246,39,0)" rx="2" ry="2" />
<text  x="786.52" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.15%)</title><rect x="107.8" y="1653" width="1.7" height="15.0" fill="rgb(223,142,5)" rx="2" ry="2" />
<text  x="110.76" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.29%)</title><rect x="131.8" y="1413" width="3.4" height="15.0" fill="rgb(253,158,43)" rx="2" ry="2" />
<text  x="134.77" y="1423.5" ></text>
</g>
<g >
<title>seastar::app_template::run (548 samples, 79.65%)</title><rect x="148.9" y="1733" width="939.9" height="15.0" fill="rgb(229,188,6)" rx="2" ry="2" />
<text  x="151.92" y="1743.5" >seastar::app_template::run</text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (7 samples, 1.02%)</title><rect x="111.2" y="1493" width="12.0" height="15.0" fill="rgb(205,163,4)" rx="2" ry="2" />
<text  x="114.19" y="1503.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (2 samples, 0.29%)</title><rect x="529.7" y="1557" width="3.4" height="15.0" fill="rgb(213,198,37)" rx="2" ry="2" />
<text  x="532.68" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="58.0" y="165" width="1.7" height="15.0" fill="rgb(225,74,15)" rx="2" ry="2" />
<text  x="61.02" y="175.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (1 samples, 0.15%)</title><rect x="78.6" y="437" width="1.7" height="15.0" fill="rgb(216,187,47)" rx="2" ry="2" />
<text  x="81.60" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (5 samples, 0.73%)</title><rect x="737.2" y="1637" width="8.6" height="15.0" fill="rgb(229,55,18)" rx="2" ry="2" />
<text  x="740.21" y="1647.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (1 samples, 0.15%)</title><rect x="888.1" y="1429" width="1.8" height="15.0" fill="rgb(241,133,18)" rx="2" ry="2" />
<text  x="891.14" y="1439.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="68.3" y="261" width="1.7" height="15.0" fill="rgb(239,227,46)" rx="2" ry="2" />
<text  x="71.31" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="133.5" y="1205" width="1.7" height="15.0" fill="rgb(246,43,39)" rx="2" ry="2" />
<text  x="136.49" y="1215.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.87%)</title><rect x="315.3" y="1413" width="10.3" height="15.0" fill="rgb(206,8,36)" rx="2" ry="2" />
<text  x="318.29" y="1423.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (4 samples, 0.58%)</title><rect x="852.1" y="1541" width="6.9" height="15.0" fill="rgb(228,171,22)" rx="2" ry="2" />
<text  x="855.12" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.15%)</title><rect x="75.2" y="357" width="1.7" height="15.0" fill="rgb(217,224,25)" rx="2" ry="2" />
<text  x="78.17" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="797.2" y="1541" width="1.8" height="15.0" fill="rgb(250,152,40)" rx="2" ry="2" />
<text  x="800.24" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (6 samples, 0.87%)</title><rect x="80.3" y="453" width="10.3" height="15.0" fill="rgb(222,160,34)" rx="2" ry="2" />
<text  x="83.32" y="463.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.15%)</title><rect x="68.3" y="485" width="1.7" height="15.0" fill="rgb(207,60,12)" rx="2" ry="2" />
<text  x="71.31" y="495.5" ></text>
</g>
<g >
<title>boost::variant&lt;ser::live_cell_view, ser::expiring_cell_view, ser::dead_cell_view, ser::counter_cell_view, ser::unknown_variant_type&gt;::apply_visitor&lt;(anonymous namespace)::read_atomic_cell (1 samples, 0.15%)</title><rect x="1039.1" y="1477" width="1.7" height="15.0" fill="rgb(221,222,34)" rx="2" ry="2" />
<text  x="1042.07" y="1487.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="76.9" y="341" width="1.7" height="15.0" fill="rgb(249,144,36)" rx="2" ry="2" />
<text  x="79.89" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.15%)</title><rect x="13.4" y="245" width="1.7" height="15.0" fill="rgb(242,36,37)" rx="2" ry="2" />
<text  x="16.43" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.15%)</title><rect x="92.3" y="453" width="1.7" height="15.0" fill="rgb(244,116,27)" rx="2" ry="2" />
<text  x="95.33" y="463.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 6.69%)</title><rect x="11.7" y="645" width="78.9" height="15.0" fill="rgb(238,82,28)" rx="2" ry="2" />
<text  x="14.72" y="655.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1461" width="87.5" height="15.0" fill="rgb(241,79,18)" rx="2" ry="2" />
<text  x="14.72" y="1471.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;4ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="133.5" y="1109" width="1.7" height="15.0" fill="rgb(249,6,33)" rx="2" ry="2" />
<text  x="136.49" y="1119.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_function_statement, std::default_delete&lt;cql3::statements::create_function_statement&gt; &gt;::~unique_ptr (1 samples, 0.15%)</title><rect x="87.2" y="437" width="1.7" height="15.0" fill="rgb(211,14,18)" rx="2" ry="2" />
<text  x="90.18" y="447.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.15%)</title><rect x="97.5" y="773" width="1.7" height="15.0" fill="rgb(214,142,9)" rx="2" ry="2" />
<text  x="100.47" y="783.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.15%)</title><rect x="624.0" y="1493" width="1.7" height="15.0" fill="rgb(224,78,5)" rx="2" ry="2" />
<text  x="627.01" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mWS (1 samples, 0.15%)</title><rect x="34.0" y="181" width="1.7" height="15.0" fill="rgb(241,105,34)" rx="2" ry="2" />
<text  x="37.01" y="191.5" ></text>
</g>
<g >
<title>__start_context (7 samples, 1.02%)</title><rect x="78.6" y="629" width="12.0" height="15.0" fill="rgb(225,166,20)" rx="2" ry="2" />
<text  x="81.60" y="639.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (1 samples, 0.15%)</title><rect x="1044.2" y="1429" width="1.7" height="15.0" fill="rgb(222,113,50)" rx="2" ry="2" />
<text  x="1047.22" y="1439.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.15%)</title><rect x="66.6" y="421" width="1.7" height="15.0" fill="rgb(245,161,48)" rx="2" ry="2" />
<text  x="69.60" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (3 samples, 0.44%)</title><rect x="46.0" y="485" width="5.2" height="15.0" fill="rgb(211,78,41)" rx="2" ry="2" />
<text  x="49.02" y="495.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.15%)</title><rect x="943.0" y="1493" width="1.7" height="15.0" fill="rgb(218,72,28)" rx="2" ry="2" />
<text  x="946.02" y="1503.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="66.6" y="405" width="1.7" height="15.0" fill="rgb(249,225,34)" rx="2" ry="2" />
<text  x="69.60" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="63.2" y="149" width="1.7" height="15.0" fill="rgb(248,132,31)" rx="2" ry="2" />
<text  x="66.17" y="159.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.58%)</title><rect x="920.7" y="1541" width="6.9" height="15.0" fill="rgb(218,51,35)" rx="2" ry="2" />
<text  x="923.73" y="1551.5" ></text>
</g>
<g >
<title>free (1 samples, 0.15%)</title><rect x="418.2" y="1509" width="1.7" height="15.0" fill="rgb(225,44,3)" rx="2" ry="2" />
<text  x="421.20" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.15%)</title><rect x="119.8" y="1349" width="1.7" height="15.0" fill="rgb(207,228,27)" rx="2" ry="2" />
<text  x="122.77" y="1359.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="824.7" y="1509" width="1.7" height="15.0" fill="rgb(224,60,37)" rx="2" ry="2" />
<text  x="827.68" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="116.3" y="1301" width="1.8" height="15.0" fill="rgb(232,56,46)" rx="2" ry="2" />
<text  x="119.34" y="1311.5" ></text>
</g>
<g >
<title>__start_context (3 samples, 0.44%)</title><rect x="51.2" y="533" width="5.1" height="15.0" fill="rgb(242,114,6)" rx="2" ry="2" />
<text  x="54.16" y="543.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (42 samples, 6.10%)</title><rect x="574.3" y="1541" width="72.0" height="15.0" fill="rgb(237,65,19)" rx="2" ry="2" />
<text  x="577.27" y="1551.5" >memtable..</text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (16 samples, 2.33%)</title><rect x="111.2" y="1541" width="27.4" height="15.0" fill="rgb(227,88,1)" rx="2" ry="2" />
<text  x="114.19" y="1551.5" >c..</text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.15%)</title><rect x="373.6" y="1461" width="1.7" height="15.0" fill="rgb(213,137,24)" rx="2" ry="2" />
<text  x="376.60" y="1471.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (47 samples, 6.83%)</title><rect x="766.4" y="1621" width="80.6" height="15.0" fill="rgb(224,120,46)" rx="2" ry="2" />
<text  x="769.37" y="1631.5" >single_no..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="135.2" y="1413" width="1.7" height="15.0" fill="rgb(232,150,31)" rx="2" ry="2" />
<text  x="138.20" y="1423.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (2 samples, 0.29%)</title><rect x="275.8" y="1461" width="3.5" height="15.0" fill="rgb(208,214,43)" rx="2" ry="2" />
<text  x="278.84" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.15%)</title><rect x="135.2" y="1381" width="1.7" height="15.0" fill="rgb(217,38,12)" rx="2" ry="2" />
<text  x="138.20" y="1391.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (2 samples, 0.29%)</title><rect x="778.4" y="1541" width="3.4" height="15.0" fill="rgb(254,215,41)" rx="2" ry="2" />
<text  x="781.37" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (2 samples, 0.29%)</title><rect x="15.1" y="197" width="3.5" height="15.0" fill="rgb(222,123,38)" rx="2" ry="2" />
<text  x="18.15" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::execute_direct (1 samples, 0.15%)</title><rect x="150.6" y="1653" width="1.8" height="15.0" fill="rgb(214,197,50)" rx="2" ry="2" />
<text  x="153.64" y="1663.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="529.7" y="1541" width="1.7" height="15.0" fill="rgb(245,41,11)" rx="2" ry="2" />
<text  x="532.68" y="1551.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.15%)</title><rect x="68.3" y="437" width="1.7" height="15.0" fill="rgb(205,176,11)" rx="2" ry="2" />
<text  x="71.31" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="116.3" y="1413" width="3.5" height="15.0" fill="rgb(243,189,52)" rx="2" ry="2" />
<text  x="119.34" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="1027.1" y="1493" width="1.7" height="15.0" fill="rgb(218,130,16)" rx="2" ry="2" />
<text  x="1030.06" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (7 samples, 1.02%)</title><rect x="111.2" y="1477" width="12.0" height="15.0" fill="rgb(233,215,0)" rx="2" ry="2" />
<text  x="114.19" y="1487.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (1 samples, 0.15%)</title><rect x="663.5" y="1509" width="1.7" height="15.0" fill="rgb(225,57,29)" rx="2" ry="2" />
<text  x="666.46" y="1519.5" ></text>
</g>
<g >
<title>[[vdso]] (7 samples, 1.02%)</title><rect x="1097.4" y="1749" width="12.0" height="15.0" fill="rgb(232,192,22)" rx="2" ry="2" />
<text  x="1100.38" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="68.3" y="277" width="1.7" height="15.0" fill="rgb(211,148,34)" rx="2" ry="2" />
<text  x="71.31" y="287.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="222.7" y="1573" width="1.7" height="15.0" fill="rgb(245,106,13)" rx="2" ry="2" />
<text  x="225.67" y="1583.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="745.8" y="1621" width="1.7" height="15.0" fill="rgb(241,24,0)" rx="2" ry="2" />
<text  x="748.78" y="1631.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (3 samples, 0.44%)</title><rect x="841.8" y="1589" width="5.2" height="15.0" fill="rgb(214,68,18)" rx="2" ry="2" />
<text  x="844.83" y="1599.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.15%)</title><rect x="466.2" y="1525" width="1.7" height="15.0" fill="rgb(216,176,20)" rx="2" ry="2" />
<text  x="469.22" y="1535.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.15%)</title><rect x="66.6" y="549" width="1.7" height="15.0" fill="rgb(210,152,22)" rx="2" ry="2" />
<text  x="69.60" y="559.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1557" width="87.5" height="15.0" fill="rgb(249,168,0)" rx="2" ry="2" />
<text  x="14.72" y="1567.5" >[unknown]</text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (2 samples, 0.29%)</title><rect x="11.7" y="261" width="3.4" height="15.0" fill="rgb(218,123,38)" rx="2" ry="2" />
<text  x="14.72" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.15%)</title><rect x="1045.9" y="1493" width="1.7" height="15.0" fill="rgb(235,122,37)" rx="2" ry="2" />
<text  x="1048.93" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::grant_statement, std::default_delete&lt;cql3::statements::grant_statement&gt; &gt;::~unique_ptr (1 samples, 0.15%)</title><rect x="88.9" y="437" width="1.7" height="15.0" fill="rgb(225,92,36)" rx="2" ry="2" />
<text  x="91.90" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (8 samples, 1.16%)</title><rect x="488.5" y="1509" width="13.7" height="15.0" fill="rgb(245,94,53)" rx="2" ry="2" />
<text  x="491.52" y="1519.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.15%)</title><rect x="97.5" y="885" width="1.7" height="15.0" fill="rgb(249,63,13)" rx="2" ry="2" />
<text  x="100.47" y="895.5" ></text>
</g>
<g >
<title>database::has_keyspace (2 samples, 0.29%)</title><rect x="843.5" y="1573" width="3.5" height="15.0" fill="rgb(207,150,45)" rx="2" ry="2" />
<text  x="846.55" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (3 samples, 0.44%)</title><rect x="521.1" y="1525" width="5.1" height="15.0" fill="rgb(252,143,54)" rx="2" ry="2" />
<text  x="524.10" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="128.3" y="1317" width="1.8" height="15.0" fill="rgb(239,142,52)" rx="2" ry="2" />
<text  x="131.34" y="1327.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (2 samples, 0.29%)</title><rect x="267.3" y="1493" width="3.4" height="15.0" fill="rgb(236,19,6)" rx="2" ry="2" />
<text  x="270.27" y="1503.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.15%)</title><rect x="857.3" y="1461" width="1.7" height="15.0" fill="rgb(207,114,32)" rx="2" ry="2" />
<text  x="860.27" y="1471.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (7 samples, 1.02%)</title><rect x="713.2" y="1637" width="12.0" height="15.0" fill="rgb(245,191,50)" rx="2" ry="2" />
<text  x="716.20" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (4 samples, 0.58%)</title><rect x="71.7" y="565" width="6.9" height="15.0" fill="rgb(242,94,9)" rx="2" ry="2" />
<text  x="74.74" y="575.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (4 samples, 0.58%)</title><rect x="71.7" y="517" width="6.9" height="15.0" fill="rgb(252,122,43)" rx="2" ry="2" />
<text  x="74.74" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.15%)</title><rect x="70.0" y="245" width="1.7" height="15.0" fill="rgb(223,221,46)" rx="2" ry="2" />
<text  x="73.03" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (4 samples, 0.58%)</title><rect x="58.0" y="309" width="6.9" height="15.0" fill="rgb(210,27,39)" rx="2" ry="2" />
<text  x="61.02" y="319.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="71.7" y="213" width="1.8" height="15.0" fill="rgb(238,153,29)" rx="2" ry="2" />
<text  x="74.74" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="61.5" y="101" width="1.7" height="15.0" fill="rgb(220,109,2)" rx="2" ry="2" />
<text  x="64.45" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="929.3" y="1477" width="1.7" height="15.0" fill="rgb(215,182,34)" rx="2" ry="2" />
<text  x="932.30" y="1487.5" ></text>
</g>
<g >
<title>service::client_state::has_access (16 samples, 2.33%)</title><rect x="799.0" y="1541" width="27.4" height="15.0" fill="rgb(241,182,27)" rx="2" ry="2" />
<text  x="801.95" y="1551.5" >s..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="735.5" y="1509" width="1.7" height="15.0" fill="rgb(237,147,41)" rx="2" ry="2" />
<text  x="738.49" y="1519.5" ></text>
</g>
<g >
<title>do_cql_test (4 samples, 0.58%)</title><rect x="71.7" y="549" width="6.9" height="15.0" fill="rgb(235,29,48)" rx="2" ry="2" />
<text  x="74.74" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (2 samples, 0.29%)</title><rect x="119.8" y="1445" width="3.4" height="15.0" fill="rgb(230,60,3)" rx="2" ry="2" />
<text  x="122.77" y="1455.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.15%)</title><rect x="311.9" y="1429" width="1.7" height="15.0" fill="rgb(215,188,27)" rx="2" ry="2" />
<text  x="314.86" y="1439.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.15%)</title><rect x="99.2" y="1541" width="1.7" height="15.0" fill="rgb(253,8,21)" rx="2" ry="2" />
<text  x="102.19" y="1551.5" ></text>
</g>
<g >
<title>make_combined_reader (11 samples, 1.60%)</title><rect x="555.4" y="1541" width="18.9" height="15.0" fill="rgb(213,130,20)" rx="2" ry="2" />
<text  x="558.41" y="1551.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (4 samples, 0.58%)</title><rect x="852.1" y="1621" width="6.9" height="15.0" fill="rgb(221,123,8)" rx="2" ry="2" />
<text  x="855.12" y="1631.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (16 samples, 2.33%)</title><rect x="111.2" y="1589" width="27.4" height="15.0" fill="rgb(226,201,48)" rx="2" ry="2" />
<text  x="114.19" y="1599.5" >c..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.15%)</title><rect x="116.3" y="1365" width="1.8" height="15.0" fill="rgb(222,23,14)" rx="2" ry="2" />
<text  x="119.34" y="1375.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (2 samples, 0.29%)</title><rect x="685.8" y="1637" width="3.4" height="15.0" fill="rgb(233,67,14)" rx="2" ry="2" />
<text  x="688.76" y="1647.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (3 samples, 0.44%)</title><rect x="51.2" y="421" width="5.1" height="15.0" fill="rgb(236,24,17)" rx="2" ry="2" />
<text  x="54.16" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (1 samples, 0.15%)</title><rect x="850.4" y="1621" width="1.7" height="15.0" fill="rgb(207,55,18)" rx="2" ry="2" />
<text  x="853.41" y="1631.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (543 samples, 78.92%)</title><rect x="152.4" y="1653" width="931.3" height="15.0" fill="rgb(226,139,8)" rx="2" ry="2" />
<text  x="155.35" y="1663.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="277.6" y="1429" width="1.7" height="15.0" fill="rgb(211,223,39)" rx="2" ry="2" />
<text  x="280.56" y="1439.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.15%)</title><rect x="66.6" y="117" width="1.7" height="15.0" fill="rgb(209,94,45)" rx="2" ry="2" />
<text  x="69.60" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="706.3" y="1621" width="1.8" height="15.0" fill="rgb(250,31,32)" rx="2" ry="2" />
<text  x="709.34" y="1631.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (26 samples, 3.78%)</title><rect x="951.6" y="1477" width="44.6" height="15.0" fill="rgb(233,115,52)" rx="2" ry="2" />
<text  x="954.60" y="1487.5" >serv..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (3 samples, 0.44%)</title><rect x="502.2" y="1557" width="5.2" height="15.0" fill="rgb(206,108,49)" rx="2" ry="2" />
<text  x="505.24" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1125" width="87.5" height="15.0" fill="rgb(244,77,6)" rx="2" ry="2" />
<text  x="14.72" y="1135.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="423.3" y="1525" width="1.8" height="15.0" fill="rgb(247,143,4)" rx="2" ry="2" />
<text  x="426.34" y="1535.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="51.2" y="117" width="1.7" height="15.0" fill="rgb(218,14,50)" rx="2" ry="2" />
<text  x="54.16" y="127.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.15%)</title><rect x="699.5" y="1573" width="1.7" height="15.0" fill="rgb(223,227,14)" rx="2" ry="2" />
<text  x="702.48" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (20 samples, 2.91%)</title><rect x="11.7" y="469" width="34.3" height="15.0" fill="rgb(238,94,13)" rx="2" ry="2" />
<text  x="14.72" y="479.5" >se..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="47.7" y="181" width="1.7" height="15.0" fill="rgb(243,38,43)" rx="2" ry="2" />
<text  x="50.73" y="191.5" ></text>
</g>
<g >
<title>[unknown] (54 samples, 7.85%)</title><rect x="11.7" y="1701" width="92.6" height="15.0" fill="rgb(229,118,4)" rx="2" ry="2" />
<text  x="14.72" y="1711.5" >[unknown]</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="71.7" y="373" width="1.8" height="15.0" fill="rgb(207,79,22)" rx="2" ry="2" />
<text  x="74.74" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="682.3" y="1621" width="1.7" height="15.0" fill="rgb(210,11,44)" rx="2" ry="2" />
<text  x="685.33" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1 samples, 0.15%)</title><rect x="1085.4" y="1589" width="1.7" height="15.0" fill="rgb(206,100,7)" rx="2" ry="2" />
<text  x="1088.38" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (14 samples, 2.03%)</title><rect x="879.6" y="1557" width="24.0" height="15.0" fill="rgb(220,226,25)" rx="2" ry="2" />
<text  x="882.56" y="1567.5" >c..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="39.2" y="229" width="1.7" height="15.0" fill="rgb(210,218,23)" rx="2" ry="2" />
<text  x="42.16" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (1 samples, 0.15%)</title><rect x="1044.2" y="1493" width="1.7" height="15.0" fill="rgb(234,181,34)" rx="2" ry="2" />
<text  x="1047.22" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.15%)</title><rect x="46.0" y="213" width="1.7" height="15.0" fill="rgb(251,17,33)" rx="2" ry="2" />
<text  x="49.02" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="838.4" y="1573" width="3.4" height="15.0" fill="rgb(238,23,30)" rx="2" ry="2" />
<text  x="841.40" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="66.6" y="133" width="1.7" height="15.0" fill="rgb(246,126,26)" rx="2" ry="2" />
<text  x="69.60" y="143.5" ></text>
</g>
<g >
<title>row::append_cell (1 samples, 0.15%)</title><rect x="1040.8" y="1477" width="1.7" height="15.0" fill="rgb(238,93,35)" rx="2" ry="2" />
<text  x="1043.78" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 7.27%)</title><rect x="11.7" y="869" width="85.8" height="15.0" fill="rgb(216,76,1)" rx="2" ry="2" />
<text  x="14.72" y="879.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="68.3" y="549" width="1.7" height="15.0" fill="rgb(206,217,35)" rx="2" ry="2" />
<text  x="71.31" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="49.4" y="117" width="1.8" height="15.0" fill="rgb(251,136,37)" rx="2" ry="2" />
<text  x="52.45" y="127.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.29%)</title><rect x="414.8" y="1509" width="3.4" height="15.0" fill="rgb(205,183,11)" rx="2" ry="2" />
<text  x="417.77" y="1519.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="383.9" y="1573" width="1.7" height="15.0" fill="rgb(233,82,12)" rx="2" ry="2" />
<text  x="386.90" y="1583.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (2 samples, 0.29%)</title><rect x="90.6" y="581" width="3.4" height="15.0" fill="rgb(226,21,3)" rx="2" ry="2" />
<text  x="93.61" y="591.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1413" width="87.5" height="15.0" fill="rgb(205,197,37)" rx="2" ry="2" />
<text  x="14.72" y="1423.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.87%)</title><rect x="56.3" y="389" width="10.3" height="15.0" fill="rgb(247,190,43)" rx="2" ry="2" />
<text  x="59.31" y="399.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="97.5" y="517" width="1.7" height="15.0" fill="rgb(247,71,5)" rx="2" ry="2" />
<text  x="100.47" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="51.2" y="197" width="1.7" height="15.0" fill="rgb(206,95,23)" rx="2" ry="2" />
<text  x="54.16" y="207.5" ></text>
</g>
<g >
<title>all (688 samples, 100%)</title><rect x="10.0" y="1797" width="1180.0" height="15.0" fill="rgb(221,72,36)" rx="2" ry="2" />
<text  x="13.00" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.15%)</title><rect x="95.8" y="437" width="1.7" height="15.0" fill="rgb(252,81,27)" rx="2" ry="2" />
<text  x="98.76" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (1 samples, 0.15%)</title><rect x="1085.4" y="1621" width="1.7" height="15.0" fill="rgb(232,134,3)" rx="2" ry="2" />
<text  x="1088.38" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (2 samples, 0.29%)</title><rect x="15.1" y="213" width="3.5" height="15.0" fill="rgb(245,176,28)" rx="2" ry="2" />
<text  x="18.15" y="223.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.15%)</title><rect x="121.5" y="1397" width="1.7" height="15.0" fill="rgb(246,33,11)" rx="2" ry="2" />
<text  x="124.48" y="1407.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.29%)</title><rect x="1109.4" y="1749" width="3.4" height="15.0" fill="rgb(243,13,14)" rx="2" ry="2" />
<text  x="1112.39" y="1759.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="124.9" y="1397" width="1.7" height="15.0" fill="rgb(207,68,0)" rx="2" ry="2" />
<text  x="127.91" y="1407.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (37 samples, 5.38%)</title><rect x="298.1" y="1445" width="63.5" height="15.0" fill="rgb(232,116,6)" rx="2" ry="2" />
<text  x="301.14" y="1455.5" >partit..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.15%)</title><rect x="15.1" y="117" width="1.8" height="15.0" fill="rgb(246,218,29)" rx="2" ry="2" />
<text  x="18.15" y="127.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="40.9" y="181" width="1.7" height="15.0" fill="rgb(249,81,27)" rx="2" ry="2" />
<text  x="43.87" y="191.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1349" width="87.5" height="15.0" fill="rgb(205,1,4)" rx="2" ry="2" />
<text  x="14.72" y="1359.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.15%)</title><rect x="46.0" y="261" width="1.7" height="15.0" fill="rgb(254,154,31)" rx="2" ry="2" />
<text  x="49.02" y="271.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (6 samples, 0.87%)</title><rect x="467.9" y="1541" width="10.3" height="15.0" fill="rgb(220,193,14)" rx="2" ry="2" />
<text  x="470.94" y="1551.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.44%)</title><rect x="792.1" y="1541" width="5.1" height="15.0" fill="rgb(224,4,35)" rx="2" ry="2" />
<text  x="795.09" y="1551.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.15%)</title><rect x="70.0" y="533" width="1.7" height="15.0" fill="rgb(246,61,45)" rx="2" ry="2" />
<text  x="73.03" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (2 samples, 0.29%)</title><rect x="22.0" y="165" width="3.4" height="15.0" fill="rgb(243,43,49)" rx="2" ry="2" />
<text  x="25.01" y="175.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="135.2" y="1349" width="1.7" height="15.0" fill="rgb(225,68,3)" rx="2" ry="2" />
<text  x="138.20" y="1359.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.29%)</title><rect x="94.0" y="693" width="3.5" height="15.0" fill="rgb(244,12,12)" rx="2" ry="2" />
<text  x="97.04" y="703.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.58%)</title><rect x="112.9" y="1445" width="6.9" height="15.0" fill="rgb(220,30,20)" rx="2" ry="2" />
<text  x="115.91" y="1455.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.15%)</title><rect x="61.5" y="277" width="1.7" height="15.0" fill="rgb(205,96,18)" rx="2" ry="2" />
<text  x="64.45" y="287.5" ></text>
</g>
<g >
<title>table::apply (3 samples, 0.44%)</title><rect x="1037.4" y="1525" width="5.1" height="15.0" fill="rgb(210,110,32)" rx="2" ry="2" />
<text  x="1040.35" y="1535.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.29%)</title><rect x="478.2" y="1541" width="3.5" height="15.0" fill="rgb(223,151,38)" rx="2" ry="2" />
<text  x="481.23" y="1551.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="52.9" y="213" width="3.4" height="15.0" fill="rgb(246,113,33)" rx="2" ry="2" />
<text  x="55.88" y="223.5" ></text>
</g>
<g >
<title>create_partitions (4 samples, 0.58%)</title><rect x="71.7" y="533" width="6.9" height="15.0" fill="rgb(243,131,48)" rx="2" ry="2" />
<text  x="74.74" y="543.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (4 samples, 0.58%)</title><rect x="71.7" y="469" width="6.9" height="15.0" fill="rgb(235,213,38)" rx="2" ry="2" />
<text  x="74.74" y="479.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.15%)</title><rect x="162.6" y="1605" width="1.8" height="15.0" fill="rgb(243,153,0)" rx="2" ry="2" />
<text  x="165.65" y="1615.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::with_scheduling_group&lt;table::try_flush_memtable_to_sstable (1 samples, 0.15%)</title><rect x="1045.9" y="1637" width="1.7" height="15.0" fill="rgb(231,89,13)" rx="2" ry="2" />
<text  x="1048.93" y="1647.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (17 samples, 2.47%)</title><rect x="109.5" y="1621" width="29.1" height="15.0" fill="rgb(213,83,48)" rx="2" ry="2" />
<text  x="112.48" y="1631.5" >cq..</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.15%)</title><rect x="118.1" y="1381" width="1.7" height="15.0" fill="rgb(243,6,20)" rx="2" ry="2" />
<text  x="121.05" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1317" width="87.5" height="15.0" fill="rgb(221,125,2)" rx="2" ry="2" />
<text  x="14.72" y="1327.5" >[unknown]</text>
</g>
<g >
<title>to_hex (1 samples, 0.15%)</title><rect x="44.3" y="405" width="1.7" height="15.0" fill="rgb(246,49,52)" rx="2" ry="2" />
<text  x="47.30" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="128.3" y="1349" width="1.8" height="15.0" fill="rgb(233,221,31)" rx="2" ry="2" />
<text  x="131.34" y="1359.5" ></text>
</g>
<g >
<title>query::querier&lt; (161 samples, 23.40%)</title><rect x="231.2" y="1589" width="276.2" height="15.0" fill="rgb(225,179,16)" rx="2" ry="2" />
<text  x="234.25" y="1599.5" >query::querier&lt;</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.15%)</title><rect x="121.5" y="1413" width="1.7" height="15.0" fill="rgb(218,78,15)" rx="2" ry="2" />
<text  x="124.48" y="1423.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (1 samples, 0.15%)</title><rect x="136.9" y="1381" width="1.7" height="15.0" fill="rgb(218,201,1)" rx="2" ry="2" />
<text  x="139.92" y="1391.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.15%)</title><rect x="694.3" y="1605" width="1.7" height="15.0" fill="rgb(231,225,26)" rx="2" ry="2" />
<text  x="697.33" y="1615.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.15%)</title><rect x="97.5" y="789" width="1.7" height="15.0" fill="rgb(226,170,16)" rx="2" ry="2" />
<text  x="100.47" y="799.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="49.4" y="197" width="1.8" height="15.0" fill="rgb(227,85,50)" rx="2" ry="2" />
<text  x="52.45" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="133.5" y="1221" width="1.7" height="15.0" fill="rgb(245,117,15)" rx="2" ry="2" />
<text  x="136.49" y="1231.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (1 samples, 0.15%)</title><rect x="92.3" y="405" width="1.7" height="15.0" fill="rgb(247,69,22)" rx="2" ry="2" />
<text  x="95.33" y="415.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.58%)</title><rect x="1090.5" y="1765" width="6.9" height="15.0" fill="rgb(247,183,36)" rx="2" ry="2" />
<text  x="1093.52" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.15%)</title><rect x="116.3" y="1317" width="1.8" height="15.0" fill="rgb(233,117,49)" rx="2" ry="2" />
<text  x="119.34" y="1327.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.15%)</title><rect x="548.5" y="1541" width="1.8" height="15.0" fill="rgb(253,60,29)" rx="2" ry="2" />
<text  x="551.55" y="1551.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (6 samples, 0.87%)</title><rect x="56.3" y="437" width="10.3" height="15.0" fill="rgb(250,5,11)" rx="2" ry="2" />
<text  x="59.31" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="54.6" y="181" width="1.7" height="15.0" fill="rgb(240,220,12)" rx="2" ry="2" />
<text  x="57.59" y="191.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="47.7" y="197" width="1.7" height="15.0" fill="rgb(251,84,35)" rx="2" ry="2" />
<text  x="50.73" y="207.5" ></text>
</g>
<g >
<title>create_partitions (3 samples, 0.44%)</title><rect x="46.0" y="437" width="5.2" height="15.0" fill="rgb(249,189,14)" rx="2" ry="2" />
<text  x="49.02" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (4 samples, 0.58%)</title><rect x="884.7" y="1477" width="6.9" height="15.0" fill="rgb(232,32,54)" rx="2" ry="2" />
<text  x="887.71" y="1487.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (2 samples, 0.29%)</title><rect x="781.8" y="1541" width="3.4" height="15.0" fill="rgb(247,61,24)" rx="2" ry="2" />
<text  x="784.80" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 6.69%)</title><rect x="11.7" y="693" width="78.9" height="15.0" fill="rgb(228,191,25)" rx="2" ry="2" />
<text  x="14.72" y="703.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.15%)</title><rect x="119.8" y="1317" width="1.7" height="15.0" fill="rgb(246,137,2)" rx="2" ry="2" />
<text  x="122.77" y="1327.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (2 samples, 0.29%)</title><rect x="356.5" y="1397" width="3.4" height="15.0" fill="rgb(249,198,5)" rx="2" ry="2" />
<text  x="359.45" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="745.8" y="1605" width="1.7" height="15.0" fill="rgb(210,172,45)" rx="2" ry="2" />
<text  x="748.78" y="1615.5" ></text>
</g>
<g >
<title>dht::tri_compare (4 samples, 0.58%)</title><rect x="593.1" y="1509" width="6.9" height="15.0" fill="rgb(250,32,35)" rx="2" ry="2" />
<text  x="596.14" y="1519.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (2 samples, 0.29%)</title><rect x="22.0" y="181" width="3.4" height="15.0" fill="rgb(207,214,9)" rx="2" ry="2" />
<text  x="25.01" y="191.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1205" width="87.5" height="15.0" fill="rgb(218,14,44)" rx="2" ry="2" />
<text  x="14.72" y="1215.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="634.3" y="1493" width="1.7" height="15.0" fill="rgb(233,176,19)" rx="2" ry="2" />
<text  x="637.30" y="1503.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (1 samples, 0.15%)</title><rect x="618.9" y="1493" width="1.7" height="15.0" fill="rgb(249,212,11)" rx="2" ry="2" />
<text  x="621.87" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (2 samples, 0.29%)</title><rect x="888.1" y="1461" width="3.5" height="15.0" fill="rgb(252,215,13)" rx="2" ry="2" />
<text  x="891.14" y="1471.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.15%)</title><rect x="68.3" y="581" width="1.7" height="15.0" fill="rgb(239,89,44)" rx="2" ry="2" />
<text  x="71.31" y="591.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="933" width="87.5" height="15.0" fill="rgb(237,82,44)" rx="2" ry="2" />
<text  x="14.72" y="943.5" >[unknown]</text>
</g>
<g >
<title>operator new (3 samples, 0.44%)</title><rect x="761.2" y="1621" width="5.2" height="15.0" fill="rgb(234,138,34)" rx="2" ry="2" />
<text  x="764.22" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (1 samples, 0.15%)</title><rect x="102.6" y="1413" width="1.7" height="15.0" fill="rgb(228,194,12)" rx="2" ry="2" />
<text  x="105.62" y="1423.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (1 samples, 0.15%)</title><rect x="109.5" y="1541" width="1.7" height="15.0" fill="rgb(212,158,45)" rx="2" ry="2" />
<text  x="112.48" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1669" width="87.5" height="15.0" fill="rgb(217,82,36)" rx="2" ry="2" />
<text  x="14.72" y="1679.5" >[unknown]</text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.15%)</title><rect x="1039.1" y="1461" width="1.7" height="15.0" fill="rgb(230,119,7)" rx="2" ry="2" />
<text  x="1042.07" y="1471.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.15%)</title><rect x="742.4" y="1605" width="1.7" height="15.0" fill="rgb(220,57,34)" rx="2" ry="2" />
<text  x="745.35" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="51.2" y="149" width="1.7" height="15.0" fill="rgb(232,217,5)" rx="2" ry="2" />
<text  x="54.16" y="159.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.15%)</title><rect x="193.5" y="1589" width="1.7" height="15.0" fill="rgb(217,92,29)" rx="2" ry="2" />
<text  x="196.52" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.15%)</title><rect x="1085.4" y="1605" width="1.7" height="15.0" fill="rgb(254,40,41)" rx="2" ry="2" />
<text  x="1088.38" y="1615.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="1087.1" y="1637" width="1.7" height="15.0" fill="rgb(253,72,5)" rx="2" ry="2" />
<text  x="1090.09" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.87%)</title><rect x="80.3" y="469" width="10.3" height="15.0" fill="rgb(252,162,49)" rx="2" ry="2" />
<text  x="83.32" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="71.7" y="261" width="1.8" height="15.0" fill="rgb(241,99,15)" rx="2" ry="2" />
<text  x="74.74" y="271.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (39 samples, 5.67%)</title><rect x="1121.4" y="1765" width="66.9" height="15.0" fill="rgb(237,218,38)" rx="2" ry="2" />
<text  x="1124.40" y="1775.5" >sched_s..</text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.15%)</title><rect x="1040.8" y="1445" width="1.7" height="15.0" fill="rgb(252,22,32)" rx="2" ry="2" />
<text  x="1043.78" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.29%)</title><rect x="131.8" y="1301" width="3.4" height="15.0" fill="rgb(228,103,43)" rx="2" ry="2" />
<text  x="134.77" y="1311.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="809.2" y="1477" width="3.5" height="15.0" fill="rgb(223,34,10)" rx="2" ry="2" />
<text  x="812.24" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="68.3" y="229" width="1.7" height="15.0" fill="rgb(243,218,21)" rx="2" ry="2" />
<text  x="71.31" y="239.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.15%)</title><rect x="128.3" y="1381" width="1.8" height="15.0" fill="rgb(240,81,10)" rx="2" ry="2" />
<text  x="131.34" y="1391.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="70.0" y="565" width="1.7" height="15.0" fill="rgb(224,103,32)" rx="2" ry="2" />
<text  x="73.03" y="575.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.15%)</title><rect x="71.7" y="357" width="1.8" height="15.0" fill="rgb(214,189,9)" rx="2" ry="2" />
<text  x="74.74" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.29%)</title><rect x="708.1" y="1621" width="3.4" height="15.0" fill="rgb(224,64,30)" rx="2" ry="2" />
<text  x="711.05" y="1631.5" ></text>
</g>
<g >
<title>do_cql_test (3 samples, 0.44%)</title><rect x="99.2" y="1605" width="5.1" height="15.0" fill="rgb(222,59,4)" rx="2" ry="2" />
<text  x="102.19" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.87%)</title><rect x="56.3" y="517" width="10.3" height="15.0" fill="rgb(242,113,13)" rx="2" ry="2" />
<text  x="59.31" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="989.3" y="1381" width="1.7" height="15.0" fill="rgb(226,193,33)" rx="2" ry="2" />
<text  x="992.33" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="128.3" y="1365" width="1.8" height="15.0" fill="rgb(250,23,33)" rx="2" ry="2" />
<text  x="131.34" y="1375.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.15%)</title><rect x="1045.9" y="1477" width="1.7" height="15.0" fill="rgb(227,52,17)" rx="2" ry="2" />
<text  x="1048.93" y="1487.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (9 samples, 1.31%)</title><rect x="1097.4" y="1765" width="15.4" height="15.0" fill="rgb(218,103,40)" rx="2" ry="2" />
<text  x="1100.38" y="1775.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.15%)</title><rect x="109.5" y="1589" width="1.7" height="15.0" fill="rgb(212,192,31)" rx="2" ry="2" />
<text  x="112.48" y="1599.5" ></text>
</g>
<g >
<title>create_partitions (17 samples, 2.47%)</title><rect x="109.5" y="1653" width="29.1" height="15.0" fill="rgb(221,6,29)" rx="2" ry="2" />
<text  x="112.48" y="1663.5" >cr..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="52.9" y="229" width="3.4" height="15.0" fill="rgb(238,45,54)" rx="2" ry="2" />
<text  x="55.88" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (2 samples, 0.29%)</title><rect x="853.8" y="1461" width="3.5" height="15.0" fill="rgb(208,161,54)" rx="2" ry="2" />
<text  x="856.84" y="1471.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (2 samples, 0.29%)</title><rect x="73.5" y="373" width="3.4" height="15.0" fill="rgb(218,132,20)" rx="2" ry="2" />
<text  x="76.46" y="383.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.15%)</title><rect x="853.8" y="1413" width="1.8" height="15.0" fill="rgb(232,130,13)" rx="2" ry="2" />
<text  x="856.84" y="1423.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (7 samples, 1.02%)</title><rect x="653.2" y="1525" width="12.0" height="15.0" fill="rgb(239,10,51)" rx="2" ry="2" />
<text  x="656.17" y="1535.5" ></text>
</g>
<g >
<title>do_cql_test (2 samples, 0.29%)</title><rect x="90.6" y="645" width="3.4" height="15.0" fill="rgb(207,37,19)" rx="2" ry="2" />
<text  x="93.61" y="655.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="949" width="87.5" height="15.0" fill="rgb(228,159,30)" rx="2" ry="2" />
<text  x="14.72" y="959.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (5 samples, 0.73%)</title><rect x="140.3" y="1733" width="8.6" height="15.0" fill="rgb(239,225,5)" rx="2" ry="2" />
<text  x="143.35" y="1743.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="702.9" y="1605" width="1.7" height="15.0" fill="rgb(227,11,40)" rx="2" ry="2" />
<text  x="705.91" y="1615.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="66.6" y="85" width="1.7" height="15.0" fill="rgb(253,221,15)" rx="2" ry="2" />
<text  x="69.60" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="605.1" y="1477" width="1.8" height="15.0" fill="rgb(206,123,50)" rx="2" ry="2" />
<text  x="608.15" y="1487.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="39.2" y="245" width="1.7" height="15.0" fill="rgb(230,197,10)" rx="2" ry="2" />
<text  x="42.16" y="255.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (3 samples, 0.44%)</title><rect x="46.0" y="421" width="5.2" height="15.0" fill="rgb(214,25,9)" rx="2" ry="2" />
<text  x="49.02" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="167.8" y="1605" width="1.7" height="15.0" fill="rgb(253,155,24)" rx="2" ry="2" />
<text  x="170.79" y="1615.5" ></text>
</g>
<g >
<title>row::external_memory_usage (7 samples, 1.02%)</title><rect x="313.6" y="1429" width="12.0" height="15.0" fill="rgb(221,51,2)" rx="2" ry="2" />
<text  x="316.58" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="1023.6" y="1509" width="5.2" height="15.0" fill="rgb(244,86,39)" rx="2" ry="2" />
<text  x="1026.63" y="1519.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.29%)</title><rect x="94.0" y="501" width="3.5" height="15.0" fill="rgb(230,108,1)" rx="2" ry="2" />
<text  x="97.04" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="97.5" y="645" width="1.7" height="15.0" fill="rgb(244,50,22)" rx="2" ry="2" />
<text  x="100.47" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="133.5" y="1189" width="1.7" height="15.0" fill="rgb(230,74,36)" rx="2" ry="2" />
<text  x="136.49" y="1199.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.15%)</title><rect x="97.5" y="741" width="1.7" height="15.0" fill="rgb(220,150,13)" rx="2" ry="2" />
<text  x="100.47" y="751.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1605" width="87.5" height="15.0" fill="rgb(245,192,6)" rx="2" ry="2" />
<text  x="14.72" y="1615.5" >[unknown]</text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (2 samples, 0.29%)</title><rect x="526.2" y="1525" width="3.5" height="15.0" fill="rgb(250,161,10)" rx="2" ry="2" />
<text  x="529.25" y="1535.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::allocate (1 samples, 0.15%)</title><rect x="92.3" y="357" width="1.7" height="15.0" fill="rgb(248,222,16)" rx="2" ry="2" />
<text  x="95.33" y="367.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.15%)</title><rect x="92.3" y="501" width="1.7" height="15.0" fill="rgb(225,120,25)" rx="2" ry="2" />
<text  x="95.33" y="511.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (2 samples, 0.29%)</title><rect x="222.7" y="1589" width="3.4" height="15.0" fill="rgb(205,75,42)" rx="2" ry="2" />
<text  x="225.67" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.15%)</title><rect x="82.0" y="389" width="1.8" height="15.0" fill="rgb(239,152,44)" rx="2" ry="2" />
<text  x="85.03" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.15%)</title><rect x="54.6" y="149" width="1.7" height="15.0" fill="rgb(240,158,16)" rx="2" ry="2" />
<text  x="57.59" y="159.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.15%)</title><rect x="119.8" y="1413" width="1.7" height="15.0" fill="rgb(247,216,38)" rx="2" ry="2" />
<text  x="122.77" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="119.8" y="1285" width="1.7" height="15.0" fill="rgb(253,189,30)" rx="2" ry="2" />
<text  x="122.77" y="1295.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.15%)</title><rect x="70.0" y="389" width="1.7" height="15.0" fill="rgb(232,75,3)" rx="2" ry="2" />
<text  x="73.03" y="399.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (2 samples, 0.29%)</title><rect x="11.7" y="309" width="3.4" height="15.0" fill="rgb(218,151,28)" rx="2" ry="2" />
<text  x="14.72" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (16 samples, 2.33%)</title><rect x="507.4" y="1573" width="27.4" height="15.0" fill="rgb(224,199,28)" rx="2" ry="2" />
<text  x="510.38" y="1583.5" >s..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="123.2" y="1461" width="1.7" height="15.0" fill="rgb(223,183,20)" rx="2" ry="2" />
<text  x="126.20" y="1471.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="991.0" y="1381" width="1.8" height="15.0" fill="rgb(218,180,47)" rx="2" ry="2" />
<text  x="994.05" y="1391.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="567.4" y="1509" width="1.7" height="15.0" fill="rgb(233,148,1)" rx="2" ry="2" />
<text  x="570.41" y="1519.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.29%)</title><rect x="131.8" y="1397" width="3.4" height="15.0" fill="rgb(243,109,43)" rx="2" ry="2" />
<text  x="134.77" y="1407.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (12 samples, 1.74%)</title><rect x="15.1" y="277" width="20.6" height="15.0" fill="rgb(206,109,12)" rx="2" ry="2" />
<text  x="18.15" y="287.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.15%)</title><rect x="1030.5" y="1557" width="1.7" height="15.0" fill="rgb(237,82,25)" rx="2" ry="2" />
<text  x="1033.49" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.15%)</title><rect x="538.3" y="1557" width="1.7" height="15.0" fill="rgb(249,177,14)" rx="2" ry="2" />
<text  x="541.26" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.15%)</title><rect x="119.8" y="1253" width="1.7" height="15.0" fill="rgb(237,115,18)" rx="2" ry="2" />
<text  x="122.77" y="1263.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::run_and_dispose (1 samples, 0.15%)</title><rect x="850.4" y="1637" width="1.7" height="15.0" fill="rgb(235,36,29)" rx="2" ry="2" />
<text  x="853.41" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1077" width="87.5" height="15.0" fill="rgb(245,161,37)" rx="2" ry="2" />
<text  x="14.72" y="1087.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="70.0" y="357" width="1.7" height="15.0" fill="rgb(252,151,22)" rx="2" ry="2" />
<text  x="73.03" y="367.5" ></text>
</g>
<g >
<title>posix_memalign (2 samples, 0.29%)</title><rect x="356.5" y="1381" width="3.4" height="15.0" fill="rgb(207,139,2)" rx="2" ry="2" />
<text  x="359.45" y="1391.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="97.5" y="597" width="1.7" height="15.0" fill="rgb(211,46,44)" rx="2" ry="2" />
<text  x="100.47" y="607.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.15%)</title><rect x="1045.9" y="1525" width="1.7" height="15.0" fill="rgb(228,181,47)" rx="2" ry="2" />
<text  x="1048.93" y="1535.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.15%)</title><rect x="1045.9" y="1541" width="1.7" height="15.0" fill="rgb(205,10,17)" rx="2" ry="2" />
<text  x="1048.93" y="1551.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (6 samples, 0.87%)</title><rect x="56.3" y="421" width="10.3" height="15.0" fill="rgb(212,50,25)" rx="2" ry="2" />
<text  x="59.31" y="431.5" ></text>
</g>
<g >
<title>database::find_schema (3 samples, 0.44%)</title><rect x="828.1" y="1525" width="5.2" height="15.0" fill="rgb(208,220,7)" rx="2" ry="2" />
<text  x="831.11" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (48 samples, 6.98%)</title><rect x="11.7" y="725" width="82.3" height="15.0" fill="rgb(233,108,44)" rx="2" ry="2" />
<text  x="14.72" y="735.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="128.3" y="1333" width="1.8" height="15.0" fill="rgb(219,196,53)" rx="2" ry="2" />
<text  x="131.34" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1429" width="87.5" height="15.0" fill="rgb(226,132,40)" rx="2" ry="2" />
<text  x="14.72" y="1439.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.15%)</title><rect x="61.5" y="165" width="1.7" height="15.0" fill="rgb(213,203,12)" rx="2" ry="2" />
<text  x="64.45" y="175.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.15%)</title><rect x="600.0" y="1493" width="1.7" height="15.0" fill="rgb(205,22,11)" rx="2" ry="2" />
<text  x="603.00" y="1503.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="49.4" y="133" width="1.8" height="15.0" fill="rgb(213,36,42)" rx="2" ry="2" />
<text  x="52.45" y="143.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.15%)</title><rect x="181.5" y="1621" width="1.7" height="15.0" fill="rgb(211,99,31)" rx="2" ry="2" />
<text  x="184.51" y="1631.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="224.4" y="1573" width="1.7" height="15.0" fill="rgb(245,201,49)" rx="2" ry="2" />
<text  x="227.39" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.15%)</title><rect x="70.0" y="581" width="1.7" height="15.0" fill="rgb(235,152,7)" rx="2" ry="2" />
<text  x="73.03" y="591.5" ></text>
</g>
<g >
<title>do_cql_test (3 samples, 0.44%)</title><rect x="46.0" y="453" width="5.2" height="15.0" fill="rgb(231,88,8)" rx="2" ry="2" />
<text  x="49.02" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="382.2" y="1525" width="1.7" height="15.0" fill="rgb(239,31,3)" rx="2" ry="2" />
<text  x="385.18" y="1535.5" ></text>
</g>
<g >
<title>operator new (10 samples, 1.45%)</title><rect x="968.8" y="1429" width="17.1" height="15.0" fill="rgb(217,4,32)" rx="2" ry="2" />
<text  x="971.75" y="1439.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (3 samples, 0.44%)</title><rect x="99.2" y="1557" width="5.1" height="15.0" fill="rgb(218,83,4)" rx="2" ry="2" />
<text  x="102.19" y="1567.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="605.1" y="1493" width="1.8" height="15.0" fill="rgb(238,63,8)" rx="2" ry="2" />
<text  x="608.15" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.15%)</title><rect x="40.9" y="245" width="1.7" height="15.0" fill="rgb(254,122,10)" rx="2" ry="2" />
<text  x="43.87" y="255.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (2 samples, 0.29%)</title><rect x="131.8" y="1429" width="3.4" height="15.0" fill="rgb(209,18,20)" rx="2" ry="2" />
<text  x="134.77" y="1439.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.15%)</title><rect x="47.7" y="101" width="1.7" height="15.0" fill="rgb(207,107,37)" rx="2" ry="2" />
<text  x="50.73" y="111.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (1 samples, 0.15%)</title><rect x="90.6" y="533" width="1.7" height="15.0" fill="rgb(206,153,5)" rx="2" ry="2" />
<text  x="93.61" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="116.3" y="1205" width="1.8" height="15.0" fill="rgb(234,77,48)" rx="2" ry="2" />
<text  x="119.34" y="1215.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.15%)</title><rect x="107.8" y="1621" width="1.7" height="15.0" fill="rgb(232,96,10)" rx="2" ry="2" />
<text  x="110.76" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="128.3" y="1285" width="1.8" height="15.0" fill="rgb(229,23,2)" rx="2" ry="2" />
<text  x="131.34" y="1295.5" ></text>
</g>
<g >
<title>__start_context (3 samples, 0.44%)</title><rect x="99.2" y="1669" width="5.1" height="15.0" fill="rgb(232,203,0)" rx="2" ry="2" />
<text  x="102.19" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.15%)</title><rect x="54.6" y="165" width="1.7" height="15.0" fill="rgb(224,156,27)" rx="2" ry="2" />
<text  x="57.59" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.15%)</title><rect x="61.5" y="197" width="1.7" height="15.0" fill="rgb(218,68,25)" rx="2" ry="2" />
<text  x="64.45" y="207.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_channel (1 samples, 0.15%)</title><rect x="39.2" y="197" width="1.7" height="15.0" fill="rgb(211,229,44)" rx="2" ry="2" />
<text  x="42.16" y="207.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.15%)</title><rect x="61.5" y="229" width="1.7" height="15.0" fill="rgb(216,206,39)" rx="2" ry="2" />
<text  x="64.45" y="239.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.15%)</title><rect x="1015.1" y="1413" width="1.7" height="15.0" fill="rgb(230,70,44)" rx="2" ry="2" />
<text  x="1018.06" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1269" width="87.5" height="15.0" fill="rgb(252,23,34)" rx="2" ry="2" />
<text  x="14.72" y="1279.5" >[unknown]</text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (3 samples, 0.44%)</title><rect x="697.8" y="1589" width="5.1" height="15.0" fill="rgb(228,171,16)" rx="2" ry="2" />
<text  x="700.76" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (3 samples, 0.44%)</title><rect x="99.2" y="1637" width="5.1" height="15.0" fill="rgb(211,117,9)" rx="2" ry="2" />
<text  x="102.19" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="61.5" y="37" width="1.7" height="15.0" fill="rgb(254,110,29)" rx="2" ry="2" />
<text  x="64.45" y="47.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (546 samples, 79.36%)</title><rect x="148.9" y="1669" width="936.5" height="15.0" fill="rgb(221,68,39)" rx="2" ry="2" />
<text  x="151.92" y="1679.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="389.0" y="1557" width="3.5" height="15.0" fill="rgb(239,221,54)" rx="2" ry="2" />
<text  x="392.04" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="47.7" y="165" width="1.7" height="15.0" fill="rgb(213,62,4)" rx="2" ry="2" />
<text  x="50.73" y="175.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.15%)</title><rect x="627.4" y="1509" width="1.8" height="15.0" fill="rgb(247,50,19)" rx="2" ry="2" />
<text  x="630.44" y="1519.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.15%)</title><rect x="733.8" y="1621" width="1.7" height="15.0" fill="rgb(210,77,18)" rx="2" ry="2" />
<text  x="736.78" y="1631.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (1 samples, 0.15%)</title><rect x="509.1" y="1557" width="1.7" height="15.0" fill="rgb(218,25,30)" rx="2" ry="2" />
<text  x="512.10" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.15%)</title><rect x="107.8" y="1637" width="1.7" height="15.0" fill="rgb(252,172,20)" rx="2" ry="2" />
<text  x="110.76" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.15%)</title><rect x="75.2" y="341" width="1.7" height="15.0" fill="rgb(232,124,22)" rx="2" ry="2" />
<text  x="78.17" y="351.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="227.8" y="1589" width="3.4" height="15.0" fill="rgb(205,203,35)" rx="2" ry="2" />
<text  x="230.82" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="75.2" y="325" width="1.7" height="15.0" fill="rgb(237,6,26)" rx="2" ry="2" />
<text  x="78.17" y="335.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="723.5" y="1605" width="1.7" height="15.0" fill="rgb(231,99,17)" rx="2" ry="2" />
<text  x="726.49" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.15%)</title><rect x="40.9" y="261" width="1.7" height="15.0" fill="rgb(227,125,7)" rx="2" ry="2" />
<text  x="43.87" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (3 samples, 0.44%)</title><rect x="908.7" y="1541" width="5.2" height="15.0" fill="rgb(215,126,43)" rx="2" ry="2" />
<text  x="911.72" y="1551.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.29%)</title><rect x="94.0" y="581" width="3.5" height="15.0" fill="rgb(248,37,41)" rx="2" ry="2" />
<text  x="97.04" y="591.5" ></text>
</g>
<g >
<title>[unknown] (54 samples, 7.85%)</title><rect x="11.7" y="1733" width="92.6" height="15.0" fill="rgb(230,197,47)" rx="2" ry="2" />
<text  x="14.72" y="1743.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="40.9" y="229" width="1.7" height="15.0" fill="rgb(246,152,37)" rx="2" ry="2" />
<text  x="43.87" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (7 samples, 1.02%)</title><rect x="78.6" y="597" width="12.0" height="15.0" fill="rgb(221,196,27)" rx="2" ry="2" />
<text  x="81.60" y="607.5" ></text>
</g>
<g >
<title>free (1 samples, 0.15%)</title><rect x="416.5" y="1493" width="1.7" height="15.0" fill="rgb(236,95,1)" rx="2" ry="2" />
<text  x="419.48" y="1503.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="100.9" y="1493" width="1.7" height="15.0" fill="rgb(243,35,41)" rx="2" ry="2" />
<text  x="103.90" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="58.0" y="229" width="1.7" height="15.0" fill="rgb(219,79,49)" rx="2" ry="2" />
<text  x="61.02" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="71.7" y="293" width="1.8" height="15.0" fill="rgb(222,14,23)" rx="2" ry="2" />
<text  x="74.74" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.15%)</title><rect x="1044.2" y="1541" width="1.7" height="15.0" fill="rgb(230,64,51)" rx="2" ry="2" />
<text  x="1047.22" y="1551.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (1 samples, 0.15%)</title><rect x="136.9" y="1349" width="1.7" height="15.0" fill="rgb(243,102,38)" rx="2" ry="2" />
<text  x="139.92" y="1359.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="939.6" y="1477" width="1.7" height="15.0" fill="rgb(229,16,32)" rx="2" ry="2" />
<text  x="942.59" y="1487.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (1 samples, 0.15%)</title><rect x="109.5" y="1477" width="1.7" height="15.0" fill="rgb(230,164,14)" rx="2" ry="2" />
<text  x="112.48" y="1487.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.15%)</title><rect x="735.5" y="1477" width="1.7" height="15.0" fill="rgb(216,11,2)" rx="2" ry="2" />
<text  x="738.49" y="1487.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="1044.2" y="1461" width="1.7" height="15.0" fill="rgb(238,184,10)" rx="2" ry="2" />
<text  x="1047.22" y="1471.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.29%)</title><rect x="843.5" y="1557" width="3.5" height="15.0" fill="rgb(209,138,0)" rx="2" ry="2" />
<text  x="846.55" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.15%)</title><rect x="59.7" y="293" width="1.8" height="15.0" fill="rgb(241,60,22)" rx="2" ry="2" />
<text  x="62.74" y="303.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.58%)</title><rect x="816.1" y="1477" width="6.9" height="15.0" fill="rgb(231,224,13)" rx="2" ry="2" />
<text  x="819.10" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (3 samples, 0.44%)</title><rect x="46.0" y="309" width="5.2" height="15.0" fill="rgb(227,204,51)" rx="2" ry="2" />
<text  x="49.02" y="319.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="517.7" y="1525" width="3.4" height="15.0" fill="rgb(223,221,8)" rx="2" ry="2" />
<text  x="520.67" y="1535.5" ></text>
</g>
<g >
<title>query_result_builder::consume (25 samples, 3.63%)</title><rect x="425.1" y="1541" width="42.8" height="15.0" fill="rgb(252,60,27)" rx="2" ry="2" />
<text  x="428.06" y="1551.5" >quer..</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.15%)</title><rect x="198.7" y="1589" width="1.7" height="15.0" fill="rgb(222,135,15)" rx="2" ry="2" />
<text  x="201.66" y="1599.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="226.1" y="1589" width="1.7" height="15.0" fill="rgb(253,229,48)" rx="2" ry="2" />
<text  x="229.10" y="1599.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.15%)</title><rect x="677.2" y="1621" width="1.7" height="15.0" fill="rgb(228,38,22)" rx="2" ry="2" />
<text  x="680.18" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;3ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="133.5" y="1093" width="1.7" height="15.0" fill="rgb(244,22,25)" rx="2" ry="2" />
<text  x="136.49" y="1103.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (3 samples, 0.44%)</title><rect x="46.0" y="357" width="5.2" height="15.0" fill="rgb(209,140,27)" rx="2" ry="2" />
<text  x="49.02" y="367.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.15%)</title><rect x="99.2" y="1509" width="1.7" height="15.0" fill="rgb(207,225,35)" rx="2" ry="2" />
<text  x="102.19" y="1519.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.15%)</title><rect x="917.3" y="1541" width="1.7" height="15.0" fill="rgb(225,162,32)" rx="2" ry="2" />
<text  x="920.30" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.87%)</title><rect x="1063.1" y="1605" width="10.3" height="15.0" fill="rgb(228,107,54)" rx="2" ry="2" />
<text  x="1066.08" y="1615.5" ></text>
</g>
<g >
<title>do_cql_test (3 samples, 0.44%)</title><rect x="51.2" y="469" width="5.1" height="15.0" fill="rgb(237,228,7)" rx="2" ry="2" />
<text  x="54.16" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.15%)</title><rect x="51.2" y="293" width="1.7" height="15.0" fill="rgb(227,218,42)" rx="2" ry="2" />
<text  x="54.16" y="303.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="76.9" y="309" width="1.7" height="15.0" fill="rgb(205,128,51)" rx="2" ry="2" />
<text  x="79.89" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (2 samples, 0.29%)</title><rect x="73.5" y="389" width="3.4" height="15.0" fill="rgb(213,61,51)" rx="2" ry="2" />
<text  x="76.46" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="277.6" y="1445" width="1.7" height="15.0" fill="rgb(245,1,42)" rx="2" ry="2" />
<text  x="280.56" y="1455.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (6 samples, 0.87%)</title><rect x="56.3" y="501" width="10.3" height="15.0" fill="rgb(229,182,25)" rx="2" ry="2" />
<text  x="59.31" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="160.9" y="1589" width="1.7" height="15.0" fill="rgb(215,205,51)" rx="2" ry="2" />
<text  x="163.93" y="1599.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.15%)</title><rect x="128.3" y="1397" width="1.8" height="15.0" fill="rgb(221,47,27)" rx="2" ry="2" />
<text  x="131.34" y="1407.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="97.5" y="485" width="1.7" height="15.0" fill="rgb(234,17,23)" rx="2" ry="2" />
<text  x="100.47" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.15%)</title><rect x="296.4" y="1445" width="1.7" height="15.0" fill="rgb(238,42,22)" rx="2" ry="2" />
<text  x="299.42" y="1455.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (1 samples, 0.15%)</title><rect x="109.5" y="1509" width="1.7" height="15.0" fill="rgb(250,101,16)" rx="2" ry="2" />
<text  x="112.48" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.15%)</title><rect x="16.9" y="101" width="1.7" height="15.0" fill="rgb(253,163,53)" rx="2" ry="2" />
<text  x="19.86" y="111.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.29%)</title><rect x="61.5" y="293" width="3.4" height="15.0" fill="rgb(225,51,17)" rx="2" ry="2" />
<text  x="64.45" y="303.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (113 samples, 16.42%)</title><rect x="852.1" y="1637" width="193.8" height="15.0" fill="rgb(251,11,30)" rx="2" ry="2" />
<text  x="855.12" y="1647.5" >seastar::lambda_task&lt;seas..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="123.2" y="1349" width="1.7" height="15.0" fill="rgb(239,163,0)" rx="2" ry="2" />
<text  x="126.20" y="1359.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="92.3" y="309" width="1.7" height="15.0" fill="rgb(244,181,28)" rx="2" ry="2" />
<text  x="95.33" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="768.1" y="1589" width="3.4" height="15.0" fill="rgb(226,120,34)" rx="2" ry="2" />
<text  x="771.08" y="1599.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.15%)</title><rect x="879.6" y="1541" width="1.7" height="15.0" fill="rgb(247,201,51)" rx="2" ry="2" />
<text  x="882.56" y="1551.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.15%)</title><rect x="102.6" y="1509" width="1.7" height="15.0" fill="rgb(245,130,54)" rx="2" ry="2" />
<text  x="105.62" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.29%)</title><rect x="90.6" y="597" width="3.4" height="15.0" fill="rgb(218,126,39)" rx="2" ry="2" />
<text  x="93.61" y="607.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="135.2" y="1269" width="1.7" height="15.0" fill="rgb(241,193,33)" rx="2" ry="2" />
<text  x="138.20" y="1279.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="71.7" y="309" width="1.8" height="15.0" fill="rgb(210,38,51)" rx="2" ry="2" />
<text  x="74.74" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="133.5" y="1141" width="1.7" height="15.0" fill="rgb(238,64,0)" rx="2" ry="2" />
<text  x="136.49" y="1151.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="135.2" y="1317" width="1.7" height="15.0" fill="rgb(209,62,16)" rx="2" ry="2" />
<text  x="138.20" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.29%)</title><rect x="131.8" y="1269" width="3.4" height="15.0" fill="rgb(206,52,36)" rx="2" ry="2" />
<text  x="134.77" y="1279.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.58%)</title><rect x="920.7" y="1509" width="6.9" height="15.0" fill="rgb(230,173,19)" rx="2" ry="2" />
<text  x="923.73" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (3 samples, 0.44%)</title><rect x="51.2" y="405" width="5.1" height="15.0" fill="rgb(208,181,3)" rx="2" ry="2" />
<text  x="54.16" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="66.6" y="165" width="1.7" height="15.0" fill="rgb(254,145,27)" rx="2" ry="2" />
<text  x="69.60" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.15%)</title><rect x="847.0" y="1621" width="1.7" height="15.0" fill="rgb(248,213,39)" rx="2" ry="2" />
<text  x="849.98" y="1631.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (1 samples, 0.15%)</title><rect x="757.8" y="1621" width="1.7" height="15.0" fill="rgb(209,5,29)" rx="2" ry="2" />
<text  x="760.79" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (34 samples, 4.94%)</title><rect x="11.7" y="597" width="58.3" height="15.0" fill="rgb(234,216,42)" rx="2" ry="2" />
<text  x="14.72" y="607.5" >[unkno..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (4 samples, 0.58%)</title><rect x="852.1" y="1605" width="6.9" height="15.0" fill="rgb(248,164,41)" rx="2" ry="2" />
<text  x="855.12" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="123.2" y="1317" width="1.7" height="15.0" fill="rgb(232,146,22)" rx="2" ry="2" />
<text  x="126.20" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="40.9" y="101" width="1.7" height="15.0" fill="rgb(214,88,21)" rx="2" ry="2" />
<text  x="43.87" y="111.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (4 samples, 0.58%)</title><rect x="896.7" y="1541" width="6.9" height="15.0" fill="rgb(235,154,23)" rx="2" ry="2" />
<text  x="899.72" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.15%)</title><rect x="40.9" y="197" width="1.7" height="15.0" fill="rgb(213,80,1)" rx="2" ry="2" />
<text  x="43.87" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (2 samples, 0.29%)</title><rect x="52.9" y="293" width="3.4" height="15.0" fill="rgb(208,205,37)" rx="2" ry="2" />
<text  x="55.88" y="303.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="629.2" y="1525" width="3.4" height="15.0" fill="rgb(224,145,54)" rx="2" ry="2" />
<text  x="632.16" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="51.2" y="229" width="1.7" height="15.0" fill="rgb(229,185,16)" rx="2" ry="2" />
<text  x="54.16" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="135.2" y="1285" width="1.7" height="15.0" fill="rgb(238,181,29)" rx="2" ry="2" />
<text  x="138.20" y="1295.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (3 samples, 0.44%)</title><rect x="99.2" y="1653" width="5.1" height="15.0" fill="rgb(224,172,0)" rx="2" ry="2" />
<text  x="102.19" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_Deque_base (1 samples, 0.15%)</title><rect x="11.7" y="213" width="1.7" height="15.0" fill="rgb(220,200,49)" rx="2" ry="2" />
<text  x="14.72" y="223.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="58.0" y="293" width="1.7" height="15.0" fill="rgb(222,117,27)" rx="2" ry="2" />
<text  x="61.02" y="303.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1493" width="87.5" height="15.0" fill="rgb(226,112,2)" rx="2" ry="2" />
<text  x="14.72" y="1503.5" >[unknown]</text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="738.9" y="1621" width="1.7" height="15.0" fill="rgb(207,203,5)" rx="2" ry="2" />
<text  x="741.92" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (10 samples, 1.45%)</title><rect x="18.6" y="197" width="17.1" height="15.0" fill="rgb(211,82,48)" rx="2" ry="2" />
<text  x="21.58" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="958.5" y="1445" width="3.4" height="15.0" fill="rgb(228,140,7)" rx="2" ry="2" />
<text  x="961.46" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1365" width="87.5" height="15.0" fill="rgb(221,5,8)" rx="2" ry="2" />
<text  x="14.72" y="1375.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.29%)</title><rect x="52.9" y="277" width="3.4" height="15.0" fill="rgb(250,16,32)" rx="2" ry="2" />
<text  x="55.88" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="68.3" y="213" width="1.7" height="15.0" fill="rgb(218,73,9)" rx="2" ry="2" />
<text  x="71.31" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="1045.9" y="1509" width="1.7" height="15.0" fill="rgb(230,119,49)" rx="2" ry="2" />
<text  x="1048.93" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (3 samples, 0.44%)</title><rect x="51.2" y="373" width="5.1" height="15.0" fill="rgb(236,28,39)" rx="2" ry="2" />
<text  x="54.16" y="383.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 7.27%)</title><rect x="11.7" y="757" width="85.8" height="15.0" fill="rgb(244,216,31)" rx="2" ry="2" />
<text  x="14.72" y="767.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.15%)</title><rect x="40.9" y="53" width="1.7" height="15.0" fill="rgb(220,191,48)" rx="2" ry="2" />
<text  x="43.87" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;cql3::expr::conjunction&gt;::_M_ptr (1 samples, 0.15%)</title><rect x="116.3" y="1189" width="1.8" height="15.0" fill="rgb(220,42,23)" rx="2" ry="2" />
<text  x="119.34" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.15%)</title><rect x="116.3" y="1253" width="1.8" height="15.0" fill="rgb(219,59,41)" rx="2" ry="2" />
<text  x="119.34" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="997" width="87.5" height="15.0" fill="rgb(209,77,25)" rx="2" ry="2" />
<text  x="14.72" y="1007.5" >[unknown]</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.29%)</title><rect x="94.0" y="533" width="3.5" height="15.0" fill="rgb(208,9,54)" rx="2" ry="2" />
<text  x="97.04" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="59.7" y="277" width="1.8" height="15.0" fill="rgb(210,98,28)" rx="2" ry="2" />
<text  x="62.74" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="119.8" y="1205" width="1.7" height="15.0" fill="rgb(236,160,22)" rx="2" ry="2" />
<text  x="122.77" y="1215.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.29%)</title><rect x="90.6" y="709" width="3.4" height="15.0" fill="rgb(249,97,38)" rx="2" ry="2" />
<text  x="93.61" y="719.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.15%)</title><rect x="102.6" y="1461" width="1.7" height="15.0" fill="rgb(210,136,42)" rx="2" ry="2" />
<text  x="105.62" y="1471.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_eofToken (1 samples, 0.15%)</title><rect x="80.3" y="389" width="1.7" height="15.0" fill="rgb(210,209,49)" rx="2" ry="2" />
<text  x="83.32" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (16 samples, 2.33%)</title><rect x="111.2" y="1573" width="27.4" height="15.0" fill="rgb(253,161,2)" rx="2" ry="2" />
<text  x="114.19" y="1583.5" >s..</text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.15%)</title><rect x="533.1" y="1557" width="1.7" height="15.0" fill="rgb(205,34,5)" rx="2" ry="2" />
<text  x="536.11" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="58.0" y="181" width="1.7" height="15.0" fill="rgb(250,47,33)" rx="2" ry="2" />
<text  x="61.02" y="191.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (4 samples, 0.58%)</title><rect x="289.6" y="1445" width="6.8" height="15.0" fill="rgb(247,210,43)" rx="2" ry="2" />
<text  x="292.56" y="1455.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (16 samples, 2.33%)</title><rect x="15.1" y="309" width="27.5" height="15.0" fill="rgb(240,152,21)" rx="2" ry="2" />
<text  x="18.15" y="319.5" >c..</text>
</g>
<g >
<title>database::do_apply (3 samples, 0.44%)</title><rect x="1037.4" y="1573" width="5.1" height="15.0" fill="rgb(226,106,11)" rx="2" ry="2" />
<text  x="1040.35" y="1583.5" ></text>
</g>
<g >
<title>do_cql_test (17 samples, 2.47%)</title><rect x="109.5" y="1669" width="29.1" height="15.0" fill="rgb(207,120,4)" rx="2" ry="2" />
<text  x="112.48" y="1679.5" >do..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.15%)</title><rect x="126.6" y="1397" width="1.7" height="15.0" fill="rgb(229,5,12)" rx="2" ry="2" />
<text  x="129.63" y="1407.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.15%)</title><rect x="66.6" y="389" width="1.7" height="15.0" fill="rgb(214,42,33)" rx="2" ry="2" />
<text  x="69.60" y="399.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (7 samples, 1.02%)</title><rect x="78.6" y="517" width="12.0" height="15.0" fill="rgb(215,27,19)" rx="2" ry="2" />
<text  x="81.60" y="527.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (75 samples, 10.90%)</title><rect x="246.7" y="1525" width="128.6" height="15.0" fill="rgb(241,173,37)" rx="2" ry="2" />
<text  x="249.69" y="1535.5" >mutation_reader_..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (7 samples, 1.02%)</title><rect x="745.8" y="1637" width="12.0" height="15.0" fill="rgb(249,216,7)" rx="2" ry="2" />
<text  x="748.78" y="1647.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="190.1" y="1605" width="1.7" height="15.0" fill="rgb(209,224,2)" rx="2" ry="2" />
<text  x="193.09" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (54 samples, 7.85%)</title><rect x="11.7" y="1685" width="92.6" height="15.0" fill="rgb(213,35,25)" rx="2" ry="2" />
<text  x="14.72" y="1695.5" >[unknown]</text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.15%)</title><rect x="833.3" y="1509" width="1.7" height="15.0" fill="rgb(237,69,43)" rx="2" ry="2" />
<text  x="836.26" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.15%)</title><rect x="70.0" y="261" width="1.7" height="15.0" fill="rgb(248,160,2)" rx="2" ry="2" />
<text  x="73.03" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (5 samples, 0.73%)</title><rect x="58.0" y="341" width="8.6" height="15.0" fill="rgb(217,211,26)" rx="2" ry="2" />
<text  x="61.02" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.15%)</title><rect x="136.9" y="1413" width="1.7" height="15.0" fill="rgb(212,178,41)" rx="2" ry="2" />
<text  x="139.92" y="1423.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.15%)</title><rect x="684.0" y="1621" width="1.8" height="15.0" fill="rgb(253,124,50)" rx="2" ry="2" />
<text  x="687.04" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1541" width="87.5" height="15.0" fill="rgb(253,101,6)" rx="2" ry="2" />
<text  x="14.72" y="1551.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (23 samples, 3.34%)</title><rect x="11.7" y="533" width="39.5" height="15.0" fill="rgb(212,19,36)" rx="2" ry="2" />
<text  x="14.72" y="543.5" >[un..</text>
</g>
<g >
<title>single_node_cql_env::execute_cql (7 samples, 1.02%)</title><rect x="78.6" y="533" width="12.0" height="15.0" fill="rgb(207,0,24)" rx="2" ry="2" />
<text  x="81.60" y="543.5" ></text>
</g>
<g >
<title>__start_context (3 samples, 0.44%)</title><rect x="46.0" y="517" width="5.2" height="15.0" fill="rgb(242,179,25)" rx="2" ry="2" />
<text  x="49.02" y="527.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1189" width="87.5" height="15.0" fill="rgb(213,164,28)" rx="2" ry="2" />
<text  x="14.72" y="1199.5" >[unknown]</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.15%)</title><rect x="118.1" y="1397" width="1.7" height="15.0" fill="rgb(253,78,45)" rx="2" ry="2" />
<text  x="121.05" y="1407.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.29%)</title><rect x="322.2" y="1397" width="3.4" height="15.0" fill="rgb(206,190,14)" rx="2" ry="2" />
<text  x="325.15" y="1407.5" ></text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_format_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;sstables::pretty_printed_data_size, fmt::v7::detail::fallback_formatter&lt;sstables::pretty_printed_data_size, char, void&gt; &gt; (1 samples, 0.15%)</title><rect x="138.6" y="1717" width="1.7" height="15.0" fill="rgb(210,55,4)" rx="2" ry="2" />
<text  x="141.63" y="1727.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (4 samples, 0.58%)</title><rect x="852.1" y="1573" width="6.9" height="15.0" fill="rgb(237,139,27)" rx="2" ry="2" />
<text  x="855.12" y="1583.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple (1 samples, 0.15%)</title><rect x="75.2" y="197" width="1.7" height="15.0" fill="rgb(227,180,24)" rx="2" ry="2" />
<text  x="78.17" y="207.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.15%)</title><rect x="1028.8" y="1541" width="1.7" height="15.0" fill="rgb(218,5,17)" rx="2" ry="2" />
<text  x="1031.78" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.15%)</title><rect x="70.0" y="549" width="1.7" height="15.0" fill="rgb(231,136,5)" rx="2" ry="2" />
<text  x="73.03" y="559.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (20 samples, 2.91%)</title><rect x="961.9" y="1461" width="34.3" height="15.0" fill="rgb(216,154,10)" rx="2" ry="2" />
<text  x="964.89" y="1471.5" >se..</text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.15%)</title><rect x="70.0" y="501" width="1.7" height="15.0" fill="rgb(240,29,9)" rx="2" ry="2" />
<text  x="73.03" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="135.2" y="1301" width="1.7" height="15.0" fill="rgb(210,183,0)" rx="2" ry="2" />
<text  x="138.20" y="1311.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (17 samples, 2.47%)</title><rect x="109.5" y="1605" width="29.1" height="15.0" fill="rgb(217,19,34)" rx="2" ry="2" />
<text  x="112.48" y="1615.5" >cq..</text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1253" width="87.5" height="15.0" fill="rgb(215,149,54)" rx="2" ry="2" />
<text  x="14.72" y="1263.5" >[unknown]</text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="377.0" y="1525" width="1.8" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="380.03" y="1535.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (1 samples, 0.15%)</title><rect x="16.9" y="37" width="1.7" height="15.0" fill="rgb(223,61,36)" rx="2" ry="2" />
<text  x="19.86" y="47.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.29%)</title><rect x="94.0" y="709" width="3.5" height="15.0" fill="rgb(247,121,5)" rx="2" ry="2" />
<text  x="97.04" y="719.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.29%)</title><rect x="131.8" y="1285" width="3.4" height="15.0" fill="rgb(219,182,44)" rx="2" ry="2" />
<text  x="134.77" y="1295.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (2 samples, 0.29%)</title><rect x="30.6" y="181" width="3.4" height="15.0" fill="rgb(214,167,34)" rx="2" ry="2" />
<text  x="33.58" y="191.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (30 samples, 4.36%)</title><rect x="944.7" y="1493" width="51.5" height="15.0" fill="rgb(219,198,13)" rx="2" ry="2" />
<text  x="947.74" y="1503.5" >servi..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.15%)</title><rect x="1087.1" y="1653" width="1.7" height="15.0" fill="rgb(220,116,30)" rx="2" ry="2" />
<text  x="1090.09" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.15%)</title><rect x="1044.2" y="1573" width="1.7" height="15.0" fill="rgb(215,197,37)" rx="2" ry="2" />
<text  x="1047.22" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.15%)</title><rect x="52.9" y="181" width="1.7" height="15.0" fill="rgb(212,70,24)" rx="2" ry="2" />
<text  x="55.88" y="191.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (3 samples, 0.44%)</title><rect x="46.0" y="389" width="5.2" height="15.0" fill="rgb(253,222,10)" rx="2" ry="2" />
<text  x="49.02" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.15%)</title><rect x="16.9" y="85" width="1.7" height="15.0" fill="rgb(220,13,0)" rx="2" ry="2" />
<text  x="19.86" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="418.2" y="1493" width="1.7" height="15.0" fill="rgb(217,155,50)" rx="2" ry="2" />
<text  x="421.20" y="1503.5" ></text>
</g>
<g >
<title>operator new (7 samples, 1.02%)</title><rect x="1061.4" y="1621" width="12.0" height="15.0" fill="rgb(217,60,14)" rx="2" ry="2" />
<text  x="1064.37" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.15%)</title><rect x="68.3" y="325" width="1.7" height="15.0" fill="rgb(222,220,24)" rx="2" ry="2" />
<text  x="71.31" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="131.8" y="1221" width="1.7" height="15.0" fill="rgb(222,207,32)" rx="2" ry="2" />
<text  x="134.77" y="1231.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (7 samples, 1.02%)</title><rect x="78.6" y="613" width="12.0" height="15.0" fill="rgb(230,124,42)" rx="2" ry="2" />
<text  x="81.60" y="623.5" ></text>
</g>
<g >
<title>cql3::restrictions::has_eq_null (1 samples, 0.15%)</title><rect x="852.1" y="1525" width="1.7" height="15.0" fill="rgb(222,119,27)" rx="2" ry="2" />
<text  x="855.12" y="1535.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (89 samples, 12.94%)</title><rect x="231.2" y="1557" width="152.7" height="15.0" fill="rgb(236,201,19)" rx="2" ry="2" />
<text  x="234.25" y="1567.5" >merging_reader&lt;muta..</text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1477" width="87.5" height="15.0" fill="rgb(244,216,28)" rx="2" ry="2" />
<text  x="14.72" y="1487.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (18 samples, 2.62%)</title><rect x="107.8" y="1701" width="30.8" height="15.0" fill="rgb(215,154,49)" rx="2" ry="2" />
<text  x="110.76" y="1711.5" >se..</text>
</g>
<g >
<title>schema_registry::get (1 samples, 0.15%)</title><rect x="941.3" y="1493" width="1.7" height="15.0" fill="rgb(227,171,36)" rx="2" ry="2" />
<text  x="944.31" y="1503.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (7 samples, 1.02%)</title><rect x="78.6" y="501" width="12.0" height="15.0" fill="rgb(224,176,21)" rx="2" ry="2" />
<text  x="81.60" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.15%)</title><rect x="1045.9" y="1461" width="1.7" height="15.0" fill="rgb(214,197,25)" rx="2" ry="2" />
<text  x="1048.93" y="1471.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.15%)</title><rect x="70.0" y="469" width="1.7" height="15.0" fill="rgb(222,167,41)" rx="2" ry="2" />
<text  x="73.03" y="479.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.15%)</title><rect x="68.3" y="517" width="1.7" height="15.0" fill="rgb(236,175,54)" rx="2" ry="2" />
<text  x="71.31" y="527.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (17 samples, 2.47%)</title><rect x="109.5" y="1637" width="29.1" height="15.0" fill="rgb(235,52,46)" rx="2" ry="2" />
<text  x="112.48" y="1647.5" >si..</text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.15%)</title><rect x="601.7" y="1525" width="1.7" height="15.0" fill="rgb(249,68,17)" rx="2" ry="2" />
<text  x="604.72" y="1535.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.15%)</title><rect x="97.5" y="661" width="1.7" height="15.0" fill="rgb(208,16,43)" rx="2" ry="2" />
<text  x="100.47" y="671.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="123.2" y="1285" width="1.7" height="15.0" fill="rgb(215,23,12)" rx="2" ry="2" />
<text  x="126.20" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="54.6" y="101" width="1.7" height="15.0" fill="rgb(249,4,46)" rx="2" ry="2" />
<text  x="57.59" y="111.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.29%)</title><rect x="131.8" y="1237" width="3.4" height="15.0" fill="rgb(218,14,50)" rx="2" ry="2" />
<text  x="134.77" y="1247.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="80.3" y="437" width="1.7" height="15.0" fill="rgb(208,65,5)" rx="2" ry="2" />
<text  x="83.32" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.15%)</title><rect x="95.8" y="453" width="1.7" height="15.0" fill="rgb(235,62,48)" rx="2" ry="2" />
<text  x="98.76" y="463.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.15%)</title><rect x="49.4" y="229" width="1.8" height="15.0" fill="rgb(251,192,28)" rx="2" ry="2" />
<text  x="52.45" y="239.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="63.2" y="181" width="1.7" height="15.0" fill="rgb(237,92,45)" rx="2" ry="2" />
<text  x="66.17" y="191.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (8 samples, 1.16%)</title><rect x="124.9" y="1477" width="13.7" height="15.0" fill="rgb(208,161,25)" rx="2" ry="2" />
<text  x="127.91" y="1487.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.15%)</title><rect x="1044.2" y="1525" width="1.7" height="15.0" fill="rgb(250,90,26)" rx="2" ry="2" />
<text  x="1047.22" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (4 samples, 0.58%)</title><rect x="71.7" y="421" width="6.9" height="15.0" fill="rgb(237,177,43)" rx="2" ry="2" />
<text  x="74.74" y="431.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (2 samples, 0.29%)</title><rect x="900.1" y="1525" width="3.5" height="15.0" fill="rgb(216,126,37)" rx="2" ry="2" />
<text  x="903.15" y="1535.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.15%)</title><rect x="1085.4" y="1557" width="1.7" height="15.0" fill="rgb(241,152,32)" rx="2" ry="2" />
<text  x="1088.38" y="1567.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (6 samples, 0.87%)</title><rect x="159.2" y="1621" width="10.3" height="15.0" fill="rgb(253,52,54)" rx="2" ry="2" />
<text  x="162.22" y="1631.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.15%)</title><rect x="605.1" y="1509" width="1.8" height="15.0" fill="rgb(210,137,12)" rx="2" ry="2" />
<text  x="608.15" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.15%)</title><rect x="40.9" y="133" width="1.7" height="15.0" fill="rgb(231,77,36)" rx="2" ry="2" />
<text  x="43.87" y="143.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (3 samples, 0.44%)</title><rect x="25.4" y="181" width="5.2" height="15.0" fill="rgb(217,77,28)" rx="2" ry="2" />
<text  x="28.44" y="191.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (1 samples, 0.15%)</title><rect x="76.9" y="389" width="1.7" height="15.0" fill="rgb(214,65,9)" rx="2" ry="2" />
<text  x="79.89" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (2 samples, 0.29%)</title><rect x="191.8" y="1605" width="3.4" height="15.0" fill="rgb(232,220,26)" rx="2" ry="2" />
<text  x="194.80" y="1615.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.15%)</title><rect x="68.3" y="453" width="1.7" height="15.0" fill="rgb(214,41,14)" rx="2" ry="2" />
<text  x="71.31" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.15%)</title><rect x="66.6" y="517" width="1.7" height="15.0" fill="rgb(235,108,44)" rx="2" ry="2" />
<text  x="69.60" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (11 samples, 1.60%)</title><rect x="606.9" y="1509" width="18.8" height="15.0" fill="rgb(206,72,17)" rx="2" ry="2" />
<text  x="609.86" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="68.3" y="197" width="1.7" height="15.0" fill="rgb(223,34,45)" rx="2" ry="2" />
<text  x="71.31" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (2 samples, 0.29%)</title><rect x="94.0" y="549" width="3.5" height="15.0" fill="rgb(213,14,24)" rx="2" ry="2" />
<text  x="97.04" y="559.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1285" width="87.5" height="15.0" fill="rgb(251,207,16)" rx="2" ry="2" />
<text  x="14.72" y="1295.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.15%)</title><rect x="135.2" y="1397" width="1.7" height="15.0" fill="rgb(236,112,20)" rx="2" ry="2" />
<text  x="138.20" y="1407.5" ></text>
</g>
<g >
<title>strcmp (1 samples, 0.15%)</title><rect x="1188.3" y="1765" width="1.7" height="15.0" fill="rgb(237,76,26)" rx="2" ry="2" />
<text  x="1191.28" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.15%)</title><rect x="1045.9" y="1557" width="1.7" height="15.0" fill="rgb(254,76,48)" rx="2" ry="2" />
<text  x="1048.93" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.15%)</title><rect x="75.2" y="245" width="1.7" height="15.0" fill="rgb(252,182,48)" rx="2" ry="2" />
<text  x="78.17" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (5 samples, 0.73%)</title><rect x="366.7" y="1477" width="8.6" height="15.0" fill="rgb(221,47,28)" rx="2" ry="2" />
<text  x="369.74" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (3 samples, 0.44%)</title><rect x="51.2" y="357" width="5.1" height="15.0" fill="rgb(236,16,53)" rx="2" ry="2" />
<text  x="54.16" y="367.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (6 samples, 0.87%)</title><rect x="56.3" y="533" width="10.3" height="15.0" fill="rgb(208,144,50)" rx="2" ry="2" />
<text  x="59.31" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (12 samples, 1.74%)</title><rect x="15.1" y="245" width="20.6" height="15.0" fill="rgb(233,75,50)" rx="2" ry="2" />
<text  x="18.15" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_subexpr_begin (1 samples, 0.15%)</title><rect x="1085.4" y="1573" width="1.7" height="15.0" fill="rgb(242,131,52)" rx="2" ry="2" />
<text  x="1088.38" y="1583.5" ></text>
</g>
<g >
<title>validation::validate_column_family (4 samples, 0.58%)</title><rect x="828.1" y="1541" width="6.9" height="15.0" fill="rgb(217,44,54)" rx="2" ry="2" />
<text  x="831.11" y="1551.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.15%)</title><rect x="66.6" y="469" width="1.7" height="15.0" fill="rgb(245,51,19)" rx="2" ry="2" />
<text  x="69.60" y="479.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.15%)</title><rect x="1040.8" y="1461" width="1.7" height="15.0" fill="rgb(226,74,0)" rx="2" ry="2" />
<text  x="1043.78" y="1471.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.15%)</title><rect x="92.3" y="533" width="1.7" height="15.0" fill="rgb(206,164,38)" rx="2" ry="2" />
<text  x="95.33" y="543.5" ></text>
</g>
<g >
<title>[unknown] (35 samples, 5.09%)</title><rect x="11.7" y="613" width="60.0" height="15.0" fill="rgb(209,44,9)" rx="2" ry="2" />
<text  x="14.72" y="623.5" >[unkno..</text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (1 samples, 0.15%)</title><rect x="853.8" y="1445" width="1.8" height="15.0" fill="rgb(209,57,51)" rx="2" ry="2" />
<text  x="856.84" y="1455.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (7 samples, 1.02%)</title><rect x="589.7" y="1525" width="12.0" height="15.0" fill="rgb(229,207,25)" rx="2" ry="2" />
<text  x="592.71" y="1535.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.15%)</title><rect x="121.5" y="1317" width="1.7" height="15.0" fill="rgb(226,42,46)" rx="2" ry="2" />
<text  x="124.48" y="1327.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (44 samples, 6.40%)</title><rect x="771.5" y="1605" width="75.5" height="15.0" fill="rgb(221,214,10)" rx="2" ry="2" />
<text  x="774.51" y="1615.5" >single_n..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="58.0" y="213" width="1.7" height="15.0" fill="rgb(211,222,51)" rx="2" ry="2" />
<text  x="61.02" y="223.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="92.3" y="325" width="1.7" height="15.0" fill="rgb(222,67,44)" rx="2" ry="2" />
<text  x="95.33" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="634.3" y="1509" width="1.7" height="15.0" fill="rgb(211,142,32)" rx="2" ry="2" />
<text  x="637.30" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="824.7" y="1493" width="1.7" height="15.0" fill="rgb(233,159,8)" rx="2" ry="2" />
<text  x="827.68" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 7.27%)</title><rect x="11.7" y="821" width="85.8" height="15.0" fill="rgb(224,108,10)" rx="2" ry="2" />
<text  x="14.72" y="831.5" >[unknown]</text>
</g>
<g >
<title>mutation_querier::consume (24 samples, 3.49%)</title><rect x="425.1" y="1525" width="41.1" height="15.0" fill="rgb(245,189,8)" rx="2" ry="2" />
<text  x="428.06" y="1535.5" >mut..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="75.2" y="293" width="1.7" height="15.0" fill="rgb(206,58,24)" rx="2" ry="2" />
<text  x="78.17" y="303.5" ></text>
</g>
<g >
<title>[unknown] (33 samples, 4.80%)</title><rect x="11.7" y="581" width="56.6" height="15.0" fill="rgb(235,64,42)" rx="2" ry="2" />
<text  x="14.72" y="591.5" >[unkn..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.15%)</title><rect x="116.3" y="1237" width="1.8" height="15.0" fill="rgb(208,69,39)" rx="2" ry="2" />
<text  x="119.34" y="1247.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (2 samples, 0.29%)</title><rect x="82.0" y="421" width="3.5" height="15.0" fill="rgb(210,141,8)" rx="2" ry="2" />
<text  x="85.03" y="431.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="95.8" y="421" width="1.7" height="15.0" fill="rgb(227,80,48)" rx="2" ry="2" />
<text  x="98.76" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="123.2" y="1445" width="1.7" height="15.0" fill="rgb(205,184,13)" rx="2" ry="2" />
<text  x="126.20" y="1455.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.15%)</title><rect x="107.8" y="1685" width="1.7" height="15.0" fill="rgb(243,36,15)" rx="2" ry="2" />
<text  x="110.76" y="1695.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (7 samples, 1.02%)</title><rect x="1018.5" y="1557" width="12.0" height="15.0" fill="rgb(248,201,44)" rx="2" ry="2" />
<text  x="1021.49" y="1567.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="136.9" y="1333" width="1.7" height="15.0" fill="rgb(206,80,12)" rx="2" ry="2" />
<text  x="139.92" y="1343.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.15%)</title><rect x="68.3" y="309" width="1.7" height="15.0" fill="rgb(217,123,27)" rx="2" ry="2" />
<text  x="71.31" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (13 samples, 1.89%)</title><rect x="996.2" y="1493" width="22.3" height="15.0" fill="rgb(225,229,0)" rx="2" ry="2" />
<text  x="999.19" y="1503.5" >s..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (6 samples, 0.87%)</title><rect x="725.2" y="1637" width="10.3" height="15.0" fill="rgb(226,139,8)" rx="2" ry="2" />
<text  x="728.20" y="1647.5" ></text>
</g>
<g >
<title>do_cql_test (6 samples, 0.87%)</title><rect x="56.3" y="485" width="10.3" height="15.0" fill="rgb(221,225,53)" rx="2" ry="2" />
<text  x="59.31" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.15%)</title><rect x="1087.1" y="1669" width="1.7" height="15.0" fill="rgb(236,136,26)" rx="2" ry="2" />
<text  x="1090.09" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.15%)</title><rect x="11.7" y="165" width="1.7" height="15.0" fill="rgb(210,217,47)" rx="2" ry="2" />
<text  x="14.72" y="175.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.15%)</title><rect x="56.3" y="341" width="1.7" height="15.0" fill="rgb(238,77,38)" rx="2" ry="2" />
<text  x="59.31" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (3 samples, 0.44%)</title><rect x="130.1" y="1445" width="5.1" height="15.0" fill="rgb(242,211,20)" rx="2" ry="2" />
<text  x="133.06" y="1455.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (2 samples, 0.29%)</title><rect x="992.8" y="1381" width="3.4" height="15.0" fill="rgb(240,129,51)" rx="2" ry="2" />
<text  x="995.76" y="1391.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="71.7" y="245" width="1.8" height="15.0" fill="rgb(230,75,44)" rx="2" ry="2" />
<text  x="74.74" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (1 samples, 0.15%)</title><rect x="75.2" y="213" width="1.7" height="15.0" fill="rgb(247,71,44)" rx="2" ry="2" />
<text  x="78.17" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (9 samples, 1.31%)</title><rect x="881.3" y="1541" width="15.4" height="15.0" fill="rgb(212,208,40)" rx="2" ry="2" />
<text  x="884.28" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (3 samples, 0.44%)</title><rect x="46.0" y="341" width="5.2" height="15.0" fill="rgb(210,22,45)" rx="2" ry="2" />
<text  x="49.02" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.29%)</title><rect x="131.8" y="1365" width="3.4" height="15.0" fill="rgb(233,153,49)" rx="2" ry="2" />
<text  x="134.77" y="1375.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (1 samples, 0.15%)</title><rect x="56.3" y="213" width="1.7" height="15.0" fill="rgb(246,107,31)" rx="2" ry="2" />
<text  x="59.31" y="223.5" ></text>
</g>
<g >
<title>make_combined_reader (8 samples, 1.16%)</title><rect x="557.1" y="1525" width="13.7" height="15.0" fill="rgb(237,123,7)" rx="2" ry="2" />
<text  x="560.12" y="1535.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (5 samples, 0.73%)</title><rect x="713.2" y="1621" width="8.6" height="15.0" fill="rgb(205,94,4)" rx="2" ry="2" />
<text  x="716.20" y="1631.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (286 samples, 41.57%)</title><rect x="183.2" y="1621" width="490.6" height="15.0" fill="rgb(225,84,32)" rx="2" ry="2" />
<text  x="186.23" y="1631.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.58%)</title><rect x="920.7" y="1525" width="6.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="923.73" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.15%)</title><rect x="56.3" y="245" width="1.7" height="15.0" fill="rgb(210,218,43)" rx="2" ry="2" />
<text  x="59.31" y="255.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.15%)</title><rect x="359.9" y="1413" width="1.7" height="15.0" fill="rgb(249,117,39)" rx="2" ry="2" />
<text  x="362.88" y="1423.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.15%)</title><rect x="66.6" y="277" width="1.7" height="15.0" fill="rgb(221,185,9)" rx="2" ry="2" />
<text  x="69.60" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.15%)</title><rect x="246.7" y="1509" width="1.7" height="15.0" fill="rgb(223,71,0)" rx="2" ry="2" />
<text  x="249.69" y="1519.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.15%)</title><rect x="136.9" y="1429" width="1.7" height="15.0" fill="rgb(244,208,48)" rx="2" ry="2" />
<text  x="139.92" y="1439.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.15%)</title><rect x="121.5" y="1381" width="1.7" height="15.0" fill="rgb(208,152,12)" rx="2" ry="2" />
<text  x="124.48" y="1391.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (2 samples, 0.29%)</title><rect x="1042.5" y="1621" width="3.4" height="15.0" fill="rgb(205,180,6)" rx="2" ry="2" />
<text  x="1045.50" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.15%)</title><rect x="68.3" y="341" width="1.7" height="15.0" fill="rgb(225,14,17)" rx="2" ry="2" />
<text  x="71.31" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.15%)</title><rect x="603.4" y="1525" width="1.7" height="15.0" fill="rgb(240,115,45)" rx="2" ry="2" />
<text  x="606.43" y="1535.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.15%)</title><rect x="121.5" y="1429" width="1.7" height="15.0" fill="rgb(212,122,15)" rx="2" ry="2" />
<text  x="124.48" y="1439.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (4 samples, 0.58%)</title><rect x="71.7" y="597" width="6.9" height="15.0" fill="rgb(233,37,43)" rx="2" ry="2" />
<text  x="74.74" y="607.5" ></text>
</g>
<g >
<title>auth::get_permissions (14 samples, 2.03%)</title><rect x="800.7" y="1509" width="24.0" height="15.0" fill="rgb(207,28,50)" rx="2" ry="2" />
<text  x="803.67" y="1519.5" >a..</text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1637" width="87.5" height="15.0" fill="rgb(233,138,37)" rx="2" ry="2" />
<text  x="14.72" y="1647.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::query (4 samples, 0.58%)</title><rect x="71.7" y="437" width="6.9" height="15.0" fill="rgb(205,66,4)" rx="2" ry="2" />
<text  x="74.74" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.44%)</title><rect x="1037.4" y="1589" width="5.1" height="15.0" fill="rgb(249,149,2)" rx="2" ry="2" />
<text  x="1040.35" y="1599.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.15%)</title><rect x="522.8" y="1509" width="1.7" height="15.0" fill="rgb(248,225,39)" rx="2" ry="2" />
<text  x="525.82" y="1519.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (2 samples, 0.29%)</title><rect x="90.6" y="613" width="3.4" height="15.0" fill="rgb(237,110,18)" rx="2" ry="2" />
<text  x="93.61" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="75.2" y="309" width="1.7" height="15.0" fill="rgb(205,56,38)" rx="2" ry="2" />
<text  x="78.17" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.15%)</title><rect x="61.5" y="181" width="1.7" height="15.0" fill="rgb(236,204,40)" rx="2" ry="2" />
<text  x="64.45" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.15%)</title><rect x="46.0" y="245" width="1.7" height="15.0" fill="rgb(205,32,37)" rx="2" ry="2" />
<text  x="49.02" y="255.5" ></text>
</g>
<g >
<title>main (548 samples, 79.65%)</title><rect x="148.9" y="1749" width="939.9" height="15.0" fill="rgb(228,36,32)" rx="2" ry="2" />
<text  x="151.92" y="1759.5" >main</text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="838.4" y="1589" width="3.4" height="15.0" fill="rgb(220,191,25)" rx="2" ry="2" />
<text  x="841.40" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.15%)</title><rect x="47.7" y="117" width="1.7" height="15.0" fill="rgb(212,220,2)" rx="2" ry="2" />
<text  x="50.73" y="127.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="63.2" y="197" width="1.7" height="15.0" fill="rgb(222,41,34)" rx="2" ry="2" />
<text  x="66.17" y="207.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 6.69%)</title><rect x="11.7" y="709" width="78.9" height="15.0" fill="rgb(233,186,45)" rx="2" ry="2" />
<text  x="14.72" y="719.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="70.0" y="437" width="1.7" height="15.0" fill="rgb(231,170,21)" rx="2" ry="2" />
<text  x="73.03" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.15%)</title><rect x="40.9" y="117" width="1.7" height="15.0" fill="rgb(221,174,49)" rx="2" ry="2" />
<text  x="43.87" y="127.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="70.0" y="373" width="1.7" height="15.0" fill="rgb(249,54,30)" rx="2" ry="2" />
<text  x="73.03" y="383.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (2 samples, 0.29%)</title><rect x="11.7" y="293" width="3.4" height="15.0" fill="rgb(247,58,51)" rx="2" ry="2" />
<text  x="14.72" y="303.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1381" width="87.5" height="15.0" fill="rgb(210,2,32)" rx="2" ry="2" />
<text  x="14.72" y="1391.5" >[unknown]</text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.15%)</title><rect x="143.8" y="1717" width="1.7" height="15.0" fill="rgb(239,5,28)" rx="2" ry="2" />
<text  x="146.78" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="687.5" y="1621" width="1.7" height="15.0" fill="rgb(246,92,35)" rx="2" ry="2" />
<text  x="690.47" y="1631.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="375.3" y="1525" width="1.7" height="15.0" fill="rgb(251,53,41)" rx="2" ry="2" />
<text  x="378.32" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="630.9" y="1509" width="1.7" height="15.0" fill="rgb(220,205,18)" rx="2" ry="2" />
<text  x="633.87" y="1519.5" ></text>
</g>
<g >
<title>__start_context (20 samples, 2.91%)</title><rect x="11.7" y="501" width="34.3" height="15.0" fill="rgb(252,206,20)" rx="2" ry="2" />
<text  x="14.72" y="511.5" >__..</text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.15%)</title><rect x="965.3" y="1445" width="1.7" height="15.0" fill="rgb(250,152,45)" rx="2" ry="2" />
<text  x="968.32" y="1455.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (548 samples, 79.65%)</title><rect x="148.9" y="1701" width="939.9" height="15.0" fill="rgb(249,74,45)" rx="2" ry="2" />
<text  x="151.92" y="1711.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="116.3" y="1221" width="1.8" height="15.0" fill="rgb(239,128,17)" rx="2" ry="2" />
<text  x="119.34" y="1231.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (1 samples, 0.15%)</title><rect x="136.9" y="1365" width="1.7" height="15.0" fill="rgb(218,99,26)" rx="2" ry="2" />
<text  x="139.92" y="1375.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.15%)</title><rect x="696.0" y="1605" width="1.8" height="15.0" fill="rgb(214,154,6)" rx="2" ry="2" />
<text  x="699.05" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 4.65%)</title><rect x="11.7" y="565" width="54.9" height="15.0" fill="rgb(208,224,8)" rx="2" ry="2" />
<text  x="14.72" y="575.5" >[unkn..</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (3 samples, 0.44%)</title><rect x="51.2" y="389" width="5.1" height="15.0" fill="rgb(229,27,8)" rx="2" ry="2" />
<text  x="54.16" y="399.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.15%)</title><rect x="735.5" y="1589" width="1.7" height="15.0" fill="rgb(250,53,25)" rx="2" ry="2" />
<text  x="738.49" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="119.8" y="1301" width="1.7" height="15.0" fill="rgb(224,222,9)" rx="2" ry="2" />
<text  x="122.77" y="1311.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (1 samples, 0.15%)</title><rect x="600.0" y="1509" width="1.7" height="15.0" fill="rgb(242,3,39)" rx="2" ry="2" />
<text  x="603.00" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="119.8" y="1189" width="1.7" height="15.0" fill="rgb(231,44,12)" rx="2" ry="2" />
<text  x="122.77" y="1199.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.15%)</title><rect x="106.0" y="1701" width="1.8" height="15.0" fill="rgb(249,45,40)" rx="2" ry="2" />
<text  x="109.05" y="1711.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (3 samples, 0.44%)</title><rect x="1037.4" y="1557" width="5.1" height="15.0" fill="rgb(250,111,45)" rx="2" ry="2" />
<text  x="1040.35" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.15%)</title><rect x="202.1" y="1605" width="1.7" height="15.0" fill="rgb(251,22,42)" rx="2" ry="2" />
<text  x="205.09" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.15%)</title><rect x="853.8" y="1397" width="1.8" height="15.0" fill="rgb(216,181,37)" rx="2" ry="2" />
<text  x="856.84" y="1407.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="59.7" y="261" width="1.8" height="15.0" fill="rgb(247,182,0)" rx="2" ry="2" />
<text  x="62.74" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.15%)</title><rect x="54.6" y="117" width="1.7" height="15.0" fill="rgb(247,22,39)" rx="2" ry="2" />
<text  x="57.59" y="127.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="92.3" y="549" width="1.7" height="15.0" fill="rgb(245,72,23)" rx="2" ry="2" />
<text  x="95.33" y="559.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (1 samples, 0.15%)</title><rect x="102.6" y="1445" width="1.7" height="15.0" fill="rgb(235,208,26)" rx="2" ry="2" />
<text  x="105.62" y="1455.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="11.7" y="149" width="1.7" height="15.0" fill="rgb(241,146,20)" rx="2" ry="2" />
<text  x="14.72" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="97.5" y="549" width="1.7" height="15.0" fill="rgb(223,100,4)" rx="2" ry="2" />
<text  x="100.47" y="559.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="49.4" y="37" width="1.8" height="15.0" fill="rgb(228,169,30)" rx="2" ry="2" />
<text  x="52.45" y="47.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.15%)</title><rect x="70.0" y="341" width="1.7" height="15.0" fill="rgb(251,50,45)" rx="2" ry="2" />
<text  x="73.03" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.15%)</title><rect x="1044.2" y="1589" width="1.7" height="15.0" fill="rgb(226,139,2)" rx="2" ry="2" />
<text  x="1047.22" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (1 samples, 0.15%)</title><rect x="92.3" y="421" width="1.7" height="15.0" fill="rgb(232,183,45)" rx="2" ry="2" />
<text  x="95.33" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.15%)</title><rect x="109.5" y="1573" width="1.7" height="15.0" fill="rgb(217,103,44)" rx="2" ry="2" />
<text  x="112.48" y="1583.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.29%)</title><rect x="478.2" y="1525" width="3.5" height="15.0" fill="rgb(218,119,36)" rx="2" ry="2" />
<text  x="481.23" y="1535.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.15%)</title><rect x="735.5" y="1557" width="1.7" height="15.0" fill="rgb(245,217,20)" rx="2" ry="2" />
<text  x="738.49" y="1567.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (1 samples, 0.15%)</title><rect x="83.8" y="405" width="1.7" height="15.0" fill="rgb(247,110,19)" rx="2" ry="2" />
<text  x="86.75" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="128.3" y="1253" width="1.8" height="15.0" fill="rgb(217,199,42)" rx="2" ry="2" />
<text  x="131.34" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1333" width="87.5" height="15.0" fill="rgb(215,108,38)" rx="2" ry="2" />
<text  x="14.72" y="1343.5" >[unknown]</text>
</g>
<g >
<title>single_node_cql_env::execute_cql (3 samples, 0.44%)</title><rect x="99.2" y="1573" width="5.1" height="15.0" fill="rgb(219,227,29)" rx="2" ry="2" />
<text  x="102.19" y="1583.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (1 samples, 0.15%)</title><rect x="1044.2" y="1509" width="1.7" height="15.0" fill="rgb(229,113,50)" rx="2" ry="2" />
<text  x="1047.22" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1525" width="87.5" height="15.0" fill="rgb(227,156,48)" rx="2" ry="2" />
<text  x="14.72" y="1535.5" >[unknown]</text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (1 samples, 0.15%)</title><rect x="1073.4" y="1605" width="1.7" height="15.0" fill="rgb(251,121,44)" rx="2" ry="2" />
<text  x="1076.37" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (55 samples, 7.99%)</title><rect x="272.4" y="1477" width="94.3" height="15.0" fill="rgb(234,177,43)" rx="2" ry="2" />
<text  x="275.41" y="1487.5" >partition_s..</text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.15%)</title><rect x="75.2" y="261" width="1.7" height="15.0" fill="rgb(218,179,1)" rx="2" ry="2" />
<text  x="78.17" y="271.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (2 samples, 0.29%)</title><rect x="94.0" y="597" width="3.5" height="15.0" fill="rgb(235,112,20)" rx="2" ry="2" />
<text  x="97.04" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.29%)</title><rect x="131.8" y="1253" width="3.4" height="15.0" fill="rgb(236,93,45)" rx="2" ry="2" />
<text  x="134.77" y="1263.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.15%)</title><rect x="648.0" y="1541" width="1.7" height="15.0" fill="rgb(247,52,23)" rx="2" ry="2" />
<text  x="651.02" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (9 samples, 1.31%)</title><rect x="123.2" y="1493" width="15.4" height="15.0" fill="rgb(209,12,45)" rx="2" ry="2" />
<text  x="126.20" y="1503.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl (1 samples, 0.15%)</title><rect x="75.2" y="165" width="1.7" height="15.0" fill="rgb(233,140,14)" rx="2" ry="2" />
<text  x="78.17" y="175.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (12 samples, 1.74%)</title><rect x="802.4" y="1493" width="20.6" height="15.0" fill="rgb(250,151,11)" rx="2" ry="2" />
<text  x="805.38" y="1503.5" ></text>
</g>
<g >
<title>database::find_schema (2 samples, 0.29%)</title><rect x="785.2" y="1557" width="3.5" height="15.0" fill="rgb(228,223,21)" rx="2" ry="2" />
<text  x="788.23" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="901" width="87.5" height="15.0" fill="rgb(248,33,17)" rx="2" ry="2" />
<text  x="14.72" y="911.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.15%)</title><rect x="13.4" y="229" width="1.7" height="15.0" fill="rgb(217,96,37)" rx="2" ry="2" />
<text  x="16.43" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.15%)</title><rect x="61.5" y="133" width="1.7" height="15.0" fill="rgb(216,40,19)" rx="2" ry="2" />
<text  x="64.45" y="143.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.15%)</title><rect x="66.6" y="261" width="1.7" height="15.0" fill="rgb(208,33,48)" rx="2" ry="2" />
<text  x="69.60" y="271.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.15%)</title><rect x="622.3" y="1493" width="1.7" height="15.0" fill="rgb(220,55,43)" rx="2" ry="2" />
<text  x="625.30" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 2.91%)</title><rect x="11.7" y="517" width="34.3" height="15.0" fill="rgb(253,102,18)" rx="2" ry="2" />
<text  x="14.72" y="527.5" >[u..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="71.7" y="229" width="1.8" height="15.0" fill="rgb(238,69,32)" rx="2" ry="2" />
<text  x="74.74" y="239.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.15%)</title><rect x="665.2" y="1541" width="1.7" height="15.0" fill="rgb(246,101,22)" rx="2" ry="2" />
<text  x="668.17" y="1551.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (1 samples, 0.15%)</title><rect x="521.1" y="1493" width="1.7" height="15.0" fill="rgb(242,174,15)" rx="2" ry="2" />
<text  x="524.10" y="1503.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.15%)</title><rect x="735.5" y="1573" width="1.7" height="15.0" fill="rgb(247,57,45)" rx="2" ry="2" />
<text  x="738.49" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (2 samples, 0.29%)</title><rect x="94.0" y="485" width="3.5" height="15.0" fill="rgb(224,87,16)" rx="2" ry="2" />
<text  x="97.04" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::~unique_ptr (1 samples, 0.15%)</title><rect x="63.2" y="101" width="1.7" height="15.0" fill="rgb(240,151,28)" rx="2" ry="2" />
<text  x="66.17" y="111.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.29%)</title><rect x="94.0" y="741" width="3.5" height="15.0" fill="rgb(211,228,47)" rx="2" ry="2" />
<text  x="97.04" y="751.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.15%)</title><rect x="1016.8" y="1461" width="1.7" height="15.0" fill="rgb(211,5,23)" rx="2" ry="2" />
<text  x="1019.77" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.29%)</title><rect x="131.8" y="1333" width="3.4" height="15.0" fill="rgb(227,7,18)" rx="2" ry="2" />
<text  x="134.77" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="123.2" y="1365" width="1.7" height="15.0" fill="rgb(212,61,31)" rx="2" ry="2" />
<text  x="126.20" y="1375.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (18 samples, 2.62%)</title><rect x="11.7" y="389" width="30.9" height="15.0" fill="rgb(245,90,32)" rx="2" ry="2" />
<text  x="14.72" y="399.5" >cq..</text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.15%)</title><rect x="70.0" y="293" width="1.7" height="15.0" fill="rgb(228,6,28)" rx="2" ry="2" />
<text  x="73.03" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="97.5" y="581" width="1.7" height="15.0" fill="rgb(232,133,16)" rx="2" ry="2" />
<text  x="100.47" y="591.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (3 samples, 0.44%)</title><rect x="853.8" y="1509" width="5.2" height="15.0" fill="rgb(220,71,33)" rx="2" ry="2" />
<text  x="856.84" y="1519.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (9 samples, 1.31%)</title><rect x="248.4" y="1509" width="15.4" height="15.0" fill="rgb(231,43,34)" rx="2" ry="2" />
<text  x="251.40" y="1519.5" ></text>
</g>
<g >
<title>query::querier_base::close (16 samples, 2.33%)</title><rect x="507.4" y="1589" width="27.4" height="15.0" fill="rgb(251,88,17)" rx="2" ry="2" />
<text  x="510.38" y="1599.5" >q..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="51.2" y="101" width="1.7" height="15.0" fill="rgb(215,8,16)" rx="2" ry="2" />
<text  x="54.16" y="111.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.29%)</title><rect x="131.8" y="1317" width="3.4" height="15.0" fill="rgb(234,164,1)" rx="2" ry="2" />
<text  x="134.77" y="1327.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (1 samples, 0.15%)</title><rect x="102.6" y="1493" width="1.7" height="15.0" fill="rgb(249,14,21)" rx="2" ry="2" />
<text  x="105.62" y="1503.5" ></text>
</g>
<g >
<title>table::query (274 samples, 39.83%)</title><rect x="203.8" y="1605" width="470.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="206.81" y="1615.5" >table::query</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (12 samples, 1.74%)</title><rect x="481.7" y="1525" width="20.5" height="15.0" fill="rgb(230,94,52)" rx="2" ry="2" />
<text  x="484.66" y="1535.5" ></text>
</g>
<g >
<title>__start_context (19 samples, 2.76%)</title><rect x="106.0" y="1733" width="32.6" height="15.0" fill="rgb(246,204,9)" rx="2" ry="2" />
<text  x="109.05" y="1743.5" >__..</text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1173" width="87.5" height="15.0" fill="rgb(205,52,51)" rx="2" ry="2" />
<text  x="14.72" y="1183.5" >[unknown]</text>
</g>
<g >
<title>cql3::query_processor::execute_direct (3 samples, 0.44%)</title><rect x="46.0" y="405" width="5.2" height="15.0" fill="rgb(239,168,39)" rx="2" ry="2" />
<text  x="49.02" y="415.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.15%)</title><rect x="294.7" y="1429" width="1.7" height="15.0" fill="rgb(237,181,1)" rx="2" ry="2" />
<text  x="297.71" y="1439.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.15%)</title><rect x="877.8" y="1557" width="1.8" height="15.0" fill="rgb(253,27,0)" rx="2" ry="2" />
<text  x="880.85" y="1567.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="66.6" y="293" width="1.7" height="15.0" fill="rgb(239,157,9)" rx="2" ry="2" />
<text  x="69.60" y="303.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.15%)</title><rect x="97.5" y="837" width="1.7" height="15.0" fill="rgb(225,137,29)" rx="2" ry="2" />
<text  x="100.47" y="847.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (16 samples, 2.33%)</title><rect x="15.1" y="341" width="27.5" height="15.0" fill="rgb(216,201,7)" rx="2" ry="2" />
<text  x="18.15" y="351.5" >s..</text>
</g>
<g >
<title>memtable::apply (3 samples, 0.44%)</title><rect x="1037.4" y="1509" width="5.1" height="15.0" fill="rgb(252,134,2)" rx="2" ry="2" />
<text  x="1040.35" y="1519.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (1 samples, 0.15%)</title><rect x="1044.2" y="1445" width="1.7" height="15.0" fill="rgb(215,80,8)" rx="2" ry="2" />
<text  x="1047.22" y="1455.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::StackType (1 samples, 0.15%)</title><rect x="11.7" y="245" width="1.7" height="15.0" fill="rgb(210,176,1)" rx="2" ry="2" />
<text  x="14.72" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="948.2" y="1445" width="1.7" height="15.0" fill="rgb(214,163,18)" rx="2" ry="2" />
<text  x="951.17" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="939.6" y="1461" width="1.7" height="15.0" fill="rgb(241,137,44)" rx="2" ry="2" />
<text  x="942.59" y="1471.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.15%)</title><rect x="735.5" y="1525" width="1.7" height="15.0" fill="rgb(245,104,17)" rx="2" ry="2" />
<text  x="738.49" y="1535.5" ></text>
</g>
<g >
<title>create_partitions (20 samples, 2.91%)</title><rect x="11.7" y="421" width="34.3" height="15.0" fill="rgb(214,31,13)" rx="2" ry="2" />
<text  x="14.72" y="431.5" >cr..</text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.29%)</title><rect x="378.8" y="1525" width="3.4" height="15.0" fill="rgb(248,122,40)" rx="2" ry="2" />
<text  x="381.75" y="1535.5" ></text>
</g>
<g >
<title>seastar::reactor::run (546 samples, 79.36%)</title><rect x="148.9" y="1685" width="936.5" height="15.0" fill="rgb(239,125,11)" rx="2" ry="2" />
<text  x="151.92" y="1695.5" >seastar::reactor::run</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.15%)</title><rect x="54.6" y="133" width="1.7" height="15.0" fill="rgb(225,116,49)" rx="2" ry="2" />
<text  x="57.59" y="143.5" ></text>
</g>
<g >
<title>row_cache::make_reader (9 samples, 1.31%)</title><rect x="649.7" y="1541" width="15.5" height="15.0" fill="rgb(208,36,8)" rx="2" ry="2" />
<text  x="652.74" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (2 samples, 0.29%)</title><rect x="39.2" y="277" width="3.4" height="15.0" fill="rgb(210,183,16)" rx="2" ry="2" />
<text  x="42.16" y="287.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.15%)</title><rect x="500.5" y="1493" width="1.7" height="15.0" fill="rgb(228,121,12)" rx="2" ry="2" />
<text  x="503.52" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (16 samples, 2.33%)</title><rect x="111.2" y="1525" width="27.4" height="15.0" fill="rgb(217,63,35)" rx="2" ry="2" />
<text  x="114.19" y="1535.5" >c..</text>
</g>
<g >
<title>partition_entry::read (3 samples, 0.44%)</title><rect x="632.6" y="1525" width="5.1" height="15.0" fill="rgb(223,216,31)" rx="2" ry="2" />
<text  x="635.59" y="1535.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (1 samples, 0.15%)</title><rect x="102.6" y="1429" width="1.7" height="15.0" fill="rgb(235,85,4)" rx="2" ry="2" />
<text  x="105.62" y="1439.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (6 samples, 0.87%)</title><rect x="56.3" y="453" width="10.3" height="15.0" fill="rgb(248,154,27)" rx="2" ry="2" />
<text  x="59.31" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3 samples, 0.44%)</title><rect x="99.2" y="1621" width="5.1" height="15.0" fill="rgb(224,86,0)" rx="2" ry="2" />
<text  x="102.19" y="1631.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (89 samples, 12.94%)</title><rect x="231.2" y="1573" width="152.7" height="15.0" fill="rgb(242,26,10)" rx="2" ry="2" />
<text  x="234.25" y="1583.5" >flat_mutation_reade..</text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (4 samples, 0.58%)</title><rect x="71.7" y="405" width="6.9" height="15.0" fill="rgb(249,37,46)" rx="2" ry="2" />
<text  x="74.74" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (5 samples, 0.73%)</title><rect x="884.7" y="1493" width="8.6" height="15.0" fill="rgb(233,223,31)" rx="2" ry="2" />
<text  x="887.71" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.15%)</title><rect x="66.6" y="357" width="1.7" height="15.0" fill="rgb(254,220,20)" rx="2" ry="2" />
<text  x="69.60" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="71.7" y="325" width="1.8" height="15.0" fill="rgb(213,197,22)" rx="2" ry="2" />
<text  x="74.74" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.29%)</title><rect x="22.0" y="101" width="3.4" height="15.0" fill="rgb(212,221,1)" rx="2" ry="2" />
<text  x="25.01" y="111.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="63.2" y="133" width="1.7" height="15.0" fill="rgb(230,40,23)" rx="2" ry="2" />
<text  x="66.17" y="143.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="66.6" y="213" width="1.7" height="15.0" fill="rgb(205,48,22)" rx="2" ry="2" />
<text  x="69.60" y="223.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.15%)</title><rect x="666.9" y="1541" width="1.7" height="15.0" fill="rgb(231,192,34)" rx="2" ry="2" />
<text  x="669.89" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (16 samples, 2.33%)</title><rect x="111.2" y="1557" width="27.4" height="15.0" fill="rgb(237,122,54)" rx="2" ry="2" />
<text  x="114.19" y="1567.5" >c..</text>
</g>
<g >
<title>service::client_state::has_column_family_access (1 samples, 0.15%)</title><rect x="835.0" y="1573" width="1.7" height="15.0" fill="rgb(253,141,23)" rx="2" ry="2" />
<text  x="837.97" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1573" width="87.5" height="15.0" fill="rgb(215,170,26)" rx="2" ry="2" />
<text  x="14.72" y="1583.5" >[unknown]</text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.15%)</title><rect x="121.5" y="1333" width="1.7" height="15.0" fill="rgb(238,99,33)" rx="2" ry="2" />
<text  x="124.48" y="1343.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_move_assign (1 samples, 0.15%)</title><rect x="37.4" y="181" width="1.8" height="15.0" fill="rgb(242,42,31)" rx="2" ry="2" />
<text  x="40.44" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::update_statement (1 samples, 0.15%)</title><rect x="83.8" y="389" width="1.7" height="15.0" fill="rgb(211,216,5)" rx="2" ry="2" />
<text  x="86.75" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.29%)</title><rect x="1042.5" y="1605" width="3.4" height="15.0" fill="rgb(247,38,20)" rx="2" ry="2" />
<text  x="1045.50" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1141" width="87.5" height="15.0" fill="rgb(242,110,13)" rx="2" ry="2" />
<text  x="14.72" y="1151.5" >[unknown]</text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (2 samples, 0.29%)</title><rect x="100.9" y="1525" width="3.4" height="15.0" fill="rgb(237,54,13)" rx="2" ry="2" />
<text  x="103.90" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (3 samples, 0.44%)</title><rect x="46.0" y="325" width="5.2" height="15.0" fill="rgb(247,135,47)" rx="2" ry="2" />
<text  x="49.02" y="335.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="116.3" y="1269" width="1.8" height="15.0" fill="rgb(217,67,22)" rx="2" ry="2" />
<text  x="119.34" y="1279.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (17 samples, 2.47%)</title><rect x="109.5" y="1685" width="29.1" height="15.0" fill="rgb(225,225,7)" rx="2" ry="2" />
<text  x="112.48" y="1695.5" >st..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.15%)</title><rect x="116.3" y="1349" width="1.8" height="15.0" fill="rgb(210,108,16)" rx="2" ry="2" />
<text  x="119.34" y="1359.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.15%)</title><rect x="68.3" y="389" width="1.7" height="15.0" fill="rgb(228,185,6)" rx="2" ry="2" />
<text  x="71.31" y="399.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1509" width="87.5" height="15.0" fill="rgb(221,3,20)" rx="2" ry="2" />
<text  x="14.72" y="1519.5" >[unknown]</text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (11 samples, 1.60%)</title><rect x="510.8" y="1557" width="18.9" height="15.0" fill="rgb(238,68,54)" rx="2" ry="2" />
<text  x="513.81" y="1567.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::reset&lt;cql3_parser::CqlParser&gt; (1 samples, 0.15%)</title><rect x="90.6" y="501" width="1.7" height="15.0" fill="rgb(220,18,13)" rx="2" ry="2" />
<text  x="93.61" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (52 samples, 7.56%)</title><rect x="759.5" y="1637" width="89.2" height="15.0" fill="rgb(248,69,41)" rx="2" ry="2" />
<text  x="762.51" y="1647.5" >seastar::i..</text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.15%)</title><rect x="49.4" y="277" width="1.8" height="15.0" fill="rgb(230,60,17)" rx="2" ry="2" />
<text  x="52.45" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (2 samples, 0.29%)</title><rect x="15.1" y="133" width="3.5" height="15.0" fill="rgb(237,145,50)" rx="2" ry="2" />
<text  x="18.15" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="133.5" y="1157" width="1.7" height="15.0" fill="rgb(234,166,54)" rx="2" ry="2" />
<text  x="136.49" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1653" width="87.5" height="15.0" fill="rgb(244,195,24)" rx="2" ry="2" />
<text  x="14.72" y="1663.5" >[unknown]</text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.15%)</title><rect x="833.3" y="1525" width="1.7" height="15.0" fill="rgb(251,73,4)" rx="2" ry="2" />
<text  x="836.26" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1221" width="87.5" height="15.0" fill="rgb(227,63,25)" rx="2" ry="2" />
<text  x="14.72" y="1231.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="80.3" y="405" width="1.7" height="15.0" fill="rgb(221,168,22)" rx="2" ry="2" />
<text  x="83.32" y="415.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (2 samples, 0.29%)</title><rect x="11.7" y="277" width="3.4" height="15.0" fill="rgb(218,157,42)" rx="2" ry="2" />
<text  x="14.72" y="287.5" ></text>
</g>
<g >
<title>row::compact_and_expire (12 samples, 1.74%)</title><rect x="481.7" y="1541" width="20.5" height="15.0" fill="rgb(216,67,46)" rx="2" ry="2" />
<text  x="484.66" y="1551.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.44%)</title><rect x="419.9" y="1541" width="5.2" height="15.0" fill="rgb(230,198,27)" rx="2" ry="2" />
<text  x="422.91" y="1551.5" ></text>
</g>
<g >
<title>cql3::prepare_context::get_partition_key_bind_indexes (1 samples, 0.15%)</title><rect x="100.9" y="1509" width="1.7" height="15.0" fill="rgb(254,118,5)" rx="2" ry="2" />
<text  x="103.90" y="1519.5" ></text>
</g>
<g >
<title>database::apply_in_memory (3 samples, 0.44%)</title><rect x="1037.4" y="1541" width="5.1" height="15.0" fill="rgb(239,62,30)" rx="2" ry="2" />
<text  x="1040.35" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="761.2" y="1605" width="5.2" height="15.0" fill="rgb(218,138,35)" rx="2" ry="2" />
<text  x="764.22" y="1615.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.15%)</title><rect x="107.8" y="1669" width="1.7" height="15.0" fill="rgb(233,132,30)" rx="2" ry="2" />
<text  x="110.76" y="1679.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.15%)</title><rect x="126.6" y="1365" width="1.7" height="15.0" fill="rgb(233,155,38)" rx="2" ry="2" />
<text  x="129.63" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="991.0" y="1365" width="1.8" height="15.0" fill="rgb(218,88,41)" rx="2" ry="2" />
<text  x="994.05" y="1375.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (2 samples, 0.29%)</title><rect x="308.4" y="1429" width="3.5" height="15.0" fill="rgb(231,145,12)" rx="2" ry="2" />
<text  x="311.43" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.15%)</title><rect x="40.9" y="165" width="1.7" height="15.0" fill="rgb(209,157,20)" rx="2" ry="2" />
<text  x="43.87" y="175.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="56.3" y="325" width="1.7" height="15.0" fill="rgb(217,9,33)" rx="2" ry="2" />
<text  x="59.31" y="335.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (2 samples, 0.29%)</title><rect x="90.6" y="565" width="3.4" height="15.0" fill="rgb(239,200,52)" rx="2" ry="2" />
<text  x="93.61" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::revoke_statement*, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt; (1 samples, 0.15%)</title><rect x="85.5" y="405" width="1.7" height="15.0" fill="rgb(233,80,34)" rx="2" ry="2" />
<text  x="88.47" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (3 samples, 0.44%)</title><rect x="853.8" y="1525" width="5.2" height="15.0" fill="rgb(222,162,29)" rx="2" ry="2" />
<text  x="856.84" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="61.5" y="85" width="1.7" height="15.0" fill="rgb(229,176,24)" rx="2" ry="2" />
<text  x="64.45" y="95.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.15%)</title><rect x="672.0" y="1589" width="1.8" height="15.0" fill="rgb(249,47,6)" rx="2" ry="2" />
<text  x="675.03" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="721.8" y="1621" width="1.7" height="15.0" fill="rgb(227,58,25)" rx="2" ry="2" />
<text  x="724.77" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.15%)</title><rect x="70.0" y="325" width="1.7" height="15.0" fill="rgb(220,184,18)" rx="2" ry="2" />
<text  x="73.03" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="61.5" y="261" width="1.7" height="15.0" fill="rgb(231,84,15)" rx="2" ry="2" />
<text  x="64.45" y="271.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.15%)</title><rect x="47.7" y="229" width="1.7" height="15.0" fill="rgb(231,17,17)" rx="2" ry="2" />
<text  x="50.73" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="61.5" y="53" width="1.7" height="15.0" fill="rgb(235,92,21)" rx="2" ry="2" />
<text  x="64.45" y="63.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (1 samples, 0.15%)</title><rect x="1033.9" y="1557" width="1.7" height="15.0" fill="rgb(221,46,41)" rx="2" ry="2" />
<text  x="1036.92" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (1 samples, 0.15%)</title><rect x="107.8" y="1605" width="1.7" height="15.0" fill="rgb(245,132,34)" rx="2" ry="2" />
<text  x="110.76" y="1615.5" ></text>
</g>
<g >
<title>database::query (6 samples, 0.87%)</title><rect x="985.9" y="1413" width="10.3" height="15.0" fill="rgb(233,159,26)" rx="2" ry="2" />
<text  x="988.90" y="1423.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (71 samples, 10.32%)</title><rect x="385.6" y="1573" width="121.8" height="15.0" fill="rgb(225,11,33)" rx="2" ry="2" />
<text  x="388.61" y="1583.5" >query::consume_..</text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.15%)</title><rect x="553.7" y="1541" width="1.7" height="15.0" fill="rgb(205,150,30)" rx="2" ry="2" />
<text  x="556.69" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.15%)</title><rect x="119.8" y="1429" width="1.7" height="15.0" fill="rgb(239,64,36)" rx="2" ry="2" />
<text  x="122.77" y="1439.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.15%)</title><rect x="56.3" y="261" width="1.7" height="15.0" fill="rgb(237,67,46)" rx="2" ry="2" />
<text  x="59.31" y="271.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="965" width="87.5" height="15.0" fill="rgb(220,177,9)" rx="2" ry="2" />
<text  x="14.72" y="975.5" >[unknown]</text>
</g>
<g >
<title>mutation_reader_merger::close (11 samples, 1.60%)</title><rect x="510.8" y="1541" width="18.9" height="15.0" fill="rgb(230,67,26)" rx="2" ry="2" />
<text  x="513.81" y="1551.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (1 samples, 0.15%)</title><rect x="888.1" y="1445" width="1.8" height="15.0" fill="rgb(221,73,24)" rx="2" ry="2" />
<text  x="891.14" y="1455.5" ></text>
</g>
<g >
<title>reader_permit::mark_used (1 samples, 0.15%)</title><rect x="200.4" y="1605" width="1.7" height="15.0" fill="rgb(223,190,45)" rx="2" ry="2" />
<text  x="203.38" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (2 samples, 0.29%)</title><rect x="893.3" y="1493" width="3.4" height="15.0" fill="rgb(247,115,47)" rx="2" ry="2" />
<text  x="896.28" y="1503.5" ></text>
</g>
<g >
<title>do_cql_test (2 samples, 0.29%)</title><rect x="94.0" y="677" width="3.5" height="15.0" fill="rgb(232,82,2)" rx="2" ry="2" />
<text  x="97.04" y="687.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.15%)</title><rect x="70.0" y="453" width="1.7" height="15.0" fill="rgb(248,116,30)" rx="2" ry="2" />
<text  x="73.03" y="463.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1589" width="87.5" height="15.0" fill="rgb(242,180,20)" rx="2" ry="2" />
<text  x="14.72" y="1599.5" >[unknown]</text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (7 samples, 1.02%)</title><rect x="692.6" y="1621" width="12.0" height="15.0" fill="rgb(231,158,2)" rx="2" ry="2" />
<text  x="695.62" y="1631.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.44%)</title><rect x="1037.4" y="1605" width="5.1" height="15.0" fill="rgb(227,148,46)" rx="2" ry="2" />
<text  x="1040.35" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (65 samples, 9.45%)</title><rect x="263.8" y="1509" width="111.5" height="15.0" fill="rgb(211,12,22)" rx="2" ry="2" />
<text  x="266.84" y="1519.5" >partition_sna..</text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.29%)</title><rect x="15.1" y="149" width="3.5" height="15.0" fill="rgb(208,13,35)" rx="2" ry="2" />
<text  x="18.15" y="159.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="71.7" y="389" width="1.8" height="15.0" fill="rgb(234,13,32)" rx="2" ry="2" />
<text  x="74.74" y="399.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (7 samples, 1.02%)</title><rect x="78.6" y="485" width="12.0" height="15.0" fill="rgb(213,14,50)" rx="2" ry="2" />
<text  x="81.60" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="702.9" y="1589" width="1.7" height="15.0" fill="rgb(249,170,40)" rx="2" ry="2" />
<text  x="705.91" y="1599.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="939.6" y="1493" width="1.7" height="15.0" fill="rgb(248,114,41)" rx="2" ry="2" />
<text  x="942.59" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (1 samples, 0.15%)</title><rect x="123.2" y="1477" width="1.7" height="15.0" fill="rgb(216,137,2)" rx="2" ry="2" />
<text  x="126.20" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_channel (1 samples, 0.15%)</title><rect x="18.6" y="181" width="1.7" height="15.0" fill="rgb(233,14,1)" rx="2" ry="2" />
<text  x="21.58" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.29%)</title><rect x="131.8" y="1349" width="3.4" height="15.0" fill="rgb(230,11,5)" rx="2" ry="2" />
<text  x="134.77" y="1359.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (15 samples, 2.18%)</title><rect x="800.7" y="1525" width="25.7" height="15.0" fill="rgb(216,33,5)" rx="2" ry="2" />
<text  x="803.67" y="1535.5" >s..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (1 samples, 0.15%)</title><rect x="78.6" y="453" width="1.7" height="15.0" fill="rgb(229,137,17)" rx="2" ry="2" />
<text  x="81.60" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (2 samples, 0.29%)</title><rect x="260.4" y="1493" width="3.4" height="15.0" fill="rgb(217,65,30)" rx="2" ry="2" />
<text  x="263.41" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.15%)</title><rect x="46.0" y="229" width="1.7" height="15.0" fill="rgb(237,4,44)" rx="2" ry="2" />
<text  x="49.02" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.15%)</title><rect x="61.5" y="149" width="1.7" height="15.0" fill="rgb(230,37,37)" rx="2" ry="2" />
<text  x="64.45" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="1039.1" y="1445" width="1.7" height="15.0" fill="rgb(246,128,16)" rx="2" ry="2" />
<text  x="1042.07" y="1455.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="387.3" y="1557" width="1.7" height="15.0" fill="rgb(233,112,52)" rx="2" ry="2" />
<text  x="390.33" y="1567.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="123.2" y="1301" width="1.7" height="15.0" fill="rgb(250,201,12)" rx="2" ry="2" />
<text  x="126.20" y="1311.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.15%)</title><rect x="68.3" y="405" width="1.7" height="15.0" fill="rgb(231,45,1)" rx="2" ry="2" />
<text  x="71.31" y="415.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.15%)</title><rect x="516.0" y="1525" width="1.7" height="15.0" fill="rgb(217,48,27)" rx="2" ry="2" />
<text  x="518.96" y="1535.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="160.9" y="1605" width="1.7" height="15.0" fill="rgb(219,59,3)" rx="2" ry="2" />
<text  x="163.93" y="1615.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (1 samples, 0.15%)</title><rect x="99.2" y="1525" width="1.7" height="15.0" fill="rgb(252,66,3)" rx="2" ry="2" />
<text  x="102.19" y="1535.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.15%)</title><rect x="531.4" y="1541" width="1.7" height="15.0" fill="rgb(223,140,35)" rx="2" ry="2" />
<text  x="534.40" y="1551.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (1 samples, 0.15%)</title><rect x="102.6" y="1477" width="1.7" height="15.0" fill="rgb(238,171,50)" rx="2" ry="2" />
<text  x="105.62" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="524.5" y="1509" width="1.7" height="15.0" fill="rgb(247,84,35)" rx="2" ry="2" />
<text  x="527.53" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (48 samples, 6.98%)</title><rect x="11.7" y="741" width="82.3" height="15.0" fill="rgb(249,167,12)" rx="2" ry="2" />
<text  x="14.72" y="751.5" >[unknown]</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (3 samples, 0.44%)</title><rect x="1023.6" y="1541" width="5.2" height="15.0" fill="rgb(244,190,35)" rx="2" ry="2" />
<text  x="1026.63" y="1551.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.29%)</title><rect x="673.8" y="1621" width="3.4" height="15.0" fill="rgb(209,221,12)" rx="2" ry="2" />
<text  x="676.75" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.15%)</title><rect x="97.5" y="693" width="1.7" height="15.0" fill="rgb(212,65,7)" rx="2" ry="2" />
<text  x="100.47" y="703.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (3 samples, 0.44%)</title><rect x="82.0" y="437" width="5.2" height="15.0" fill="rgb(210,190,42)" rx="2" ry="2" />
<text  x="85.03" y="447.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_nextChar (1 samples, 0.15%)</title><rect x="20.3" y="181" width="1.7" height="15.0" fill="rgb(249,140,16)" rx="2" ry="2" />
<text  x="23.29" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="97.5" y="725" width="1.7" height="15.0" fill="rgb(226,133,8)" rx="2" ry="2" />
<text  x="100.47" y="735.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (3 samples, 0.44%)</title><rect x="46.0" y="501" width="5.2" height="15.0" fill="rgb(228,210,50)" rx="2" ry="2" />
<text  x="49.02" y="511.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (101 samples, 14.68%)</title><rect x="864.1" y="1605" width="173.3" height="15.0" fill="rgb(250,137,39)" rx="2" ry="2" />
<text  x="867.13" y="1615.5" >seastar::noncopyable_f..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="222.7" y="1557" width="1.7" height="15.0" fill="rgb(216,185,53)" rx="2" ry="2" />
<text  x="225.67" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1445" width="87.5" height="15.0" fill="rgb(241,85,11)" rx="2" ry="2" />
<text  x="14.72" y="1455.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (46 samples, 6.69%)</title><rect x="11.7" y="661" width="78.9" height="15.0" fill="rgb(218,105,50)" rx="2" ry="2" />
<text  x="14.72" y="671.5" >[unknown]</text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (2 samples, 0.29%)</title><rect x="740.6" y="1621" width="3.5" height="15.0" fill="rgb(251,46,39)" rx="2" ry="2" />
<text  x="743.64" y="1631.5" ></text>
</g>
<g >
<title>hwloc_linux_set_tid_cpubind (5 samples, 0.73%)</title><rect x="1112.8" y="1765" width="8.6" height="15.0" fill="rgb(241,142,43)" rx="2" ry="2" />
<text  x="1115.82" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.15%)</title><rect x="521.1" y="1509" width="1.7" height="15.0" fill="rgb(229,106,10)" rx="2" ry="2" />
<text  x="524.10" y="1519.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (20 samples, 2.91%)</title><rect x="11.7" y="485" width="34.3" height="15.0" fill="rgb(239,98,8)" rx="2" ry="2" />
<text  x="14.72" y="495.5" >se..</text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="948.2" y="1477" width="1.7" height="15.0" fill="rgb(212,197,25)" rx="2" ry="2" />
<text  x="951.17" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (3 samples, 0.44%)</title><rect x="51.2" y="341" width="5.1" height="15.0" fill="rgb(216,122,41)" rx="2" ry="2" />
<text  x="54.16" y="351.5" ></text>
</g>
<g >
<title>query_result_builder::query_result_builder (1 samples, 0.15%)</title><rect x="668.6" y="1589" width="1.7" height="15.0" fill="rgb(219,197,26)" rx="2" ry="2" />
<text  x="671.60" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (51 samples, 7.41%)</title><rect x="931.0" y="1509" width="87.5" height="15.0" fill="rgb(220,22,30)" rx="2" ry="2" />
<text  x="934.02" y="1519.5" >service::s..</text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.15%)</title><rect x="310.1" y="1397" width="1.8" height="15.0" fill="rgb(230,210,3)" rx="2" ry="2" />
<text  x="313.15" y="1407.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.15%)</title><rect x="68.3" y="357" width="1.7" height="15.0" fill="rgb(251,131,12)" rx="2" ry="2" />
<text  x="71.31" y="367.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (6 samples, 0.87%)</title><rect x="56.3" y="405" width="10.3" height="15.0" fill="rgb(226,47,10)" rx="2" ry="2" />
<text  x="59.31" y="415.5" ></text>
</g>
<g >
<title>__start_context (6 samples, 0.87%)</title><rect x="56.3" y="549" width="10.3" height="15.0" fill="rgb(228,44,37)" rx="2" ry="2" />
<text  x="59.31" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="948.2" y="1461" width="1.7" height="15.0" fill="rgb(233,99,0)" rx="2" ry="2" />
<text  x="951.17" y="1471.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="119.8" y="1269" width="1.7" height="15.0" fill="rgb(210,95,33)" rx="2" ry="2" />
<text  x="122.77" y="1279.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.15%)</title><rect x="361.6" y="1461" width="1.7" height="15.0" fill="rgb(223,167,22)" rx="2" ry="2" />
<text  x="364.60" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="389.0" y="1541" width="3.5" height="15.0" fill="rgb(247,119,22)" rx="2" ry="2" />
<text  x="392.04" y="1551.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="75.2" y="277" width="1.7" height="15.0" fill="rgb(230,140,9)" rx="2" ry="2" />
<text  x="78.17" y="287.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (4 samples, 0.58%)</title><rect x="639.4" y="1525" width="6.9" height="15.0" fill="rgb(238,83,16)" rx="2" ry="2" />
<text  x="642.45" y="1535.5" ></text>
</g>
<g >
<title>row_cache::make_reader (2 samples, 0.29%)</title><rect x="540.0" y="1557" width="3.4" height="15.0" fill="rgb(215,173,20)" rx="2" ry="2" />
<text  x="542.97" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_create_nodes (1 samples, 0.15%)</title><rect x="11.7" y="181" width="1.7" height="15.0" fill="rgb(211,17,22)" rx="2" ry="2" />
<text  x="14.72" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.29%)</title><rect x="164.4" y="1605" width="3.4" height="15.0" fill="rgb(224,68,15)" rx="2" ry="2" />
<text  x="167.36" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1029" width="87.5" height="15.0" fill="rgb(235,208,18)" rx="2" ry="2" />
<text  x="14.72" y="1039.5" >[unknown]</text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (8 samples, 1.16%)</title><rect x="1004.8" y="1477" width="13.7" height="15.0" fill="rgb(242,229,25)" rx="2" ry="2" />
<text  x="1007.77" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.15%)</title><rect x="97.5" y="709" width="1.7" height="15.0" fill="rgb(235,133,32)" rx="2" ry="2" />
<text  x="100.47" y="719.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::~pair (1 samples, 0.15%)</title><rect x="63.2" y="117" width="1.7" height="15.0" fill="rgb(239,207,37)" rx="2" ry="2" />
<text  x="66.17" y="127.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.15%)</title><rect x="670.3" y="1589" width="1.7" height="15.0" fill="rgb(253,224,52)" rx="2" ry="2" />
<text  x="673.32" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1621" width="87.5" height="15.0" fill="rgb(235,33,32)" rx="2" ry="2" />
<text  x="14.72" y="1631.5" >[unknown]</text>
</g>
<g >
<title>std::_Optional_payload&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false, false&gt;::operator= (1 samples, 0.15%)</title><rect x="37.4" y="213" width="1.8" height="15.0" fill="rgb(241,69,12)" rx="2" ry="2" />
<text  x="40.44" y="223.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="40.9" y="213" width="1.7" height="15.0" fill="rgb(207,146,24)" rx="2" ry="2" />
<text  x="43.87" y="223.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.15%)</title><rect x="66.6" y="373" width="1.7" height="15.0" fill="rgb(249,189,12)" rx="2" ry="2" />
<text  x="69.60" y="383.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1093" width="87.5" height="15.0" fill="rgb(245,189,41)" rx="2" ry="2" />
<text  x="14.72" y="1103.5" >[unknown]</text>
</g>
<g >
<title>do_cql_test (20 samples, 2.91%)</title><rect x="11.7" y="437" width="34.3" height="15.0" fill="rgb(211,192,41)" rx="2" ry="2" />
<text  x="14.72" y="447.5" >do..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.29%)</title><rect x="90.6" y="677" width="3.4" height="15.0" fill="rgb(218,35,17)" rx="2" ry="2" />
<text  x="93.61" y="687.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (3 samples, 0.44%)</title><rect x="853.8" y="1477" width="5.2" height="15.0" fill="rgb(209,223,6)" rx="2" ry="2" />
<text  x="856.84" y="1487.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="68.3" y="165" width="1.7" height="15.0" fill="rgb(206,85,34)" rx="2" ry="2" />
<text  x="71.31" y="175.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.15%)</title><rect x="445.6" y="1509" width="1.8" height="15.0" fill="rgb(238,65,25)" rx="2" ry="2" />
<text  x="448.64" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="66.6" y="181" width="1.7" height="15.0" fill="rgb(251,210,44)" rx="2" ry="2" />
<text  x="69.60" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.15%)</title><rect x="704.6" y="1621" width="1.7" height="15.0" fill="rgb(237,223,5)" rx="2" ry="2" />
<text  x="707.62" y="1631.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.15%)</title><rect x="780.1" y="1525" width="1.7" height="15.0" fill="rgb(247,47,19)" rx="2" ry="2" />
<text  x="783.09" y="1535.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (19 samples, 2.76%)</title><rect x="106.0" y="1717" width="32.6" height="15.0" fill="rgb(239,178,51)" rx="2" ry="2" />
<text  x="109.05" y="1727.5" >se..</text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_initialize_map (1 samples, 0.15%)</title><rect x="11.7" y="197" width="1.7" height="15.0" fill="rgb(231,154,15)" rx="2" ry="2" />
<text  x="14.72" y="207.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (6 samples, 0.87%)</title><rect x="903.6" y="1557" width="10.3" height="15.0" fill="rgb(252,215,4)" rx="2" ry="2" />
<text  x="906.58" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="63.2" y="261" width="1.7" height="15.0" fill="rgb(221,78,16)" rx="2" ry="2" />
<text  x="66.17" y="271.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.29%)</title><rect x="90.6" y="693" width="3.4" height="15.0" fill="rgb(234,195,10)" rx="2" ry="2" />
<text  x="93.61" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.15%)</title><rect x="16.9" y="117" width="1.7" height="15.0" fill="rgb(208,132,45)" rx="2" ry="2" />
<text  x="19.86" y="127.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (19 samples, 2.76%)</title><rect x="11.7" y="405" width="32.6" height="15.0" fill="rgb(229,37,53)" rx="2" ry="2" />
<text  x="14.72" y="415.5" >si..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::~shared_ptr (1 samples, 0.15%)</title><rect x="64.9" y="325" width="1.7" height="15.0" fill="rgb(248,75,49)" rx="2" ry="2" />
<text  x="67.88" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (8 samples, 1.16%)</title><rect x="124.9" y="1461" width="13.7" height="15.0" fill="rgb(219,207,38)" rx="2" ry="2" />
<text  x="127.91" y="1471.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (7 samples, 1.02%)</title><rect x="1004.8" y="1445" width="12.0" height="15.0" fill="rgb(245,113,32)" rx="2" ry="2" />
<text  x="1007.77" y="1455.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (26 samples, 3.78%)</title><rect x="790.4" y="1557" width="44.6" height="15.0" fill="rgb(229,154,8)" rx="2" ry="2" />
<text  x="793.38" y="1567.5" >serv..</text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="570.8" y="1509" width="3.5" height="15.0" fill="rgb(254,222,38)" rx="2" ry="2" />
<text  x="573.84" y="1519.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="68.3" y="293" width="1.7" height="15.0" fill="rgb(229,91,21)" rx="2" ry="2" />
<text  x="71.31" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.29%)</title><rect x="46.0" y="277" width="3.4" height="15.0" fill="rgb(246,162,39)" rx="2" ry="2" />
<text  x="49.02" y="287.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (5 samples, 0.73%)</title><rect x="140.3" y="1749" width="8.6" height="15.0" fill="rgb(205,160,24)" rx="2" ry="2" />
<text  x="143.35" y="1759.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.15%)</title><rect x="354.7" y="1365" width="1.8" height="15.0" fill="rgb(215,222,4)" rx="2" ry="2" />
<text  x="357.74" y="1375.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="97.5" y="501" width="1.7" height="15.0" fill="rgb(246,42,2)" rx="2" ry="2" />
<text  x="100.47" y="511.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (1 samples, 0.15%)</title><rect x="42.6" y="389" width="1.7" height="15.0" fill="rgb(220,195,6)" rx="2" ry="2" />
<text  x="45.59" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="128.3" y="1269" width="1.8" height="15.0" fill="rgb(212,36,15)" rx="2" ry="2" />
<text  x="131.34" y="1279.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.15%)</title><rect x="92.3" y="517" width="1.7" height="15.0" fill="rgb(210,64,38)" rx="2" ry="2" />
<text  x="95.33" y="527.5" ></text>
</g>
<g >
<title>create_partitions (6 samples, 0.87%)</title><rect x="56.3" y="469" width="10.3" height="15.0" fill="rgb(240,215,43)" rx="2" ry="2" />
<text  x="59.31" y="479.5" ></text>
</g>
<g >
<title>std::__variant_cast&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="54.6" y="85" width="1.7" height="15.0" fill="rgb(226,229,4)" rx="2" ry="2" />
<text  x="57.59" y="95.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (2 samples, 0.29%)</title><rect x="11.7" y="325" width="3.4" height="15.0" fill="rgb(246,208,25)" rx="2" ry="2" />
<text  x="14.72" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (61 samples, 8.87%)</title><rect x="913.9" y="1557" width="104.6" height="15.0" fill="rgb(252,67,28)" rx="2" ry="2" />
<text  x="916.87" y="1567.5" >cql3::statem..</text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (6 samples, 0.87%)</title><rect x="985.9" y="1429" width="10.3" height="15.0" fill="rgb(220,88,5)" rx="2" ry="2" />
<text  x="988.90" y="1439.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.44%)</title><rect x="114.6" y="1429" width="5.2" height="15.0" fill="rgb(234,189,37)" rx="2" ry="2" />
<text  x="117.62" y="1439.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.15%)</title><rect x="661.7" y="1509" width="1.8" height="15.0" fill="rgb(217,7,0)" rx="2" ry="2" />
<text  x="664.74" y="1519.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (1 samples, 0.15%)</title><rect x="109.5" y="1493" width="1.7" height="15.0" fill="rgb(223,73,40)" rx="2" ry="2" />
<text  x="112.48" y="1503.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.44%)</title><rect x="339.3" y="1397" width="5.1" height="15.0" fill="rgb(230,59,20)" rx="2" ry="2" />
<text  x="342.30" y="1407.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.15%)</title><rect x="70.0" y="405" width="1.7" height="15.0" fill="rgb(252,197,41)" rx="2" ry="2" />
<text  x="73.03" y="415.5" ></text>
</g>
<g >
<title>create_partitions (3 samples, 0.44%)</title><rect x="99.2" y="1589" width="5.1" height="15.0" fill="rgb(250,136,37)" rx="2" ry="2" />
<text  x="102.19" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="47.7" y="85" width="1.7" height="15.0" fill="rgb(231,155,9)" rx="2" ry="2" />
<text  x="50.73" y="95.5" ></text>
</g>
<g >
<title>create_partitions (7 samples, 1.02%)</title><rect x="78.6" y="549" width="12.0" height="15.0" fill="rgb(234,158,35)" rx="2" ry="2" />
<text  x="81.60" y="559.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="76.9" y="325" width="1.7" height="15.0" fill="rgb(230,75,11)" rx="2" ry="2" />
<text  x="79.89" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (2 samples, 0.29%)</title><rect x="992.8" y="1349" width="3.4" height="15.0" fill="rgb(252,207,6)" rx="2" ry="2" />
<text  x="995.76" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 7.27%)</title><rect x="11.7" y="837" width="85.8" height="15.0" fill="rgb(223,160,30)" rx="2" ry="2" />
<text  x="14.72" y="847.5" >[unknown]</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="80.3" y="421" width="1.7" height="15.0" fill="rgb(252,141,33)" rx="2" ry="2" />
<text  x="83.32" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="49.4" y="149" width="1.8" height="15.0" fill="rgb(205,19,29)" rx="2" ry="2" />
<text  x="52.45" y="159.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (1 samples, 0.15%)</title><rect x="258.7" y="1493" width="1.7" height="15.0" fill="rgb(205,90,29)" rx="2" ry="2" />
<text  x="261.69" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="795.5" y="1525" width="1.7" height="15.0" fill="rgb(209,10,54)" rx="2" ry="2" />
<text  x="798.52" y="1535.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (3 samples, 0.44%)</title><rect x="351.3" y="1381" width="5.2" height="15.0" fill="rgb(224,192,54)" rx="2" ry="2" />
<text  x="354.31" y="1391.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.15%)</title><rect x="853.8" y="1429" width="1.8" height="15.0" fill="rgb(212,121,23)" rx="2" ry="2" />
<text  x="856.84" y="1439.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (7 samples, 1.02%)</title><rect x="111.2" y="1461" width="12.0" height="15.0" fill="rgb(248,21,30)" rx="2" ry="2" />
<text  x="114.19" y="1471.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (4 samples, 0.58%)</title><rect x="1075.1" y="1621" width="6.8" height="15.0" fill="rgb(216,192,54)" rx="2" ry="2" />
<text  x="1078.09" y="1631.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="97.5" y="469" width="1.7" height="15.0" fill="rgb(217,137,0)" rx="2" ry="2" />
<text  x="100.47" y="479.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.15%)</title><rect x="68.3" y="565" width="1.7" height="15.0" fill="rgb(239,140,33)" rx="2" ry="2" />
<text  x="71.31" y="575.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.15%)</title><rect x="66.6" y="501" width="1.7" height="15.0" fill="rgb(240,134,48)" rx="2" ry="2" />
<text  x="69.60" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (61 samples, 8.87%)</title><rect x="270.7" y="1493" width="104.6" height="15.0" fill="rgb(227,4,7)" rx="2" ry="2" />
<text  x="273.70" y="1503.5" >partition_sn..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="58.0" y="197" width="1.7" height="15.0" fill="rgb(205,198,28)" rx="2" ry="2" />
<text  x="61.02" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.15%)</title><rect x="68.3" y="373" width="1.7" height="15.0" fill="rgb(229,56,14)" rx="2" ry="2" />
<text  x="71.31" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (6 samples, 0.87%)</title><rect x="56.3" y="373" width="10.3" height="15.0" fill="rgb(217,86,45)" rx="2" ry="2" />
<text  x="59.31" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.15%)</title><rect x="620.6" y="1493" width="1.7" height="15.0" fill="rgb(218,227,54)" rx="2" ry="2" />
<text  x="623.58" y="1503.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.15%)</title><rect x="807.5" y="1477" width="1.7" height="15.0" fill="rgb(235,21,24)" rx="2" ry="2" />
<text  x="810.53" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 11.63%)</title><rect x="11.7" y="1765" width="137.2" height="15.0" fill="rgb(237,90,19)" rx="2" ry="2" />
<text  x="14.72" y="1775.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.29%)</title><rect x="1069.9" y="1589" width="3.5" height="15.0" fill="rgb(227,145,47)" rx="2" ry="2" />
<text  x="1072.94" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="1044.2" y="1477" width="1.7" height="15.0" fill="rgb(252,17,19)" rx="2" ry="2" />
<text  x="1047.22" y="1487.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (5 samples, 0.73%)</title><rect x="749.2" y="1621" width="8.6" height="15.0" fill="rgb(238,77,33)" rx="2" ry="2" />
<text  x="752.22" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (75 samples, 10.90%)</title><rect x="11.7" y="1749" width="128.6" height="15.0" fill="rgb(233,132,25)" rx="2" ry="2" />
<text  x="14.72" y="1759.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.15%)</title><rect x="70.0" y="421" width="1.7" height="15.0" fill="rgb(214,204,5)" rx="2" ry="2" />
<text  x="73.03" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (1 samples, 0.15%)</title><rect x="1032.2" y="1557" width="1.7" height="15.0" fill="rgb(250,172,17)" rx="2" ry="2" />
<text  x="1035.21" y="1567.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (294 samples, 42.73%)</title><rect x="174.7" y="1637" width="504.2" height="15.0" fill="rgb(212,68,51)" rx="2" ry="2" />
<text  x="177.65" y="1647.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (1 samples, 0.15%)</title><rect x="56.3" y="229" width="1.7" height="15.0" fill="rgb(229,228,35)" rx="2" ry="2" />
<text  x="59.31" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.15%)</title><rect x="56.3" y="293" width="1.7" height="15.0" fill="rgb(234,128,10)" rx="2" ry="2" />
<text  x="59.31" y="303.5" ></text>
</g>
<g >
<title>database::find_keyspace (1 samples, 0.15%)</title><rect x="1001.3" y="1477" width="1.8" height="15.0" fill="rgb(215,180,14)" rx="2" ry="2" />
<text  x="1004.34" y="1487.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.15%)</title><rect x="68.3" y="501" width="1.7" height="15.0" fill="rgb(221,141,8)" rx="2" ry="2" />
<text  x="71.31" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.15%)</title><rect x="46.0" y="197" width="1.7" height="15.0" fill="rgb(254,219,23)" rx="2" ry="2" />
<text  x="49.02" y="207.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.15%)</title><rect x="39.2" y="213" width="1.7" height="15.0" fill="rgb(216,211,22)" rx="2" ry="2" />
<text  x="42.16" y="223.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (2 samples, 0.29%)</title><rect x="318.7" y="1397" width="3.5" height="15.0" fill="rgb(218,188,50)" rx="2" ry="2" />
<text  x="321.72" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.15%)</title><rect x="891.6" y="1477" width="1.7" height="15.0" fill="rgb(233,201,11)" rx="2" ry="2" />
<text  x="894.57" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="133.5" y="1125" width="1.7" height="15.0" fill="rgb(248,172,44)" rx="2" ry="2" />
<text  x="136.49" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="917" width="87.5" height="15.0" fill="rgb(230,119,2)" rx="2" ry="2" />
<text  x="14.72" y="927.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.15%)</title><rect x="76.9" y="357" width="1.7" height="15.0" fill="rgb(215,121,36)" rx="2" ry="2" />
<text  x="79.89" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="49.4" y="101" width="1.8" height="15.0" fill="rgb(209,157,14)" rx="2" ry="2" />
<text  x="52.45" y="111.5" ></text>
</g>
<g >
<title>fmt::v7::detail::parse_replacement_field&lt;char, fmt::v7::detail::format_handler&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char, fmt::v7::basic_format_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;&amp;&gt; (1 samples, 0.15%)</title><rect x="138.6" y="1733" width="1.7" height="15.0" fill="rgb(251,82,45)" rx="2" ry="2" />
<text  x="141.63" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.15%)</title><rect x="889.9" y="1445" width="1.7" height="15.0" fill="rgb(216,80,14)" rx="2" ry="2" />
<text  x="892.85" y="1455.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.15%)</title><rect x="70.0" y="485" width="1.7" height="15.0" fill="rgb(225,143,40)" rx="2" ry="2" />
<text  x="73.03" y="495.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.15%)</title><rect x="97.5" y="805" width="1.7" height="15.0" fill="rgb(205,128,53)" rx="2" ry="2" />
<text  x="100.47" y="815.5" ></text>
</g>
<g >
<title>[unknown] (39 samples, 5.67%)</title><rect x="11.7" y="629" width="66.9" height="15.0" fill="rgb(247,173,7)" rx="2" ry="2" />
<text  x="14.72" y="639.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="97.5" y="613" width="1.7" height="15.0" fill="rgb(227,60,34)" rx="2" ry="2" />
<text  x="100.47" y="623.5" ></text>
</g>
<g >
<title>LZ4_compress_fast_extState (1 samples, 0.15%)</title><rect x="10.0" y="1765" width="1.7" height="15.0" fill="rgb(239,221,0)" rx="2" ry="2" />
<text  x="13.00" y="1775.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="663.5" y="1493" width="1.7" height="15.0" fill="rgb(251,88,16)" rx="2" ry="2" />
<text  x="666.46" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="128.3" y="1301" width="1.8" height="15.0" fill="rgb(238,229,41)" rx="2" ry="2" />
<text  x="131.34" y="1311.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="40.9" y="69" width="1.7" height="15.0" fill="rgb(240,84,38)" rx="2" ry="2" />
<text  x="43.87" y="79.5" ></text>
</g>
<g >
<title>do_cql_test (7 samples, 1.02%)</title><rect x="78.6" y="565" width="12.0" height="15.0" fill="rgb(213,180,8)" rx="2" ry="2" />
<text  x="81.60" y="575.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3 samples, 0.44%)</title><rect x="51.2" y="485" width="5.1" height="15.0" fill="rgb(254,89,31)" rx="2" ry="2" />
<text  x="54.16" y="495.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="51.2" y="261" width="1.7" height="15.0" fill="rgb(240,136,14)" rx="2" ry="2" />
<text  x="54.16" y="271.5" ></text>
</g>
<g >
<title>create_partitions (2 samples, 0.29%)</title><rect x="94.0" y="661" width="3.5" height="15.0" fill="rgb(230,156,45)" rx="2" ry="2" />
<text  x="97.04" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.15%)</title><rect x="855.6" y="1445" width="1.7" height="15.0" fill="rgb(227,26,38)" rx="2" ry="2" />
<text  x="858.55" y="1455.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (4 samples, 0.58%)</title><rect x="678.9" y="1637" width="6.9" height="15.0" fill="rgb(243,229,10)" rx="2" ry="2" />
<text  x="681.90" y="1647.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="51.2" y="277" width="1.7" height="15.0" fill="rgb(253,7,40)" rx="2" ry="2" />
<text  x="54.16" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (4 samples, 0.58%)</title><rect x="35.7" y="293" width="6.9" height="15.0" fill="rgb(224,146,23)" rx="2" ry="2" />
<text  x="38.73" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (1 samples, 0.15%)</title><rect x="744.1" y="1621" width="1.7" height="15.0" fill="rgb(228,37,42)" rx="2" ry="2" />
<text  x="747.07" y="1631.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.15%)</title><rect x="752.6" y="1605" width="1.8" height="15.0" fill="rgb(234,220,33)" rx="2" ry="2" />
<text  x="755.65" y="1615.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.15%)</title><rect x="919.0" y="1541" width="1.7" height="15.0" fill="rgb(231,19,20)" rx="2" ry="2" />
<text  x="922.01" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="123.2" y="1397" width="1.7" height="15.0" fill="rgb(242,128,39)" rx="2" ry="2" />
<text  x="126.20" y="1407.5" ></text>
</g>
<g >
<title>seastar::parse_cpuset (1 samples, 0.15%)</title><rect x="1085.4" y="1653" width="1.7" height="15.0" fill="rgb(240,7,8)" rx="2" ry="2" />
<text  x="1088.38" y="1663.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.15%)</title><rect x="826.4" y="1541" width="1.7" height="15.0" fill="rgb(206,85,22)" rx="2" ry="2" />
<text  x="829.40" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.15%)</title><rect x="119.8" y="1397" width="1.7" height="15.0" fill="rgb(240,29,6)" rx="2" ry="2" />
<text  x="122.77" y="1407.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.44%)</title><rect x="1023.6" y="1525" width="5.2" height="15.0" fill="rgb(224,102,0)" rx="2" ry="2" />
<text  x="1026.63" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="49.4" y="69" width="1.8" height="15.0" fill="rgb(237,32,0)" rx="2" ry="2" />
<text  x="52.45" y="79.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (1 samples, 0.15%)</title><rect x="109.5" y="1557" width="1.7" height="15.0" fill="rgb(210,207,51)" rx="2" ry="2" />
<text  x="112.48" y="1567.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="49.4" y="245" width="1.8" height="15.0" fill="rgb(250,119,19)" rx="2" ry="2" />
<text  x="52.45" y="255.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (2 samples, 0.29%)</title><rect x="145.5" y="1717" width="3.4" height="15.0" fill="rgb(222,137,14)" rx="2" ry="2" />
<text  x="148.49" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="119.8" y="1173" width="1.7" height="15.0" fill="rgb(221,142,3)" rx="2" ry="2" />
<text  x="122.77" y="1183.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.44%)</title><rect x="124.9" y="1445" width="5.2" height="15.0" fill="rgb(208,165,21)" rx="2" ry="2" />
<text  x="127.91" y="1455.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="1088.8" y="1765" width="1.7" height="15.0" fill="rgb(238,136,51)" rx="2" ry="2" />
<text  x="1091.81" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (1 samples, 0.15%)</title><rect x="1085.4" y="1637" width="1.7" height="15.0" fill="rgb(246,67,33)" rx="2" ry="2" />
<text  x="1088.38" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1397" width="87.5" height="15.0" fill="rgb(233,97,16)" rx="2" ry="2" />
<text  x="14.72" y="1407.5" >[unknown]</text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.29%)</title><rect x="15.1" y="165" width="3.5" height="15.0" fill="rgb(235,219,27)" rx="2" ry="2" />
<text  x="18.15" y="175.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="66.6" y="309" width="1.7" height="15.0" fill="rgb(205,212,48)" rx="2" ry="2" />
<text  x="69.60" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="229.5" y="1573" width="1.7" height="15.0" fill="rgb(251,15,5)" rx="2" ry="2" />
<text  x="232.53" y="1583.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::operation::raw_update&gt;, true&gt;::_M_head (1 samples, 0.15%)</title><rect x="75.2" y="149" width="1.7" height="15.0" fill="rgb(205,169,37)" rx="2" ry="2" />
<text  x="78.17" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="47.7" y="149" width="1.7" height="15.0" fill="rgb(245,112,29)" rx="2" ry="2" />
<text  x="50.73" y="159.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (1 samples, 0.15%)</title><rect x="1003.1" y="1477" width="1.7" height="15.0" fill="rgb(225,183,49)" rx="2" ry="2" />
<text  x="1006.05" y="1487.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (18 samples, 2.62%)</title><rect x="11.7" y="357" width="30.9" height="15.0" fill="rgb(223,26,39)" rx="2" ry="2" />
<text  x="14.72" y="367.5" >cq..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="123.2" y="1429" width="1.7" height="15.0" fill="rgb(231,203,9)" rx="2" ry="2" />
<text  x="126.20" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1109" width="87.5" height="15.0" fill="rgb(211,167,40)" rx="2" ry="2" />
<text  x="14.72" y="1119.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.15%)</title><rect x="95.8" y="469" width="1.7" height="15.0" fill="rgb(223,199,19)" rx="2" ry="2" />
<text  x="98.76" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (2 samples, 0.29%)</title><rect x="94.0" y="565" width="3.5" height="15.0" fill="rgb(215,172,47)" rx="2" ry="2" />
<text  x="97.04" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="97.5" y="565" width="1.7" height="15.0" fill="rgb(233,64,42)" rx="2" ry="2" />
<text  x="100.47" y="575.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.15%)</title><rect x="71.7" y="341" width="1.8" height="15.0" fill="rgb(224,119,19)" rx="2" ry="2" />
<text  x="74.74" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (2 samples, 0.29%)</title><rect x="22.0" y="133" width="3.4" height="15.0" fill="rgb(226,42,41)" rx="2" ry="2" />
<text  x="25.01" y="143.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.15%)</title><rect x="711.5" y="1621" width="1.7" height="15.0" fill="rgb(215,196,6)" rx="2" ry="2" />
<text  x="714.48" y="1631.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.15%)</title><rect x="97.5" y="757" width="1.7" height="15.0" fill="rgb(251,203,50)" rx="2" ry="2" />
<text  x="100.47" y="767.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.15%)</title><rect x="92.3" y="389" width="1.7" height="15.0" fill="rgb(239,85,8)" rx="2" ry="2" />
<text  x="95.33" y="399.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="119.8" y="1381" width="1.7" height="15.0" fill="rgb(232,210,7)" rx="2" ry="2" />
<text  x="122.77" y="1391.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="66.6" y="197" width="1.7" height="15.0" fill="rgb(228,190,25)" rx="2" ry="2" />
<text  x="69.60" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (2 samples, 0.29%)</title><rect x="356.5" y="1365" width="3.4" height="15.0" fill="rgb(206,174,48)" rx="2" ry="2" />
<text  x="359.45" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.29%)</title><rect x="131.8" y="1381" width="3.4" height="15.0" fill="rgb(222,5,15)" rx="2" ry="2" />
<text  x="134.77" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.15%)</title><rect x="119.8" y="1365" width="1.7" height="15.0" fill="rgb(231,176,36)" rx="2" ry="2" />
<text  x="122.77" y="1375.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.44%)</title><rect x="440.5" y="1509" width="5.1" height="15.0" fill="rgb(212,28,42)" rx="2" ry="2" />
<text  x="443.49" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.15%)</title><rect x="119.8" y="1333" width="1.7" height="15.0" fill="rgb(223,164,18)" rx="2" ry="2" />
<text  x="122.77" y="1343.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (2 samples, 0.29%)</title><rect x="164.4" y="1589" width="3.4" height="15.0" fill="rgb(253,1,23)" rx="2" ry="2" />
<text  x="167.36" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="66.6" y="245" width="1.7" height="15.0" fill="rgb(232,149,1)" rx="2" ry="2" />
<text  x="69.60" y="255.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (2 samples, 0.29%)</title><rect x="94.0" y="613" width="3.5" height="15.0" fill="rgb(236,199,21)" rx="2" ry="2" />
<text  x="97.04" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="51.2" y="213" width="1.7" height="15.0" fill="rgb(209,160,47)" rx="2" ry="2" />
<text  x="54.16" y="223.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 7.27%)</title><rect x="11.7" y="853" width="85.8" height="15.0" fill="rgb(215,119,6)" rx="2" ry="2" />
<text  x="14.72" y="863.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.15%)</title><rect x="116.3" y="1397" width="1.8" height="15.0" fill="rgb(230,105,23)" rx="2" ry="2" />
<text  x="119.34" y="1407.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="71.7" y="197" width="1.8" height="15.0" fill="rgb(237,169,3)" rx="2" ry="2" />
<text  x="74.74" y="207.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (100 samples, 14.53%)</title><rect x="865.8" y="1589" width="171.6" height="15.0" fill="rgb(239,13,9)" rx="2" ry="2" />
<text  x="868.84" y="1599.5" >seastar::noncopyable_f..</text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="929.3" y="1509" width="1.7" height="15.0" fill="rgb(242,195,16)" rx="2" ry="2" />
<text  x="932.30" y="1519.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (19 samples, 2.76%)</title><rect x="327.3" y="1413" width="32.6" height="15.0" fill="rgb(219,89,54)" rx="2" ry="2" />
<text  x="330.30" y="1423.5" >co..</text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (97 samples, 14.10%)</title><rect x="869.3" y="1573" width="166.3" height="15.0" fill="rgb(248,115,15)" rx="2" ry="2" />
<text  x="872.27" y="1583.5" >cql3::statements::sel..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.29%)</title><rect x="22.0" y="117" width="3.4" height="15.0" fill="rgb(231,15,3)" rx="2" ry="2" />
<text  x="25.01" y="127.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="51.2" y="181" width="1.7" height="15.0" fill="rgb(205,49,47)" rx="2" ry="2" />
<text  x="54.16" y="191.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="63.2" y="165" width="1.7" height="15.0" fill="rgb(225,156,33)" rx="2" ry="2" />
<text  x="66.17" y="175.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="58.0" y="149" width="1.7" height="15.0" fill="rgb(250,70,8)" rx="2" ry="2" />
<text  x="61.02" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (1 samples, 0.15%)</title><rect x="848.7" y="1637" width="1.7" height="15.0" fill="rgb(251,173,34)" rx="2" ry="2" />
<text  x="851.69" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="97.5" y="533" width="1.7" height="15.0" fill="rgb(245,131,27)" rx="2" ry="2" />
<text  x="100.47" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="133.5" y="1173" width="1.7" height="15.0" fill="rgb(210,51,23)" rx="2" ry="2" />
<text  x="136.49" y="1183.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.15%)</title><rect x="987.6" y="1397" width="1.7" height="15.0" fill="rgb(225,135,39)" rx="2" ry="2" />
<text  x="990.62" y="1407.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (2 samples, 0.29%)</title><rect x="615.4" y="1493" width="3.5" height="15.0" fill="rgb(228,29,51)" rx="2" ry="2" />
<text  x="618.44" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.15%)</title><rect x="66.6" y="341" width="1.7" height="15.0" fill="rgb(250,190,3)" rx="2" ry="2" />
<text  x="69.60" y="351.5" ></text>
</g>
<g >
<title>table::set_hit_rate (2 samples, 0.29%)</title><rect x="754.4" y="1605" width="3.4" height="15.0" fill="rgb(224,214,19)" rx="2" ry="2" />
<text  x="757.36" y="1615.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (1 samples, 0.15%)</title><rect x="766.4" y="1605" width="1.7" height="15.0" fill="rgb(251,140,3)" rx="2" ry="2" />
<text  x="769.37" y="1615.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::destroy&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="73.5" y="325" width="1.7" height="15.0" fill="rgb(229,118,18)" rx="2" ry="2" />
<text  x="76.46" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.29%)</title><rect x="195.2" y="1589" width="3.5" height="15.0" fill="rgb(216,81,11)" rx="2" ry="2" />
<text  x="198.23" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1237" width="87.5" height="15.0" fill="rgb(218,209,33)" rx="2" ry="2" />
<text  x="14.72" y="1247.5" >[unknown]</text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="171.2" y="1637" width="3.5" height="15.0" fill="rgb(212,28,52)" rx="2" ry="2" />
<text  x="174.22" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="92.3" y="469" width="1.7" height="15.0" fill="rgb(244,211,9)" rx="2" ry="2" />
<text  x="95.33" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true, false, false&gt;::operator= (1 samples, 0.15%)</title><rect x="37.4" y="197" width="1.8" height="15.0" fill="rgb(253,45,2)" rx="2" ry="2" />
<text  x="40.44" y="207.5" ></text>
</g>
<g >
<title>[unknown] (46 samples, 6.69%)</title><rect x="11.7" y="677" width="78.9" height="15.0" fill="rgb(222,181,35)" rx="2" ry="2" />
<text  x="14.72" y="687.5" >[unknown]</text>
</g>
<g >
<title>mutation_partition::lower_bound (3 samples, 0.44%)</title><rect x="368.5" y="1461" width="5.1" height="15.0" fill="rgb(231,74,28)" rx="2" ry="2" />
<text  x="371.46" y="1471.5" ></text>
</g>
<g >
<title>seastar::app_template::run (548 samples, 79.65%)</title><rect x="148.9" y="1717" width="939.9" height="15.0" fill="rgb(252,213,47)" rx="2" ry="2" />
<text  x="151.92" y="1727.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_destroy_nodes (1 samples, 0.15%)</title><rect x="78.6" y="389" width="1.7" height="15.0" fill="rgb(228,168,14)" rx="2" ry="2" />
<text  x="81.60" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (53 samples, 7.70%)</title><rect x="927.6" y="1525" width="90.9" height="15.0" fill="rgb(215,90,8)" rx="2" ry="2" />
<text  x="930.59" y="1535.5" >service::s..</text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (29 samples, 4.22%)</title><rect x="785.2" y="1573" width="49.8" height="15.0" fill="rgb(251,29,30)" rx="2" ry="2" />
<text  x="788.23" y="1583.5" >cql3:..</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.29%)</title><rect x="52.9" y="197" width="3.4" height="15.0" fill="rgb(230,53,16)" rx="2" ry="2" />
<text  x="55.88" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="636.0" y="1509" width="1.7" height="15.0" fill="rgb(233,81,16)" rx="2" ry="2" />
<text  x="639.02" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.15%)</title><rect x="121.5" y="1365" width="1.7" height="15.0" fill="rgb(219,150,30)" rx="2" ry="2" />
<text  x="124.48" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="764.7" y="1589" width="1.7" height="15.0" fill="rgb(238,121,19)" rx="2" ry="2" />
<text  x="767.65" y="1599.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="119.8" y="1157" width="1.7" height="15.0" fill="rgb(218,114,10)" rx="2" ry="2" />
<text  x="122.77" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (54 samples, 7.85%)</title><rect x="11.7" y="1717" width="92.6" height="15.0" fill="rgb(213,43,13)" rx="2" ry="2" />
<text  x="14.72" y="1727.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (3 samples, 0.44%)</title><rect x="51.2" y="325" width="5.1" height="15.0" fill="rgb(220,44,19)" rx="2" ry="2" />
<text  x="54.16" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="40.9" y="85" width="1.7" height="15.0" fill="rgb(229,130,30)" rx="2" ry="2" />
<text  x="43.87" y="95.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="66.6" y="149" width="1.7" height="15.0" fill="rgb(236,163,48)" rx="2" ry="2" />
<text  x="69.60" y="159.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="58.0" y="133" width="1.7" height="15.0" fill="rgb(205,16,53)" rx="2" ry="2" />
<text  x="61.02" y="143.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (1 samples, 0.15%)</title><rect x="76.9" y="373" width="1.7" height="15.0" fill="rgb(238,40,18)" rx="2" ry="2" />
<text  x="79.89" y="383.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (104 samples, 15.12%)</title><rect x="859.0" y="1621" width="178.4" height="15.0" fill="rgb(251,203,40)" rx="2" ry="2" />
<text  x="861.98" y="1631.5" >seastar::concrete_execu..</text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (3 samples, 0.44%)</title><rect x="1037.4" y="1621" width="5.1" height="15.0" fill="rgb(245,102,16)" rx="2" ry="2" />
<text  x="1040.35" y="1631.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_Head_base (1 samples, 0.15%)</title><rect x="118.1" y="1333" width="1.7" height="15.0" fill="rgb(250,212,23)" rx="2" ry="2" />
<text  x="121.05" y="1343.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.15%)</title><rect x="66.6" y="437" width="1.7" height="15.0" fill="rgb(205,216,24)" rx="2" ry="2" />
<text  x="69.60" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="68.3" y="245" width="1.7" height="15.0" fill="rgb(249,148,29)" rx="2" ry="2" />
<text  x="71.31" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="166.1" y="1573" width="1.7" height="15.0" fill="rgb(219,154,19)" rx="2" ry="2" />
<text  x="169.08" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::setTokenStream (1 samples, 0.15%)</title><rect x="90.6" y="517" width="1.7" height="15.0" fill="rgb(238,71,40)" rx="2" ry="2" />
<text  x="93.61" y="527.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="116.3" y="1381" width="1.8" height="15.0" fill="rgb(238,150,15)" rx="2" ry="2" />
<text  x="119.34" y="1391.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (1 samples, 0.15%)</title><rect x="757.8" y="1637" width="1.7" height="15.0" fill="rgb(212,120,8)" rx="2" ry="2" />
<text  x="760.79" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (4 samples, 0.58%)</title><rect x="58.0" y="325" width="6.9" height="15.0" fill="rgb(207,139,25)" rx="2" ry="2" />
<text  x="61.02" y="335.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="47.7" y="69" width="1.7" height="15.0" fill="rgb(228,32,17)" rx="2" ry="2" />
<text  x="50.73" y="79.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (53 samples, 7.70%)</title><rect x="927.6" y="1541" width="90.9" height="15.0" fill="rgb(224,116,9)" rx="2" ry="2" />
<text  x="930.59" y="1551.5" >service::s..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;bool&gt;, seastar::reactor::file_accessible (1 samples, 0.15%)</title><rect x="148.9" y="1653" width="1.7" height="15.0" fill="rgb(213,42,27)" rx="2" ry="2" />
<text  x="151.92" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 7.27%)</title><rect x="11.7" y="773" width="85.8" height="15.0" fill="rgb(236,47,53)" rx="2" ry="2" />
<text  x="14.72" y="783.5" >[unknown]</text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (14 samples, 2.03%)</title><rect x="605.1" y="1525" width="24.1" height="15.0" fill="rgb(254,224,3)" rx="2" ry="2" />
<text  x="608.15" y="1535.5" >m..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (12 samples, 1.74%)</title><rect x="15.1" y="293" width="20.6" height="15.0" fill="rgb(234,31,45)" rx="2" ry="2" />
<text  x="18.15" y="303.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (4 samples, 0.58%)</title><rect x="778.4" y="1573" width="6.8" height="15.0" fill="rgb(230,150,4)" rx="2" ry="2" />
<text  x="781.37" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::deque (1 samples, 0.15%)</title><rect x="11.7" y="229" width="1.7" height="15.0" fill="rgb(227,189,17)" rx="2" ry="2" />
<text  x="14.72" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="135.2" y="1333" width="1.7" height="15.0" fill="rgb(239,128,43)" rx="2" ry="2" />
<text  x="138.20" y="1343.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 1.45%)</title><rect x="968.8" y="1413" width="17.1" height="15.0" fill="rgb(233,168,40)" rx="2" ry="2" />
<text  x="971.75" y="1423.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (1 samples, 0.15%)</title><rect x="92.3" y="437" width="1.7" height="15.0" fill="rgb(222,124,40)" rx="2" ry="2" />
<text  x="95.33" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.58%)</title><rect x="71.7" y="581" width="6.9" height="15.0" fill="rgb(223,32,19)" rx="2" ry="2" />
<text  x="74.74" y="591.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="71.7" y="181" width="1.8" height="15.0" fill="rgb(221,228,53)" rx="2" ry="2" />
<text  x="74.74" y="191.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.15%)</title><rect x="1049.4" y="1637" width="1.7" height="15.0" fill="rgb(231,221,40)" rx="2" ry="2" />
<text  x="1052.36" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="66.6" y="229" width="1.7" height="15.0" fill="rgb(221,108,9)" rx="2" ry="2" />
<text  x="69.60" y="239.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.15%)</title><rect x="104.3" y="1733" width="1.7" height="15.0" fill="rgb(246,30,23)" rx="2" ry="2" />
<text  x="107.33" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="63.2" y="245" width="1.7" height="15.0" fill="rgb(234,153,54)" rx="2" ry="2" />
<text  x="66.17" y="255.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="47.7" y="245" width="1.7" height="15.0" fill="rgb(222,200,29)" rx="2" ry="2" />
<text  x="50.73" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.29%)</title><rect x="94.0" y="517" width="3.5" height="15.0" fill="rgb(208,58,16)" rx="2" ry="2" />
<text  x="97.04" y="527.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.15%)</title><rect x="735.5" y="1541" width="1.7" height="15.0" fill="rgb(235,190,29)" rx="2" ry="2" />
<text  x="738.49" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::execution_stage_manager::flush (1 samples, 0.15%)</title><rect x="1083.7" y="1637" width="1.7" height="15.0" fill="rgb(218,117,6)" rx="2" ry="2" />
<text  x="1086.66" y="1647.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.15%)</title><rect x="66.6" y="485" width="1.7" height="15.0" fill="rgb(239,133,48)" rx="2" ry="2" />
<text  x="69.60" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.15%)</title><rect x="118.1" y="1349" width="1.7" height="15.0" fill="rgb(250,82,10)" rx="2" ry="2" />
<text  x="121.05" y="1359.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.29%)</title><rect x="754.4" y="1589" width="3.4" height="15.0" fill="rgb(230,60,8)" rx="2" ry="2" />
<text  x="757.36" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="124.9" y="1381" width="1.7" height="15.0" fill="rgb(209,138,11)" rx="2" ry="2" />
<text  x="127.91" y="1391.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (48 samples, 6.98%)</title><rect x="279.3" y="1461" width="82.3" height="15.0" fill="rgb(252,202,50)" rx="2" ry="2" />
<text  x="282.27" y="1471.5" >partition..</text>
</g>
<g >
<title>single_node_cql_env::execute_cql (3 samples, 0.44%)</title><rect x="51.2" y="437" width="5.1" height="15.0" fill="rgb(247,189,15)" rx="2" ry="2" />
<text  x="54.16" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (10 samples, 1.45%)</title><rect x="18.6" y="213" width="17.1" height="15.0" fill="rgb(253,154,33)" rx="2" ry="2" />
<text  x="21.58" y="223.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (12 samples, 1.74%)</title><rect x="15.1" y="261" width="20.6" height="15.0" fill="rgb(227,148,41)" rx="2" ry="2" />
<text  x="18.15" y="271.5" ></text>
</g>
<g >
<title>[unknown] (50 samples, 7.27%)</title><rect x="11.7" y="789" width="85.8" height="15.0" fill="rgb(207,46,5)" rx="2" ry="2" />
<text  x="14.72" y="799.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="51.2" y="245" width="1.7" height="15.0" fill="rgb(212,88,27)" rx="2" ry="2" />
<text  x="54.16" y="255.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.15%)</title><rect x="73.5" y="341" width="1.7" height="15.0" fill="rgb(211,2,7)" rx="2" ry="2" />
<text  x="76.46" y="351.5" ></text>
</g>
<g >
<title>cql3::cf_name::operator= (1 samples, 0.15%)</title><rect x="37.4" y="277" width="1.8" height="15.0" fill="rgb(206,63,28)" rx="2" ry="2" />
<text  x="40.44" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (2 samples, 0.29%)</title><rect x="52.9" y="261" width="3.4" height="15.0" fill="rgb(235,140,28)" rx="2" ry="2" />
<text  x="55.88" y="271.5" ></text>
</g>
<g >
<title>__libc_start_main (548 samples, 79.65%)</title><rect x="148.9" y="1765" width="939.9" height="15.0" fill="rgb(215,48,31)" rx="2" ry="2" />
<text  x="151.92" y="1775.5" >__libc_start_main</text>
</g>
<g >
<title>cql3::query_processor::get_statement (4 samples, 0.58%)</title><rect x="71.7" y="485" width="6.9" height="15.0" fill="rgb(238,10,34)" rx="2" ry="2" />
<text  x="74.74" y="495.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1045" width="87.5" height="15.0" fill="rgb(215,192,39)" rx="2" ry="2" />
<text  x="14.72" y="1055.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.15%)</title><rect x="58.0" y="261" width="1.7" height="15.0" fill="rgb(235,145,22)" rx="2" ry="2" />
<text  x="61.02" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="97.5" y="853" width="1.7" height="15.0" fill="rgb(217,202,50)" rx="2" ry="2" />
<text  x="100.47" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.15%)</title><rect x="63.2" y="213" width="1.7" height="15.0" fill="rgb(219,113,38)" rx="2" ry="2" />
<text  x="66.17" y="223.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (10 samples, 1.45%)</title><rect x="18.6" y="229" width="17.1" height="15.0" fill="rgb(211,141,4)" rx="2" ry="2" />
<text  x="21.58" y="239.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="133.5" y="1077" width="1.7" height="15.0" fill="rgb(217,149,2)" rx="2" ry="2" />
<text  x="136.49" y="1087.5" ></text>
</g>
<g >
<title>create_partitions (3 samples, 0.44%)</title><rect x="51.2" y="453" width="5.1" height="15.0" fill="rgb(206,54,5)" rx="2" ry="2" />
<text  x="54.16" y="463.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.15%)</title><rect x="735.5" y="1493" width="1.7" height="15.0" fill="rgb(254,86,39)" rx="2" ry="2" />
<text  x="738.49" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.15%)</title><rect x="116.3" y="1333" width="1.8" height="15.0" fill="rgb(218,116,35)" rx="2" ry="2" />
<text  x="119.34" y="1343.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.15%)</title><rect x="169.5" y="1637" width="1.7" height="15.0" fill="rgb(238,5,31)" rx="2" ry="2" />
<text  x="172.51" y="1647.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (4 samples, 0.58%)</title><rect x="852.1" y="1557" width="6.9" height="15.0" fill="rgb(228,116,20)" rx="2" ry="2" />
<text  x="855.12" y="1567.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (1 samples, 0.15%)</title><rect x="1044.2" y="1557" width="1.7" height="15.0" fill="rgb(238,129,12)" rx="2" ry="2" />
<text  x="1047.22" y="1567.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.15%)</title><rect x="70.0" y="517" width="1.7" height="15.0" fill="rgb(225,116,0)" rx="2" ry="2" />
<text  x="73.03" y="527.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (3 samples, 0.44%)</title><rect x="51.2" y="501" width="5.1" height="15.0" fill="rgb(210,22,2)" rx="2" ry="2" />
<text  x="54.16" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="823.0" y="1493" width="1.7" height="15.0" fill="rgb(206,190,5)" rx="2" ry="2" />
<text  x="825.97" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.15%)</title><rect x="63.2" y="229" width="1.7" height="15.0" fill="rgb(235,2,40)" rx="2" ry="2" />
<text  x="66.17" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="929.3" y="1493" width="1.7" height="15.0" fill="rgb(233,59,25)" rx="2" ry="2" />
<text  x="932.30" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (1 samples, 0.15%)</title><rect x="78.6" y="469" width="1.7" height="15.0" fill="rgb(226,178,4)" rx="2" ry="2" />
<text  x="81.60" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="123.2" y="1413" width="1.7" height="15.0" fill="rgb(237,54,2)" rx="2" ry="2" />
<text  x="126.20" y="1423.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (3 samples, 0.44%)</title><rect x="46.0" y="293" width="5.2" height="15.0" fill="rgb(221,54,7)" rx="2" ry="2" />
<text  x="49.02" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.15%)</title><rect x="735.5" y="1637" width="1.7" height="15.0" fill="rgb(235,70,42)" rx="2" ry="2" />
<text  x="738.49" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="960.2" y="1429" width="1.7" height="15.0" fill="rgb(254,15,27)" rx="2" ry="2" />
<text  x="963.17" y="1439.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.15%)</title><rect x="136.9" y="1397" width="1.7" height="15.0" fill="rgb(233,198,48)" rx="2" ry="2" />
<text  x="139.92" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="44.3" y="373" width="1.7" height="15.0" fill="rgb(233,205,38)" rx="2" ry="2" />
<text  x="47.30" y="383.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.41%)</title><rect x="11.7" y="1157" width="87.5" height="15.0" fill="rgb(245,95,1)" rx="2" ry="2" />
<text  x="14.72" y="1167.5" >[unknown]</text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.15%)</title><rect x="310.1" y="1413" width="1.8" height="15.0" fill="rgb(241,203,2)" rx="2" ry="2" />
<text  x="313.15" y="1423.5" ></text>
</g>
<g >
<title>table::make_reader (73 samples, 10.61%)</title><rect x="543.4" y="1557" width="125.2" height="15.0" fill="rgb(226,185,13)" rx="2" ry="2" />
<text  x="546.40" y="1567.5" >table::make_rea..</text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (7 samples, 1.02%)</title><rect x="157.5" y="1637" width="12.0" height="15.0" fill="rgb(254,95,54)" rx="2" ry="2" />
<text  x="160.50" y="1647.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.15%)</title><rect x="66.6" y="565" width="1.7" height="15.0" fill="rgb(222,35,18)" rx="2" ry="2" />
<text  x="69.60" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.15%)</title><rect x="46.0" y="181" width="1.7" height="15.0" fill="rgb(229,176,12)" rx="2" ry="2" />
<text  x="49.02" y="191.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (1 samples, 0.15%)</title><rect x="1073.4" y="1621" width="1.7" height="15.0" fill="rgb(247,181,8)" rx="2" ry="2" />
<text  x="1076.37" y="1631.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.15%)</title><rect x="363.3" y="1461" width="1.7" height="15.0" fill="rgb(249,2,26)" rx="2" ry="2" />
<text  x="366.31" y="1471.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (1 samples, 0.15%)</title><rect x="1032.2" y="1541" width="1.7" height="15.0" fill="rgb(218,51,28)" rx="2" ry="2" />
<text  x="1035.21" y="1551.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="58.0" y="117" width="1.7" height="15.0" fill="rgb(236,46,11)" rx="2" ry="2" />
<text  x="61.02" y="127.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.15%)</title><rect x="39.2" y="261" width="1.7" height="15.0" fill="rgb(236,181,17)" rx="2" ry="2" />
<text  x="42.16" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (1 samples, 0.15%)</title><rect x="912.2" y="1525" width="1.7" height="15.0" fill="rgb(233,3,27)" rx="2" ry="2" />
<text  x="915.15" y="1535.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="61.5" y="245" width="1.7" height="15.0" fill="rgb(215,211,32)" rx="2" ry="2" />
<text  x="64.45" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.15%)</title><rect x="119.8" y="1237" width="1.7" height="15.0" fill="rgb(206,94,49)" rx="2" ry="2" />
<text  x="122.77" y="1247.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.15%)</title><rect x="274.1" y="1461" width="1.7" height="15.0" fill="rgb(253,72,30)" rx="2" ry="2" />
<text  x="277.13" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.15%)</title><rect x="121.5" y="1349" width="1.7" height="15.0" fill="rgb(220,58,42)" rx="2" ry="2" />
<text  x="124.48" y="1359.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (3 samples, 0.44%)</title><rect x="697.8" y="1605" width="5.1" height="15.0" fill="rgb(218,114,34)" rx="2" ry="2" />
<text  x="700.76" y="1615.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (4 samples, 0.58%)</title><rect x="71.7" y="501" width="6.9" height="15.0" fill="rgb(219,210,27)" rx="2" ry="2" />
<text  x="74.74" y="511.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.29%)</title><rect x="90.6" y="661" width="3.4" height="15.0" fill="rgb(223,171,35)" rx="2" ry="2" />
<text  x="93.61" y="671.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (7 samples, 1.02%)</title><rect x="1004.8" y="1461" width="12.0" height="15.0" fill="rgb(232,65,41)" rx="2" ry="2" />
<text  x="1007.77" y="1471.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.15%)</title><rect x="68.3" y="533" width="1.7" height="15.0" fill="rgb(247,147,43)" rx="2" ry="2" />
<text  x="71.31" y="543.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.15%)</title><rect x="63.2" y="277" width="1.7" height="15.0" fill="rgb(227,165,8)" rx="2" ry="2" />
<text  x="66.17" y="287.5" ></text>
</g>
</g>
</svg>
