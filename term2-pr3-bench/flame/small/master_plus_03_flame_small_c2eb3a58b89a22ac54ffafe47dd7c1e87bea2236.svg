<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="774.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="757" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="757" > </text>
<g id="frames">
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="13.5" y="533" width="1.7" height="15.0" fill="rgb(236,43,34)" rx="2" ry="2" />
<text  x="16.48" y="543.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (1 samples, 0.15%)</title><rect x="95.2" y="357" width="1.7" height="15.0" fill="rgb(212,109,14)" rx="2" ry="2" />
<text  x="98.15" y="367.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.15%)</title><rect x="1186.5" y="549" width="1.8" height="15.0" fill="rgb(205,80,3)" rx="2" ry="2" />
<text  x="1189.52" y="559.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (72 samples, 10.60%)</title><rect x="229.0" y="501" width="125.1" height="15.0" fill="rgb(217,3,33)" rx="2" ry="2" />
<text  x="231.97" y="511.5" >flat_mutation_r..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.29%)</title><rect x="102.1" y="309" width="3.5" height="15.0" fill="rgb(221,51,34)" rx="2" ry="2" />
<text  x="105.11" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="58.7" y="293" width="1.7" height="15.0" fill="rgb(219,182,49)" rx="2" ry="2" />
<text  x="61.66" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="487.9" y="453" width="1.7" height="15.0" fill="rgb(247,169,9)" rx="2" ry="2" />
<text  x="490.91" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.15%)</title><rect x="96.9" y="341" width="1.7" height="15.0" fill="rgb(253,219,27)" rx="2" ry="2" />
<text  x="99.89" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (46 samples, 6.77%)</title><rect x="263.7" y="421" width="80.0" height="15.0" fill="rgb(210,116,0)" rx="2" ry="2" />
<text  x="266.73" y="431.5" >partition..</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="91.7" y="229" width="1.7" height="15.0" fill="rgb(214,173,25)" rx="2" ry="2" />
<text  x="94.68" y="239.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (1 samples, 0.15%)</title><rect x="30.9" y="453" width="1.7" height="15.0" fill="rgb(247,51,38)" rx="2" ry="2" />
<text  x="33.85" y="463.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.44%)</title><rect x="216.8" y="517" width="5.2" height="15.0" fill="rgb(233,124,25)" rx="2" ry="2" />
<text  x="219.80" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.29%)</title><rect x="168.1" y="501" width="3.5" height="15.0" fill="rgb(220,169,24)" rx="2" ry="2" />
<text  x="171.14" y="511.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (1 samples, 0.15%)</title><rect x="699.9" y="533" width="1.8" height="15.0" fill="rgb(236,60,0)" rx="2" ry="2" />
<text  x="702.93" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (3 samples, 0.44%)</title><rect x="147.3" y="581" width="5.2" height="15.0" fill="rgb(228,20,49)" rx="2" ry="2" />
<text  x="150.29" y="591.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.15%)</title><rect x="37.8" y="229" width="1.7" height="15.0" fill="rgb(247,138,13)" rx="2" ry="2" />
<text  x="40.81" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.15%)</title><rect x="102.1" y="229" width="1.7" height="15.0" fill="rgb(236,215,13)" rx="2" ry="2" />
<text  x="105.11" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.15%)</title><rect x="105.6" y="389" width="1.7" height="15.0" fill="rgb(221,189,53)" rx="2" ry="2" />
<text  x="108.58" y="399.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.15%)</title><rect x="489.6" y="485" width="1.8" height="15.0" fill="rgb(250,23,18)" rx="2" ry="2" />
<text  x="492.65" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="86.5" y="117" width="1.7" height="15.0" fill="rgb(236,175,44)" rx="2" ry="2" />
<text  x="89.47" y="127.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.15%)</title><rect x="343.7" y="421" width="1.7" height="15.0" fill="rgb(252,228,37)" rx="2" ry="2" />
<text  x="346.67" y="431.5" ></text>
</g>
<g >
<title>perf_simple_que (679 samples, 100.00%)</title><rect x="10.0" y="709" width="1180.0" height="15.0" fill="rgb(213,223,21)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >perf_simple_que</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="69.1" y="181" width="1.7" height="15.0" fill="rgb(237,30,18)" rx="2" ry="2" />
<text  x="72.09" y="191.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (4 samples, 0.59%)</title><rect x="819.8" y="405" width="7.0" height="15.0" fill="rgb(208,123,35)" rx="2" ry="2" />
<text  x="822.84" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="79.5" y="341" width="3.5" height="15.0" fill="rgb(236,0,1)" rx="2" ry="2" />
<text  x="82.51" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.15%)</title><rect x="69.1" y="229" width="1.7" height="15.0" fill="rgb(247,219,37)" rx="2" ry="2" />
<text  x="72.09" y="239.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (7 samples, 1.03%)</title><rect x="719.0" y="485" width="12.2" height="15.0" fill="rgb(254,15,23)" rx="2" ry="2" />
<text  x="722.04" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.15%)</title><rect x="950.2" y="309" width="1.7" height="15.0" fill="rgb(234,49,8)" rx="2" ry="2" />
<text  x="953.18" y="319.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (1 samples, 0.15%)</title><rect x="1026.6" y="405" width="1.8" height="15.0" fill="rgb(214,44,24)" rx="2" ry="2" />
<text  x="1029.64" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl (1 samples, 0.15%)</title><rect x="74.3" y="229" width="1.7" height="15.0" fill="rgb(253,15,38)" rx="2" ry="2" />
<text  x="77.30" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.15%)</title><rect x="43.0" y="261" width="1.8" height="15.0" fill="rgb(211,168,47)" rx="2" ry="2" />
<text  x="46.02" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (5 samples, 0.74%)</title><rect x="15.2" y="501" width="8.7" height="15.0" fill="rgb(211,208,3)" rx="2" ry="2" />
<text  x="18.21" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (8 samples, 1.18%)</title><rect x="98.6" y="437" width="13.9" height="15.0" fill="rgb(220,62,42)" rx="2" ry="2" />
<text  x="101.63" y="447.5" ></text>
</g>
<g >
<title>create_partitions (67 samples, 9.87%)</title><rect x="11.7" y="581" width="116.5" height="15.0" fill="rgb(219,205,3)" rx="2" ry="2" />
<text  x="14.74" y="591.5" >create_partiti..</text>
</g>
<g >
<title>std::get&lt;1ul, cql3::statements::raw::update_statement*, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.15%)</title><rect x="121.2" y="389" width="1.8" height="15.0" fill="rgb(212,213,19)" rx="2" ry="2" />
<text  x="124.22" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="826.8" y="405" width="1.7" height="15.0" fill="rgb(243,154,42)" rx="2" ry="2" />
<text  x="829.79" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="95.2" y="325" width="1.7" height="15.0" fill="rgb(220,209,38)" rx="2" ry="2" />
<text  x="98.15" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (5 samples, 0.74%)</title><rect x="15.2" y="517" width="8.7" height="15.0" fill="rgb(252,224,39)" rx="2" ry="2" />
<text  x="18.21" y="527.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="785.1" y="389" width="1.7" height="15.0" fill="rgb(219,15,40)" rx="2" ry="2" />
<text  x="788.08" y="399.5" ></text>
</g>
<g >
<title>LZ4_compress_fast_extState (1 samples, 0.15%)</title><rect x="10.0" y="677" width="1.7" height="15.0" fill="rgb(225,102,46)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (2 samples, 0.29%)</title><rect x="425.3" y="469" width="3.5" height="15.0" fill="rgb(208,21,2)" rx="2" ry="2" />
<text  x="428.35" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_view_statement, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::~unique_ptr (1 samples, 0.15%)</title><rect x="123.0" y="469" width="1.7" height="15.0" fill="rgb(241,98,11)" rx="2" ry="2" />
<text  x="125.96" y="479.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.15%)</title><rect x="67.3" y="341" width="1.8" height="15.0" fill="rgb(239,184,47)" rx="2" ry="2" />
<text  x="70.35" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (4 samples, 0.59%)</title><rect x="17.0" y="485" width="6.9" height="15.0" fill="rgb(252,66,12)" rx="2" ry="2" />
<text  x="19.95" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="86.5" y="181" width="1.7" height="15.0" fill="rgb(234,140,31)" rx="2" ry="2" />
<text  x="89.47" y="191.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (1 samples, 0.15%)</title><rect x="18.7" y="453" width="1.7" height="15.0" fill="rgb(227,86,19)" rx="2" ry="2" />
<text  x="21.69" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::operator= (1 samples, 0.15%)</title><rect x="121.2" y="421" width="1.8" height="15.0" fill="rgb(247,21,19)" rx="2" ry="2" />
<text  x="124.22" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (3 samples, 0.44%)</title><rect x="36.1" y="357" width="5.2" height="15.0" fill="rgb(227,162,43)" rx="2" ry="2" />
<text  x="39.07" y="367.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (1 samples, 0.15%)</title><rect x="138.6" y="581" width="1.7" height="15.0" fill="rgb(230,108,38)" rx="2" ry="2" />
<text  x="141.60" y="591.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.15%)</title><rect x="110.8" y="421" width="1.7" height="15.0" fill="rgb(245,217,14)" rx="2" ry="2" />
<text  x="113.80" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.15%)</title><rect x="51.7" y="437" width="1.7" height="15.0" fill="rgb(227,223,16)" rx="2" ry="2" />
<text  x="54.71" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.44%)</title><rect x="86.5" y="357" width="5.2" height="15.0" fill="rgb(232,69,35)" rx="2" ry="2" />
<text  x="89.47" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.15%)</title><rect x="86.5" y="197" width="1.7" height="15.0" fill="rgb(216,3,14)" rx="2" ry="2" />
<text  x="89.47" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.15%)</title><rect x="72.6" y="293" width="1.7" height="15.0" fill="rgb(223,54,25)" rx="2" ry="2" />
<text  x="75.56" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.15%)</title><rect x="84.7" y="293" width="1.8" height="15.0" fill="rgb(233,45,36)" rx="2" ry="2" />
<text  x="87.73" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="399.3" y="453" width="1.7" height="15.0" fill="rgb(231,130,28)" rx="2" ry="2" />
<text  x="402.28" y="463.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.29%)</title><rect x="434.0" y="453" width="3.5" height="15.0" fill="rgb(227,179,44)" rx="2" ry="2" />
<text  x="437.04" y="463.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.15%)</title><rect x="804.2" y="485" width="1.7" height="15.0" fill="rgb(237,180,36)" rx="2" ry="2" />
<text  x="807.20" y="495.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.15%)</title><rect x="1031.9" y="277" width="1.7" height="15.0" fill="rgb(246,47,39)" rx="2" ry="2" />
<text  x="1034.86" y="287.5" ></text>
</g>
<g >
<title>main (541 samples, 79.68%)</title><rect x="143.8" y="677" width="940.2" height="15.0" fill="rgb(249,175,35)" rx="2" ry="2" />
<text  x="146.81" y="687.5" >main</text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true&gt;::_M_head (1 samples, 0.15%)</title><rect x="121.2" y="357" width="1.8" height="15.0" fill="rgb(240,180,31)" rx="2" ry="2" />
<text  x="124.22" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.59%)</title><rect x="1024.9" y="533" width="7.0" height="15.0" fill="rgb(207,118,7)" rx="2" ry="2" />
<text  x="1027.90" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.29%)</title><rect x="86.5" y="277" width="3.4" height="15.0" fill="rgb(239,141,43)" rx="2" ry="2" />
<text  x="89.47" y="287.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.15%)</title><rect x="133.4" y="645" width="1.7" height="15.0" fill="rgb(232,43,52)" rx="2" ry="2" />
<text  x="136.39" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="56.9" y="293" width="1.8" height="15.0" fill="rgb(205,165,25)" rx="2" ry="2" />
<text  x="59.92" y="303.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (3 samples, 0.44%)</title><rect x="475.7" y="421" width="5.3" height="15.0" fill="rgb(209,28,8)" rx="2" ry="2" />
<text  x="478.74" y="431.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.15%)</title><rect x="1188.3" y="693" width="1.7" height="15.0" fill="rgb(241,42,54)" rx="2" ry="2" />
<text  x="1191.26" y="703.5" ></text>
</g>
<g >
<title>abstract_type::from_string (1 samples, 0.15%)</title><rect x="15.2" y="453" width="1.8" height="15.0" fill="rgb(216,225,40)" rx="2" ry="2" />
<text  x="18.21" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="347.1" y="453" width="1.8" height="15.0" fill="rgb(238,93,22)" rx="2" ry="2" />
<text  x="350.14" y="463.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="98.6" y="341" width="1.8" height="15.0" fill="rgb(207,7,5)" rx="2" ry="2" />
<text  x="101.63" y="351.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.15%)</title><rect x="946.7" y="277" width="1.7" height="15.0" fill="rgb(244,89,19)" rx="2" ry="2" />
<text  x="949.70" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (80 samples, 11.78%)</title><rect x="859.8" y="469" width="139.0" height="15.0" fill="rgb(249,175,49)" rx="2" ry="2" />
<text  x="862.81" y="479.5" >service::storage_..</text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple (1 samples, 0.15%)</title><rect x="76.0" y="165" width="1.8" height="15.0" fill="rgb(246,227,3)" rx="2" ry="2" />
<text  x="79.04" y="175.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="76.0" y="309" width="1.8" height="15.0" fill="rgb(230,5,25)" rx="2" ry="2" />
<text  x="79.04" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (49 samples, 7.22%)</title><rect x="693.0" y="565" width="85.1" height="15.0" fill="rgb(247,107,23)" rx="2" ry="2" />
<text  x="695.97" y="575.5" >seastar::i..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.15%)</title><rect x="76.0" y="325" width="1.8" height="15.0" fill="rgb(217,62,31)" rx="2" ry="2" />
<text  x="79.04" y="335.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.15%)</title><rect x="126.4" y="565" width="1.8" height="15.0" fill="rgb(253,38,12)" rx="2" ry="2" />
<text  x="129.44" y="575.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (17 samples, 2.50%)</title><rect x="616.5" y="565" width="29.6" height="15.0" fill="rgb(239,165,27)" rx="2" ry="2" />
<text  x="619.51" y="575.5" >se..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::operation::raw_update*, false&gt;::_Head_base&lt;cql3::operation::raw_update*&gt; (1 samples, 0.15%)</title><rect x="74.3" y="213" width="1.7" height="15.0" fill="rgb(242,109,44)" rx="2" ry="2" />
<text  x="77.30" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="103.8" y="229" width="1.8" height="15.0" fill="rgb(246,110,15)" rx="2" ry="2" />
<text  x="106.84" y="239.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.15%)</title><rect x="731.2" y="485" width="1.7" height="15.0" fill="rgb(238,91,26)" rx="2" ry="2" />
<text  x="734.21" y="495.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.59%)</title><rect x="1084.0" y="693" width="6.9" height="15.0" fill="rgb(231,97,54)" rx="2" ry="2" />
<text  x="1086.99" y="703.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.15%)</title><rect x="1031.9" y="261" width="1.7" height="15.0" fill="rgb(212,196,9)" rx="2" ry="2" />
<text  x="1034.86" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.29%)</title><rect x="640.8" y="549" width="3.5" height="15.0" fill="rgb(219,136,22)" rx="2" ry="2" />
<text  x="643.84" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.15%)</title><rect x="69.1" y="261" width="1.7" height="15.0" fill="rgb(221,182,52)" rx="2" ry="2" />
<text  x="72.09" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.15%)</title><rect x="262.0" y="421" width="1.7" height="15.0" fill="rgb(250,141,17)" rx="2" ry="2" />
<text  x="264.99" y="431.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (8 samples, 1.18%)</title><rect x="411.4" y="437" width="13.9" height="15.0" fill="rgb(253,119,14)" rx="2" ry="2" />
<text  x="414.44" y="447.5" ></text>
</g>
<g >
<title>__libc_start_main (541 samples, 79.68%)</title><rect x="143.8" y="693" width="940.2" height="15.0" fill="rgb(215,13,53)" rx="2" ry="2" />
<text  x="146.81" y="703.5" >__libc_start_main</text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="274.2" y="389" width="1.7" height="15.0" fill="rgb(252,112,44)" rx="2" ry="2" />
<text  x="277.15" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (5 samples, 0.74%)</title><rect x="162.9" y="549" width="8.7" height="15.0" fill="rgb(235,187,19)" rx="2" ry="2" />
<text  x="165.93" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="567.8" y="437" width="1.8" height="15.0" fill="rgb(237,160,37)" rx="2" ry="2" />
<text  x="570.85" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_M_ptr (1 samples, 0.15%)</title><rect x="72.6" y="261" width="1.7" height="15.0" fill="rgb(212,66,41)" rx="2" ry="2" />
<text  x="75.56" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (2 samples, 0.29%)</title><rect x="36.1" y="293" width="3.4" height="15.0" fill="rgb(251,173,23)" rx="2" ry="2" />
<text  x="39.07" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (11 samples, 1.62%)</title><rect x="32.6" y="437" width="19.1" height="15.0" fill="rgb(250,207,16)" rx="2" ry="2" />
<text  x="35.59" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (75 samples, 11.05%)</title><rect x="868.5" y="437" width="130.3" height="15.0" fill="rgb(240,198,30)" rx="2" ry="2" />
<text  x="871.50" y="447.5" >service::storage..</text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 1.03%)</title><rect x="924.1" y="309" width="12.2" height="15.0" fill="rgb(206,198,49)" rx="2" ry="2" />
<text  x="927.11" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (9 samples, 1.33%)</title><rect x="998.8" y="485" width="15.7" height="15.0" fill="rgb(245,143,39)" rx="2" ry="2" />
<text  x="1001.84" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="56.9" y="261" width="1.8" height="15.0" fill="rgb(238,207,47)" rx="2" ry="2" />
<text  x="59.92" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::allocate (1 samples, 0.15%)</title><rect x="39.5" y="309" width="1.8" height="15.0" fill="rgb(225,6,38)" rx="2" ry="2" />
<text  x="42.54" y="319.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="861.5" y="453" width="1.8" height="15.0" fill="rgb(252,154,10)" rx="2" ry="2" />
<text  x="864.55" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.15%)</title><rect x="86.5" y="213" width="1.7" height="15.0" fill="rgb(237,115,52)" rx="2" ry="2" />
<text  x="89.47" y="223.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; (1 samples, 0.15%)</title><rect x="72.6" y="245" width="1.7" height="15.0" fill="rgb(212,118,13)" rx="2" ry="2" />
<text  x="75.56" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.15%)</title><rect x="1038.8" y="549" width="1.7" height="15.0" fill="rgb(239,23,17)" rx="2" ry="2" />
<text  x="1041.81" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="1057.9" y="533" width="5.2" height="15.0" fill="rgb(254,94,31)" rx="2" ry="2" />
<text  x="1060.92" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.15%)</title><rect x="95.2" y="309" width="1.7" height="15.0" fill="rgb(236,35,19)" rx="2" ry="2" />
<text  x="98.15" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (1 samples, 0.15%)</title><rect x="76.0" y="181" width="1.8" height="15.0" fill="rgb(243,116,17)" rx="2" ry="2" />
<text  x="79.04" y="191.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::operation::raw_update*, false&gt;::_M_head (1 samples, 0.15%)</title><rect x="76.0" y="133" width="1.8" height="15.0" fill="rgb(207,25,28)" rx="2" ry="2" />
<text  x="79.04" y="143.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.15%)</title><rect x="766.0" y="453" width="1.7" height="15.0" fill="rgb(240,150,24)" rx="2" ry="2" />
<text  x="768.96" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (37 samples, 5.45%)</title><rect x="51.7" y="453" width="64.3" height="15.0" fill="rgb(222,134,12)" rx="2" ry="2" />
<text  x="54.71" y="463.5" >cql3_pa..</text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.15%)</title><rect x="550.5" y="421" width="1.7" height="15.0" fill="rgb(214,37,38)" rx="2" ry="2" />
<text  x="553.47" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (2 samples, 0.29%)</title><rect x="1031.9" y="357" width="3.4" height="15.0" fill="rgb(221,81,49)" rx="2" ry="2" />
<text  x="1034.86" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (70 samples, 10.31%)</title><rect x="230.7" y="469" width="121.7" height="15.0" fill="rgb(207,47,27)" rx="2" ry="2" />
<text  x="233.71" y="479.5" >merging_reader&lt;..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="103.8" y="165" width="1.8" height="15.0" fill="rgb(219,134,15)" rx="2" ry="2" />
<text  x="106.84" y="175.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (4 samples, 0.59%)</title><rect x="482.7" y="485" width="6.9" height="15.0" fill="rgb(207,173,40)" rx="2" ry="2" />
<text  x="485.70" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (1 samples, 0.15%)</title><rect x="74.3" y="261" width="1.7" height="15.0" fill="rgb(234,35,18)" rx="2" ry="2" />
<text  x="77.30" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (1 samples, 0.15%)</title><rect x="1019.7" y="485" width="1.7" height="15.0" fill="rgb(207,185,3)" rx="2" ry="2" />
<text  x="1022.69" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.29%)</title><rect x="63.9" y="405" width="3.4" height="15.0" fill="rgb(235,109,20)" rx="2" ry="2" />
<text  x="66.87" y="415.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.15%)</title><rect x="802.5" y="485" width="1.7" height="15.0" fill="rgb(222,177,43)" rx="2" ry="2" />
<text  x="805.46" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="708.6" y="517" width="1.8" height="15.0" fill="rgb(227,67,22)" rx="2" ry="2" />
<text  x="711.62" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.29%)</title><rect x="86.5" y="229" width="3.4" height="15.0" fill="rgb(240,109,12)" rx="2" ry="2" />
<text  x="89.47" y="239.5" ></text>
</g>
<g >
<title>freeze (1 samples, 0.15%)</title><rect x="1031.9" y="325" width="1.7" height="15.0" fill="rgb(210,205,35)" rx="2" ry="2" />
<text  x="1034.86" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="56.9" y="309" width="1.8" height="15.0" fill="rgb(229,184,22)" rx="2" ry="2" />
<text  x="59.92" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair (1 samples, 0.15%)</title><rect x="76.0" y="229" width="1.8" height="15.0" fill="rgb(215,163,24)" rx="2" ry="2" />
<text  x="79.04" y="239.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.15%)</title><rect x="800.7" y="485" width="1.8" height="15.0" fill="rgb(231,75,26)" rx="2" ry="2" />
<text  x="803.72" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="341.9" y="389" width="1.8" height="15.0" fill="rgb(211,210,21)" rx="2" ry="2" />
<text  x="344.93" y="399.5" ></text>
</g>
<g >
<title>row::compact_and_expire (9 samples, 1.33%)</title><rect x="441.0" y="469" width="15.6" height="15.0" fill="rgb(243,8,50)" rx="2" ry="2" />
<text  x="443.99" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (1 samples, 0.15%)</title><rect x="267.2" y="405" width="1.7" height="15.0" fill="rgb(245,158,52)" rx="2" ry="2" />
<text  x="270.20" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.29%)</title><rect x="102.1" y="293" width="3.5" height="15.0" fill="rgb(212,46,0)" rx="2" ry="2" />
<text  x="105.11" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="865.0" y="421" width="3.5" height="15.0" fill="rgb(245,158,45)" rx="2" ry="2" />
<text  x="868.02" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (1 samples, 0.15%)</title><rect x="1035.3" y="357" width="1.8" height="15.0" fill="rgb(209,70,29)" rx="2" ry="2" />
<text  x="1038.33" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="911.9" y="341" width="3.5" height="15.0" fill="rgb(227,71,40)" rx="2" ry="2" />
<text  x="914.94" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.15%)</title><rect x="109.1" y="373" width="1.7" height="15.0" fill="rgb(216,80,24)" rx="2" ry="2" />
<text  x="112.06" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.15%)</title><rect x="58.7" y="373" width="1.7" height="15.0" fill="rgb(226,222,9)" rx="2" ry="2" />
<text  x="61.66" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (12 samples, 1.77%)</title><rect x="308.9" y="341" width="20.9" height="15.0" fill="rgb(214,37,53)" rx="2" ry="2" />
<text  x="311.91" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.15%)</title><rect x="211.6" y="517" width="1.7" height="15.0" fill="rgb(232,229,48)" rx="2" ry="2" />
<text  x="214.59" y="527.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (247 samples, 36.38%)</title><rect x="178.6" y="549" width="429.2" height="15.0" fill="rgb(238,6,13)" rx="2" ry="2" />
<text  x="181.57" y="559.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="1040.5" y="565" width="1.8" height="15.0" fill="rgb(212,183,47)" rx="2" ry="2" />
<text  x="1043.54" y="575.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.29%)</title><rect x="136.9" y="645" width="3.4" height="15.0" fill="rgb(246,30,40)" rx="2" ry="2" />
<text  x="139.86" y="655.5" ></text>
</g>
<g >
<title>table::query (239 samples, 35.20%)</title><rect x="192.5" y="533" width="415.3" height="15.0" fill="rgb(224,121,25)" rx="2" ry="2" />
<text  x="195.47" y="543.5" >table::query</text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (1 samples, 0.15%)</title><rect x="124.7" y="533" width="1.7" height="15.0" fill="rgb(238,160,54)" rx="2" ry="2" />
<text  x="127.70" y="543.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (4 samples, 0.59%)</title><rect x="576.5" y="437" width="7.0" height="15.0" fill="rgb(213,99,33)" rx="2" ry="2" />
<text  x="579.54" y="447.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.44%)</title><rect x="757.3" y="421" width="5.2" height="15.0" fill="rgb(250,119,20)" rx="2" ry="2" />
<text  x="760.28" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.15%)</title><rect x="590.4" y="453" width="1.8" height="15.0" fill="rgb(218,57,50)" rx="2" ry="2" />
<text  x="593.44" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (4 samples, 0.59%)</title><rect x="255.0" y="421" width="7.0" height="15.0" fill="rgb(208,64,45)" rx="2" ry="2" />
<text  x="258.04" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.44%)</title><rect x="1031.9" y="469" width="5.2" height="15.0" fill="rgb(219,152,33)" rx="2" ry="2" />
<text  x="1034.86" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (27 samples, 3.98%)</title><rect x="910.2" y="373" width="46.9" height="15.0" fill="rgb(249,29,13)" rx="2" ry="2" />
<text  x="913.21" y="383.5" >serv..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="69.1" y="101" width="1.7" height="15.0" fill="rgb(218,185,17)" rx="2" ry="2" />
<text  x="72.09" y="111.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.29%)</title><rect x="56.9" y="389" width="3.5" height="15.0" fill="rgb(210,216,15)" rx="2" ry="2" />
<text  x="59.92" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="69.1" y="149" width="1.7" height="15.0" fill="rgb(240,217,37)" rx="2" ry="2" />
<text  x="72.09" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="29.1" y="261" width="1.8" height="15.0" fill="rgb(216,165,9)" rx="2" ry="2" />
<text  x="32.12" y="271.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_M_head (1 samples, 0.15%)</title><rect x="96.9" y="261" width="1.7" height="15.0" fill="rgb(209,33,14)" rx="2" ry="2" />
<text  x="99.89" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.15%)</title><rect x="95.2" y="341" width="1.7" height="15.0" fill="rgb(235,26,13)" rx="2" ry="2" />
<text  x="98.15" y="351.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.15%)</title><rect x="772.9" y="501" width="1.8" height="15.0" fill="rgb(235,73,25)" rx="2" ry="2" />
<text  x="775.92" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.15%)</title><rect x="43.0" y="325" width="1.8" height="15.0" fill="rgb(252,25,41)" rx="2" ry="2" />
<text  x="46.02" y="335.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (2 samples, 0.29%)</title><rect x="844.2" y="453" width="3.4" height="15.0" fill="rgb(240,183,41)" rx="2" ry="2" />
<text  x="847.17" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::statements::raw::update_statement&gt;&gt; (1 samples, 0.15%)</title><rect x="121.2" y="373" width="1.8" height="15.0" fill="rgb(252,215,9)" rx="2" ry="2" />
<text  x="124.22" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (1 samples, 0.15%)</title><rect x="1033.6" y="325" width="1.7" height="15.0" fill="rgb(213,39,8)" rx="2" ry="2" />
<text  x="1036.59" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.29%)</title><rect x="98.6" y="405" width="3.5" height="15.0" fill="rgb(231,99,27)" rx="2" ry="2" />
<text  x="101.63" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (52 samples, 7.66%)</title><rect x="32.6" y="469" width="90.4" height="15.0" fill="rgb(244,217,10)" rx="2" ry="2" />
<text  x="35.59" y="479.5" >cql3_parse..</text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="1016.2" y="485" width="3.5" height="15.0" fill="rgb(252,51,30)" rx="2" ry="2" />
<text  x="1019.22" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (3 samples, 0.44%)</title><rect x="56.9" y="421" width="5.2" height="15.0" fill="rgb(207,15,44)" rx="2" ry="2" />
<text  x="59.92" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (2 samples, 0.29%)</title><rect x="291.5" y="357" width="3.5" height="15.0" fill="rgb(235,172,13)" rx="2" ry="2" />
<text  x="294.53" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (1 samples, 0.15%)</title><rect x="20.4" y="453" width="1.8" height="15.0" fill="rgb(232,21,33)" rx="2" ry="2" />
<text  x="23.43" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.29%)</title><rect x="36.1" y="325" width="3.4" height="15.0" fill="rgb(234,92,38)" rx="2" ry="2" />
<text  x="39.07" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="858.1" y="469" width="1.7" height="15.0" fill="rgb(215,105,31)" rx="2" ry="2" />
<text  x="861.07" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (17 samples, 2.50%)</title><rect x="69.1" y="405" width="29.5" height="15.0" fill="rgb(221,17,19)" rx="2" ry="2" />
<text  x="72.09" y="415.5" >cq..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="536.6" y="405" width="1.7" height="15.0" fill="rgb(219,88,54)" rx="2" ry="2" />
<text  x="539.57" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::run (539 samples, 79.38%)</title><rect x="143.8" y="613" width="936.7" height="15.0" fill="rgb(235,221,13)" rx="2" ry="2" />
<text  x="146.81" y="623.5" >seastar::reactor::run</text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.15%)</title><rect x="96.9" y="357" width="1.7" height="15.0" fill="rgb(249,123,53)" rx="2" ry="2" />
<text  x="99.89" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.15%)</title><rect x="500.1" y="485" width="1.7" height="15.0" fill="rgb(206,157,9)" rx="2" ry="2" />
<text  x="503.07" y="495.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (32 samples, 4.71%)</title><rect x="901.5" y="405" width="55.6" height="15.0" fill="rgb(241,149,45)" rx="2" ry="2" />
<text  x="904.52" y="415.5" >servi..</text>
</g>
<g >
<title>seastar::app_template::run_deprecated (541 samples, 79.68%)</title><rect x="143.8" y="629" width="940.2" height="15.0" fill="rgb(219,42,40)" rx="2" ry="2" />
<text  x="146.81" y="639.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (252 samples, 37.11%)</title><rect x="171.6" y="565" width="438.0" height="15.0" fill="rgb(212,219,5)" rx="2" ry="2" />
<text  x="174.62" y="575.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.44%)</title><rect x="86.5" y="341" width="5.2" height="15.0" fill="rgb(209,163,13)" rx="2" ry="2" />
<text  x="89.47" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.15%)</title><rect x="93.4" y="341" width="1.8" height="15.0" fill="rgb(252,83,17)" rx="2" ry="2" />
<text  x="96.42" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="493.1" y="485" width="5.2" height="15.0" fill="rgb(250,185,28)" rx="2" ry="2" />
<text  x="496.12" y="495.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="538.3" y="437" width="3.5" height="15.0" fill="rgb(226,206,13)" rx="2" ry="2" />
<text  x="541.31" y="447.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (9 samples, 1.33%)</title><rect x="983.2" y="373" width="15.6" height="15.0" fill="rgb(213,160,44)" rx="2" ry="2" />
<text  x="986.20" y="383.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (65 samples, 9.57%)</title><rect x="13.5" y="565" width="112.9" height="15.0" fill="rgb(251,38,8)" rx="2" ry="2" />
<text  x="16.48" y="575.5" >single_node_c..</text>
</g>
<g >
<title>auth::permissions_cache::get (1 samples, 0.15%)</title><rect x="124.7" y="453" width="1.7" height="15.0" fill="rgb(250,213,26)" rx="2" ry="2" />
<text  x="127.70" y="463.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.15%)</title><rect x="600.9" y="517" width="1.7" height="15.0" fill="rgb(248,105,6)" rx="2" ry="2" />
<text  x="603.87" y="527.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (1 samples, 0.15%)</title><rect x="96.9" y="373" width="1.7" height="15.0" fill="rgb(216,89,38)" rx="2" ry="2" />
<text  x="99.89" y="383.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.29%)</title><rect x="580.0" y="405" width="3.5" height="15.0" fill="rgb(239,177,2)" rx="2" ry="2" />
<text  x="583.01" y="415.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.29%)</title><rect x="136.9" y="661" width="3.4" height="15.0" fill="rgb(239,62,33)" rx="2" ry="2" />
<text  x="139.86" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::allocate (1 samples, 0.15%)</title><rect x="29.1" y="293" width="1.8" height="15.0" fill="rgb(229,185,9)" rx="2" ry="2" />
<text  x="32.12" y="303.5" ></text>
</g>
<g >
<title>query::querier_base::close (16 samples, 2.36%)</title><rect x="463.6" y="517" width="27.8" height="15.0" fill="rgb(222,192,35)" rx="2" ry="2" />
<text  x="466.58" y="527.5" >q..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="56.9" y="325" width="1.8" height="15.0" fill="rgb(227,28,10)" rx="2" ry="2" />
<text  x="59.92" y="335.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.44%)</title><rect x="821.6" y="389" width="5.2" height="15.0" fill="rgb(228,125,41)" rx="2" ry="2" />
<text  x="824.58" y="399.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (1 samples, 0.15%)</title><rect x="1026.6" y="421" width="1.8" height="15.0" fill="rgb(208,117,51)" rx="2" ry="2" />
<text  x="1029.64" y="431.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (137 samples, 20.18%)</title><rect x="786.8" y="549" width="238.1" height="15.0" fill="rgb(229,119,12)" rx="2" ry="2" />
<text  x="789.82" y="559.5" >seastar::concrete_execution_sta..</text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (3 samples, 0.44%)</title><rect x="166.4" y="517" width="5.2" height="15.0" fill="rgb(238,90,12)" rx="2" ry="2" />
<text  x="169.41" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.29%)</title><rect x="86.5" y="245" width="3.4" height="15.0" fill="rgb(240,20,53)" rx="2" ry="2" />
<text  x="89.47" y="255.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.15%)</title><rect x="460.1" y="501" width="1.7" height="15.0" fill="rgb(215,44,27)" rx="2" ry="2" />
<text  x="463.10" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="65.6" y="293" width="1.7" height="15.0" fill="rgb(254,201,24)" rx="2" ry="2" />
<text  x="68.61" y="303.5" ></text>
</g>
<g >
<title>hwloc_linux_set_tid_cpubind (8 samples, 1.18%)</title><rect x="1110.1" y="693" width="13.9" height="15.0" fill="rgb(228,0,39)" rx="2" ry="2" />
<text  x="1113.06" y="703.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="774.7" y="501" width="1.7" height="15.0" fill="rgb(214,166,43)" rx="2" ry="2" />
<text  x="777.65" y="511.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (6 samples, 0.88%)</title><rect x="646.1" y="565" width="10.4" height="15.0" fill="rgb(247,183,33)" rx="2" ry="2" />
<text  x="649.05" y="575.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.15%)</title><rect x="293.3" y="325" width="1.7" height="15.0" fill="rgb(236,229,33)" rx="2" ry="2" />
<text  x="296.27" y="335.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (1 samples, 0.15%)</title><rect x="1031.9" y="309" width="1.7" height="15.0" fill="rgb(223,35,5)" rx="2" ry="2" />
<text  x="1034.86" y="319.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (11 samples, 1.62%)</title><rect x="1090.9" y="693" width="19.2" height="15.0" fill="rgb(234,97,51)" rx="2" ry="2" />
<text  x="1093.94" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="69.1" y="53" width="1.7" height="15.0" fill="rgb(215,90,33)" rx="2" ry="2" />
<text  x="72.09" y="63.5" ></text>
</g>
<g >
<title>std::__variant_cast&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.15%)</title><rect x="105.6" y="261" width="1.7" height="15.0" fill="rgb(234,210,42)" rx="2" ry="2" />
<text  x="108.58" y="271.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (1 samples, 0.15%)</title><rect x="514.0" y="437" width="1.7" height="15.0" fill="rgb(228,154,31)" rx="2" ry="2" />
<text  x="516.98" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (9 samples, 1.33%)</title><rect x="36.1" y="405" width="15.6" height="15.0" fill="rgb(245,32,46)" rx="2" ry="2" />
<text  x="39.07" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (8 samples, 1.18%)</title><rect x="623.5" y="549" width="13.9" height="15.0" fill="rgb(241,147,20)" rx="2" ry="2" />
<text  x="626.46" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="69.1" y="37" width="1.7" height="15.0" fill="rgb(209,99,45)" rx="2" ry="2" />
<text  x="72.09" y="47.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.44%)</title><rect x="564.4" y="453" width="5.2" height="15.0" fill="rgb(234,157,35)" rx="2" ry="2" />
<text  x="567.37" y="463.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="76.0" y="293" width="1.8" height="15.0" fill="rgb(213,24,16)" rx="2" ry="2" />
<text  x="79.04" y="303.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; (1 samples, 0.15%)</title><rect x="72.6" y="229" width="1.7" height="15.0" fill="rgb(233,198,18)" rx="2" ry="2" />
<text  x="75.56" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="69.1" y="165" width="1.7" height="15.0" fill="rgb(217,105,7)" rx="2" ry="2" />
<text  x="72.09" y="175.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (3 samples, 0.44%)</title><rect x="105.6" y="405" width="5.2" height="15.0" fill="rgb(208,153,42)" rx="2" ry="2" />
<text  x="108.58" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (2 samples, 0.29%)</title><rect x="609.6" y="565" width="3.4" height="15.0" fill="rgb(253,88,53)" rx="2" ry="2" />
<text  x="612.56" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.15%)</title><rect x="69.1" y="245" width="1.7" height="15.0" fill="rgb(245,105,33)" rx="2" ry="2" />
<text  x="72.09" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (2 samples, 0.29%)</title><rect x="288.1" y="357" width="3.4" height="15.0" fill="rgb(245,220,36)" rx="2" ry="2" />
<text  x="291.06" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (2 samples, 0.29%)</title><rect x="851.1" y="485" width="3.5" height="15.0" fill="rgb(244,83,50)" rx="2" ry="2" />
<text  x="854.12" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (2 samples, 0.29%)</title><rect x="46.5" y="341" width="3.5" height="15.0" fill="rgb(205,162,22)" rx="2" ry="2" />
<text  x="49.49" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.15%)</title><rect x="91.7" y="277" width="1.7" height="15.0" fill="rgb(220,191,32)" rx="2" ry="2" />
<text  x="94.68" y="287.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (1 samples, 0.15%)</title><rect x="43.0" y="341" width="1.8" height="15.0" fill="rgb(244,227,2)" rx="2" ry="2" />
<text  x="46.02" y="351.5" ></text>
</g>
<g >
<title>table::query (1 samples, 0.15%)</title><rect x="1078.8" y="565" width="1.7" height="15.0" fill="rgb(243,92,42)" rx="2" ry="2" />
<text  x="1081.78" y="575.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="647.8" y="533" width="1.7" height="15.0" fill="rgb(232,191,5)" rx="2" ry="2" />
<text  x="650.79" y="543.5" ></text>
</g>
<g >
<title>[[vdso]] (8 samples, 1.18%)</title><rect x="1090.9" y="677" width="13.9" height="15.0" fill="rgb(209,9,0)" rx="2" ry="2" />
<text  x="1093.94" y="687.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (67 samples, 9.87%)</title><rect x="11.7" y="645" width="116.5" height="15.0" fill="rgb(223,11,44)" rx="2" ry="2" />
<text  x="14.74" y="655.5" >seastar::threa..</text>
</g>
<g >
<title>db::commitlog::add_entry (1 samples, 0.15%)</title><rect x="1030.1" y="469" width="1.8" height="15.0" fill="rgb(239,138,41)" rx="2" ry="2" />
<text  x="1033.12" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (5 samples, 0.74%)</title><rect x="183.8" y="517" width="8.7" height="15.0" fill="rgb(242,24,48)" rx="2" ry="2" />
<text  x="186.78" y="527.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.15%)</title><rect x="1035.3" y="325" width="1.8" height="15.0" fill="rgb(240,29,45)" rx="2" ry="2" />
<text  x="1038.33" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.15%)</title><rect x="348.9" y="453" width="1.7" height="15.0" fill="rgb(246,190,1)" rx="2" ry="2" />
<text  x="351.88" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="58.7" y="341" width="1.7" height="15.0" fill="rgb(231,28,23)" rx="2" ry="2" />
<text  x="61.66" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (78 samples, 11.49%)</title><rect x="863.3" y="453" width="135.5" height="15.0" fill="rgb(230,188,42)" rx="2" ry="2" />
<text  x="866.28" y="463.5" >service::storage_..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="364.5" y="469" width="1.8" height="15.0" fill="rgb(236,44,2)" rx="2" ry="2" />
<text  x="367.52" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.29%)</title><rect x="86.5" y="261" width="3.4" height="15.0" fill="rgb(217,30,45)" rx="2" ry="2" />
<text  x="89.47" y="271.5" ></text>
</g>
<g >
<title>memtable::apply (3 samples, 0.44%)</title><rect x="1024.9" y="437" width="5.2" height="15.0" fill="rgb(230,94,38)" rx="2" ry="2" />
<text  x="1027.90" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.44%)</title><rect x="314.1" y="325" width="5.2" height="15.0" fill="rgb(241,148,16)" rx="2" ry="2" />
<text  x="317.12" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.15%)</title><rect x="91.7" y="357" width="1.7" height="15.0" fill="rgb(221,35,49)" rx="2" ry="2" />
<text  x="94.68" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.15%)</title><rect x="102.1" y="245" width="1.7" height="15.0" fill="rgb(226,181,49)" rx="2" ry="2" />
<text  x="105.11" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="866.8" y="405" width="1.7" height="15.0" fill="rgb(224,160,11)" rx="2" ry="2" />
<text  x="869.76" y="415.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (58 samples, 8.54%)</title><rect x="359.3" y="501" width="100.8" height="15.0" fill="rgb(234,51,13)" rx="2" ry="2" />
<text  x="362.31" y="511.5" >query::consu..</text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.15%)</title><rect x="948.4" y="293" width="1.8" height="15.0" fill="rgb(229,144,23)" rx="2" ry="2" />
<text  x="951.44" y="303.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (3 samples, 0.44%)</title><rect x="1031.9" y="549" width="5.2" height="15.0" fill="rgb(246,163,19)" rx="2" ry="2" />
<text  x="1034.86" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.15%)</title><rect x="109.1" y="357" width="1.7" height="15.0" fill="rgb(239,133,33)" rx="2" ry="2" />
<text  x="112.06" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="268.9" y="357" width="5.3" height="15.0" fill="rgb(244,143,30)" rx="2" ry="2" />
<text  x="271.94" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (71 samples, 10.46%)</title><rect x="230.7" y="485" width="123.4" height="15.0" fill="rgb(219,70,21)" rx="2" ry="2" />
<text  x="233.71" y="495.5" >merging_reader&lt;..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.15%)</title><rect x="69.1" y="277" width="1.7" height="15.0" fill="rgb(250,60,9)" rx="2" ry="2" />
<text  x="72.09" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.44%)</title><rect x="1031.9" y="453" width="5.2" height="15.0" fill="rgb(233,202,9)" rx="2" ry="2" />
<text  x="1034.86" y="463.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.15%)</title><rect x="135.1" y="645" width="1.8" height="15.0" fill="rgb(207,95,50)" rx="2" ry="2" />
<text  x="138.13" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (3 samples, 0.44%)</title><rect x="72.6" y="373" width="5.2" height="15.0" fill="rgb(223,22,54)" rx="2" ry="2" />
<text  x="75.56" y="383.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (9 samples, 1.33%)</title><rect x="983.2" y="389" width="15.6" height="15.0" fill="rgb(220,122,24)" rx="2" ry="2" />
<text  x="986.20" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (3 samples, 0.44%)</title><rect x="475.7" y="437" width="5.3" height="15.0" fill="rgb(254,66,20)" rx="2" ry="2" />
<text  x="478.74" y="447.5" ></text>
</g>
<g >
<title>row::external_memory_usage (8 samples, 1.18%)</title><rect x="295.0" y="357" width="13.9" height="15.0" fill="rgb(226,212,35)" rx="2" ry="2" />
<text  x="298.01" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.15%)</title><rect x="109.1" y="325" width="1.7" height="15.0" fill="rgb(213,43,0)" rx="2" ry="2" />
<text  x="112.06" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.44%)</title><rect x="1031.9" y="517" width="5.2" height="15.0" fill="rgb(221,31,54)" rx="2" ry="2" />
<text  x="1034.86" y="527.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_super (1 samples, 0.15%)</title><rect x="32.6" y="421" width="1.7" height="15.0" fill="rgb(236,15,53)" rx="2" ry="2" />
<text  x="35.59" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.15%)</title><rect x="114.3" y="405" width="1.7" height="15.0" fill="rgb(219,17,40)" rx="2" ry="2" />
<text  x="117.27" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (53 samples, 7.81%)</title><rect x="32.6" y="501" width="92.1" height="15.0" fill="rgb(227,133,29)" rx="2" ry="2" />
<text  x="35.59" y="511.5" >seastar::no..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (7 samples, 1.03%)</title><rect x="470.5" y="453" width="12.2" height="15.0" fill="rgb(245,54,23)" rx="2" ry="2" />
<text  x="473.53" y="463.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (9 samples, 1.33%)</title><rect x="467.1" y="485" width="15.6" height="15.0" fill="rgb(220,5,34)" rx="2" ry="2" />
<text  x="470.05" y="495.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (1 samples, 0.15%)</title><rect x="1035.3" y="341" width="1.8" height="15.0" fill="rgb(220,213,22)" rx="2" ry="2" />
<text  x="1038.33" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="69.1" y="69" width="1.7" height="15.0" fill="rgb(225,193,53)" rx="2" ry="2" />
<text  x="72.09" y="79.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.15%)</title><rect x="74.3" y="277" width="1.7" height="15.0" fill="rgb(205,84,51)" rx="2" ry="2" />
<text  x="77.30" y="287.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="25.6" y="485" width="1.8" height="15.0" fill="rgb(251,7,6)" rx="2" ry="2" />
<text  x="28.64" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="635.6" y="517" width="1.8" height="15.0" fill="rgb(221,169,42)" rx="2" ry="2" />
<text  x="638.63" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.15%)</title><rect x="91.7" y="261" width="1.7" height="15.0" fill="rgb(250,207,33)" rx="2" ry="2" />
<text  x="94.68" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (3 samples, 0.44%)</title><rect x="630.4" y="517" width="5.2" height="15.0" fill="rgb(233,4,37)" rx="2" ry="2" />
<text  x="633.41" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="56.9" y="213" width="1.8" height="15.0" fill="rgb(228,22,49)" rx="2" ry="2" />
<text  x="59.92" y="223.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.15%)</title><rect x="67.3" y="357" width="1.8" height="15.0" fill="rgb(243,141,7)" rx="2" ry="2" />
<text  x="70.35" y="367.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (1 samples, 0.15%)</title><rect x="30.9" y="485" width="1.7" height="15.0" fill="rgb(215,142,42)" rx="2" ry="2" />
<text  x="33.85" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (11 samples, 1.62%)</title><rect x="32.6" y="453" width="19.1" height="15.0" fill="rgb(247,213,10)" rx="2" ry="2" />
<text  x="35.59" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="65.6" y="277" width="1.7" height="15.0" fill="rgb(253,65,3)" rx="2" ry="2" />
<text  x="68.61" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (2 samples, 0.29%)</title><rect x="1031.9" y="373" width="3.4" height="15.0" fill="rgb(229,81,53)" rx="2" ry="2" />
<text  x="1034.86" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="399.3" y="469" width="1.7" height="15.0" fill="rgb(211,79,53)" rx="2" ry="2" />
<text  x="402.28" y="479.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (1 samples, 0.15%)</title><rect x="29.1" y="421" width="1.8" height="15.0" fill="rgb(242,209,47)" rx="2" ry="2" />
<text  x="32.12" y="431.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (4 samples, 0.59%)</title><rect x="1024.9" y="485" width="7.0" height="15.0" fill="rgb(236,44,25)" rx="2" ry="2" />
<text  x="1027.90" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="1035.3" y="389" width="1.8" height="15.0" fill="rgb(216,176,46)" rx="2" ry="2" />
<text  x="1038.33" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="1018.0" y="469" width="1.7" height="15.0" fill="rgb(240,175,43)" rx="2" ry="2" />
<text  x="1020.95" y="479.5" ></text>
</g>
<g >
<title>make_combined_reader (7 samples, 1.03%)</title><rect x="507.0" y="469" width="12.2" height="15.0" fill="rgb(236,106,34)" rx="2" ry="2" />
<text  x="510.03" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="58.7" y="325" width="1.7" height="15.0" fill="rgb(225,79,35)" rx="2" ry="2" />
<text  x="61.66" y="335.5" ></text>
</g>
<g >
<title>std::move&lt;cql3::expr::conjunction&amp;&gt; (1 samples, 0.15%)</title><rect x="89.9" y="325" width="1.8" height="15.0" fill="rgb(206,11,10)" rx="2" ry="2" />
<text  x="92.94" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="67.3" y="389" width="1.8" height="15.0" fill="rgb(249,205,35)" rx="2" ry="2" />
<text  x="70.35" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.15%)</title><rect x="779.9" y="565" width="1.7" height="15.0" fill="rgb(232,141,8)" rx="2" ry="2" />
<text  x="782.87" y="575.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.15%)</title><rect x="128.2" y="661" width="1.7" height="15.0" fill="rgb(207,129,24)" rx="2" ry="2" />
<text  x="131.17" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="347.1" y="437" width="1.8" height="15.0" fill="rgb(216,154,49)" rx="2" ry="2" />
<text  x="350.14" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (4 samples, 0.59%)</title><rect x="17.0" y="469" width="6.9" height="15.0" fill="rgb(208,106,21)" rx="2" ry="2" />
<text  x="19.95" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="701.7" y="533" width="1.7" height="15.0" fill="rgb(219,14,15)" rx="2" ry="2" />
<text  x="704.66" y="543.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.15%)</title><rect x="138.6" y="597" width="1.7" height="15.0" fill="rgb(229,33,42)" rx="2" ry="2" />
<text  x="141.60" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="65.6" y="325" width="1.7" height="15.0" fill="rgb(230,95,38)" rx="2" ry="2" />
<text  x="68.61" y="335.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (2 samples, 0.29%)</title><rect x="783.3" y="549" width="3.5" height="15.0" fill="rgb(228,71,42)" rx="2" ry="2" />
<text  x="786.34" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="536.6" y="421" width="1.7" height="15.0" fill="rgb(251,4,44)" rx="2" ry="2" />
<text  x="539.57" y="431.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="72.6" y="341" width="1.7" height="15.0" fill="rgb(254,153,40)" rx="2" ry="2" />
<text  x="75.56" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (34 samples, 5.01%)</title><rect x="275.9" y="389" width="59.1" height="15.0" fill="rgb(233,87,36)" rx="2" ry="2" />
<text  x="278.89" y="399.5" >partit..</text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="1023.2" y="501" width="1.7" height="15.0" fill="rgb(240,7,30)" rx="2" ry="2" />
<text  x="1026.17" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="103.8" y="245" width="1.8" height="15.0" fill="rgb(210,97,14)" rx="2" ry="2" />
<text  x="106.84" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.15%)</title><rect x="107.3" y="373" width="1.8" height="15.0" fill="rgb(208,85,36)" rx="2" ry="2" />
<text  x="110.32" y="383.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (1 samples, 0.15%)</title><rect x="1019.7" y="469" width="1.7" height="15.0" fill="rgb(251,78,1)" rx="2" ry="2" />
<text  x="1022.69" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="63.9" y="213" width="1.7" height="15.0" fill="rgb(246,184,33)" rx="2" ry="2" />
<text  x="66.87" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="56.9" y="277" width="1.8" height="15.0" fill="rgb(247,0,10)" rx="2" ry="2" />
<text  x="59.92" y="287.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.15%)</title><rect x="56.9" y="357" width="1.8" height="15.0" fill="rgb(220,40,33)" rx="2" ry="2" />
<text  x="59.92" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.29%)</title><rect x="36.1" y="277" width="3.4" height="15.0" fill="rgb(209,184,48)" rx="2" ry="2" />
<text  x="39.07" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::allocate (1 samples, 0.15%)</title><rect x="29.1" y="309" width="1.8" height="15.0" fill="rgb(226,41,22)" rx="2" ry="2" />
<text  x="32.12" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.15%)</title><rect x="607.8" y="549" width="1.8" height="15.0" fill="rgb(215,199,48)" rx="2" ry="2" />
<text  x="610.82" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="63.9" y="309" width="1.7" height="15.0" fill="rgb(239,114,32)" rx="2" ry="2" />
<text  x="66.87" y="319.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (9 samples, 1.33%)</title><rect x="741.6" y="421" width="15.7" height="15.0" fill="rgb(219,18,18)" rx="2" ry="2" />
<text  x="744.63" y="431.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.29%)</title><rect x="531.4" y="421" width="3.4" height="15.0" fill="rgb(238,2,50)" rx="2" ry="2" />
<text  x="534.35" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.15%)</title><rect x="262.0" y="405" width="1.7" height="15.0" fill="rgb(229,163,0)" rx="2" ry="2" />
<text  x="264.99" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.44%)</title><rect x="1031.9" y="501" width="5.2" height="15.0" fill="rgb(224,71,35)" rx="2" ry="2" />
<text  x="1034.86" y="511.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (3 samples, 0.44%)</title><rect x="1031.9" y="437" width="5.2" height="15.0" fill="rgb(245,34,3)" rx="2" ry="2" />
<text  x="1034.86" y="447.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (1 samples, 0.15%)</title><rect x="1031.9" y="293" width="1.7" height="15.0" fill="rgb(237,97,8)" rx="2" ry="2" />
<text  x="1034.86" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.15%)</title><rect x="898.0" y="357" width="1.8" height="15.0" fill="rgb(217,161,25)" rx="2" ry="2" />
<text  x="901.04" y="367.5" ></text>
</g>
<g >
<title>row::~row (4 samples, 0.59%)</title><rect x="388.9" y="453" width="6.9" height="15.0" fill="rgb(228,182,51)" rx="2" ry="2" />
<text  x="391.85" y="463.5" ></text>
</g>
<g >
<title>database::has_keyspace (2 samples, 0.29%)</title><rect x="771.2" y="517" width="3.5" height="15.0" fill="rgb(254,170,4)" rx="2" ry="2" />
<text  x="774.18" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (1 samples, 0.15%)</title><rect x="666.9" y="549" width="1.7" height="15.0" fill="rgb(220,19,23)" rx="2" ry="2" />
<text  x="669.91" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="56.9" y="341" width="1.8" height="15.0" fill="rgb(247,216,0)" rx="2" ry="2" />
<text  x="59.92" y="351.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.15%)</title><rect x="783.3" y="389" width="1.8" height="15.0" fill="rgb(218,130,17)" rx="2" ry="2" />
<text  x="786.34" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.15%)</title><rect x="682.5" y="533" width="1.8" height="15.0" fill="rgb(251,69,23)" rx="2" ry="2" />
<text  x="685.55" y="543.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.15%)</title><rect x="755.5" y="405" width="1.8" height="15.0" fill="rgb(214,137,8)" rx="2" ry="2" />
<text  x="758.54" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.29%)</title><rect x="74.3" y="357" width="3.5" height="15.0" fill="rgb(239,217,17)" rx="2" ry="2" />
<text  x="77.30" y="367.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="162.9" y="533" width="3.5" height="15.0" fill="rgb(249,70,17)" rx="2" ry="2" />
<text  x="165.93" y="543.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.15%)</title><rect x="852.9" y="469" width="1.7" height="15.0" fill="rgb(235,154,47)" rx="2" ry="2" />
<text  x="855.86" y="479.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.15%)</title><rect x="981.5" y="389" width="1.7" height="15.0" fill="rgb(235,217,13)" rx="2" ry="2" />
<text  x="984.46" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.15%)</title><rect x="1186.5" y="613" width="1.8" height="15.0" fill="rgb(235,15,30)" rx="2" ry="2" />
<text  x="1189.52" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.15%)</title><rect x="96.9" y="277" width="1.7" height="15.0" fill="rgb(205,218,29)" rx="2" ry="2" />
<text  x="99.89" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.15%)</title><rect x="96.9" y="325" width="1.7" height="15.0" fill="rgb(235,112,26)" rx="2" ry="2" />
<text  x="99.89" y="335.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.15%)</title><rect x="1012.7" y="469" width="1.8" height="15.0" fill="rgb(222,209,39)" rx="2" ry="2" />
<text  x="1015.74" y="479.5" ></text>
</g>
<g >
<title>table::make_reader (52 samples, 7.66%)</title><rect x="501.8" y="485" width="90.4" height="15.0" fill="rgb(246,111,6)" rx="2" ry="2" />
<text  x="504.81" y="495.5" >table::mak..</text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.44%)</title><rect x="223.8" y="517" width="5.2" height="15.0" fill="rgb(227,118,48)" rx="2" ry="2" />
<text  x="226.76" y="527.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple (1 samples, 0.15%)</title><rect x="74.3" y="245" width="1.7" height="15.0" fill="rgb(230,102,2)" rx="2" ry="2" />
<text  x="77.30" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.15%)</title><rect x="1082.3" y="597" width="1.7" height="15.0" fill="rgb(246,89,51)" rx="2" ry="2" />
<text  x="1085.25" y="607.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="102.1" y="181" width="1.7" height="15.0" fill="rgb(245,173,26)" rx="2" ry="2" />
<text  x="105.11" y="191.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (28 samples, 4.12%)</title><rect x="908.5" y="389" width="48.6" height="15.0" fill="rgb(250,177,53)" rx="2" ry="2" />
<text  x="911.47" y="399.5" >serv..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (39 samples, 5.74%)</title><rect x="268.9" y="405" width="67.8" height="15.0" fill="rgb(253,99,51)" rx="2" ry="2" />
<text  x="271.94" y="415.5" >partiti..</text>
</g>
<g >
<title>seastar::memory::allocate_aligned (2 samples, 0.29%)</title><rect x="326.3" y="277" width="3.5" height="15.0" fill="rgb(239,64,33)" rx="2" ry="2" />
<text  x="329.29" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (2 samples, 0.29%)</title><rect x="107.3" y="389" width="3.5" height="15.0" fill="rgb(217,115,40)" rx="2" ry="2" />
<text  x="110.32" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.15%)</title><rect x="1082.3" y="581" width="1.7" height="15.0" fill="rgb(243,203,44)" rx="2" ry="2" />
<text  x="1085.25" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.15%)</title><rect x="74.3" y="293" width="1.7" height="15.0" fill="rgb(217,36,17)" rx="2" ry="2" />
<text  x="77.30" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="69.1" y="133" width="1.7" height="15.0" fill="rgb(211,96,42)" rx="2" ry="2" />
<text  x="72.09" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.15%)</title><rect x="50.0" y="325" width="1.7" height="15.0" fill="rgb(253,114,42)" rx="2" ry="2" />
<text  x="52.97" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.15%)</title><rect x="684.3" y="517" width="1.7" height="15.0" fill="rgb(230,13,36)" rx="2" ry="2" />
<text  x="687.29" y="527.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.15%)</title><rect x="56.9" y="373" width="1.8" height="15.0" fill="rgb(234,165,43)" rx="2" ry="2" />
<text  x="59.92" y="383.5" ></text>
</g>
<g >
<title>database::apply_in_memory (3 samples, 0.44%)</title><rect x="1024.9" y="469" width="5.2" height="15.0" fill="rgb(254,165,19)" rx="2" ry="2" />
<text  x="1027.90" y="479.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="474.0" y="437" width="1.7" height="15.0" fill="rgb(246,67,53)" rx="2" ry="2" />
<text  x="477.01" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.15%)</title><rect x="43.0" y="277" width="1.8" height="15.0" fill="rgb(234,30,13)" rx="2" ry="2" />
<text  x="46.02" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~deque (1 samples, 0.15%)</title><rect x="30.9" y="437" width="1.7" height="15.0" fill="rgb(215,119,1)" rx="2" ry="2" />
<text  x="33.85" y="447.5" ></text>
</g>
<g >
<title>auth::get_permissions (1 samples, 0.15%)</title><rect x="124.7" y="469" width="1.7" height="15.0" fill="rgb(243,38,2)" rx="2" ry="2" />
<text  x="127.70" y="479.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (3 samples, 0.44%)</title><rect x="602.6" y="517" width="5.2" height="15.0" fill="rgb(235,13,31)" rx="2" ry="2" />
<text  x="605.61" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.15%)</title><rect x="105.6" y="277" width="1.7" height="15.0" fill="rgb(242,126,48)" rx="2" ry="2" />
<text  x="108.58" y="287.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (5 samples, 0.74%)</title><rect x="428.8" y="469" width="8.7" height="15.0" fill="rgb(213,83,18)" rx="2" ry="2" />
<text  x="431.82" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.29%)</title><rect x="83.0" y="341" width="3.5" height="15.0" fill="rgb(239,28,38)" rx="2" ry="2" />
<text  x="85.99" y="351.5" ></text>
</g>
<g >
<title>dht::tri_compare (2 samples, 0.29%)</title><rect x="527.9" y="437" width="3.5" height="15.0" fill="rgb(207,118,5)" rx="2" ry="2" />
<text  x="530.88" y="447.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (42 samples, 6.19%)</title><rect x="703.4" y="533" width="73.0" height="15.0" fill="rgb(222,148,41)" rx="2" ry="2" />
<text  x="706.40" y="543.5" >single_n..</text>
</g>
<g >
<title>schema::column_at (1 samples, 0.15%)</title><rect x="409.7" y="437" width="1.7" height="15.0" fill="rgb(227,17,17)" rx="2" ry="2" />
<text  x="412.71" y="447.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (3 samples, 0.44%)</title><rect x="832.0" y="373" width="5.2" height="15.0" fill="rgb(237,0,35)" rx="2" ry="2" />
<text  x="835.00" y="383.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1 samples, 0.15%)</title><rect x="124.7" y="501" width="1.7" height="15.0" fill="rgb(244,223,18)" rx="2" ry="2" />
<text  x="127.70" y="511.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (2 samples, 0.29%)</title><rect x="129.9" y="645" width="3.5" height="15.0" fill="rgb(213,45,49)" rx="2" ry="2" />
<text  x="132.91" y="655.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (6 samples, 0.88%)</title><rect x="319.3" y="325" width="10.5" height="15.0" fill="rgb(237,27,16)" rx="2" ry="2" />
<text  x="322.34" y="335.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (2 samples, 0.29%)</title><rect x="136.9" y="629" width="3.4" height="15.0" fill="rgb(228,108,16)" rx="2" ry="2" />
<text  x="139.86" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.29%)</title><rect x="1059.7" y="517" width="3.4" height="15.0" fill="rgb(228,86,39)" rx="2" ry="2" />
<text  x="1062.66" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.15%)</title><rect x="84.7" y="309" width="1.8" height="15.0" fill="rgb(246,190,17)" rx="2" ry="2" />
<text  x="87.73" y="319.5" ></text>
</g>
<g >
<title>seastar::app_template::run (541 samples, 79.68%)</title><rect x="143.8" y="645" width="940.2" height="15.0" fill="rgb(253,69,39)" rx="2" ry="2" />
<text  x="146.81" y="655.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="67.3" y="373" width="1.8" height="15.0" fill="rgb(219,163,54)" rx="2" ry="2" />
<text  x="70.35" y="383.5" ></text>
</g>
<g >
<title>mutation_partition::append_clustered_row (1 samples, 0.15%)</title><rect x="1028.4" y="405" width="1.7" height="15.0" fill="rgb(241,83,21)" rx="2" ry="2" />
<text  x="1031.38" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.15%)</title><rect x="778.1" y="565" width="1.8" height="15.0" fill="rgb(242,205,16)" rx="2" ry="2" />
<text  x="781.13" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="559.2" y="389" width="1.7" height="15.0" fill="rgb(228,190,38)" rx="2" ry="2" />
<text  x="562.16" y="399.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (4 samples, 0.59%)</title><rect x="941.5" y="293" width="6.9" height="15.0" fill="rgb(234,56,41)" rx="2" ry="2" />
<text  x="944.49" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="69.1" y="117" width="1.7" height="15.0" fill="rgb(244,81,14)" rx="2" ry="2" />
<text  x="72.09" y="127.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (2 samples, 0.29%)</title><rect x="1054.4" y="549" width="3.5" height="15.0" fill="rgb(254,209,35)" rx="2" ry="2" />
<text  x="1057.45" y="559.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::size (1 samples, 0.15%)</title><rect x="783.3" y="357" width="1.8" height="15.0" fill="rgb(246,190,42)" rx="2" ry="2" />
<text  x="786.34" y="367.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="63.9" y="229" width="1.7" height="15.0" fill="rgb(215,115,11)" rx="2" ry="2" />
<text  x="66.87" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="102.1" y="197" width="1.7" height="15.0" fill="rgb(222,157,0)" rx="2" ry="2" />
<text  x="105.11" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (53 samples, 7.81%)</title><rect x="32.6" y="485" width="92.1" height="15.0" fill="rgb(215,11,7)" rx="2" ry="2" />
<text  x="35.59" y="495.5" >cql3_parser..</text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.15%)</title><rect x="1186.5" y="645" width="1.8" height="15.0" fill="rgb(220,75,23)" rx="2" ry="2" />
<text  x="1189.52" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.29%)</title><rect x="1064.9" y="549" width="3.5" height="15.0" fill="rgb(219,36,23)" rx="2" ry="2" />
<text  x="1067.87" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.15%)</title><rect x="69.1" y="293" width="1.7" height="15.0" fill="rgb(253,176,46)" rx="2" ry="2" />
<text  x="72.09" y="303.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="847.6" y="469" width="1.8" height="15.0" fill="rgb(229,192,20)" rx="2" ry="2" />
<text  x="850.64" y="479.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.15%)</title><rect x="1033.6" y="309" width="1.7" height="15.0" fill="rgb(217,39,2)" rx="2" ry="2" />
<text  x="1036.59" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (3 samples, 0.44%)</title><rect x="1031.9" y="405" width="5.2" height="15.0" fill="rgb(220,20,1)" rx="2" ry="2" />
<text  x="1034.86" y="415.5" ></text>
</g>
<g >
<title>do_cql_test (67 samples, 9.87%)</title><rect x="11.7" y="597" width="116.5" height="15.0" fill="rgb(215,65,30)" rx="2" ry="2" />
<text  x="14.74" y="607.5" >do_cql_test</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::grant_role_statement&gt;, void&gt; (1 samples, 0.15%)</title><rect x="119.5" y="453" width="1.7" height="15.0" fill="rgb(249,91,24)" rx="2" ry="2" />
<text  x="122.48" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::deque (1 samples, 0.15%)</title><rect x="29.1" y="389" width="1.8" height="15.0" fill="rgb(211,229,25)" rx="2" ry="2" />
<text  x="32.12" y="399.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.29%)</title><rect x="136.9" y="677" width="3.4" height="15.0" fill="rgb(211,107,12)" rx="2" ry="2" />
<text  x="139.86" y="687.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (1 samples, 0.15%)</title><rect x="1186.5" y="581" width="1.8" height="15.0" fill="rgb(210,167,16)" rx="2" ry="2" />
<text  x="1189.52" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.15%)</title><rect x="105.6" y="357" width="1.7" height="15.0" fill="rgb(249,156,22)" rx="2" ry="2" />
<text  x="108.58" y="367.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="69.1" y="325" width="1.7" height="15.0" fill="rgb(207,115,10)" rx="2" ry="2" />
<text  x="72.09" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (2 samples, 0.29%)</title><rect x="1031.9" y="341" width="3.4" height="15.0" fill="rgb(252,129,35)" rx="2" ry="2" />
<text  x="1034.86" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (4 samples, 0.59%)</title><rect x="388.9" y="469" width="6.9" height="15.0" fill="rgb(225,23,23)" rx="2" ry="2" />
<text  x="391.85" y="479.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="76.0" y="277" width="1.8" height="15.0" fill="rgb(229,58,34)" rx="2" ry="2" />
<text  x="79.04" y="287.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 11.34%)</title><rect x="10.0" y="693" width="133.8" height="15.0" fill="rgb(254,190,18)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.15%)</title><rect x="39.5" y="325" width="1.8" height="15.0" fill="rgb(232,177,42)" rx="2" ry="2" />
<text  x="42.54" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="760.8" y="389" width="1.7" height="15.0" fill="rgb(235,208,23)" rx="2" ry="2" />
<text  x="763.75" y="399.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.15%)</title><rect x="105.6" y="309" width="1.7" height="15.0" fill="rgb(248,1,4)" rx="2" ry="2" />
<text  x="108.58" y="319.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 10.01%)</title><rect x="11.7" y="677" width="118.2" height="15.0" fill="rgb(244,211,2)" rx="2" ry="2" />
<text  x="14.74" y="687.5" >[unknown]</text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.29%)</title><rect x="36.1" y="341" width="3.4" height="15.0" fill="rgb(251,165,53)" rx="2" ry="2" />
<text  x="39.07" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="86.5" y="133" width="1.7" height="15.0" fill="rgb(229,108,17)" rx="2" ry="2" />
<text  x="89.47" y="143.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (1 samples, 0.15%)</title><rect x="1035.3" y="373" width="1.8" height="15.0" fill="rgb(253,31,11)" rx="2" ry="2" />
<text  x="1038.33" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (9 samples, 1.33%)</title><rect x="441.0" y="453" width="15.6" height="15.0" fill="rgb(234,52,53)" rx="2" ry="2" />
<text  x="443.99" y="463.5" ></text>
</g>
<g >
<title>dht::tri_compare (2 samples, 0.29%)</title><rect x="995.4" y="341" width="3.4" height="15.0" fill="rgb(253,219,2)" rx="2" ry="2" />
<text  x="998.36" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.15%)</title><rect x="1031.9" y="245" width="1.7" height="15.0" fill="rgb(245,7,25)" rx="2" ry="2" />
<text  x="1034.86" y="255.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::to_receivers (1 samples, 0.15%)</title><rect x="18.7" y="437" width="1.7" height="15.0" fill="rgb(253,87,33)" rx="2" ry="2" />
<text  x="21.69" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.15%)</title><rect x="898.0" y="325" width="1.8" height="15.0" fill="rgb(231,84,43)" rx="2" ry="2" />
<text  x="901.04" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.15%)</title><rect x="675.6" y="549" width="1.7" height="15.0" fill="rgb(245,53,32)" rx="2" ry="2" />
<text  x="678.60" y="559.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="103.8" y="213" width="1.8" height="15.0" fill="rgb(219,122,50)" rx="2" ry="2" />
<text  x="106.84" y="223.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.15%)</title><rect x="109.1" y="341" width="1.7" height="15.0" fill="rgb(237,88,17)" rx="2" ry="2" />
<text  x="112.06" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (2 samples, 0.29%)</title><rect x="783.3" y="469" width="3.5" height="15.0" fill="rgb(250,47,22)" rx="2" ry="2" />
<text  x="786.34" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.15%)</title><rect x="753.8" y="405" width="1.7" height="15.0" fill="rgb(248,208,46)" rx="2" ry="2" />
<text  x="756.80" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.15%)</title><rect x="63.9" y="373" width="1.7" height="15.0" fill="rgb(209,8,48)" rx="2" ry="2" />
<text  x="66.87" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (21 samples, 3.09%)</title><rect x="62.1" y="421" width="36.5" height="15.0" fill="rgb(210,26,28)" rx="2" ry="2" />
<text  x="65.14" y="431.5" >cql..</text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_text[abi:cxx11] (1 samples, 0.15%)</title><rect x="44.8" y="341" width="1.7" height="15.0" fill="rgb(248,13,17)" rx="2" ry="2" />
<text  x="47.76" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.15%)</title><rect x="105.6" y="373" width="1.7" height="15.0" fill="rgb(245,143,40)" rx="2" ry="2" />
<text  x="108.58" y="383.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (1 samples, 0.15%)</title><rect x="15.2" y="485" width="1.8" height="15.0" fill="rgb(236,104,31)" rx="2" ry="2" />
<text  x="18.21" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.15%)</title><rect x="84.7" y="325" width="1.8" height="15.0" fill="rgb(239,38,36)" rx="2" ry="2" />
<text  x="87.73" y="335.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.29%)</title><rect x="36.1" y="309" width="3.4" height="15.0" fill="rgb(239,144,14)" rx="2" ry="2" />
<text  x="39.07" y="319.5" ></text>
</g>
<g >
<title>database::do_apply (4 samples, 0.59%)</title><rect x="1024.9" y="501" width="7.0" height="15.0" fill="rgb(236,196,27)" rx="2" ry="2" />
<text  x="1027.90" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="69.1" y="373" width="1.7" height="15.0" fill="rgb(246,105,40)" rx="2" ry="2" />
<text  x="72.09" y="383.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (2 samples, 0.29%)</title><rect x="531.4" y="437" width="3.4" height="15.0" fill="rgb(246,6,12)" rx="2" ry="2" />
<text  x="534.35" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.15%)</title><rect x="98.6" y="309" width="1.8" height="15.0" fill="rgb(212,150,32)" rx="2" ry="2" />
<text  x="101.63" y="319.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.15%)</title><rect x="684.3" y="533" width="1.7" height="15.0" fill="rgb(246,35,15)" rx="2" ry="2" />
<text  x="687.29" y="543.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (1 samples, 0.15%)</title><rect x="456.6" y="469" width="1.8" height="15.0" fill="rgb(223,156,7)" rx="2" ry="2" />
<text  x="459.63" y="479.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.15%)</title><rect x="331.5" y="373" width="1.7" height="15.0" fill="rgb(234,179,17)" rx="2" ry="2" />
<text  x="334.50" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (54 samples, 7.95%)</title><rect x="498.3" y="501" width="93.9" height="15.0" fill="rgb(229,78,45)" rx="2" ry="2" />
<text  x="501.34" y="511.5" >std::_Funct..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.15%)</title><rect x="145.6" y="581" width="1.7" height="15.0" fill="rgb(224,151,23)" rx="2" ry="2" />
<text  x="148.55" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.15%)</title><rect x="69.1" y="341" width="1.7" height="15.0" fill="rgb(227,216,50)" rx="2" ry="2" />
<text  x="72.09" y="351.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.44%)</title><rect x="451.4" y="421" width="5.2" height="15.0" fill="rgb(252,223,8)" rx="2" ry="2" />
<text  x="454.41" y="431.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (36 samples, 5.30%)</title><rect x="1124.0" y="693" width="62.5" height="15.0" fill="rgb(222,168,20)" rx="2" ry="2" />
<text  x="1126.96" y="703.5" >sched_..</text>
</g>
<g >
<title>query_result_builder::consume (14 samples, 2.06%)</title><rect x="401.0" y="469" width="24.3" height="15.0" fill="rgb(226,124,11)" rx="2" ry="2" />
<text  x="404.02" y="479.5" >q..</text>
</g>
<g >
<title>__libc_write (1 samples, 0.15%)</title><rect x="1186.5" y="677" width="1.8" height="15.0" fill="rgb(209,7,42)" rx="2" ry="2" />
<text  x="1189.52" y="687.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (3 samples, 0.44%)</title><rect x="583.5" y="437" width="5.2" height="15.0" fill="rgb(247,209,22)" rx="2" ry="2" />
<text  x="586.49" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (3 samples, 0.44%)</title><rect x="36.1" y="389" width="5.2" height="15.0" fill="rgb(252,159,14)" rx="2" ry="2" />
<text  x="39.07" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (5 samples, 0.74%)</title><rect x="939.7" y="309" width="8.7" height="15.0" fill="rgb(221,205,4)" rx="2" ry="2" />
<text  x="942.75" y="319.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.44%)</title><rect x="268.9" y="373" width="5.3" height="15.0" fill="rgb(249,114,45)" rx="2" ry="2" />
<text  x="271.94" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="774.7" y="517" width="1.7" height="15.0" fill="rgb(221,65,12)" rx="2" ry="2" />
<text  x="777.65" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.15%)</title><rect x="29.1" y="325" width="1.8" height="15.0" fill="rgb(242,70,2)" rx="2" ry="2" />
<text  x="32.12" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="858.1" y="437" width="1.7" height="15.0" fill="rgb(222,63,30)" rx="2" ry="2" />
<text  x="861.07" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_Deque_base (1 samples, 0.15%)</title><rect x="29.1" y="373" width="1.8" height="15.0" fill="rgb(209,190,14)" rx="2" ry="2" />
<text  x="32.12" y="383.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.15%)</title><rect x="724.3" y="469" width="1.7" height="15.0" fill="rgb(225,17,34)" rx="2" ry="2" />
<text  x="727.26" y="479.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_tokenStartLine (1 samples, 0.15%)</title><rect x="41.3" y="357" width="1.7" height="15.0" fill="rgb(209,189,15)" rx="2" ry="2" />
<text  x="44.28" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.15%)</title><rect x="72.6" y="309" width="1.7" height="15.0" fill="rgb(244,132,51)" rx="2" ry="2" />
<text  x="75.56" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.15%)</title><rect x="67.3" y="405" width="1.8" height="15.0" fill="rgb(230,153,34)" rx="2" ry="2" />
<text  x="70.35" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="63.9" y="245" width="1.7" height="15.0" fill="rgb(241,98,17)" rx="2" ry="2" />
<text  x="66.87" y="255.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (8 samples, 1.18%)</title><rect x="157.7" y="565" width="13.9" height="15.0" fill="rgb(215,12,20)" rx="2" ry="2" />
<text  x="160.72" y="575.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (6 samples, 0.88%)</title><rect x="86.5" y="373" width="10.4" height="15.0" fill="rgb(211,101,9)" rx="2" ry="2" />
<text  x="89.47" y="383.5" ></text>
</g>
<g >
<title>database::query (19 samples, 2.80%)</title><rect x="918.9" y="341" width="33.0" height="15.0" fill="rgb(216,225,18)" rx="2" ry="2" />
<text  x="921.90" y="351.5" >da..</text>
</g>
<g >
<title>cql3_parser::CqlLexer::~CqlLexer (1 samples, 0.15%)</title><rect x="27.4" y="501" width="1.7" height="15.0" fill="rgb(223,206,28)" rx="2" ry="2" />
<text  x="30.38" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="79.5" y="357" width="3.5" height="15.0" fill="rgb(214,93,9)" rx="2" ry="2" />
<text  x="82.51" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (4 samples, 0.59%)</title><rect x="665.2" y="565" width="6.9" height="15.0" fill="rgb(235,88,50)" rx="2" ry="2" />
<text  x="668.17" y="575.5" ></text>
</g>
<g >
<title>row::row (12 samples, 1.77%)</title><rect x="308.9" y="357" width="20.9" height="15.0" fill="rgb(229,151,44)" rx="2" ry="2" />
<text  x="311.91" y="367.5" ></text>
</g>
<g >
<title>db::block_for (3 samples, 0.44%)</title><rect x="972.8" y="405" width="5.2" height="15.0" fill="rgb(226,74,36)" rx="2" ry="2" />
<text  x="975.77" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="644.3" y="549" width="1.8" height="15.0" fill="rgb(238,171,0)" rx="2" ry="2" />
<text  x="647.32" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="51.7" y="421" width="1.7" height="15.0" fill="rgb(250,26,18)" rx="2" ry="2" />
<text  x="54.71" y="431.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (22 samples, 3.24%)</title><rect x="732.9" y="485" width="38.3" height="15.0" fill="rgb(212,122,36)" rx="2" ry="2" />
<text  x="735.95" y="495.5" >ser..</text>
</g>
<g >
<title>__start_context (67 samples, 9.87%)</title><rect x="11.7" y="661" width="116.5" height="15.0" fill="rgb(228,149,53)" rx="2" ry="2" />
<text  x="14.74" y="671.5" >__start_context</text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (54 samples, 7.95%)</title><rect x="366.3" y="485" width="93.8" height="15.0" fill="rgb(237,40,39)" rx="2" ry="2" />
<text  x="369.26" y="495.5" >seastar::do..</text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="587.0" y="421" width="1.7" height="15.0" fill="rgb(215,124,19)" rx="2" ry="2" />
<text  x="589.97" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.29%)</title><rect x="79.5" y="373" width="3.5" height="15.0" fill="rgb(236,63,12)" rx="2" ry="2" />
<text  x="82.51" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (29 samples, 4.27%)</title><rect x="279.4" y="373" width="50.4" height="15.0" fill="rgb(233,202,25)" rx="2" ry="2" />
<text  x="282.37" y="383.5" >parti..</text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.29%)</title><rect x="767.7" y="453" width="3.5" height="15.0" fill="rgb(221,29,22)" rx="2" ry="2" />
<text  x="770.70" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.29%)</title><rect x="102.1" y="389" width="3.5" height="15.0" fill="rgb(239,44,40)" rx="2" ry="2" />
<text  x="105.11" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.15%)</title><rect x="837.2" y="389" width="1.8" height="15.0" fill="rgb(211,15,7)" rx="2" ry="2" />
<text  x="840.22" y="399.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.15%)</title><rect x="955.4" y="357" width="1.7" height="15.0" fill="rgb(226,165,26)" rx="2" ry="2" />
<text  x="958.39" y="367.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (1 samples, 0.15%)</title><rect x="124.7" y="517" width="1.7" height="15.0" fill="rgb(250,119,13)" rx="2" ry="2" />
<text  x="127.70" y="527.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="69.1" y="357" width="1.7" height="15.0" fill="rgb(207,15,40)" rx="2" ry="2" />
<text  x="72.09" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (48 samples, 7.07%)</title><rect x="262.0" y="437" width="83.4" height="15.0" fill="rgb(217,123,5)" rx="2" ry="2" />
<text  x="264.99" y="447.5" >partition..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.15%)</title><rect x="91.7" y="341" width="1.7" height="15.0" fill="rgb(229,138,46)" rx="2" ry="2" />
<text  x="94.68" y="351.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (6 samples, 0.88%)</title><rect x="182.0" y="533" width="10.5" height="15.0" fill="rgb(206,211,8)" rx="2" ry="2" />
<text  x="185.05" y="543.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="515.7" y="437" width="1.8" height="15.0" fill="rgb(246,4,33)" rx="2" ry="2" />
<text  x="518.71" y="447.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (2 samples, 0.29%)</title><rect x="338.5" y="389" width="3.4" height="15.0" fill="rgb(209,19,37)" rx="2" ry="2" />
<text  x="341.45" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="63.9" y="261" width="1.7" height="15.0" fill="rgb(212,76,32)" rx="2" ry="2" />
<text  x="66.87" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.44%)</title><rect x="1031.9" y="533" width="5.2" height="15.0" fill="rgb(227,159,44)" rx="2" ry="2" />
<text  x="1034.86" y="543.5" ></text>
</g>
<g >
<title>mutation_querier::consume (13 samples, 1.91%)</title><rect x="402.8" y="453" width="22.5" height="15.0" fill="rgb(232,185,38)" rx="2" ry="2" />
<text  x="405.75" y="463.5" >m..</text>
</g>
<g >
<title>table::make_reader (1 samples, 0.15%)</title><rect x="592.2" y="501" width="1.7" height="15.0" fill="rgb(212,185,42)" rx="2" ry="2" />
<text  x="595.18" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="65.6" y="229" width="1.7" height="15.0" fill="rgb(233,196,31)" rx="2" ry="2" />
<text  x="68.61" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (67 samples, 9.87%)</title><rect x="11.7" y="629" width="116.5" height="15.0" fill="rgb(240,2,21)" rx="2" ry="2" />
<text  x="14.74" y="639.5" >seastar::nonco..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.15%)</title><rect x="63.9" y="357" width="1.7" height="15.0" fill="rgb(226,74,48)" rx="2" ry="2" />
<text  x="66.87" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.88%)</title><rect x="298.5" y="341" width="10.4" height="15.0" fill="rgb(221,172,53)" rx="2" ry="2" />
<text  x="301.48" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (2 samples, 0.29%)</title><rect x="783.3" y="533" width="3.5" height="15.0" fill="rgb(247,40,21)" rx="2" ry="2" />
<text  x="786.34" y="543.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.59%)</title><rect x="129.9" y="661" width="7.0" height="15.0" fill="rgb(207,225,18)" rx="2" ry="2" />
<text  x="132.91" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.15%)</title><rect x="107.3" y="357" width="1.8" height="15.0" fill="rgb(212,154,22)" rx="2" ry="2" />
<text  x="110.32" y="367.5" ></text>
</g>
<g >
<title>auth::get_permissions (12 samples, 1.77%)</title><rect x="741.6" y="437" width="20.9" height="15.0" fill="rgb(210,128,15)" rx="2" ry="2" />
<text  x="744.63" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="39.5" y="277" width="1.8" height="15.0" fill="rgb(237,184,41)" rx="2" ry="2" />
<text  x="42.54" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="63.9" y="277" width="1.7" height="15.0" fill="rgb(209,30,41)" rx="2" ry="2" />
<text  x="66.87" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::attributes::raw&gt;, void&gt; (1 samples, 0.15%)</title><rect x="112.5" y="421" width="1.8" height="15.0" fill="rgb(238,11,14)" rx="2" ry="2" />
<text  x="115.53" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (6 samples, 0.88%)</title><rect x="680.8" y="549" width="10.4" height="15.0" fill="rgb(232,10,36)" rx="2" ry="2" />
<text  x="683.81" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::allocate (1 samples, 0.15%)</title><rect x="39.5" y="293" width="1.8" height="15.0" fill="rgb(235,9,41)" rx="2" ry="2" />
<text  x="42.54" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.15%)</title><rect x="661.7" y="549" width="1.7" height="15.0" fill="rgb(212,226,11)" rx="2" ry="2" />
<text  x="664.69" y="559.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.15%)</title><rect x="588.7" y="437" width="1.7" height="15.0" fill="rgb(235,138,20)" rx="2" ry="2" />
<text  x="591.70" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="736.4" y="453" width="1.8" height="15.0" fill="rgb(238,222,10)" rx="2" ry="2" />
<text  x="739.42" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="51.7" y="405" width="1.7" height="15.0" fill="rgb(246,165,31)" rx="2" ry="2" />
<text  x="54.71" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (26 samples, 3.83%)</title><rect x="53.4" y="437" width="45.2" height="15.0" fill="rgb(227,74,45)" rx="2" ry="2" />
<text  x="56.45" y="447.5" >cql3..</text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::StackType (1 samples, 0.15%)</title><rect x="29.1" y="405" width="1.8" height="15.0" fill="rgb(222,46,47)" rx="2" ry="2" />
<text  x="32.12" y="415.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (2 samples, 0.29%)</title><rect x="783.3" y="405" width="3.5" height="15.0" fill="rgb(244,6,15)" rx="2" ry="2" />
<text  x="786.34" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_base::shared_ptr_count_base (1 samples, 0.15%)</title><rect x="60.4" y="373" width="1.7" height="15.0" fill="rgb(237,207,25)" rx="2" ry="2" />
<text  x="63.40" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (6 samples, 0.88%)</title><rect x="41.3" y="389" width="10.4" height="15.0" fill="rgb(211,158,15)" rx="2" ry="2" />
<text  x="44.28" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.15%)</title><rect x="277.6" y="373" width="1.8" height="15.0" fill="rgb(234,59,30)" rx="2" ry="2" />
<text  x="280.63" y="383.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="74.3" y="325" width="1.7" height="15.0" fill="rgb(248,8,54)" rx="2" ry="2" />
<text  x="77.30" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.15%)</title><rect x="50.0" y="341" width="1.7" height="15.0" fill="rgb(226,139,9)" rx="2" ry="2" />
<text  x="52.97" y="351.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="56.9" y="229" width="1.8" height="15.0" fill="rgb(210,93,0)" rx="2" ry="2" />
<text  x="59.92" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="938.0" y="293" width="1.7" height="15.0" fill="rgb(253,69,44)" rx="2" ry="2" />
<text  x="941.01" y="303.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (2 samples, 0.29%)</title><rect x="844.2" y="437" width="3.4" height="15.0" fill="rgb(209,145,27)" rx="2" ry="2" />
<text  x="847.17" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="265.5" y="405" width="1.7" height="15.0" fill="rgb(223,65,51)" rx="2" ry="2" />
<text  x="268.46" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.29%)</title><rect x="580.0" y="421" width="3.5" height="15.0" fill="rgb(241,129,0)" rx="2" ry="2" />
<text  x="583.01" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (2 samples, 0.29%)</title><rect x="668.6" y="549" width="3.5" height="15.0" fill="rgb(235,2,32)" rx="2" ry="2" />
<text  x="671.65" y="559.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="362.8" y="485" width="3.5" height="15.0" fill="rgb(215,56,15)" rx="2" ry="2" />
<text  x="365.78" y="495.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.44%)</title><rect x="354.1" y="501" width="5.2" height="15.0" fill="rgb(211,172,10)" rx="2" ry="2" />
<text  x="357.09" y="511.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (149 samples, 21.94%)</title><rect x="781.6" y="565" width="258.9" height="15.0" fill="rgb(214,92,16)" rx="2" ry="2" />
<text  x="784.61" y="575.5" >seastar::lambda_task&lt;seastar::exec..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="209.9" y="517" width="1.7" height="15.0" fill="rgb(241,15,31)" rx="2" ry="2" />
<text  x="212.85" y="527.5" ></text>
</g>
<g >
<title>operator new (7 samples, 1.03%)</title><rect x="924.1" y="325" width="12.2" height="15.0" fill="rgb(251,70,34)" rx="2" ry="2" />
<text  x="927.11" y="335.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.15%)</title><rect x="536.6" y="437" width="1.7" height="15.0" fill="rgb(222,229,23)" rx="2" ry="2" />
<text  x="539.57" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (132 samples, 19.44%)</title><rect x="792.0" y="501" width="229.4" height="15.0" fill="rgb(247,6,31)" rx="2" ry="2" />
<text  x="795.03" y="511.5" >cql3::statements::select_state..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (16 samples, 2.36%)</title><rect x="812.9" y="453" width="27.8" height="15.0" fill="rgb(208,138,40)" rx="2" ry="2" />
<text  x="815.89" y="463.5" >_..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::attributes::raw&gt; (1 samples, 0.15%)</title><rect x="112.5" y="437" width="1.8" height="15.0" fill="rgb(243,81,53)" rx="2" ry="2" />
<text  x="115.53" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (6 samples, 0.88%)</title><rect x="41.3" y="373" width="10.4" height="15.0" fill="rgb(236,28,31)" rx="2" ry="2" />
<text  x="44.28" y="383.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (35 samples, 5.15%)</title><rect x="710.4" y="517" width="60.8" height="15.0" fill="rgb(233,99,49)" rx="2" ry="2" />
<text  x="713.35" y="527.5" >cql3::..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="517.5" y="437" width="1.7" height="15.0" fill="rgb(207,191,13)" rx="2" ry="2" />
<text  x="520.45" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.15%)</title><rect x="112.5" y="405" width="1.8" height="15.0" fill="rgb(254,180,16)" rx="2" ry="2" />
<text  x="115.53" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.29%)</title><rect x="102.1" y="341" width="3.5" height="15.0" fill="rgb(233,144,33)" rx="2" ry="2" />
<text  x="105.11" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (5 samples, 0.74%)</title><rect x="1002.3" y="469" width="8.7" height="15.0" fill="rgb(211,229,51)" rx="2" ry="2" />
<text  x="1005.31" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (42 samples, 6.19%)</title><rect x="884.1" y="421" width="73.0" height="15.0" fill="rgb(236,2,3)" rx="2" ry="2" />
<text  x="887.14" y="431.5" >service:..</text>
</g>
<g >
<title>cql3::expr::constant::make_bool (1 samples, 0.15%)</title><rect x="20.4" y="437" width="1.8" height="15.0" fill="rgb(247,110,25)" rx="2" ry="2" />
<text  x="23.43" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.15%)</title><rect x="81.3" y="325" width="1.7" height="15.0" fill="rgb(239,214,12)" rx="2" ry="2" />
<text  x="84.25" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.15%)</title><rect x="58.7" y="357" width="1.7" height="15.0" fill="rgb(229,15,26)" rx="2" ry="2" />
<text  x="61.66" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="98.6" y="373" width="3.5" height="15.0" fill="rgb(208,156,10)" rx="2" ry="2" />
<text  x="101.63" y="383.5" ></text>
</g>
<g >
<title>service::client_state::has_access (14 samples, 2.06%)</title><rect x="738.2" y="469" width="24.3" height="15.0" fill="rgb(242,52,16)" rx="2" ry="2" />
<text  x="741.16" y="479.5" >s..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.15%)</title><rect x="458.4" y="469" width="1.7" height="15.0" fill="rgb(226,103,26)" rx="2" ry="2" />
<text  x="461.37" y="479.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (1 samples, 0.15%)</title><rect x="1021.4" y="501" width="1.8" height="15.0" fill="rgb(233,201,4)" rx="2" ry="2" />
<text  x="1024.43" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="540.0" y="421" width="1.8" height="15.0" fill="rgb(231,44,14)" rx="2" ry="2" />
<text  x="543.04" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.15%)</title><rect x="686.0" y="533" width="1.8" height="15.0" fill="rgb(226,105,44)" rx="2" ry="2" />
<text  x="689.02" y="543.5" ></text>
</g>
<g >
<title>table::apply (3 samples, 0.44%)</title><rect x="1024.9" y="453" width="5.2" height="15.0" fill="rgb(246,11,13)" rx="2" ry="2" />
<text  x="1027.90" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="86.5" y="149" width="1.7" height="15.0" fill="rgb(226,69,17)" rx="2" ry="2" />
<text  x="89.47" y="159.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokenIndex (1 samples, 0.15%)</title><rect x="34.3" y="405" width="1.8" height="15.0" fill="rgb(247,125,21)" rx="2" ry="2" />
<text  x="37.33" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (9 samples, 1.33%)</title><rect x="441.0" y="437" width="15.6" height="15.0" fill="rgb(251,35,44)" rx="2" ry="2" />
<text  x="443.99" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (1 samples, 0.15%)</title><rect x="72.6" y="277" width="1.7" height="15.0" fill="rgb(226,130,5)" rx="2" ry="2" />
<text  x="75.56" y="287.5" ></text>
</g>
<g >
<title>query::querier&lt; (135 samples, 19.88%)</title><rect x="229.0" y="517" width="234.6" height="15.0" fill="rgb(233,121,8)" rx="2" ry="2" />
<text  x="231.97" y="527.5" >query::querier&lt;</text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.74%)</title><rect x="891.1" y="389" width="8.7" height="15.0" fill="rgb(235,213,40)" rx="2" ry="2" />
<text  x="894.09" y="399.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.15%)</title><rect x="222.0" y="517" width="1.8" height="15.0" fill="rgb(229,14,23)" rx="2" ry="2" />
<text  x="225.02" y="527.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.29%)</title><rect x="102.1" y="373" width="3.5" height="15.0" fill="rgb(250,68,38)" rx="2" ry="2" />
<text  x="105.11" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (1 samples, 0.15%)</title><rect x="29.1" y="485" width="1.8" height="15.0" fill="rgb(251,114,46)" rx="2" ry="2" />
<text  x="32.12" y="495.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (1 samples, 0.15%)</title><rect x="463.6" y="501" width="1.7" height="15.0" fill="rgb(238,135,43)" rx="2" ry="2" />
<text  x="466.58" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="1082.3" y="565" width="1.7" height="15.0" fill="rgb(217,202,18)" rx="2" ry="2" />
<text  x="1085.25" y="575.5" ></text>
</g>
<g >
<title>schema_registry::get (2 samples, 0.29%)</title><rect x="880.7" y="421" width="3.4" height="15.0" fill="rgb(254,85,44)" rx="2" ry="2" />
<text  x="883.66" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::vector (1 samples, 0.15%)</title><rect x="114.3" y="437" width="1.7" height="15.0" fill="rgb(225,15,38)" rx="2" ry="2" />
<text  x="117.27" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="357.6" y="485" width="1.7" height="15.0" fill="rgb(234,167,33)" rx="2" ry="2" />
<text  x="360.57" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.15%)</title><rect x="98.6" y="325" width="1.8" height="15.0" fill="rgb(221,205,5)" rx="2" ry="2" />
<text  x="101.63" y="335.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (1 samples, 0.15%)</title><rect x="647.8" y="549" width="1.7" height="15.0" fill="rgb(229,206,52)" rx="2" ry="2" />
<text  x="650.79" y="559.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (1 samples, 0.15%)</title><rect x="1030.1" y="453" width="1.8" height="15.0" fill="rgb(211,139,12)" rx="2" ry="2" />
<text  x="1033.12" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (3 samples, 0.44%)</title><rect x="805.9" y="485" width="5.2" height="15.0" fill="rgb(207,150,34)" rx="2" ry="2" />
<text  x="808.94" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.15%)</title><rect x="96.9" y="293" width="1.7" height="15.0" fill="rgb(249,81,6)" rx="2" ry="2" />
<text  x="99.89" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (5 samples, 0.74%)</title><rect x="830.3" y="405" width="8.7" height="15.0" fill="rgb(208,102,6)" rx="2" ry="2" />
<text  x="833.27" y="415.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (2 samples, 0.29%)</title><rect x="291.5" y="341" width="3.5" height="15.0" fill="rgb(248,34,47)" rx="2" ry="2" />
<text  x="294.53" y="351.5" ></text>
</g>
<g >
<title>seastar::app_template::run (541 samples, 79.68%)</title><rect x="143.8" y="661" width="940.2" height="15.0" fill="rgb(252,149,38)" rx="2" ry="2" />
<text  x="146.81" y="671.5" >seastar::app_template::run</text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="828.5" y="405" width="1.8" height="15.0" fill="rgb(239,62,6)" rx="2" ry="2" />
<text  x="831.53" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (3 samples, 0.44%)</title><rect x="552.2" y="421" width="5.2" height="15.0" fill="rgb(210,160,21)" rx="2" ry="2" />
<text  x="555.21" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.15%)</title><rect x="461.8" y="501" width="1.8" height="15.0" fill="rgb(229,163,22)" rx="2" ry="2" />
<text  x="464.84" y="511.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (4 samples, 0.59%)</title><rect x="129.9" y="677" width="7.0" height="15.0" fill="rgb(245,64,24)" rx="2" ry="2" />
<text  x="132.91" y="687.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.29%)</title><rect x="86.5" y="309" width="3.4" height="15.0" fill="rgb(237,187,0)" rx="2" ry="2" />
<text  x="89.47" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.15%)</title><rect x="555.7" y="405" width="1.7" height="15.0" fill="rgb(232,70,52)" rx="2" ry="2" />
<text  x="558.68" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="1063.1" y="549" width="1.8" height="15.0" fill="rgb(250,104,16)" rx="2" ry="2" />
<text  x="1066.14" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="757.3" y="405" width="5.2" height="15.0" fill="rgb(229,3,48)" rx="2" ry="2" />
<text  x="760.28" y="415.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="91.7" y="309" width="1.7" height="15.0" fill="rgb(220,27,6)" rx="2" ry="2" />
<text  x="94.68" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="25.6" y="469" width="1.8" height="15.0" fill="rgb(219,205,8)" rx="2" ry="2" />
<text  x="28.64" y="479.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (8 samples, 1.18%)</title><rect x="576.5" y="453" width="13.9" height="15.0" fill="rgb(223,139,44)" rx="2" ry="2" />
<text  x="579.54" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.29%)</title><rect x="83.0" y="357" width="3.5" height="15.0" fill="rgb(240,141,32)" rx="2" ry="2" />
<text  x="85.99" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.15%)</title><rect x="119.5" y="437" width="1.7" height="15.0" fill="rgb(208,47,5)" rx="2" ry="2" />
<text  x="122.48" y="447.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="88.2" y="213" width="1.7" height="15.0" fill="rgb(242,70,40)" rx="2" ry="2" />
<text  x="91.20" y="223.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.15%)</title><rect x="1028.4" y="421" width="1.7" height="15.0" fill="rgb(222,125,37)" rx="2" ry="2" />
<text  x="1031.38" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.15%)</title><rect x="632.2" y="501" width="1.7" height="15.0" fill="rgb(224,88,12)" rx="2" ry="2" />
<text  x="635.15" y="511.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (11 samples, 1.62%)</title><rect x="672.1" y="565" width="19.1" height="15.0" fill="rgb(235,107,33)" rx="2" ry="2" />
<text  x="675.12" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.15%)</title><rect x="65.6" y="373" width="1.7" height="15.0" fill="rgb(214,71,5)" rx="2" ry="2" />
<text  x="68.61" y="383.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (3 samples, 0.44%)</title><rect x="1031.9" y="485" width="5.2" height="15.0" fill="rgb(238,156,20)" rx="2" ry="2" />
<text  x="1034.86" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.15%)</title><rect x="898.0" y="341" width="1.8" height="15.0" fill="rgb(228,150,20)" rx="2" ry="2" />
<text  x="901.04" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="611.3" y="549" width="1.7" height="15.0" fill="rgb(223,167,4)" rx="2" ry="2" />
<text  x="614.30" y="559.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.15%)</title><rect x="599.1" y="501" width="1.8" height="15.0" fill="rgb(235,45,20)" rx="2" ry="2" />
<text  x="602.13" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (4 samples, 0.59%)</title><rect x="840.7" y="469" width="6.9" height="15.0" fill="rgb(214,16,15)" rx="2" ry="2" />
<text  x="843.69" y="479.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (3 samples, 0.44%)</title><rect x="268.9" y="389" width="5.3" height="15.0" fill="rgb(238,175,4)" rx="2" ry="2" />
<text  x="271.94" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.15%)</title><rect x="43.0" y="245" width="1.8" height="15.0" fill="rgb(212,200,10)" rx="2" ry="2" />
<text  x="46.02" y="255.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Lexer (1 samples, 0.15%)</title><rect x="25.6" y="501" width="1.8" height="15.0" fill="rgb(250,91,36)" rx="2" ry="2" />
<text  x="28.64" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.29%)</title><rect x="83.0" y="373" width="3.5" height="15.0" fill="rgb(234,120,44)" rx="2" ry="2" />
<text  x="85.99" y="383.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (1 samples, 0.15%)</title><rect x="124.7" y="485" width="1.7" height="15.0" fill="rgb(231,140,28)" rx="2" ry="2" />
<text  x="127.70" y="495.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (14 samples, 2.06%)</title><rect x="738.2" y="453" width="24.3" height="15.0" fill="rgb(237,203,16)" rx="2" ry="2" />
<text  x="741.16" y="463.5" >s..</text>
</g>
<g >
<title>cql3::query_processor::get_statement (63 samples, 9.28%)</title><rect x="15.2" y="533" width="109.5" height="15.0" fill="rgb(219,200,4)" rx="2" ry="2" />
<text  x="18.21" y="543.5" >cql3::query_p..</text>
</g>
<g >
<title>schema::column_at (2 samples, 0.29%)</title><rect x="305.4" y="325" width="3.5" height="15.0" fill="rgb(209,87,50)" rx="2" ry="2" />
<text  x="308.43" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.15%)</title><rect x="91.7" y="245" width="1.7" height="15.0" fill="rgb(246,182,5)" rx="2" ry="2" />
<text  x="94.68" y="255.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.15%)</title><rect x="62.1" y="405" width="1.8" height="15.0" fill="rgb(250,41,41)" rx="2" ry="2" />
<text  x="65.14" y="415.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (1 samples, 0.15%)</title><rect x="971.0" y="405" width="1.8" height="15.0" fill="rgb(251,52,8)" rx="2" ry="2" />
<text  x="974.03" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.74%)</title><rect x="1002.3" y="437" width="8.7" height="15.0" fill="rgb(216,25,11)" rx="2" ry="2" />
<text  x="1005.31" y="447.5" ></text>
</g>
<g >
<title>seastar::writeable_eventfd::signal (1 samples, 0.15%)</title><rect x="1186.5" y="693" width="1.8" height="15.0" fill="rgb(211,144,45)" rx="2" ry="2" />
<text  x="1189.52" y="703.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.15%)</title><rect x="69.1" y="389" width="1.7" height="15.0" fill="rgb(224,193,40)" rx="2" ry="2" />
<text  x="72.09" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="696.5" y="533" width="3.4" height="15.0" fill="rgb(220,161,2)" rx="2" ry="2" />
<text  x="699.45" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.15%)</title><rect x="91.7" y="325" width="1.7" height="15.0" fill="rgb(224,15,26)" rx="2" ry="2" />
<text  x="94.68" y="335.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (2 samples, 0.29%)</title><rect x="1071.8" y="549" width="3.5" height="15.0" fill="rgb(253,151,46)" rx="2" ry="2" />
<text  x="1074.83" y="559.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="1014.5" y="485" width="1.7" height="15.0" fill="rgb(213,161,5)" rx="2" ry="2" />
<text  x="1017.48" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.44%)</title><rect x="166.4" y="533" width="5.2" height="15.0" fill="rgb(207,209,3)" rx="2" ry="2" />
<text  x="169.41" y="543.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.15%)</title><rect x="180.3" y="533" width="1.7" height="15.0" fill="rgb(212,38,47)" rx="2" ry="2" />
<text  x="183.31" y="543.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (5 samples, 0.74%)</title><rect x="656.5" y="565" width="8.7" height="15.0" fill="rgb(219,1,13)" rx="2" ry="2" />
<text  x="659.48" y="575.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.15%)</title><rect x="562.6" y="421" width="1.8" height="15.0" fill="rgb(225,24,49)" rx="2" ry="2" />
<text  x="565.64" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true, true&gt;::operator= (1 samples, 0.15%)</title><rect x="121.2" y="437" width="1.8" height="15.0" fill="rgb(207,0,42)" rx="2" ry="2" />
<text  x="124.22" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (3 samples, 0.44%)</title><rect x="36.1" y="373" width="5.2" height="15.0" fill="rgb(233,198,8)" rx="2" ry="2" />
<text  x="39.07" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (23 samples, 3.39%)</title><rect x="915.4" y="357" width="40.0" height="15.0" fill="rgb(248,179,44)" rx="2" ry="2" />
<text  x="918.42" y="367.5" >sea..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.15%)</title><rect x="105.6" y="341" width="1.7" height="15.0" fill="rgb(249,46,44)" rx="2" ry="2" />
<text  x="108.58" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (1 samples, 0.15%)</title><rect x="15.2" y="469" width="1.8" height="15.0" fill="rgb(245,219,18)" rx="2" ry="2" />
<text  x="18.21" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="136.9" y="549" width="1.7" height="15.0" fill="rgb(239,77,43)" rx="2" ry="2" />
<text  x="139.86" y="559.5" ></text>
</g>
<g >
<title>database::find_keyspace (1 samples, 0.15%)</title><rect x="969.3" y="405" width="1.7" height="15.0" fill="rgb(210,190,53)" rx="2" ry="2" />
<text  x="972.29" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.15%)</title><rect x="105.6" y="325" width="1.7" height="15.0" fill="rgb(241,60,0)" rx="2" ry="2" />
<text  x="108.58" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.15%)</title><rect x="138.6" y="613" width="1.7" height="15.0" fill="rgb(221,218,6)" rx="2" ry="2" />
<text  x="141.60" y="623.5" ></text>
</g>
<g >
<title>row_cache::make_reader (10 samples, 1.47%)</title><rect x="574.8" y="469" width="17.4" height="15.0" fill="rgb(240,82,29)" rx="2" ry="2" />
<text  x="577.80" y="479.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::operation::raw_update*, false&gt;::_M_head (1 samples, 0.15%)</title><rect x="72.6" y="213" width="1.7" height="15.0" fill="rgb(254,156,52)" rx="2" ry="2" />
<text  x="75.56" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="103.8" y="181" width="1.8" height="15.0" fill="rgb(208,11,38)" rx="2" ry="2" />
<text  x="106.84" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.15%)</title><rect x="43.0" y="293" width="1.8" height="15.0" fill="rgb(244,3,33)" rx="2" ry="2" />
<text  x="46.02" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="215.1" y="501" width="1.7" height="15.0" fill="rgb(227,112,20)" rx="2" ry="2" />
<text  x="218.07" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="515.7" y="421" width="1.8" height="15.0" fill="rgb(208,81,46)" rx="2" ry="2" />
<text  x="518.71" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (8 samples, 1.18%)</title><rect x="248.1" y="437" width="13.9" height="15.0" fill="rgb(245,179,43)" rx="2" ry="2" />
<text  x="251.09" y="447.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (2 samples, 0.29%)</title><rect x="571.3" y="453" width="3.5" height="15.0" fill="rgb(250,69,17)" rx="2" ry="2" />
<text  x="574.33" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.15%)</title><rect x="58.7" y="261" width="1.7" height="15.0" fill="rgb(248,129,19)" rx="2" ry="2" />
<text  x="61.66" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="58.7" y="309" width="1.7" height="15.0" fill="rgb(220,65,30)" rx="2" ry="2" />
<text  x="61.66" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="67.3" y="325" width="1.8" height="15.0" fill="rgb(206,65,9)" rx="2" ry="2" />
<text  x="70.35" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.59%)</title><rect x="388.9" y="437" width="6.9" height="15.0" fill="rgb(249,160,8)" rx="2" ry="2" />
<text  x="391.85" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (16 samples, 2.36%)</title><rect x="812.9" y="437" width="27.8" height="15.0" fill="rgb(206,211,23)" rx="2" ry="2" />
<text  x="815.89" y="447.5" >_..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.15%)</title><rect x="91.7" y="293" width="1.7" height="15.0" fill="rgb(223,147,5)" rx="2" ry="2" />
<text  x="94.68" y="303.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="76.0" y="245" width="1.8" height="15.0" fill="rgb(209,200,45)" rx="2" ry="2" />
<text  x="79.04" y="255.5" ></text>
</g>
<g >
<title>query_state::query_state (4 samples, 0.59%)</title><rect x="593.9" y="517" width="7.0" height="15.0" fill="rgb(251,2,36)" rx="2" ry="2" />
<text  x="596.92" y="527.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.74%)</title><rect x="891.1" y="405" width="8.7" height="15.0" fill="rgb(216,50,38)" rx="2" ry="2" />
<text  x="894.09" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (2 samples, 0.29%)</title><rect x="783.3" y="453" width="3.5" height="15.0" fill="rgb(212,133,51)" rx="2" ry="2" />
<text  x="786.34" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (58 samples, 8.54%)</title><rect x="244.6" y="453" width="100.8" height="15.0" fill="rgb(249,113,6)" rx="2" ry="2" />
<text  x="247.61" y="463.5" >mutation_rea..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.15%)</title><rect x="43.0" y="229" width="1.8" height="15.0" fill="rgb(239,190,2)" rx="2" ry="2" />
<text  x="46.02" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1 samples, 0.15%)</title><rect x="1037.1" y="549" width="1.7" height="15.0" fill="rgb(219,168,48)" rx="2" ry="2" />
<text  x="1040.07" y="559.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (58 samples, 8.54%)</title><rect x="23.9" y="517" width="100.8" height="15.0" fill="rgb(219,193,40)" rx="2" ry="2" />
<text  x="26.90" y="527.5" >cql3::util::..</text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.15%)</title><rect x="1042.3" y="565" width="1.7" height="15.0" fill="rgb(205,192,14)" rx="2" ry="2" />
<text  x="1045.28" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="635.6" y="533" width="1.8" height="15.0" fill="rgb(205,187,24)" rx="2" ry="2" />
<text  x="638.63" y="543.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (2 samples, 0.29%)</title><rect x="437.5" y="469" width="3.5" height="15.0" fill="rgb(224,199,1)" rx="2" ry="2" />
<text  x="440.51" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (2 samples, 0.29%)</title><rect x="653.0" y="549" width="3.5" height="15.0" fill="rgb(230,193,31)" rx="2" ry="2" />
<text  x="656.00" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.15%)</title><rect x="37.8" y="261" width="1.7" height="15.0" fill="rgb(210,26,11)" rx="2" ry="2" />
<text  x="40.81" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="341.9" y="373" width="1.8" height="15.0" fill="rgb(212,167,54)" rx="2" ry="2" />
<text  x="344.93" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.29%)</title><rect x="102.1" y="277" width="3.5" height="15.0" fill="rgb(250,199,6)" rx="2" ry="2" />
<text  x="105.11" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.15%)</title><rect x="352.4" y="469" width="1.7" height="15.0" fill="rgb(238,19,18)" rx="2" ry="2" />
<text  x="355.36" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (1 samples, 0.15%)</title><rect x="948.4" y="309" width="1.8" height="15.0" fill="rgb(244,121,10)" rx="2" ry="2" />
<text  x="951.44" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.15%)</title><rect x="39.5" y="341" width="1.8" height="15.0" fill="rgb(233,129,9)" rx="2" ry="2" />
<text  x="42.54" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (12 samples, 1.77%)</title><rect x="978.0" y="405" width="20.8" height="15.0" fill="rgb(228,59,42)" rx="2" ry="2" />
<text  x="980.98" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (5 samples, 0.74%)</title><rect x="43.0" y="357" width="8.7" height="15.0" fill="rgb(231,216,21)" rx="2" ry="2" />
<text  x="46.02" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.44%)</title><rect x="903.3" y="357" width="5.2" height="15.0" fill="rgb(229,215,25)" rx="2" ry="2" />
<text  x="906.25" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="69.1" y="213" width="1.7" height="15.0" fill="rgb(240,200,42)" rx="2" ry="2" />
<text  x="72.09" y="223.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.29%)</title><rect x="102.1" y="357" width="3.5" height="15.0" fill="rgb(231,59,28)" rx="2" ry="2" />
<text  x="105.11" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (3 samples, 0.44%)</title><rect x="557.4" y="421" width="5.2" height="15.0" fill="rgb(244,70,26)" rx="2" ry="2" />
<text  x="560.42" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="63.9" y="293" width="1.7" height="15.0" fill="rgb(240,21,37)" rx="2" ry="2" />
<text  x="66.87" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="1186.5" y="629" width="1.8" height="15.0" fill="rgb(218,207,21)" rx="2" ry="2" />
<text  x="1189.52" y="639.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (18 samples, 2.65%)</title><rect x="1044.0" y="565" width="31.3" height="15.0" fill="rgb(212,143,37)" rx="2" ry="2" />
<text  x="1047.02" y="575.5" >se..</text>
</g>
<g >
<title>posix_memalign (2 samples, 0.29%)</title><rect x="326.3" y="293" width="3.5" height="15.0" fill="rgb(222,169,38)" rx="2" ry="2" />
<text  x="329.29" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="74.3" y="341" width="1.7" height="15.0" fill="rgb(221,127,36)" rx="2" ry="2" />
<text  x="77.30" y="351.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.15%)</title><rect x="569.6" y="453" width="1.7" height="15.0" fill="rgb(215,50,48)" rx="2" ry="2" />
<text  x="572.59" y="463.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (1 samples, 0.15%)</title><rect x="335.0" y="389" width="1.7" height="15.0" fill="rgb(238,148,11)" rx="2" ry="2" />
<text  x="337.98" y="399.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.15%)</title><rect x="899.8" y="405" width="1.7" height="15.0" fill="rgb(245,68,20)" rx="2" ry="2" />
<text  x="902.78" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.15%)</title><rect x="43.0" y="309" width="1.8" height="15.0" fill="rgb(245,152,16)" rx="2" ry="2" />
<text  x="46.02" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="76.0" y="261" width="1.8" height="15.0" fill="rgb(249,139,30)" rx="2" ry="2" />
<text  x="79.04" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="98.6" y="389" width="3.5" height="15.0" fill="rgb(218,97,37)" rx="2" ry="2" />
<text  x="101.63" y="399.5" ></text>
</g>
<g >
<title>free (1 samples, 0.15%)</title><rect x="394.1" y="421" width="1.7" height="15.0" fill="rgb(224,76,1)" rx="2" ry="2" />
<text  x="397.06" y="431.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.15%)</title><rect x="275.9" y="373" width="1.7" height="15.0" fill="rgb(207,217,52)" rx="2" ry="2" />
<text  x="278.89" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.15%)</title><rect x="72.6" y="325" width="1.7" height="15.0" fill="rgb(214,77,18)" rx="2" ry="2" />
<text  x="75.56" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (2 samples, 0.29%)</title><rect x="783.3" y="421" width="3.5" height="15.0" fill="rgb(237,62,43)" rx="2" ry="2" />
<text  x="786.34" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier_raw, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.15%)</title><rect x="60.4" y="389" width="1.7" height="15.0" fill="rgb(222,35,39)" rx="2" ry="2" />
<text  x="63.40" y="399.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.15%)</title><rect x="1186.5" y="565" width="1.8" height="15.0" fill="rgb(211,80,5)" rx="2" ry="2" />
<text  x="1189.52" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.15%)</title><rect x="943.2" y="277" width="1.8" height="15.0" fill="rgb(247,168,44)" rx="2" ry="2" />
<text  x="946.23" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::operator= (1 samples, 0.15%)</title><rect x="121.2" y="453" width="1.8" height="15.0" fill="rgb(236,188,36)" rx="2" ry="2" />
<text  x="124.22" y="463.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.15%)</title><rect x="505.3" y="469" width="1.7" height="15.0" fill="rgb(239,21,4)" rx="2" ry="2" />
<text  x="508.29" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl (1 samples, 0.15%)</title><rect x="76.0" y="149" width="1.8" height="15.0" fill="rgb(210,85,6)" rx="2" ry="2" />
<text  x="79.04" y="159.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.15%)</title><rect x="945.0" y="277" width="1.7" height="15.0" fill="rgb(222,74,32)" rx="2" ry="2" />
<text  x="947.96" y="287.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (1 samples, 0.15%)</title><rect x="1070.1" y="533" width="1.7" height="15.0" fill="rgb(245,58,12)" rx="2" ry="2" />
<text  x="1073.09" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.15%)</title><rect x="37.8" y="245" width="1.7" height="15.0" fill="rgb(205,134,32)" rx="2" ry="2" />
<text  x="40.81" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.15%)</title><rect x="22.2" y="437" width="1.7" height="15.0" fill="rgb(220,112,9)" rx="2" ry="2" />
<text  x="25.16" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (3 samples, 0.44%)</title><rect x="630.4" y="533" width="5.2" height="15.0" fill="rgb(237,36,25)" rx="2" ry="2" />
<text  x="633.41" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="62.1" y="389" width="1.8" height="15.0" fill="rgb(237,20,51)" rx="2" ry="2" />
<text  x="65.14" y="399.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (10 samples, 1.47%)</title><rect x="713.8" y="501" width="17.4" height="15.0" fill="rgb(250,75,21)" rx="2" ry="2" />
<text  x="716.83" y="511.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (2 samples, 0.29%)</title><rect x="613.0" y="565" width="3.5" height="15.0" fill="rgb(237,118,31)" rx="2" ry="2" />
<text  x="616.03" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::truncate_statement, std::default_delete&lt;cql3::statements::truncate_statement&gt; &gt;::_M_ptr (1 samples, 0.15%)</title><rect x="116.0" y="453" width="1.7" height="15.0" fill="rgb(244,45,2)" rx="2" ry="2" />
<text  x="119.01" y="463.5" ></text>
</g>
<g >
<title>partition_entry::read (1 samples, 0.15%)</title><rect x="136.9" y="581" width="1.7" height="15.0" fill="rgb(242,228,33)" rx="2" ry="2" />
<text  x="139.86" y="591.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.15%)</title><rect x="102.1" y="213" width="1.7" height="15.0" fill="rgb(227,204,50)" rx="2" ry="2" />
<text  x="105.11" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="858.1" y="453" width="1.7" height="15.0" fill="rgb(217,32,35)" rx="2" ry="2" />
<text  x="861.07" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (3 samples, 0.44%)</title><rect x="1031.9" y="421" width="5.2" height="15.0" fill="rgb(214,14,17)" rx="2" ry="2" />
<text  x="1034.86" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="63.9" y="325" width="1.7" height="15.0" fill="rgb(232,71,27)" rx="2" ry="2" />
<text  x="66.87" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (2 samples, 0.29%)</title><rect x="1075.3" y="565" width="3.5" height="15.0" fill="rgb(205,35,17)" rx="2" ry="2" />
<text  x="1078.30" y="575.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.15%)</title><rect x="136.9" y="613" width="1.7" height="15.0" fill="rgb(233,218,35)" rx="2" ry="2" />
<text  x="139.86" y="623.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="637.4" y="549" width="3.4" height="15.0" fill="rgb(220,97,26)" rx="2" ry="2" />
<text  x="640.36" y="559.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (3 samples, 0.44%)</title><rect x="726.0" y="469" width="5.2" height="15.0" fill="rgb(240,34,49)" rx="2" ry="2" />
<text  x="728.99" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (10 samples, 1.47%)</title><rect x="34.3" y="421" width="17.4" height="15.0" fill="rgb(248,71,25)" rx="2" ry="2" />
<text  x="37.33" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="587.0" y="405" width="1.7" height="15.0" fill="rgb(251,102,23)" rx="2" ry="2" />
<text  x="589.97" y="415.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.44%)</title><rect x="1104.8" y="677" width="5.3" height="15.0" fill="rgb(251,65,11)" rx="2" ry="2" />
<text  x="1107.85" y="687.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.15%)</title><rect x="22.2" y="453" width="1.7" height="15.0" fill="rgb(220,77,40)" rx="2" ry="2" />
<text  x="25.16" y="463.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="345.4" y="453" width="1.7" height="15.0" fill="rgb(249,124,39)" rx="2" ry="2" />
<text  x="348.41" y="463.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (9 samples, 1.33%)</title><rect x="936.3" y="325" width="15.6" height="15.0" fill="rgb(231,209,10)" rx="2" ry="2" />
<text  x="939.27" y="335.5" ></text>
</g>
<g >
<title>all (679 samples, 100%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(215,149,13)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="849.4" y="469" width="1.7" height="15.0" fill="rgb(218,228,26)" rx="2" ry="2" />
<text  x="852.38" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="1011.0" y="469" width="1.7" height="15.0" fill="rgb(213,224,1)" rx="2" ry="2" />
<text  x="1014.00" y="479.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.15%)</title><rect x="908.5" y="373" width="1.7" height="15.0" fill="rgb(213,185,19)" rx="2" ry="2" />
<text  x="911.47" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.15%)</title><rect x="65.6" y="357" width="1.7" height="15.0" fill="rgb(217,33,16)" rx="2" ry="2" />
<text  x="68.61" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (1 samples, 0.15%)</title><rect x="29.1" y="501" width="1.8" height="15.0" fill="rgb(249,5,47)" rx="2" ry="2" />
<text  x="32.12" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="69.1" y="85" width="1.7" height="15.0" fill="rgb(247,132,28)" rx="2" ry="2" />
<text  x="72.09" y="95.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.15%)</title><rect x="29.1" y="453" width="1.8" height="15.0" fill="rgb(249,170,12)" rx="2" ry="2" />
<text  x="32.12" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::_M_deleter (1 samples, 0.15%)</title><rect x="121.2" y="405" width="1.8" height="15.0" fill="rgb(219,181,13)" rx="2" ry="2" />
<text  x="124.22" y="415.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.15%)</title><rect x="1186.5" y="661" width="1.8" height="15.0" fill="rgb(239,178,9)" rx="2" ry="2" />
<text  x="1189.52" y="671.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="938.0" y="309" width="1.7" height="15.0" fill="rgb(225,29,19)" rx="2" ry="2" />
<text  x="941.01" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="39.5" y="261" width="1.8" height="15.0" fill="rgb(208,143,11)" rx="2" ry="2" />
<text  x="42.54" y="271.5" ></text>
</g>
<g >
<title>database::apply (1 samples, 0.15%)</title><rect x="1035.3" y="309" width="1.8" height="15.0" fill="rgb(250,224,53)" rx="2" ry="2" />
<text  x="1038.33" y="319.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="696.5" y="549" width="3.4" height="15.0" fill="rgb(225,205,43)" rx="2" ry="2" />
<text  x="699.45" y="559.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.15%)</title><rect x="633.9" y="501" width="1.7" height="15.0" fill="rgb(215,203,38)" rx="2" ry="2" />
<text  x="636.89" y="511.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (1 samples, 0.15%)</title><rect x="1070.1" y="549" width="1.7" height="15.0" fill="rgb(254,100,8)" rx="2" ry="2" />
<text  x="1073.09" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.29%)</title><rect x="102.1" y="325" width="3.5" height="15.0" fill="rgb(205,198,37)" rx="2" ry="2" />
<text  x="105.11" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="517.5" y="453" width="1.7" height="15.0" fill="rgb(224,169,21)" rx="2" ry="2" />
<text  x="520.45" y="463.5" ></text>
</g>
<g >
<title>_dl_name_match_p (1 samples, 0.15%)</title><rect x="140.3" y="677" width="1.8" height="15.0" fill="rgb(226,79,50)" rx="2" ry="2" />
<text  x="143.34" y="687.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.15%)</title><rect x="481.0" y="437" width="1.7" height="15.0" fill="rgb(222,179,30)" rx="2" ry="2" />
<text  x="483.96" y="447.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.15%)</title><rect x="60.4" y="405" width="1.7" height="15.0" fill="rgb(254,225,14)" rx="2" ry="2" />
<text  x="63.40" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="468.8" y="453" width="1.7" height="15.0" fill="rgb(215,23,48)" rx="2" ry="2" />
<text  x="471.79" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.15%)</title><rect x="350.6" y="453" width="1.8" height="15.0" fill="rgb(230,138,4)" rx="2" ry="2" />
<text  x="353.62" y="463.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.44%)</title><rect x="1057.9" y="549" width="5.2" height="15.0" fill="rgb(253,79,9)" rx="2" ry="2" />
<text  x="1060.92" y="559.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (4 samples, 0.59%)</title><rect x="336.7" y="405" width="7.0" height="15.0" fill="rgb(207,23,25)" rx="2" ry="2" />
<text  x="339.72" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="56.9" y="245" width="1.8" height="15.0" fill="rgb(251,213,4)" rx="2" ry="2" />
<text  x="59.92" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="65.6" y="261" width="1.7" height="15.0" fill="rgb(207,57,51)" rx="2" ry="2" />
<text  x="68.61" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (1 samples, 0.15%)</title><rect x="30.9" y="501" width="1.7" height="15.0" fill="rgb(226,49,18)" rx="2" ry="2" />
<text  x="33.85" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="903.3" y="373" width="5.2" height="15.0" fill="rgb(251,144,35)" rx="2" ry="2" />
<text  x="906.25" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="72.6" y="357" width="1.7" height="15.0" fill="rgb(234,112,50)" rx="2" ry="2" />
<text  x="75.56" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="136.9" y="565" width="1.7" height="15.0" fill="rgb(206,161,44)" rx="2" ry="2" />
<text  x="139.86" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (2 samples, 0.29%)</title><rect x="783.3" y="437" width="3.5" height="15.0" fill="rgb(246,44,15)" rx="2" ry="2" />
<text  x="786.34" y="447.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.29%)</title><rect x="56.9" y="405" width="3.5" height="15.0" fill="rgb(238,217,30)" rx="2" ry="2" />
<text  x="59.92" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.29%)</title><rect x="270.7" y="341" width="3.5" height="15.0" fill="rgb(238,137,25)" rx="2" ry="2" />
<text  x="273.68" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.15%)</title><rect x="76.0" y="197" width="1.8" height="15.0" fill="rgb(213,166,27)" rx="2" ry="2" />
<text  x="79.04" y="207.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.15%)</title><rect x="329.8" y="373" width="1.7" height="15.0" fill="rgb(250,68,7)" rx="2" ry="2" />
<text  x="332.76" y="383.5" ></text>
</g>
<g >
<title>uw_frame_state_for (1 samples, 0.15%)</title><rect x="142.1" y="677" width="1.7" height="15.0" fill="rgb(221,66,45)" rx="2" ry="2" />
<text  x="145.08" y="687.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.15%)</title><rect x="560.9" y="405" width="1.7" height="15.0" fill="rgb(214,205,43)" rx="2" ry="2" />
<text  x="563.90" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.15%)</title><rect x="76.0" y="341" width="1.8" height="15.0" fill="rgb(221,70,13)" rx="2" ry="2" />
<text  x="79.04" y="351.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (2 samples, 0.29%)</title><rect x="302.0" y="325" width="3.4" height="15.0" fill="rgb(252,131,9)" rx="2" ry="2" />
<text  x="304.96" y="335.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (2 samples, 0.29%)</title><rect x="326.3" y="309" width="3.5" height="15.0" fill="rgb(209,125,44)" rx="2" ry="2" />
<text  x="329.29" y="319.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (2 samples, 0.29%)</title><rect x="470.5" y="437" width="3.5" height="15.0" fill="rgb(234,65,39)" rx="2" ry="2" />
<text  x="473.53" y="447.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (44 samples, 6.48%)</title><rect x="699.9" y="549" width="76.5" height="15.0" fill="rgb(240,188,50)" rx="2" ry="2" />
<text  x="702.93" y="559.5" >single_n..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (135 samples, 19.88%)</title><rect x="790.3" y="533" width="234.6" height="15.0" fill="rgb(209,74,17)" rx="2" ry="2" />
<text  x="793.29" y="543.5" >seastar::noncopyable_function&lt;s..</text>
</g>
<g >
<title>memtable::make_flat_reader (32 samples, 4.71%)</title><rect x="519.2" y="469" width="55.6" height="15.0" fill="rgb(228,32,38)" rx="2" ry="2" />
<text  x="522.19" y="479.5" >memta..</text>
</g>
<g >
<title>table::set_hit_rate (2 samples, 0.29%)</title><rect x="687.8" y="533" width="3.4" height="15.0" fill="rgb(208,109,2)" rx="2" ry="2" />
<text  x="690.76" y="543.5" ></text>
</g>
<g >
<title>validation::validate_column_family (4 samples, 0.59%)</title><rect x="764.2" y="469" width="7.0" height="15.0" fill="rgb(234,113,26)" rx="2" ry="2" />
<text  x="767.23" y="479.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="100.4" y="357" width="1.7" height="15.0" fill="rgb(246,59,32)" rx="2" ry="2" />
<text  x="103.37" y="367.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (1 samples, 0.15%)</title><rect x="29.1" y="437" width="1.8" height="15.0" fill="rgb(254,150,47)" rx="2" ry="2" />
<text  x="32.12" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.15%)</title><rect x="105.6" y="293" width="1.7" height="15.0" fill="rgb(241,189,35)" rx="2" ry="2" />
<text  x="108.58" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="69.1" y="197" width="1.7" height="15.0" fill="rgb(254,132,42)" rx="2" ry="2" />
<text  x="72.09" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (2 samples, 0.29%)</title><rect x="727.7" y="453" width="3.5" height="15.0" fill="rgb(224,206,6)" rx="2" ry="2" />
<text  x="730.73" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="86.5" y="101" width="1.7" height="15.0" fill="rgb(214,196,21)" rx="2" ry="2" />
<text  x="89.47" y="111.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="213.3" y="517" width="3.5" height="15.0" fill="rgb(240,188,31)" rx="2" ry="2" />
<text  x="216.33" y="527.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (23 samples, 3.39%)</title><rect x="731.2" y="501" width="40.0" height="15.0" fill="rgb(234,80,25)" rx="2" ry="2" />
<text  x="734.21" y="511.5" >cql..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="397.5" y="453" width="1.8" height="15.0" fill="rgb(206,198,37)" rx="2" ry="2" />
<text  x="400.54" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="651.3" y="549" width="1.7" height="15.0" fill="rgb(218,106,46)" rx="2" ry="2" />
<text  x="654.27" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_initialize_map (1 samples, 0.15%)</title><rect x="29.1" y="357" width="1.8" height="15.0" fill="rgb(215,175,25)" rx="2" ry="2" />
<text  x="32.12" y="367.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (1 samples, 0.15%)</title><rect x="776.4" y="549" width="1.7" height="15.0" fill="rgb(211,132,48)" rx="2" ry="2" />
<text  x="779.39" y="559.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (67 samples, 9.87%)</title><rect x="11.7" y="613" width="116.5" height="15.0" fill="rgb(232,143,29)" rx="2" ry="2" />
<text  x="14.74" y="623.5" >std::_Function..</text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (2 samples, 0.29%)</title><rect x="783.3" y="485" width="3.5" height="15.0" fill="rgb(232,224,54)" rx="2" ry="2" />
<text  x="786.34" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.15%)</title><rect x="93.4" y="357" width="1.8" height="15.0" fill="rgb(254,2,7)" rx="2" ry="2" />
<text  x="96.42" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (16 samples, 2.36%)</title><rect x="812.9" y="469" width="27.8" height="15.0" fill="rgb(239,85,29)" rx="2" ry="2" />
<text  x="815.89" y="479.5" >c..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.15%)</title><rect x="62.1" y="373" width="1.8" height="15.0" fill="rgb(236,187,48)" rx="2" ry="2" />
<text  x="65.14" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (11 samples, 1.62%)</title><rect x="77.8" y="389" width="19.1" height="15.0" fill="rgb(223,68,30)" rx="2" ry="2" />
<text  x="80.78" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="752.1" y="405" width="1.7" height="15.0" fill="rgb(249,58,10)" rx="2" ry="2" />
<text  x="755.06" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.15%)</title><rect x="1068.4" y="549" width="1.7" height="15.0" fill="rgb(221,91,3)" rx="2" ry="2" />
<text  x="1071.35" y="559.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (1 samples, 0.15%)</title><rect x="11.7" y="565" width="1.8" height="15.0" fill="rgb(233,104,30)" rx="2" ry="2" />
<text  x="14.74" y="575.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.15%)</title><rect x="910.2" y="357" width="1.7" height="15.0" fill="rgb(206,29,41)" rx="2" ry="2" />
<text  x="913.21" y="367.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.44%)</title><rect x="903.3" y="389" width="5.2" height="15.0" fill="rgb(245,101,29)" rx="2" ry="2" />
<text  x="906.25" y="399.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (1 samples, 0.15%)</title><rect x="30.9" y="469" width="1.7" height="15.0" fill="rgb(205,218,24)" rx="2" ry="2" />
<text  x="33.85" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="736.4" y="469" width="1.8" height="15.0" fill="rgb(253,198,15)" rx="2" ry="2" />
<text  x="739.42" y="479.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="865.0" y="437" width="3.5" height="15.0" fill="rgb(225,168,20)" rx="2" ry="2" />
<text  x="868.02" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_type_statement, std::default_delete&lt;cql3::statements::alter_type_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_type_statement&gt;, void&gt; (1 samples, 0.15%)</title><rect x="117.7" y="453" width="1.8" height="15.0" fill="rgb(226,136,26)" rx="2" ry="2" />
<text  x="120.75" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (9 samples, 1.33%)</title><rect x="467.1" y="469" width="15.6" height="15.0" fill="rgb(225,79,6)" rx="2" ry="2" />
<text  x="470.05" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (83 samples, 12.22%)</title><rect x="854.6" y="485" width="144.2" height="15.0" fill="rgb(220,153,1)" rx="2" ry="2" />
<text  x="857.59" y="495.5" >cql3::statements::..</text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="161.2" y="549" width="1.7" height="15.0" fill="rgb(226,145,6)" rx="2" ry="2" />
<text  x="164.19" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="821.6" y="373" width="5.2" height="15.0" fill="rgb(237,47,10)" rx="2" ry="2" />
<text  x="824.58" y="383.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (4 samples, 0.59%)</title><rect x="1024.9" y="549" width="7.0" height="15.0" fill="rgb(225,120,19)" rx="2" ry="2" />
<text  x="1027.90" y="559.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="395.8" y="469" width="3.5" height="15.0" fill="rgb(208,33,38)" rx="2" ry="2" />
<text  x="398.80" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_type_statement, std::default_delete&lt;cql3::statements::alter_type_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.15%)</title><rect x="117.7" y="437" width="1.8" height="15.0" fill="rgb(225,170,42)" rx="2" ry="2" />
<text  x="120.75" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (13 samples, 1.91%)</title><rect x="541.8" y="437" width="22.6" height="15.0" fill="rgb(205,178,11)" rx="2" ry="2" />
<text  x="544.78" y="447.5" >p..</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.15%)</title><rect x="98.6" y="357" width="1.8" height="15.0" fill="rgb(224,128,30)" rx="2" ry="2" />
<text  x="101.63" y="367.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="677.3" y="549" width="3.5" height="15.0" fill="rgb(219,129,38)" rx="2" ry="2" />
<text  x="680.33" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (7 samples, 1.03%)</title><rect x="98.6" y="421" width="12.2" height="15.0" fill="rgb(224,64,24)" rx="2" ry="2" />
<text  x="101.63" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="65.6" y="309" width="1.7" height="15.0" fill="rgb(251,81,43)" rx="2" ry="2" />
<text  x="68.61" y="319.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.15%)</title><rect x="783.3" y="373" width="1.8" height="15.0" fill="rgb(235,222,18)" rx="2" ry="2" />
<text  x="786.34" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (1 samples, 0.15%)</title><rect x="691.2" y="565" width="1.8" height="15.0" fill="rgb(236,21,29)" rx="2" ry="2" />
<text  x="694.24" y="575.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="86.5" y="325" width="3.4" height="15.0" fill="rgb(242,97,14)" rx="2" ry="2" />
<text  x="89.47" y="335.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (17 samples, 2.50%)</title><rect x="534.8" y="453" width="29.6" height="15.0" fill="rgb(222,51,5)" rx="2" ry="2" />
<text  x="537.83" y="463.5" >ma..</text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.29%)</title><rect x="53.4" y="421" width="3.5" height="15.0" fill="rgb(207,21,10)" rx="2" ry="2" />
<text  x="56.45" y="431.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.15%)</title><rect x="1186.5" y="533" width="1.8" height="15.0" fill="rgb(234,216,30)" rx="2" ry="2" />
<text  x="1189.52" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.15%)</title><rect x="69.1" y="309" width="1.7" height="15.0" fill="rgb(243,80,7)" rx="2" ry="2" />
<text  x="72.09" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (134 samples, 19.73%)</title><rect x="792.0" y="517" width="232.9" height="15.0" fill="rgb(231,208,27)" rx="2" ry="2" />
<text  x="795.03" y="527.5" >seastar::noncopyable_function&lt;..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="86.5" y="165" width="1.7" height="15.0" fill="rgb(227,46,48)" rx="2" ry="2" />
<text  x="89.47" y="175.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (5 samples, 0.74%)</title><rect x="526.1" y="453" width="8.7" height="15.0" fill="rgb(246,128,35)" rx="2" ry="2" />
<text  x="529.14" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.44%)</title><rect x="894.6" y="373" width="5.2" height="15.0" fill="rgb(213,134,27)" rx="2" ry="2" />
<text  x="897.57" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (24 samples, 3.53%)</title><rect x="957.1" y="421" width="41.7" height="15.0" fill="rgb(206,179,48)" rx="2" ry="2" />
<text  x="960.13" y="431.5" >ser..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (23 samples, 3.39%)</title><rect x="811.1" y="485" width="40.0" height="15.0" fill="rgb(224,12,27)" rx="2" ry="2" />
<text  x="814.15" y="495.5" >cql..</text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (1 samples, 0.15%)</title><rect x="29.1" y="469" width="1.8" height="15.0" fill="rgb(220,125,34)" rx="2" ry="2" />
<text  x="32.12" y="479.5" ></text>
</g>
<g >
<title>std::_Enable_default_constructor&lt;true, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt;::_Enable_default_constructor (1 samples, 0.15%)</title><rect x="81.3" y="309" width="1.7" height="15.0" fill="rgb(217,18,26)" rx="2" ry="2" />
<text  x="84.25" y="319.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (1 samples, 0.15%)</title><rect x="333.2" y="373" width="1.8" height="15.0" fill="rgb(228,149,51)" rx="2" ry="2" />
<text  x="336.24" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.15%)</title><rect x="58.7" y="277" width="1.7" height="15.0" fill="rgb(240,65,7)" rx="2" ry="2" />
<text  x="61.66" y="287.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (65 samples, 9.57%)</title><rect x="13.5" y="549" width="112.9" height="15.0" fill="rgb(232,224,50)" rx="2" ry="2" />
<text  x="16.48" y="559.5" >cql3::query_p..</text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.15%)</title><rect x="762.5" y="469" width="1.7" height="15.0" fill="rgb(210,80,21)" rx="2" ry="2" />
<text  x="765.49" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.15%)</title><rect x="951.9" y="341" width="1.8" height="15.0" fill="rgb(209,106,13)" rx="2" ry="2" />
<text  x="954.91" y="351.5" ></text>
</g>
<g >
<title>seastar::smp::configure (2 samples, 0.29%)</title><rect x="1080.5" y="613" width="3.5" height="15.0" fill="rgb(215,113,17)" rx="2" ry="2" />
<text  x="1083.52" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (15 samples, 2.21%)</title><rect x="465.3" y="501" width="26.1" height="15.0" fill="rgb(239,209,47)" rx="2" ry="2" />
<text  x="468.32" y="511.5" >s..</text>
</g>
<g >
<title>locator::token_metadata::first_token (5 samples, 0.74%)</title><rect x="990.1" y="357" width="8.7" height="15.0" fill="rgb(239,18,24)" rx="2" ry="2" />
<text  x="993.15" y="367.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (59 samples, 8.69%)</title><rect x="491.4" y="517" width="102.5" height="15.0" fill="rgb(230,32,21)" rx="2" ry="2" />
<text  x="494.38" y="527.5" >query::queri..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.15%)</title><rect x="96.9" y="389" width="1.7" height="15.0" fill="rgb(214,32,18)" rx="2" ry="2" />
<text  x="99.89" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="649.5" y="549" width="1.8" height="15.0" fill="rgb(206,141,18)" rx="2" ry="2" />
<text  x="652.53" y="559.5" ></text>
</g>
<g >
<title>seastar::disk_config_params::parse_config (1 samples, 0.15%)</title><rect x="1080.5" y="597" width="1.8" height="15.0" fill="rgb(239,195,43)" rx="2" ry="2" />
<text  x="1083.52" y="607.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (2 samples, 0.29%)</title><rect x="1031.9" y="389" width="3.4" height="15.0" fill="rgb(245,37,8)" rx="2" ry="2" />
<text  x="1034.86" y="399.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.15%)</title><rect x="878.9" y="421" width="1.8" height="15.0" fill="rgb(224,178,49)" rx="2" ry="2" />
<text  x="881.92" y="431.5" ></text>
</g>
<g >
<title>make_combined_reader (6 samples, 0.88%)</title><rect x="507.0" y="453" width="10.5" height="15.0" fill="rgb(242,93,10)" rx="2" ry="2" />
<text  x="510.03" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (4 samples, 0.59%)</title><rect x="830.3" y="389" width="6.9" height="15.0" fill="rgb(246,56,38)" rx="2" ry="2" />
<text  x="833.27" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (2 samples, 0.29%)</title><rect x="102.1" y="405" width="3.5" height="15.0" fill="rgb(215,20,46)" rx="2" ry="2" />
<text  x="105.11" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="825.1" y="357" width="1.7" height="15.0" fill="rgb(248,222,42)" rx="2" ry="2" />
<text  x="828.05" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.15%)</title><rect x="169.9" y="485" width="1.7" height="15.0" fill="rgb(248,152,47)" rx="2" ry="2" />
<text  x="172.88" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.15%)</title><rect x="839.0" y="421" width="1.7" height="15.0" fill="rgb(225,122,24)" rx="2" ry="2" />
<text  x="841.95" y="431.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.74%)</title><rect x="1002.3" y="453" width="8.7" height="15.0" fill="rgb(233,117,35)" rx="2" ry="2" />
<text  x="1005.31" y="463.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="65.6" y="245" width="1.7" height="15.0" fill="rgb(252,81,42)" rx="2" ry="2" />
<text  x="68.61" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="63.9" y="341" width="1.7" height="15.0" fill="rgb(209,132,20)" rx="2" ry="2" />
<text  x="66.87" y="351.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="176.8" y="549" width="1.8" height="15.0" fill="rgb(206,216,5)" rx="2" ry="2" />
<text  x="179.83" y="559.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.59%)</title><rect x="1024.9" y="517" width="7.0" height="15.0" fill="rgb(221,81,32)" rx="2" ry="2" />
<text  x="1027.90" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (534 samples, 78.65%)</title><rect x="152.5" y="581" width="928.0" height="15.0" fill="rgb(240,82,22)" rx="2" ry="2" />
<text  x="155.50" y="591.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.15%)</title><rect x="74.3" y="309" width="1.7" height="15.0" fill="rgb(247,59,25)" rx="2" ry="2" />
<text  x="77.30" y="319.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.15%)</title><rect x="136.9" y="597" width="1.7" height="15.0" fill="rgb(205,182,52)" rx="2" ry="2" />
<text  x="139.86" y="607.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.44%)</title><rect x="493.1" y="501" width="5.2" height="15.0" fill="rgb(235,131,45)" rx="2" ry="2" />
<text  x="496.12" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.15%)</title><rect x="76.0" y="213" width="1.8" height="15.0" fill="rgb(227,30,32)" rx="2" ry="2" />
<text  x="79.04" y="223.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (1 samples, 0.15%)</title><rect x="1030.1" y="437" width="1.8" height="15.0" fill="rgb(231,112,43)" rx="2" ry="2" />
<text  x="1033.12" y="447.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="487.9" y="469" width="1.7" height="15.0" fill="rgb(240,42,2)" rx="2" ry="2" />
<text  x="490.91" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="29.1" y="277" width="1.8" height="15.0" fill="rgb(244,65,50)" rx="2" ry="2" />
<text  x="32.12" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="408.0" y="437" width="1.7" height="15.0" fill="rgb(226,191,5)" rx="2" ry="2" />
<text  x="410.97" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_create_nodes (1 samples, 0.15%)</title><rect x="29.1" y="341" width="1.8" height="15.0" fill="rgb(237,104,37)" rx="2" ry="2" />
<text  x="32.12" y="351.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="911.9" y="357" width="3.5" height="15.0" fill="rgb(242,184,1)" rx="2" ry="2" />
<text  x="914.94" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="216.8" y="501" width="5.2" height="15.0" fill="rgb(227,159,49)" rx="2" ry="2" />
<text  x="219.80" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (539 samples, 79.38%)</title><rect x="143.8" y="597" width="936.7" height="15.0" fill="rgb(228,67,8)" rx="2" ry="2" />
<text  x="146.81" y="607.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (4 samples, 0.59%)</title><rect x="70.8" y="389" width="7.0" height="15.0" fill="rgb(245,93,32)" rx="2" ry="2" />
<text  x="73.82" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_Vector_base (1 samples, 0.15%)</title><rect x="114.3" y="421" width="1.7" height="15.0" fill="rgb(217,181,16)" rx="2" ry="2" />
<text  x="117.27" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::_M_ptr (1 samples, 0.15%)</title><rect x="112.5" y="389" width="1.8" height="15.0" fill="rgb(220,207,46)" rx="2" ry="2" />
<text  x="115.53" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (2 samples, 0.29%)</title><rect x="783.3" y="501" width="3.5" height="15.0" fill="rgb(252,163,1)" rx="2" ry="2" />
<text  x="786.34" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.15%)</title><rect x="96.9" y="309" width="1.7" height="15.0" fill="rgb(234,169,44)" rx="2" ry="2" />
<text  x="99.89" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="953.7" y="341" width="1.7" height="15.0" fill="rgb(224,146,9)" rx="2" ry="2" />
<text  x="956.65" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (2 samples, 0.29%)</title><rect x="783.3" y="517" width="3.5" height="15.0" fill="rgb(248,222,23)" rx="2" ry="2" />
<text  x="786.34" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="103.8" y="197" width="1.8" height="15.0" fill="rgb(226,57,46)" rx="2" ry="2" />
<text  x="106.84" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="663.4" y="549" width="1.8" height="15.0" fill="rgb(253,153,7)" rx="2" ry="2" />
<text  x="666.43" y="559.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (1 samples, 0.15%)</title><rect x="1186.5" y="597" width="1.8" height="15.0" fill="rgb(209,65,25)" rx="2" ry="2" />
<text  x="1189.52" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_destroy_data_aux (1 samples, 0.15%)</title><rect x="30.9" y="421" width="1.7" height="15.0" fill="rgb(222,105,20)" rx="2" ry="2" />
<text  x="33.85" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.29%)</title><rect x="63.9" y="389" width="3.4" height="15.0" fill="rgb(241,88,39)" rx="2" ry="2" />
<text  x="66.87" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (15 samples, 2.21%)</title><rect x="812.9" y="421" width="26.1" height="15.0" fill="rgb(214,161,12)" rx="2" ry="2" />
<text  x="815.89" y="431.5" >c..</text>
</g>
<g >
<title>execute_cfa_program (1 samples, 0.15%)</title><rect x="142.1" y="661" width="1.7" height="15.0" fill="rgb(210,216,47)" rx="2" ry="2" />
<text  x="145.08" y="671.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="557.4" y="405" width="3.5" height="15.0" fill="rgb(243,35,50)" rx="2" ry="2" />
<text  x="560.42" y="415.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.29%)</title><rect x="86.5" y="293" width="3.4" height="15.0" fill="rgb(252,107,0)" rx="2" ry="2" />
<text  x="89.47" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.29%)</title><rect x="102.1" y="261" width="3.5" height="15.0" fill="rgb(254,147,6)" rx="2" ry="2" />
<text  x="105.11" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="65.6" y="341" width="1.7" height="15.0" fill="rgb(225,131,17)" rx="2" ry="2" />
<text  x="68.61" y="351.5" ></text>
</g>
</g>
</svg>
