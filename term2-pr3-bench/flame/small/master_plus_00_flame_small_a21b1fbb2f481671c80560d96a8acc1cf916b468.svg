<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="742.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="725" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="725" > </text>
<g id="frames">
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="620.0" y="389" width="1.8" height="15.0" fill="rgb(207,76,40)" rx="2" ry="2" />
<text  x="623.04" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="1080.2" y="517" width="1.7" height="15.0" fill="rgb(208,66,51)" rx="2" ry="2" />
<text  x="1083.19" y="527.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (3 samples, 0.44%)</title><rect x="539.9" y="453" width="5.2" height="15.0" fill="rgb(243,163,26)" rx="2" ry="2" />
<text  x="542.87" y="463.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.15%)</title><rect x="496.3" y="389" width="1.7" height="15.0" fill="rgb(238,66,26)" rx="2" ry="2" />
<text  x="499.29" y="399.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.15%)</title><rect x="367.3" y="357" width="1.8" height="15.0" fill="rgb(217,180,9)" rx="2" ry="2" />
<text  x="370.31" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.15%)</title><rect x="1054.0" y="229" width="1.8" height="15.0" fill="rgb(237,108,16)" rx="2" ry="2" />
<text  x="1057.05" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (33 samples, 4.87%)</title><rect x="295.8" y="357" width="57.6" height="15.0" fill="rgb(229,200,46)" rx="2" ry="2" />
<text  x="298.85" y="367.5" >partit..</text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.30%)</title><rect x="105.9" y="325" width="3.5" height="15.0" fill="rgb(239,137,32)" rx="2" ry="2" />
<text  x="108.86" y="335.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="121.6" y="309" width="1.7" height="15.0" fill="rgb(207,185,52)" rx="2" ry="2" />
<text  x="124.55" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="112.8" y="229" width="1.8" height="15.0" fill="rgb(225,87,34)" rx="2" ry="2" />
<text  x="115.84" y="239.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="386.5" y="469" width="1.7" height="15.0" fill="rgb(250,141,19)" rx="2" ry="2" />
<text  x="389.48" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.15%)</title><rect x="146.0" y="149" width="1.7" height="15.0" fill="rgb(254,106,52)" rx="2" ry="2" />
<text  x="148.95" y="159.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (3 samples, 0.44%)</title><rect x="306.3" y="325" width="5.2" height="15.0" fill="rgb(223,175,40)" rx="2" ry="2" />
<text  x="309.31" y="335.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.44%)</title><rect x="951.2" y="293" width="5.2" height="15.0" fill="rgb(231,78,1)" rx="2" ry="2" />
<text  x="954.21" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.30%)</title><rect x="1047.1" y="501" width="3.5" height="15.0" fill="rgb(214,99,19)" rx="2" ry="2" />
<text  x="1050.08" y="511.5" ></text>
</g>
<g >
<title>database::do_apply (2 samples, 0.30%)</title><rect x="1047.1" y="469" width="3.5" height="15.0" fill="rgb(249,192,43)" rx="2" ry="2" />
<text  x="1050.08" y="479.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.15%)</title><rect x="855.3" y="421" width="1.8" height="15.0" fill="rgb(239,100,35)" rx="2" ry="2" />
<text  x="858.35" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (4 samples, 0.59%)</title><rect x="693.2" y="517" width="7.0" height="15.0" fill="rgb(211,228,38)" rx="2" ry="2" />
<text  x="696.25" y="527.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (1 samples, 0.15%)</title><rect x="471.9" y="437" width="1.7" height="15.0" fill="rgb(231,62,2)" rx="2" ry="2" />
<text  x="474.89" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (57 samples, 8.42%)</title><rect x="36.1" y="437" width="99.4" height="15.0" fill="rgb(225,119,14)" rx="2" ry="2" />
<text  x="39.14" y="447.5" >cql3_parser:..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.30%)</title><rect x="98.9" y="309" width="3.5" height="15.0" fill="rgb(208,193,35)" rx="2" ry="2" />
<text  x="101.89" y="319.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.15%)</title><rect x="146.0" y="485" width="1.7" height="15.0" fill="rgb(254,222,20)" rx="2" ry="2" />
<text  x="148.95" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (5 samples, 0.74%)</title><rect x="370.8" y="421" width="8.7" height="15.0" fill="rgb(247,192,48)" rx="2" ry="2" />
<text  x="373.80" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::alter_service_level_statement*, std::default_delete&lt;cql3::statements::alter_service_level_statement&gt; &gt; (1 samples, 0.15%)</title><rect x="132.0" y="389" width="1.8" height="15.0" fill="rgb(243,229,21)" rx="2" ry="2" />
<text  x="135.01" y="399.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (12 samples, 1.77%)</title><rect x="449.2" y="405" width="20.9" height="15.0" fill="rgb(248,6,24)" rx="2" ry="2" />
<text  x="452.23" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="893.7" y="389" width="1.7" height="15.0" fill="rgb(250,205,35)" rx="2" ry="2" />
<text  x="896.69" y="399.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1 samples, 0.15%)</title><rect x="135.5" y="469" width="1.7" height="15.0" fill="rgb(217,193,52)" rx="2" ry="2" />
<text  x="138.49" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (5 samples, 0.74%)</title><rect x="668.8" y="533" width="8.8" height="15.0" fill="rgb(208,148,25)" rx="2" ry="2" />
<text  x="671.85" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.59%)</title><rect x="311.5" y="309" width="7.0" height="15.0" fill="rgb(231,48,6)" rx="2" ry="2" />
<text  x="314.54" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::alter_role_statement*, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::_Tuple_impl (1 samples, 0.15%)</title><rect x="130.3" y="357" width="1.7" height="15.0" fill="rgb(246,211,40)" rx="2" ry="2" />
<text  x="133.27" y="367.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.15%)</title><rect x="804.8" y="453" width="1.7" height="15.0" fill="rgb(215,210,13)" rx="2" ry="2" />
<text  x="807.80" y="463.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (2 samples, 0.30%)</title><rect x="552.1" y="437" width="3.5" height="15.0" fill="rgb(221,10,39)" rx="2" ry="2" />
<text  x="555.07" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.15%)</title><rect x="796.1" y="389" width="1.7" height="15.0" fill="rgb(244,145,8)" rx="2" ry="2" />
<text  x="799.09" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="121.6" y="325" width="1.7" height="15.0" fill="rgb(207,183,50)" rx="2" ry="2" />
<text  x="124.55" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.15%)</title><rect x="661.9" y="501" width="1.7" height="15.0" fill="rgb(219,89,46)" rx="2" ry="2" />
<text  x="664.88" y="511.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.15%)</title><rect x="959.9" y="245" width="1.8" height="15.0" fill="rgb(217,117,29)" rx="2" ry="2" />
<text  x="962.93" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.15%)</title><rect x="105.9" y="261" width="1.7" height="15.0" fill="rgb(233,122,15)" rx="2" ry="2" />
<text  x="108.86" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.30%)</title><rect x="58.8" y="293" width="3.5" height="15.0" fill="rgb(225,214,7)" rx="2" ry="2" />
<text  x="61.80" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="69.3" y="357" width="1.7" height="15.0" fill="rgb(219,94,15)" rx="2" ry="2" />
<text  x="72.26" y="367.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (143 samples, 21.12%)</title><rect x="797.8" y="517" width="249.3" height="15.0" fill="rgb(228,7,7)" rx="2" ry="2" />
<text  x="800.83" y="527.5" >seastar::concrete_execution_stage..</text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.30%)</title><rect x="396.9" y="437" width="3.5" height="15.0" fill="rgb(229,73,42)" rx="2" ry="2" />
<text  x="399.94" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="1040.1" y="421" width="1.7" height="15.0" fill="rgb(206,149,14)" rx="2" ry="2" />
<text  x="1043.10" y="431.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (5 samples, 0.74%)</title><rect x="1020.9" y="325" width="8.7" height="15.0" fill="rgb(254,229,36)" rx="2" ry="2" />
<text  x="1023.93" y="335.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.15%)</title><rect x="37.9" y="181" width="1.7" height="15.0" fill="rgb(234,70,31)" rx="2" ry="2" />
<text  x="40.89" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.15%)</title><rect x="567.8" y="405" width="1.7" height="15.0" fill="rgb(209,223,1)" rx="2" ry="2" />
<text  x="570.75" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.30%)</title><rect x="43.1" y="245" width="3.5" height="15.0" fill="rgb(234,102,40)" rx="2" ry="2" />
<text  x="46.12" y="255.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (46 samples, 6.79%)</title><rect x="545.1" y="485" width="80.2" height="15.0" fill="rgb(236,78,22)" rx="2" ry="2" />
<text  x="548.10" y="495.5" >query::qu..</text>
</g>
<g >
<title>operator delete (3 samples, 0.44%)</title><rect x="529.4" y="373" width="5.2" height="15.0" fill="rgb(206,13,35)" rx="2" ry="2" />
<text  x="532.41" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="538.1" y="421" width="1.8" height="15.0" fill="rgb(222,209,9)" rx="2" ry="2" />
<text  x="541.12" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.15%)</title><rect x="180.8" y="517" width="1.8" height="15.0" fill="rgb(234,153,11)" rx="2" ry="2" />
<text  x="183.81" y="527.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (1 samples, 0.15%)</title><rect x="135.5" y="485" width="1.7" height="15.0" fill="rgb(205,202,53)" rx="2" ry="2" />
<text  x="138.49" y="495.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="83.2" y="165" width="1.7" height="15.0" fill="rgb(208,25,16)" rx="2" ry="2" />
<text  x="86.21" y="175.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.59%)</title><rect x="900.7" y="389" width="6.9" height="15.0" fill="rgb(224,160,8)" rx="2" ry="2" />
<text  x="903.66" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (2 samples, 0.30%)</title><rect x="576.5" y="421" width="3.5" height="15.0" fill="rgb(232,228,2)" rx="2" ry="2" />
<text  x="579.47" y="431.5" ></text>
</g>
<g >
<title>dht::tri_compare (3 samples, 0.44%)</title><rect x="1024.4" y="309" width="5.2" height="15.0" fill="rgb(224,60,0)" rx="2" ry="2" />
<text  x="1027.42" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="91.9" y="325" width="1.8" height="15.0" fill="rgb(208,86,46)" rx="2" ry="2" />
<text  x="94.92" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (1 samples, 0.15%)</title><rect x="794.3" y="389" width="1.8" height="15.0" fill="rgb(240,50,2)" rx="2" ry="2" />
<text  x="797.34" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="902.4" y="373" width="5.2" height="15.0" fill="rgb(227,208,43)" rx="2" ry="2" />
<text  x="905.41" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (1 samples, 0.15%)</title><rect x="796.1" y="405" width="1.7" height="15.0" fill="rgb(219,163,45)" rx="2" ry="2" />
<text  x="799.09" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="620.0" y="373" width="1.8" height="15.0" fill="rgb(240,12,17)" rx="2" ry="2" />
<text  x="623.04" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.15%)</title><rect x="1054.0" y="213" width="1.8" height="15.0" fill="rgb(252,120,0)" rx="2" ry="2" />
<text  x="1057.05" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.30%)</title><rect x="81.5" y="293" width="3.4" height="15.0" fill="rgb(231,8,11)" rx="2" ry="2" />
<text  x="84.46" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.15%)</title><rect x="79.7" y="325" width="1.8" height="15.0" fill="rgb(215,23,41)" rx="2" ry="2" />
<text  x="82.72" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="116.3" y="261" width="1.8" height="15.0" fill="rgb(206,136,8)" rx="2" ry="2" />
<text  x="119.32" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.15%)</title><rect x="27.4" y="437" width="1.8" height="15.0" fill="rgb(235,87,39)" rx="2" ry="2" />
<text  x="30.43" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="1094.1" y="469" width="1.8" height="15.0" fill="rgb(207,33,6)" rx="2" ry="2" />
<text  x="1097.14" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.30%)</title><rect x="102.4" y="213" width="3.5" height="15.0" fill="rgb(228,180,23)" rx="2" ry="2" />
<text  x="105.38" y="223.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.15%)</title><rect x="112.8" y="277" width="1.8" height="15.0" fill="rgb(244,209,12)" rx="2" ry="2" />
<text  x="115.84" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.30%)</title><rect x="942.5" y="309" width="3.5" height="15.0" fill="rgb(211,120,40)" rx="2" ry="2" />
<text  x="945.50" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (12 samples, 1.77%)</title><rect x="517.2" y="421" width="20.9" height="15.0" fill="rgb(246,149,21)" rx="2" ry="2" />
<text  x="520.21" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.15%)</title><rect x="146.0" y="341" width="1.7" height="15.0" fill="rgb(243,50,24)" rx="2" ry="2" />
<text  x="148.95" y="351.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.30%)</title><rect x="766.5" y="373" width="3.4" height="15.0" fill="rgb(240,110,24)" rx="2" ry="2" />
<text  x="769.45" y="383.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (1 samples, 0.15%)</title><rect x="1088.9" y="517" width="1.7" height="15.0" fill="rgb(235,126,4)" rx="2" ry="2" />
<text  x="1091.91" y="527.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (3 samples, 0.44%)</title><rect x="956.4" y="261" width="5.3" height="15.0" fill="rgb(237,148,15)" rx="2" ry="2" />
<text  x="959.44" y="271.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (1 samples, 0.15%)</title><rect x="13.5" y="485" width="1.7" height="15.0" fill="rgb(234,121,13)" rx="2" ry="2" />
<text  x="16.49" y="495.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (5 samples, 0.74%)</title><rect x="200.0" y="501" width="8.7" height="15.0" fill="rgb(224,175,35)" rx="2" ry="2" />
<text  x="202.99" y="511.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.30%)</title><rect x="112.8" y="293" width="3.5" height="15.0" fill="rgb(211,91,12)" rx="2" ry="2" />
<text  x="115.84" y="303.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.15%)</title><rect x="1019.2" y="325" width="1.7" height="15.0" fill="rgb(240,89,47)" rx="2" ry="2" />
<text  x="1022.19" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.30%)</title><rect x="703.7" y="501" width="3.5" height="15.0" fill="rgb(235,94,27)" rx="2" ry="2" />
<text  x="706.71" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (5 samples, 0.74%)</title><rect x="491.1" y="421" width="8.7" height="15.0" fill="rgb(231,169,20)" rx="2" ry="2" />
<text  x="494.06" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.44%)</title><rect x="1052.3" y="421" width="5.2" height="15.0" fill="rgb(216,194,9)" rx="2" ry="2" />
<text  x="1055.30" y="431.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.15%)</title><rect x="29.2" y="453" width="1.7" height="15.0" fill="rgb(214,139,51)" rx="2" ry="2" />
<text  x="32.17" y="463.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.30%)</title><rect x="726.4" y="501" width="3.5" height="15.0" fill="rgb(232,21,21)" rx="2" ry="2" />
<text  x="729.37" y="511.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.15%)</title><rect x="1043.6" y="453" width="1.7" height="15.0" fill="rgb(221,71,50)" rx="2" ry="2" />
<text  x="1046.59" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (6 samples, 0.89%)</title><rect x="524.2" y="405" width="10.4" height="15.0" fill="rgb(208,81,22)" rx="2" ry="2" />
<text  x="527.18" y="415.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.15%)</title><rect x="982.6" y="373" width="1.7" height="15.0" fill="rgb(207,148,54)" rx="2" ry="2" />
<text  x="985.58" y="383.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (1 samples, 0.15%)</title><rect x="499.8" y="437" width="1.7" height="15.0" fill="rgb(241,71,49)" rx="2" ry="2" />
<text  x="502.78" y="447.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (1 samples, 0.15%)</title><rect x="1094.1" y="501" width="1.8" height="15.0" fill="rgb(248,6,54)" rx="2" ry="2" />
<text  x="1097.14" y="511.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="116.3" y="245" width="1.8" height="15.0" fill="rgb(236,131,2)" rx="2" ry="2" />
<text  x="119.32" y="255.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (2 samples, 0.30%)</title><rect x="292.4" y="357" width="3.4" height="15.0" fill="rgb(229,23,27)" rx="2" ry="2" />
<text  x="295.36" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (1 samples, 0.15%)</title><rect x="1094.1" y="517" width="1.8" height="15.0" fill="rgb(244,157,1)" rx="2" ry="2" />
<text  x="1097.14" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (4 samples, 0.59%)</title><rect x="825.7" y="357" width="7.0" height="15.0" fill="rgb(224,5,1)" rx="2" ry="2" />
<text  x="828.72" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.44%)</title><rect x="163.4" y="501" width="5.2" height="15.0" fill="rgb(249,78,39)" rx="2" ry="2" />
<text  x="166.38" y="511.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.15%)</title><rect x="309.8" y="309" width="1.7" height="15.0" fill="rgb(236,175,2)" rx="2" ry="2" />
<text  x="312.79" y="319.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (4 samples, 0.59%)</title><rect x="1050.6" y="517" width="6.9" height="15.0" fill="rgb(209,184,42)" rx="2" ry="2" />
<text  x="1053.56" y="527.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.15%)</title><rect x="198.2" y="469" width="1.8" height="15.0" fill="rgb(249,97,17)" rx="2" ry="2" />
<text  x="201.24" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="100.6" y="101" width="1.8" height="15.0" fill="rgb(209,132,3)" rx="2" ry="2" />
<text  x="103.64" y="111.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (14 samples, 2.07%)</title><rect x="91.9" y="357" width="24.4" height="15.0" fill="rgb(230,158,10)" rx="2" ry="2" />
<text  x="94.92" y="367.5" >c..</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.15%)</title><rect x="688.0" y="517" width="1.8" height="15.0" fill="rgb(243,104,49)" rx="2" ry="2" />
<text  x="691.02" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (3 samples, 0.44%)</title><rect x="57.1" y="309" width="5.2" height="15.0" fill="rgb(228,200,11)" rx="2" ry="2" />
<text  x="60.06" y="319.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.15%)</title><rect x="146.0" y="597" width="1.7" height="15.0" fill="rgb(232,220,17)" rx="2" ry="2" />
<text  x="148.95" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.15%)</title><rect x="37.9" y="213" width="1.7" height="15.0" fill="rgb(238,122,26)" rx="2" ry="2" />
<text  x="40.89" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.15%)</title><rect x="57.1" y="293" width="1.7" height="15.0" fill="rgb(219,154,7)" rx="2" ry="2" />
<text  x="60.06" y="303.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (2 samples, 0.30%)</title><rect x="20.5" y="389" width="3.4" height="15.0" fill="rgb(218,213,5)" rx="2" ry="2" />
<text  x="23.46" y="399.5" ></text>
</g>
<g >
<title>service::client_state::has_access (7 samples, 1.03%)</title><rect x="761.2" y="437" width="12.2" height="15.0" fill="rgb(208,120,29)" rx="2" ry="2" />
<text  x="764.23" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="292.4" y="325" width="1.7" height="15.0" fill="rgb(224,10,51)" rx="2" ry="2" />
<text  x="295.36" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_service_level_statement, std::default_delete&lt;cql3::statements::alter_service_level_statement&gt; &gt;::_M_ptr (1 samples, 0.15%)</title><rect x="132.0" y="405" width="1.8" height="15.0" fill="rgb(250,123,52)" rx="2" ry="2" />
<text  x="135.01" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="114.6" y="213" width="1.7" height="15.0" fill="rgb(210,207,35)" rx="2" ry="2" />
<text  x="117.58" y="223.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.30%)</title><rect x="102.4" y="277" width="3.5" height="15.0" fill="rgb(210,15,41)" rx="2" ry="2" />
<text  x="105.38" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (10 samples, 1.48%)</title><rect x="651.4" y="533" width="17.4" height="15.0" fill="rgb(240,177,2)" rx="2" ry="2" />
<text  x="654.42" y="543.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (2 samples, 0.30%)</title><rect x="965.2" y="341" width="3.4" height="15.0" fill="rgb(220,181,50)" rx="2" ry="2" />
<text  x="968.16" y="351.5" ></text>
</g>
<g >
<title>row::~row (7 samples, 1.03%)</title><rect x="412.6" y="421" width="12.2" height="15.0" fill="rgb(235,23,15)" rx="2" ry="2" />
<text  x="415.63" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="104.1" y="133" width="1.8" height="15.0" fill="rgb(231,201,52)" rx="2" ry="2" />
<text  x="107.12" y="143.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="1078.4" y="517" width="1.8" height="15.0" fill="rgb(219,147,2)" rx="2" ry="2" />
<text  x="1081.45" y="527.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.15%)</title><rect x="783.9" y="469" width="1.7" height="15.0" fill="rgb(224,12,44)" rx="2" ry="2" />
<text  x="786.88" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.15%)</title><rect x="79.7" y="341" width="1.8" height="15.0" fill="rgb(251,214,36)" rx="2" ry="2" />
<text  x="82.72" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (1 samples, 0.15%)</title><rect x="146.0" y="293" width="1.7" height="15.0" fill="rgb(252,172,6)" rx="2" ry="2" />
<text  x="148.95" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="1055.8" y="357" width="1.7" height="15.0" fill="rgb(215,35,3)" rx="2" ry="2" />
<text  x="1058.79" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.15%)</title><rect x="93.7" y="293" width="1.7" height="15.0" fill="rgb(246,175,4)" rx="2" ry="2" />
<text  x="96.66" y="303.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (67 samples, 9.90%)</title><rect x="20.5" y="517" width="116.7" height="15.0" fill="rgb(217,80,46)" rx="2" ry="2" />
<text  x="23.46" y="527.5" >cql3::query_pr..</text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (44 samples, 6.50%)</title><rect x="546.8" y="469" width="76.7" height="15.0" fill="rgb(242,177,20)" rx="2" ry="2" />
<text  x="549.84" y="479.5" >std::_Fu..</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::alter_role_statement, std::default_delete&lt;cql3::statements::alter_role_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.15%)</title><rect x="130.3" y="405" width="1.7" height="15.0" fill="rgb(206,157,54)" rx="2" ry="2" />
<text  x="133.27" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="158.2" y="501" width="1.7" height="15.0" fill="rgb(245,111,40)" rx="2" ry="2" />
<text  x="161.15" y="511.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (7 samples, 1.03%)</title><rect x="227.9" y="485" width="12.2" height="15.0" fill="rgb(226,220,40)" rx="2" ry="2" />
<text  x="230.87" y="495.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (2 samples, 0.30%)</title><rect x="827.5" y="341" width="3.4" height="15.0" fill="rgb(227,152,36)" rx="2" ry="2" />
<text  x="830.46" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.15%)</title><rect x="806.5" y="453" width="1.8" height="15.0" fill="rgb(221,195,5)" rx="2" ry="2" />
<text  x="809.54" y="463.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (2 samples, 0.30%)</title><rect x="869.3" y="437" width="3.5" height="15.0" fill="rgb(248,198,25)" rx="2" ry="2" />
<text  x="872.29" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.30%)</title><rect x="102.4" y="261" width="3.5" height="15.0" fill="rgb(247,53,48)" rx="2" ry="2" />
<text  x="105.38" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.15%)</title><rect x="69.3" y="405" width="1.7" height="15.0" fill="rgb(252,118,0)" rx="2" ry="2" />
<text  x="72.26" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.15%)</title><rect x="830.9" y="341" width="1.8" height="15.0" fill="rgb(243,128,25)" rx="2" ry="2" />
<text  x="833.95" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.30%)</title><rect x="98.9" y="197" width="3.5" height="15.0" fill="rgb(251,21,49)" rx="2" ry="2" />
<text  x="101.89" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (5 samples, 0.74%)</title><rect x="360.3" y="373" width="8.8" height="15.0" fill="rgb(245,138,49)" rx="2" ry="2" />
<text  x="363.34" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="1087.2" y="517" width="1.7" height="15.0" fill="rgb(236,171,26)" rx="2" ry="2" />
<text  x="1090.16" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (3 samples, 0.44%)</title><rect x="37.9" y="341" width="5.2" height="15.0" fill="rgb(208,26,3)" rx="2" ry="2" />
<text  x="40.89" y="351.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (1 samples, 0.15%)</title><rect x="1054.0" y="261" width="1.8" height="15.0" fill="rgb(214,172,32)" rx="2" ry="2" />
<text  x="1057.05" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (5 samples, 0.74%)</title><rect x="789.1" y="469" width="8.7" height="15.0" fill="rgb(249,93,18)" rx="2" ry="2" />
<text  x="792.11" y="479.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.15%)</title><rect x="872.8" y="437" width="1.7" height="15.0" fill="rgb(219,51,16)" rx="2" ry="2" />
<text  x="875.78" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_service_level_statement, std::default_delete&lt;cql3::statements::alter_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.15%)</title><rect x="132.0" y="421" width="1.8" height="15.0" fill="rgb(217,66,6)" rx="2" ry="2" />
<text  x="135.01" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.15%)</title><rect x="175.6" y="517" width="1.7" height="15.0" fill="rgb(214,108,19)" rx="2" ry="2" />
<text  x="178.58" y="527.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_error (1 samples, 0.15%)</title><rect x="111.1" y="293" width="1.7" height="15.0" fill="rgb(250,185,24)" rx="2" ry="2" />
<text  x="114.09" y="303.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (2 samples, 0.30%)</title><rect x="43.1" y="309" width="3.5" height="15.0" fill="rgb(224,19,12)" rx="2" ry="2" />
<text  x="46.12" y="319.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (2 samples, 0.30%)</title><rect x="11.7" y="549" width="3.5" height="15.0" fill="rgb(227,128,40)" rx="2" ry="2" />
<text  x="14.74" y="559.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.15%)</title><rect x="301.1" y="325" width="1.7" height="15.0" fill="rgb(209,54,1)" rx="2" ry="2" />
<text  x="304.08" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (1 samples, 0.15%)</title><rect x="121.6" y="357" width="1.7" height="15.0" fill="rgb(246,101,22)" rx="2" ry="2" />
<text  x="124.55" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.15%)</title><rect x="714.2" y="533" width="1.7" height="15.0" fill="rgb(225,12,24)" rx="2" ry="2" />
<text  x="717.17" y="543.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (22 samples, 3.25%)</title><rect x="930.3" y="357" width="38.3" height="15.0" fill="rgb(210,171,35)" rx="2" ry="2" />
<text  x="933.30" y="367.5" >ser..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.30%)</title><rect x="71.0" y="373" width="3.5" height="15.0" fill="rgb(221,147,14)" rx="2" ry="2" />
<text  x="74.00" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.15%)</title><rect x="23.9" y="405" width="1.8" height="15.0" fill="rgb(210,121,51)" rx="2" ry="2" />
<text  x="26.94" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (20 samples, 2.95%)</title><rect x="81.5" y="373" width="34.8" height="15.0" fill="rgb(223,50,28)" rx="2" ry="2" />
<text  x="84.46" y="383.5" >cq..</text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.15%)</title><rect x="400.4" y="453" width="1.8" height="15.0" fill="rgb(242,128,18)" rx="2" ry="2" />
<text  x="403.43" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="69.3" y="293" width="1.7" height="15.0" fill="rgb(250,3,22)" rx="2" ry="2" />
<text  x="72.26" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="1059.3" y="533" width="1.7" height="15.0" fill="rgb(245,118,17)" rx="2" ry="2" />
<text  x="1062.28" y="543.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (4 samples, 0.59%)</title><rect x="353.4" y="357" width="6.9" height="15.0" fill="rgb(206,173,20)" rx="2" ry="2" />
<text  x="356.37" y="367.5" ></text>
</g>
<g >
<title>make_combined_reader (9 samples, 1.33%)</title><rect x="557.3" y="421" width="15.7" height="15.0" fill="rgb(252,207,23)" rx="2" ry="2" />
<text  x="560.30" y="431.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.15%)</title><rect x="146.0" y="533" width="1.7" height="15.0" fill="rgb(232,91,2)" rx="2" ry="2" />
<text  x="148.95" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.15%)</title><rect x="48.3" y="277" width="1.8" height="15.0" fill="rgb(221,164,1)" rx="2" ry="2" />
<text  x="51.35" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.30%)</title><rect x="102.4" y="245" width="3.5" height="15.0" fill="rgb(226,64,34)" rx="2" ry="2" />
<text  x="105.38" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (6 samples, 0.89%)</title><rect x="116.3" y="405" width="10.5" height="15.0" fill="rgb(223,42,45)" rx="2" ry="2" />
<text  x="119.32" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.15%)</title><rect x="146.0" y="261" width="1.7" height="15.0" fill="rgb(221,219,44)" rx="2" ry="2" />
<text  x="148.95" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.15%)</title><rect x="48.3" y="293" width="1.8" height="15.0" fill="rgb(247,90,48)" rx="2" ry="2" />
<text  x="51.35" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (1 samples, 0.15%)</title><rect x="290.6" y="373" width="1.8" height="15.0" fill="rgb(207,144,54)" rx="2" ry="2" />
<text  x="293.62" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="100.6" y="85" width="1.8" height="15.0" fill="rgb(215,154,34)" rx="2" ry="2" />
<text  x="103.64" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.30%)</title><rect x="86.7" y="325" width="3.5" height="15.0" fill="rgb(246,182,37)" rx="2" ry="2" />
<text  x="89.69" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (3 samples, 0.44%)</title><rect x="1052.3" y="405" width="5.2" height="15.0" fill="rgb(208,6,50)" rx="2" ry="2" />
<text  x="1055.30" y="415.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.15%)</title><rect x="146.0" y="245" width="1.7" height="15.0" fill="rgb(223,76,12)" rx="2" ry="2" />
<text  x="148.95" y="255.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (9 samples, 1.33%)</title><rect x="590.4" y="421" width="15.7" height="15.0" fill="rgb(220,170,43)" rx="2" ry="2" />
<text  x="593.41" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="630.5" y="437" width="5.2" height="15.0" fill="rgb(247,27,7)" rx="2" ry="2" />
<text  x="633.50" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.15%)</title><rect x="147.7" y="565" width="1.7" height="15.0" fill="rgb(225,139,32)" rx="2" ry="2" />
<text  x="150.70" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.30%)</title><rect x="102.4" y="229" width="3.5" height="15.0" fill="rgb(237,165,51)" rx="2" ry="2" />
<text  x="105.38" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="112.8" y="197" width="1.8" height="15.0" fill="rgb(217,172,45)" rx="2" ry="2" />
<text  x="115.84" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.30%)</title><rect x="81.5" y="229" width="3.4" height="15.0" fill="rgb(211,16,35)" rx="2" ry="2" />
<text  x="84.46" y="239.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.15%)</title><rect x="112.8" y="261" width="1.8" height="15.0" fill="rgb(218,9,23)" rx="2" ry="2" />
<text  x="115.84" y="271.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.15%)</title><rect x="1048.8" y="389" width="1.8" height="15.0" fill="rgb(243,212,47)" rx="2" ry="2" />
<text  x="1051.82" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.15%)</title><rect x="13.5" y="501" width="1.7" height="15.0" fill="rgb(206,62,22)" rx="2" ry="2" />
<text  x="16.49" y="511.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.74%)</title><rect x="993.0" y="373" width="8.8" height="15.0" fill="rgb(240,79,41)" rx="2" ry="2" />
<text  x="996.04" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (1 samples, 0.15%)</title><rect x="1054.0" y="341" width="1.8" height="15.0" fill="rgb(217,157,46)" rx="2" ry="2" />
<text  x="1057.05" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (1 samples, 0.15%)</title><rect x="792.6" y="421" width="1.7" height="15.0" fill="rgb(207,180,49)" rx="2" ry="2" />
<text  x="795.60" y="431.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (544 samples, 80.35%)</title><rect x="149.4" y="597" width="948.2" height="15.0" fill="rgb(227,64,1)" rx="2" ry="2" />
<text  x="152.44" y="607.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (2 samples, 0.30%)</title><rect x="43.1" y="261" width="3.5" height="15.0" fill="rgb(212,74,47)" rx="2" ry="2" />
<text  x="46.12" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.15%)</title><rect x="146.0" y="213" width="1.7" height="15.0" fill="rgb(240,126,4)" rx="2" ry="2" />
<text  x="148.95" y="223.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (2 samples, 0.30%)</title><rect x="647.9" y="533" width="3.5" height="15.0" fill="rgb(229,39,44)" rx="2" ry="2" />
<text  x="650.93" y="543.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.15%)</title><rect x="754.3" y="453" width="1.7" height="15.0" fill="rgb(225,56,20)" rx="2" ry="2" />
<text  x="757.25" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (3 samples, 0.44%)</title><rect x="37.9" y="325" width="5.2" height="15.0" fill="rgb(232,165,11)" rx="2" ry="2" />
<text  x="40.89" y="335.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.30%)</title><rect x="393.5" y="453" width="3.4" height="15.0" fill="rgb(239,143,8)" rx="2" ry="2" />
<text  x="396.46" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="114.6" y="133" width="1.7" height="15.0" fill="rgb(254,196,6)" rx="2" ry="2" />
<text  x="117.58" y="143.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.15%)</title><rect x="688.0" y="533" width="1.8" height="15.0" fill="rgb(241,40,54)" rx="2" ry="2" />
<text  x="691.02" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.15%)</title><rect x="349.9" y="261" width="1.7" height="15.0" fill="rgb(205,113,25)" rx="2" ry="2" />
<text  x="352.88" y="271.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.15%)</title><rect x="349.9" y="277" width="1.7" height="15.0" fill="rgb(213,107,21)" rx="2" ry="2" />
<text  x="352.88" y="287.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (75 samples, 11.08%)</title><rect x="254.0" y="453" width="130.7" height="15.0" fill="rgb(210,172,40)" rx="2" ry="2" />
<text  x="257.02" y="463.5" >merging_reader&lt;m..</text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.15%)</title><rect x="10.0" y="581" width="1.7" height="15.0" fill="rgb(250,2,54)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.30%)</title><rect x="98.9" y="229" width="3.5" height="15.0" fill="rgb(216,193,0)" rx="2" ry="2" />
<text  x="101.89" y="239.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="158.2" y="517" width="1.7" height="15.0" fill="rgb(223,84,40)" rx="2" ry="2" />
<text  x="161.15" y="527.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.15%)</title><rect x="114.6" y="149" width="1.7" height="15.0" fill="rgb(211,76,15)" rx="2" ry="2" />
<text  x="117.58" y="159.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="118.1" y="341" width="1.7" height="15.0" fill="rgb(243,137,30)" rx="2" ry="2" />
<text  x="121.06" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="635.7" y="485" width="1.8" height="15.0" fill="rgb(208,88,47)" rx="2" ry="2" />
<text  x="638.73" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (10 samples, 1.48%)</title><rect x="832.7" y="437" width="17.4" height="15.0" fill="rgb(230,119,33)" rx="2" ry="2" />
<text  x="835.69" y="447.5" ></text>
</g>
<g >
<title>memtable::apply (2 samples, 0.30%)</title><rect x="1047.1" y="405" width="3.5" height="15.0" fill="rgb(234,7,24)" rx="2" ry="2" />
<text  x="1050.08" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="851.9" y="437" width="1.7" height="15.0" fill="rgb(229,191,8)" rx="2" ry="2" />
<text  x="854.86" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.15%)</title><rect x="105.9" y="277" width="1.7" height="15.0" fill="rgb(247,50,5)" rx="2" ry="2" />
<text  x="108.86" y="287.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (3 samples, 0.44%)</title><rect x="484.1" y="437" width="5.2" height="15.0" fill="rgb(217,4,23)" rx="2" ry="2" />
<text  x="487.09" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="118.1" y="277" width="1.7" height="15.0" fill="rgb(233,38,30)" rx="2" ry="2" />
<text  x="121.06" y="287.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.30%)</title><rect x="98.9" y="261" width="3.5" height="15.0" fill="rgb(214,53,28)" rx="2" ry="2" />
<text  x="101.89" y="271.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.44%)</title><rect x="313.3" y="293" width="5.2" height="15.0" fill="rgb(238,129,47)" rx="2" ry="2" />
<text  x="316.28" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (75 samples, 11.08%)</title><rect x="254.0" y="469" width="130.7" height="15.0" fill="rgb(214,77,48)" rx="2" ry="2" />
<text  x="257.02" y="479.5" >flat_mutation_re..</text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt; &gt;::_Vector_base (1 samples, 0.15%)</title><rect x="125.0" y="373" width="1.8" height="15.0" fill="rgb(253,229,42)" rx="2" ry="2" />
<text  x="128.04" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="571.2" y="389" width="1.8" height="15.0" fill="rgb(233,148,53)" rx="2" ry="2" />
<text  x="574.24" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.30%)</title><rect x="81.5" y="325" width="3.4" height="15.0" fill="rgb(226,164,34)" rx="2" ry="2" />
<text  x="84.46" y="335.5" ></text>
</g>
<g >
<title>database::query (10 samples, 1.48%)</title><rect x="946.0" y="309" width="17.4" height="15.0" fill="rgb(254,210,20)" rx="2" ry="2" />
<text  x="948.98" y="319.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (1 samples, 0.15%)</title><rect x="1045.3" y="437" width="1.8" height="15.0" fill="rgb(252,102,45)" rx="2" ry="2" />
<text  x="1048.33" y="447.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (2 samples, 0.30%)</title><rect x="53.6" y="293" width="3.5" height="15.0" fill="rgb(216,204,32)" rx="2" ry="2" />
<text  x="56.57" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (263 samples, 38.85%)</title><rect x="182.6" y="517" width="458.4" height="15.0" fill="rgb(207,196,50)" rx="2" ry="2" />
<text  x="185.56" y="527.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (1 samples, 0.15%)</title><rect x="287.1" y="389" width="1.8" height="15.0" fill="rgb(213,10,32)" rx="2" ry="2" />
<text  x="290.13" y="399.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_error (1 samples, 0.15%)</title><rect x="46.6" y="309" width="1.7" height="15.0" fill="rgb(207,203,44)" rx="2" ry="2" />
<text  x="49.60" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.59%)</title><rect x="1050.6" y="501" width="6.9" height="15.0" fill="rgb(240,63,34)" rx="2" ry="2" />
<text  x="1053.56" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (1 samples, 0.15%)</title><rect x="50.1" y="309" width="1.7" height="15.0" fill="rgb(244,47,11)" rx="2" ry="2" />
<text  x="53.09" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (1 samples, 0.15%)</title><rect x="32.7" y="469" width="1.7" height="15.0" fill="rgb(246,45,42)" rx="2" ry="2" />
<text  x="35.66" y="479.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (10 samples, 1.48%)</title><rect x="330.7" y="293" width="17.4" height="15.0" fill="rgb(248,124,31)" rx="2" ry="2" />
<text  x="333.71" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="114.6" y="197" width="1.7" height="15.0" fill="rgb(235,63,14)" rx="2" ry="2" />
<text  x="117.58" y="207.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.15%)</title><rect x="874.5" y="437" width="1.8" height="15.0" fill="rgb(249,138,15)" rx="2" ry="2" />
<text  x="877.52" y="447.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.30%)</title><rect x="302.8" y="325" width="3.5" height="15.0" fill="rgb(249,133,18)" rx="2" ry="2" />
<text  x="305.82" y="335.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.74%)</title><rect x="918.1" y="373" width="8.7" height="15.0" fill="rgb(209,101,11)" rx="2" ry="2" />
<text  x="921.09" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (1 samples, 0.15%)</title><rect x="30.9" y="469" width="1.8" height="15.0" fill="rgb(224,78,28)" rx="2" ry="2" />
<text  x="33.92" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (11 samples, 1.62%)</title><rect x="43.1" y="325" width="19.2" height="15.0" fill="rgb(215,64,23)" rx="2" ry="2" />
<text  x="46.12" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (2 samples, 0.30%)</title><rect x="86.7" y="293" width="3.5" height="15.0" fill="rgb(227,159,8)" rx="2" ry="2" />
<text  x="89.69" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (140 samples, 20.68%)</title><rect x="803.1" y="485" width="244.0" height="15.0" fill="rgb(244,76,6)" rx="2" ry="2" />
<text  x="806.06" y="495.5" >seastar::noncopyable_function&lt;se..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="116.3" y="309" width="1.8" height="15.0" fill="rgb(209,193,7)" rx="2" ry="2" />
<text  x="119.32" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.15%)</title><rect x="25.7" y="421" width="1.7" height="15.0" fill="rgb(231,85,26)" rx="2" ry="2" />
<text  x="28.69" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.15%)</title><rect x="93.7" y="277" width="1.7" height="15.0" fill="rgb(215,229,38)" rx="2" ry="2" />
<text  x="96.66" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (6 samples, 0.89%)</title><rect x="689.8" y="533" width="10.4" height="15.0" fill="rgb(242,55,18)" rx="2" ry="2" />
<text  x="692.76" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.15%)</title><rect x="84.9" y="309" width="1.8" height="15.0" fill="rgb(243,158,7)" rx="2" ry="2" />
<text  x="87.95" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.30%)</title><rect x="98.9" y="245" width="3.5" height="15.0" fill="rgb(241,206,12)" rx="2" ry="2" />
<text  x="101.89" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.15%)</title><rect x="37.9" y="245" width="1.7" height="15.0" fill="rgb(235,23,16)" rx="2" ry="2" />
<text  x="40.89" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.59%)</title><rect x="240.1" y="469" width="6.9" height="15.0" fill="rgb(230,45,15)" rx="2" ry="2" />
<text  x="243.07" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.15%)</title><rect x="1055.8" y="293" width="1.7" height="15.0" fill="rgb(234,39,27)" rx="2" ry="2" />
<text  x="1058.79" y="303.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (6 samples, 0.89%)</title><rect x="337.7" y="277" width="10.4" height="15.0" fill="rgb(245,52,2)" rx="2" ry="2" />
<text  x="340.68" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="104.1" y="165" width="1.8" height="15.0" fill="rgb(214,229,53)" rx="2" ry="2" />
<text  x="107.12" y="175.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (6 samples, 0.89%)</title><rect x="20.5" y="485" width="10.4" height="15.0" fill="rgb(205,6,18)" rx="2" ry="2" />
<text  x="23.46" y="495.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1 samples, 0.15%)</title><rect x="135.5" y="421" width="1.7" height="15.0" fill="rgb(243,37,43)" rx="2" ry="2" />
<text  x="138.49" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (543 samples, 80.21%)</title><rect x="149.4" y="565" width="946.5" height="15.0" fill="rgb(230,113,39)" rx="2" ry="2" />
<text  x="152.44" y="575.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (5 samples, 0.74%)</title><rect x="789.1" y="517" width="8.7" height="15.0" fill="rgb(249,65,33)" rx="2" ry="2" />
<text  x="792.11" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (541 samples, 79.91%)</title><rect x="151.2" y="549" width="942.9" height="15.0" fill="rgb(228,65,1)" rx="2" ry="2" />
<text  x="154.18" y="559.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="963.4" y="293" width="1.8" height="15.0" fill="rgb(244,118,36)" rx="2" ry="2" />
<text  x="966.41" y="303.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.15%)</title><rect x="602.6" y="357" width="1.8" height="15.0" fill="rgb(219,65,19)" rx="2" ry="2" />
<text  x="605.61" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="118.1" y="261" width="1.7" height="15.0" fill="rgb(229,116,49)" rx="2" ry="2" />
<text  x="121.06" y="271.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (3 samples, 0.44%)</title><rect x="1106.3" y="661" width="5.3" height="15.0" fill="rgb(215,7,15)" rx="2" ry="2" />
<text  x="1109.34" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="88.4" y="229" width="1.8" height="15.0" fill="rgb(250,22,11)" rx="2" ry="2" />
<text  x="91.43" y="239.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.30%)</title><rect x="98.9" y="293" width="3.5" height="15.0" fill="rgb(222,43,48)" rx="2" ry="2" />
<text  x="101.89" y="303.5" ></text>
</g>
<g >
<title>size_tiered_backlog_tracker::backlog (1 samples, 0.15%)</title><rect x="1094.1" y="453" width="1.8" height="15.0" fill="rgb(223,94,39)" rx="2" ry="2" />
<text  x="1097.14" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="69.3" y="245" width="1.7" height="15.0" fill="rgb(234,63,0)" rx="2" ry="2" />
<text  x="72.26" y="255.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (6 samples, 0.89%)</title><rect x="745.5" y="469" width="10.5" height="15.0" fill="rgb(233,221,31)" rx="2" ry="2" />
<text  x="748.54" y="479.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.15%)</title><rect x="161.6" y="501" width="1.8" height="15.0" fill="rgb(216,103,38)" rx="2" ry="2" />
<text  x="164.64" y="511.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.15%)</title><rect x="30.9" y="421" width="1.8" height="15.0" fill="rgb(229,213,14)" rx="2" ry="2" />
<text  x="33.92" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Optional_payload_base (1 samples, 0.15%)</title><rect x="123.3" y="245" width="1.7" height="15.0" fill="rgb(211,26,2)" rx="2" ry="2" />
<text  x="126.29" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (18 samples, 2.66%)</title><rect x="36.1" y="373" width="31.4" height="15.0" fill="rgb(212,15,32)" rx="2" ry="2" />
<text  x="39.14" y="383.5" >an..</text>
</g>
<g >
<title>service::client_state::has_column_family_access (9 samples, 1.33%)</title><rect x="759.5" y="453" width="15.7" height="15.0" fill="rgb(244,24,0)" rx="2" ry="2" />
<text  x="762.48" y="463.5" ></text>
</g>
<g >
<title>free (1 samples, 0.15%)</title><rect x="165.1" y="469" width="1.8" height="15.0" fill="rgb(229,44,33)" rx="2" ry="2" />
<text  x="168.13" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.15%)</title><rect x="97.1" y="277" width="1.8" height="15.0" fill="rgb(220,218,53)" rx="2" ry="2" />
<text  x="100.15" y="287.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="292.4" y="341" width="1.7" height="15.0" fill="rgb(208,227,1)" rx="2" ry="2" />
<text  x="295.36" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (1 samples, 0.15%)</title><rect x="146.0" y="325" width="1.7" height="15.0" fill="rgb(238,209,1)" rx="2" ry="2" />
<text  x="148.95" y="335.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (2 samples, 0.30%)</title><rect x="618.3" y="405" width="3.5" height="15.0" fill="rgb(252,196,17)" rx="2" ry="2" />
<text  x="621.30" y="415.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="69.3" y="261" width="1.7" height="15.0" fill="rgb(233,19,50)" rx="2" ry="2" />
<text  x="72.26" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.30%)</title><rect x="81.5" y="245" width="3.4" height="15.0" fill="rgb(227,94,5)" rx="2" ry="2" />
<text  x="84.46" y="255.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (18 samples, 2.66%)</title><rect x="36.1" y="421" width="31.4" height="15.0" fill="rgb(242,6,18)" rx="2" ry="2" />
<text  x="39.14" y="431.5" >an..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="118.1" y="325" width="1.7" height="15.0" fill="rgb(240,228,32)" rx="2" ry="2" />
<text  x="121.06" y="335.5" ></text>
</g>
<g >
<title>seastar::app_template::run (544 samples, 80.35%)</title><rect x="149.4" y="629" width="948.2" height="15.0" fill="rgb(250,26,6)" rx="2" ry="2" />
<text  x="152.44" y="639.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (4 samples, 0.59%)</title><rect x="825.7" y="373" width="7.0" height="15.0" fill="rgb(214,25,4)" rx="2" ry="2" />
<text  x="828.72" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (2 samples, 0.30%)</title><rect x="11.7" y="581" width="3.5" height="15.0" fill="rgb(251,7,25)" rx="2" ry="2" />
<text  x="14.74" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.30%)</title><rect x="98.9" y="213" width="3.5" height="15.0" fill="rgb(243,121,11)" rx="2" ry="2" />
<text  x="101.89" y="223.5" ></text>
</g>
<g >
<title>table::query (246 samples, 36.34%)</title><rect x="212.2" y="501" width="428.8" height="15.0" fill="rgb(220,172,30)" rx="2" ry="2" />
<text  x="215.19" y="511.5" >table::query</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.15%)</title><rect x="74.5" y="373" width="1.7" height="15.0" fill="rgb(238,25,38)" rx="2" ry="2" />
<text  x="77.49" y="383.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.44%)</title><rect x="519.0" y="405" width="5.2" height="15.0" fill="rgb(240,184,6)" rx="2" ry="2" />
<text  x="521.95" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="91.9" y="309" width="1.8" height="15.0" fill="rgb(244,192,29)" rx="2" ry="2" />
<text  x="94.92" y="319.5" ></text>
</g>
<g >
<title>create_partitions (70 samples, 10.34%)</title><rect x="15.2" y="549" width="122.0" height="15.0" fill="rgb(241,7,6)" rx="2" ry="2" />
<text  x="18.23" y="559.5" >create_partitions</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.15%)</title><rect x="782.1" y="485" width="1.8" height="15.0" fill="rgb(207,8,2)" rx="2" ry="2" />
<text  x="785.14" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="104.1" y="149" width="1.8" height="15.0" fill="rgb(251,197,40)" rx="2" ry="2" />
<text  x="107.12" y="159.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (4 samples, 0.59%)</title><rect x="668.8" y="517" width="7.0" height="15.0" fill="rgb(219,64,22)" rx="2" ry="2" />
<text  x="671.85" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="593.9" y="389" width="1.7" height="15.0" fill="rgb(242,79,18)" rx="2" ry="2" />
<text  x="596.90" y="399.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.15%)</title><rect x="688.0" y="357" width="1.8" height="15.0" fill="rgb(242,225,40)" rx="2" ry="2" />
<text  x="691.02" y="367.5" ></text>
</g>
<g >
<title>__libc_start_main (544 samples, 80.35%)</title><rect x="149.4" y="661" width="948.2" height="15.0" fill="rgb(248,44,38)" rx="2" ry="2" />
<text  x="152.44" y="671.5" >__libc_start_main</text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.30%)</title><rect x="98.9" y="149" width="3.5" height="15.0" fill="rgb(220,148,15)" rx="2" ry="2" />
<text  x="101.89" y="159.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.15%)</title><rect x="641.0" y="517" width="1.7" height="15.0" fill="rgb(213,0,21)" rx="2" ry="2" />
<text  x="643.96" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="74.5" y="229" width="1.7" height="15.0" fill="rgb(252,152,41)" rx="2" ry="2" />
<text  x="77.49" y="239.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (14 samples, 2.07%)</title><rect x="1005.2" y="357" width="24.4" height="15.0" fill="rgb(216,124,47)" rx="2" ry="2" />
<text  x="1008.24" y="367.5" >l..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.15%)</title><rect x="84.9" y="293" width="1.8" height="15.0" fill="rgb(210,50,13)" rx="2" ry="2" />
<text  x="87.95" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="88.4" y="213" width="1.8" height="15.0" fill="rgb(221,134,14)" rx="2" ry="2" />
<text  x="91.43" y="223.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="369.1" y="421" width="1.7" height="15.0" fill="rgb(252,60,30)" rx="2" ry="2" />
<text  x="372.05" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (3 samples, 0.44%)</title><rect x="660.1" y="517" width="5.3" height="15.0" fill="rgb(215,206,11)" rx="2" ry="2" />
<text  x="663.13" y="527.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 10.78%)</title><rect x="10.0" y="645" width="127.2" height="15.0" fill="rgb(217,184,39)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.15%)</title><rect x="37.9" y="229" width="1.7" height="15.0" fill="rgb(237,208,37)" rx="2" ry="2" />
<text  x="40.89" y="239.5" ></text>
</g>
<g >
<title>std::_Bind_front&lt;bool  (1 samples, 0.15%)</title><rect x="792.6" y="405" width="1.7" height="15.0" fill="rgb(214,46,41)" rx="2" ry="2" />
<text  x="795.60" y="415.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;ser::buffer_view&lt;bytes_ostream::fragment_iterator&gt; &gt; (1 samples, 0.15%)</title><rect x="1047.1" y="341" width="1.7" height="15.0" fill="rgb(242,96,49)" rx="2" ry="2" />
<text  x="1050.08" y="351.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.30%)</title><rect x="942.5" y="325" width="3.5" height="15.0" fill="rgb(226,55,40)" rx="2" ry="2" />
<text  x="945.50" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.30%)</title><rect x="86.7" y="341" width="3.5" height="15.0" fill="rgb(242,227,42)" rx="2" ry="2" />
<text  x="89.69" y="351.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.15%)</title><rect x="780.4" y="485" width="1.7" height="15.0" fill="rgb(237,75,17)" rx="2" ry="2" />
<text  x="783.40" y="495.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.15%)</title><rect x="123.3" y="325" width="1.7" height="15.0" fill="rgb(215,155,27)" rx="2" ry="2" />
<text  x="126.29" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.30%)</title><rect x="1081.9" y="517" width="3.5" height="15.0" fill="rgb(249,57,31)" rx="2" ry="2" />
<text  x="1084.94" y="527.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.30%)</title><rect x="170.4" y="533" width="3.4" height="15.0" fill="rgb(251,118,9)" rx="2" ry="2" />
<text  x="173.35" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (2 samples, 0.30%)</title><rect x="86.7" y="309" width="3.5" height="15.0" fill="rgb(244,215,43)" rx="2" ry="2" />
<text  x="89.69" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="686.3" y="517" width="1.7" height="15.0" fill="rgb(210,137,53)" rx="2" ry="2" />
<text  x="689.28" y="527.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (9 samples, 1.33%)</title><rect x="817.0" y="421" width="15.7" height="15.0" fill="rgb(242,1,30)" rx="2" ry="2" />
<text  x="820.00" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (6 samples, 0.89%)</title><rect x="1031.4" y="453" width="10.4" height="15.0" fill="rgb(238,80,33)" rx="2" ry="2" />
<text  x="1034.39" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.15%)</title><rect x="146.0" y="629" width="1.7" height="15.0" fill="rgb(232,117,45)" rx="2" ry="2" />
<text  x="148.95" y="639.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (18 samples, 2.66%)</title><rect x="580.0" y="437" width="31.3" height="15.0" fill="rgb(214,133,29)" rx="2" ry="2" />
<text  x="582.96" y="447.5" >me..</text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (1 samples, 0.15%)</title><rect x="794.3" y="405" width="1.8" height="15.0" fill="rgb(244,174,34)" rx="2" ry="2" />
<text  x="797.34" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (4 samples, 0.59%)</title><rect x="20.5" y="437" width="6.9" height="15.0" fill="rgb(239,171,50)" rx="2" ry="2" />
<text  x="23.46" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.15%)</title><rect x="616.6" y="389" width="1.7" height="15.0" fill="rgb(218,14,24)" rx="2" ry="2" />
<text  x="619.56" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (70 samples, 10.34%)</title><rect x="15.2" y="581" width="122.0" height="15.0" fill="rgb(236,37,32)" rx="2" ry="2" />
<text  x="18.23" y="591.5" >std::_Function_..</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.30%)</title><rect x="98.9" y="277" width="3.5" height="15.0" fill="rgb(245,19,4)" rx="2" ry="2" />
<text  x="101.89" y="287.5" ></text>
</g>
<g >
<title>auth::get_permissions (5 samples, 0.74%)</title><rect x="763.0" y="405" width="8.7" height="15.0" fill="rgb(215,222,32)" rx="2" ry="2" />
<text  x="765.97" y="415.5" ></text>
</g>
<g >
<title>free (1 samples, 0.15%)</title><rect x="421.3" y="405" width="1.8" height="15.0" fill="rgb(224,196,31)" rx="2" ry="2" />
<text  x="424.34" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="116.3" y="373" width="1.8" height="15.0" fill="rgb(213,70,41)" rx="2" ry="2" />
<text  x="119.32" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="27.4" y="389" width="1.8" height="15.0" fill="rgb(219,186,32)" rx="2" ry="2" />
<text  x="30.43" y="399.5" ></text>
</g>
<g >
<title>posix_memalign (6 samples, 0.89%)</title><rect x="337.7" y="261" width="10.4" height="15.0" fill="rgb(207,164,3)" rx="2" ry="2" />
<text  x="340.68" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="100.6" y="69" width="1.8" height="15.0" fill="rgb(236,143,47)" rx="2" ry="2" />
<text  x="103.64" y="79.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="112.8" y="181" width="1.8" height="15.0" fill="rgb(249,48,31)" rx="2" ry="2" />
<text  x="115.84" y="191.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (8 samples, 1.18%)</title><rect x="410.9" y="437" width="13.9" height="15.0" fill="rgb(250,175,22)" rx="2" ry="2" />
<text  x="413.89" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.74%)</title><rect x="993.0" y="357" width="8.8" height="15.0" fill="rgb(207,205,6)" rx="2" ry="2" />
<text  x="996.04" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.15%)</title><rect x="41.4" y="309" width="1.7" height="15.0" fill="rgb(217,37,19)" rx="2" ry="2" />
<text  x="44.37" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (6 samples, 0.89%)</title><rect x="677.6" y="533" width="10.4" height="15.0" fill="rgb(217,189,23)" rx="2" ry="2" />
<text  x="680.56" y="543.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (140 samples, 20.68%)</title><rect x="803.1" y="501" width="244.0" height="15.0" fill="rgb(246,135,1)" rx="2" ry="2" />
<text  x="806.06" y="511.5" >seastar::noncopyable_function&lt;se..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_role_statement, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_role_statement&gt;, void&gt; (1 samples, 0.15%)</title><rect x="130.3" y="421" width="1.7" height="15.0" fill="rgb(220,32,27)" rx="2" ry="2" />
<text  x="133.27" y="431.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (4 samples, 0.59%)</title><rect x="747.3" y="437" width="7.0" height="15.0" fill="rgb(206,150,29)" rx="2" ry="2" />
<text  x="750.28" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="146.0" y="357" width="1.7" height="15.0" fill="rgb(252,56,46)" rx="2" ry="2" />
<text  x="148.95" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (1 samples, 0.15%)</title><rect x="1054.0" y="325" width="1.8" height="15.0" fill="rgb(243,47,41)" rx="2" ry="2" />
<text  x="1057.05" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.15%)</title><rect x="84.9" y="357" width="1.8" height="15.0" fill="rgb(226,161,0)" rx="2" ry="2" />
<text  x="87.95" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.15%)</title><rect x="796.1" y="373" width="1.7" height="15.0" fill="rgb(250,123,51)" rx="2" ry="2" />
<text  x="799.09" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (5 samples, 0.74%)</title><rect x="412.6" y="405" width="8.7" height="15.0" fill="rgb(245,63,23)" rx="2" ry="2" />
<text  x="415.63" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.15%)</title><rect x="116.3" y="389" width="1.8" height="15.0" fill="rgb(245,30,34)" rx="2" ry="2" />
<text  x="119.32" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="724.6" y="453" width="1.8" height="15.0" fill="rgb(211,170,5)" rx="2" ry="2" />
<text  x="727.62" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.15%)</title><rect x="539.9" y="437" width="1.7" height="15.0" fill="rgb(229,78,25)" rx="2" ry="2" />
<text  x="542.87" y="447.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (2 samples, 0.30%)</title><rect x="607.8" y="421" width="3.5" height="15.0" fill="rgb(248,55,22)" rx="2" ry="2" />
<text  x="610.84" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (3 samples, 0.44%)</title><rect x="163.4" y="485" width="5.2" height="15.0" fill="rgb(250,146,44)" rx="2" ry="2" />
<text  x="166.38" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_M_head (1 samples, 0.15%)</title><rect x="97.1" y="261" width="1.8" height="15.0" fill="rgb(212,66,9)" rx="2" ry="2" />
<text  x="100.15" y="271.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.15%)</title><rect x="750.8" y="421" width="1.7" height="15.0" fill="rgb(248,120,18)" rx="2" ry="2" />
<text  x="753.77" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.15%)</title><rect x="10.0" y="549" width="1.7" height="15.0" fill="rgb(217,71,7)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (46 samples, 6.79%)</title><rect x="288.9" y="405" width="80.2" height="15.0" fill="rgb(214,119,17)" rx="2" ry="2" />
<text  x="291.88" y="415.5" >partition..</text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.15%)</title><rect x="146.0" y="405" width="1.7" height="15.0" fill="rgb(237,97,22)" rx="2" ry="2" />
<text  x="148.95" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (1 samples, 0.15%)</title><rect x="1045.3" y="453" width="1.8" height="15.0" fill="rgb(247,70,31)" rx="2" ry="2" />
<text  x="1048.33" y="463.5" ></text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt; &gt; (1 samples, 0.15%)</title><rect x="18.7" y="517" width="1.8" height="15.0" fill="rgb(239,39,17)" rx="2" ry="2" />
<text  x="21.71" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.15%)</title><rect x="27.4" y="421" width="1.8" height="15.0" fill="rgb(252,30,13)" rx="2" ry="2" />
<text  x="30.43" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.15%)</title><rect x="121.6" y="293" width="1.7" height="15.0" fill="rgb(233,223,24)" rx="2" ry="2" />
<text  x="124.55" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.59%)</title><rect x="1050.6" y="485" width="6.9" height="15.0" fill="rgb(253,212,6)" rx="2" ry="2" />
<text  x="1053.56" y="495.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (68 samples, 10.04%)</title><rect x="388.2" y="469" width="118.6" height="15.0" fill="rgb(234,157,9)" rx="2" ry="2" />
<text  x="391.23" y="479.5" >query::consume..</text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.59%)</title><rect x="233.1" y="453" width="7.0" height="15.0" fill="rgb(235,220,49)" rx="2" ry="2" />
<text  x="236.10" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.15%)</title><rect x="926.8" y="373" width="1.8" height="15.0" fill="rgb(243,156,14)" rx="2" ry="2" />
<text  x="929.81" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (26 samples, 3.84%)</title><rect x="808.3" y="453" width="45.3" height="15.0" fill="rgb(253,18,13)" rx="2" ry="2" />
<text  x="811.29" y="463.5" >cql3..</text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.30%)</title><rect x="98.9" y="117" width="3.5" height="15.0" fill="rgb(245,96,54)" rx="2" ry="2" />
<text  x="101.89" y="127.5" ></text>
</g>
<g >
<title>auth::get_permissions (1 samples, 0.15%)</title><rect x="135.5" y="437" width="1.7" height="15.0" fill="rgb(206,49,14)" rx="2" ry="2" />
<text  x="138.49" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="69.3" y="373" width="1.7" height="15.0" fill="rgb(216,126,53)" rx="2" ry="2" />
<text  x="72.26" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (3 samples, 0.44%)</title><rect x="1052.3" y="389" width="5.2" height="15.0" fill="rgb(229,82,36)" rx="2" ry="2" />
<text  x="1055.30" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.15%)</title><rect x="646.2" y="517" width="1.7" height="15.0" fill="rgb(245,34,52)" rx="2" ry="2" />
<text  x="649.19" y="527.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (1 samples, 0.15%)</title><rect x="1088.9" y="501" width="1.7" height="15.0" fill="rgb(248,93,47)" rx="2" ry="2" />
<text  x="1091.91" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="69.3" y="309" width="1.7" height="15.0" fill="rgb(225,12,20)" rx="2" ry="2" />
<text  x="72.26" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.15%)</title><rect x="107.6" y="261" width="1.8" height="15.0" fill="rgb(242,66,21)" rx="2" ry="2" />
<text  x="110.61" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="820.5" y="341" width="1.7" height="15.0" fill="rgb(218,208,47)" rx="2" ry="2" />
<text  x="823.49" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.30%)</title><rect x="93.7" y="325" width="3.4" height="15.0" fill="rgb(214,35,42)" rx="2" ry="2" />
<text  x="96.66" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.15%)</title><rect x="109.4" y="309" width="1.7" height="15.0" fill="rgb(250,44,6)" rx="2" ry="2" />
<text  x="112.35" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (29 samples, 4.28%)</title><rect x="301.1" y="341" width="50.5" height="15.0" fill="rgb(216,226,26)" rx="2" ry="2" />
<text  x="304.08" y="351.5" >parti..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="166.9" y="469" width="1.7" height="15.0" fill="rgb(236,74,26)" rx="2" ry="2" />
<text  x="169.87" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="248.8" y="469" width="1.7" height="15.0" fill="rgb(221,213,19)" rx="2" ry="2" />
<text  x="251.79" y="479.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="573.0" y="421" width="1.7" height="15.0" fill="rgb(209,157,7)" rx="2" ry="2" />
<text  x="575.98" y="431.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (73 samples, 10.78%)</title><rect x="254.0" y="437" width="127.3" height="15.0" fill="rgb(224,15,15)" rx="2" ry="2" />
<text  x="257.02" y="447.5" >merging_reader&lt;..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (2 samples, 0.30%)</title><rect x="710.7" y="533" width="3.5" height="15.0" fill="rgb(252,88,53)" rx="2" ry="2" />
<text  x="713.68" y="543.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (1 samples, 0.15%)</title><rect x="27.4" y="453" width="1.8" height="15.0" fill="rgb(235,15,45)" rx="2" ry="2" />
<text  x="30.43" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.15%)</title><rect x="107.6" y="245" width="1.8" height="15.0" fill="rgb(238,195,3)" rx="2" ry="2" />
<text  x="110.61" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="116.3" y="293" width="1.8" height="15.0" fill="rgb(217,184,50)" rx="2" ry="2" />
<text  x="119.32" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.44%)</title><rect x="71.0" y="389" width="5.2" height="15.0" fill="rgb(236,31,39)" rx="2" ry="2" />
<text  x="74.00" y="399.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.15%)</title><rect x="111.1" y="309" width="1.7" height="15.0" fill="rgb(226,95,50)" rx="2" ry="2" />
<text  x="114.09" y="319.5" ></text>
</g>
<g >
<title>mutation_querier::consume (22 samples, 3.25%)</title><rect x="431.8" y="421" width="38.3" height="15.0" fill="rgb(239,190,36)" rx="2" ry="2" />
<text  x="434.80" y="431.5" >mut..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.15%)</title><rect x="30.9" y="357" width="1.8" height="15.0" fill="rgb(237,31,16)" rx="2" ry="2" />
<text  x="33.92" y="367.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.15%)</title><rect x="349.9" y="293" width="1.7" height="15.0" fill="rgb(251,139,16)" rx="2" ry="2" />
<text  x="352.88" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="876.3" y="421" width="1.7" height="15.0" fill="rgb(219,79,0)" rx="2" ry="2" />
<text  x="879.26" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.30%)</title><rect x="93.7" y="341" width="3.4" height="15.0" fill="rgb(250,134,54)" rx="2" ry="2" />
<text  x="96.66" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.15%)</title><rect x="146.0" y="229" width="1.7" height="15.0" fill="rgb(235,133,34)" rx="2" ry="2" />
<text  x="148.95" y="239.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.15%)</title><rect x="1109.8" y="645" width="1.8" height="15.0" fill="rgb(227,65,3)" rx="2" ry="2" />
<text  x="1112.82" y="655.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.15%)</title><rect x="688.0" y="373" width="1.8" height="15.0" fill="rgb(227,152,16)" rx="2" ry="2" />
<text  x="691.02" y="383.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="112.8" y="101" width="1.8" height="15.0" fill="rgb(231,169,52)" rx="2" ry="2" />
<text  x="115.84" y="111.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="116.3" y="229" width="1.8" height="15.0" fill="rgb(228,218,35)" rx="2" ry="2" />
<text  x="119.32" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.74%)</title><rect x="918.1" y="357" width="8.7" height="15.0" fill="rgb(247,165,52)" rx="2" ry="2" />
<text  x="921.09" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (73 samples, 10.78%)</title><rect x="10.0" y="597" width="127.2" height="15.0" fill="rgb(208,187,30)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >seastar::noncop..</text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.30%)</title><rect x="98.9" y="165" width="3.5" height="15.0" fill="rgb(231,81,4)" rx="2" ry="2" />
<text  x="101.89" y="175.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.30%)</title><rect x="707.2" y="501" width="3.5" height="15.0" fill="rgb(206,151,24)" rx="2" ry="2" />
<text  x="710.19" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (2 samples, 0.30%)</title><rect x="637.5" y="485" width="3.5" height="15.0" fill="rgb(242,196,26)" rx="2" ry="2" />
<text  x="640.47" y="495.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (3 samples, 0.44%)</title><rect x="140.7" y="613" width="5.3" height="15.0" fill="rgb(235,167,26)" rx="2" ry="2" />
<text  x="143.72" y="623.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (1 samples, 0.15%)</title><rect x="794.3" y="373" width="1.8" height="15.0" fill="rgb(231,181,43)" rx="2" ry="2" />
<text  x="797.34" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.30%)</title><rect x="327.2" y="293" width="3.5" height="15.0" fill="rgb(235,109,7)" rx="2" ry="2" />
<text  x="330.22" y="303.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (1 samples, 0.15%)</title><rect x="135.5" y="453" width="1.7" height="15.0" fill="rgb(225,98,50)" rx="2" ry="2" />
<text  x="138.49" y="463.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.15%)</title><rect x="118.1" y="293" width="1.7" height="15.0" fill="rgb(250,44,21)" rx="2" ry="2" />
<text  x="121.06" y="303.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (2 samples, 0.30%)</title><rect x="102.4" y="309" width="3.5" height="15.0" fill="rgb(206,7,23)" rx="2" ry="2" />
<text  x="105.38" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.15%)</title><rect x="506.8" y="469" width="1.7" height="15.0" fill="rgb(215,142,40)" rx="2" ry="2" />
<text  x="509.75" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.15%)</title><rect x="691.5" y="517" width="1.7" height="15.0" fill="rgb(208,19,41)" rx="2" ry="2" />
<text  x="694.51" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="112.8" y="245" width="1.8" height="15.0" fill="rgb(238,179,51)" rx="2" ry="2" />
<text  x="115.84" y="255.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (2 samples, 0.30%)</title><rect x="297.6" y="341" width="3.5" height="15.0" fill="rgb(247,115,10)" rx="2" ry="2" />
<text  x="300.59" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.30%)</title><rect x="43.1" y="229" width="3.5" height="15.0" fill="rgb(240,91,36)" rx="2" ry="2" />
<text  x="46.12" y="239.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="724.6" y="469" width="1.8" height="15.0" fill="rgb(234,220,49)" rx="2" ry="2" />
<text  x="727.62" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="820.5" y="357" width="1.7" height="15.0" fill="rgb(242,206,51)" rx="2" ry="2" />
<text  x="823.49" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="1078.4" y="501" width="1.8" height="15.0" fill="rgb(232,10,37)" rx="2" ry="2" />
<text  x="1081.45" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (42 samples, 6.20%)</title><rect x="715.9" y="533" width="73.2" height="15.0" fill="rgb(243,56,19)" rx="2" ry="2" />
<text  x="718.91" y="543.5" >seastar:..</text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.15%)</title><rect x="1095.9" y="581" width="1.7" height="15.0" fill="rgb(238,203,5)" rx="2" ry="2" />
<text  x="1098.88" y="591.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (3 samples, 0.44%)</title><rect x="194.8" y="485" width="5.2" height="15.0" fill="rgb(231,15,3)" rx="2" ry="2" />
<text  x="197.76" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="383.0" y="437" width="1.7" height="15.0" fill="rgb(249,13,8)" rx="2" ry="2" />
<text  x="386.00" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (34 samples, 5.02%)</title><rect x="69.3" y="421" width="59.2" height="15.0" fill="rgb(223,169,11)" rx="2" ry="2" />
<text  x="72.26" y="431.5" >cql3_p..</text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.15%)</title><rect x="855.3" y="437" width="1.8" height="15.0" fill="rgb(213,23,45)" rx="2" ry="2" />
<text  x="858.35" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (16 samples, 2.36%)</title><rect x="1001.8" y="373" width="27.8" height="15.0" fill="rgb(210,36,42)" rx="2" ry="2" />
<text  x="1004.76" y="383.5" >s..</text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (1 samples, 0.15%)</title><rect x="32.7" y="421" width="1.7" height="15.0" fill="rgb(219,125,8)" rx="2" ry="2" />
<text  x="35.66" y="431.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.15%)</title><rect x="105.9" y="229" width="1.7" height="15.0" fill="rgb(251,40,49)" rx="2" ry="2" />
<text  x="108.86" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.15%)</title><rect x="97.1" y="325" width="1.8" height="15.0" fill="rgb(222,100,13)" rx="2" ry="2" />
<text  x="100.15" y="335.5" ></text>
</g>
<g >
<title>table::apply (2 samples, 0.30%)</title><rect x="1047.1" y="421" width="3.5" height="15.0" fill="rgb(213,164,36)" rx="2" ry="2" />
<text  x="1050.08" y="431.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.15%)</title><rect x="146.0" y="469" width="1.7" height="15.0" fill="rgb(214,53,35)" rx="2" ry="2" />
<text  x="148.95" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (267 samples, 39.44%)</title><rect x="177.3" y="533" width="465.4" height="15.0" fill="rgb(243,110,36)" rx="2" ry="2" />
<text  x="180.33" y="543.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>std::operator+ (2 samples, 0.30%)</title><rect x="81.5" y="213" width="3.4" height="15.0" fill="rgb(246,223,16)" rx="2" ry="2" />
<text  x="84.46" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="771.7" y="389" width="1.7" height="15.0" fill="rgb(250,132,10)" rx="2" ry="2" />
<text  x="774.68" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (6 samples, 0.89%)</title><rect x="337.7" y="245" width="10.4" height="15.0" fill="rgb(241,45,53)" rx="2" ry="2" />
<text  x="340.68" y="255.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.15%)</title><rect x="588.7" y="421" width="1.7" height="15.0" fill="rgb(213,38,24)" rx="2" ry="2" />
<text  x="591.67" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.30%)</title><rect x="541.6" y="437" width="3.5" height="15.0" fill="rgb(217,208,48)" rx="2" ry="2" />
<text  x="544.61" y="447.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.15%)</title><rect x="187.8" y="501" width="1.7" height="15.0" fill="rgb(215,31,24)" rx="2" ry="2" />
<text  x="190.78" y="511.5" ></text>
</g>
<g >
<title>query::querier_base::close (1 samples, 0.15%)</title><rect x="189.5" y="501" width="1.8" height="15.0" fill="rgb(249,226,0)" rx="2" ry="2" />
<text  x="192.53" y="511.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (6 samples, 0.89%)</title><rect x="700.2" y="533" width="10.5" height="15.0" fill="rgb(232,16,32)" rx="2" ry="2" />
<text  x="703.22" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="116.3" y="325" width="1.8" height="15.0" fill="rgb(223,61,13)" rx="2" ry="2" />
<text  x="119.32" y="335.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (5 samples, 0.74%)</title><rect x="137.2" y="645" width="8.8" height="15.0" fill="rgb(232,185,48)" rx="2" ry="2" />
<text  x="140.24" y="655.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (1 samples, 0.15%)</title><rect x="586.9" y="405" width="1.8" height="15.0" fill="rgb(242,149,14)" rx="2" ry="2" />
<text  x="589.93" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (17 samples, 2.51%)</title><rect x="935.5" y="341" width="29.7" height="15.0" fill="rgb(225,28,14)" rx="2" ry="2" />
<text  x="938.52" y="351.5" >se..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.15%)</title><rect x="76.2" y="341" width="1.8" height="15.0" fill="rgb(223,194,44)" rx="2" ry="2" />
<text  x="79.23" y="351.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.15%)</title><rect x="961.7" y="261" width="1.7" height="15.0" fill="rgb(215,136,22)" rx="2" ry="2" />
<text  x="964.67" y="271.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.15%)</title><rect x="146.0" y="501" width="1.7" height="15.0" fill="rgb(219,143,32)" rx="2" ry="2" />
<text  x="148.95" y="511.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (1 samples, 0.15%)</title><rect x="787.4" y="517" width="1.7" height="15.0" fill="rgb(216,90,11)" rx="2" ry="2" />
<text  x="790.37" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.15%)</title><rect x="112.8" y="149" width="1.8" height="15.0" fill="rgb(244,65,46)" rx="2" ry="2" />
<text  x="115.84" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::~deque (1 samples, 0.15%)</title><rect x="32.7" y="405" width="1.7" height="15.0" fill="rgb(230,217,10)" rx="2" ry="2" />
<text  x="35.66" y="415.5" ></text>
</g>
<g >
<title>row::external_memory_usage (4 samples, 0.59%)</title><rect x="311.5" y="325" width="7.0" height="15.0" fill="rgb(243,63,37)" rx="2" ry="2" />
<text  x="314.54" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.30%)</title><rect x="93.7" y="309" width="3.4" height="15.0" fill="rgb(207,173,34)" rx="2" ry="2" />
<text  x="96.66" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="27.4" y="373" width="1.8" height="15.0" fill="rgb(245,108,37)" rx="2" ry="2" />
<text  x="30.43" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="430.1" y="437" width="1.7" height="15.0" fill="rgb(241,63,36)" rx="2" ry="2" />
<text  x="433.06" y="447.5" ></text>
</g>
<g >
<title>all (677 samples, 100%)</title><rect x="10.0" y="693" width="1180.0" height="15.0" fill="rgb(215,81,7)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (13 samples, 1.92%)</title><rect x="756.0" y="469" width="22.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="759.00" y="479.5" >c..</text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (1 samples, 0.15%)</title><rect x="796.1" y="421" width="1.7" height="15.0" fill="rgb(213,173,3)" rx="2" ry="2" />
<text  x="799.09" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (1 samples, 0.15%)</title><rect x="146.0" y="309" width="1.7" height="15.0" fill="rgb(226,101,27)" rx="2" ry="2" />
<text  x="148.95" y="319.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.44%)</title><rect x="630.5" y="453" width="5.2" height="15.0" fill="rgb(251,37,23)" rx="2" ry="2" />
<text  x="633.50" y="463.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.15%)</title><rect x="146.0" y="453" width="1.7" height="15.0" fill="rgb(248,18,33)" rx="2" ry="2" />
<text  x="148.95" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="116.3" y="277" width="1.8" height="15.0" fill="rgb(244,146,17)" rx="2" ry="2" />
<text  x="119.32" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.44%)</title><rect x="1052.3" y="437" width="5.2" height="15.0" fill="rgb(205,134,9)" rx="2" ry="2" />
<text  x="1055.30" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.15%)</title><rect x="100.6" y="53" width="1.8" height="15.0" fill="rgb(214,13,22)" rx="2" ry="2" />
<text  x="103.64" y="63.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, true, false, false&gt;::_Optional_payload_base (1 samples, 0.15%)</title><rect x="123.3" y="261" width="1.7" height="15.0" fill="rgb(246,103,3)" rx="2" ry="2" />
<text  x="126.29" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (12 samples, 1.77%)</title><rect x="811.8" y="437" width="20.9" height="15.0" fill="rgb(215,49,48)" rx="2" ry="2" />
<text  x="814.77" y="447.5" ></text>
</g>
<g >
<title>table::make_reader (43 samples, 6.35%)</title><rect x="548.6" y="453" width="74.9" height="15.0" fill="rgb(253,217,36)" rx="2" ry="2" />
<text  x="551.58" y="463.5" >table::m..</text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.15%)</title><rect x="663.6" y="501" width="1.8" height="15.0" fill="rgb(213,113,51)" rx="2" ry="2" />
<text  x="666.62" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (46 samples, 6.79%)</title><rect x="288.9" y="389" width="80.2" height="15.0" fill="rgb(240,5,50)" rx="2" ry="2" />
<text  x="291.88" y="399.5" >partition..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.15%)</title><rect x="147.7" y="629" width="1.7" height="15.0" fill="rgb(229,159,48)" rx="2" ry="2" />
<text  x="150.70" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.15%)</title><rect x="62.3" y="325" width="1.7" height="15.0" fill="rgb(253,218,4)" rx="2" ry="2" />
<text  x="65.29" y="335.5" ></text>
</g>
<g >
<title>seastar::writeable_eventfd::signal (1 samples, 0.15%)</title><rect x="147.7" y="645" width="1.7" height="15.0" fill="rgb(212,118,0)" rx="2" ry="2" />
<text  x="150.70" y="655.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (5 samples, 0.74%)</title><rect x="789.1" y="501" width="8.7" height="15.0" fill="rgb(244,70,38)" rx="2" ry="2" />
<text  x="792.11" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.15%)</title><rect x="114.6" y="165" width="1.7" height="15.0" fill="rgb(206,69,27)" rx="2" ry="2" />
<text  x="117.58" y="175.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.15%)</title><rect x="447.5" y="405" width="1.7" height="15.0" fill="rgb(223,79,50)" rx="2" ry="2" />
<text  x="450.49" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.15%)</title><rect x="100.6" y="37" width="1.8" height="15.0" fill="rgb(228,14,33)" rx="2" ry="2" />
<text  x="103.64" y="47.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="74.5" y="325" width="1.7" height="15.0" fill="rgb(206,159,10)" rx="2" ry="2" />
<text  x="77.49" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.30%)</title><rect x="81.5" y="341" width="3.4" height="15.0" fill="rgb(214,33,32)" rx="2" ry="2" />
<text  x="84.46" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.15%)</title><rect x="1094.1" y="549" width="1.8" height="15.0" fill="rgb(224,101,10)" rx="2" ry="2" />
<text  x="1097.14" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="876.3" y="437" width="1.7" height="15.0" fill="rgb(221,161,45)" rx="2" ry="2" />
<text  x="879.26" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="114.6" y="261" width="1.7" height="15.0" fill="rgb(215,88,21)" rx="2" ry="2" />
<text  x="117.58" y="271.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (3 samples, 0.44%)</title><rect x="266.2" y="405" width="5.2" height="15.0" fill="rgb(254,196,39)" rx="2" ry="2" />
<text  x="269.22" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (6 samples, 0.89%)</title><rect x="700.2" y="517" width="10.5" height="15.0" fill="rgb(239,156,44)" rx="2" ry="2" />
<text  x="703.22" y="527.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.15%)</title><rect x="311.5" y="293" width="1.8" height="15.0" fill="rgb(211,74,27)" rx="2" ry="2" />
<text  x="314.54" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.15%)</title><rect x="146.0" y="389" width="1.7" height="15.0" fill="rgb(243,84,16)" rx="2" ry="2" />
<text  x="148.95" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="34.4" y="469" width="1.7" height="15.0" fill="rgb(217,49,25)" rx="2" ry="2" />
<text  x="37.40" y="479.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (66 samples, 9.75%)</title><rect x="20.5" y="501" width="115.0" height="15.0" fill="rgb(238,187,1)" rx="2" ry="2" />
<text  x="23.46" y="511.5" >cql3::query_pr..</text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.15%)</title><rect x="1047.1" y="309" width="1.7" height="15.0" fill="rgb(218,152,27)" rx="2" ry="2" />
<text  x="1050.08" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.30%)</title><rect x="81.5" y="309" width="3.4" height="15.0" fill="rgb(245,91,37)" rx="2" ry="2" />
<text  x="84.46" y="319.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (1 samples, 0.15%)</title><rect x="351.6" y="341" width="1.8" height="15.0" fill="rgb(223,100,39)" rx="2" ry="2" />
<text  x="354.62" y="351.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (6 samples, 0.89%)</title><rect x="839.7" y="421" width="10.4" height="15.0" fill="rgb(206,0,1)" rx="2" ry="2" />
<text  x="842.66" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="109.4" y="245" width="1.7" height="15.0" fill="rgb(235,128,43)" rx="2" ry="2" />
<text  x="112.35" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="69.3" y="389" width="1.7" height="15.0" fill="rgb(218,131,22)" rx="2" ry="2" />
<text  x="72.26" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.15%)</title><rect x="146.0" y="549" width="1.7" height="15.0" fill="rgb(238,27,39)" rx="2" ry="2" />
<text  x="148.95" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::list_service_level_statement, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.15%)</title><rect x="133.8" y="405" width="1.7" height="15.0" fill="rgb(241,39,40)" rx="2" ry="2" />
<text  x="136.75" y="415.5" ></text>
</g>
<g >
<title>make_combined_reader (14 samples, 2.07%)</title><rect x="555.6" y="437" width="24.4" height="15.0" fill="rgb(240,72,41)" rx="2" ry="2" />
<text  x="558.55" y="447.5" >m..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="72.7" y="357" width="1.8" height="15.0" fill="rgb(216,80,41)" rx="2" ry="2" />
<text  x="75.75" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="571.2" y="405" width="1.8" height="15.0" fill="rgb(245,67,27)" rx="2" ry="2" />
<text  x="574.24" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.15%)</title><rect x="43.1" y="197" width="1.8" height="15.0" fill="rgb(240,106,24)" rx="2" ry="2" />
<text  x="46.12" y="207.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="665.4" y="517" width="1.7" height="15.0" fill="rgb(215,141,45)" rx="2" ry="2" />
<text  x="668.36" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (2 samples, 0.30%)</title><rect x="37.9" y="261" width="3.5" height="15.0" fill="rgb(240,82,14)" rx="2" ry="2" />
<text  x="40.89" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="951.2" y="277" width="5.2" height="15.0" fill="rgb(248,19,44)" rx="2" ry="2" />
<text  x="954.21" y="287.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (1 samples, 0.15%)</title><rect x="1055.8" y="309" width="1.7" height="15.0" fill="rgb(242,126,15)" rx="2" ry="2" />
<text  x="1058.79" y="319.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (1 samples, 0.15%)</title><rect x="48.3" y="309" width="1.8" height="15.0" fill="rgb(237,164,24)" rx="2" ry="2" />
<text  x="51.35" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="74.5" y="277" width="1.7" height="15.0" fill="rgb(227,23,42)" rx="2" ry="2" />
<text  x="77.49" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.30%)</title><rect x="775.2" y="453" width="3.5" height="15.0" fill="rgb(233,94,22)" rx="2" ry="2" />
<text  x="778.17" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (2 samples, 0.30%)</title><rect x="614.8" y="405" width="3.5" height="15.0" fill="rgb(215,218,23)" rx="2" ry="2" />
<text  x="617.82" y="415.5" ></text>
</g>
<g >
<title>database::find_schema (2 samples, 0.30%)</title><rect x="756.0" y="453" width="3.5" height="15.0" fill="rgb(229,109,36)" rx="2" ry="2" />
<text  x="759.00" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="84.9" y="341" width="1.8" height="15.0" fill="rgb(239,91,46)" rx="2" ry="2" />
<text  x="87.95" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="574.7" y="421" width="1.8" height="15.0" fill="rgb(243,132,50)" rx="2" ry="2" />
<text  x="577.73" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="112.8" y="117" width="1.8" height="15.0" fill="rgb(227,7,33)" rx="2" ry="2" />
<text  x="115.84" y="127.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="76.2" y="357" width="1.8" height="15.0" fill="rgb(217,194,2)" rx="2" ry="2" />
<text  x="79.23" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::run (543 samples, 80.21%)</title><rect x="149.4" y="581" width="946.5" height="15.0" fill="rgb(242,53,22)" rx="2" ry="2" />
<text  x="152.44" y="591.5" >seastar::reactor::run</text>
</g>
<g >
<title>database::apply_in_memory (2 samples, 0.30%)</title><rect x="1047.1" y="437" width="3.5" height="15.0" fill="rgb(250,146,15)" rx="2" ry="2" />
<text  x="1050.08" y="447.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (1 samples, 0.15%)</title><rect x="32.7" y="437" width="1.7" height="15.0" fill="rgb(240,104,24)" rx="2" ry="2" />
<text  x="35.66" y="447.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.15%)</title><rect x="534.6" y="405" width="1.8" height="15.0" fill="rgb(220,35,4)" rx="2" ry="2" />
<text  x="537.64" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.15%)</title><rect x="146.0" y="421" width="1.7" height="15.0" fill="rgb(250,87,17)" rx="2" ry="2" />
<text  x="148.95" y="431.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="1041.8" y="453" width="1.8" height="15.0" fill="rgb(242,120,2)" rx="2" ry="2" />
<text  x="1044.85" y="463.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.15%)</title><rect x="773.4" y="437" width="1.8" height="15.0" fill="rgb(228,147,48)" rx="2" ry="2" />
<text  x="776.43" y="447.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (1 samples, 0.15%)</title><rect x="1054.0" y="277" width="1.8" height="15.0" fill="rgb(247,93,24)" rx="2" ry="2" />
<text  x="1057.05" y="287.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.30%)</title><rect x="86.7" y="261" width="3.5" height="15.0" fill="rgb(245,30,53)" rx="2" ry="2" />
<text  x="89.69" y="271.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.15%)</title><rect x="745.5" y="421" width="1.8" height="15.0" fill="rgb(212,118,3)" rx="2" ry="2" />
<text  x="748.54" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.30%)</title><rect x="102.4" y="293" width="3.5" height="15.0" fill="rgb(233,42,5)" rx="2" ry="2" />
<text  x="105.38" y="303.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (1 samples, 0.15%)</title><rect x="783.9" y="485" width="1.7" height="15.0" fill="rgb(209,128,14)" rx="2" ry="2" />
<text  x="786.88" y="495.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.15%)</title><rect x="139.0" y="613" width="1.7" height="15.0" fill="rgb(234,6,44)" rx="2" ry="2" />
<text  x="141.98" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.15%)</title><rect x="121.6" y="261" width="1.7" height="15.0" fill="rgb(249,162,5)" rx="2" ry="2" />
<text  x="124.55" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (1 samples, 0.15%)</title><rect x="1055.8" y="325" width="1.7" height="15.0" fill="rgb(241,76,13)" rx="2" ry="2" />
<text  x="1058.79" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.15%)</title><rect x="121.6" y="341" width="1.7" height="15.0" fill="rgb(253,13,0)" rx="2" ry="2" />
<text  x="124.55" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.30%)</title><rect x="105.9" y="309" width="3.5" height="15.0" fill="rgb(232,17,22)" rx="2" ry="2" />
<text  x="108.86" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (12 samples, 1.77%)</title><rect x="43.1" y="357" width="20.9" height="15.0" fill="rgb(220,153,26)" rx="2" ry="2" />
<text  x="46.12" y="367.5" ></text>
</g>
<g >
<title>database::find_keyspace (4 samples, 0.59%)</title><rect x="984.3" y="373" width="7.0" height="15.0" fill="rgb(237,196,52)" rx="2" ry="2" />
<text  x="987.33" y="383.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (16 samples, 2.36%)</title><rect x="512.0" y="453" width="27.9" height="15.0" fill="rgb(244,200,9)" rx="2" ry="2" />
<text  x="514.98" y="463.5" >m..</text>
</g>
<g >
<title>operator delete (2 samples, 0.30%)</title><rect x="672.3" y="501" width="3.5" height="15.0" fill="rgb(244,216,5)" rx="2" ry="2" />
<text  x="675.33" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.15%)</title><rect x="11.7" y="517" width="1.8" height="15.0" fill="rgb(230,144,11)" rx="2" ry="2" />
<text  x="14.74" y="527.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.15%)</title><rect x="105.9" y="293" width="1.7" height="15.0" fill="rgb(221,191,25)" rx="2" ry="2" />
<text  x="108.86" y="303.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (3 samples, 0.44%)</title><rect x="1052.3" y="453" width="5.2" height="15.0" fill="rgb(222,139,37)" rx="2" ry="2" />
<text  x="1055.30" y="463.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (2 samples, 0.30%)</title><rect x="722.9" y="485" width="3.5" height="15.0" fill="rgb(217,55,41)" rx="2" ry="2" />
<text  x="725.88" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (35 samples, 5.17%)</title><rect x="968.6" y="389" width="61.0" height="15.0" fill="rgb(237,30,17)" rx="2" ry="2" />
<text  x="971.64" y="399.5" >servic..</text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (4 samples, 0.59%)</title><rect x="527.7" y="389" width="6.9" height="15.0" fill="rgb(220,47,37)" rx="2" ry="2" />
<text  x="530.67" y="399.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="76.2" y="373" width="1.8" height="15.0" fill="rgb(220,83,46)" rx="2" ry="2" />
<text  x="79.23" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (88 samples, 13.00%)</title><rect x="878.0" y="437" width="153.4" height="15.0" fill="rgb(233,137,23)" rx="2" ry="2" />
<text  x="881.01" y="447.5" >service::storage_pr..</text>
</g>
<g >
<title>cql3::statements::select_statement::execute (1 samples, 0.15%)</title><rect x="778.7" y="469" width="1.7" height="15.0" fill="rgb(208,125,6)" rx="2" ry="2" />
<text  x="781.66" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="611.3" y="437" width="1.8" height="15.0" fill="rgb(222,157,26)" rx="2" ry="2" />
<text  x="614.33" y="447.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (7 samples, 1.03%)</title><rect x="761.2" y="421" width="12.2" height="15.0" fill="rgb(229,183,24)" rx="2" ry="2" />
<text  x="764.23" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (2 samples, 0.30%)</title><rect x="853.6" y="453" width="3.5" height="15.0" fill="rgb(228,188,39)" rx="2" ry="2" />
<text  x="856.60" y="463.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (37 samples, 5.47%)</title><rect x="721.1" y="517" width="64.5" height="15.0" fill="rgb(234,63,0)" rx="2" ry="2" />
<text  x="724.14" y="527.5" >single_..</text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (9 samples, 1.33%)</title><rect x="817.0" y="389" width="15.7" height="15.0" fill="rgb(210,203,40)" rx="2" ry="2" />
<text  x="820.00" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (6 samples, 0.89%)</title><rect x="595.6" y="405" width="10.5" height="15.0" fill="rgb(231,221,24)" rx="2" ry="2" />
<text  x="598.64" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="428.3" y="421" width="1.8" height="15.0" fill="rgb(230,206,2)" rx="2" ry="2" />
<text  x="431.32" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (5 samples, 0.74%)</title><rect x="191.3" y="501" width="8.7" height="15.0" fill="rgb(234,116,11)" rx="2" ry="2" />
<text  x="194.27" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (19 samples, 2.81%)</title><rect x="318.5" y="309" width="33.1" height="15.0" fill="rgb(237,224,23)" rx="2" ry="2" />
<text  x="321.51" y="319.5" >co..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.15%)</title><rect x="146.0" y="165" width="1.7" height="15.0" fill="rgb(206,1,48)" rx="2" ry="2" />
<text  x="148.95" y="175.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.44%)</title><rect x="71.0" y="405" width="5.2" height="15.0" fill="rgb(214,162,4)" rx="2" ry="2" />
<text  x="74.00" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.15%)</title><rect x="107.6" y="277" width="1.8" height="15.0" fill="rgb(235,78,25)" rx="2" ry="2" />
<text  x="110.61" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (39 samples, 5.76%)</title><rect x="292.4" y="373" width="67.9" height="15.0" fill="rgb(230,19,24)" rx="2" ry="2" />
<text  x="295.36" y="383.5" >partiti..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="1095.9" y="533" width="1.7" height="15.0" fill="rgb(253,180,39)" rx="2" ry="2" />
<text  x="1098.88" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.15%)</title><rect x="119.8" y="341" width="1.8" height="15.0" fill="rgb(226,218,41)" rx="2" ry="2" />
<text  x="122.81" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.15%)</title><rect x="91.9" y="341" width="1.8" height="15.0" fill="rgb(250,99,31)" rx="2" ry="2" />
<text  x="94.92" y="351.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="146.0" y="373" width="1.7" height="15.0" fill="rgb(205,163,38)" rx="2" ry="2" />
<text  x="148.95" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.30%)</title><rect x="247.0" y="485" width="3.5" height="15.0" fill="rgb(239,162,17)" rx="2" ry="2" />
<text  x="250.05" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.15%)</title><rect x="958.2" y="245" width="1.7" height="15.0" fill="rgb(210,138,35)" rx="2" ry="2" />
<text  x="961.18" y="255.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.15%)</title><rect x="688.0" y="485" width="1.8" height="15.0" fill="rgb(211,211,18)" rx="2" ry="2" />
<text  x="691.02" y="495.5" ></text>
</g>
<g >
<title>table::make_reader (1 samples, 0.15%)</title><rect x="623.5" y="469" width="1.8" height="15.0" fill="rgb(239,32,31)" rx="2" ry="2" />
<text  x="626.53" y="479.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.15%)</title><rect x="470.1" y="421" width="1.8" height="15.0" fill="rgb(215,136,31)" rx="2" ry="2" />
<text  x="473.15" y="431.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.15%)</title><rect x="294.1" y="341" width="1.7" height="15.0" fill="rgb(227,227,8)" rx="2" ry="2" />
<text  x="297.11" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (1 samples, 0.15%)</title><rect x="752.5" y="421" width="1.8" height="15.0" fill="rgb(226,98,39)" rx="2" ry="2" />
<text  x="755.51" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.30%)</title><rect x="81.5" y="261" width="3.4" height="15.0" fill="rgb(208,81,34)" rx="2" ry="2" />
<text  x="84.46" y="271.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.15%)</title><rect x="1047.1" y="357" width="1.7" height="15.0" fill="rgb(252,137,37)" rx="2" ry="2" />
<text  x="1050.08" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::end (1 samples, 0.15%)</title><rect x="90.2" y="341" width="1.7" height="15.0" fill="rgb(216,209,32)" rx="2" ry="2" />
<text  x="93.18" y="351.5" ></text>
</g>
<g >
<title>do_cql_test (70 samples, 10.34%)</title><rect x="15.2" y="565" width="122.0" height="15.0" fill="rgb(236,212,11)" rx="2" ry="2" />
<text  x="18.23" y="575.5" >do_cql_test</text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.15%)</title><rect x="288.9" y="373" width="1.7" height="15.0" fill="rgb(240,58,16)" rx="2" ry="2" />
<text  x="291.88" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::~_Deque_base (1 samples, 0.15%)</title><rect x="32.7" y="389" width="1.7" height="15.0" fill="rgb(254,101,37)" rx="2" ry="2" />
<text  x="35.66" y="399.5" ></text>
</g>
<g >
<title>main (544 samples, 80.35%)</title><rect x="149.4" y="645" width="948.2" height="15.0" fill="rgb(235,212,31)" rx="2" ry="2" />
<text  x="152.44" y="655.5" >main</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.30%)</title><rect x="98.9" y="181" width="3.5" height="15.0" fill="rgb(232,141,15)" rx="2" ry="2" />
<text  x="101.89" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="147.7" y="581" width="1.7" height="15.0" fill="rgb(214,84,42)" rx="2" ry="2" />
<text  x="150.70" y="591.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.15%)</title><rect x="95.4" y="293" width="1.7" height="15.0" fill="rgb(248,93,26)" rx="2" ry="2" />
<text  x="98.41" y="303.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (73 samples, 10.78%)</title><rect x="10.0" y="613" width="127.2" height="15.0" fill="rgb(237,72,38)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >seastar::thread..</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.15%)</title><rect x="675.8" y="517" width="1.8" height="15.0" fill="rgb(243,184,48)" rx="2" ry="2" />
<text  x="678.82" y="527.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (1 samples, 0.15%)</title><rect x="820.5" y="373" width="1.7" height="15.0" fill="rgb(248,0,32)" rx="2" ry="2" />
<text  x="823.49" y="383.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.15%)</title><rect x="585.2" y="405" width="1.7" height="15.0" fill="rgb(224,21,32)" rx="2" ry="2" />
<text  x="588.18" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="620.0" y="357" width="1.8" height="15.0" fill="rgb(210,71,53)" rx="2" ry="2" />
<text  x="623.04" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.15%)</title><rect x="505.0" y="453" width="1.8" height="15.0" fill="rgb(246,217,18)" rx="2" ry="2" />
<text  x="508.01" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.30%)</title><rect x="302.8" y="309" width="3.5" height="15.0" fill="rgb(247,198,11)" rx="2" ry="2" />
<text  x="305.82" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (3 samples, 0.44%)</title><rect x="37.9" y="357" width="5.2" height="15.0" fill="rgb(224,152,32)" rx="2" ry="2" />
<text  x="40.89" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="604.4" y="389" width="1.7" height="15.0" fill="rgb(226,181,37)" rx="2" ry="2" />
<text  x="607.36" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (6 samples, 0.89%)</title><rect x="159.9" y="517" width="10.5" height="15.0" fill="rgb(217,26,9)" rx="2" ry="2" />
<text  x="162.90" y="527.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="688.0" y="405" width="1.8" height="15.0" fill="rgb(219,193,34)" rx="2" ry="2" />
<text  x="691.02" y="415.5" ></text>
</g>
<g >
<title>abstract_type::from_string (2 samples, 0.30%)</title><rect x="20.5" y="405" width="3.4" height="15.0" fill="rgb(233,94,13)" rx="2" ry="2" />
<text  x="23.46" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="649.7" y="501" width="1.7" height="15.0" fill="rgb(217,66,48)" rx="2" ry="2" />
<text  x="652.68" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (18 samples, 2.66%)</title><rect x="36.1" y="405" width="31.4" height="15.0" fill="rgb(234,94,17)" rx="2" ry="2" />
<text  x="39.14" y="415.5" >an..</text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (1 samples, 0.15%)</title><rect x="1055.8" y="341" width="1.7" height="15.0" fill="rgb(239,78,4)" rx="2" ry="2" />
<text  x="1058.79" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.15%)</title><rect x="112.8" y="165" width="1.8" height="15.0" fill="rgb(234,118,10)" rx="2" ry="2" />
<text  x="115.84" y="175.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (10 samples, 1.48%)</title><rect x="98.9" y="341" width="17.4" height="15.0" fill="rgb(237,48,12)" rx="2" ry="2" />
<text  x="101.89" y="351.5" ></text>
</g>
<g >
<title>[unknown] (80 samples, 11.82%)</title><rect x="10.0" y="661" width="139.4" height="15.0" fill="rgb(248,115,51)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >[unknown]</text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.15%)</title><rect x="146.0" y="277" width="1.7" height="15.0" fill="rgb(251,41,2)" rx="2" ry="2" />
<text  x="148.95" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (23 samples, 3.40%)</title><rect x="76.2" y="405" width="40.1" height="15.0" fill="rgb(243,158,21)" rx="2" ry="2" />
<text  x="79.23" y="415.5" >cql..</text>
</g>
<g >
<title>query::querier_base::close (21 samples, 3.10%)</title><rect x="508.5" y="485" width="36.6" height="15.0" fill="rgb(216,163,23)" rx="2" ry="2" />
<text  x="511.49" y="495.5" >que..</text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.15%)</title><rect x="1047.1" y="325" width="1.7" height="15.0" fill="rgb(242,27,32)" rx="2" ry="2" />
<text  x="1050.08" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::get_deleter (1 samples, 0.15%)</title><rect x="107.6" y="293" width="1.8" height="15.0" fill="rgb(216,134,50)" rx="2" ry="2" />
<text  x="110.61" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="593.9" y="405" width="1.7" height="15.0" fill="rgb(205,42,49)" rx="2" ry="2" />
<text  x="596.90" y="415.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.15%)</title><rect x="384.7" y="469" width="1.8" height="15.0" fill="rgb(225,32,27)" rx="2" ry="2" />
<text  x="387.74" y="479.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="84.9" y="325" width="1.8" height="15.0" fill="rgb(229,106,36)" rx="2" ry="2" />
<text  x="87.95" y="335.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="114.6" y="117" width="1.7" height="15.0" fill="rgb(231,159,37)" rx="2" ry="2" />
<text  x="117.58" y="127.5" ></text>
</g>
<g >
<title>query::querier&lt; (148 samples, 21.86%)</title><rect x="250.5" y="485" width="258.0" height="15.0" fill="rgb(216,17,0)" rx="2" ry="2" />
<text  x="253.53" y="495.5" >query::querier&lt;</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.15%)</title><rect x="10.0" y="517" width="1.7" height="15.0" fill="rgb(207,82,6)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.15%)</title><rect x="933.8" y="341" width="1.7" height="15.0" fill="rgb(250,187,35)" rx="2" ry="2" />
<text  x="936.78" y="351.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.15%)</title><rect x="348.1" y="293" width="1.8" height="15.0" fill="rgb(211,58,27)" rx="2" ry="2" />
<text  x="351.14" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (4 samples, 0.59%)</title><rect x="790.9" y="437" width="6.9" height="15.0" fill="rgb(213,228,1)" rx="2" ry="2" />
<text  x="793.86" y="447.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (1 samples, 0.15%)</title><rect x="32.7" y="453" width="1.7" height="15.0" fill="rgb(248,159,4)" rx="2" ry="2" />
<text  x="35.66" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (1 samples, 0.15%)</title><rect x="794.3" y="357" width="1.8" height="15.0" fill="rgb(228,59,20)" rx="2" ry="2" />
<text  x="797.34" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="116.3" y="341" width="1.8" height="15.0" fill="rgb(214,138,40)" rx="2" ry="2" />
<text  x="119.32" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="114.6" y="245" width="1.7" height="15.0" fill="rgb(212,48,2)" rx="2" ry="2" />
<text  x="117.58" y="255.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.15%)</title><rect x="621.8" y="405" width="1.7" height="15.0" fill="rgb(237,52,16)" rx="2" ry="2" />
<text  x="624.79" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="674.1" y="485" width="1.7" height="15.0" fill="rgb(228,45,32)" rx="2" ry="2" />
<text  x="677.08" y="495.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="91.9" y="293" width="1.8" height="15.0" fill="rgb(223,129,4)" rx="2" ry="2" />
<text  x="94.92" y="303.5" ></text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.15%)</title><rect x="890.2" y="405" width="1.7" height="15.0" fill="rgb(238,194,50)" rx="2" ry="2" />
<text  x="893.21" y="415.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (2 samples, 0.30%)</title><rect x="11.7" y="565" width="3.5" height="15.0" fill="rgb(241,3,39)" rx="2" ry="2" />
<text  x="14.74" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.30%)</title><rect x="118.1" y="357" width="3.5" height="15.0" fill="rgb(250,127,46)" rx="2" ry="2" />
<text  x="121.06" y="367.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.15%)</title><rect x="878.0" y="421" width="1.7" height="15.0" fill="rgb(219,123,49)" rx="2" ry="2" />
<text  x="881.01" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="114.6" y="277" width="1.7" height="15.0" fill="rgb(218,18,35)" rx="2" ry="2" />
<text  x="117.58" y="287.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.30%)</title><rect x="37.9" y="277" width="3.5" height="15.0" fill="rgb(242,140,39)" rx="2" ry="2" />
<text  x="40.89" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.15%)</title><rect x="667.1" y="517" width="1.7" height="15.0" fill="rgb(245,114,9)" rx="2" ry="2" />
<text  x="670.10" y="527.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.15%)</title><rect x="513.7" y="421" width="1.8" height="15.0" fill="rgb(225,124,10)" rx="2" ry="2" />
<text  x="516.72" y="431.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.15%)</title><rect x="10.0" y="565" width="1.7" height="15.0" fill="rgb(216,159,41)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="109.4" y="213" width="1.7" height="15.0" fill="rgb(223,152,25)" rx="2" ry="2" />
<text  x="112.35" y="223.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (4 samples, 0.59%)</title><rect x="20.5" y="453" width="6.9" height="15.0" fill="rgb(205,34,41)" rx="2" ry="2" />
<text  x="23.46" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.15%)</title><rect x="97.1" y="309" width="1.8" height="15.0" fill="rgb(231,47,6)" rx="2" ry="2" />
<text  x="100.15" y="319.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (35 samples, 5.17%)</title><rect x="1129.0" y="661" width="61.0" height="15.0" fill="rgb(237,75,36)" rx="2" ry="2" />
<text  x="1132.00" y="671.5" >sched_..</text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::operator (1 samples, 0.15%)</title><rect x="1055.8" y="261" width="1.7" height="15.0" fill="rgb(237,0,19)" rx="2" ry="2" />
<text  x="1058.79" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.15%)</title><rect x="104.1" y="117" width="1.8" height="15.0" fill="rgb(246,122,33)" rx="2" ry="2" />
<text  x="107.12" y="127.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (5 samples, 0.74%)</title><rect x="745.5" y="453" width="8.8" height="15.0" fill="rgb(247,204,51)" rx="2" ry="2" />
<text  x="748.54" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (10 samples, 1.48%)</title><rect x="271.4" y="405" width="17.5" height="15.0" fill="rgb(208,27,14)" rx="2" ry="2" />
<text  x="274.45" y="415.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.15%)</title><rect x="445.7" y="405" width="1.8" height="15.0" fill="rgb(238,144,31)" rx="2" ry="2" />
<text  x="448.75" y="415.5" ></text>
</g>
<g >
<title>hwloc_linux_set_tid_cpubind (9 samples, 1.33%)</title><rect x="1113.3" y="661" width="15.7" height="15.0" fill="rgb(243,131,12)" rx="2" ry="2" />
<text  x="1116.31" y="671.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.15%)</title><rect x="146.0" y="581" width="1.7" height="15.0" fill="rgb(252,187,18)" rx="2" ry="2" />
<text  x="148.95" y="591.5" ></text>
</g>
<g >
<title>row_cache::make_reader (6 samples, 0.89%)</title><rect x="613.1" y="437" width="10.4" height="15.0" fill="rgb(248,140,16)" rx="2" ry="2" />
<text  x="616.07" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (15 samples, 2.22%)</title><rect x="513.7" y="437" width="26.2" height="15.0" fill="rgb(215,189,31)" rx="2" ry="2" />
<text  x="516.72" y="447.5" >m..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="1040.1" y="405" width="1.7" height="15.0" fill="rgb(225,116,34)" rx="2" ry="2" />
<text  x="1043.10" y="415.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.15%)</title><rect x="156.4" y="533" width="1.8" height="15.0" fill="rgb(238,73,25)" rx="2" ry="2" />
<text  x="159.41" y="543.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="146.0" y="565" width="1.7" height="15.0" fill="rgb(208,21,6)" rx="2" ry="2" />
<text  x="148.95" y="575.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (1 samples, 0.15%)</title><rect x="740.3" y="485" width="1.8" height="15.0" fill="rgb(243,224,23)" rx="2" ry="2" />
<text  x="743.31" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="109.4" y="261" width="1.7" height="15.0" fill="rgb(239,187,19)" rx="2" ry="2" />
<text  x="112.35" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.15%)</title><rect x="114.6" y="181" width="1.7" height="15.0" fill="rgb(254,77,2)" rx="2" ry="2" />
<text  x="117.58" y="191.5" ></text>
</g>
<g >
<title>query_result_builder::consume (23 samples, 3.40%)</title><rect x="431.8" y="437" width="40.1" height="15.0" fill="rgb(215,65,44)" rx="2" ry="2" />
<text  x="434.80" y="447.5" >que..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.30%)</title><rect x="43.1" y="277" width="3.5" height="15.0" fill="rgb(212,80,23)" rx="2" ry="2" />
<text  x="46.12" y="287.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.15%)</title><rect x="423.1" y="405" width="1.7" height="15.0" fill="rgb(215,105,43)" rx="2" ry="2" />
<text  x="426.09" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (5 samples, 0.74%)</title><rect x="118.1" y="389" width="8.7" height="15.0" fill="rgb(230,93,54)" rx="2" ry="2" />
<text  x="121.06" y="399.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (14 samples, 2.07%)</title><rect x="1005.2" y="341" width="24.4" height="15.0" fill="rgb(224,6,27)" rx="2" ry="2" />
<text  x="1008.24" y="351.5" >l..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="168.6" y="501" width="1.8" height="15.0" fill="rgb(236,135,52)" rx="2" ry="2" />
<text  x="171.61" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.30%)</title><rect x="98.9" y="133" width="3.5" height="15.0" fill="rgb(235,207,7)" rx="2" ry="2" />
<text  x="101.89" y="143.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.15%)</title><rect x="308.1" y="309" width="1.7" height="15.0" fill="rgb(252,44,49)" rx="2" ry="2" />
<text  x="311.05" y="319.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (9 samples, 1.33%)</title><rect x="817.0" y="405" width="15.7" height="15.0" fill="rgb(234,123,41)" rx="2" ry="2" />
<text  x="820.00" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="769.9" y="389" width="1.8" height="15.0" fill="rgb(232,123,19)" rx="2" ry="2" />
<text  x="772.94" y="399.5" ></text>
</g>
<g >
<title>boost::variant&lt;ser::live_cell_view, ser::expiring_cell_view, ser::dead_cell_view, ser::counter_cell_view, ser::unknown_variant_type&gt;::apply_visitor&lt;(anonymous namespace)::read_atomic_cell (1 samples, 0.15%)</title><rect x="1047.1" y="373" width="1.7" height="15.0" fill="rgb(224,50,26)" rx="2" ry="2" />
<text  x="1050.08" y="383.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.74%)</title><rect x="137.2" y="629" width="8.8" height="15.0" fill="rgb(214,132,6)" rx="2" ry="2" />
<text  x="140.24" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="419.6" y="389" width="1.7" height="15.0" fill="rgb(240,143,24)" rx="2" ry="2" />
<text  x="422.60" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (2 samples, 0.30%)</title><rect x="102.4" y="325" width="3.5" height="15.0" fill="rgb(249,210,42)" rx="2" ry="2" />
<text  x="105.38" y="335.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (5 samples, 0.74%)</title><rect x="614.8" y="421" width="8.7" height="15.0" fill="rgb(230,123,40)" rx="2" ry="2" />
<text  x="617.82" y="431.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.15%)</title><rect x="29.2" y="469" width="1.7" height="15.0" fill="rgb(231,192,22)" rx="2" ry="2" />
<text  x="32.17" y="479.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (3 samples, 0.44%)</title><rect x="583.4" y="421" width="5.3" height="15.0" fill="rgb(243,28,22)" rx="2" ry="2" />
<text  x="586.44" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.30%)</title><rect x="43.1" y="213" width="3.5" height="15.0" fill="rgb(252,199,13)" rx="2" ry="2" />
<text  x="46.12" y="223.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.15%)</title><rect x="112.8" y="133" width="1.8" height="15.0" fill="rgb(220,107,35)" rx="2" ry="2" />
<text  x="115.84" y="143.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.15%)</title><rect x="1047.1" y="389" width="1.7" height="15.0" fill="rgb(215,140,43)" rx="2" ry="2" />
<text  x="1050.08" y="399.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.15%)</title><rect x="123.3" y="341" width="1.7" height="15.0" fill="rgb(238,138,48)" rx="2" ry="2" />
<text  x="126.29" y="351.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.15%)</title><rect x="146.0" y="133" width="1.7" height="15.0" fill="rgb(230,92,2)" rx="2" ry="2" />
<text  x="148.95" y="143.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_role_statement, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.15%)</title><rect x="130.3" y="389" width="1.7" height="15.0" fill="rgb(214,48,39)" rx="2" ry="2" />
<text  x="133.27" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.30%)</title><rect x="81.5" y="197" width="3.4" height="15.0" fill="rgb(253,171,30)" rx="2" ry="2" />
<text  x="84.46" y="207.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.15%)</title><rect x="688.0" y="389" width="1.8" height="15.0" fill="rgb(242,32,11)" rx="2" ry="2" />
<text  x="691.02" y="399.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.30%)</title><rect x="396.9" y="453" width="3.5" height="15.0" fill="rgb(224,202,47)" rx="2" ry="2" />
<text  x="399.94" y="463.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (2 samples, 0.30%)</title><rect x="11.7" y="533" width="3.5" height="15.0" fill="rgb(220,57,54)" rx="2" ry="2" />
<text  x="14.74" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="769.9" y="373" width="1.8" height="15.0" fill="rgb(226,108,13)" rx="2" ry="2" />
<text  x="772.94" y="383.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.15%)</title><rect x="123.3" y="373" width="1.7" height="15.0" fill="rgb(236,8,50)" rx="2" ry="2" />
<text  x="126.29" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="69.3" y="229" width="1.7" height="15.0" fill="rgb(237,177,23)" rx="2" ry="2" />
<text  x="72.26" y="239.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.15%)</title><rect x="135.5" y="405" width="1.7" height="15.0" fill="rgb(236,184,15)" rx="2" ry="2" />
<text  x="138.49" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="545.1" y="453" width="1.7" height="15.0" fill="rgb(205,2,9)" rx="2" ry="2" />
<text  x="548.10" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="430.1" y="421" width="1.7" height="15.0" fill="rgb(211,205,4)" rx="2" ry="2" />
<text  x="433.06" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.15%)</title><rect x="536.4" y="405" width="1.7" height="15.0" fill="rgb(245,180,17)" rx="2" ry="2" />
<text  x="539.38" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.15%)</title><rect x="30.9" y="373" width="1.8" height="15.0" fill="rgb(250,215,6)" rx="2" ry="2" />
<text  x="33.92" y="383.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="649.7" y="517" width="1.7" height="15.0" fill="rgb(240,127,52)" rx="2" ry="2" />
<text  x="652.68" y="527.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::alter_role_statement*, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.15%)</title><rect x="130.3" y="373" width="1.7" height="15.0" fill="rgb(214,39,21)" rx="2" ry="2" />
<text  x="133.27" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (18 samples, 2.66%)</title><rect x="1061.0" y="533" width="31.4" height="15.0" fill="rgb(239,100,3)" rx="2" ry="2" />
<text  x="1064.02" y="543.5" >se..</text>
</g>
<g >
<title>schema_registry::get (4 samples, 0.59%)</title><rect x="907.6" y="389" width="7.0" height="15.0" fill="rgb(244,180,11)" rx="2" ry="2" />
<text  x="910.64" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.15%)</title><rect x="1085.4" y="517" width="1.8" height="15.0" fill="rgb(242,84,11)" rx="2" ry="2" />
<text  x="1088.42" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.15%)</title><rect x="39.6" y="245" width="1.8" height="15.0" fill="rgb(211,94,41)" rx="2" ry="2" />
<text  x="42.63" y="255.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (59 samples, 8.71%)</title><rect x="402.2" y="453" width="102.8" height="15.0" fill="rgb(236,11,1)" rx="2" ry="2" />
<text  x="405.17" y="463.5" >seastar::do_..</text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (4 samples, 0.59%)</title><rect x="201.7" y="485" width="7.0" height="15.0" fill="rgb(242,105,48)" rx="2" ry="2" />
<text  x="204.73" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.15%)</title><rect x="1095.9" y="549" width="1.7" height="15.0" fill="rgb(214,146,44)" rx="2" ry="2" />
<text  x="1098.88" y="559.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (2 samples, 0.30%)</title><rect x="1047.1" y="453" width="3.5" height="15.0" fill="rgb(250,161,28)" rx="2" ry="2" />
<text  x="1050.08" y="463.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.30%)</title><rect x="891.9" y="405" width="3.5" height="15.0" fill="rgb(239,192,24)" rx="2" ry="2" />
<text  x="894.95" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (100 samples, 14.77%)</title><rect x="857.1" y="453" width="174.3" height="15.0" fill="rgb(228,142,11)" rx="2" ry="2" />
<text  x="860.09" y="463.5" >cql3::statements::sele..</text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.30%)</title><rect x="965.2" y="325" width="3.4" height="15.0" fill="rgb(224,9,34)" rx="2" ry="2" />
<text  x="968.16" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_aggregate_statement, std::default_delete&lt;cql3::statements::drop_aggregate_statement&gt; &gt;::_M_ptr (1 samples, 0.15%)</title><rect x="128.5" y="421" width="1.8" height="15.0" fill="rgb(249,88,5)" rx="2" ry="2" />
<text  x="131.52" y="431.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (67 samples, 9.90%)</title><rect x="20.5" y="533" width="116.7" height="15.0" fill="rgb(254,227,35)" rx="2" ry="2" />
<text  x="23.46" y="543.5" >single_node_cq..</text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.15%)</title><rect x="586.9" y="389" width="1.8" height="15.0" fill="rgb(207,31,28)" rx="2" ry="2" />
<text  x="589.93" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.15%)</title><rect x="10.0" y="533" width="1.7" height="15.0" fill="rgb(245,197,45)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.15%)</title><rect x="97.1" y="293" width="1.8" height="15.0" fill="rgb(240,212,0)" rx="2" ry="2" />
<text  x="100.15" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (1 samples, 0.15%)</title><rect x="30.9" y="453" width="1.8" height="15.0" fill="rgb(249,208,2)" rx="2" ry="2" />
<text  x="33.92" y="463.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (3 samples, 0.44%)</title><rect x="15.2" y="533" width="5.3" height="15.0" fill="rgb(219,7,4)" rx="2" ry="2" />
<text  x="18.23" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.15%)</title><rect x="146.0" y="197" width="1.7" height="15.0" fill="rgb(249,202,2)" rx="2" ry="2" />
<text  x="148.95" y="207.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (2 samples, 0.30%)</title><rect x="64.0" y="357" width="3.5" height="15.0" fill="rgb(209,43,2)" rx="2" ry="2" />
<text  x="67.03" y="367.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.15%)</title><rect x="1029.6" y="421" width="1.8" height="15.0" fill="rgb(207,228,44)" rx="2" ry="2" />
<text  x="1032.65" y="431.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.15%)</title><rect x="482.3" y="437" width="1.8" height="15.0" fill="rgb(243,43,31)" rx="2" ry="2" />
<text  x="485.35" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.15%)</title><rect x="74.5" y="357" width="1.7" height="15.0" fill="rgb(223,165,10)" rx="2" ry="2" />
<text  x="77.49" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (2 samples, 0.30%)</title><rect x="102.4" y="181" width="3.5" height="15.0" fill="rgb(253,204,11)" rx="2" ry="2" />
<text  x="105.38" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.30%)</title><rect x="37.9" y="293" width="3.5" height="15.0" fill="rgb(208,124,13)" rx="2" ry="2" />
<text  x="40.89" y="303.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.59%)</title><rect x="233.1" y="469" width="7.0" height="15.0" fill="rgb(242,59,4)" rx="2" ry="2" />
<text  x="236.10" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_service_level_statement, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::list_service_level_statement&gt;, void&gt; (1 samples, 0.15%)</title><rect x="133.8" y="421" width="1.7" height="15.0" fill="rgb(237,137,49)" rx="2" ry="2" />
<text  x="136.75" y="431.5" ></text>
</g>
<g >
<title>row::row (19 samples, 2.81%)</title><rect x="318.5" y="325" width="33.1" height="15.0" fill="rgb(239,66,12)" rx="2" ry="2" />
<text  x="321.51" y="335.5" >ro..</text>
</g>
<g >
<title>__start_context (1 samples, 0.15%)</title><rect x="688.0" y="437" width="1.8" height="15.0" fill="rgb(247,68,37)" rx="2" ry="2" />
<text  x="691.02" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="74.5" y="261" width="1.7" height="15.0" fill="rgb(237,98,26)" rx="2" ry="2" />
<text  x="77.49" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.30%)</title><rect x="81.5" y="357" width="3.4" height="15.0" fill="rgb(234,30,34)" rx="2" ry="2" />
<text  x="84.46" y="367.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.30%)</title><rect x="112.8" y="309" width="3.5" height="15.0" fill="rgb(251,102,10)" rx="2" ry="2" />
<text  x="115.84" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="74.5" y="309" width="1.7" height="15.0" fill="rgb(234,125,39)" rx="2" ry="2" />
<text  x="77.49" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (57 samples, 8.42%)</title><rect x="36.1" y="453" width="99.4" height="15.0" fill="rgb(222,87,5)" rx="2" ry="2" />
<text  x="39.14" y="463.5" >cql3_parser:..</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="121.6" y="277" width="1.7" height="15.0" fill="rgb(225,194,45)" rx="2" ry="2" />
<text  x="124.55" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="146.0" y="437" width="1.7" height="15.0" fill="rgb(205,149,14)" rx="2" ry="2" />
<text  x="148.95" y="447.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (1 samples, 0.15%)</title><rect x="1076.7" y="517" width="1.7" height="15.0" fill="rgb(244,18,23)" rx="2" ry="2" />
<text  x="1079.71" y="527.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="771.7" y="405" width="1.7" height="15.0" fill="rgb(205,97,25)" rx="2" ry="2" />
<text  x="774.68" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (1 samples, 0.15%)</title><rect x="65.8" y="325" width="1.7" height="15.0" fill="rgb(253,133,7)" rx="2" ry="2" />
<text  x="68.78" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.15%)</title><rect x="67.5" y="421" width="1.8" height="15.0" fill="rgb(225,61,47)" rx="2" ry="2" />
<text  x="70.52" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (1 samples, 0.15%)</title><rect x="1054.0" y="357" width="1.8" height="15.0" fill="rgb(221,94,30)" rx="2" ry="2" />
<text  x="1057.05" y="367.5" ></text>
</g>
<g >
<title>from_hex (1 samples, 0.15%)</title><rect x="22.2" y="373" width="1.7" height="15.0" fill="rgb(231,44,15)" rx="2" ry="2" />
<text  x="25.20" y="383.5" ></text>
</g>
<g >
<title>row_cache::invalidate (1 samples, 0.15%)</title><rect x="688.0" y="501" width="1.8" height="15.0" fill="rgb(227,139,0)" rx="2" ry="2" />
<text  x="691.02" y="511.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="515.5" y="421" width="1.7" height="15.0" fill="rgb(235,211,27)" rx="2" ry="2" />
<text  x="518.47" y="431.5" ></text>
</g>
<g >
<title>perf_simple_que (677 samples, 100.00%)</title><rect x="10.0" y="677" width="1180.0" height="15.0" fill="rgb(227,10,2)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >perf_simple_que</text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.15%)</title><rect x="1054.0" y="245" width="1.8" height="15.0" fill="rgb(209,168,34)" rx="2" ry="2" />
<text  x="1057.05" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.15%)</title><rect x="208.7" y="501" width="1.7" height="15.0" fill="rgb(207,92,4)" rx="2" ry="2" />
<text  x="211.70" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2 samples, 0.30%)</title><rect x="58.8" y="277" width="3.5" height="15.0" fill="rgb(228,28,40)" rx="2" ry="2" />
<text  x="61.80" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.30%)</title><rect x="600.9" y="373" width="3.5" height="15.0" fill="rgb(211,220,53)" rx="2" ry="2" />
<text  x="603.87" y="383.5" ></text>
</g>
<g >
<title>TLS wrapper function for logalloc::shard_segment_pool (1 samples, 0.15%)</title><rect x="688.0" y="341" width="1.8" height="15.0" fill="rgb(246,11,2)" rx="2" ry="2" />
<text  x="691.02" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (86 samples, 12.70%)</title><rect x="879.7" y="421" width="149.9" height="15.0" fill="rgb(236,41,52)" rx="2" ry="2" />
<text  x="882.75" y="431.5" >service::storage_pr..</text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.30%)</title><rect x="98.9" y="325" width="3.5" height="15.0" fill="rgb(224,188,47)" rx="2" ry="2" />
<text  x="101.89" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (4 samples, 0.59%)</title><rect x="956.4" y="293" width="7.0" height="15.0" fill="rgb(215,190,42)" rx="2" ry="2" />
<text  x="959.44" y="303.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (1 samples, 0.15%)</title><rect x="30.9" y="405" width="1.8" height="15.0" fill="rgb(247,108,12)" rx="2" ry="2" />
<text  x="33.92" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="79.7" y="373" width="1.8" height="15.0" fill="rgb(223,201,34)" rx="2" ry="2" />
<text  x="82.72" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (11 samples, 1.62%)</title><rect x="946.0" y="325" width="19.2" height="15.0" fill="rgb(228,67,50)" rx="2" ry="2" />
<text  x="948.98" y="335.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.15%)</title><rect x="309.8" y="293" width="1.7" height="15.0" fill="rgb(213,29,33)" rx="2" ry="2" />
<text  x="312.79" y="303.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.15%)</title><rect x="498.0" y="405" width="1.8" height="15.0" fill="rgb(231,85,32)" rx="2" ry="2" />
<text  x="501.04" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (1 samples, 0.15%)</title><rect x="1094.1" y="533" width="1.8" height="15.0" fill="rgb(210,118,45)" rx="2" ry="2" />
<text  x="1097.14" y="543.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (2 samples, 0.30%)</title><rect x="1047.1" y="517" width="3.5" height="15.0" fill="rgb(236,186,28)" rx="2" ry="2" />
<text  x="1050.08" y="527.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.15%)</title><rect x="146.0" y="517" width="1.7" height="15.0" fill="rgb(248,1,0)" rx="2" ry="2" />
<text  x="148.95" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="69.3" y="341" width="1.7" height="15.0" fill="rgb(234,178,42)" rx="2" ry="2" />
<text  x="72.26" y="351.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="822.2" y="373" width="1.8" height="15.0" fill="rgb(241,73,13)" rx="2" ry="2" />
<text  x="825.23" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="545.1" y="469" width="1.7" height="15.0" fill="rgb(231,154,36)" rx="2" ry="2" />
<text  x="548.10" y="479.5" ></text>
</g>
<g >
<title>query_state::query_state (6 samples, 0.89%)</title><rect x="625.3" y="485" width="10.4" height="15.0" fill="rgb(224,211,15)" rx="2" ry="2" />
<text  x="628.27" y="495.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.15%)</title><rect x="137.2" y="613" width="1.8" height="15.0" fill="rgb(212,94,7)" rx="2" ry="2" />
<text  x="140.24" y="623.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="109.4" y="293" width="1.7" height="15.0" fill="rgb(244,212,36)" rx="2" ry="2" />
<text  x="112.35" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.15%)</title><rect x="76.2" y="389" width="1.8" height="15.0" fill="rgb(215,44,27)" rx="2" ry="2" />
<text  x="79.23" y="399.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.15%)</title><rect x="76.2" y="325" width="1.8" height="15.0" fill="rgb(210,212,36)" rx="2" ry="2" />
<text  x="79.23" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::waiting_task (1 samples, 0.15%)</title><rect x="146.0" y="645" width="1.7" height="15.0" fill="rgb(245,85,43)" rx="2" ry="2" />
<text  x="148.95" y="655.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.15%)</title><rect x="688.0" y="421" width="1.8" height="15.0" fill="rgb(240,219,8)" rx="2" ry="2" />
<text  x="691.02" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.44%)</title><rect x="921.6" y="341" width="5.2" height="15.0" fill="rgb(254,42,41)" rx="2" ry="2" />
<text  x="924.58" y="351.5" ></text>
</g>
<g >
<title>freeze (1 samples, 0.15%)</title><rect x="1054.0" y="293" width="1.8" height="15.0" fill="rgb(215,216,5)" rx="2" ry="2" />
<text  x="1057.05" y="303.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (60 samples, 8.86%)</title><rect x="30.9" y="485" width="104.6" height="15.0" fill="rgb(241,32,25)" rx="2" ry="2" />
<text  x="33.92" y="495.5" >cql3::util::..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_M_construct&lt;cql3::expr::expression&gt; (1 samples, 0.15%)</title><rect x="123.3" y="229" width="1.7" height="15.0" fill="rgb(225,122,0)" rx="2" ry="2" />
<text  x="126.29" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (3 samples, 0.44%)</title><rect x="118.1" y="373" width="5.2" height="15.0" fill="rgb(230,205,43)" rx="2" ry="2" />
<text  x="121.06" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="114.6" y="229" width="1.7" height="15.0" fill="rgb(228,39,20)" rx="2" ry="2" />
<text  x="117.58" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.15%)</title><rect x="65.8" y="341" width="1.7" height="15.0" fill="rgb(221,150,44)" rx="2" ry="2" />
<text  x="68.78" y="351.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (32 samples, 4.73%)</title><rect x="729.9" y="501" width="55.7" height="15.0" fill="rgb(214,68,24)" rx="2" ry="2" />
<text  x="732.85" y="511.5" >singl..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.15%)</title><rect x="785.6" y="517" width="1.8" height="15.0" fill="rgb(249,27,46)" rx="2" ry="2" />
<text  x="788.63" y="527.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (1 samples, 0.15%)</title><rect x="789.1" y="437" width="1.8" height="15.0" fill="rgb(246,11,16)" rx="2" ry="2" />
<text  x="792.11" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.15%)</title><rect x="71.0" y="357" width="1.7" height="15.0" fill="rgb(214,199,14)" rx="2" ry="2" />
<text  x="74.00" y="367.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.30%)</title><rect x="717.7" y="517" width="3.4" height="15.0" fill="rgb(234,195,36)" rx="2" ry="2" />
<text  x="720.65" y="527.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (1 samples, 0.15%)</title><rect x="1054.0" y="309" width="1.8" height="15.0" fill="rgb(234,153,6)" rx="2" ry="2" />
<text  x="1057.05" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (2 samples, 0.30%)</title><rect x="43.1" y="293" width="3.5" height="15.0" fill="rgb(210,35,12)" rx="2" ry="2" />
<text  x="46.12" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="822.2" y="357" width="1.8" height="15.0" fill="rgb(205,38,21)" rx="2" ry="2" />
<text  x="825.23" y="367.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="794.3" y="341" width="1.8" height="15.0" fill="rgb(224,64,48)" rx="2" ry="2" />
<text  x="797.34" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.30%)</title><rect x="37.9" y="309" width="3.5" height="15.0" fill="rgb(219,145,20)" rx="2" ry="2" />
<text  x="40.89" y="319.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="69.3" y="213" width="1.7" height="15.0" fill="rgb(211,8,7)" rx="2" ry="2" />
<text  x="72.26" y="223.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.15%)</title><rect x="76.2" y="309" width="1.8" height="15.0" fill="rgb(253,96,36)" rx="2" ry="2" />
<text  x="79.23" y="319.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.15%)</title><rect x="773.4" y="421" width="1.8" height="15.0" fill="rgb(236,132,38)" rx="2" ry="2" />
<text  x="776.43" y="431.5" ></text>
</g>
<g >
<title>db::filter_for_query (1 samples, 0.15%)</title><rect x="991.3" y="373" width="1.7" height="15.0" fill="rgb(220,11,12)" rx="2" ry="2" />
<text  x="994.30" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_counters&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="1052.3" y="373" width="1.7" height="15.0" fill="rgb(244,3,30)" rx="2" ry="2" />
<text  x="1055.30" y="383.5" ></text>
</g>
<g >
<title>database::query (2 samples, 0.30%)</title><rect x="173.8" y="533" width="3.5" height="15.0" fill="rgb(225,165,38)" rx="2" ry="2" />
<text  x="176.84" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="69.3" y="277" width="1.7" height="15.0" fill="rgb(217,190,5)" rx="2" ry="2" />
<text  x="72.26" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.15%)</title><rect x="97.1" y="341" width="1.8" height="15.0" fill="rgb(240,6,14)" rx="2" ry="2" />
<text  x="100.15" y="351.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.15%)</title><rect x="989.6" y="357" width="1.7" height="15.0" fill="rgb(220,147,24)" rx="2" ry="2" />
<text  x="992.56" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (1 samples, 0.15%)</title><rect x="1094.1" y="485" width="1.8" height="15.0" fill="rgb(215,117,17)" rx="2" ry="2" />
<text  x="1097.14" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (3 samples, 0.44%)</title><rect x="86.7" y="357" width="5.2" height="15.0" fill="rgb(213,182,36)" rx="2" ry="2" />
<text  x="89.69" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;cql3::expr::expression&gt;::optional (1 samples, 0.15%)</title><rect x="123.3" y="309" width="1.7" height="15.0" fill="rgb(228,59,6)" rx="2" ry="2" />
<text  x="126.29" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.15%)</title><rect x="688.0" y="469" width="1.8" height="15.0" fill="rgb(228,224,2)" rx="2" ry="2" />
<text  x="691.02" y="479.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (1 samples, 0.15%)</title><rect x="1097.6" y="645" width="1.8" height="15.0" fill="rgb(222,144,17)" rx="2" ry="2" />
<text  x="1100.62" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="112.8" y="213" width="1.8" height="15.0" fill="rgb(239,188,49)" rx="2" ry="2" />
<text  x="115.84" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="728.1" y="485" width="1.8" height="15.0" fill="rgb(251,114,46)" rx="2" ry="2" />
<text  x="731.11" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (4 samples, 0.59%)</title><rect x="956.4" y="277" width="7.0" height="15.0" fill="rgb(216,184,12)" rx="2" ry="2" />
<text  x="959.44" y="287.5" ></text>
</g>
<g >
<title>database::apply (1 samples, 0.15%)</title><rect x="1055.8" y="277" width="1.7" height="15.0" fill="rgb(244,214,35)" rx="2" ry="2" />
<text  x="1058.79" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (57 samples, 8.42%)</title><rect x="36.1" y="469" width="99.4" height="15.0" fill="rgb(228,222,18)" rx="2" ry="2" />
<text  x="39.14" y="479.5" >seastar::non..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="74.5" y="293" width="1.7" height="15.0" fill="rgb(227,50,48)" rx="2" ry="2" />
<text  x="77.49" y="303.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.15%)</title><rect x="1003.5" y="357" width="1.7" height="15.0" fill="rgb(240,30,54)" rx="2" ry="2" />
<text  x="1006.50" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.30%)</title><rect x="501.5" y="437" width="3.5" height="15.0" fill="rgb(229,200,50)" rx="2" ry="2" />
<text  x="504.52" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (12 samples, 1.77%)</title><rect x="43.1" y="341" width="20.9" height="15.0" fill="rgb(219,140,24)" rx="2" ry="2" />
<text  x="46.12" y="351.5" ></text>
</g>
<g >
<title>row::compact_and_expire (6 samples, 0.89%)</title><rect x="489.3" y="437" width="10.5" height="15.0" fill="rgb(239,190,25)" rx="2" ry="2" />
<text  x="492.32" y="447.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (1 samples, 0.15%)</title><rect x="30.9" y="437" width="1.8" height="15.0" fill="rgb(247,132,4)" rx="2" ry="2" />
<text  x="33.92" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::~unique_ptr (1 samples, 0.15%)</title><rect x="126.8" y="405" width="1.7" height="15.0" fill="rgb(224,229,26)" rx="2" ry="2" />
<text  x="129.78" y="415.5" ></text>
</g>
<g >
<title>[[vdso]] (2 samples, 0.30%)</title><rect x="1106.3" y="645" width="3.5" height="15.0" fill="rgb(237,184,9)" rx="2" ry="2" />
<text  x="1109.34" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="109.4" y="229" width="1.7" height="15.0" fill="rgb(253,93,2)" rx="2" ry="2" />
<text  x="112.35" y="239.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.44%)</title><rect x="424.8" y="437" width="5.3" height="15.0" fill="rgb(205,182,17)" rx="2" ry="2" />
<text  x="427.83" y="447.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.15%)</title><rect x="850.1" y="437" width="1.8" height="15.0" fill="rgb(241,52,37)" rx="2" ry="2" />
<text  x="853.12" y="447.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.15%)</title><rect x="210.4" y="501" width="1.8" height="15.0" fill="rgb(251,21,38)" rx="2" ry="2" />
<text  x="213.44" y="511.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.15%)</title><rect x="480.6" y="437" width="1.7" height="15.0" fill="rgb(227,17,29)" rx="2" ry="2" />
<text  x="483.61" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="574.7" y="405" width="1.8" height="15.0" fill="rgb(222,223,6)" rx="2" ry="2" />
<text  x="577.73" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (5 samples, 0.74%)</title><rect x="789.1" y="485" width="8.7" height="15.0" fill="rgb(247,152,27)" rx="2" ry="2" />
<text  x="792.11" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.44%)</title><rect x="1052.3" y="469" width="5.2" height="15.0" fill="rgb(251,41,8)" rx="2" ry="2" />
<text  x="1055.30" y="479.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (5 samples, 0.74%)</title><rect x="841.4" y="405" width="8.7" height="15.0" fill="rgb(215,84,24)" rx="2" ry="2" />
<text  x="844.40" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="1080.2" y="501" width="1.7" height="15.0" fill="rgb(228,115,5)" rx="2" ry="2" />
<text  x="1083.19" y="511.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="74.5" y="245" width="1.7" height="15.0" fill="rgb(228,152,28)" rx="2" ry="2" />
<text  x="77.49" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.15%)</title><rect x="27.4" y="405" width="1.8" height="15.0" fill="rgb(219,64,24)" rx="2" ry="2" />
<text  x="30.43" y="415.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (1 samples, 0.15%)</title><rect x="30.9" y="389" width="1.8" height="15.0" fill="rgb(217,107,13)" rx="2" ry="2" />
<text  x="33.92" y="399.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.15%)</title><rect x="290.6" y="357" width="1.8" height="15.0" fill="rgb(226,136,34)" rx="2" ry="2" />
<text  x="293.62" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (21 samples, 3.10%)</title><rect x="508.5" y="469" width="36.6" height="15.0" fill="rgb(227,85,20)" rx="2" ry="2" />
<text  x="511.49" y="479.5" >std..</text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.15%)</title><rect x="147.7" y="597" width="1.7" height="15.0" fill="rgb(208,124,5)" rx="2" ry="2" />
<text  x="150.70" y="607.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.59%)</title><rect x="1099.4" y="661" width="6.9" height="15.0" fill="rgb(250,190,16)" rx="2" ry="2" />
<text  x="1102.36" y="671.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (2 samples, 0.30%)</title><rect x="600.9" y="389" width="3.5" height="15.0" fill="rgb(241,61,31)" rx="2" ry="2" />
<text  x="603.87" y="399.5" ></text>
</g>
<g >
<title>seastar::app_template::run (544 samples, 80.35%)</title><rect x="149.4" y="613" width="948.2" height="15.0" fill="rgb(226,77,38)" rx="2" ry="2" />
<text  x="152.44" y="623.5" >seastar::app_template::run</text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (1 samples, 0.15%)</title><rect x="135.5" y="501" width="1.7" height="15.0" fill="rgb(205,196,12)" rx="2" ry="2" />
<text  x="138.49" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (140 samples, 20.68%)</title><rect x="803.1" y="469" width="244.0" height="15.0" fill="rgb(240,169,7)" rx="2" ry="2" />
<text  x="806.06" y="479.5" >cql3::statements::select_stateme..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.30%)</title><rect x="102.4" y="197" width="3.5" height="15.0" fill="rgb(239,30,41)" rx="2" ry="2" />
<text  x="105.38" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (4 samples, 0.59%)</title><rect x="109.4" y="325" width="6.9" height="15.0" fill="rgb(247,177,21)" rx="2" ry="2" />
<text  x="112.35" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="395.2" y="437" width="1.7" height="15.0" fill="rgb(229,8,5)" rx="2" ry="2" />
<text  x="398.20" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="963.4" y="309" width="1.8" height="15.0" fill="rgb(250,5,10)" rx="2" ry="2" />
<text  x="966.41" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="292.4" y="309" width="1.7" height="15.0" fill="rgb(227,157,22)" rx="2" ry="2" />
<text  x="295.36" y="319.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.15%)</title><rect x="616.6" y="373" width="1.7" height="15.0" fill="rgb(232,214,40)" rx="2" ry="2" />
<text  x="619.56" y="383.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="79.7" y="357" width="1.8" height="15.0" fill="rgb(217,190,49)" rx="2" ry="2" />
<text  x="82.72" y="367.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.15%)</title><rect x="379.5" y="421" width="1.8" height="15.0" fill="rgb(243,183,51)" rx="2" ry="2" />
<text  x="382.51" y="431.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (4 samples, 0.59%)</title><rect x="628.8" y="469" width="6.9" height="15.0" fill="rgb(216,92,48)" rx="2" ry="2" />
<text  x="631.76" y="479.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.30%)</title><rect x="86.7" y="245" width="3.5" height="15.0" fill="rgb(218,176,54)" rx="2" ry="2" />
<text  x="89.69" y="255.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (3 samples, 0.44%)</title><rect x="281.9" y="389" width="5.2" height="15.0" fill="rgb(224,123,12)" rx="2" ry="2" />
<text  x="284.91" y="399.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (61 samples, 9.01%)</title><rect x="262.7" y="421" width="106.4" height="15.0" fill="rgb(216,34,43)" rx="2" ry="2" />
<text  x="265.73" y="431.5" >mutation_read..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (3 samples, 0.44%)</title><rect x="20.5" y="421" width="5.2" height="15.0" fill="rgb(219,30,19)" rx="2" ry="2" />
<text  x="23.46" y="431.5" ></text>
</g>
<g >
<title>_dl_map_object (1 samples, 0.15%)</title><rect x="1097.6" y="661" width="1.8" height="15.0" fill="rgb(237,219,12)" rx="2" ry="2" />
<text  x="1100.62" y="671.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (1 samples, 0.15%)</title><rect x="794.3" y="421" width="1.8" height="15.0" fill="rgb(207,134,25)" rx="2" ry="2" />
<text  x="797.34" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.15%)</title><rect x="123.3" y="357" width="1.7" height="15.0" fill="rgb(205,228,51)" rx="2" ry="2" />
<text  x="126.29" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.15%)</title><rect x="105.9" y="245" width="1.7" height="15.0" fill="rgb(239,24,43)" rx="2" ry="2" />
<text  x="108.86" y="255.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (1 samples, 0.15%)</title><rect x="569.5" y="405" width="1.7" height="15.0" fill="rgb(239,153,2)" rx="2" ry="2" />
<text  x="572.50" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::_Optional_payload_base (1 samples, 0.15%)</title><rect x="123.3" y="277" width="1.7" height="15.0" fill="rgb(235,56,8)" rx="2" ry="2" />
<text  x="126.29" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="109.4" y="181" width="1.7" height="15.0" fill="rgb(215,38,13)" rx="2" ry="2" />
<text  x="112.35" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="248.8" y="453" width="1.7" height="15.0" fill="rgb(247,168,31)" rx="2" ry="2" />
<text  x="251.79" y="463.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (4 samples, 0.59%)</title><rect x="473.6" y="437" width="7.0" height="15.0" fill="rgb(234,182,27)" rx="2" ry="2" />
<text  x="476.63" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1 samples, 0.15%)</title><rect x="1057.5" y="517" width="1.8" height="15.0" fill="rgb(216,4,46)" rx="2" ry="2" />
<text  x="1060.53" y="527.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (3 samples, 0.44%)</title><rect x="642.7" y="533" width="5.2" height="15.0" fill="rgb(223,91,34)" rx="2" ry="2" />
<text  x="645.70" y="543.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.15%)</title><rect x="513.7" y="405" width="1.8" height="15.0" fill="rgb(209,67,11)" rx="2" ry="2" />
<text  x="516.72" y="415.5" ></text>
</g>
<g >
<title>db::view::node_update_backlog::add_fetch (1 samples, 0.15%)</title><rect x="712.4" y="517" width="1.8" height="15.0" fill="rgb(217,60,11)" rx="2" ry="2" />
<text  x="715.42" y="527.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.15%)</title><rect x="44.9" y="197" width="1.7" height="15.0" fill="rgb(235,48,29)" rx="2" ry="2" />
<text  x="47.86" y="207.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.15%)</title><rect x="1040.1" y="437" width="1.7" height="15.0" fill="rgb(232,194,23)" rx="2" ry="2" />
<text  x="1043.10" y="447.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (155 samples, 22.90%)</title><rect x="789.1" y="533" width="270.2" height="15.0" fill="rgb(221,82,6)" rx="2" ry="2" />
<text  x="792.11" y="543.5" >seastar::lambda_task&lt;seastar::execut..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.59%)</title><rect x="994.8" y="341" width="7.0" height="15.0" fill="rgb(234,116,23)" rx="2" ry="2" />
<text  x="997.79" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (5 samples, 0.74%)</title><rect x="20.5" y="469" width="8.7" height="15.0" fill="rgb(228,54,15)" rx="2" ry="2" />
<text  x="23.46" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (77 samples, 11.37%)</title><rect x="895.4" y="405" width="134.2" height="15.0" fill="rgb(236,70,6)" rx="2" ry="2" />
<text  x="898.44" y="415.5" >service::storage..</text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="824.0" y="373" width="1.7" height="15.0" fill="rgb(221,20,38)" rx="2" ry="2" />
<text  x="826.97" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="118.1" y="245" width="1.7" height="15.0" fill="rgb(252,226,31)" rx="2" ry="2" />
<text  x="121.06" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="74.5" y="341" width="1.7" height="15.0" fill="rgb(254,46,26)" rx="2" ry="2" />
<text  x="77.49" y="351.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.30%)</title><rect x="86.7" y="277" width="3.5" height="15.0" fill="rgb(218,148,26)" rx="2" ry="2" />
<text  x="89.69" y="287.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (1 samples, 0.15%)</title><rect x="13.5" y="517" width="1.7" height="15.0" fill="rgb(228,144,26)" rx="2" ry="2" />
<text  x="16.49" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="109.4" y="277" width="1.7" height="15.0" fill="rgb(232,31,31)" rx="2" ry="2" />
<text  x="112.35" y="287.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.15%)</title><rect x="1111.6" y="661" width="1.7" height="15.0" fill="rgb(249,97,8)" rx="2" ry="2" />
<text  x="1114.57" y="671.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.30%)</title><rect x="81.5" y="277" width="3.4" height="15.0" fill="rgb(219,178,16)" rx="2" ry="2" />
<text  x="84.46" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="118.1" y="213" width="1.7" height="15.0" fill="rgb(217,79,21)" rx="2" ry="2" />
<text  x="121.06" y="223.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.15%)</title><rect x="146.0" y="613" width="1.7" height="15.0" fill="rgb(219,67,10)" rx="2" ry="2" />
<text  x="148.95" y="623.5" ></text>
</g>
<g >
<title>dht::shard_of (2 samples, 0.30%)</title><rect x="939.0" y="325" width="3.5" height="15.0" fill="rgb(238,182,50)" rx="2" ry="2" />
<text  x="942.01" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.30%)</title><rect x="717.7" y="501" width="3.4" height="15.0" fill="rgb(216,54,53)" rx="2" ry="2" />
<text  x="720.65" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="116.3" y="357" width="1.8" height="15.0" fill="rgb(238,163,23)" rx="2" ry="2" />
<text  x="119.32" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (18 samples, 2.66%)</title><rect x="36.1" y="389" width="31.4" height="15.0" fill="rgb(241,108,3)" rx="2" ry="2" />
<text  x="39.14" y="399.5" >an..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.15%)</title><rect x="146.0" y="181" width="1.7" height="15.0" fill="rgb(242,226,44)" rx="2" ry="2" />
<text  x="148.95" y="191.5" ></text>
</g>
<g >
<title>__start_context (73 samples, 10.78%)</title><rect x="10.0" y="629" width="127.2" height="15.0" fill="rgb(253,47,32)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >__start_context</text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.15%)</title><rect x="688.0" y="453" width="1.8" height="15.0" fill="rgb(226,152,53)" rx="2" ry="2" />
<text  x="691.02" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="820.5" y="325" width="1.7" height="15.0" fill="rgb(230,143,27)" rx="2" ry="2" />
<text  x="823.49" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (3 samples, 0.44%)</title><rect x="51.8" y="309" width="5.3" height="15.0" fill="rgb(248,79,39)" rx="2" ry="2" />
<text  x="54.83" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (5 samples, 0.74%)</title><rect x="789.1" y="453" width="8.7" height="15.0" fill="rgb(239,112,27)" rx="2" ry="2" />
<text  x="792.11" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.15%)</title><rect x="37.9" y="197" width="1.7" height="15.0" fill="rgb(239,119,36)" rx="2" ry="2" />
<text  x="40.89" y="207.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (1 samples, 0.15%)</title><rect x="1090.6" y="517" width="1.8" height="15.0" fill="rgb(235,33,1)" rx="2" ry="2" />
<text  x="1093.65" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="116.3" y="213" width="1.8" height="15.0" fill="rgb(242,188,51)" rx="2" ry="2" />
<text  x="119.32" y="223.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (31 samples, 4.58%)</title><rect x="914.6" y="389" width="54.0" height="15.0" fill="rgb(227,18,36)" rx="2" ry="2" />
<text  x="917.61" y="399.5" >servi..</text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base (1 samples, 0.15%)</title><rect x="123.3" y="293" width="1.7" height="15.0" fill="rgb(215,81,23)" rx="2" ry="2" />
<text  x="126.29" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.15%)</title><rect x="67.5" y="405" width="1.8" height="15.0" fill="rgb(216,82,46)" rx="2" ry="2" />
<text  x="70.52" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.15%)</title><rect x="698.5" y="501" width="1.7" height="15.0" fill="rgb(223,115,49)" rx="2" ry="2" />
<text  x="701.48" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="69.3" y="325" width="1.7" height="15.0" fill="rgb(215,116,44)" rx="2" ry="2" />
<text  x="72.26" y="335.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (22 samples, 3.25%)</title><rect x="742.1" y="485" width="38.3" height="15.0" fill="rgb(226,224,29)" rx="2" ry="2" />
<text  x="745.05" y="495.5" >cql..</text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.15%)</title><rect x="1095.9" y="565" width="1.7" height="15.0" fill="rgb(212,193,23)" rx="2" ry="2" />
<text  x="1098.88" y="575.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.15%)</title><rect x="118.1" y="309" width="1.7" height="15.0" fill="rgb(236,189,0)" rx="2" ry="2" />
<text  x="121.06" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="83.2" y="181" width="1.7" height="15.0" fill="rgb(246,115,53)" rx="2" ry="2" />
<text  x="86.21" y="191.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (23 samples, 3.40%)</title><rect x="928.6" y="373" width="40.0" height="15.0" fill="rgb(237,12,12)" rx="2" ry="2" />
<text  x="931.55" y="383.5" >ser..</text>
</g>
<g >
<title>__start_context (1 samples, 0.15%)</title><rect x="147.7" y="613" width="1.7" height="15.0" fill="rgb(233,30,10)" rx="2" ry="2" />
<text  x="150.70" y="623.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.15%)</title><rect x="381.3" y="437" width="1.7" height="15.0" fill="rgb(210,133,21)" rx="2" ry="2" />
<text  x="384.26" y="447.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (3 samples, 0.44%)</title><rect x="721.1" y="501" width="5.3" height="15.0" fill="rgb(229,159,12)" rx="2" ry="2" />
<text  x="724.14" y="511.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (2 samples, 0.30%)</title><rect x="1054.0" y="373" width="3.5" height="15.0" fill="rgb(249,12,24)" rx="2" ry="2" />
<text  x="1057.05" y="383.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (7 samples, 1.03%)</title><rect x="158.2" y="533" width="12.2" height="15.0" fill="rgb(252,71,11)" rx="2" ry="2" />
<text  x="161.15" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.15%)</title><rect x="123.3" y="213" width="1.7" height="15.0" fill="rgb(213,23,3)" rx="2" ry="2" />
<text  x="126.29" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="118.1" y="229" width="1.7" height="15.0" fill="rgb(208,191,8)" rx="2" ry="2" />
<text  x="121.06" y="239.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (4 samples, 0.59%)</title><rect x="763.0" y="389" width="6.9" height="15.0" fill="rgb(231,1,21)" rx="2" ry="2" />
<text  x="765.97" y="399.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.15%)</title><rect x="949.5" y="293" width="1.7" height="15.0" fill="rgb(222,8,24)" rx="2" ry="2" />
<text  x="952.47" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.30%)</title><rect x="1047.1" y="485" width="3.5" height="15.0" fill="rgb(225,147,7)" rx="2" ry="2" />
<text  x="1050.08" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.15%)</title><rect x="606.1" y="421" width="1.7" height="15.0" fill="rgb(205,0,10)" rx="2" ry="2" />
<text  x="609.10" y="431.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="186.0" y="501" width="1.8" height="15.0" fill="rgb(247,88,47)" rx="2" ry="2" />
<text  x="189.04" y="511.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.15%)</title><rect x="43.1" y="181" width="1.8" height="15.0" fill="rgb(205,174,13)" rx="2" ry="2" />
<text  x="46.12" y="191.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (22 samples, 3.25%)</title><rect x="78.0" y="389" width="38.3" height="15.0" fill="rgb(246,82,48)" rx="2" ry="2" />
<text  x="80.98" y="399.5" >cql..</text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.15%)</title><rect x="1092.4" y="533" width="1.7" height="15.0" fill="rgb(218,149,35)" rx="2" ry="2" />
<text  x="1095.39" y="543.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.15%)</title><rect x="745.5" y="437" width="1.8" height="15.0" fill="rgb(227,39,7)" rx="2" ry="2" />
<text  x="748.54" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (4 samples, 0.59%)</title><rect x="491.1" y="405" width="6.9" height="15.0" fill="rgb(218,20,38)" rx="2" ry="2" />
<text  x="494.06" y="415.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.59%)</title><rect x="240.1" y="485" width="6.9" height="15.0" fill="rgb(215,126,20)" rx="2" ry="2" />
<text  x="243.07" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="109.4" y="197" width="1.7" height="15.0" fill="rgb(233,96,12)" rx="2" ry="2" />
<text  x="112.35" y="207.5" ></text>
</g>
</g>
</svg>
