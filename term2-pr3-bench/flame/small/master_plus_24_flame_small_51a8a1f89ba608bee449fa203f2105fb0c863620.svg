<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1958" onload="init(evt)" viewBox="0 0 1200 1958" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1958.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1941" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1941" > </text>
<g id="frames">
<g >
<title>__start_context (4 samples, 0.58%)</title><rect x="125.2" y="1861" width="6.9" height="15.0" fill="rgb(222,126,26)" rx="2" ry="2" />
<text  x="128.25" y="1871.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2 samples, 0.29%)</title><rect x="768.6" y="1621" width="3.4" height="15.0" fill="rgb(217,123,48)" rx="2" ry="2" />
<text  x="771.57" y="1631.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (14 samples, 2.04%)</title><rect x="13.4" y="453" width="24.1" height="15.0" fill="rgb(253,101,17)" rx="2" ry="2" />
<text  x="16.44" y="463.5" >a..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.15%)</title><rect x="925.1" y="1477" width="1.7" height="15.0" fill="rgb(249,142,20)" rx="2" ry="2" />
<text  x="928.10" y="1487.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="486.5" y="1637" width="1.7" height="15.0" fill="rgb(228,115,30)" rx="2" ry="2" />
<text  x="489.47" y="1647.5" ></text>
</g>
<g >
<title>freeze (2 samples, 0.29%)</title><rect x="1040.3" y="1509" width="3.5" height="15.0" fill="rgb(232,167,28)" rx="2" ry="2" />
<text  x="1043.35" y="1519.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (4 samples, 0.58%)</title><rect x="765.1" y="1653" width="6.9" height="15.0" fill="rgb(246,17,27)" rx="2" ry="2" />
<text  x="768.13" y="1663.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.15%)</title><rect x="42.7" y="245" width="1.7" height="15.0" fill="rgb(211,81,38)" rx="2" ry="2" />
<text  x="45.68" y="255.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.29%)</title><rect x="582.8" y="1733" width="3.4" height="15.0" fill="rgb(212,9,37)" rx="2" ry="2" />
<text  x="585.80" y="1743.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="97.7" y="1509" width="1.7" height="15.0" fill="rgb(232,174,44)" rx="2" ry="2" />
<text  x="100.73" y="1519.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.15%)</title><rect x="410.8" y="1653" width="1.7" height="15.0" fill="rgb(241,205,4)" rx="2" ry="2" />
<text  x="413.79" y="1663.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (63 samples, 9.18%)</title><rect x="464.1" y="1701" width="108.4" height="15.0" fill="rgb(212,57,36)" rx="2" ry="2" />
<text  x="467.11" y="1711.5" >query::querie..</text>
</g>
<g >
<title>operator new (4 samples, 0.58%)</title><rect x="1069.6" y="1733" width="6.9" height="15.0" fill="rgb(232,223,31)" rx="2" ry="2" />
<text  x="1072.59" y="1743.5" ></text>
</g>
<g >
<title>perf_simple_que (686 samples, 100.00%)</title><rect x="10.0" y="1893" width="1180.0" height="15.0" fill="rgb(214,197,6)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" >perf_simple_que</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.58%)</title><rect x="1033.5" y="1717" width="6.8" height="15.0" fill="rgb(208,56,45)" rx="2" ry="2" />
<text  x="1036.47" y="1727.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (3 samples, 0.44%)</title><rect x="832.2" y="1669" width="5.2" height="15.0" fill="rgb(244,38,40)" rx="2" ry="2" />
<text  x="835.22" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="691.2" y="1669" width="3.4" height="15.0" fill="rgb(231,196,34)" rx="2" ry="2" />
<text  x="694.17" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="106.3" y="1525" width="1.7" height="15.0" fill="rgb(230,183,8)" rx="2" ry="2" />
<text  x="109.33" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="853" width="72.2" height="15.0" fill="rgb(254,111,42)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (32 samples, 4.66%)</title><rect x="10.0" y="677" width="55.0" height="15.0" fill="rgb(248,193,37)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >[unkn..</text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;1ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1157" width="1.7" height="15.0" fill="rgb(223,178,23)" rx="2" ry="2" />
<text  x="105.89" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (63 samples, 9.18%)</title><rect x="10.0" y="1861" width="108.4" height="15.0" fill="rgb(238,1,12)" rx="2" ry="2" />
<text  x="13.00" y="1871.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="78.8" y="309" width="1.7" height="15.0" fill="rgb(214,28,36)" rx="2" ry="2" />
<text  x="81.80" y="319.5" ></text>
</g>
<g >
<title>service::client_state::has_access (2 samples, 0.29%)</title><rect x="89.1" y="1669" width="3.5" height="15.0" fill="rgb(205,92,20)" rx="2" ry="2" />
<text  x="92.13" y="1679.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (7 samples, 1.02%)</title><rect x="797.8" y="1621" width="12.1" height="15.0" fill="rgb(238,64,42)" rx="2" ry="2" />
<text  x="800.81" y="1631.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (4 samples, 0.58%)</title><rect x="118.4" y="1861" width="6.8" height="15.0" fill="rgb(252,223,15)" rx="2" ry="2" />
<text  x="121.37" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="37.5" y="325" width="1.7" height="15.0" fill="rgb(216,123,29)" rx="2" ry="2" />
<text  x="40.52" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="65.0" y="437" width="1.8" height="15.0" fill="rgb(249,215,19)" rx="2" ry="2" />
<text  x="68.04" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.15%)</title><rect x="1050.7" y="1605" width="1.7" height="15.0" fill="rgb(246,53,29)" rx="2" ry="2" />
<text  x="1053.67" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (1 samples, 0.15%)</title><rect x="39.2" y="421" width="1.8" height="15.0" fill="rgb(206,31,46)" rx="2" ry="2" />
<text  x="42.24" y="431.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (4 samples, 0.58%)</title><rect x="71.9" y="597" width="6.9" height="15.0" fill="rgb(209,136,38)" rx="2" ry="2" />
<text  x="74.92" y="607.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (33 samples, 4.81%)</title><rect x="880.4" y="1589" width="56.7" height="15.0" fill="rgb(207,2,1)" rx="2" ry="2" />
<text  x="883.38" y="1599.5" >servic..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.15%)</title><rect x="639.6" y="1733" width="1.7" height="15.0" fill="rgb(206,172,53)" rx="2" ry="2" />
<text  x="642.56" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1701" width="74.0" height="15.0" fill="rgb(205,128,50)" rx="2" ry="2" />
<text  x="13.00" y="1711.5" >[unknown]</text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="854.6" y="1605" width="3.4" height="15.0" fill="rgb(216,228,3)" rx="2" ry="2" />
<text  x="857.58" y="1615.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="627.5" y="1717" width="1.7" height="15.0" fill="rgb(244,85,45)" rx="2" ry="2" />
<text  x="630.52" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1253" width="72.2" height="15.0" fill="rgb(216,35,25)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="65.0" y="341" width="1.8" height="15.0" fill="rgb(248,176,40)" rx="2" ry="2" />
<text  x="68.04" y="351.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1029" width="72.2" height="15.0" fill="rgb(251,106,16)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.15%)</title><rect x="94.3" y="1557" width="1.7" height="15.0" fill="rgb(218,31,24)" rx="2" ry="2" />
<text  x="97.29" y="1567.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.15%)</title><rect x="637.8" y="1733" width="1.8" height="15.0" fill="rgb(218,159,47)" rx="2" ry="2" />
<text  x="640.84" y="1743.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.15%)</title><rect x="82.2" y="1253" width="1.8" height="15.0" fill="rgb(234,57,43)" rx="2" ry="2" />
<text  x="85.24" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.44%)</title><rect x="30.6" y="325" width="5.2" height="15.0" fill="rgb(218,225,36)" rx="2" ry="2" />
<text  x="33.64" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.15%)</title><rect x="92.6" y="1701" width="1.7" height="15.0" fill="rgb(240,69,16)" rx="2" ry="2" />
<text  x="95.57" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.29%)</title><rect x="51.3" y="261" width="3.4" height="15.0" fill="rgb(230,153,53)" rx="2" ry="2" />
<text  x="54.28" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (2 samples, 0.29%)</title><rect x="23.8" y="309" width="3.4" height="15.0" fill="rgb(239,100,1)" rx="2" ry="2" />
<text  x="26.76" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.15%)</title><rect x="35.8" y="325" width="1.7" height="15.0" fill="rgb(252,4,7)" rx="2" ry="2" />
<text  x="38.80" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="68.5" y="373" width="1.7" height="15.0" fill="rgb(234,197,29)" rx="2" ry="2" />
<text  x="71.48" y="383.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="78.8" y="293" width="1.7" height="15.0" fill="rgb(216,191,32)" rx="2" ry="2" />
<text  x="81.80" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.29%)</title><rect x="23.8" y="325" width="3.4" height="15.0" fill="rgb(238,185,53)" rx="2" ry="2" />
<text  x="26.76" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.58%)</title><rect x="1069.6" y="1717" width="6.9" height="15.0" fill="rgb(221,203,40)" rx="2" ry="2" />
<text  x="1072.59" y="1727.5" ></text>
</g>
<g >
<title>query::querier&lt; (129 samples, 18.80%)</title><rect x="216.4" y="1701" width="221.9" height="15.0" fill="rgb(228,25,43)" rx="2" ry="2" />
<text  x="219.41" y="1711.5" >query::querier&lt;</text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (1 samples, 0.15%)</title><rect x="87.4" y="1589" width="1.7" height="15.0" fill="rgb(215,13,53)" rx="2" ry="2" />
<text  x="90.41" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1797" width="74.0" height="15.0" fill="rgb(249,110,49)" rx="2" ry="2" />
<text  x="13.00" y="1807.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="114.9" y="1557" width="1.7" height="15.0" fill="rgb(216,228,14)" rx="2" ry="2" />
<text  x="117.93" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (2 samples, 0.29%)</title><rect x="283.5" y="1541" width="3.4" height="15.0" fill="rgb(234,127,27)" rx="2" ry="2" />
<text  x="286.50" y="1551.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (3 samples, 0.44%)</title><rect x="1040.3" y="1557" width="5.2" height="15.0" fill="rgb(247,121,18)" rx="2" ry="2" />
<text  x="1043.35" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1605" width="74.0" height="15.0" fill="rgb(242,181,49)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" >[unknown]</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (4 samples, 0.58%)</title><rect x="65.0" y="629" width="6.9" height="15.0" fill="rgb(238,25,46)" rx="2" ry="2" />
<text  x="68.04" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1269" width="1.7" height="15.0" fill="rgb(252,133,4)" rx="2" ry="2" />
<text  x="105.89" y="1279.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="37.5" y="373" width="1.7" height="15.0" fill="rgb(205,59,21)" rx="2" ry="2" />
<text  x="40.52" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (10 samples, 1.46%)</title><rect x="41.0" y="437" width="17.2" height="15.0" fill="rgb(251,164,5)" rx="2" ry="2" />
<text  x="43.96" y="447.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1813" width="74.0" height="15.0" fill="rgb(248,137,30)" rx="2" ry="2" />
<text  x="13.00" y="1823.5" >[unknown]</text>
</g>
<g >
<title>dht::tri_compare (6 samples, 0.87%)</title><rect x="510.6" y="1621" width="10.3" height="15.0" fill="rgb(212,201,18)" rx="2" ry="2" />
<text  x="513.55" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="909.6" y="1477" width="1.7" height="15.0" fill="rgb(241,152,6)" rx="2" ry="2" />
<text  x="912.62" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="854.6" y="1589" width="3.4" height="15.0" fill="rgb(250,16,43)" rx="2" ry="2" />
<text  x="857.58" y="1599.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="114.9" y="1509" width="1.7" height="15.0" fill="rgb(222,51,28)" rx="2" ry="2" />
<text  x="117.93" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="78.8" y="565" width="1.7" height="15.0" fill="rgb(225,227,2)" rx="2" ry="2" />
<text  x="81.80" y="575.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.15%)</title><rect x="127.0" y="1701" width="1.7" height="15.0" fill="rgb(209,170,12)" rx="2" ry="2" />
<text  x="129.97" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (5 samples, 0.73%)</title><rect x="49.6" y="389" width="8.6" height="15.0" fill="rgb(221,131,40)" rx="2" ry="2" />
<text  x="52.56" y="399.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1509" width="74.0" height="15.0" fill="rgb(230,70,11)" rx="2" ry="2" />
<text  x="13.00" y="1519.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (5 samples, 0.73%)</title><rect x="84.0" y="1797" width="8.6" height="15.0" fill="rgb(219,192,26)" rx="2" ry="2" />
<text  x="86.97" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.29%)</title><rect x="1073.0" y="1701" width="3.5" height="15.0" fill="rgb(250,100,8)" rx="2" ry="2" />
<text  x="1076.03" y="1711.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (1 samples, 0.15%)</title><rect x="269.7" y="1573" width="1.8" height="15.0" fill="rgb(237,168,48)" rx="2" ry="2" />
<text  x="272.74" y="1583.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (11 samples, 1.60%)</title><rect x="969.8" y="1557" width="18.9" height="15.0" fill="rgb(226,205,28)" rx="2" ry="2" />
<text  x="972.83" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.15%)</title><rect x="269.7" y="1557" width="1.8" height="15.0" fill="rgb(238,185,16)" rx="2" ry="2" />
<text  x="272.74" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.15%)</title><rect x="109.8" y="1509" width="1.7" height="15.0" fill="rgb(247,180,44)" rx="2" ry="2" />
<text  x="112.77" y="1519.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.29%)</title><rect x="820.2" y="1621" width="3.4" height="15.0" fill="rgb(212,188,33)" rx="2" ry="2" />
<text  x="823.17" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.15%)</title><rect x="114.9" y="1477" width="1.7" height="15.0" fill="rgb(223,7,21)" rx="2" ry="2" />
<text  x="117.93" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.29%)</title><rect x="993.9" y="1637" width="3.4" height="15.0" fill="rgb(245,65,37)" rx="2" ry="2" />
<text  x="996.91" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1269" width="72.2" height="15.0" fill="rgb(216,202,31)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (6 samples, 0.87%)</title><rect x="761.7" y="1717" width="10.3" height="15.0" fill="rgb(254,41,45)" rx="2" ry="2" />
<text  x="764.69" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.15%)</title><rect x="106.3" y="1397" width="1.7" height="15.0" fill="rgb(234,103,13)" rx="2" ry="2" />
<text  x="109.33" y="1407.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.15%)</title><rect x="1052.4" y="1749" width="1.7" height="15.0" fill="rgb(219,117,13)" rx="2" ry="2" />
<text  x="1055.39" y="1759.5" ></text>
</g>
<g >
<title>table::apply (3 samples, 0.44%)</title><rect x="1033.5" y="1637" width="5.1" height="15.0" fill="rgb(233,140,37)" rx="2" ry="2" />
<text  x="1036.47" y="1647.5" ></text>
</g>
<g >
<title>create_partitions (4 samples, 0.58%)</title><rect x="65.0" y="597" width="6.9" height="15.0" fill="rgb(236,71,36)" rx="2" ry="2" />
<text  x="68.04" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1237" width="1.7" height="15.0" fill="rgb(240,61,40)" rx="2" ry="2" />
<text  x="105.89" y="1247.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="53.0" y="197" width="1.7" height="15.0" fill="rgb(226,66,21)" rx="2" ry="2" />
<text  x="56.00" y="207.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.15%)</title><rect x="66.8" y="373" width="1.7" height="15.0" fill="rgb(207,31,42)" rx="2" ry="2" />
<text  x="69.76" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (9 samples, 1.31%)</title><rect x="94.3" y="1605" width="15.5" height="15.0" fill="rgb(229,42,13)" rx="2" ry="2" />
<text  x="97.29" y="1615.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;cql3::prepared_cache_key_type&gt;, single_node_cql_env::prepare (1 samples, 0.15%)</title><rect x="575.9" y="1749" width="1.7" height="15.0" fill="rgb(221,155,27)" rx="2" ry="2" />
<text  x="578.92" y="1759.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (14 samples, 2.04%)</title><rect x="94.3" y="1733" width="24.1" height="15.0" fill="rgb(217,171,32)" rx="2" ry="2" />
<text  x="97.29" y="1743.5" >c..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.29%)</title><rect x="385.0" y="1621" width="3.4" height="15.0" fill="rgb(214,113,28)" rx="2" ry="2" />
<text  x="387.99" y="1631.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (12 samples, 1.75%)</title><rect x="969.8" y="1573" width="20.7" height="15.0" fill="rgb(254,1,51)" rx="2" ry="2" />
<text  x="972.83" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.29%)</title><rect x="51.3" y="293" width="3.4" height="15.0" fill="rgb(236,150,10)" rx="2" ry="2" />
<text  x="54.28" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.15%)</title><rect x="108.0" y="1525" width="1.8" height="15.0" fill="rgb(218,63,50)" rx="2" ry="2" />
<text  x="111.05" y="1535.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (3 samples, 0.44%)</title><rect x="1004.2" y="1653" width="5.2" height="15.0" fill="rgb(234,100,39)" rx="2" ry="2" />
<text  x="1007.23" y="1663.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.15%)</title><rect x="522.6" y="1605" width="1.7" height="15.0" fill="rgb(242,41,30)" rx="2" ry="2" />
<text  x="525.59" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.15%)</title><rect x="47.8" y="389" width="1.8" height="15.0" fill="rgb(234,140,48)" rx="2" ry="2" />
<text  x="50.84" y="399.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_sizeBuf (1 samples, 0.15%)</title><rect x="18.6" y="341" width="1.7" height="15.0" fill="rgb(225,139,8)" rx="2" ry="2" />
<text  x="21.60" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.15%)</title><rect x="467.6" y="1685" width="1.7" height="15.0" fill="rgb(206,226,3)" rx="2" ry="2" />
<text  x="470.55" y="1695.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.58%)</title><rect x="1098.8" y="1877" width="6.9" height="15.0" fill="rgb(253,195,18)" rx="2" ry="2" />
<text  x="1101.83" y="1887.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (1 samples, 0.15%)</title><rect x="1028.3" y="1669" width="1.7" height="15.0" fill="rgb(236,89,18)" rx="2" ry="2" />
<text  x="1031.31" y="1679.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (8 samples, 1.17%)</title><rect x="357.5" y="1653" width="13.7" height="15.0" fill="rgb(212,196,8)" rx="2" ry="2" />
<text  x="360.46" y="1663.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="483.0" y="1621" width="1.8" height="15.0" fill="rgb(209,97,0)" rx="2" ry="2" />
<text  x="486.03" y="1631.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="747.9" y="1605" width="1.8" height="15.0" fill="rgb(217,228,9)" rx="2" ry="2" />
<text  x="750.93" y="1615.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="694.6" y="1717" width="3.4" height="15.0" fill="rgb(214,23,46)" rx="2" ry="2" />
<text  x="697.61" y="1727.5" ></text>
</g>
<g >
<title>tolower (1 samples, 0.15%)</title><rect x="39.2" y="389" width="1.8" height="15.0" fill="rgb(235,40,20)" rx="2" ry="2" />
<text  x="42.24" y="399.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="78.8" y="341" width="1.7" height="15.0" fill="rgb(242,77,53)" rx="2" ry="2" />
<text  x="81.80" y="351.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="113.2" y="1429" width="1.7" height="15.0" fill="rgb(217,53,52)" rx="2" ry="2" />
<text  x="116.21" y="1439.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (31 samples, 4.52%)</title><rect x="883.8" y="1573" width="53.3" height="15.0" fill="rgb(237,131,27)" rx="2" ry="2" />
<text  x="886.82" y="1583.5" >servi..</text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.15%)</title><rect x="526.0" y="1637" width="1.8" height="15.0" fill="rgb(233,46,21)" rx="2" ry="2" />
<text  x="529.03" y="1647.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.15%)</title><rect x="78.8" y="661" width="1.7" height="15.0" fill="rgb(244,163,15)" rx="2" ry="2" />
<text  x="81.80" y="671.5" ></text>
</g>
<g >
<title>database::query (18 samples, 2.62%)</title><rect x="897.6" y="1525" width="30.9" height="15.0" fill="rgb(221,43,11)" rx="2" ry="2" />
<text  x="900.58" y="1535.5" >da..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="78.8" y="693" width="1.7" height="15.0" fill="rgb(243,160,2)" rx="2" ry="2" />
<text  x="81.80" y="703.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.15%)</title><rect x="41.0" y="245" width="1.7" height="15.0" fill="rgb(217,177,29)" rx="2" ry="2" />
<text  x="43.96" y="255.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="338.5" y="1669" width="1.8" height="15.0" fill="rgb(209,188,47)" rx="2" ry="2" />
<text  x="341.54" y="1679.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (1 samples, 0.15%)</title><rect x="988.7" y="1557" width="1.8" height="15.0" fill="rgb(208,51,43)" rx="2" ry="2" />
<text  x="991.75" y="1567.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1 samples, 0.15%)</title><rect x="90.8" y="1621" width="1.8" height="15.0" fill="rgb(216,132,33)" rx="2" ry="2" />
<text  x="93.85" y="1631.5" ></text>
</g>
<g >
<title>posix_memalign (3 samples, 0.44%)</title><rect x="311.0" y="1477" width="5.2" height="15.0" fill="rgb(227,142,9)" rx="2" ry="2" />
<text  x="314.02" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="53.0" y="229" width="1.7" height="15.0" fill="rgb(211,195,1)" rx="2" ry="2" />
<text  x="56.00" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.15%)</title><rect x="66.8" y="341" width="1.7" height="15.0" fill="rgb(242,34,16)" rx="2" ry="2" />
<text  x="69.76" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="41.0" y="293" width="1.7" height="15.0" fill="rgb(254,123,38)" rx="2" ry="2" />
<text  x="43.96" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (1 samples, 0.15%)</title><rect x="1043.8" y="1525" width="1.7" height="15.0" fill="rgb(238,85,36)" rx="2" ry="2" />
<text  x="1046.79" y="1535.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="154.5" y="1749" width="1.7" height="15.0" fill="rgb(227,201,2)" rx="2" ry="2" />
<text  x="157.49" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="557.0" y="1621" width="1.7" height="15.0" fill="rgb(229,22,34)" rx="2" ry="2" />
<text  x="560.00" y="1631.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="827.1" y="1653" width="1.7" height="15.0" fill="rgb(226,40,8)" rx="2" ry="2" />
<text  x="830.06" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (14 samples, 2.04%)</title><rect x="94.3" y="1653" width="24.1" height="15.0" fill="rgb(253,135,47)" rx="2" ry="2" />
<text  x="97.29" y="1663.5" >c..</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.15%)</title><rect x="104.6" y="1509" width="1.7" height="15.0" fill="rgb(247,91,10)" rx="2" ry="2" />
<text  x="107.61" y="1519.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.29%)</title><rect x="665.4" y="1717" width="3.4" height="15.0" fill="rgb(234,32,38)" rx="2" ry="2" />
<text  x="668.36" y="1727.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.15%)</title><rect x="1047.2" y="1589" width="1.8" height="15.0" fill="rgb(224,152,36)" rx="2" ry="2" />
<text  x="1050.23" y="1599.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (31 samples, 4.52%)</title><rect x="269.7" y="1589" width="53.4" height="15.0" fill="rgb(219,126,0)" rx="2" ry="2" />
<text  x="272.74" y="1599.5" >parti..</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (7 samples, 1.02%)</title><rect x="46.1" y="405" width="12.1" height="15.0" fill="rgb(206,38,8)" rx="2" ry="2" />
<text  x="49.12" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.29%)</title><rect x="168.3" y="1685" width="3.4" height="15.0" fill="rgb(234,71,31)" rx="2" ry="2" />
<text  x="171.25" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="484.8" y="1605" width="1.7" height="15.0" fill="rgb(212,225,32)" rx="2" ry="2" />
<text  x="487.75" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="56.4" y="245" width="1.8" height="15.0" fill="rgb(205,3,14)" rx="2" ry="2" />
<text  x="59.44" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (1 samples, 0.15%)</title><rect x="87.4" y="1557" width="1.7" height="15.0" fill="rgb(225,144,42)" rx="2" ry="2" />
<text  x="90.41" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.15%)</title><rect x="882.1" y="1573" width="1.7" height="15.0" fill="rgb(215,213,13)" rx="2" ry="2" />
<text  x="885.10" y="1583.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (1 samples, 0.15%)</title><rect x="569.0" y="1621" width="1.8" height="15.0" fill="rgb(227,16,53)" rx="2" ry="2" />
<text  x="572.04" y="1631.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (3 samples, 0.44%)</title><rect x="288.7" y="1509" width="5.1" height="15.0" fill="rgb(252,46,25)" rx="2" ry="2" />
<text  x="291.66" y="1519.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.44%)</title><rect x="890.7" y="1541" width="5.2" height="15.0" fill="rgb(254,65,52)" rx="2" ry="2" />
<text  x="893.70" y="1551.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (3 samples, 0.44%)</title><rect x="120.1" y="1829" width="5.1" height="15.0" fill="rgb(210,152,44)" rx="2" ry="2" />
<text  x="123.09" y="1839.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (1 samples, 0.15%)</title><rect x="409.1" y="1653" width="1.7" height="15.0" fill="rgb(212,89,47)" rx="2" ry="2" />
<text  x="412.07" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1397" width="1.7" height="15.0" fill="rgb(244,177,29)" rx="2" ry="2" />
<text  x="105.89" y="1407.5" ></text>
</g>
<g >
<title>service::client_state::has_access (15 samples, 2.19%)</title><rect x="723.8" y="1653" width="25.9" height="15.0" fill="rgb(206,81,22)" rx="2" ry="2" />
<text  x="726.85" y="1663.5" >s..</text>
</g>
<g >
<title>[unknown] (40 samples, 5.83%)</title><rect x="10.0" y="709" width="68.8" height="15.0" fill="rgb(247,143,19)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >[unknown]</text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="1067.9" y="1733" width="1.7" height="15.0" fill="rgb(219,171,41)" rx="2" ry="2" />
<text  x="1070.87" y="1743.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (1 samples, 0.15%)</title><rect x="90.8" y="1653" width="1.8" height="15.0" fill="rgb(214,176,47)" rx="2" ry="2" />
<text  x="93.85" y="1663.5" ></text>
</g>
<g >
<title>db::filter_for_query (2 samples, 0.29%)</title><rect x="962.9" y="1589" width="3.5" height="15.0" fill="rgb(242,78,36)" rx="2" ry="2" />
<text  x="965.94" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="37.5" y="293" width="1.7" height="15.0" fill="rgb(243,26,34)" rx="2" ry="2" />
<text  x="40.52" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.15%)</title><rect x="675.7" y="1749" width="1.7" height="15.0" fill="rgb(228,8,6)" rx="2" ry="2" />
<text  x="678.69" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="805" width="72.2" height="15.0" fill="rgb(221,157,46)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >[unknown]</text>
</g>
<g >
<title>schema::column_at (1 samples, 0.15%)</title><rect x="388.4" y="1621" width="1.7" height="15.0" fill="rgb(238,126,42)" rx="2" ry="2" />
<text  x="391.43" y="1631.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (2 samples, 0.29%)</title><rect x="202.7" y="1701" width="3.4" height="15.0" fill="rgb(228,18,46)" rx="2" ry="2" />
<text  x="205.65" y="1711.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.29%)</title><rect x="1076.5" y="1733" width="3.4" height="15.0" fill="rgb(226,100,53)" rx="2" ry="2" />
<text  x="1079.47" y="1743.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="109.8" y="1557" width="3.4" height="15.0" fill="rgb(239,47,24)" rx="2" ry="2" />
<text  x="112.77" y="1567.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (2 samples, 0.29%)</title><rect x="85.7" y="1685" width="3.4" height="15.0" fill="rgb(229,224,41)" rx="2" ry="2" />
<text  x="88.69" y="1695.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.15%)</title><rect x="1036.9" y="1605" width="1.7" height="15.0" fill="rgb(235,131,46)" rx="2" ry="2" />
<text  x="1039.91" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (7 samples, 1.02%)</title><rect x="797.8" y="1605" width="12.1" height="15.0" fill="rgb(205,62,6)" rx="2" ry="2" />
<text  x="800.81" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.15%)</title><rect x="66.8" y="325" width="1.7" height="15.0" fill="rgb(211,61,26)" rx="2" ry="2" />
<text  x="69.76" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.15%)</title><rect x="111.5" y="1541" width="1.7" height="15.0" fill="rgb(240,203,52)" rx="2" ry="2" />
<text  x="114.49" y="1551.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::with_scheduling_group&lt;table::try_flush_memtable_to_sstable (1 samples, 0.15%)</title><rect x="1050.7" y="1749" width="1.7" height="15.0" fill="rgb(251,84,4)" rx="2" ry="2" />
<text  x="1053.67" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::_M_ptr (1 samples, 0.15%)</title><rect x="75.4" y="453" width="1.7" height="15.0" fill="rgb(214,32,22)" rx="2" ry="2" />
<text  x="78.36" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="484.8" y="1621" width="1.7" height="15.0" fill="rgb(232,52,23)" rx="2" ry="2" />
<text  x="487.75" y="1631.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="145.9" y="1717" width="3.4" height="15.0" fill="rgb(215,2,33)" rx="2" ry="2" />
<text  x="148.89" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (10 samples, 1.46%)</title><rect x="41.0" y="421" width="17.2" height="15.0" fill="rgb(229,194,16)" rx="2" ry="2" />
<text  x="43.96" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (12 samples, 1.75%)</title><rect x="37.5" y="453" width="20.7" height="15.0" fill="rgb(247,208,21)" rx="2" ry="2" />
<text  x="40.52" y="463.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.15%)</title><rect x="830.5" y="1653" width="1.7" height="15.0" fill="rgb(233,40,43)" rx="2" ry="2" />
<text  x="833.50" y="1663.5" ></text>
</g>
<g >
<title>boost::variant&lt;ser::live_cell_view, ser::expiring_cell_view, ser::dead_cell_view, ser::counter_cell_view, ser::unknown_variant_type&gt;::apply_visitor&lt;(anonymous namespace)::read_atomic_cell (1 samples, 0.15%)</title><rect x="1036.9" y="1589" width="1.7" height="15.0" fill="rgb(220,229,33)" rx="2" ry="2" />
<text  x="1039.91" y="1599.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (28 samples, 4.08%)</title><rect x="13.4" y="549" width="48.2" height="15.0" fill="rgb(243,174,38)" rx="2" ry="2" />
<text  x="16.44" y="559.5" >cql3..</text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="876.9" y="1589" width="1.8" height="15.0" fill="rgb(227,103,9)" rx="2" ry="2" />
<text  x="879.94" y="1599.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (5 samples, 0.73%)</title><rect x="323.1" y="1589" width="8.6" height="15.0" fill="rgb(245,123,53)" rx="2" ry="2" />
<text  x="326.06" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (5 samples, 0.73%)</title><rect x="49.6" y="373" width="8.6" height="15.0" fill="rgb(238,191,10)" rx="2" ry="2" />
<text  x="52.56" y="383.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.15%)</title><rect x="56.4" y="325" width="1.8" height="15.0" fill="rgb(226,7,46)" rx="2" ry="2" />
<text  x="59.44" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.15%)</title><rect x="22.0" y="277" width="1.8" height="15.0" fill="rgb(230,221,46)" rx="2" ry="2" />
<text  x="25.04" y="287.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="691.2" y="1685" width="3.4" height="15.0" fill="rgb(213,41,52)" rx="2" ry="2" />
<text  x="694.17" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (150 samples, 21.87%)</title><rect x="775.5" y="1717" width="258.0" height="15.0" fill="rgb(248,12,20)" rx="2" ry="2" />
<text  x="778.45" y="1727.5" >seastar::noncopyable_function&lt;seas..</text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.15%)</title><rect x="543.2" y="1605" width="1.8" height="15.0" fill="rgb(235,7,34)" rx="2" ry="2" />
<text  x="546.24" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.58%)</title><rect x="677.4" y="1717" width="6.9" height="15.0" fill="rgb(226,38,23)" rx="2" ry="2" />
<text  x="680.41" y="1727.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (33 samples, 4.81%)</title><rect x="937.1" y="1605" width="56.8" height="15.0" fill="rgb(252,142,16)" rx="2" ry="2" />
<text  x="940.14" y="1615.5" >servic..</text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="593.1" y="1733" width="3.5" height="15.0" fill="rgb(216,180,34)" rx="2" ry="2" />
<text  x="596.12" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="65.0" y="325" width="1.8" height="15.0" fill="rgb(239,139,47)" rx="2" ry="2" />
<text  x="68.04" y="335.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1653" width="74.0" height="15.0" fill="rgb(223,207,18)" rx="2" ry="2" />
<text  x="13.00" y="1663.5" >[unknown]</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (13 samples, 1.90%)</title><rect x="653.3" y="1749" width="22.4" height="15.0" fill="rgb(243,217,4)" rx="2" ry="2" />
<text  x="656.32" y="1759.5" >s..</text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (2 samples, 0.29%)</title><rect x="106.3" y="1541" width="3.5" height="15.0" fill="rgb(239,84,48)" rx="2" ry="2" />
<text  x="109.33" y="1551.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (8 samples, 1.17%)</title><rect x="441.7" y="1637" width="13.8" height="15.0" fill="rgb(229,215,33)" rx="2" ry="2" />
<text  x="444.75" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.15%)</title><rect x="22.0" y="309" width="1.8" height="15.0" fill="rgb(211,180,33)" rx="2" ry="2" />
<text  x="25.04" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.15%)</title><rect x="710.1" y="1637" width="1.7" height="15.0" fill="rgb(236,160,44)" rx="2" ry="2" />
<text  x="713.09" y="1647.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.29%)</title><rect x="741.0" y="1589" width="3.5" height="15.0" fill="rgb(218,7,11)" rx="2" ry="2" />
<text  x="744.05" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.29%)</title><rect x="455.5" y="1653" width="3.5" height="15.0" fill="rgb(220,173,27)" rx="2" ry="2" />
<text  x="458.51" y="1663.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (5 samples, 0.73%)</title><rect x="606.9" y="1733" width="8.6" height="15.0" fill="rgb(253,6,21)" rx="2" ry="2" />
<text  x="609.88" y="1743.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="82.2" y="1269" width="1.8" height="15.0" fill="rgb(237,50,16)" rx="2" ry="2" />
<text  x="85.24" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1157" width="72.2" height="15.0" fill="rgb(209,18,32)" rx="2" ry="2" />
<text  x="13.00" y="1167.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="113.2" y="1493" width="1.7" height="15.0" fill="rgb(213,72,29)" rx="2" ry="2" />
<text  x="116.21" y="1503.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~_Vector_base (1 samples, 0.15%)</title><rect x="94.3" y="1509" width="1.7" height="15.0" fill="rgb(206,98,19)" rx="2" ry="2" />
<text  x="97.29" y="1519.5" ></text>
</g>
<g >
<title>mutation_querier::consume (20 samples, 2.92%)</title><rect x="374.7" y="1637" width="34.4" height="15.0" fill="rgb(210,205,50)" rx="2" ry="2" />
<text  x="377.66" y="1647.5" >mu..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.29%)</title><rect x="41.0" y="405" width="3.4" height="15.0" fill="rgb(220,222,49)" rx="2" ry="2" />
<text  x="43.96" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.15%)</title><rect x="99.4" y="1477" width="1.8" height="15.0" fill="rgb(213,182,5)" rx="2" ry="2" />
<text  x="102.45" y="1487.5" ></text>
</g>
<g >
<title>do_cql_test (4 samples, 0.58%)</title><rect x="71.9" y="629" width="6.9" height="15.0" fill="rgb(237,147,25)" rx="2" ry="2" />
<text  x="74.92" y="639.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="901" width="72.2" height="15.0" fill="rgb(227,83,33)" rx="2" ry="2" />
<text  x="13.00" y="911.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="82.2" y="981" width="1.8" height="15.0" fill="rgb(211,99,27)" rx="2" ry="2" />
<text  x="85.24" y="991.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (1 samples, 0.15%)</title><rect x="28.9" y="341" width="1.7" height="15.0" fill="rgb(219,117,21)" rx="2" ry="2" />
<text  x="31.92" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="152.8" y="1685" width="1.7" height="15.0" fill="rgb(229,49,54)" rx="2" ry="2" />
<text  x="155.77" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.44%)</title><rect x="288.7" y="1525" width="5.1" height="15.0" fill="rgb(213,85,54)" rx="2" ry="2" />
<text  x="291.66" y="1535.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.73%)</title><rect x="1040.3" y="1701" width="8.7" height="15.0" fill="rgb(239,229,21)" rx="2" ry="2" />
<text  x="1043.35" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (3 samples, 0.44%)</title><rect x="446.9" y="1621" width="5.2" height="15.0" fill="rgb(221,191,1)" rx="2" ry="2" />
<text  x="449.91" y="1631.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::expression&gt; (1 samples, 0.15%)</title><rect x="116.6" y="1589" width="1.8" height="15.0" fill="rgb(242,150,40)" rx="2" ry="2" />
<text  x="119.65" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.15%)</title><rect x="56.4" y="149" width="1.8" height="15.0" fill="rgb(249,34,53)" rx="2" ry="2" />
<text  x="59.44" y="159.5" ></text>
</g>
<g >
<title>table::query (229 samples, 33.38%)</title><rect x="180.3" y="1717" width="393.9" height="15.0" fill="rgb(228,207,10)" rx="2" ry="2" />
<text  x="183.29" y="1727.5" >table::query</text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.29%)</title><rect x="213.0" y="1701" width="3.4" height="15.0" fill="rgb(218,142,17)" rx="2" ry="2" />
<text  x="215.97" y="1711.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.15%)</title><rect x="80.5" y="645" width="1.7" height="15.0" fill="rgb(244,161,38)" rx="2" ry="2" />
<text  x="83.52" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.15%)</title><rect x="66.8" y="389" width="1.7" height="15.0" fill="rgb(218,101,48)" rx="2" ry="2" />
<text  x="69.76" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (9 samples, 1.31%)</title><rect x="94.3" y="1573" width="15.5" height="15.0" fill="rgb(238,117,14)" rx="2" ry="2" />
<text  x="97.29" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.15%)</title><rect x="25.5" y="277" width="1.7" height="15.0" fill="rgb(250,87,1)" rx="2" ry="2" />
<text  x="28.48" y="287.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.15%)</title><rect x="78.8" y="725" width="1.7" height="15.0" fill="rgb(215,225,5)" rx="2" ry="2" />
<text  x="81.80" y="735.5" ></text>
</g>
<g >
<title>do_cql_test (5 samples, 0.73%)</title><rect x="84.0" y="1765" width="8.6" height="15.0" fill="rgb(233,148,5)" rx="2" ry="2" />
<text  x="86.97" y="1775.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (3 samples, 0.44%)</title><rect x="832.2" y="1653" width="5.2" height="15.0" fill="rgb(245,106,20)" rx="2" ry="2" />
<text  x="835.22" y="1663.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::query_options&gt;::~shared_ptr_count_for (1 samples, 0.15%)</title><rect x="620.6" y="1733" width="1.8" height="15.0" fill="rgb(244,90,29)" rx="2" ry="2" />
<text  x="623.64" y="1743.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (4 samples, 0.58%)</title><rect x="65.0" y="549" width="6.9" height="15.0" fill="rgb(211,139,5)" rx="2" ry="2" />
<text  x="68.04" y="559.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.58%)</title><rect x="118.4" y="1845" width="6.8" height="15.0" fill="rgb(214,197,31)" rx="2" ry="2" />
<text  x="121.37" y="1855.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="114.9" y="1541" width="1.7" height="15.0" fill="rgb(206,217,22)" rx="2" ry="2" />
<text  x="117.93" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.15%)</title><rect x="787.5" y="1669" width="1.7" height="15.0" fill="rgb(215,26,28)" rx="2" ry="2" />
<text  x="790.49" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.15%)</title><rect x="109.8" y="1461" width="1.7" height="15.0" fill="rgb(235,90,44)" rx="2" ry="2" />
<text  x="112.77" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::expr::expression&gt;::new_allocator (1 samples, 0.15%)</title><rect x="56.4" y="101" width="1.8" height="15.0" fill="rgb(218,183,5)" rx="2" ry="2" />
<text  x="59.44" y="111.5" ></text>
</g>
<g >
<title>main (560 samples, 81.63%)</title><rect x="132.1" y="1861" width="963.3" height="15.0" fill="rgb(241,81,5)" rx="2" ry="2" />
<text  x="135.13" y="1871.5" >main</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (10 samples, 1.46%)</title><rect x="636.1" y="1749" width="17.2" height="15.0" fill="rgb(244,169,43)" rx="2" ry="2" />
<text  x="639.12" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1317" width="1.7" height="15.0" fill="rgb(209,104,31)" rx="2" ry="2" />
<text  x="105.89" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="56.4" y="229" width="1.8" height="15.0" fill="rgb(210,161,11)" rx="2" ry="2" />
<text  x="59.44" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (9 samples, 1.31%)</title><rect x="252.5" y="1621" width="15.5" height="15.0" fill="rgb(237,100,1)" rx="2" ry="2" />
<text  x="255.54" y="1631.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (11 samples, 1.60%)</title><rect x="390.1" y="1621" width="19.0" height="15.0" fill="rgb(232,175,51)" rx="2" ry="2" />
<text  x="393.15" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="113.2" y="1541" width="1.7" height="15.0" fill="rgb(216,218,22)" rx="2" ry="2" />
<text  x="116.21" y="1551.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="78.8" y="325" width="1.7" height="15.0" fill="rgb(225,218,24)" rx="2" ry="2" />
<text  x="81.80" y="335.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (2 samples, 0.29%)</title><rect x="23.8" y="341" width="3.4" height="15.0" fill="rgb(215,41,50)" rx="2" ry="2" />
<text  x="26.76" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (1 samples, 0.15%)</title><rect x="765.1" y="1637" width="1.8" height="15.0" fill="rgb(217,49,0)" rx="2" ry="2" />
<text  x="768.13" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1349" width="74.0" height="15.0" fill="rgb(249,71,16)" rx="2" ry="2" />
<text  x="13.00" y="1359.5" >[unknown]</text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (35 samples, 5.10%)</title><rect x="699.8" y="1717" width="60.2" height="15.0" fill="rgb(250,196,24)" rx="2" ry="2" />
<text  x="702.77" y="1727.5" >single..</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.15%)</title><rect x="586.2" y="1733" width="1.8" height="15.0" fill="rgb(211,227,50)" rx="2" ry="2" />
<text  x="589.24" y="1743.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.15%)</title><rect x="250.8" y="1621" width="1.7" height="15.0" fill="rgb(249,159,35)" rx="2" ry="2" />
<text  x="253.82" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.15%)</title><rect x="109.8" y="1541" width="1.7" height="15.0" fill="rgb(244,53,41)" rx="2" ry="2" />
<text  x="112.77" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="70.2" y="229" width="1.7" height="15.0" fill="rgb(214,192,37)" rx="2" ry="2" />
<text  x="73.20" y="239.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (10 samples, 1.46%)</title><rect x="730.7" y="1605" width="17.2" height="15.0" fill="rgb(240,169,31)" rx="2" ry="2" />
<text  x="733.73" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.15%)</title><rect x="70.2" y="213" width="1.7" height="15.0" fill="rgb(211,62,31)" rx="2" ry="2" />
<text  x="73.20" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="548.4" y="1573" width="3.4" height="15.0" fill="rgb(245,65,10)" rx="2" ry="2" />
<text  x="551.40" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.15%)</title><rect x="618.9" y="1733" width="1.7" height="15.0" fill="rgb(249,33,26)" rx="2" ry="2" />
<text  x="621.92" y="1743.5" ></text>
</g>
<g >
<title>free (1 samples, 0.15%)</title><rect x="151.0" y="1685" width="1.8" height="15.0" fill="rgb(228,32,22)" rx="2" ry="2" />
<text  x="154.05" y="1695.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.15%)</title><rect x="163.1" y="1717" width="1.7" height="15.0" fill="rgb(239,195,6)" rx="2" ry="2" />
<text  x="166.09" y="1727.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (556 samples, 81.05%)</title><rect x="135.6" y="1765" width="956.4" height="15.0" fill="rgb(246,73,22)" rx="2" ry="2" />
<text  x="138.57" y="1775.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (2 samples, 0.29%)</title><rect x="1040.3" y="1493" width="3.5" height="15.0" fill="rgb(212,14,5)" rx="2" ry="2" />
<text  x="1043.35" y="1503.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (240 samples, 34.99%)</title><rect x="163.1" y="1733" width="412.8" height="15.0" fill="rgb(215,196,2)" rx="2" ry="2" />
<text  x="166.09" y="1743.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.29%)</title><rect x="51.3" y="325" width="3.4" height="15.0" fill="rgb(231,114,13)" rx="2" ry="2" />
<text  x="54.28" y="335.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1301" width="72.2" height="15.0" fill="rgb(239,167,10)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" >[unknown]</text>
</g>
<g >
<title>std::move&lt;cql3::expr::untyped_constant&amp;&gt; (1 samples, 0.15%)</title><rect x="102.9" y="1125" width="1.7" height="15.0" fill="rgb(224,137,15)" rx="2" ry="2" />
<text  x="105.89" y="1135.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.15%)</title><rect x="53.0" y="37" width="1.7" height="15.0" fill="rgb(207,208,29)" rx="2" ry="2" />
<text  x="56.00" y="47.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="828.8" y="1653" width="1.7" height="15.0" fill="rgb(214,86,49)" rx="2" ry="2" />
<text  x="831.78" y="1663.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="271.5" y="1573" width="1.7" height="15.0" fill="rgb(208,62,8)" rx="2" ry="2" />
<text  x="274.46" y="1583.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (1 samples, 0.15%)</title><rect x="670.5" y="1717" width="1.7" height="15.0" fill="rgb(230,6,12)" rx="2" ry="2" />
<text  x="673.52" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="531.2" y="1589" width="1.7" height="15.0" fill="rgb(247,126,53)" rx="2" ry="2" />
<text  x="534.20" y="1599.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;db::view::view_builder&gt;::~shared_ptr_count_for (1 samples, 0.15%)</title><rect x="92.6" y="1717" width="1.7" height="15.0" fill="rgb(252,191,14)" rx="2" ry="2" />
<text  x="95.57" y="1727.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (6 samples, 0.87%)</title><rect x="761.7" y="1685" width="10.3" height="15.0" fill="rgb(205,156,50)" rx="2" ry="2" />
<text  x="764.69" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.15%)</title><rect x="878.7" y="1589" width="1.7" height="15.0" fill="rgb(239,153,15)" rx="2" ry="2" />
<text  x="881.66" y="1599.5" ></text>
</g>
<g >
<title>seastar::reactor::run (559 samples, 81.49%)</title><rect x="132.1" y="1797" width="961.6" height="15.0" fill="rgb(236,99,17)" rx="2" ry="2" />
<text  x="135.13" y="1807.5" >seastar::reactor::run</text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="930.3" y="1509" width="5.1" height="15.0" fill="rgb(209,118,53)" rx="2" ry="2" />
<text  x="933.26" y="1519.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="532.9" y="1621" width="1.7" height="15.0" fill="rgb(249,110,10)" rx="2" ry="2" />
<text  x="535.92" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.15%)</title><rect x="127.0" y="1717" width="1.7" height="15.0" fill="rgb(237,83,42)" rx="2" ry="2" />
<text  x="129.97" y="1727.5" ></text>
</g>
<g >
<title>query::querier_base::close (15 samples, 2.19%)</title><rect x="438.3" y="1701" width="25.8" height="15.0" fill="rgb(236,11,28)" rx="2" ry="2" />
<text  x="441.31" y="1711.5" >q..</text>
</g>
<g >
<title>mutation_partition::apply_monotonically (1 samples, 0.15%)</title><rect x="1050.7" y="1541" width="1.7" height="15.0" fill="rgb(240,88,0)" rx="2" ry="2" />
<text  x="1053.67" y="1551.5" ></text>
</g>
<g >
<title>__start_context (5 samples, 0.73%)</title><rect x="84.0" y="1829" width="8.6" height="15.0" fill="rgb(214,48,35)" rx="2" ry="2" />
<text  x="86.97" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.15%)</title><rect x="53.0" y="85" width="1.7" height="15.0" fill="rgb(221,159,23)" rx="2" ry="2" />
<text  x="56.00" y="95.5" ></text>
</g>
<g >
<title>database::find_schema (5 samples, 0.73%)</title><rect x="713.5" y="1669" width="8.6" height="15.0" fill="rgb(220,205,6)" rx="2" ry="2" />
<text  x="716.53" y="1679.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.15%)</title><rect x="770.3" y="1605" width="1.7" height="15.0" fill="rgb(249,95,20)" rx="2" ry="2" />
<text  x="773.29" y="1615.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (28 samples, 4.08%)</title><rect x="13.4" y="517" width="48.2" height="15.0" fill="rgb(249,75,30)" rx="2" ry="2" />
<text  x="16.44" y="527.5" >cql3..</text>
</g>
<g >
<title>operator new (4 samples, 0.58%)</title><rect x="677.4" y="1733" width="6.9" height="15.0" fill="rgb(239,155,22)" rx="2" ry="2" />
<text  x="680.41" y="1743.5" ></text>
</g>
<g >
<title>table::update_cache (1 samples, 0.15%)</title><rect x="1050.7" y="1733" width="1.7" height="15.0" fill="rgb(213,172,21)" rx="2" ry="2" />
<text  x="1053.67" y="1743.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.15%)</title><rect x="751.4" y="1637" width="1.7" height="15.0" fill="rgb(233,40,45)" rx="2" ry="2" />
<text  x="754.37" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (4 samples, 0.58%)</title><rect x="71.9" y="645" width="6.9" height="15.0" fill="rgb(242,201,31)" rx="2" ry="2" />
<text  x="74.92" y="655.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="82.2" y="885" width="1.8" height="15.0" fill="rgb(231,204,45)" rx="2" ry="2" />
<text  x="85.24" y="895.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_view_statement, std::default_delete&lt;cql3::statements::alter_view_statement&gt; &gt;::~unique_ptr (1 samples, 0.15%)</title><rect x="77.1" y="485" width="1.7" height="15.0" fill="rgb(234,52,34)" rx="2" ry="2" />
<text  x="80.08" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.15%)</title><rect x="128.7" y="1813" width="1.7" height="15.0" fill="rgb(208,151,27)" rx="2" ry="2" />
<text  x="131.69" y="1823.5" ></text>
</g>
<g >
<title>do_cql_test (32 samples, 4.66%)</title><rect x="10.0" y="597" width="55.0" height="15.0" fill="rgb(246,157,34)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >do_cq..</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.29%)</title><rect x="66.8" y="421" width="3.4" height="15.0" fill="rgb(212,13,52)" rx="2" ry="2" />
<text  x="69.76" y="431.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.15%)</title><rect x="80.5" y="597" width="1.7" height="15.0" fill="rgb(207,211,40)" rx="2" ry="2" />
<text  x="83.52" y="607.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.15%)</title><rect x="104.6" y="1541" width="1.7" height="15.0" fill="rgb(229,74,36)" rx="2" ry="2" />
<text  x="107.61" y="1551.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (4 samples, 0.58%)</title><rect x="71.9" y="677" width="6.9" height="15.0" fill="rgb(208,137,51)" rx="2" ry="2" />
<text  x="74.92" y="687.5" ></text>
</g>
<g >
<title>row_cache::update (1 samples, 0.15%)</title><rect x="1050.7" y="1717" width="1.7" height="15.0" fill="rgb(246,3,4)" rx="2" ry="2" />
<text  x="1053.67" y="1727.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (5 samples, 0.73%)</title><rect x="1040.3" y="1733" width="8.7" height="15.0" fill="rgb(242,3,6)" rx="2" ry="2" />
<text  x="1043.35" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.15%)</title><rect x="82.2" y="1061" width="1.8" height="15.0" fill="rgb(253,185,44)" rx="2" ry="2" />
<text  x="85.24" y="1071.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.29%)</title><rect x="412.5" y="1653" width="3.4" height="15.0" fill="rgb(206,40,4)" rx="2" ry="2" />
<text  x="415.51" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="47.8" y="357" width="1.8" height="15.0" fill="rgb(236,95,3)" rx="2" ry="2" />
<text  x="50.84" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.15%)</title><rect x="102.9" y="1509" width="1.7" height="15.0" fill="rgb(219,184,29)" rx="2" ry="2" />
<text  x="105.89" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="997" width="72.2" height="15.0" fill="rgb(239,180,4)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.15%)</title><rect x="66.8" y="357" width="1.7" height="15.0" fill="rgb(211,161,31)" rx="2" ry="2" />
<text  x="69.76" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.15%)</title><rect x="109.8" y="1493" width="1.7" height="15.0" fill="rgb(224,214,11)" rx="2" ry="2" />
<text  x="112.77" y="1503.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (4 samples, 0.58%)</title><rect x="65.0" y="581" width="6.9" height="15.0" fill="rgb(232,35,54)" rx="2" ry="2" />
<text  x="68.04" y="591.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char const*&gt; (1 samples, 0.15%)</title><rect x="32.4" y="309" width="1.7" height="15.0" fill="rgb(227,101,12)" rx="2" ry="2" />
<text  x="35.36" y="319.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="757" width="72.2" height="15.0" fill="rgb(247,223,26)" rx="2" ry="2" />
<text  x="13.00" y="767.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.15%)</title><rect x="99.4" y="1493" width="1.8" height="15.0" fill="rgb(245,190,49)" rx="2" ry="2" />
<text  x="102.45" y="1503.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="575.9" y="1733" width="1.7" height="15.0" fill="rgb(212,1,25)" rx="2" ry="2" />
<text  x="578.92" y="1743.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (93 samples, 13.56%)</title><rect x="837.4" y="1669" width="159.9" height="15.0" fill="rgb(212,56,2)" rx="2" ry="2" />
<text  x="840.38" y="1679.5" >cql3::statements::se..</text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.73%)</title><rect x="1040.3" y="1717" width="8.7" height="15.0" fill="rgb(227,217,25)" rx="2" ry="2" />
<text  x="1043.35" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="97.7" y="1525" width="3.5" height="15.0" fill="rgb(221,128,19)" rx="2" ry="2" />
<text  x="100.73" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.15%)</title><rect x="82.2" y="1109" width="1.8" height="15.0" fill="rgb(247,30,49)" rx="2" ry="2" />
<text  x="85.24" y="1119.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (3 samples, 0.44%)</title><rect x="73.6" y="501" width="5.2" height="15.0" fill="rgb(239,209,53)" rx="2" ry="2" />
<text  x="76.64" y="511.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="727.3" y="1637" width="1.7" height="15.0" fill="rgb(235,59,38)" rx="2" ry="2" />
<text  x="730.29" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="917" width="72.2" height="15.0" fill="rgb(241,139,45)" rx="2" ry="2" />
<text  x="13.00" y="927.5" >[unknown]</text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.15%)</title><rect x="53.0" y="53" width="1.7" height="15.0" fill="rgb(209,80,7)" rx="2" ry="2" />
<text  x="56.00" y="63.5" ></text>
</g>
<g >
<title>__libc_start_main (560 samples, 81.63%)</title><rect x="132.1" y="1877" width="963.3" height="15.0" fill="rgb(236,145,20)" rx="2" ry="2" />
<text  x="135.13" y="1887.5" >__libc_start_main</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14 samples, 2.04%)</title><rect x="94.3" y="1797" width="24.1" height="15.0" fill="rgb(215,159,44)" rx="2" ry="2" />
<text  x="97.29" y="1807.5" >s..</text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="142.4" y="1733" width="1.8" height="15.0" fill="rgb(251,130,4)" rx="2" ry="2" />
<text  x="145.45" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.29%)</title><rect x="23.8" y="293" width="3.4" height="15.0" fill="rgb(233,140,18)" rx="2" ry="2" />
<text  x="26.76" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.29%)</title><rect x="1040.3" y="1429" width="3.5" height="15.0" fill="rgb(251,109,10)" rx="2" ry="2" />
<text  x="1043.35" y="1439.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (559 samples, 81.49%)</title><rect x="132.1" y="1781" width="961.6" height="15.0" fill="rgb(249,60,1)" rx="2" ry="2" />
<text  x="135.13" y="1791.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="53.0" y="117" width="1.7" height="15.0" fill="rgb(216,91,11)" rx="2" ry="2" />
<text  x="56.00" y="127.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (1 samples, 0.15%)</title><rect x="128.7" y="1797" width="1.7" height="15.0" fill="rgb(242,221,0)" rx="2" ry="2" />
<text  x="131.69" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (4 samples, 0.58%)</title><rect x="65.0" y="469" width="6.9" height="15.0" fill="rgb(230,36,49)" rx="2" ry="2" />
<text  x="68.04" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (2 samples, 0.29%)</title><rect x="1081.6" y="1717" width="3.5" height="15.0" fill="rgb(216,89,24)" rx="2" ry="2" />
<text  x="1084.63" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.15%)</title><rect x="1050.7" y="1669" width="1.7" height="15.0" fill="rgb(229,44,53)" rx="2" ry="2" />
<text  x="1053.67" y="1679.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.15%)</title><rect x="545.0" y="1605" width="1.7" height="15.0" fill="rgb(243,111,18)" rx="2" ry="2" />
<text  x="547.96" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (1 samples, 0.15%)</title><rect x="15.2" y="389" width="1.7" height="15.0" fill="rgb(219,53,42)" rx="2" ry="2" />
<text  x="18.16" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1 samples, 0.15%)</title><rect x="1092.0" y="1765" width="1.7" height="15.0" fill="rgb(232,22,34)" rx="2" ry="2" />
<text  x="1094.95" y="1775.5" ></text>
</g>
<g >
<title>row::~row (8 samples, 1.17%)</title><rect x="357.5" y="1637" width="13.7" height="15.0" fill="rgb(232,223,44)" rx="2" ry="2" />
<text  x="360.46" y="1647.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.15%)</title><rect x="44.4" y="373" width="1.7" height="15.0" fill="rgb(218,73,49)" rx="2" ry="2" />
<text  x="47.40" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="655.0" y="1733" width="1.8" height="15.0" fill="rgb(236,29,51)" rx="2" ry="2" />
<text  x="658.04" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1301" width="1.7" height="15.0" fill="rgb(230,209,24)" rx="2" ry="2" />
<text  x="105.89" y="1311.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (1 samples, 0.15%)</title><rect x="1049.0" y="1733" width="1.7" height="15.0" fill="rgb(227,208,20)" rx="2" ry="2" />
<text  x="1051.95" y="1743.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.15%)</title><rect x="668.8" y="1717" width="1.7" height="15.0" fill="rgb(205,223,6)" rx="2" ry="2" />
<text  x="671.80" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;3ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1189" width="1.7" height="15.0" fill="rgb(206,11,24)" rx="2" ry="2" />
<text  x="105.89" y="1199.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (1 samples, 0.15%)</title><rect x="1035.2" y="1605" width="1.7" height="15.0" fill="rgb(237,89,50)" rx="2" ry="2" />
<text  x="1038.19" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="113.2" y="1477" width="1.7" height="15.0" fill="rgb(218,149,1)" rx="2" ry="2" />
<text  x="116.21" y="1487.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (4 samples, 0.58%)</title><rect x="1021.4" y="1669" width="6.9" height="15.0" fill="rgb(241,147,46)" rx="2" ry="2" />
<text  x="1024.43" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="113.2" y="1413" width="1.7" height="15.0" fill="rgb(242,49,47)" rx="2" ry="2" />
<text  x="116.21" y="1423.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (4 samples, 0.58%)</title><rect x="687.7" y="1701" width="6.9" height="15.0" fill="rgb(211,21,31)" rx="2" ry="2" />
<text  x="690.73" y="1711.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (53 samples, 7.73%)</title><rect x="345.4" y="1669" width="91.2" height="15.0" fill="rgb(215,141,22)" rx="2" ry="2" />
<text  x="348.42" y="1679.5" >seastar::d..</text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.15%)</title><rect x="70.2" y="181" width="1.7" height="15.0" fill="rgb(229,62,2)" rx="2" ry="2" />
<text  x="73.20" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.15%)</title><rect x="114.9" y="1429" width="1.7" height="15.0" fill="rgb(219,140,11)" rx="2" ry="2" />
<text  x="117.93" y="1439.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (2 samples, 0.29%)</title><rect x="328.2" y="1573" width="3.5" height="15.0" fill="rgb(229,174,38)" rx="2" ry="2" />
<text  x="331.22" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="70.2" y="341" width="1.7" height="15.0" fill="rgb(211,52,23)" rx="2" ry="2" />
<text  x="73.20" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1285" width="1.7" height="15.0" fill="rgb(249,170,45)" rx="2" ry="2" />
<text  x="105.89" y="1295.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="106.3" y="1493" width="1.7" height="15.0" fill="rgb(248,95,18)" rx="2" ry="2" />
<text  x="109.33" y="1503.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.15%)</title><rect x="56.4" y="309" width="1.8" height="15.0" fill="rgb(222,44,6)" rx="2" ry="2" />
<text  x="59.44" y="319.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1477" width="74.0" height="15.0" fill="rgb(243,219,33)" rx="2" ry="2" />
<text  x="13.00" y="1487.5" >[unknown]</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (13 samples, 1.90%)</title><rect x="598.3" y="1749" width="22.3" height="15.0" fill="rgb(220,218,7)" rx="2" ry="2" />
<text  x="601.28" y="1759.5" >s..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.15%)</title><rect x="42.7" y="373" width="1.7" height="15.0" fill="rgb(231,138,9)" rx="2" ry="2" />
<text  x="45.68" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (1 samples, 0.15%)</title><rect x="753.1" y="1685" width="1.7" height="15.0" fill="rgb(209,37,23)" rx="2" ry="2" />
<text  x="756.09" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="37.5" y="341" width="1.7" height="15.0" fill="rgb(208,80,21)" rx="2" ry="2" />
<text  x="40.52" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="1050.7" y="1621" width="1.7" height="15.0" fill="rgb(242,101,40)" rx="2" ry="2" />
<text  x="1053.67" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="70.2" y="405" width="1.7" height="15.0" fill="rgb(214,148,9)" rx="2" ry="2" />
<text  x="73.20" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="340.3" y="1653" width="3.4" height="15.0" fill="rgb(238,176,29)" rx="2" ry="2" />
<text  x="343.26" y="1663.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="581.1" y="1733" width="1.7" height="15.0" fill="rgb(238,217,13)" rx="2" ry="2" />
<text  x="584.08" y="1743.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (1 samples, 0.15%)</title><rect x="1045.5" y="1541" width="1.7" height="15.0" fill="rgb(210,201,47)" rx="2" ry="2" />
<text  x="1048.51" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="82.2" y="917" width="1.8" height="15.0" fill="rgb(219,42,53)" rx="2" ry="2" />
<text  x="85.24" y="927.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1685" width="74.0" height="15.0" fill="rgb(244,229,1)" rx="2" ry="2" />
<text  x="13.00" y="1695.5" >[unknown]</text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.29%)</title><rect x="902.7" y="1509" width="3.5" height="15.0" fill="rgb(214,200,15)" rx="2" ry="2" />
<text  x="905.74" y="1519.5" ></text>
</g>
<g >
<title>__start_context (15 samples, 2.19%)</title><rect x="92.6" y="1845" width="25.8" height="15.0" fill="rgb(230,150,10)" rx="2" ry="2" />
<text  x="95.57" y="1855.5" >_..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.29%)</title><rect x="1040.3" y="1445" width="3.5" height="15.0" fill="rgb(215,128,11)" rx="2" ry="2" />
<text  x="1043.35" y="1455.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="796.1" y="1653" width="1.7" height="15.0" fill="rgb(207,174,1)" rx="2" ry="2" />
<text  x="799.09" y="1663.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.44%)</title><rect x="305.9" y="1509" width="5.1" height="15.0" fill="rgb(235,172,39)" rx="2" ry="2" />
<text  x="308.86" y="1519.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.29%)</title><rect x="51.3" y="309" width="3.4" height="15.0" fill="rgb(236,88,35)" rx="2" ry="2" />
<text  x="54.28" y="319.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.15%)</title><rect x="78.8" y="629" width="1.7" height="15.0" fill="rgb(213,19,33)" rx="2" ry="2" />
<text  x="81.80" y="639.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="82.2" y="869" width="1.8" height="15.0" fill="rgb(254,146,9)" rx="2" ry="2" />
<text  x="85.24" y="879.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (152 samples, 22.16%)</title><rect x="772.0" y="1733" width="261.5" height="15.0" fill="rgb(254,120,27)" rx="2" ry="2" />
<text  x="775.01" y="1743.5" >seastar::concrete_execution_stage&lt;..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="372.9" y="1637" width="1.8" height="15.0" fill="rgb(220,222,40)" rx="2" ry="2" />
<text  x="375.94" y="1647.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (2 samples, 0.29%)</title><rect x="328.2" y="1557" width="3.5" height="15.0" fill="rgb(207,29,27)" rx="2" ry="2" />
<text  x="331.22" y="1567.5" ></text>
</g>
<g >
<title>seastar::app_template::run (560 samples, 81.63%)</title><rect x="132.1" y="1845" width="963.3" height="15.0" fill="rgb(242,51,32)" rx="2" ry="2" />
<text  x="135.13" y="1855.5" >seastar::app_template::run</text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (1 samples, 0.15%)</title><rect x="128.7" y="1765" width="1.7" height="15.0" fill="rgb(215,193,35)" rx="2" ry="2" />
<text  x="131.69" y="1775.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (1 samples, 0.15%)</title><rect x="71.9" y="517" width="1.7" height="15.0" fill="rgb(240,132,46)" rx="2" ry="2" />
<text  x="74.92" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="799.5" y="1573" width="1.8" height="15.0" fill="rgb(213,184,10)" rx="2" ry="2" />
<text  x="802.53" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="113.2" y="1461" width="1.7" height="15.0" fill="rgb(226,23,53)" rx="2" ry="2" />
<text  x="116.21" y="1471.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.15%)</title><rect x="113.2" y="1573" width="1.7" height="15.0" fill="rgb(215,82,28)" rx="2" ry="2" />
<text  x="116.21" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (37 samples, 5.39%)</title><rect x="268.0" y="1621" width="63.7" height="15.0" fill="rgb(240,180,48)" rx="2" ry="2" />
<text  x="271.02" y="1631.5" >partit..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.15%)</title><rect x="111.5" y="1525" width="1.7" height="15.0" fill="rgb(240,76,47)" rx="2" ry="2" />
<text  x="114.49" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.15%)</title><rect x="109.8" y="1477" width="1.7" height="15.0" fill="rgb(245,105,6)" rx="2" ry="2" />
<text  x="112.77" y="1487.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (4 samples, 0.58%)</title><rect x="125.2" y="1845" width="6.9" height="15.0" fill="rgb(249,206,27)" rx="2" ry="2" />
<text  x="128.25" y="1855.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="335.1" y="1685" width="3.4" height="15.0" fill="rgb(235,210,39)" rx="2" ry="2" />
<text  x="338.10" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (7 samples, 1.02%)</title><rect x="797.8" y="1653" width="12.1" height="15.0" fill="rgb(226,212,3)" rx="2" ry="2" />
<text  x="800.81" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="906.2" y="1493" width="5.1" height="15.0" fill="rgb(221,48,50)" rx="2" ry="2" />
<text  x="909.18" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1621" width="74.0" height="15.0" fill="rgb(236,22,44)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (27 samples, 3.94%)</title><rect x="13.4" y="469" width="46.5" height="15.0" fill="rgb(205,57,48)" rx="2" ry="2" />
<text  x="16.44" y="479.5" >cql3..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="37.5" y="421" width="1.7" height="15.0" fill="rgb(235,109,54)" rx="2" ry="2" />
<text  x="40.52" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.44%)</title><rect x="175.1" y="1701" width="5.2" height="15.0" fill="rgb(251,201,4)" rx="2" ry="2" />
<text  x="178.13" y="1711.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (2 samples, 0.29%)</title><rect x="789.2" y="1669" width="3.5" height="15.0" fill="rgb(232,6,18)" rx="2" ry="2" />
<text  x="792.21" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.15%)</title><rect x="698.0" y="1717" width="1.8" height="15.0" fill="rgb(228,204,32)" rx="2" ry="2" />
<text  x="701.05" y="1727.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.15%)</title><rect x="84.0" y="1653" width="1.7" height="15.0" fill="rgb(223,187,41)" rx="2" ry="2" />
<text  x="86.97" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="78.8" y="437" width="1.7" height="15.0" fill="rgb(237,96,17)" rx="2" ry="2" />
<text  x="81.80" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (3 samples, 0.44%)</title><rect x="832.2" y="1637" width="5.2" height="15.0" fill="rgb(224,67,10)" rx="2" ry="2" />
<text  x="835.22" y="1647.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="558.7" y="1621" width="3.5" height="15.0" fill="rgb(207,225,28)" rx="2" ry="2" />
<text  x="561.72" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (2 samples, 0.29%)</title><rect x="125.2" y="1749" width="3.5" height="15.0" fill="rgb(228,133,50)" rx="2" ry="2" />
<text  x="128.25" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1429" width="74.0" height="15.0" fill="rgb(207,16,9)" rx="2" ry="2" />
<text  x="13.00" y="1439.5" >[unknown]</text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (3 samples, 0.44%)</title><rect x="1040.3" y="1573" width="5.2" height="15.0" fill="rgb(206,158,12)" rx="2" ry="2" />
<text  x="1043.35" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1765" width="74.0" height="15.0" fill="rgb(229,77,32)" rx="2" ry="2" />
<text  x="13.00" y="1775.5" >[unknown]</text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.15%)</title><rect x="56.4" y="133" width="1.8" height="15.0" fill="rgb(207,155,45)" rx="2" ry="2" />
<text  x="59.44" y="143.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.15%)</title><rect x="161.4" y="1733" width="1.7" height="15.0" fill="rgb(245,63,1)" rx="2" ry="2" />
<text  x="164.37" y="1743.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (3 samples, 0.44%)</title><rect x="311.0" y="1509" width="5.2" height="15.0" fill="rgb(236,88,6)" rx="2" ry="2" />
<text  x="314.02" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (14 samples, 2.04%)</title><rect x="94.3" y="1717" width="24.1" height="15.0" fill="rgb(209,31,10)" rx="2" ry="2" />
<text  x="97.29" y="1727.5" >c..</text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (2 samples, 0.29%)</title><rect x="1040.3" y="1525" width="3.5" height="15.0" fill="rgb(209,169,2)" rx="2" ry="2" />
<text  x="1043.35" y="1535.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (2 samples, 0.29%)</title><rect x="101.2" y="1541" width="3.4" height="15.0" fill="rgb(213,66,22)" rx="2" ry="2" />
<text  x="104.17" y="1551.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.15%)</title><rect x="65.0" y="405" width="1.8" height="15.0" fill="rgb(227,129,28)" rx="2" ry="2" />
<text  x="68.04" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::batch_statement, std::default_delete&lt;cql3::statements::raw::batch_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::batch_statement&gt;, void&gt; (1 samples, 0.15%)</title><rect x="58.2" y="453" width="1.7" height="15.0" fill="rgb(216,209,30)" rx="2" ry="2" />
<text  x="61.16" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.15%)</title><rect x="22.0" y="325" width="1.8" height="15.0" fill="rgb(236,95,0)" rx="2" ry="2" />
<text  x="25.04" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.29%)</title><rect x="612.0" y="1701" width="3.5" height="15.0" fill="rgb(242,28,20)" rx="2" ry="2" />
<text  x="615.04" y="1711.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (3 samples, 0.44%)</title><rect x="1040.3" y="1541" width="5.2" height="15.0" fill="rgb(222,112,30)" rx="2" ry="2" />
<text  x="1043.35" y="1551.5" ></text>
</g>
<g >
<title>dht::tri_compare (2 samples, 0.29%)</title><rect x="985.3" y="1525" width="3.4" height="15.0" fill="rgb(231,123,33)" rx="2" ry="2" />
<text  x="988.31" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="78.8" y="405" width="1.7" height="15.0" fill="rgb(240,88,38)" rx="2" ry="2" />
<text  x="81.80" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.15%)</title><rect x="42.7" y="261" width="1.7" height="15.0" fill="rgb(253,86,35)" rx="2" ry="2" />
<text  x="45.68" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="462.4" y="1637" width="1.7" height="15.0" fill="rgb(211,33,51)" rx="2" ry="2" />
<text  x="465.39" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (71 samples, 10.35%)</title><rect x="10.0" y="1877" width="122.1" height="15.0" fill="rgb(217,130,51)" rx="2" ry="2" />
<text  x="13.00" y="1887.5" >[unknown]</text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (5 samples, 0.73%)</title><rect x="1040.3" y="1621" width="8.7" height="15.0" fill="rgb(208,150,52)" rx="2" ry="2" />
<text  x="1043.35" y="1631.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (8 samples, 1.17%)</title><rect x="510.6" y="1637" width="13.7" height="15.0" fill="rgb(240,104,38)" rx="2" ry="2" />
<text  x="513.55" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.15%)</title><rect x="92.6" y="1765" width="1.7" height="15.0" fill="rgb(225,95,20)" rx="2" ry="2" />
<text  x="95.57" y="1775.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (23 samples, 3.35%)</title><rect x="792.7" y="1669" width="39.5" height="15.0" fill="rgb(205,153,17)" rx="2" ry="2" />
<text  x="795.65" y="1679.5" >cql..</text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt; &gt; (1 samples, 0.15%)</title><rect x="11.7" y="549" width="1.7" height="15.0" fill="rgb(229,14,30)" rx="2" ry="2" />
<text  x="14.72" y="559.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.15%)</title><rect x="1050.7" y="1653" width="1.7" height="15.0" fill="rgb(225,5,21)" rx="2" ry="2" />
<text  x="1053.67" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (2 samples, 0.29%)</title><rect x="125.2" y="1765" width="3.5" height="15.0" fill="rgb(252,81,37)" rx="2" ry="2" />
<text  x="128.25" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.15%)</title><rect x="1050.7" y="1637" width="1.7" height="15.0" fill="rgb(228,53,6)" rx="2" ry="2" />
<text  x="1053.67" y="1647.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="804.7" y="1557" width="1.7" height="15.0" fill="rgb(218,212,4)" rx="2" ry="2" />
<text  x="807.69" y="1567.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.15%)</title><rect x="1050.7" y="1509" width="1.7" height="15.0" fill="rgb(219,178,5)" rx="2" ry="2" />
<text  x="1053.67" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="80.5" y="581" width="1.7" height="15.0" fill="rgb(218,201,17)" rx="2" ry="2" />
<text  x="83.52" y="591.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1413" width="74.0" height="15.0" fill="rgb(227,193,4)" rx="2" ry="2" />
<text  x="13.00" y="1423.5" >[unknown]</text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.15%)</title><rect x="47.8" y="309" width="1.8" height="15.0" fill="rgb(226,123,2)" rx="2" ry="2" />
<text  x="50.84" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.15%)</title><rect x="436.6" y="1669" width="1.7" height="15.0" fill="rgb(211,226,21)" rx="2" ry="2" />
<text  x="439.59" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="78.8" y="389" width="1.7" height="15.0" fill="rgb(234,157,20)" rx="2" ry="2" />
<text  x="81.80" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (12 samples, 1.75%)</title><rect x="997.3" y="1669" width="20.7" height="15.0" fill="rgb(235,122,25)" rx="2" ry="2" />
<text  x="1000.35" y="1679.5" ></text>
</g>
<g >
<title>partition_snapshot::merge_partition_versions (1 samples, 0.15%)</title><rect x="1050.7" y="1557" width="1.7" height="15.0" fill="rgb(219,11,48)" rx="2" ry="2" />
<text  x="1053.67" y="1567.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::batch_statement, std::default_delete&lt;cql3::statements::raw::batch_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.15%)</title><rect x="58.2" y="421" width="1.7" height="15.0" fill="rgb(244,170,6)" rx="2" ry="2" />
<text  x="61.16" y="431.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.15%)</title><rect x="286.9" y="1541" width="1.8" height="15.0" fill="rgb(223,70,22)" rx="2" ry="2" />
<text  x="289.94" y="1551.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::~unique_ptr (1 samples, 0.15%)</title><rect x="75.4" y="469" width="1.7" height="15.0" fill="rgb(207,104,5)" rx="2" ry="2" />
<text  x="78.36" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="106.3" y="1461" width="1.7" height="15.0" fill="rgb(247,217,37)" rx="2" ry="2" />
<text  x="109.33" y="1471.5" ></text>
</g>
<g >
<title>__start_context (4 samples, 0.58%)</title><rect x="65.0" y="677" width="6.9" height="15.0" fill="rgb(253,115,45)" rx="2" ry="2" />
<text  x="68.04" y="687.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.15%)</title><rect x="768.6" y="1605" width="1.7" height="15.0" fill="rgb(244,153,1)" rx="2" ry="2" />
<text  x="771.57" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="113.2" y="1509" width="1.7" height="15.0" fill="rgb(221,93,4)" rx="2" ry="2" />
<text  x="116.21" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="617.2" y="1717" width="1.7" height="15.0" fill="rgb(252,166,46)" rx="2" ry="2" />
<text  x="620.20" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="78.8" y="421" width="1.7" height="15.0" fill="rgb(246,143,38)" rx="2" ry="2" />
<text  x="81.80" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::alter_view_statement*, std::default_delete&lt;cql3::statements::alter_view_statement&gt; &gt; (1 samples, 0.15%)</title><rect x="77.1" y="469" width="1.7" height="15.0" fill="rgb(227,157,7)" rx="2" ry="2" />
<text  x="80.08" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.15%)</title><rect x="108.0" y="1509" width="1.8" height="15.0" fill="rgb(211,20,21)" rx="2" ry="2" />
<text  x="111.05" y="1519.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (1 samples, 0.15%)</title><rect x="1085.1" y="1733" width="1.7" height="15.0" fill="rgb(235,8,0)" rx="2" ry="2" />
<text  x="1088.07" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="63.3" y="533" width="1.7" height="15.0" fill="rgb(211,32,44)" rx="2" ry="2" />
<text  x="66.32" y="543.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="440.0" y="1637" width="1.7" height="15.0" fill="rgb(231,55,33)" rx="2" ry="2" />
<text  x="443.03" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (3 samples, 0.44%)</title><rect x="311.0" y="1461" width="5.2" height="15.0" fill="rgb(251,98,32)" rx="2" ry="2" />
<text  x="314.02" y="1471.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (4 samples, 0.58%)</title><rect x="65.0" y="485" width="6.9" height="15.0" fill="rgb(235,90,35)" rx="2" ry="2" />
<text  x="68.04" y="495.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (4 samples, 0.58%)</title><rect x="1033.5" y="1733" width="6.8" height="15.0" fill="rgb(210,227,5)" rx="2" ry="2" />
<text  x="1036.47" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (4 samples, 0.58%)</title><rect x="30.6" y="341" width="6.9" height="15.0" fill="rgb(212,27,9)" rx="2" ry="2" />
<text  x="33.64" y="351.5" ></text>
</g>
<g >
<title>row::external_memory_usage (3 samples, 0.44%)</title><rect x="288.7" y="1541" width="5.1" height="15.0" fill="rgb(238,91,45)" rx="2" ry="2" />
<text  x="291.66" y="1551.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (5 samples, 0.73%)</title><rect x="1105.7" y="1877" width="8.6" height="15.0" fill="rgb(210,163,12)" rx="2" ry="2" />
<text  x="1108.71" y="1887.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="326.5" y="1573" width="1.7" height="15.0" fill="rgb(208,135,5)" rx="2" ry="2" />
<text  x="329.50" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="142.4" y="1717" width="1.8" height="15.0" fill="rgb(235,148,9)" rx="2" ry="2" />
<text  x="145.45" y="1727.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.15%)</title><rect x="84.0" y="1669" width="1.7" height="15.0" fill="rgb(214,224,6)" rx="2" ry="2" />
<text  x="86.97" y="1679.5" ></text>
</g>
<g >
<title>free (2 samples, 0.29%)</title><rect x="366.1" y="1621" width="3.4" height="15.0" fill="rgb(234,167,18)" rx="2" ry="2" />
<text  x="369.06" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.15%)</title><rect x="80.5" y="565" width="1.7" height="15.0" fill="rgb(239,177,9)" rx="2" ry="2" />
<text  x="83.52" y="575.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="37.5" y="437" width="1.7" height="15.0" fill="rgb(230,91,9)" rx="2" ry="2" />
<text  x="40.52" y="447.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.15%)</title><rect x="82.2" y="1301" width="1.8" height="15.0" fill="rgb(236,205,10)" rx="2" ry="2" />
<text  x="85.24" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1109" width="72.2" height="15.0" fill="rgb(245,126,25)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" >[unknown]</text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (23 samples, 3.35%)</title><rect x="895.9" y="1541" width="39.5" height="15.0" fill="rgb(232,212,54)" rx="2" ry="2" />
<text  x="898.86" y="1551.5" >sea..</text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.15%)</title><rect x="127.0" y="1669" width="1.7" height="15.0" fill="rgb(216,224,0)" rx="2" ry="2" />
<text  x="129.97" y="1679.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (2 samples, 0.29%)</title><rect x="520.9" y="1621" width="3.4" height="15.0" fill="rgb(221,26,39)" rx="2" ry="2" />
<text  x="523.87" y="1631.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.15%)</title><rect x="70.2" y="357" width="1.7" height="15.0" fill="rgb(229,74,1)" rx="2" ry="2" />
<text  x="73.20" y="367.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="885" width="72.2" height="15.0" fill="rgb(249,142,44)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.15%)</title><rect x="37.5" y="245" width="1.7" height="15.0" fill="rgb(248,206,10)" rx="2" ry="2" />
<text  x="40.52" y="255.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (2 samples, 0.29%)</title><rect x="625.8" y="1733" width="3.4" height="15.0" fill="rgb(206,71,49)" rx="2" ry="2" />
<text  x="628.80" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1285" width="72.2" height="15.0" fill="rgb(214,71,19)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" >[unknown]</text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (2 samples, 0.29%)</title><rect x="1040.3" y="1477" width="3.5" height="15.0" fill="rgb(252,29,13)" rx="2" ry="2" />
<text  x="1043.35" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="68.5" y="389" width="1.7" height="15.0" fill="rgb(254,23,13)" rx="2" ry="2" />
<text  x="71.48" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1413" width="1.7" height="15.0" fill="rgb(206,107,22)" rx="2" ry="2" />
<text  x="105.89" y="1423.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.15%)</title><rect x="114.9" y="1573" width="1.7" height="15.0" fill="rgb(242,125,16)" rx="2" ry="2" />
<text  x="117.93" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="754.8" y="1669" width="1.7" height="15.0" fill="rgb(233,152,42)" rx="2" ry="2" />
<text  x="757.81" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1573" width="74.0" height="15.0" fill="rgb(212,82,10)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" >[unknown]</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (5 samples, 0.73%)</title><rect x="49.6" y="341" width="8.6" height="15.0" fill="rgb(243,21,33)" rx="2" ry="2" />
<text  x="52.56" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="78.8" y="357" width="1.7" height="15.0" fill="rgb(211,37,29)" rx="2" ry="2" />
<text  x="81.80" y="367.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.44%)</title><rect x="441.7" y="1621" width="5.2" height="15.0" fill="rgb(207,143,38)" rx="2" ry="2" />
<text  x="444.75" y="1631.5" ></text>
</g>
<g >
<title>do_cql_test (4 samples, 0.58%)</title><rect x="65.0" y="613" width="6.9" height="15.0" fill="rgb(214,10,49)" rx="2" ry="2" />
<text  x="68.04" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="41.0" y="325" width="1.7" height="15.0" fill="rgb(245,156,19)" rx="2" ry="2" />
<text  x="43.96" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;4ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1205" width="1.7" height="15.0" fill="rgb(230,7,47)" rx="2" ry="2" />
<text  x="105.89" y="1215.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (1 samples, 0.15%)</title><rect x="620.6" y="1717" width="1.8" height="15.0" fill="rgb(236,118,39)" rx="2" ry="2" />
<text  x="623.64" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1141" width="1.7" height="15.0" fill="rgb(231,191,52)" rx="2" ry="2" />
<text  x="105.89" y="1151.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="65.0" y="245" width="1.8" height="15.0" fill="rgb(235,51,5)" rx="2" ry="2" />
<text  x="68.04" y="255.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (2 samples, 0.29%)</title><rect x="588.0" y="1749" width="3.4" height="15.0" fill="rgb(247,190,12)" rx="2" ry="2" />
<text  x="590.96" y="1759.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="372.9" y="1653" width="1.8" height="15.0" fill="rgb(205,143,8)" rx="2" ry="2" />
<text  x="375.94" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="113.2" y="1557" width="1.7" height="15.0" fill="rgb(237,21,31)" rx="2" ry="2" />
<text  x="116.21" y="1567.5" ></text>
</g>
<g >
<title>table::make_reader (57 samples, 8.31%)</title><rect x="474.4" y="1669" width="98.1" height="15.0" fill="rgb(235,7,13)" rx="2" ry="2" />
<text  x="477.43" y="1679.5" >table::make..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.15%)</title><rect x="445.2" y="1605" width="1.7" height="15.0" fill="rgb(233,188,52)" rx="2" ry="2" />
<text  x="448.19" y="1615.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.15%)</title><rect x="127.0" y="1653" width="1.7" height="15.0" fill="rgb(252,106,20)" rx="2" ry="2" />
<text  x="129.97" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="106.3" y="1413" width="1.7" height="15.0" fill="rgb(240,12,34)" rx="2" ry="2" />
<text  x="109.33" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1093" width="72.2" height="15.0" fill="rgb(254,26,12)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1189" width="72.2" height="15.0" fill="rgb(231,181,21)" rx="2" ry="2" />
<text  x="13.00" y="1199.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (5 samples, 0.73%)</title><rect x="801.3" y="1589" width="8.6" height="15.0" fill="rgb(247,44,37)" rx="2" ry="2" />
<text  x="804.25" y="1599.5" ></text>
</g>
<g >
<title>cql3::cf_name::set_column_family (1 samples, 0.15%)</title><rect x="39.2" y="405" width="1.8" height="15.0" fill="rgb(244,213,3)" rx="2" ry="2" />
<text  x="42.24" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.15%)</title><rect x="1093.7" y="1781" width="1.7" height="15.0" fill="rgb(246,71,24)" rx="2" ry="2" />
<text  x="1096.67" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.15%)</title><rect x="80.5" y="693" width="1.7" height="15.0" fill="rgb(207,199,28)" rx="2" ry="2" />
<text  x="83.52" y="703.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.73%)</title><rect x="1040.3" y="1685" width="8.7" height="15.0" fill="rgb(229,92,42)" rx="2" ry="2" />
<text  x="1043.35" y="1695.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.29%)</title><rect x="171.7" y="1701" width="3.4" height="15.0" fill="rgb(254,179,52)" rx="2" ry="2" />
<text  x="174.69" y="1711.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (3 samples, 0.44%)</title><rect x="919.9" y="1477" width="5.2" height="15.0" fill="rgb(211,104,0)" rx="2" ry="2" />
<text  x="922.94" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1589" width="74.0" height="15.0" fill="rgb(209,64,31)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1717" width="74.0" height="15.0" fill="rgb(210,180,15)" rx="2" ry="2" />
<text  x="13.00" y="1727.5" >[unknown]</text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::update_statement*, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.15%)</title><rect x="75.4" y="437" width="1.7" height="15.0" fill="rgb(248,10,31)" rx="2" ry="2" />
<text  x="78.36" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (4 samples, 0.58%)</title><rect x="591.4" y="1749" width="6.9" height="15.0" fill="rgb(206,119,27)" rx="2" ry="2" />
<text  x="594.40" y="1759.5" ></text>
</g>
<g >
<title>memset (1 samples, 0.15%)</title><rect x="1097.1" y="1861" width="1.7" height="15.0" fill="rgb(225,73,14)" rx="2" ry="2" />
<text  x="1100.11" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (2 samples, 0.29%)</title><rect x="66.8" y="453" width="3.4" height="15.0" fill="rgb(226,67,17)" rx="2" ry="2" />
<text  x="69.76" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.15%)</title><rect x="545.0" y="1589" width="1.7" height="15.0" fill="rgb(206,105,47)" rx="2" ry="2" />
<text  x="547.96" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="41.0" y="341" width="1.7" height="15.0" fill="rgb(241,130,22)" rx="2" ry="2" />
<text  x="43.96" y="351.5" ></text>
</g>
<g >
<title>[unknown] (36 samples, 5.25%)</title><rect x="10.0" y="693" width="61.9" height="15.0" fill="rgb(230,14,52)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >[unkno..</text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1317" width="74.0" height="15.0" fill="rgb(224,11,14)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" >[unknown]</text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (61 samples, 8.89%)</title><rect x="228.5" y="1669" width="104.9" height="15.0" fill="rgb(229,78,54)" rx="2" ry="2" />
<text  x="231.45" y="1679.5" >merging_read..</text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (5 samples, 0.73%)</title><rect x="145.9" y="1733" width="8.6" height="15.0" fill="rgb(251,24,20)" rx="2" ry="2" />
<text  x="148.89" y="1743.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="106.3" y="1333" width="1.7" height="15.0" fill="rgb(212,214,54)" rx="2" ry="2" />
<text  x="109.33" y="1343.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.58%)</title><rect x="1033.5" y="1701" width="6.8" height="15.0" fill="rgb(218,50,36)" rx="2" ry="2" />
<text  x="1036.47" y="1711.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (3 samples, 0.44%)</title><rect x="73.6" y="533" width="5.2" height="15.0" fill="rgb(214,120,13)" rx="2" ry="2" />
<text  x="76.64" y="543.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (1 samples, 0.15%)</title><rect x="87.4" y="1637" width="1.7" height="15.0" fill="rgb(217,175,49)" rx="2" ry="2" />
<text  x="90.41" y="1647.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.29%)</title><rect x="319.6" y="1573" width="3.5" height="15.0" fill="rgb(226,133,27)" rx="2" ry="2" />
<text  x="322.62" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (32 samples, 4.66%)</title><rect x="10.0" y="613" width="55.0" height="15.0" fill="rgb(215,154,25)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >std::..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.15%)</title><rect x="51.3" y="245" width="1.7" height="15.0" fill="rgb(238,102,25)" rx="2" ry="2" />
<text  x="54.28" y="255.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (3 samples, 0.44%)</title><rect x="311.0" y="1493" width="5.2" height="15.0" fill="rgb(213,33,10)" rx="2" ry="2" />
<text  x="314.02" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="87.4" y="1509" width="1.7" height="15.0" fill="rgb(224,182,21)" rx="2" ry="2" />
<text  x="90.41" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="828.8" y="1637" width="1.7" height="15.0" fill="rgb(244,108,3)" rx="2" ry="2" />
<text  x="831.78" y="1647.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (16 samples, 2.33%)</title><rect x="527.8" y="1637" width="27.5" height="15.0" fill="rgb(242,216,1)" rx="2" ry="2" />
<text  x="530.76" y="1647.5" >m..</text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.15%)</title><rect x="763.4" y="1669" width="1.7" height="15.0" fill="rgb(228,15,34)" rx="2" ry="2" />
<text  x="766.41" y="1679.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (9 samples, 1.31%)</title><rect x="440.0" y="1669" width="15.5" height="15.0" fill="rgb(236,149,24)" rx="2" ry="2" />
<text  x="443.03" y="1679.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.15%)</title><rect x="61.6" y="549" width="1.7" height="15.0" fill="rgb(246,147,13)" rx="2" ry="2" />
<text  x="64.60" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.15%)</title><rect x="646.4" y="1717" width="1.8" height="15.0" fill="rgb(253,174,36)" rx="2" ry="2" />
<text  x="649.44" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (5 samples, 0.73%)</title><rect x="801.3" y="1573" width="8.6" height="15.0" fill="rgb(218,109,20)" rx="2" ry="2" />
<text  x="804.25" y="1583.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (60 samples, 8.75%)</title><rect x="230.2" y="1653" width="103.2" height="15.0" fill="rgb(217,162,22)" rx="2" ry="2" />
<text  x="233.17" y="1663.5" >merging_read..</text>
</g>
<g >
<title>flush_reader::fill_buffer (2 samples, 0.29%)</title><rect x="125.2" y="1813" width="3.5" height="15.0" fill="rgb(236,67,26)" rx="2" ry="2" />
<text  x="128.25" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.15%)</title><rect x="173.4" y="1685" width="1.7" height="15.0" fill="rgb(233,129,38)" rx="2" ry="2" />
<text  x="176.41" y="1695.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.15%)</title><rect x="768.6" y="1573" width="1.7" height="15.0" fill="rgb(229,25,18)" rx="2" ry="2" />
<text  x="771.57" y="1583.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt;::~allocator (1 samples, 0.15%)</title><rect x="73.6" y="437" width="1.8" height="15.0" fill="rgb(233,164,54)" rx="2" ry="2" />
<text  x="76.64" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="102.9" y="1493" width="1.7" height="15.0" fill="rgb(239,145,34)" rx="2" ry="2" />
<text  x="105.89" y="1503.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.15%)</title><rect x="118.4" y="1829" width="1.7" height="15.0" fill="rgb(240,76,11)" rx="2" ry="2" />
<text  x="121.37" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="42.7" y="309" width="1.7" height="15.0" fill="rgb(228,29,39)" rx="2" ry="2" />
<text  x="45.68" y="319.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.15%)</title><rect x="80.5" y="661" width="1.7" height="15.0" fill="rgb(240,152,50)" rx="2" ry="2" />
<text  x="83.52" y="671.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (5 samples, 0.73%)</title><rect x="455.5" y="1669" width="8.6" height="15.0" fill="rgb(213,27,35)" rx="2" ry="2" />
<text  x="458.51" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.15%)</title><rect x="526.0" y="1621" width="1.8" height="15.0" fill="rgb(225,141,39)" rx="2" ry="2" />
<text  x="529.03" y="1631.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="1045.5" y="1573" width="1.7" height="15.0" fill="rgb(233,93,52)" rx="2" ry="2" />
<text  x="1048.51" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (1 samples, 0.15%)</title><rect x="70.2" y="437" width="1.7" height="15.0" fill="rgb(252,40,41)" rx="2" ry="2" />
<text  x="73.20" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (14 samples, 2.04%)</title><rect x="94.3" y="1637" width="24.1" height="15.0" fill="rgb(223,119,51)" rx="2" ry="2" />
<text  x="97.29" y="1647.5" >c..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="42.7" y="229" width="1.7" height="15.0" fill="rgb(253,5,52)" rx="2" ry="2" />
<text  x="45.68" y="239.5" ></text>
</g>
<g >
<title>abstract_type::is_collection (1 samples, 0.15%)</title><rect x="85.7" y="1621" width="1.7" height="15.0" fill="rgb(207,35,49)" rx="2" ry="2" />
<text  x="88.69" y="1631.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (560 samples, 81.63%)</title><rect x="132.1" y="1813" width="963.3" height="15.0" fill="rgb(229,220,41)" rx="2" ry="2" />
<text  x="135.13" y="1823.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.15%)</title><rect x="889.0" y="1541" width="1.7" height="15.0" fill="rgb(230,78,52)" rx="2" ry="2" />
<text  x="891.98" y="1551.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (44 samples, 6.41%)</title><rect x="488.2" y="1653" width="75.7" height="15.0" fill="rgb(244,70,34)" rx="2" ry="2" />
<text  x="491.19" y="1663.5" >memtable..</text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="821" width="72.2" height="15.0" fill="rgb(228,199,15)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="70.2" y="277" width="1.7" height="15.0" fill="rgb(237,139,46)" rx="2" ry="2" />
<text  x="73.20" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="207.8" y="1685" width="5.2" height="15.0" fill="rgb(211,61,23)" rx="2" ry="2" />
<text  x="210.81" y="1695.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (11 samples, 1.60%)</title><rect x="656.8" y="1733" width="18.9" height="15.0" fill="rgb(207,29,14)" rx="2" ry="2" />
<text  x="659.76" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.15%)</title><rect x="70.2" y="197" width="1.7" height="15.0" fill="rgb(231,211,7)" rx="2" ry="2" />
<text  x="73.20" y="207.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (4 samples, 0.58%)</title><rect x="65.0" y="533" width="6.9" height="15.0" fill="rgb(230,15,6)" rx="2" ry="2" />
<text  x="68.04" y="543.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.15%)</title><rect x="524.3" y="1637" width="1.7" height="15.0" fill="rgb(236,192,5)" rx="2" ry="2" />
<text  x="527.31" y="1647.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (2 samples, 0.29%)</title><rect x="1081.6" y="1733" width="3.5" height="15.0" fill="rgb(228,41,8)" rx="2" ry="2" />
<text  x="1084.63" y="1743.5" ></text>
</g>
<g >
<title>validation::validate_column_family (2 samples, 0.29%)</title><rect x="749.7" y="1653" width="3.4" height="15.0" fill="rgb(237,127,46)" rx="2" ry="2" />
<text  x="752.65" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.58%)</title><rect x="125.2" y="1829" width="6.9" height="15.0" fill="rgb(237,76,11)" rx="2" ry="2" />
<text  x="128.25" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="65.0" y="389" width="1.8" height="15.0" fill="rgb(251,204,22)" rx="2" ry="2" />
<text  x="68.04" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.15%)</title><rect x="22.0" y="293" width="1.8" height="15.0" fill="rgb(230,137,10)" rx="2" ry="2" />
<text  x="25.04" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="331.7" y="1621" width="1.7" height="15.0" fill="rgb(219,21,31)" rx="2" ry="2" />
<text  x="334.66" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.15%)</title><rect x="921.7" y="1461" width="1.7" height="15.0" fill="rgb(235,123,2)" rx="2" ry="2" />
<text  x="924.66" y="1471.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (59 samples, 8.60%)</title><rect x="471.0" y="1685" width="101.5" height="15.0" fill="rgb(238,117,32)" rx="2" ry="2" />
<text  x="473.99" y="1695.5" >std::_Functi..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (1 samples, 0.15%)</title><rect x="355.7" y="1653" width="1.8" height="15.0" fill="rgb(210,203,18)" rx="2" ry="2" />
<text  x="358.74" y="1663.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.15%)</title><rect x="71.9" y="485" width="1.7" height="15.0" fill="rgb(228,116,21)" rx="2" ry="2" />
<text  x="74.92" y="495.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="82.2" y="1029" width="1.8" height="15.0" fill="rgb(232,29,4)" rx="2" ry="2" />
<text  x="85.24" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.15%)</title><rect x="596.6" y="1701" width="1.7" height="15.0" fill="rgb(224,22,50)" rx="2" ry="2" />
<text  x="599.56" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="106.3" y="1445" width="1.7" height="15.0" fill="rgb(235,132,30)" rx="2" ry="2" />
<text  x="109.33" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="839.1" y="1637" width="1.7" height="15.0" fill="rgb(243,199,42)" rx="2" ry="2" />
<text  x="842.10" y="1647.5" ></text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.15%)</title><rect x="1093.7" y="1797" width="1.7" height="15.0" fill="rgb(220,195,23)" rx="2" ry="2" />
<text  x="1096.67" y="1807.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="615.5" y="1733" width="3.4" height="15.0" fill="rgb(215,70,4)" rx="2" ry="2" />
<text  x="618.48" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="70.2" y="261" width="1.7" height="15.0" fill="rgb(210,140,26)" rx="2" ry="2" />
<text  x="73.20" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="56.4" y="213" width="1.8" height="15.0" fill="rgb(210,31,37)" rx="2" ry="2" />
<text  x="59.44" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.15%)</title><rect x="56.4" y="117" width="1.8" height="15.0" fill="rgb(241,193,8)" rx="2" ry="2" />
<text  x="59.44" y="127.5" ></text>
</g>
<g >
<title>seastar::app_template::run (560 samples, 81.63%)</title><rect x="132.1" y="1829" width="963.3" height="15.0" fill="rgb(229,192,24)" rx="2" ry="2" />
<text  x="135.13" y="1839.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="82.2" y="853" width="1.8" height="15.0" fill="rgb(234,95,28)" rx="2" ry="2" />
<text  x="85.24" y="863.5" ></text>
</g>
<g >
<title>make_combined_reader (6 samples, 0.87%)</title><rect x="477.9" y="1653" width="10.3" height="15.0" fill="rgb(230,159,47)" rx="2" ry="2" />
<text  x="480.87" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.15%)</title><rect x="78.8" y="453" width="1.7" height="15.0" fill="rgb(239,183,24)" rx="2" ry="2" />
<text  x="81.80" y="463.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (6 samples, 0.87%)</title><rect x="816.7" y="1637" width="10.4" height="15.0" fill="rgb(206,23,0)" rx="2" ry="2" />
<text  x="819.73" y="1647.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (4 samples, 0.58%)</title><rect x="1009.4" y="1653" width="6.9" height="15.0" fill="rgb(227,16,28)" rx="2" ry="2" />
<text  x="1012.39" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.29%)</title><rect x="1030.0" y="1669" width="3.5" height="15.0" fill="rgb(253,23,53)" rx="2" ry="2" />
<text  x="1033.03" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="1007.7" y="1621" width="1.7" height="15.0" fill="rgb(212,50,0)" rx="2" ry="2" />
<text  x="1010.67" y="1631.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.44%)</title><rect x="1109.2" y="1861" width="5.1" height="15.0" fill="rgb(220,161,12)" rx="2" ry="2" />
<text  x="1112.15" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="42.7" y="341" width="1.7" height="15.0" fill="rgb(235,176,35)" rx="2" ry="2" />
<text  x="45.68" y="351.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.15%)</title><rect x="928.5" y="1525" width="1.8" height="15.0" fill="rgb(215,103,15)" rx="2" ry="2" />
<text  x="931.54" y="1535.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (41 samples, 5.98%)</title><rect x="866.6" y="1605" width="70.5" height="15.0" fill="rgb(240,100,42)" rx="2" ry="2" />
<text  x="869.62" y="1615.5" >service..</text>
</g>
<g >
<title>cql3::raw_value::make_value (2 samples, 0.29%)</title><rect x="806.4" y="1557" width="3.5" height="15.0" fill="rgb(254,4,19)" rx="2" ry="2" />
<text  x="809.41" y="1567.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (36 samples, 5.25%)</title><rect x="1128.1" y="1877" width="61.9" height="15.0" fill="rgb(205,45,40)" rx="2" ry="2" />
<text  x="1131.08" y="1887.5" >sched_..</text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.15%)</title><rect x="127.0" y="1621" width="1.7" height="15.0" fill="rgb(244,80,7)" rx="2" ry="2" />
<text  x="129.97" y="1631.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (4 samples, 0.58%)</title><rect x="71.9" y="565" width="6.9" height="15.0" fill="rgb(237,56,22)" rx="2" ry="2" />
<text  x="74.92" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (14 samples, 2.04%)</title><rect x="13.4" y="421" width="24.1" height="15.0" fill="rgb(209,155,48)" rx="2" ry="2" />
<text  x="16.44" y="431.5" >a..</text>
</g>
<g >
<title>[[vdso]] (2 samples, 0.29%)</title><rect x="1105.7" y="1861" width="3.5" height="15.0" fill="rgb(243,93,38)" rx="2" ry="2" />
<text  x="1108.71" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1365" width="74.0" height="15.0" fill="rgb(210,37,53)" rx="2" ry="2" />
<text  x="13.00" y="1375.5" >[unknown]</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (5 samples, 0.73%)</title><rect x="84.0" y="1781" width="8.6" height="15.0" fill="rgb(217,171,47)" rx="2" ry="2" />
<text  x="86.97" y="1791.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="87.4" y="1525" width="1.7" height="15.0" fill="rgb(208,144,16)" rx="2" ry="2" />
<text  x="90.41" y="1535.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_some (1 samples, 0.15%)</title><rect x="1050.7" y="1573" width="1.7" height="15.0" fill="rgb(226,220,43)" rx="2" ry="2" />
<text  x="1053.67" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::modification_statement (1 samples, 0.15%)</title><rect x="71.9" y="501" width="1.7" height="15.0" fill="rgb(221,47,25)" rx="2" ry="2" />
<text  x="74.92" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="37.5" y="309" width="1.7" height="15.0" fill="rgb(239,46,27)" rx="2" ry="2" />
<text  x="40.52" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="326.5" y="1557" width="1.7" height="15.0" fill="rgb(214,113,31)" rx="2" ry="2" />
<text  x="329.50" y="1567.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::raw::batch_statement*, false&gt;::_Head_base (1 samples, 0.15%)</title><rect x="58.2" y="389" width="1.7" height="15.0" fill="rgb(217,123,37)" rx="2" ry="2" />
<text  x="61.16" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (2 samples, 0.29%)</title><rect x="85.7" y="1653" width="3.4" height="15.0" fill="rgb(247,115,17)" rx="2" ry="2" />
<text  x="88.69" y="1663.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (1 samples, 0.15%)</title><rect x="128.7" y="1781" width="1.7" height="15.0" fill="rgb(236,176,30)" rx="2" ry="2" />
<text  x="131.69" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.15%)</title><rect x="610.3" y="1685" width="1.7" height="15.0" fill="rgb(248,107,0)" rx="2" ry="2" />
<text  x="613.32" y="1695.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="109.8" y="1525" width="1.7" height="15.0" fill="rgb(252,194,6)" rx="2" ry="2" />
<text  x="112.77" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="37.5" y="261" width="1.7" height="15.0" fill="rgb(217,104,52)" rx="2" ry="2" />
<text  x="40.52" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="53.0" y="133" width="1.7" height="15.0" fill="rgb(215,179,28)" rx="2" ry="2" />
<text  x="56.00" y="143.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.15%)</title><rect x="768.6" y="1589" width="1.7" height="15.0" fill="rgb(227,48,13)" rx="2" ry="2" />
<text  x="771.57" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.44%)</title><rect x="96.0" y="1541" width="5.2" height="15.0" fill="rgb(230,35,1)" rx="2" ry="2" />
<text  x="99.01" y="1551.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (29 samples, 4.23%)</title><rect x="13.4" y="565" width="49.9" height="15.0" fill="rgb(233,218,15)" rx="2" ry="2" />
<text  x="16.44" y="575.5" >singl..</text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.15%)</title><rect x="316.2" y="1557" width="1.7" height="15.0" fill="rgb(231,27,7)" rx="2" ry="2" />
<text  x="319.18" y="1567.5" ></text>
</g>
<g >
<title>database::apply_in_memory (3 samples, 0.44%)</title><rect x="1033.5" y="1653" width="5.1" height="15.0" fill="rgb(228,76,17)" rx="2" ry="2" />
<text  x="1036.47" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="758.3" y="1701" width="1.7" height="15.0" fill="rgb(216,83,54)" rx="2" ry="2" />
<text  x="761.25" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.44%)</title><rect x="890.7" y="1525" width="5.2" height="15.0" fill="rgb(214,198,39)" rx="2" ry="2" />
<text  x="893.70" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.15%)</title><rect x="102.9" y="1445" width="1.7" height="15.0" fill="rgb(224,134,10)" rx="2" ry="2" />
<text  x="105.89" y="1455.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.15%)</title><rect x="768.6" y="1557" width="1.7" height="15.0" fill="rgb(211,95,0)" rx="2" ry="2" />
<text  x="771.57" y="1567.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.15%)</title><rect x="80.5" y="741" width="1.7" height="15.0" fill="rgb(244,172,4)" rx="2" ry="2" />
<text  x="83.52" y="751.5" ></text>
</g>
<g >
<title>__start_context (4 samples, 0.58%)</title><rect x="71.9" y="693" width="6.9" height="15.0" fill="rgb(230,216,1)" rx="2" ry="2" />
<text  x="74.92" y="703.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (5 samples, 0.73%)</title><rect x="1040.3" y="1605" width="8.7" height="15.0" fill="rgb(216,171,14)" rx="2" ry="2" />
<text  x="1043.35" y="1615.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.15%)</title><rect x="82.2" y="1157" width="1.8" height="15.0" fill="rgb(223,123,29)" rx="2" ry="2" />
<text  x="85.24" y="1167.5" ></text>
</g>
<g >
<title>row_cache::make_reader (4 samples, 0.58%)</title><rect x="563.9" y="1653" width="6.9" height="15.0" fill="rgb(236,153,53)" rx="2" ry="2" />
<text  x="566.88" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.15%)</title><rect x="56.4" y="165" width="1.8" height="15.0" fill="rgb(205,83,36)" rx="2" ry="2" />
<text  x="59.44" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="56.4" y="261" width="1.8" height="15.0" fill="rgb(247,189,23)" rx="2" ry="2" />
<text  x="59.44" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (8 samples, 1.17%)</title><rect x="96.0" y="1557" width="13.8" height="15.0" fill="rgb(236,173,40)" rx="2" ry="2" />
<text  x="99.01" y="1567.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.29%)</title><rect x="744.5" y="1589" width="3.4" height="15.0" fill="rgb(225,52,9)" rx="2" ry="2" />
<text  x="747.49" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="106.3" y="1429" width="1.7" height="15.0" fill="rgb(247,124,21)" rx="2" ry="2" />
<text  x="109.33" y="1439.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (32 samples, 4.66%)</title><rect x="10.0" y="645" width="55.0" height="15.0" fill="rgb(243,13,45)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >seast..</text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1749" width="74.0" height="15.0" fill="rgb(246,93,17)" rx="2" ry="2" />
<text  x="13.00" y="1759.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.15%)</title><rect x="53.0" y="181" width="1.7" height="15.0" fill="rgb(211,39,29)" rx="2" ry="2" />
<text  x="56.00" y="191.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.15%)</title><rect x="80.5" y="725" width="1.7" height="15.0" fill="rgb(208,200,21)" rx="2" ry="2" />
<text  x="83.52" y="735.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1557" width="74.0" height="15.0" fill="rgb(210,13,35)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" >[unknown]</text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="839.1" y="1653" width="1.7" height="15.0" fill="rgb(247,31,47)" rx="2" ry="2" />
<text  x="842.10" y="1663.5" ></text>
</g>
<g >
<title>partition_entry::read (2 samples, 0.29%)</title><rect x="558.7" y="1637" width="3.5" height="15.0" fill="rgb(229,47,37)" rx="2" ry="2" />
<text  x="561.72" y="1647.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.15%)</title><rect x="82.2" y="1189" width="1.8" height="15.0" fill="rgb(239,227,45)" rx="2" ry="2" />
<text  x="85.24" y="1199.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (1 samples, 0.15%)</title><rect x="1050.7" y="1589" width="1.7" height="15.0" fill="rgb(233,173,7)" rx="2" ry="2" />
<text  x="1053.67" y="1599.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.15%)</title><rect x="68.5" y="325" width="1.7" height="15.0" fill="rgb(253,212,53)" rx="2" ry="2" />
<text  x="71.48" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.15%)</title><rect x="71.9" y="549" width="1.7" height="15.0" fill="rgb(213,38,29)" rx="2" ry="2" />
<text  x="74.92" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.15%)</title><rect x="53.0" y="101" width="1.7" height="15.0" fill="rgb(233,210,44)" rx="2" ry="2" />
<text  x="56.00" y="111.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (4 samples, 0.58%)</title><rect x="164.8" y="1701" width="6.9" height="15.0" fill="rgb(229,141,50)" rx="2" ry="2" />
<text  x="167.81" y="1711.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (19 samples, 2.77%)</title><rect x="1054.1" y="1749" width="32.7" height="15.0" fill="rgb(207,58,12)" rx="2" ry="2" />
<text  x="1057.11" y="1759.5" >se..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (12 samples, 1.75%)</title><rect x="415.9" y="1637" width="20.7" height="15.0" fill="rgb(225,44,1)" rx="2" ry="2" />
<text  x="418.95" y="1647.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (1 samples, 0.15%)</title><rect x="766.9" y="1637" width="1.7" height="15.0" fill="rgb(231,25,30)" rx="2" ry="2" />
<text  x="769.85" y="1647.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="65.0" y="229" width="1.8" height="15.0" fill="rgb(210,8,15)" rx="2" ry="2" />
<text  x="68.04" y="239.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (14 samples, 2.04%)</title><rect x="13.4" y="437" width="24.1" height="15.0" fill="rgb(215,93,10)" rx="2" ry="2" />
<text  x="16.44" y="447.5" >a..</text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.15%)</title><rect x="753.1" y="1653" width="1.7" height="15.0" fill="rgb(249,11,17)" rx="2" ry="2" />
<text  x="756.09" y="1663.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.44%)</title><rect x="207.8" y="1701" width="5.2" height="15.0" fill="rgb(206,135,53)" rx="2" ry="2" />
<text  x="210.81" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1125" width="72.2" height="15.0" fill="rgb(235,103,31)" rx="2" ry="2" />
<text  x="13.00" y="1135.5" >[unknown]</text>
</g>
<g >
<title>auth::get_permissions (1 samples, 0.15%)</title><rect x="90.8" y="1637" width="1.8" height="15.0" fill="rgb(217,153,42)" rx="2" ry="2" />
<text  x="93.85" y="1647.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="739.3" y="1589" width="1.7" height="15.0" fill="rgb(211,49,50)" rx="2" ry="2" />
<text  x="742.33" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.15%)</title><rect x="80.5" y="533" width="1.7" height="15.0" fill="rgb(222,212,0)" rx="2" ry="2" />
<text  x="83.52" y="543.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="699.8" y="1701" width="1.7" height="15.0" fill="rgb(224,74,17)" rx="2" ry="2" />
<text  x="702.77" y="1711.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (5 samples, 0.73%)</title><rect x="1040.3" y="1669" width="8.7" height="15.0" fill="rgb(230,175,49)" rx="2" ry="2" />
<text  x="1043.35" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.58%)</title><rect x="71.9" y="661" width="6.9" height="15.0" fill="rgb(215,147,16)" rx="2" ry="2" />
<text  x="74.92" y="671.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (1 samples, 0.15%)</title><rect x="87.4" y="1541" width="1.7" height="15.0" fill="rgb(222,189,6)" rx="2" ry="2" />
<text  x="90.41" y="1551.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (4 samples, 0.58%)</title><rect x="1040.3" y="1589" width="6.9" height="15.0" fill="rgb(228,53,44)" rx="2" ry="2" />
<text  x="1043.35" y="1599.5" ></text>
</g>
<g >
<title>all (686 samples, 100%)</title><rect x="10.0" y="1909" width="1180.0" height="15.0" fill="rgb(252,201,37)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.15%)</title><rect x="82.2" y="1285" width="1.8" height="15.0" fill="rgb(223,69,16)" rx="2" ry="2" />
<text  x="85.24" y="1295.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="42.7" y="325" width="1.7" height="15.0" fill="rgb(233,165,11)" rx="2" ry="2" />
<text  x="45.68" y="335.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="68.5" y="341" width="1.7" height="15.0" fill="rgb(210,48,12)" rx="2" ry="2" />
<text  x="71.48" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="82.2" y="1045" width="1.8" height="15.0" fill="rgb(240,160,6)" rx="2" ry="2" />
<text  x="85.24" y="1055.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.15%)</title><rect x="125.2" y="1717" width="1.8" height="15.0" fill="rgb(219,51,45)" rx="2" ry="2" />
<text  x="128.25" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (49 samples, 7.14%)</title><rect x="677.4" y="1749" width="84.3" height="15.0" fill="rgb(250,189,30)" rx="2" ry="2" />
<text  x="680.41" y="1759.5" >seastar::..</text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1221" width="72.2" height="15.0" fill="rgb(249,180,49)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="65.0" y="293" width="1.8" height="15.0" fill="rgb(215,87,50)" rx="2" ry="2" />
<text  x="68.04" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="65.0" y="357" width="1.8" height="15.0" fill="rgb(219,20,18)" rx="2" ry="2" />
<text  x="68.04" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.15%)</title><rect x="71.9" y="533" width="1.7" height="15.0" fill="rgb(217,175,19)" rx="2" ry="2" />
<text  x="74.92" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.29%)</title><rect x="612.0" y="1717" width="3.5" height="15.0" fill="rgb(233,215,24)" rx="2" ry="2" />
<text  x="615.04" y="1727.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.15%)</title><rect x="1095.4" y="1877" width="1.7" height="15.0" fill="rgb(222,204,6)" rx="2" ry="2" />
<text  x="1098.39" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1733" width="74.0" height="15.0" fill="rgb(229,139,30)" rx="2" ry="2" />
<text  x="13.00" y="1743.5" >[unknown]</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="70.2" y="389" width="1.7" height="15.0" fill="rgb(235,105,4)" rx="2" ry="2" />
<text  x="73.20" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (3 samples, 0.44%)</title><rect x="546.7" y="1605" width="5.1" height="15.0" fill="rgb(205,21,9)" rx="2" ry="2" />
<text  x="549.68" y="1615.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.15%)</title><rect x="84.0" y="1701" width="1.7" height="15.0" fill="rgb(219,190,5)" rx="2" ry="2" />
<text  x="86.97" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1077" width="72.2" height="15.0" fill="rgb(224,90,51)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" >[unknown]</text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="1007.7" y="1637" width="1.7" height="15.0" fill="rgb(236,30,44)" rx="2" ry="2" />
<text  x="1010.67" y="1647.5" ></text>
</g>
<g >
<title>do_cql_test (14 samples, 2.04%)</title><rect x="94.3" y="1781" width="24.1" height="15.0" fill="rgb(216,89,24)" rx="2" ry="2" />
<text  x="97.29" y="1791.5" >d..</text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="37.5" y="277" width="1.7" height="15.0" fill="rgb(215,213,36)" rx="2" ry="2" />
<text  x="40.52" y="287.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (2 samples, 0.29%)</title><rect x="823.6" y="1621" width="3.5" height="15.0" fill="rgb(241,68,27)" rx="2" ry="2" />
<text  x="826.62" y="1631.5" ></text>
</g>
<g >
<title>create_partitions (4 samples, 0.58%)</title><rect x="71.9" y="613" width="6.9" height="15.0" fill="rgb(252,140,17)" rx="2" ry="2" />
<text  x="74.92" y="623.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.15%)</title><rect x="343.7" y="1669" width="1.7" height="15.0" fill="rgb(220,190,4)" rx="2" ry="2" />
<text  x="346.70" y="1679.5" ></text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::allocator (1 samples, 0.15%)</title><rect x="70.2" y="165" width="1.7" height="15.0" fill="rgb(220,199,15)" rx="2" ry="2" />
<text  x="73.20" y="175.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="837" width="72.2" height="15.0" fill="rgb(208,8,20)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >[unknown]</text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.15%)</title><rect x="82.2" y="1173" width="1.8" height="15.0" fill="rgb(223,116,42)" rx="2" ry="2" />
<text  x="85.24" y="1183.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (18 samples, 2.62%)</title><rect x="722.1" y="1669" width="31.0" height="15.0" fill="rgb(225,130,38)" rx="2" ry="2" />
<text  x="725.13" y="1679.5" >se..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.15%)</title><rect x="102.9" y="1461" width="1.7" height="15.0" fill="rgb(214,79,53)" rx="2" ry="2" />
<text  x="105.89" y="1471.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="41.0" y="213" width="1.7" height="15.0" fill="rgb(219,65,21)" rx="2" ry="2" />
<text  x="43.96" y="223.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.15%)</title><rect x="70.2" y="373" width="1.7" height="15.0" fill="rgb(209,212,39)" rx="2" ry="2" />
<text  x="73.20" y="383.5" ></text>
</g>
<g >
<title>query_result_builder::consume (20 samples, 2.92%)</title><rect x="374.7" y="1653" width="34.4" height="15.0" fill="rgb(232,96,39)" rx="2" ry="2" />
<text  x="377.66" y="1663.5" >qu..</text>
</g>
<g >
<title>database::apply_with_commitlog (3 samples, 0.44%)</title><rect x="1033.5" y="1669" width="5.1" height="15.0" fill="rgb(213,86,52)" rx="2" ry="2" />
<text  x="1036.47" y="1679.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (5 samples, 0.73%)</title><rect x="622.4" y="1749" width="8.6" height="15.0" fill="rgb(215,118,2)" rx="2" ry="2" />
<text  x="625.36" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="981" width="72.2" height="15.0" fill="rgb(234,109,52)" rx="2" ry="2" />
<text  x="13.00" y="991.5" >[unknown]</text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.15%)</title><rect x="452.1" y="1621" width="1.7" height="15.0" fill="rgb(243,49,3)" rx="2" ry="2" />
<text  x="455.07" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.15%)</title><rect x="102.9" y="1365" width="1.7" height="15.0" fill="rgb(220,185,31)" rx="2" ry="2" />
<text  x="105.89" y="1375.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (1 samples, 0.15%)</title><rect x="966.4" y="1589" width="1.7" height="15.0" fill="rgb(238,66,27)" rx="2" ry="2" />
<text  x="969.38" y="1599.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.15%)</title><rect x="82.2" y="1237" width="1.8" height="15.0" fill="rgb(207,1,13)" rx="2" ry="2" />
<text  x="85.24" y="1247.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.15%)</title><rect x="92.6" y="1733" width="1.7" height="15.0" fill="rgb(245,155,54)" rx="2" ry="2" />
<text  x="95.57" y="1743.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (5 samples, 0.73%)</title><rect x="84.0" y="1717" width="8.6" height="15.0" fill="rgb(218,35,44)" rx="2" ry="2" />
<text  x="86.97" y="1727.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (6 samples, 0.87%)</title><rect x="684.3" y="1717" width="10.3" height="15.0" fill="rgb(236,60,20)" rx="2" ry="2" />
<text  x="687.29" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.83%)</title><rect x="10.0" y="725" width="68.8" height="15.0" fill="rgb(236,184,26)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >[unknown]</text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (244 samples, 35.57%)</title><rect x="156.2" y="1749" width="419.7" height="15.0" fill="rgb(229,107,19)" rx="2" ry="2" />
<text  x="159.21" y="1759.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="47.8" y="373" width="1.8" height="15.0" fill="rgb(205,10,46)" rx="2" ry="2" />
<text  x="50.84" y="383.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (1 samples, 0.15%)</title><rect x="34.1" y="309" width="1.7" height="15.0" fill="rgb(217,127,30)" rx="2" ry="2" />
<text  x="37.08" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.15%)</title><rect x="70.2" y="421" width="1.7" height="15.0" fill="rgb(205,18,28)" rx="2" ry="2" />
<text  x="73.20" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (2 samples, 0.29%)</title><rect x="89.1" y="1701" width="3.5" height="15.0" fill="rgb(242,91,0)" rx="2" ry="2" />
<text  x="92.13" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (1 samples, 0.15%)</title><rect x="70.2" y="453" width="1.7" height="15.0" fill="rgb(236,51,48)" rx="2" ry="2" />
<text  x="73.20" y="463.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (7 samples, 1.02%)</title><rect x="142.4" y="1749" width="12.1" height="15.0" fill="rgb(211,51,26)" rx="2" ry="2" />
<text  x="145.45" y="1759.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (2 samples, 0.29%)</title><rect x="125.2" y="1781" width="3.5" height="15.0" fill="rgb(231,39,53)" rx="2" ry="2" />
<text  x="128.25" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="82.2" y="1013" width="1.8" height="15.0" fill="rgb(250,79,23)" rx="2" ry="2" />
<text  x="85.24" y="1023.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.15%)</title><rect x="78.8" y="533" width="1.7" height="15.0" fill="rgb(250,162,30)" rx="2" ry="2" />
<text  x="81.80" y="543.5" ></text>
</g>
<g >
<title>row::row (13 samples, 1.90%)</title><rect x="293.8" y="1541" width="22.4" height="15.0" fill="rgb(248,73,18)" rx="2" ry="2" />
<text  x="296.82" y="1551.5" >r..</text>
</g>
<g >
<title>to_hex (1 samples, 0.15%)</title><rect x="63.3" y="565" width="1.7" height="15.0" fill="rgb(208,18,23)" rx="2" ry="2" />
<text  x="66.32" y="575.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (5 samples, 0.73%)</title><rect x="171.7" y="1717" width="8.6" height="15.0" fill="rgb(226,55,16)" rx="2" ry="2" />
<text  x="174.69" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (2 samples, 0.29%)</title><rect x="73.6" y="485" width="3.5" height="15.0" fill="rgb(229,33,23)" rx="2" ry="2" />
<text  x="76.64" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.15%)</title><rect x="80.5" y="549" width="1.7" height="15.0" fill="rgb(217,61,5)" rx="2" ry="2" />
<text  x="83.52" y="559.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (32 samples, 4.66%)</title><rect x="10.0" y="629" width="55.0" height="15.0" fill="rgb(247,37,25)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >seast..</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.15%)</title><rect x="114.9" y="1525" width="1.7" height="15.0" fill="rgb(247,52,0)" rx="2" ry="2" />
<text  x="117.93" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="109.8" y="1429" width="1.7" height="15.0" fill="rgb(220,182,14)" rx="2" ry="2" />
<text  x="112.77" y="1439.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.15%)</title><rect x="369.5" y="1621" width="1.7" height="15.0" fill="rgb(232,191,21)" rx="2" ry="2" />
<text  x="372.50" y="1631.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.15%)</title><rect x="80.5" y="629" width="1.7" height="15.0" fill="rgb(237,109,48)" rx="2" ry="2" />
<text  x="83.52" y="639.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.15%)</title><rect x="41.0" y="277" width="1.7" height="15.0" fill="rgb(252,14,31)" rx="2" ry="2" />
<text  x="43.96" y="287.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.15%)</title><rect x="82.2" y="1221" width="1.8" height="15.0" fill="rgb(229,187,48)" rx="2" ry="2" />
<text  x="85.24" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1397" width="74.0" height="15.0" fill="rgb(230,161,35)" rx="2" ry="2" />
<text  x="13.00" y="1407.5" >[unknown]</text>
</g>
<g >
<title>seastar::thread_context::main (5 samples, 0.73%)</title><rect x="84.0" y="1813" width="8.6" height="15.0" fill="rgb(221,1,5)" rx="2" ry="2" />
<text  x="86.97" y="1823.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (2 samples, 0.29%)</title><rect x="768.6" y="1637" width="3.4" height="15.0" fill="rgb(212,151,45)" rx="2" ry="2" />
<text  x="771.57" y="1647.5" ></text>
</g>
<g >
<title>database::do_apply (3 samples, 0.44%)</title><rect x="1033.5" y="1685" width="5.1" height="15.0" fill="rgb(252,210,1)" rx="2" ry="2" />
<text  x="1036.47" y="1695.5" ></text>
</g>
<g >
<title>schema_registry_entry::is_synced (1 samples, 0.15%)</title><rect x="1038.6" y="1685" width="1.7" height="15.0" fill="rgb(223,164,11)" rx="2" ry="2" />
<text  x="1041.63" y="1695.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.44%)</title><rect x="459.0" y="1653" width="5.1" height="15.0" fill="rgb(245,185,18)" rx="2" ry="2" />
<text  x="461.95" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="53.0" y="165" width="1.7" height="15.0" fill="rgb(233,184,8)" rx="2" ry="2" />
<text  x="56.00" y="175.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.15%)</title><rect x="935.4" y="1541" width="1.7" height="15.0" fill="rgb(250,95,49)" rx="2" ry="2" />
<text  x="938.42" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1461" width="74.0" height="15.0" fill="rgb(243,137,13)" rx="2" ry="2" />
<text  x="13.00" y="1471.5" >[unknown]</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_type_statement, std::default_delete&lt;cql3::statements::drop_type_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::drop_type_statement&gt;, void&gt; (1 samples, 0.15%)</title><rect x="59.9" y="469" width="1.7" height="15.0" fill="rgb(240,12,4)" rx="2" ry="2" />
<text  x="62.88" y="479.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.15%)</title><rect x="102.9" y="1525" width="1.7" height="15.0" fill="rgb(249,53,25)" rx="2" ry="2" />
<text  x="105.89" y="1535.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.15%)</title><rect x="317.9" y="1557" width="1.7" height="15.0" fill="rgb(248,226,40)" rx="2" ry="2" />
<text  x="320.90" y="1567.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.15%)</title><rect x="104.6" y="1493" width="1.7" height="15.0" fill="rgb(205,190,17)" rx="2" ry="2" />
<text  x="107.61" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (12 samples, 1.75%)</title><rect x="16.9" y="357" width="20.6" height="15.0" fill="rgb(223,76,21)" rx="2" ry="2" />
<text  x="19.88" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (12 samples, 1.75%)</title><rect x="16.9" y="389" width="20.6" height="15.0" fill="rgb(228,19,38)" rx="2" ry="2" />
<text  x="19.88" y="399.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (1 samples, 0.15%)</title><rect x="765.1" y="1621" width="1.8" height="15.0" fill="rgb(217,36,12)" rx="2" ry="2" />
<text  x="768.13" y="1631.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="754.8" y="1685" width="1.7" height="15.0" fill="rgb(246,7,4)" rx="2" ry="2" />
<text  x="757.81" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="532.9" y="1605" width="1.7" height="15.0" fill="rgb(233,52,52)" rx="2" ry="2" />
<text  x="535.92" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (2 samples, 0.29%)</title><rect x="608.6" y="1717" width="3.4" height="15.0" fill="rgb(247,185,21)" rx="2" ry="2" />
<text  x="611.60" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="113.2" y="1445" width="1.7" height="15.0" fill="rgb(214,110,31)" rx="2" ry="2" />
<text  x="116.21" y="1455.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (14 samples, 2.04%)</title><rect x="94.3" y="1701" width="24.1" height="15.0" fill="rgb(220,88,38)" rx="2" ry="2" />
<text  x="97.29" y="1711.5" >c..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (27 samples, 3.94%)</title><rect x="273.2" y="1573" width="46.4" height="15.0" fill="rgb(231,124,36)" rx="2" ry="2" />
<text  x="276.18" y="1583.5" >part..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.15%)</title><rect x="37.5" y="405" width="1.7" height="15.0" fill="rgb(212,208,35)" rx="2" ry="2" />
<text  x="40.52" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (1 samples, 0.15%)</title><rect x="84.0" y="1685" width="1.7" height="15.0" fill="rgb(210,138,47)" rx="2" ry="2" />
<text  x="86.97" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.15%)</title><rect x="114.9" y="1589" width="1.7" height="15.0" fill="rgb(207,131,45)" rx="2" ry="2" />
<text  x="117.93" y="1599.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.44%)</title><rect x="149.3" y="1717" width="5.2" height="15.0" fill="rgb(207,137,3)" rx="2" ry="2" />
<text  x="152.33" y="1727.5" ></text>
</g>
<g >
<title>free (1 samples, 0.15%)</title><rect x="364.3" y="1605" width="1.8" height="15.0" fill="rgb(205,206,11)" rx="2" ry="2" />
<text  x="367.34" y="1615.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (1 samples, 0.15%)</title><rect x="85.7" y="1637" width="1.7" height="15.0" fill="rgb(228,161,2)" rx="2" ry="2" />
<text  x="88.69" y="1647.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;db::view::view_builder&gt;::stop (1 samples, 0.15%)</title><rect x="92.6" y="1781" width="1.7" height="15.0" fill="rgb(207,34,12)" rx="2" ry="2" />
<text  x="95.57" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.29%)</title><rect x="109.8" y="1589" width="3.4" height="15.0" fill="rgb(211,13,5)" rx="2" ry="2" />
<text  x="112.77" y="1599.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (14 samples, 2.04%)</title><rect x="94.3" y="1749" width="24.1" height="15.0" fill="rgb(208,212,37)" rx="2" ry="2" />
<text  x="97.29" y="1759.5" >s..</text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (1 samples, 0.15%)</title><rect x="760.0" y="1733" width="1.7" height="15.0" fill="rgb(232,53,9)" rx="2" ry="2" />
<text  x="762.97" y="1743.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.15%)</title><rect x="132.1" y="1765" width="1.7" height="15.0" fill="rgb(240,70,30)" rx="2" ry="2" />
<text  x="135.13" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1525" width="74.0" height="15.0" fill="rgb(235,222,2)" rx="2" ry="2" />
<text  x="13.00" y="1535.5" >[unknown]</text>
</g>
<g >
<title>single_node_cql_env::execute_cql (5 samples, 0.73%)</title><rect x="84.0" y="1733" width="8.6" height="15.0" fill="rgb(218,141,51)" rx="2" ry="2" />
<text  x="86.97" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (1 samples, 0.15%)</title><rect x="27.2" y="341" width="1.7" height="15.0" fill="rgb(219,1,36)" rx="2" ry="2" />
<text  x="30.20" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.15%)</title><rect x="78.8" y="517" width="1.7" height="15.0" fill="rgb(251,175,29)" rx="2" ry="2" />
<text  x="81.80" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="65.0" y="373" width="1.8" height="15.0" fill="rgb(214,52,26)" rx="2" ry="2" />
<text  x="68.04" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.15%)</title><rect x="102.9" y="1429" width="1.7" height="15.0" fill="rgb(220,60,14)" rx="2" ry="2" />
<text  x="105.89" y="1439.5" ></text>
</g>
<g >
<title>hwloc_linux_set_tid_cpubind (8 samples, 1.17%)</title><rect x="1114.3" y="1877" width="13.8" height="15.0" fill="rgb(225,21,45)" rx="2" ry="2" />
<text  x="1117.31" y="1887.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (15 samples, 2.19%)</title><rect x="968.1" y="1589" width="25.8" height="15.0" fill="rgb(220,170,23)" rx="2" ry="2" />
<text  x="971.10" y="1599.5" >s..</text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (1 samples, 0.15%)</title><rect x="28.9" y="325" width="1.7" height="15.0" fill="rgb(253,137,22)" rx="2" ry="2" />
<text  x="31.92" y="335.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (3 samples, 0.44%)</title><rect x="446.9" y="1605" width="5.2" height="15.0" fill="rgb(208,109,50)" rx="2" ry="2" />
<text  x="449.91" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="933" width="72.2" height="15.0" fill="rgb(217,19,39)" rx="2" ry="2" />
<text  x="13.00" y="943.5" >[unknown]</text>
</g>
<g >
<title>cql3::query_processor::get_statement (28 samples, 4.08%)</title><rect x="13.4" y="533" width="48.2" height="15.0" fill="rgb(223,32,37)" rx="2" ry="2" />
<text  x="16.44" y="543.5" >cql3..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (28 samples, 4.08%)</title><rect x="13.4" y="501" width="48.2" height="15.0" fill="rgb(251,223,5)" rx="2" ry="2" />
<text  x="16.44" y="511.5" >seas..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="37.5" y="229" width="1.7" height="15.0" fill="rgb(223,41,41)" rx="2" ry="2" />
<text  x="40.52" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="113.2" y="1525" width="1.7" height="15.0" fill="rgb(227,28,45)" rx="2" ry="2" />
<text  x="116.21" y="1535.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.58%)</title><rect x="65.0" y="517" width="6.9" height="15.0" fill="rgb(227,102,8)" rx="2" ry="2" />
<text  x="68.04" y="527.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.15%)</title><rect x="950.9" y="1589" width="1.7" height="15.0" fill="rgb(244,109,28)" rx="2" ry="2" />
<text  x="953.90" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (9 samples, 1.31%)</title><rect x="94.3" y="1589" width="15.5" height="15.0" fill="rgb(247,36,29)" rx="2" ry="2" />
<text  x="97.29" y="1599.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.15%)</title><rect x="78.8" y="597" width="1.7" height="15.0" fill="rgb(223,208,37)" rx="2" ry="2" />
<text  x="81.80" y="607.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (1 samples, 0.15%)</title><rect x="268.0" y="1589" width="1.7" height="15.0" fill="rgb(237,153,15)" rx="2" ry="2" />
<text  x="271.02" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.15%)</title><rect x="82.2" y="1077" width="1.8" height="15.0" fill="rgb(247,138,11)" rx="2" ry="2" />
<text  x="85.24" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1253" width="1.7" height="15.0" fill="rgb(227,108,25)" rx="2" ry="2" />
<text  x="105.89" y="1263.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.15%)</title><rect x="1016.3" y="1653" width="1.7" height="15.0" fill="rgb(212,179,4)" rx="2" ry="2" />
<text  x="1019.27" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="773" width="72.2" height="15.0" fill="rgb(241,24,23)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.15%)</title><rect x="114.9" y="1445" width="1.7" height="15.0" fill="rgb(220,35,36)" rx="2" ry="2" />
<text  x="117.93" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1637" width="74.0" height="15.0" fill="rgb(208,39,26)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" >[unknown]</text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.15%)</title><rect x="570.8" y="1653" width="1.7" height="15.0" fill="rgb(251,25,1)" rx="2" ry="2" />
<text  x="573.76" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="56.4" y="277" width="1.8" height="15.0" fill="rgb(250,114,16)" rx="2" ry="2" />
<text  x="59.44" y="287.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (5 samples, 0.73%)</title><rect x="980.1" y="1541" width="8.6" height="15.0" fill="rgb(216,27,33)" rx="2" ry="2" />
<text  x="983.15" y="1551.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="469.3" y="1685" width="1.7" height="15.0" fill="rgb(206,2,47)" rx="2" ry="2" />
<text  x="472.27" y="1695.5" ></text>
</g>
<g >
<title>partition_entry::make_evictable (1 samples, 0.15%)</title><rect x="130.4" y="1813" width="1.7" height="15.0" fill="rgb(235,99,51)" rx="2" ry="2" />
<text  x="133.41" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.15%)</title><rect x="65.0" y="261" width="1.8" height="15.0" fill="rgb(208,198,32)" rx="2" ry="2" />
<text  x="68.04" y="271.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1173" width="72.2" height="15.0" fill="rgb(224,212,14)" rx="2" ry="2" />
<text  x="13.00" y="1183.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="82.2" y="933" width="1.8" height="15.0" fill="rgb(232,130,19)" rx="2" ry="2" />
<text  x="85.24" y="943.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.15%)</title><rect x="531.2" y="1621" width="1.7" height="15.0" fill="rgb(246,188,18)" rx="2" ry="2" />
<text  x="534.20" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="82.2" y="949" width="1.8" height="15.0" fill="rgb(244,202,18)" rx="2" ry="2" />
<text  x="85.24" y="959.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="47.8" y="325" width="1.8" height="15.0" fill="rgb(248,216,16)" rx="2" ry="2" />
<text  x="50.84" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (1 samples, 0.15%)</title><rect x="87.4" y="1605" width="1.7" height="15.0" fill="rgb(241,165,47)" rx="2" ry="2" />
<text  x="90.41" y="1615.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="206.1" y="1701" width="1.7" height="15.0" fill="rgb(239,222,4)" rx="2" ry="2" />
<text  x="209.09" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1333" width="1.7" height="15.0" fill="rgb(241,71,7)" rx="2" ry="2" />
<text  x="105.89" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.15%)</title><rect x="42.7" y="357" width="1.7" height="15.0" fill="rgb(242,33,50)" rx="2" ry="2" />
<text  x="45.68" y="367.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.29%)</title><rect x="431.4" y="1605" width="3.5" height="15.0" fill="rgb(235,206,17)" rx="2" ry="2" />
<text  x="434.43" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1045" width="72.2" height="15.0" fill="rgb(254,54,30)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.15%)</title><rect x="42.7" y="293" width="1.7" height="15.0" fill="rgb(216,115,8)" rx="2" ry="2" />
<text  x="45.68" y="303.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.15%)</title><rect x="106.3" y="1365" width="1.7" height="15.0" fill="rgb(248,97,6)" rx="2" ry="2" />
<text  x="109.33" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (15 samples, 2.19%)</title><rect x="438.3" y="1685" width="25.8" height="15.0" fill="rgb(205,203,13)" rx="2" ry="2" />
<text  x="441.31" y="1695.5" >s..</text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (2 samples, 0.29%)</title><rect x="708.4" y="1669" width="3.4" height="15.0" fill="rgb(219,128,27)" rx="2" ry="2" />
<text  x="711.37" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (48 samples, 7.00%)</title><rect x="10.0" y="1845" width="82.6" height="15.0" fill="rgb(239,81,15)" rx="2" ry="2" />
<text  x="13.00" y="1855.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="949" width="72.2" height="15.0" fill="rgb(227,168,14)" rx="2" ry="2" />
<text  x="13.00" y="959.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (6 samples, 0.87%)</title><rect x="761.7" y="1701" width="10.3" height="15.0" fill="rgb(210,183,36)" rx="2" ry="2" />
<text  x="764.69" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (12 samples, 1.75%)</title><rect x="295.5" y="1525" width="20.7" height="15.0" fill="rgb(214,82,21)" rx="2" ry="2" />
<text  x="298.54" y="1535.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="80.5" y="709" width="1.7" height="15.0" fill="rgb(234,71,27)" rx="2" ry="2" />
<text  x="83.52" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="70.2" y="325" width="1.7" height="15.0" fill="rgb(238,51,47)" rx="2" ry="2" />
<text  x="73.20" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.15%)</title><rect x="629.2" y="1733" width="1.8" height="15.0" fill="rgb(214,170,42)" rx="2" ry="2" />
<text  x="632.24" y="1743.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (4 samples, 0.58%)</title><rect x="563.9" y="1637" width="6.9" height="15.0" fill="rgb(246,192,28)" rx="2" ry="2" />
<text  x="566.88" y="1647.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.15%)</title><rect x="434.9" y="1621" width="1.7" height="15.0" fill="rgb(235,91,3)" rx="2" ry="2" />
<text  x="437.87" y="1631.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (2 samples, 0.29%)</title><rect x="10.0" y="565" width="3.4" height="15.0" fill="rgb(226,56,11)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="789" width="72.2" height="15.0" fill="rgb(218,0,6)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >[unknown]</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.15%)</title><rect x="128.7" y="1733" width="1.7" height="15.0" fill="rgb(213,116,12)" rx="2" ry="2" />
<text  x="131.69" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="106.3" y="1477" width="1.7" height="15.0" fill="rgb(233,215,13)" rx="2" ry="2" />
<text  x="109.33" y="1487.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.15%)</title><rect x="710.1" y="1653" width="1.7" height="15.0" fill="rgb(238,137,10)" rx="2" ry="2" />
<text  x="713.09" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="560.4" y="1605" width="1.8" height="15.0" fill="rgb(226,44,14)" rx="2" ry="2" />
<text  x="563.44" y="1615.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.15%)</title><rect x="65.0" y="277" width="1.8" height="15.0" fill="rgb(232,213,13)" rx="2" ry="2" />
<text  x="68.04" y="287.5" ></text>
</g>
<g >
<title>make_combined_reader (5 samples, 0.73%)</title><rect x="477.9" y="1637" width="8.6" height="15.0" fill="rgb(205,197,16)" rx="2" ry="2" />
<text  x="480.87" y="1647.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.44%)</title><rect x="930.3" y="1525" width="5.1" height="15.0" fill="rgb(251,169,30)" rx="2" ry="2" />
<text  x="933.26" y="1535.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (168 samples, 24.49%)</title><rect x="761.7" y="1749" width="289.0" height="15.0" fill="rgb(248,220,7)" rx="2" ry="2" />
<text  x="764.69" y="1759.5" >seastar::lambda_task&lt;seastar::executio..</text>
</g>
<g >
<title>service::client_state::has_column_family_access (2 samples, 0.29%)</title><rect x="89.1" y="1685" width="3.5" height="15.0" fill="rgb(212,72,39)" rx="2" ry="2" />
<text  x="92.13" y="1695.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="1018.0" y="1669" width="3.4" height="15.0" fill="rgb(223,229,0)" rx="2" ry="2" />
<text  x="1020.99" y="1679.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (4 samples, 0.58%)</title><rect x="65.0" y="565" width="6.9" height="15.0" fill="rgb(229,157,21)" rx="2" ry="2" />
<text  x="68.04" y="575.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (12 samples, 1.75%)</title><rect x="729.0" y="1637" width="20.7" height="15.0" fill="rgb(224,162,12)" rx="2" ry="2" />
<text  x="732.01" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="78.8" y="373" width="1.7" height="15.0" fill="rgb(221,228,10)" rx="2" ry="2" />
<text  x="81.80" y="383.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1381" width="74.0" height="15.0" fill="rgb(240,186,46)" rx="2" ry="2" />
<text  x="13.00" y="1391.5" >[unknown]</text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.15%)</title><rect x="567.3" y="1621" width="1.7" height="15.0" fill="rgb(242,76,21)" rx="2" ry="2" />
<text  x="570.32" y="1631.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.15%)</title><rect x="78.8" y="613" width="1.7" height="15.0" fill="rgb(235,149,15)" rx="2" ry="2" />
<text  x="81.80" y="623.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (89 samples, 12.97%)</title><rect x="840.8" y="1653" width="153.1" height="15.0" fill="rgb(221,5,24)" rx="2" ry="2" />
<text  x="843.82" y="1663.5" >service::storage_pr..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.15%)</title><rect x="65.0" y="309" width="1.8" height="15.0" fill="rgb(214,3,29)" rx="2" ry="2" />
<text  x="68.04" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.29%)</title><rect x="51.3" y="277" width="3.4" height="15.0" fill="rgb(239,99,7)" rx="2" ry="2" />
<text  x="54.28" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (24 samples, 3.50%)</title><rect x="711.8" y="1685" width="41.3" height="15.0" fill="rgb(228,90,5)" rx="2" ry="2" />
<text  x="714.81" y="1695.5" >cql..</text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (147 samples, 21.43%)</title><rect x="780.6" y="1685" width="252.9" height="15.0" fill="rgb(210,77,33)" rx="2" ry="2" />
<text  x="783.61" y="1695.5" >cql3::statements::select_statemen..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="756.5" y="1685" width="1.8" height="15.0" fill="rgb(208,226,12)" rx="2" ry="2" />
<text  x="759.53" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.15%)</title><rect x="567.3" y="1605" width="1.7" height="15.0" fill="rgb(234,143,20)" rx="2" ry="2" />
<text  x="570.32" y="1615.5" ></text>
</g>
<g >
<title>create_partitions (14 samples, 2.04%)</title><rect x="94.3" y="1765" width="24.1" height="15.0" fill="rgb(244,0,15)" rx="2" ry="2" />
<text  x="97.29" y="1775.5" >c..</text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.15%)</title><rect x="94.3" y="1525" width="1.7" height="15.0" fill="rgb(209,219,24)" rx="2" ry="2" />
<text  x="97.29" y="1535.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.15%)</title><rect x="44.4" y="389" width="1.7" height="15.0" fill="rgb(206,81,50)" rx="2" ry="2" />
<text  x="47.40" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (88 samples, 12.83%)</title><rect x="842.5" y="1637" width="151.4" height="15.0" fill="rgb(219,29,24)" rx="2" ry="2" />
<text  x="845.54" y="1647.5" >service::storage_pr..</text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (10 samples, 1.46%)</title><rect x="809.9" y="1653" width="17.2" height="15.0" fill="rgb(254,204,31)" rx="2" ry="2" />
<text  x="812.85" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (2 samples, 0.29%)</title><rect x="125.2" y="1733" width="3.5" height="15.0" fill="rgb(211,217,20)" rx="2" ry="2" />
<text  x="128.25" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.15%)</title><rect x="82.2" y="1093" width="1.8" height="15.0" fill="rgb(206,159,45)" rx="2" ry="2" />
<text  x="85.24" y="1103.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (1 samples, 0.15%)</title><rect x="39.2" y="437" width="1.8" height="15.0" fill="rgb(207,88,21)" rx="2" ry="2" />
<text  x="42.24" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (2 samples, 0.29%)</title><rect x="66.8" y="437" width="3.4" height="15.0" fill="rgb(239,179,33)" rx="2" ry="2" />
<text  x="69.76" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (7 samples, 1.02%)</title><rect x="422.8" y="1621" width="12.1" height="15.0" fill="rgb(231,1,31)" rx="2" ry="2" />
<text  x="425.83" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.15%)</title><rect x="44.4" y="405" width="1.7" height="15.0" fill="rgb(238,205,54)" rx="2" ry="2" />
<text  x="47.40" y="415.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.15%)</title><rect x="63.3" y="549" width="1.7" height="15.0" fill="rgb(221,121,39)" rx="2" ry="2" />
<text  x="66.32" y="559.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (1 samples, 0.15%)</title><rect x="596.6" y="1733" width="1.7" height="15.0" fill="rgb(233,153,3)" rx="2" ry="2" />
<text  x="599.56" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (1 samples, 0.15%)</title><rect x="113.2" y="1589" width="1.7" height="15.0" fill="rgb(242,201,34)" rx="2" ry="2" />
<text  x="116.21" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="70.2" y="245" width="1.7" height="15.0" fill="rgb(229,94,20)" rx="2" ry="2" />
<text  x="73.20" y="255.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="78.8" y="485" width="1.7" height="15.0" fill="rgb(234,92,27)" rx="2" ry="2" />
<text  x="81.80" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="331.7" y="1637" width="1.7" height="15.0" fill="rgb(249,172,53)" rx="2" ry="2" />
<text  x="334.66" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (62 samples, 9.04%)</title><rect x="226.7" y="1685" width="106.7" height="15.0" fill="rgb(254,35,43)" rx="2" ry="2" />
<text  x="229.73" y="1695.5" >flat_mutation..</text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (2 samples, 0.29%)</title><rect x="85.7" y="1669" width="3.4" height="15.0" fill="rgb(222,91,0)" rx="2" ry="2" />
<text  x="88.69" y="1679.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (7 samples, 1.02%)</title><rect x="916.5" y="1493" width="12.0" height="15.0" fill="rgb(230,122,10)" rx="2" ry="2" />
<text  x="919.50" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (2 samples, 0.29%)</title><rect x="20.3" y="341" width="3.5" height="15.0" fill="rgb(238,36,7)" rx="2" ry="2" />
<text  x="23.32" y="351.5" ></text>
</g>
<g >
<title>_dl_map_object (1 samples, 0.15%)</title><rect x="1097.1" y="1877" width="1.7" height="15.0" fill="rgb(216,147,19)" rx="2" ry="2" />
<text  x="1100.11" y="1887.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="555.3" y="1637" width="3.4" height="15.0" fill="rgb(205,176,48)" rx="2" ry="2" />
<text  x="558.28" y="1647.5" ></text>
</g>
<g >
<title>make_combined_reader (1 samples, 0.15%)</title><rect x="472.7" y="1669" width="1.7" height="15.0" fill="rgb(207,70,45)" rx="2" ry="2" />
<text  x="475.71" y="1679.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (37 samples, 5.39%)</title><rect x="268.0" y="1605" width="63.7" height="15.0" fill="rgb(220,187,3)" rx="2" ry="2" />
<text  x="271.02" y="1615.5" >partit..</text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1141" width="72.2" height="15.0" fill="rgb(224,169,1)" rx="2" ry="2" />
<text  x="13.00" y="1151.5" >[unknown]</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.15%)</title><rect x="78.8" y="581" width="1.7" height="15.0" fill="rgb(226,135,29)" rx="2" ry="2" />
<text  x="81.80" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1221" width="1.7" height="15.0" fill="rgb(254,110,24)" rx="2" ry="2" />
<text  x="105.89" y="1231.5" ></text>
</g>
<g >
<title>table::set_hit_rate (2 samples, 0.29%)</title><rect x="672.2" y="1717" width="3.5" height="15.0" fill="rgb(247,89,52)" rx="2" ry="2" />
<text  x="675.24" y="1727.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.15%)</title><rect x="323.1" y="1573" width="1.7" height="15.0" fill="rgb(225,29,54)" rx="2" ry="2" />
<text  x="326.06" y="1583.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.15%)</title><rect x="923.4" y="1461" width="1.7" height="15.0" fill="rgb(206,134,53)" rx="2" ry="2" />
<text  x="926.38" y="1471.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (3 samples, 0.44%)</title><rect x="631.0" y="1749" width="5.1" height="15.0" fill="rgb(250,215,22)" rx="2" ry="2" />
<text  x="633.96" y="1759.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (1 samples, 0.15%)</title><rect x="596.6" y="1717" width="1.7" height="15.0" fill="rgb(211,144,42)" rx="2" ry="2" />
<text  x="599.56" y="1727.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (2 samples, 0.29%)</title><rect x="125.2" y="1797" width="3.5" height="15.0" fill="rgb(210,82,22)" rx="2" ry="2" />
<text  x="128.25" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.15%)</title><rect x="37.5" y="389" width="1.7" height="15.0" fill="rgb(245,202,44)" rx="2" ry="2" />
<text  x="40.52" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="531.2" y="1605" width="1.7" height="15.0" fill="rgb(241,180,38)" rx="2" ry="2" />
<text  x="534.20" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;2ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1173" width="1.7" height="15.0" fill="rgb(234,165,50)" rx="2" ry="2" />
<text  x="105.89" y="1183.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="756.5" y="1701" width="1.8" height="15.0" fill="rgb(224,83,18)" rx="2" ry="2" />
<text  x="759.53" y="1711.5" ></text>
</g>
<g >
<title>__start_context (32 samples, 4.66%)</title><rect x="10.0" y="661" width="55.0" height="15.0" fill="rgb(218,57,21)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >__sta..</text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (3 samples, 0.44%)</title><rect x="262.9" y="1605" width="5.1" height="15.0" fill="rgb(217,49,52)" rx="2" ry="2" />
<text  x="265.86" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (12 samples, 1.75%)</title><rect x="534.6" y="1621" width="20.7" height="15.0" fill="rgb(211,124,35)" rx="2" ry="2" />
<text  x="537.64" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1205" width="72.2" height="15.0" fill="rgb(237,29,40)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" >[unknown]</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="53.0" y="149" width="1.7" height="15.0" fill="rgb(224,88,52)" rx="2" ry="2" />
<text  x="56.00" y="159.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.15%)</title><rect x="47.8" y="293" width="1.8" height="15.0" fill="rgb(236,30,2)" rx="2" ry="2" />
<text  x="50.84" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.15%)</title><rect x="68.5" y="309" width="1.7" height="15.0" fill="rgb(224,179,21)" rx="2" ry="2" />
<text  x="71.48" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="82.2" y="997" width="1.8" height="15.0" fill="rgb(252,155,53)" rx="2" ry="2" />
<text  x="85.24" y="1007.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="68.5" y="357" width="1.7" height="15.0" fill="rgb(254,73,12)" rx="2" ry="2" />
<text  x="71.48" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.15%)</title><rect x="553.6" y="1605" width="1.7" height="15.0" fill="rgb(242,172,5)" rx="2" ry="2" />
<text  x="556.56" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="694.6" y="1701" width="3.4" height="15.0" fill="rgb(232,136,35)" rx="2" ry="2" />
<text  x="697.61" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (3 samples, 0.44%)</title><rect x="1086.8" y="1749" width="5.2" height="15.0" fill="rgb(208,166,50)" rx="2" ry="2" />
<text  x="1089.79" y="1759.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.15%)</title><rect x="551.8" y="1605" width="1.8" height="15.0" fill="rgb(235,127,14)" rx="2" ry="2" />
<text  x="554.84" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.15%)</title><rect x="144.2" y="1733" width="1.7" height="15.0" fill="rgb(212,122,35)" rx="2" ry="2" />
<text  x="147.17" y="1743.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.29%)</title><rect x="41.0" y="389" width="3.4" height="15.0" fill="rgb(248,161,49)" rx="2" ry="2" />
<text  x="43.96" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="56.4" y="197" width="1.8" height="15.0" fill="rgb(211,140,42)" rx="2" ry="2" />
<text  x="59.44" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.15%)</title><rect x="1093.7" y="1749" width="1.7" height="15.0" fill="rgb(253,138,2)" rx="2" ry="2" />
<text  x="1096.67" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="109.8" y="1573" width="3.4" height="15.0" fill="rgb(209,30,37)" rx="2" ry="2" />
<text  x="112.77" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.15%)</title><rect x="562.2" y="1637" width="1.7" height="15.0" fill="rgb(237,182,43)" rx="2" ry="2" />
<text  x="565.16" y="1647.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="653.3" y="1733" width="1.7" height="15.0" fill="rgb(217,184,29)" rx="2" ry="2" />
<text  x="656.32" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.15%)</title><rect x="754.8" y="1653" width="1.7" height="15.0" fill="rgb(245,10,11)" rx="2" ry="2" />
<text  x="757.81" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1829" width="74.0" height="15.0" fill="rgb(217,97,26)" rx="2" ry="2" />
<text  x="13.00" y="1839.5" >[unknown]</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="82.2" y="837" width="1.8" height="15.0" fill="rgb(207,139,8)" rx="2" ry="2" />
<text  x="85.24" y="847.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (6 samples, 0.87%)</title><rect x="577.6" y="1749" width="10.4" height="15.0" fill="rgb(236,10,10)" rx="2" ry="2" />
<text  x="580.64" y="1759.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (9 samples, 1.31%)</title><rect x="440.0" y="1653" width="15.5" height="15.0" fill="rgb(207,47,27)" rx="2" ry="2" />
<text  x="443.03" y="1663.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.44%)</title><rect x="906.2" y="1509" width="5.1" height="15.0" fill="rgb(241,141,44)" rx="2" ry="2" />
<text  x="909.18" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.15%)</title><rect x="111.5" y="1509" width="1.7" height="15.0" fill="rgb(252,19,47)" rx="2" ry="2" />
<text  x="114.49" y="1519.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.15%)</title><rect x="78.8" y="677" width="1.7" height="15.0" fill="rgb(221,202,28)" rx="2" ry="2" />
<text  x="81.80" y="687.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.15%)</title><rect x="41.0" y="373" width="1.7" height="15.0" fill="rgb(221,222,13)" rx="2" ry="2" />
<text  x="43.96" y="383.5" ></text>
</g>
<g >
<title>database::find_keyspace (5 samples, 0.73%)</title><rect x="952.6" y="1589" width="8.6" height="15.0" fill="rgb(234,131,48)" rx="2" ry="2" />
<text  x="955.62" y="1599.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.29%)</title><rect x="588.0" y="1733" width="3.4" height="15.0" fill="rgb(211,86,39)" rx="2" ry="2" />
<text  x="590.96" y="1743.5" ></text>
</g>
<g >
<title>auth::get_permissions (12 samples, 1.75%)</title><rect x="729.0" y="1621" width="20.7" height="15.0" fill="rgb(238,170,52)" rx="2" ry="2" />
<text  x="732.01" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (4 samples, 0.58%)</title><rect x="65.0" y="501" width="6.9" height="15.0" fill="rgb(219,31,13)" rx="2" ry="2" />
<text  x="68.04" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="106.3" y="1349" width="1.7" height="15.0" fill="rgb(251,33,7)" rx="2" ry="2" />
<text  x="109.33" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1493" width="74.0" height="15.0" fill="rgb(232,213,30)" rx="2" ry="2" />
<text  x="13.00" y="1503.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.15%)</title><rect x="41.0" y="357" width="1.7" height="15.0" fill="rgb(209,173,50)" rx="2" ry="2" />
<text  x="43.96" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.15%)</title><rect x="22.0" y="261" width="1.8" height="15.0" fill="rgb(233,94,30)" rx="2" ry="2" />
<text  x="25.04" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="82.2" y="965" width="1.8" height="15.0" fill="rgb(242,204,19)" rx="2" ry="2" />
<text  x="85.24" y="975.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="869" width="72.2" height="15.0" fill="rgb(237,174,6)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >[unknown]</text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (2 samples, 0.29%)</title><rect x="644.7" y="1733" width="3.5" height="15.0" fill="rgb(240,139,21)" rx="2" ry="2" />
<text  x="647.72" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.15%)</title><rect x="114.9" y="1461" width="1.7" height="15.0" fill="rgb(220,219,44)" rx="2" ry="2" />
<text  x="117.93" y="1471.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.15%)</title><rect x="94.3" y="1541" width="1.7" height="15.0" fill="rgb(231,150,30)" rx="2" ry="2" />
<text  x="97.29" y="1551.5" ></text>
</g>
<g >
<title>row::compact_and_expire (12 samples, 1.75%)</title><rect x="415.9" y="1653" width="20.7" height="15.0" fill="rgb(244,5,34)" rx="2" ry="2" />
<text  x="418.95" y="1663.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.15%)</title><rect x="651.6" y="1717" width="1.7" height="15.0" fill="rgb(247,36,53)" rx="2" ry="2" />
<text  x="654.60" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.15%)</title><rect x="53.0" y="245" width="1.7" height="15.0" fill="rgb(228,130,48)" rx="2" ry="2" />
<text  x="56.00" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.15%)</title><rect x="41.0" y="229" width="1.7" height="15.0" fill="rgb(214,46,46)" rx="2" ry="2" />
<text  x="43.96" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (14 samples, 2.04%)</title><rect x="94.3" y="1669" width="24.1" height="15.0" fill="rgb(253,49,46)" rx="2" ry="2" />
<text  x="97.29" y="1679.5" >c..</text>
</g>
<g >
<title>cql3_parser::CqlParser::query (3 samples, 0.44%)</title><rect x="73.6" y="517" width="5.2" height="15.0" fill="rgb(243,130,20)" rx="2" ry="2" />
<text  x="76.64" y="527.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (148 samples, 21.57%)</title><rect x="778.9" y="1701" width="254.6" height="15.0" fill="rgb(233,161,13)" rx="2" ry="2" />
<text  x="781.89" y="1711.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (9 samples, 1.31%)</title><rect x="94.3" y="1621" width="15.5" height="15.0" fill="rgb(230,108,44)" rx="2" ry="2" />
<text  x="97.29" y="1631.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (29 samples, 4.23%)</title><rect x="706.6" y="1701" width="49.9" height="15.0" fill="rgb(205,39,48)" rx="2" ry="2" />
<text  x="709.65" y="1711.5" >cql3:..</text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.15%)</title><rect x="285.2" y="1525" width="1.7" height="15.0" fill="rgb(252,31,15)" rx="2" ry="2" />
<text  x="288.22" y="1535.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.15%)</title><rect x="106.3" y="1381" width="1.7" height="15.0" fill="rgb(226,41,28)" rx="2" ry="2" />
<text  x="109.33" y="1391.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (86 samples, 12.54%)</title><rect x="846.0" y="1621" width="147.9" height="15.0" fill="rgb(222,203,36)" rx="2" ry="2" />
<text  x="848.98" y="1631.5" >service::storage_p..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.58%)</title><rect x="65.0" y="645" width="6.9" height="15.0" fill="rgb(244,17,5)" rx="2" ry="2" />
<text  x="68.04" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="486.5" y="1621" width="1.7" height="15.0" fill="rgb(220,32,21)" rx="2" ry="2" />
<text  x="489.47" y="1631.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="99.4" y="1509" width="1.8" height="15.0" fill="rgb(239,15,34)" rx="2" ry="2" />
<text  x="102.45" y="1519.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.15%)</title><rect x="54.7" y="325" width="1.7" height="15.0" fill="rgb(220,224,31)" rx="2" ry="2" />
<text  x="57.72" y="335.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1013" width="72.2" height="15.0" fill="rgb(244,36,16)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" >[unknown]</text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (1 samples, 0.15%)</title><rect x="87.4" y="1573" width="1.7" height="15.0" fill="rgb(250,68,28)" rx="2" ry="2" />
<text  x="90.41" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.15%)</title><rect x="114.9" y="1493" width="1.7" height="15.0" fill="rgb(239,220,19)" rx="2" ry="2" />
<text  x="117.93" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.15%)</title><rect x="46.1" y="389" width="1.7" height="15.0" fill="rgb(225,113,53)" rx="2" ry="2" />
<text  x="49.12" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.15%)</title><rect x="41.0" y="309" width="1.7" height="15.0" fill="rgb(246,18,2)" rx="2" ry="2" />
<text  x="43.96" y="319.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (4 samples, 0.58%)</title><rect x="71.9" y="581" width="6.9" height="15.0" fill="rgb(229,28,5)" rx="2" ry="2" />
<text  x="74.92" y="591.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.15%)</title><rect x="68.5" y="405" width="1.7" height="15.0" fill="rgb(225,229,48)" rx="2" ry="2" />
<text  x="71.48" y="415.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (58 samples, 8.45%)</title><rect x="338.5" y="1685" width="99.8" height="15.0" fill="rgb(235,224,32)" rx="2" ry="2" />
<text  x="341.54" y="1695.5" >query::consu..</text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.15%)</title><rect x="1050.7" y="1685" width="1.7" height="15.0" fill="rgb(240,73,24)" rx="2" ry="2" />
<text  x="1053.67" y="1695.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (1 samples, 0.15%)</title><rect x="133.8" y="1765" width="1.8" height="15.0" fill="rgb(231,161,28)" rx="2" ry="2" />
<text  x="136.85" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="56.4" y="181" width="1.8" height="15.0" fill="rgb(209,0,38)" rx="2" ry="2" />
<text  x="59.44" y="191.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (2 samples, 0.29%)</title><rect x="85.7" y="1701" width="3.4" height="15.0" fill="rgb(205,21,3)" rx="2" ry="2" />
<text  x="88.69" y="1711.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (3 samples, 0.44%)</title><rect x="648.2" y="1733" width="5.1" height="15.0" fill="rgb(250,185,47)" rx="2" ry="2" />
<text  x="651.16" y="1743.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (2 samples, 0.29%)</title><rect x="990.5" y="1573" width="3.4" height="15.0" fill="rgb(208,8,28)" rx="2" ry="2" />
<text  x="993.47" y="1583.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (2 samples, 0.29%)</title><rect x="708.4" y="1685" width="3.4" height="15.0" fill="rgb(209,110,20)" rx="2" ry="2" />
<text  x="711.37" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.15%)</title><rect x="42.7" y="277" width="1.7" height="15.0" fill="rgb(244,20,3)" rx="2" ry="2" />
<text  x="45.68" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.15%)</title><rect x="53.0" y="69" width="1.7" height="15.0" fill="rgb(232,64,30)" rx="2" ry="2" />
<text  x="56.00" y="79.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="109.8" y="1445" width="1.7" height="15.0" fill="rgb(248,200,10)" rx="2" ry="2" />
<text  x="112.77" y="1455.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.15%)</title><rect x="127.0" y="1637" width="1.7" height="15.0" fill="rgb(228,143,41)" rx="2" ry="2" />
<text  x="129.97" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (5 samples, 0.73%)</title><rect x="109.8" y="1605" width="8.6" height="15.0" fill="rgb(237,89,16)" rx="2" ry="2" />
<text  x="112.77" y="1615.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="450.3" y="1589" width="1.8" height="15.0" fill="rgb(237,31,17)" rx="2" ry="2" />
<text  x="453.35" y="1599.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.15%)</title><rect x="78.8" y="645" width="1.7" height="15.0" fill="rgb(246,71,19)" rx="2" ry="2" />
<text  x="81.80" y="655.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (12 samples, 1.75%)</title><rect x="16.9" y="373" width="20.6" height="15.0" fill="rgb(223,55,8)" rx="2" ry="2" />
<text  x="19.88" y="383.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (4 samples, 0.58%)</title><rect x="164.8" y="1717" width="6.9" height="15.0" fill="rgb(241,19,42)" rx="2" ry="2" />
<text  x="167.81" y="1727.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.15%)</title><rect x="565.6" y="1621" width="1.7" height="15.0" fill="rgb(205,108,53)" rx="2" ry="2" />
<text  x="568.60" y="1631.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::raw::update_statement*, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::_M_head (1 samples, 0.15%)</title><rect x="75.4" y="421" width="1.7" height="15.0" fill="rgb(251,197,16)" rx="2" ry="2" />
<text  x="78.36" y="431.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="371.2" y="1653" width="1.7" height="15.0" fill="rgb(211,37,36)" rx="2" ry="2" />
<text  x="374.22" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="70.2" y="309" width="1.7" height="15.0" fill="rgb(244,198,22)" rx="2" ry="2" />
<text  x="73.20" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (14 samples, 2.04%)</title><rect x="13.4" y="405" width="24.1" height="15.0" fill="rgb(252,109,49)" rx="2" ry="2" />
<text  x="16.44" y="415.5" >a..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (1 samples, 0.15%)</title><rect x="73.6" y="469" width="1.8" height="15.0" fill="rgb(250,61,25)" rx="2" ry="2" />
<text  x="76.64" y="479.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.15%)</title><rect x="1050.7" y="1493" width="1.7" height="15.0" fill="rgb(242,8,27)" rx="2" ry="2" />
<text  x="1053.67" y="1503.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.15%)</title><rect x="65.0" y="421" width="1.8" height="15.0" fill="rgb(217,126,31)" rx="2" ry="2" />
<text  x="68.04" y="431.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.15%)</title><rect x="92.6" y="1797" width="1.7" height="15.0" fill="rgb(217,33,45)" rx="2" ry="2" />
<text  x="95.57" y="1807.5" ></text>
</g>
<g >
<title>schema_registry::get (5 samples, 0.73%)</title><rect x="858.0" y="1605" width="8.6" height="15.0" fill="rgb(236,2,49)" rx="2" ry="2" />
<text  x="861.02" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.73%)</title><rect x="1040.3" y="1637" width="8.7" height="15.0" fill="rgb(232,107,3)" rx="2" ry="2" />
<text  x="1043.35" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (25 samples, 3.64%)</title><rect x="273.2" y="1557" width="43.0" height="15.0" fill="rgb(243,11,16)" rx="2" ry="2" />
<text  x="276.18" y="1567.5" >part..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="469.3" y="1669" width="1.7" height="15.0" fill="rgb(230,93,17)" rx="2" ry="2" />
<text  x="472.27" y="1679.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.15%)</title><rect x="47.8" y="341" width="1.8" height="15.0" fill="rgb(207,38,51)" rx="2" ry="2" />
<text  x="50.84" y="351.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.15%)</title><rect x="108.0" y="1493" width="1.8" height="15.0" fill="rgb(243,59,27)" rx="2" ry="2" />
<text  x="111.05" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.29%)</title><rect x="641.3" y="1733" width="3.4" height="15.0" fill="rgb(209,31,20)" rx="2" ry="2" />
<text  x="644.28" y="1743.5" ></text>
</g>
<g >
<title>memtable::apply (3 samples, 0.44%)</title><rect x="1033.5" y="1621" width="5.1" height="15.0" fill="rgb(219,144,49)" rx="2" ry="2" />
<text  x="1036.47" y="1631.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.15%)</title><rect x="1050.7" y="1525" width="1.7" height="15.0" fill="rgb(214,111,52)" rx="2" ry="2" />
<text  x="1053.67" y="1535.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (2 samples, 0.29%)</title><rect x="608.6" y="1701" width="3.4" height="15.0" fill="rgb(208,98,44)" rx="2" ry="2" />
<text  x="611.60" y="1711.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.15%)</title><rect x="42.7" y="213" width="1.7" height="15.0" fill="rgb(208,98,7)" rx="2" ry="2" />
<text  x="45.68" y="223.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.15%)</title><rect x="574.2" y="1717" width="1.7" height="15.0" fill="rgb(249,24,53)" rx="2" ry="2" />
<text  x="577.20" y="1727.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (15 samples, 2.19%)</title><rect x="92.6" y="1813" width="25.8" height="15.0" fill="rgb(243,174,43)" rx="2" ry="2" />
<text  x="95.57" y="1823.5" >s..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (5 samples, 0.73%)</title><rect x="49.6" y="357" width="8.6" height="15.0" fill="rgb(209,221,33)" rx="2" ry="2" />
<text  x="52.56" y="367.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (1 samples, 0.15%)</title><rect x="128.7" y="1749" width="1.7" height="15.0" fill="rgb(234,152,7)" rx="2" ry="2" />
<text  x="131.69" y="1759.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.15%)</title><rect x="127.0" y="1685" width="1.7" height="15.0" fill="rgb(251,25,38)" rx="2" ry="2" />
<text  x="129.97" y="1695.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.15%)</title><rect x="1050.7" y="1701" width="1.7" height="15.0" fill="rgb(211,34,4)" rx="2" ry="2" />
<text  x="1053.67" y="1711.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="78.8" y="501" width="1.7" height="15.0" fill="rgb(228,217,20)" rx="2" ry="2" />
<text  x="81.80" y="511.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.15%)</title><rect x="82.2" y="1141" width="1.8" height="15.0" fill="rgb(220,225,16)" rx="2" ry="2" />
<text  x="85.24" y="1151.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.15%)</title><rect x="106.3" y="1509" width="1.7" height="15.0" fill="rgb(242,2,53)" rx="2" ry="2" />
<text  x="109.33" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 2.04%)</title><rect x="94.3" y="1685" width="24.1" height="15.0" fill="rgb(234,207,2)" rx="2" ry="2" />
<text  x="97.29" y="1695.5" >s..</text>
</g>
<g >
<title>service::storage_proxy::query_result_local (31 samples, 4.52%)</title><rect x="883.8" y="1557" width="53.3" height="15.0" fill="rgb(241,44,48)" rx="2" ry="2" />
<text  x="886.82" y="1567.5" >servi..</text>
</g>
<g >
<title>mutation_reader_merger::operator (50 samples, 7.29%)</title><rect x="245.7" y="1637" width="86.0" height="15.0" fill="rgb(226,145,46)" rx="2" ry="2" />
<text  x="248.66" y="1647.5" >mutation_r..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (7 samples, 1.02%)</title><rect x="797.8" y="1637" width="12.1" height="15.0" fill="rgb(227,95,2)" rx="2" ry="2" />
<text  x="800.81" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (41 samples, 5.98%)</title><rect x="10.0" y="741" width="70.5" height="15.0" fill="rgb(217,206,21)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="56.4" y="293" width="1.8" height="15.0" fill="rgb(251,212,34)" rx="2" ry="2" />
<text  x="59.44" y="303.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="340.3" y="1669" width="3.4" height="15.0" fill="rgb(242,26,24)" rx="2" ry="2" />
<text  x="343.26" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (28 samples, 4.08%)</title><rect x="13.4" y="485" width="48.2" height="15.0" fill="rgb(214,21,20)" rx="2" ry="2" />
<text  x="16.44" y="495.5" >cql3..</text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.15%)</title><rect x="66.8" y="405" width="1.7" height="15.0" fill="rgb(223,161,38)" rx="2" ry="2" />
<text  x="69.76" y="415.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1333" width="74.0" height="15.0" fill="rgb(220,161,18)" rx="2" ry="2" />
<text  x="13.00" y="1343.5" >[unknown]</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (3 samples, 0.44%)</title><rect x="73.6" y="549" width="5.2" height="15.0" fill="rgb(212,32,2)" rx="2" ry="2" />
<text  x="76.64" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.29%)</title><rect x="993.9" y="1653" width="3.4" height="15.0" fill="rgb(215,180,14)" rx="2" ry="2" />
<text  x="996.91" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (5 samples, 0.73%)</title><rect x="109.8" y="1621" width="8.6" height="15.0" fill="rgb(254,205,48)" rx="2" ry="2" />
<text  x="112.77" y="1631.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (3 samples, 0.44%)</title><rect x="149.3" y="1701" width="5.2" height="15.0" fill="rgb(247,158,50)" rx="2" ry="2" />
<text  x="152.33" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.15%)</title><rect x="102.9" y="1349" width="1.7" height="15.0" fill="rgb(253,158,6)" rx="2" ry="2" />
<text  x="105.89" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::~vector (1 samples, 0.15%)</title><rect x="73.6" y="453" width="1.8" height="15.0" fill="rgb(235,113,49)" rx="2" ry="2" />
<text  x="76.64" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="1079.9" y="1733" width="1.7" height="15.0" fill="rgb(252,9,53)" rx="2" ry="2" />
<text  x="1082.91" y="1743.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="102.9" y="1381" width="1.7" height="15.0" fill="rgb(242,85,41)" rx="2" ry="2" />
<text  x="105.89" y="1391.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.15%)</title><rect x="87.4" y="1621" width="1.7" height="15.0" fill="rgb(221,211,22)" rx="2" ry="2" />
<text  x="90.41" y="1631.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.15%)</title><rect x="82.2" y="1205" width="1.8" height="15.0" fill="rgb(212,73,21)" rx="2" ry="2" />
<text  x="85.24" y="1215.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (1 samples, 0.15%)</title><rect x="961.2" y="1589" width="1.7" height="15.0" fill="rgb(250,150,27)" rx="2" ry="2" />
<text  x="964.22" y="1599.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (2 samples, 0.29%)</title><rect x="1040.3" y="1461" width="3.5" height="15.0" fill="rgb(231,14,42)" rx="2" ry="2" />
<text  x="1043.35" y="1471.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.15%)</title><rect x="65.0" y="453" width="1.8" height="15.0" fill="rgb(227,0,46)" rx="2" ry="2" />
<text  x="68.04" y="463.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1237" width="72.2" height="15.0" fill="rgb(231,31,28)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.15%)</title><rect x="78.8" y="469" width="1.7" height="15.0" fill="rgb(232,202,6)" rx="2" ry="2" />
<text  x="81.80" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.15%)</title><rect x="414.2" y="1637" width="1.7" height="15.0" fill="rgb(216,177,41)" rx="2" ry="2" />
<text  x="417.23" y="1647.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.15%)</title><rect x="572.5" y="1701" width="1.7" height="15.0" fill="rgb(210,14,34)" rx="2" ry="2" />
<text  x="575.48" y="1711.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.15%)</title><rect x="753.1" y="1669" width="1.7" height="15.0" fill="rgb(232,54,24)" rx="2" ry="2" />
<text  x="756.09" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="1061" width="72.2" height="15.0" fill="rgb(208,47,54)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" >[unknown]</text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.15%)</title><rect x="324.8" y="1573" width="1.7" height="15.0" fill="rgb(225,191,29)" rx="2" ry="2" />
<text  x="327.78" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.15%)</title><rect x="53.0" y="213" width="1.7" height="15.0" fill="rgb(215,3,50)" rx="2" ry="2" />
<text  x="56.00" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.15%)</title><rect x="1093.7" y="1765" width="1.7" height="15.0" fill="rgb(212,184,33)" rx="2" ry="2" />
<text  x="1096.67" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1669" width="74.0" height="15.0" fill="rgb(228,53,26)" rx="2" ry="2" />
<text  x="13.00" y="1679.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="876.9" y="1573" width="1.8" height="15.0" fill="rgb(253,24,35)" rx="2" ry="2" />
<text  x="879.94" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.15%)</title><rect x="78.8" y="549" width="1.7" height="15.0" fill="rgb(249,58,19)" rx="2" ry="2" />
<text  x="81.80" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.15%)</title><rect x="82.2" y="901" width="1.8" height="15.0" fill="rgb(216,14,9)" rx="2" ry="2" />
<text  x="85.24" y="911.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (44 samples, 6.41%)</title><rect x="684.3" y="1733" width="75.7" height="15.0" fill="rgb(225,4,11)" rx="2" ry="2" />
<text  x="687.29" y="1743.5" >single_n..</text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1781" width="74.0" height="15.0" fill="rgb(208,206,16)" rx="2" ry="2" />
<text  x="13.00" y="1791.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.15%)</title><rect x="82.2" y="1125" width="1.8" height="15.0" fill="rgb(249,167,9)" rx="2" ry="2" />
<text  x="85.24" y="1135.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (1 samples, 0.15%)</title><rect x="1045.5" y="1557" width="1.7" height="15.0" fill="rgb(248,222,8)" rx="2" ry="2" />
<text  x="1048.51" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1445" width="74.0" height="15.0" fill="rgb(213,40,50)" rx="2" ry="2" />
<text  x="13.00" y="1455.5" >[unknown]</text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (4 samples, 0.58%)</title><rect x="765.1" y="1669" width="6.9" height="15.0" fill="rgb(247,119,36)" rx="2" ry="2" />
<text  x="768.13" y="1679.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (6 samples, 0.87%)</title><rect x="761.7" y="1733" width="10.3" height="15.0" fill="rgb(229,124,38)" rx="2" ry="2" />
<text  x="764.69" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::batch_statement, std::default_delete&lt;cql3::statements::raw::batch_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.15%)</title><rect x="58.2" y="437" width="1.7" height="15.0" fill="rgb(254,126,2)" rx="2" ry="2" />
<text  x="61.16" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (3 samples, 0.44%)</title><rect x="701.5" y="1701" width="5.1" height="15.0" fill="rgb(245,112,49)" rx="2" ry="2" />
<text  x="704.49" y="1711.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.15%)</title><rect x="596.6" y="1685" width="1.7" height="15.0" fill="rgb(248,118,33)" rx="2" ry="2" />
<text  x="599.56" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.73%)</title><rect x="1040.3" y="1653" width="8.7" height="15.0" fill="rgb(224,90,15)" rx="2" ry="2" />
<text  x="1043.35" y="1663.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (10 samples, 1.46%)</title><rect x="911.3" y="1509" width="17.2" height="15.0" fill="rgb(211,187,44)" rx="2" ry="2" />
<text  x="914.34" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.15%)</title><rect x="70.2" y="293" width="1.7" height="15.0" fill="rgb(229,132,40)" rx="2" ry="2" />
<text  x="73.20" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.15%)</title><rect x="333.4" y="1685" width="1.7" height="15.0" fill="rgb(219,101,3)" rx="2" ry="2" />
<text  x="336.38" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 6.27%)</title><rect x="10.0" y="1541" width="74.0" height="15.0" fill="rgb(216,69,3)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" >[unknown]</text>
</g>
<g >
<title>create_partitions (32 samples, 4.66%)</title><rect x="10.0" y="581" width="55.0" height="15.0" fill="rgb(219,28,7)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >creat..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_cql (1 samples, 0.15%)</title><rect x="620.6" y="1749" width="1.8" height="15.0" fill="rgb(232,80,49)" rx="2" ry="2" />
<text  x="623.64" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (4 samples, 0.58%)</title><rect x="65.0" y="661" width="6.9" height="15.0" fill="rgb(238,96,13)" rx="2" ry="2" />
<text  x="68.04" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.15%)</title><rect x="104.6" y="1525" width="1.7" height="15.0" fill="rgb(245,82,10)" rx="2" ry="2" />
<text  x="107.61" y="1535.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.15%)</title><rect x="78.8" y="709" width="1.7" height="15.0" fill="rgb(220,216,21)" rx="2" ry="2" />
<text  x="81.80" y="719.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.15%)</title><rect x="80.5" y="677" width="1.7" height="15.0" fill="rgb(211,177,26)" rx="2" ry="2" />
<text  x="83.52" y="687.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.15%)</title><rect x="92.6" y="1749" width="1.7" height="15.0" fill="rgb(226,204,52)" rx="2" ry="2" />
<text  x="95.57" y="1759.5" ></text>
</g>
<g >
<title>create_partitions (5 samples, 0.73%)</title><rect x="84.0" y="1749" width="8.6" height="15.0" fill="rgb(215,210,16)" rx="2" ry="2" />
<text  x="86.97" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.15%)</title><rect x="1019.7" y="1653" width="1.7" height="15.0" fill="rgb(216,183,44)" rx="2" ry="2" />
<text  x="1022.71" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.15%)</title><rect x="453.8" y="1621" width="1.7" height="15.0" fill="rgb(230,73,45)" rx="2" ry="2" />
<text  x="456.79" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (15 samples, 2.19%)</title><rect x="92.6" y="1829" width="25.8" height="15.0" fill="rgb(211,49,29)" rx="2" ry="2" />
<text  x="95.57" y="1839.5" >s..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.15%)</title><rect x="840.8" y="1637" width="1.7" height="15.0" fill="rgb(207,139,1)" rx="2" ry="2" />
<text  x="843.82" y="1647.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.15%)</title><rect x="80.5" y="613" width="1.7" height="15.0" fill="rgb(210,108,19)" rx="2" ry="2" />
<text  x="83.52" y="623.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.58%)</title><rect x="359.2" y="1621" width="6.9" height="15.0" fill="rgb(251,135,26)" rx="2" ry="2" />
<text  x="362.18" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.15%)</title><rect x="37.5" y="357" width="1.7" height="15.0" fill="rgb(250,14,32)" rx="2" ry="2" />
<text  x="40.52" y="367.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.15%)</title><rect x="926.8" y="1477" width="1.7" height="15.0" fill="rgb(205,112,45)" rx="2" ry="2" />
<text  x="929.82" y="1487.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.15%)</title><rect x="41.0" y="261" width="1.7" height="15.0" fill="rgb(233,102,14)" rx="2" ry="2" />
<text  x="43.96" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.15%)</title><rect x="102.9" y="1477" width="1.7" height="15.0" fill="rgb(205,166,47)" rx="2" ry="2" />
<text  x="105.89" y="1487.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::raw::batch_statement*, std::default_delete&lt;cql3::statements::raw::batch_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.15%)</title><rect x="58.2" y="405" width="1.7" height="15.0" fill="rgb(207,158,1)" rx="2" ry="2" />
<text  x="61.16" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.15%)</title><rect x="799.5" y="1589" width="1.8" height="15.0" fill="rgb(247,111,28)" rx="2" ry="2" />
<text  x="802.53" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (42 samples, 6.12%)</title><rect x="10.0" y="965" width="72.2" height="15.0" fill="rgb(217,136,24)" rx="2" ry="2" />
<text  x="13.00" y="975.5" >[unknown]</text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="548.4" y="1589" width="3.4" height="15.0" fill="rgb(249,156,53)" rx="2" ry="2" />
<text  x="551.40" y="1599.5" ></text>
</g>
</g>
</svg>
