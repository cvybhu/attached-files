<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="742.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="725" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="725" > </text>
<g id="frames">
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="857.9" y="373" width="1.6" height="15.0" fill="rgb(227,193,17)" rx="2" ry="2" />
<text  x="860.86" y="383.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="1071.5" y="517" width="1.7" height="15.0" fill="rgb(210,91,39)" rx="2" ry="2" />
<text  x="1074.50" y="527.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (29 samples, 4.10%)</title><rect x="737.7" y="453" width="48.4" height="15.0" fill="rgb(245,187,26)" rx="2" ry="2" />
<text  x="740.69" y="463.5" >serv..</text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (3 samples, 0.42%)</title><rect x="43.4" y="309" width="5.0" height="15.0" fill="rgb(252,225,41)" rx="2" ry="2" />
<text  x="46.38" y="319.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.42%)</title><rect x="475.7" y="405" width="5.0" height="15.0" fill="rgb(251,4,25)" rx="2" ry="2" />
<text  x="478.66" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (2 samples, 0.28%)</title><rect x="357.2" y="373" width="3.3" height="15.0" fill="rgb(252,208,27)" rx="2" ry="2" />
<text  x="360.16" y="383.5" ></text>
</g>
<g >
<title>row_cache::invalidate (1 samples, 0.14%)</title><rect x="664.3" y="501" width="1.6" height="15.0" fill="rgb(214,64,40)" rx="2" ry="2" />
<text  x="667.26" y="511.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (30 samples, 4.24%)</title><rect x="934.6" y="373" width="50.1" height="15.0" fill="rgb(241,63,27)" rx="2" ry="2" />
<text  x="937.64" y="383.5" >servi..</text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.14%)</title><rect x="36.7" y="277" width="1.7" height="15.0" fill="rgb(215,136,21)" rx="2" ry="2" />
<text  x="39.70" y="287.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.28%)</title><rect x="472.3" y="421" width="3.4" height="15.0" fill="rgb(235,78,4)" rx="2" ry="2" />
<text  x="475.32" y="431.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.14%)</title><rect x="784.4" y="421" width="1.7" height="15.0" fill="rgb(238,221,26)" rx="2" ry="2" />
<text  x="787.43" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.28%)</title><rect x="65.1" y="165" width="3.3" height="15.0" fill="rgb(206,220,47)" rx="2" ry="2" />
<text  x="68.08" y="175.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.14%)</title><rect x="68.4" y="261" width="1.7" height="15.0" fill="rgb(220,9,45)" rx="2" ry="2" />
<text  x="71.42" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.14%)</title><rect x="105.1" y="309" width="1.7" height="15.0" fill="rgb(230,188,51)" rx="2" ry="2" />
<text  x="108.13" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.14%)</title><rect x="85.1" y="245" width="1.7" height="15.0" fill="rgb(221,64,19)" rx="2" ry="2" />
<text  x="88.11" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.14%)</title><rect x="662.6" y="517" width="1.7" height="15.0" fill="rgb(249,88,27)" rx="2" ry="2" />
<text  x="665.59" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (53 samples, 7.50%)</title><rect x="277.0" y="389" width="88.5" height="15.0" fill="rgb(221,3,50)" rx="2" ry="2" />
<text  x="280.04" y="399.5" >partition_..</text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (4 samples, 0.57%)</title><rect x="26.7" y="453" width="6.7" height="15.0" fill="rgb(239,180,36)" rx="2" ry="2" />
<text  x="29.69" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.14%)</title><rect x="1056.5" y="373" width="1.6" height="15.0" fill="rgb(205,224,33)" rx="2" ry="2" />
<text  x="1059.48" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.14%)</title><rect x="55.1" y="309" width="1.6" height="15.0" fill="rgb(232,201,27)" rx="2" ry="2" />
<text  x="58.06" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (8 samples, 1.13%)</title><rect x="665.9" y="533" width="13.4" height="15.0" fill="rgb(234,57,13)" rx="2" ry="2" />
<text  x="668.93" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="105.1" y="229" width="1.7" height="15.0" fill="rgb(234,152,39)" rx="2" ry="2" />
<text  x="108.13" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_view_statement, std::default_delete&lt;cql3::statements::create_view_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_view_statement&gt;, void&gt; (1 samples, 0.14%)</title><rect x="115.1" y="421" width="1.7" height="15.0" fill="rgb(225,114,10)" rx="2" ry="2" />
<text  x="118.15" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.14%)</title><rect x="138.5" y="613" width="1.7" height="15.0" fill="rgb(213,77,31)" rx="2" ry="2" />
<text  x="141.51" y="623.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.14%)</title><rect x="577.5" y="405" width="1.6" height="15.0" fill="rgb(230,205,51)" rx="2" ry="2" />
<text  x="580.47" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (2 samples, 0.28%)</title><rect x="288.7" y="357" width="3.4" height="15.0" fill="rgb(224,193,22)" rx="2" ry="2" />
<text  x="291.73" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.14%)</title><rect x="61.7" y="197" width="1.7" height="15.0" fill="rgb(226,161,41)" rx="2" ry="2" />
<text  x="64.74" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="108.5" y="373" width="1.6" height="15.0" fill="rgb(241,0,49)" rx="2" ry="2" />
<text  x="111.47" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.14%)</title><rect x="96.8" y="261" width="1.7" height="15.0" fill="rgb(213,116,32)" rx="2" ry="2" />
<text  x="99.79" y="271.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.42%)</title><rect x="370.5" y="453" width="5.0" height="15.0" fill="rgb(254,211,34)" rx="2" ry="2" />
<text  x="373.51" y="463.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (4 samples, 0.57%)</title><rect x="447.3" y="437" width="6.7" height="15.0" fill="rgb(221,129,8)" rx="2" ry="2" />
<text  x="450.28" y="447.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (2 samples, 0.28%)</title><rect x="20.0" y="533" width="3.4" height="15.0" fill="rgb(208,63,52)" rx="2" ry="2" />
<text  x="23.01" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="105.1" y="213" width="1.7" height="15.0" fill="rgb(234,46,22)" rx="2" ry="2" />
<text  x="108.13" y="223.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (7 samples, 0.99%)</title><rect x="549.1" y="421" width="11.7" height="15.0" fill="rgb(253,116,33)" rx="2" ry="2" />
<text  x="552.09" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (2 samples, 0.28%)</title><rect x="15.0" y="549" width="3.3" height="15.0" fill="rgb(254,37,4)" rx="2" ry="2" />
<text  x="18.01" y="559.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (1 samples, 0.14%)</title><rect x="614.2" y="533" width="1.7" height="15.0" fill="rgb(235,134,46)" rx="2" ry="2" />
<text  x="617.19" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.14%)</title><rect x="824.5" y="341" width="1.7" height="15.0" fill="rgb(209,54,0)" rx="2" ry="2" />
<text  x="827.48" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;cql3::expr::expression*, cql3::expr::expression&gt; (1 samples, 0.14%)</title><rect x="100.1" y="325" width="1.7" height="15.0" fill="rgb(221,177,25)" rx="2" ry="2" />
<text  x="103.13" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="612.5" y="501" width="1.7" height="15.0" fill="rgb(206,92,28)" rx="2" ry="2" />
<text  x="615.52" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (54 samples, 7.64%)</title><rect x="275.4" y="405" width="90.1" height="15.0" fill="rgb(221,125,43)" rx="2" ry="2" />
<text  x="278.37" y="415.5" >partition_..</text>
</g>
<g >
<title>mutation_reader_merger::close (11 samples, 1.56%)</title><rect x="467.3" y="437" width="18.4" height="15.0" fill="rgb(230,39,27)" rx="2" ry="2" />
<text  x="470.31" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="889.6" y="437" width="1.6" height="15.0" fill="rgb(241,39,22)" rx="2" ry="2" />
<text  x="892.58" y="447.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.57%)</title><rect x="1098.2" y="661" width="6.7" height="15.0" fill="rgb(240,216,51)" rx="2" ry="2" />
<text  x="1101.20" y="671.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="55.1" y="341" width="1.6" height="15.0" fill="rgb(230,28,6)" rx="2" ry="2" />
<text  x="58.06" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.14%)</title><rect x="36.7" y="261" width="1.7" height="15.0" fill="rgb(241,158,53)" rx="2" ry="2" />
<text  x="39.70" y="271.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.14%)</title><rect x="18.3" y="533" width="1.7" height="15.0" fill="rgb(213,214,53)" rx="2" ry="2" />
<text  x="21.35" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.14%)</title><rect x="106.8" y="293" width="1.7" height="15.0" fill="rgb(209,203,48)" rx="2" ry="2" />
<text  x="109.80" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::has_eq_null (1 samples, 0.14%)</title><rect x="822.8" y="405" width="1.7" height="15.0" fill="rgb(211,208,41)" rx="2" ry="2" />
<text  x="825.81" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.14%)</title><rect x="826.2" y="341" width="1.6" height="15.0" fill="rgb(245,48,26)" rx="2" ry="2" />
<text  x="829.15" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="290.4" y="325" width="1.7" height="15.0" fill="rgb(223,216,30)" rx="2" ry="2" />
<text  x="293.40" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.14%)</title><rect x="98.5" y="165" width="1.6" height="15.0" fill="rgb(213,115,32)" rx="2" ry="2" />
<text  x="101.46" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::update_statement&gt;, void&gt; (1 samples, 0.14%)</title><rect x="108.5" y="389" width="1.6" height="15.0" fill="rgb(218,4,17)" rx="2" ry="2" />
<text  x="111.47" y="399.5" ></text>
</g>
<g >
<title>memtable::apply (2 samples, 0.28%)</title><rect x="1049.8" y="405" width="3.3" height="15.0" fill="rgb(227,166,44)" rx="2" ry="2" />
<text  x="1052.80" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_permissions_statement, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::list_permissions_statement&gt;, void&gt; (1 samples, 0.14%)</title><rect x="118.5" y="421" width="1.7" height="15.0" fill="rgb(215,56,6)" rx="2" ry="2" />
<text  x="121.49" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.14%)</title><rect x="295.4" y="341" width="1.7" height="15.0" fill="rgb(207,69,39)" rx="2" ry="2" />
<text  x="298.40" y="351.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.14%)</title><rect x="41.7" y="309" width="1.7" height="15.0" fill="rgb(239,203,30)" rx="2" ry="2" />
<text  x="44.71" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="595.8" y="485" width="1.7" height="15.0" fill="rgb(240,107,51)" rx="2" ry="2" />
<text  x="598.83" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.28%)</title><rect x="215.3" y="485" width="3.3" height="15.0" fill="rgb(251,100,21)" rx="2" ry="2" />
<text  x="218.29" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (3 samples, 0.42%)</title><rect x="26.7" y="437" width="5.0" height="15.0" fill="rgb(238,184,20)" rx="2" ry="2" />
<text  x="29.69" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.14%)</title><rect x="81.8" y="293" width="1.6" height="15.0" fill="rgb(215,221,17)" rx="2" ry="2" />
<text  x="84.77" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.14%)</title><rect x="40.0" y="293" width="1.7" height="15.0" fill="rgb(228,153,23)" rx="2" ry="2" />
<text  x="43.04" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.14%)</title><rect x="85.1" y="261" width="1.7" height="15.0" fill="rgb(209,183,43)" rx="2" ry="2" />
<text  x="88.11" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (72 samples, 10.18%)</title><rect x="11.7" y="597" width="120.1" height="15.0" fill="rgb(231,107,51)" rx="2" ry="2" />
<text  x="14.67" y="607.5" >seastar::nonco..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="931.3" y="341" width="1.7" height="15.0" fill="rgb(240,53,7)" rx="2" ry="2" />
<text  x="934.30" y="351.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="692.6" y="517" width="1.7" height="15.0" fill="rgb(207,78,44)" rx="2" ry="2" />
<text  x="695.63" y="527.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (125 samples, 17.68%)</title><rect x="839.5" y="469" width="208.6" height="15.0" fill="rgb(243,213,38)" rx="2" ry="2" />
<text  x="842.50" y="479.5" >cql3::statements::select_st..</text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="771.1" y="405" width="1.6" height="15.0" fill="rgb(205,160,31)" rx="2" ry="2" />
<text  x="774.07" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="549.1" y="389" width="1.7" height="15.0" fill="rgb(232,174,33)" rx="2" ry="2" />
<text  x="552.09" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.14%)</title><rect x="36.7" y="245" width="1.7" height="15.0" fill="rgb(253,43,53)" rx="2" ry="2" />
<text  x="39.70" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (4 samples, 0.57%)</title><rect x="41.7" y="357" width="6.7" height="15.0" fill="rgb(249,192,15)" rx="2" ry="2" />
<text  x="44.71" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.14%)</title><rect x="153.5" y="517" width="1.7" height="15.0" fill="rgb(253,8,3)" rx="2" ry="2" />
<text  x="156.54" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (8 samples, 1.13%)</title><rect x="36.7" y="405" width="13.4" height="15.0" fill="rgb(228,227,36)" rx="2" ry="2" />
<text  x="39.70" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.14%)</title><rect x="664.3" y="533" width="1.6" height="15.0" fill="rgb(219,111,34)" rx="2" ry="2" />
<text  x="667.26" y="543.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="98.5" y="261" width="1.6" height="15.0" fill="rgb(253,80,45)" rx="2" ry="2" />
<text  x="101.46" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.14%)</title><rect x="36.7" y="213" width="1.7" height="15.0" fill="rgb(217,158,41)" rx="2" ry="2" />
<text  x="39.70" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="98.5" y="181" width="1.6" height="15.0" fill="rgb(219,66,33)" rx="2" ry="2" />
<text  x="101.46" y="191.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.14%)</title><rect x="989.7" y="373" width="1.7" height="15.0" fill="rgb(218,215,51)" rx="2" ry="2" />
<text  x="992.72" y="383.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (1 samples, 0.14%)</title><rect x="1053.1" y="405" width="1.7" height="15.0" fill="rgb(206,208,42)" rx="2" ry="2" />
<text  x="1056.14" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="953.0" y="309" width="1.7" height="15.0" fill="rgb(245,169,48)" rx="2" ry="2" />
<text  x="956.00" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.28%)</title><rect x="38.4" y="309" width="3.3" height="15.0" fill="rgb(231,107,9)" rx="2" ry="2" />
<text  x="41.37" y="319.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.14%)</title><rect x="16.7" y="437" width="1.6" height="15.0" fill="rgb(220,221,16)" rx="2" ry="2" />
<text  x="19.68" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="93.5" y="325" width="1.6" height="15.0" fill="rgb(222,1,26)" rx="2" ry="2" />
<text  x="96.45" y="335.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.14%)</title><rect x="138.5" y="597" width="1.7" height="15.0" fill="rgb(233,181,28)" rx="2" ry="2" />
<text  x="141.51" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (14 samples, 1.98%)</title><rect x="467.3" y="469" width="23.4" height="15.0" fill="rgb(221,6,32)" rx="2" ry="2" />
<text  x="470.31" y="479.5" >s..</text>
</g>
<g >
<title>table::apply (3 samples, 0.42%)</title><rect x="1049.8" y="421" width="5.0" height="15.0" fill="rgb(208,146,37)" rx="2" ry="2" />
<text  x="1052.80" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.28%)</title><rect x="654.2" y="501" width="3.4" height="15.0" fill="rgb(222,98,25)" rx="2" ry="2" />
<text  x="657.24" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.14%)</title><rect x="93.5" y="229" width="1.6" height="15.0" fill="rgb(219,9,37)" rx="2" ry="2" />
<text  x="96.45" y="239.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.14%)</title><rect x="664.3" y="421" width="1.6" height="15.0" fill="rgb(209,135,17)" rx="2" ry="2" />
<text  x="667.26" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_table_statement, std::default_delete&lt;cql3::statements::alter_table_statement&gt; &gt;::_M_ptr (1 samples, 0.14%)</title><rect x="113.5" y="405" width="1.6" height="15.0" fill="rgb(212,168,11)" rx="2" ry="2" />
<text  x="116.48" y="415.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (4 samples, 0.57%)</title><rect x="724.3" y="469" width="6.7" height="15.0" fill="rgb(207,172,15)" rx="2" ry="2" />
<text  x="727.34" y="479.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.14%)</title><rect x="80.1" y="277" width="1.7" height="15.0" fill="rgb(211,18,54)" rx="2" ry="2" />
<text  x="83.10" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.14%)</title><rect x="101.8" y="309" width="1.7" height="15.0" fill="rgb(252,108,52)" rx="2" ry="2" />
<text  x="104.80" y="319.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.28%)</title><rect x="492.3" y="469" width="3.4" height="15.0" fill="rgb(241,136,11)" rx="2" ry="2" />
<text  x="495.35" y="479.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.28%)</title><rect x="292.1" y="357" width="3.3" height="15.0" fill="rgb(234,21,36)" rx="2" ry="2" />
<text  x="295.07" y="367.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (59 samples, 8.35%)</title><rect x="368.8" y="469" width="98.5" height="15.0" fill="rgb(212,185,3)" rx="2" ry="2" />
<text  x="371.84" y="479.5" >query::cons..</text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.14%)</title><rect x="232.0" y="485" width="1.6" height="15.0" fill="rgb(221,124,14)" rx="2" ry="2" />
<text  x="234.98" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (4 samples, 0.57%)</title><rect x="1029.8" y="453" width="6.6" height="15.0" fill="rgb(206,62,46)" rx="2" ry="2" />
<text  x="1032.77" y="463.5" ></text>
</g>
<g >
<title>seastar::app_template::run (573 samples, 81.05%)</title><rect x="140.2" y="613" width="956.3" height="15.0" fill="rgb(250,196,49)" rx="2" ry="2" />
<text  x="143.18" y="623.5" >seastar::app_template::run</text>
</g>
<g >
<title>cql3::constants::setter::execute (1 samples, 0.14%)</title><rect x="824.5" y="373" width="1.7" height="15.0" fill="rgb(247,197,38)" rx="2" ry="2" />
<text  x="827.48" y="383.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.28%)</title><rect x="565.8" y="437" width="3.3" height="15.0" fill="rgb(218,23,46)" rx="2" ry="2" />
<text  x="568.79" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.14%)</title><rect x="18.3" y="581" width="1.7" height="15.0" fill="rgb(233,197,35)" rx="2" ry="2" />
<text  x="21.35" y="591.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.14%)</title><rect x="56.7" y="181" width="1.7" height="15.0" fill="rgb(209,134,19)" rx="2" ry="2" />
<text  x="59.73" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="66.7" y="101" width="1.7" height="15.0" fill="rgb(236,47,54)" rx="2" ry="2" />
<text  x="69.75" y="111.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.28%)</title><rect x="512.4" y="421" width="3.3" height="15.0" fill="rgb(211,124,36)" rx="2" ry="2" />
<text  x="515.38" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="1001.4" y="373" width="1.7" height="15.0" fill="rgb(225,17,33)" rx="2" ry="2" />
<text  x="1004.40" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.14%)</title><rect x="36.7" y="197" width="1.7" height="15.0" fill="rgb(248,204,19)" rx="2" ry="2" />
<text  x="39.70" y="207.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (1 samples, 0.14%)</title><rect x="821.1" y="405" width="1.7" height="15.0" fill="rgb(231,215,23)" rx="2" ry="2" />
<text  x="824.15" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="61.7" y="261" width="1.7" height="15.0" fill="rgb(249,52,22)" rx="2" ry="2" />
<text  x="64.74" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="687.6" y="501" width="1.7" height="15.0" fill="rgb(224,16,4)" rx="2" ry="2" />
<text  x="690.62" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.28%)</title><rect x="65.1" y="341" width="3.3" height="15.0" fill="rgb(210,96,27)" rx="2" ry="2" />
<text  x="68.08" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.14%)</title><rect x="664.3" y="405" width="1.6" height="15.0" fill="rgb(227,32,53)" rx="2" ry="2" />
<text  x="667.26" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="515.7" y="421" width="1.7" height="15.0" fill="rgb(248,174,23)" rx="2" ry="2" />
<text  x="518.71" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_M_ptr (1 samples, 0.14%)</title><rect x="103.5" y="293" width="1.6" height="15.0" fill="rgb(236,206,17)" rx="2" ry="2" />
<text  x="106.47" y="303.5" ></text>
</g>
<g >
<title>database::has_keyspace (2 samples, 0.28%)</title><rect x="807.8" y="469" width="3.3" height="15.0" fill="rgb(251,146,50)" rx="2" ry="2" />
<text  x="810.79" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="917.9" y="357" width="1.7" height="15.0" fill="rgb(253,201,53)" rx="2" ry="2" />
<text  x="920.95" y="367.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.14%)</title><rect x="580.8" y="405" width="1.7" height="15.0" fill="rgb(244,209,54)" rx="2" ry="2" />
<text  x="583.81" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.14%)</title><rect x="61.7" y="357" width="1.7" height="15.0" fill="rgb(241,156,2)" rx="2" ry="2" />
<text  x="64.74" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (4 samples, 0.57%)</title><rect x="307.1" y="325" width="6.7" height="15.0" fill="rgb(230,6,33)" rx="2" ry="2" />
<text  x="310.09" y="335.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.42%)</title><rect x="652.6" y="517" width="5.0" height="15.0" fill="rgb(222,33,25)" rx="2" ry="2" />
<text  x="655.57" y="527.5" ></text>
</g>
<g >
<title>query::querier&lt; (140 samples, 19.80%)</title><rect x="233.6" y="485" width="233.7" height="15.0" fill="rgb(233,186,39)" rx="2" ry="2" />
<text  x="236.65" y="495.5" >query::querier&lt;</text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.14%)</title><rect x="532.4" y="421" width="1.7" height="15.0" fill="rgb(208,202,47)" rx="2" ry="2" />
<text  x="535.40" y="431.5" ></text>
</g>
<g >
<title>compound_type&lt; (1 samples, 0.14%)</title><rect x="827.8" y="389" width="1.7" height="15.0" fill="rgb(214,73,1)" rx="2" ry="2" />
<text  x="830.82" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="105.1" y="277" width="1.7" height="15.0" fill="rgb(248,148,18)" rx="2" ry="2" />
<text  x="108.13" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (2 samples, 0.28%)</title><rect x="1093.2" y="517" width="3.3" height="15.0" fill="rgb(212,147,29)" rx="2" ry="2" />
<text  x="1096.20" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.14%)</title><rect x="95.1" y="293" width="1.7" height="15.0" fill="rgb(252,127,17)" rx="2" ry="2" />
<text  x="98.12" y="303.5" ></text>
</g>
<g >
<title>database::find_keyspace (3 samples, 0.42%)</title><rect x="994.7" y="373" width="5.0" height="15.0" fill="rgb(247,147,36)" rx="2" ry="2" />
<text  x="997.72" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (7 samples, 0.99%)</title><rect x="817.8" y="437" width="11.7" height="15.0" fill="rgb(254,129,2)" rx="2" ry="2" />
<text  x="820.81" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~_Vector_base (1 samples, 0.14%)</title><rect x="78.4" y="293" width="1.7" height="15.0" fill="rgb(228,77,21)" rx="2" ry="2" />
<text  x="81.43" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.14%)</title><rect x="599.2" y="485" width="1.6" height="15.0" fill="rgb(249,68,2)" rx="2" ry="2" />
<text  x="602.17" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.14%)</title><rect x="642.6" y="517" width="1.6" height="15.0" fill="rgb(238,56,41)" rx="2" ry="2" />
<text  x="645.56" y="527.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (5 samples, 0.71%)</title><rect x="26.7" y="485" width="8.3" height="15.0" fill="rgb(242,53,8)" rx="2" ry="2" />
<text  x="29.69" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.57%)</title><rect x="76.8" y="341" width="6.6" height="15.0" fill="rgb(235,6,7)" rx="2" ry="2" />
<text  x="79.76" y="351.5" ></text>
</g>
<g >
<title>[unknown] (73 samples, 10.33%)</title><rect x="11.7" y="645" width="121.8" height="15.0" fill="rgb(210,208,50)" rx="2" ry="2" />
<text  x="14.67" y="655.5" >[unknown]</text>
</g>
<g >
<title>validation::validate_cql_key (1 samples, 0.14%)</title><rect x="827.8" y="405" width="1.7" height="15.0" fill="rgb(243,29,20)" rx="2" ry="2" />
<text  x="830.82" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (2 samples, 0.28%)</title><rect x="826.2" y="421" width="3.3" height="15.0" fill="rgb(236,122,20)" rx="2" ry="2" />
<text  x="829.15" y="431.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (59 samples, 8.35%)</title><rect x="712.7" y="501" width="98.4" height="15.0" fill="rgb(208,45,49)" rx="2" ry="2" />
<text  x="715.66" y="511.5" >single_node..</text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="897.9" y="405" width="1.7" height="15.0" fill="rgb(223,101,45)" rx="2" ry="2" />
<text  x="900.92" y="415.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.28%)</title><rect x="362.2" y="373" width="3.3" height="15.0" fill="rgb(248,125,36)" rx="2" ry="2" />
<text  x="365.16" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.14%)</title><rect x="824.5" y="325" width="1.7" height="15.0" fill="rgb(245,116,3)" rx="2" ry="2" />
<text  x="827.48" y="335.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (3 samples, 0.42%)</title><rect x="944.7" y="325" width="5.0" height="15.0" fill="rgb(221,167,4)" rx="2" ry="2" />
<text  x="947.65" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.14%)</title><rect x="91.8" y="325" width="1.7" height="15.0" fill="rgb(222,106,54)" rx="2" ry="2" />
<text  x="94.78" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="61.7" y="229" width="1.7" height="15.0" fill="rgb(227,118,7)" rx="2" ry="2" />
<text  x="64.74" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::select_statement, std::default_delete&lt;cql3::statements::raw::select_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.14%)</title><rect x="110.1" y="421" width="1.7" height="15.0" fill="rgb(211,226,44)" rx="2" ry="2" />
<text  x="113.14" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.14%)</title><rect x="724.3" y="437" width="1.7" height="15.0" fill="rgb(221,119,52)" rx="2" ry="2" />
<text  x="727.34" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (3 samples, 0.42%)</title><rect x="1088.2" y="533" width="5.0" height="15.0" fill="rgb(236,23,13)" rx="2" ry="2" />
<text  x="1091.19" y="543.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (1 samples, 0.14%)</title><rect x="108.5" y="405" width="1.6" height="15.0" fill="rgb(218,146,11)" rx="2" ry="2" />
<text  x="111.47" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.14%)</title><rect x="13.3" y="533" width="1.7" height="15.0" fill="rgb(241,122,4)" rx="2" ry="2" />
<text  x="16.34" y="543.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.42%)</title><rect x="928.0" y="373" width="5.0" height="15.0" fill="rgb(215,98,4)" rx="2" ry="2" />
<text  x="930.96" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.14%)</title><rect x="55.1" y="373" width="1.6" height="15.0" fill="rgb(211,222,32)" rx="2" ry="2" />
<text  x="58.06" y="383.5" ></text>
</g>
<g >
<title>_dl_map_object (1 samples, 0.14%)</title><rect x="1096.5" y="661" width="1.7" height="15.0" fill="rgb(208,152,36)" rx="2" ry="2" />
<text  x="1099.53" y="671.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (1 samples, 0.14%)</title><rect x="824.5" y="405" width="1.7" height="15.0" fill="rgb(241,148,41)" rx="2" ry="2" />
<text  x="827.48" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_state (1 samples, 0.14%)</title><rect x="53.4" y="389" width="1.7" height="15.0" fill="rgb(241,153,32)" rx="2" ry="2" />
<text  x="56.39" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="121.8" y="405" width="1.7" height="15.0" fill="rgb(233,86,27)" rx="2" ry="2" />
<text  x="124.82" y="415.5" ></text>
</g>
<g >
<title>service::client_state::has_access (3 samples, 0.42%)</title><rect x="123.5" y="469" width="5.0" height="15.0" fill="rgb(239,164,34)" rx="2" ry="2" />
<text  x="126.49" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::list_permissions_statement, std::default_delete&lt;cql3::statements::list_permissions_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.14%)</title><rect x="118.5" y="405" width="1.7" height="15.0" fill="rgb(211,38,5)" rx="2" ry="2" />
<text  x="121.49" y="415.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.28%)</title><rect x="761.1" y="373" width="3.3" height="15.0" fill="rgb(211,7,18)" rx="2" ry="2" />
<text  x="764.06" y="383.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS4_12restrictionsL11has_eq_nullERKNS4_13query_optionsERKNS5_10expressionEE3$_8EES8_SI_T_EUlRS7_E_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_8constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_11conjunctionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_12column_valueEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_5tokenEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13function_callEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4castEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_15field_selectionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4nullEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13bind_variableEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_16untyped_constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_17tuple_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_22collection_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSR_S6_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_S1V_SN_S1Z_S23_S27_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES2C_S2F_ (1 samples, 0.14%)</title><rect x="822.8" y="389" width="1.7" height="15.0" fill="rgb(248,138,25)" rx="2" ry="2" />
<text  x="825.81" y="399.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.14%)</title><rect x="88.4" y="229" width="1.7" height="15.0" fill="rgb(247,93,38)" rx="2" ry="2" />
<text  x="91.44" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (2 samples, 0.28%)</title><rect x="1054.8" y="405" width="3.3" height="15.0" fill="rgb(235,125,9)" rx="2" ry="2" />
<text  x="1057.81" y="415.5" ></text>
</g>
<g >
<title>database::has_keyspace (2 samples, 0.28%)</title><rect x="781.1" y="421" width="3.3" height="15.0" fill="rgb(237,106,53)" rx="2" ry="2" />
<text  x="784.09" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (20 samples, 2.83%)</title><rect x="322.1" y="309" width="33.4" height="15.0" fill="rgb(212,202,30)" rx="2" ry="2" />
<text  x="325.11" y="319.5" >co..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="56.7" y="245" width="1.7" height="15.0" fill="rgb(224,192,15)" rx="2" ry="2" />
<text  x="59.73" y="255.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (26 samples, 3.68%)</title><rect x="938.0" y="341" width="43.4" height="15.0" fill="rgb(211,184,16)" rx="2" ry="2" />
<text  x="940.98" y="351.5" >serv..</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (53 samples, 7.50%)</title><rect x="35.0" y="485" width="88.5" height="15.0" fill="rgb(214,150,11)" rx="2" ry="2" />
<text  x="38.04" y="495.5" >cql3::util..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.14%)</title><rect x="61.7" y="341" width="1.7" height="15.0" fill="rgb(252,127,10)" rx="2" ry="2" />
<text  x="64.74" y="351.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.14%)</title><rect x="58.4" y="357" width="1.7" height="15.0" fill="rgb(251,90,54)" rx="2" ry="2" />
<text  x="61.40" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (8 samples, 1.13%)</title><rect x="36.7" y="389" width="13.4" height="15.0" fill="rgb(235,72,20)" rx="2" ry="2" />
<text  x="39.70" y="399.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (73 samples, 10.33%)</title><rect x="245.3" y="437" width="121.9" height="15.0" fill="rgb(217,136,37)" rx="2" ry="2" />
<text  x="248.33" y="447.5" >merging_reader&lt;..</text>
</g>
<g >
<title>flush_reader::fill_buffer (4 samples, 0.57%)</title><rect x="11.7" y="581" width="6.6" height="15.0" fill="rgb(241,38,3)" rx="2" ry="2" />
<text  x="14.67" y="591.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (82 samples, 11.60%)</title><rect x="892.9" y="421" width="136.9" height="15.0" fill="rgb(228,6,27)" rx="2" ry="2" />
<text  x="895.91" y="431.5" >service::storage_..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.14%)</title><rect x="58.4" y="373" width="1.7" height="15.0" fill="rgb(243,125,23)" rx="2" ry="2" />
<text  x="61.40" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="61.7" y="277" width="1.7" height="15.0" fill="rgb(250,13,34)" rx="2" ry="2" />
<text  x="64.74" y="287.5" ></text>
</g>
<g >
<title>cql3::prepare_context::set_bound_variables (1 samples, 0.14%)</title><rect x="35.0" y="437" width="1.7" height="15.0" fill="rgb(247,196,45)" rx="2" ry="2" />
<text  x="38.04" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (36 samples, 5.09%)</title><rect x="731.0" y="469" width="60.1" height="15.0" fill="rgb(224,184,34)" rx="2" ry="2" />
<text  x="734.02" y="479.5" >cql3::..</text>
</g>
<g >
<title>cql3::keyspace_element_name::set_keyspace (1 samples, 0.14%)</title><rect x="23.4" y="485" width="1.6" height="15.0" fill="rgb(222,2,38)" rx="2" ry="2" />
<text  x="26.35" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (29 samples, 4.10%)</title><rect x="56.7" y="389" width="48.4" height="15.0" fill="rgb(231,29,13)" rx="2" ry="2" />
<text  x="59.73" y="399.5" >cql3..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="640.9" y="517" width="1.7" height="15.0" fill="rgb(210,227,54)" rx="2" ry="2" />
<text  x="643.89" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.14%)</title><rect x="56.7" y="373" width="1.7" height="15.0" fill="rgb(210,44,51)" rx="2" ry="2" />
<text  x="59.73" y="383.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (2 samples, 0.28%)</title><rect x="1093.2" y="501" width="3.3" height="15.0" fill="rgb(208,26,1)" rx="2" ry="2" />
<text  x="1096.20" y="511.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.14%)</title><rect x="105.1" y="197" width="1.7" height="15.0" fill="rgb(244,53,18)" rx="2" ry="2" />
<text  x="108.13" y="207.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.14%)</title><rect x="85.1" y="229" width="1.7" height="15.0" fill="rgb(245,152,52)" rx="2" ry="2" />
<text  x="88.11" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.28%)</title><rect x="65.1" y="357" width="3.3" height="15.0" fill="rgb(228,66,11)" rx="2" ry="2" />
<text  x="68.08" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.14%)</title><rect x="692.6" y="533" width="1.7" height="15.0" fill="rgb(217,192,37)" rx="2" ry="2" />
<text  x="695.63" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.28%)</title><rect x="65.1" y="229" width="3.3" height="15.0" fill="rgb(247,50,30)" rx="2" ry="2" />
<text  x="68.08" y="239.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.14%)</title><rect x="138.5" y="629" width="1.7" height="15.0" fill="rgb(221,13,19)" rx="2" ry="2" />
<text  x="141.51" y="639.5" ></text>
</g>
<g >
<title>database::query (1 samples, 0.14%)</title><rect x="140.2" y="549" width="1.7" height="15.0" fill="rgb(228,157,53)" rx="2" ry="2" />
<text  x="143.18" y="559.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (87 samples, 12.31%)</title><rect x="884.6" y="453" width="145.2" height="15.0" fill="rgb(249,27,20)" rx="2" ry="2" />
<text  x="887.57" y="463.5" >cql3::statements::..</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.14%)</title><rect x="68.4" y="325" width="1.7" height="15.0" fill="rgb(243,119,26)" rx="2" ry="2" />
<text  x="71.42" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (1 samples, 0.14%)</title><rect x="814.5" y="533" width="1.6" height="15.0" fill="rgb(234,128,41)" rx="2" ry="2" />
<text  x="817.47" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_view_statement, std::default_delete&lt;cql3::statements::create_view_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.14%)</title><rect x="115.1" y="405" width="1.7" height="15.0" fill="rgb(252,163,4)" rx="2" ry="2" />
<text  x="118.15" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (7 samples, 0.99%)</title><rect x="455.6" y="421" width="11.7" height="15.0" fill="rgb(230,150,54)" rx="2" ry="2" />
<text  x="458.63" y="431.5" ></text>
</g>
<g >
<title>main (573 samples, 81.05%)</title><rect x="140.2" y="645" width="956.3" height="15.0" fill="rgb(250,188,42)" rx="2" ry="2" />
<text  x="143.18" y="655.5" >main</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="494.0" y="437" width="1.7" height="15.0" fill="rgb(213,100,17)" rx="2" ry="2" />
<text  x="497.02" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::create_view_statement*, std::default_delete&lt;cql3::statements::create_view_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.14%)</title><rect x="115.1" y="373" width="1.7" height="15.0" fill="rgb(253,7,31)" rx="2" ry="2" />
<text  x="118.15" y="383.5" ></text>
</g>
<g >
<title>fstatat64 (1 samples, 0.14%)</title><rect x="1096.5" y="645" width="1.7" height="15.0" fill="rgb(209,68,45)" rx="2" ry="2" />
<text  x="1099.53" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_role_statement, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="116.8" y="405" width="1.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="119.82" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.42%)</title><rect x="707.7" y="453" width="5.0" height="15.0" fill="rgb(219,202,49)" rx="2" ry="2" />
<text  x="710.65" y="463.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (3 samples, 0.42%)</title><rect x="647.6" y="517" width="5.0" height="15.0" fill="rgb(224,85,39)" rx="2" ry="2" />
<text  x="650.57" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (2 samples, 0.28%)</title><rect x="105.1" y="389" width="3.4" height="15.0" fill="rgb(224,147,6)" rx="2" ry="2" />
<text  x="108.13" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.42%)</title><rect x="370.5" y="437" width="5.0" height="15.0" fill="rgb(213,40,25)" rx="2" ry="2" />
<text  x="373.51" y="447.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.14%)</title><rect x="544.1" y="405" width="1.7" height="15.0" fill="rgb(205,214,32)" rx="2" ry="2" />
<text  x="547.09" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (1 samples, 0.14%)</title><rect x="98.5" y="325" width="1.6" height="15.0" fill="rgb(251,107,5)" rx="2" ry="2" />
<text  x="101.46" y="335.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (2 samples, 0.28%)</title><rect x="45.0" y="293" width="3.4" height="15.0" fill="rgb(225,151,9)" rx="2" ry="2" />
<text  x="48.05" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.28%)</title><rect x="86.8" y="325" width="3.3" height="15.0" fill="rgb(226,150,53)" rx="2" ry="2" />
<text  x="89.78" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (54 samples, 7.64%)</title><rect x="495.7" y="469" width="90.1" height="15.0" fill="rgb(229,211,35)" rx="2" ry="2" />
<text  x="498.69" y="479.5" >std::_Func..</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.14%)</title><rect x="605.8" y="517" width="1.7" height="15.0" fill="rgb(217,17,25)" rx="2" ry="2" />
<text  x="608.84" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::list_permissions_statement*, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt;::_Tuple_impl (1 samples, 0.14%)</title><rect x="118.5" y="357" width="1.7" height="15.0" fill="rgb(212,220,25)" rx="2" ry="2" />
<text  x="121.49" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (2 samples, 0.28%)</title><rect x="555.8" y="389" width="3.3" height="15.0" fill="rgb(212,28,24)" rx="2" ry="2" />
<text  x="558.77" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="230.3" y="469" width="1.7" height="15.0" fill="rgb(215,219,42)" rx="2" ry="2" />
<text  x="233.31" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.14%)</title><rect x="68.4" y="277" width="1.7" height="15.0" fill="rgb(224,179,39)" rx="2" ry="2" />
<text  x="71.42" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (1 samples, 0.14%)</title><rect x="16.7" y="501" width="1.6" height="15.0" fill="rgb(243,61,10)" rx="2" ry="2" />
<text  x="19.68" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="701.0" y="501" width="1.6" height="15.0" fill="rgb(217,132,20)" rx="2" ry="2" />
<text  x="703.98" y="511.5" ></text>
</g>
<g >
<title>row::external_memory_usage (3 samples, 0.42%)</title><rect x="313.8" y="325" width="5.0" height="15.0" fill="rgb(251,188,23)" rx="2" ry="2" />
<text  x="316.76" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.28%)</title><rect x="83.4" y="341" width="3.4" height="15.0" fill="rgb(253,128,37)" rx="2" ry="2" />
<text  x="86.44" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.14%)</title><rect x="85.1" y="277" width="1.7" height="15.0" fill="rgb(217,160,45)" rx="2" ry="2" />
<text  x="88.11" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.14%)</title><rect x="554.1" y="373" width="1.7" height="15.0" fill="rgb(249,213,50)" rx="2" ry="2" />
<text  x="557.10" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="951.3" y="293" width="1.7" height="15.0" fill="rgb(239,210,31)" rx="2" ry="2" />
<text  x="954.33" y="303.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.14%)</title><rect x="96.8" y="293" width="1.7" height="15.0" fill="rgb(216,76,25)" rx="2" ry="2" />
<text  x="99.79" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (8 samples, 1.13%)</title><rect x="862.9" y="437" width="13.3" height="15.0" fill="rgb(251,164,0)" rx="2" ry="2" />
<text  x="865.87" y="447.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (6 samples, 0.85%)</title><rect x="342.1" y="277" width="10.0" height="15.0" fill="rgb(247,38,5)" rx="2" ry="2" />
<text  x="345.14" y="287.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.14%)</title><rect x="971.4" y="245" width="1.6" height="15.0" fill="rgb(235,14,19)" rx="2" ry="2" />
<text  x="974.36" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.28%)</title><rect x="65.1" y="261" width="3.3" height="15.0" fill="rgb(244,147,14)" rx="2" ry="2" />
<text  x="68.08" y="271.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::operation::set_value*, std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.14%)</title><rect x="103.5" y="277" width="1.6" height="15.0" fill="rgb(210,184,9)" rx="2" ry="2" />
<text  x="106.47" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (15 samples, 2.12%)</title><rect x="954.7" y="325" width="25.0" height="15.0" fill="rgb(250,93,51)" rx="2" ry="2" />
<text  x="957.67" y="335.5" >s..</text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="560.8" y="421" width="1.6" height="15.0" fill="rgb(214,159,17)" rx="2" ry="2" />
<text  x="563.78" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="98.5" y="229" width="1.6" height="15.0" fill="rgb(254,39,44)" rx="2" ry="2" />
<text  x="101.46" y="239.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="764.4" y="389" width="1.7" height="15.0" fill="rgb(207,22,45)" rx="2" ry="2" />
<text  x="767.40" y="399.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.28%)</title><rect x="163.6" y="533" width="3.3" height="15.0" fill="rgb(214,200,5)" rx="2" ry="2" />
<text  x="166.55" y="543.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (7 samples, 0.99%)</title><rect x="1104.9" y="661" width="11.7" height="15.0" fill="rgb(206,9,34)" rx="2" ry="2" />
<text  x="1107.88" y="671.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (53 samples, 7.50%)</title><rect x="35.0" y="453" width="88.5" height="15.0" fill="rgb(252,219,30)" rx="2" ry="2" />
<text  x="38.04" y="463.5" >cql3_parse..</text>
</g>
<g >
<title>std::_Hash_bytes (4 samples, 0.57%)</title><rect x="754.4" y="373" width="6.7" height="15.0" fill="rgb(245,228,11)" rx="2" ry="2" />
<text  x="757.38" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (4 samples, 0.57%)</title><rect x="41.7" y="325" width="6.7" height="15.0" fill="rgb(208,81,32)" rx="2" ry="2" />
<text  x="44.71" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.14%)</title><rect x="582.5" y="421" width="1.6" height="15.0" fill="rgb(247,199,42)" rx="2" ry="2" />
<text  x="585.48" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.28%)</title><rect x="83.4" y="325" width="3.4" height="15.0" fill="rgb(214,144,28)" rx="2" ry="2" />
<text  x="86.44" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="1001.4" y="357" width="1.7" height="15.0" fill="rgb(241,120,48)" rx="2" ry="2" />
<text  x="1004.40" y="367.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (11 samples, 1.56%)</title><rect x="1008.1" y="341" width="18.3" height="15.0" fill="rgb(218,118,51)" rx="2" ry="2" />
<text  x="1011.08" y="351.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="612.5" y="517" width="1.7" height="15.0" fill="rgb(214,150,43)" rx="2" ry="2" />
<text  x="615.52" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.14%)</title><rect x="80.1" y="245" width="1.7" height="15.0" fill="rgb(250,210,24)" rx="2" ry="2" />
<text  x="83.10" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.28%)</title><rect x="1054.8" y="501" width="3.3" height="15.0" fill="rgb(233,24,28)" rx="2" ry="2" />
<text  x="1057.81" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.14%)</title><rect x="36.7" y="293" width="1.7" height="15.0" fill="rgb(236,24,31)" rx="2" ry="2" />
<text  x="39.70" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (15 samples, 2.12%)</title><rect x="1059.8" y="533" width="25.1" height="15.0" fill="rgb(250,59,5)" rx="2" ry="2" />
<text  x="1062.82" y="543.5" >s..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.14%)</title><rect x="826.2" y="373" width="1.6" height="15.0" fill="rgb(222,38,10)" rx="2" ry="2" />
<text  x="829.15" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.14%)</title><rect x="28.4" y="421" width="1.6" height="15.0" fill="rgb(232,214,31)" rx="2" ry="2" />
<text  x="31.36" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (2 samples, 0.28%)</title><rect x="719.3" y="485" width="3.4" height="15.0" fill="rgb(252,35,43)" rx="2" ry="2" />
<text  x="722.34" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="61.7" y="245" width="1.7" height="15.0" fill="rgb(205,200,12)" rx="2" ry="2" />
<text  x="64.74" y="255.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.14%)</title><rect x="98.5" y="309" width="1.6" height="15.0" fill="rgb(229,110,14)" rx="2" ry="2" />
<text  x="101.46" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (5 samples, 0.71%)</title><rect x="550.8" y="405" width="8.3" height="15.0" fill="rgb(239,130,27)" rx="2" ry="2" />
<text  x="553.76" y="415.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.42%)</title><rect x="133.5" y="629" width="5.0" height="15.0" fill="rgb(212,214,6)" rx="2" ry="2" />
<text  x="136.51" y="639.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.28%)</title><rect x="635.9" y="517" width="3.3" height="15.0" fill="rgb(242,213,37)" rx="2" ry="2" />
<text  x="638.88" y="527.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (1 samples, 0.14%)</title><rect x="101.8" y="341" width="1.7" height="15.0" fill="rgb(225,172,7)" rx="2" ry="2" />
<text  x="104.80" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.14%)</title><rect x="672.6" y="501" width="1.7" height="15.0" fill="rgb(216,17,44)" rx="2" ry="2" />
<text  x="675.60" y="511.5" ></text>
</g>
<g >
<title>database::find_column_family (2 samples, 0.28%)</title><rect x="991.4" y="373" width="3.3" height="15.0" fill="rgb(215,128,12)" rx="2" ry="2" />
<text  x="994.39" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.42%)</title><rect x="928.0" y="357" width="5.0" height="15.0" fill="rgb(236,32,12)" rx="2" ry="2" />
<text  x="930.96" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (2 samples, 0.28%)</title><rect x="627.5" y="501" width="3.4" height="15.0" fill="rgb(250,39,50)" rx="2" ry="2" />
<text  x="630.54" y="511.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (4 samples, 0.57%)</title><rect x="724.3" y="453" width="6.7" height="15.0" fill="rgb(240,219,0)" rx="2" ry="2" />
<text  x="727.34" y="463.5" ></text>
</g>
<g >
<title>rows_entry::memory_usage (1 samples, 0.14%)</title><rect x="18.3" y="565" width="1.7" height="15.0" fill="rgb(234,112,17)" rx="2" ry="2" />
<text  x="21.35" y="575.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (65 samples, 9.19%)</title><rect x="702.6" y="517" width="108.5" height="15.0" fill="rgb(211,226,38)" rx="2" ry="2" />
<text  x="705.64" y="527.5" >single_node_c..</text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.14%)</title><rect x="66.7" y="37" width="1.7" height="15.0" fill="rgb(219,149,50)" rx="2" ry="2" />
<text  x="69.75" y="47.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.14%)</title><rect x="465.6" y="389" width="1.7" height="15.0" fill="rgb(251,59,49)" rx="2" ry="2" />
<text  x="468.64" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (6 samples, 0.85%)</title><rect x="682.6" y="517" width="10.0" height="15.0" fill="rgb(210,41,1)" rx="2" ry="2" />
<text  x="685.62" y="527.5" ></text>
</g>
<g >
<title>do_cql_test (67 samples, 9.48%)</title><rect x="20.0" y="565" width="111.8" height="15.0" fill="rgb(216,213,47)" rx="2" ry="2" />
<text  x="23.01" y="575.5" >do_cql_test</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.14%)</title><rect x="186.9" y="469" width="1.7" height="15.0" fill="rgb(238,185,47)" rx="2" ry="2" />
<text  x="189.92" y="479.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (3 samples, 0.42%)</title><rect x="133.5" y="645" width="5.0" height="15.0" fill="rgb(223,204,15)" rx="2" ry="2" />
<text  x="136.51" y="655.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="679.3" y="517" width="1.6" height="15.0" fill="rgb(219,50,19)" rx="2" ry="2" />
<text  x="682.28" y="527.5" ></text>
</g>
<g >
<title>database::find_schema (2 samples, 0.28%)</title><rect x="777.8" y="421" width="3.3" height="15.0" fill="rgb(245,185,43)" rx="2" ry="2" />
<text  x="780.75" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.14%)</title><rect x="622.5" y="517" width="1.7" height="15.0" fill="rgb(229,88,46)" rx="2" ry="2" />
<text  x="625.53" y="527.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.14%)</title><rect x="1034.8" y="437" width="1.6" height="15.0" fill="rgb(211,113,22)" rx="2" ry="2" />
<text  x="1037.78" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.14%)</title><rect x="106.8" y="277" width="1.7" height="15.0" fill="rgb(242,197,36)" rx="2" ry="2" />
<text  x="109.80" y="287.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (2 samples, 0.28%)</title><rect x="854.5" y="373" width="3.4" height="15.0" fill="rgb(216,10,11)" rx="2" ry="2" />
<text  x="857.53" y="383.5" ></text>
</g>
<g >
<title>boost::program_options::variables_map::get (1 samples, 0.14%)</title><rect x="131.8" y="629" width="1.7" height="15.0" fill="rgb(236,154,54)" rx="2" ry="2" />
<text  x="134.84" y="639.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (1 samples, 0.14%)</title><rect x="672.6" y="517" width="1.7" height="15.0" fill="rgb(212,167,15)" rx="2" ry="2" />
<text  x="675.60" y="527.5" ></text>
</g>
<g >
<title>query_state::query_state (6 samples, 0.85%)</title><rect x="585.8" y="485" width="10.0" height="15.0" fill="rgb(222,134,1)" rx="2" ry="2" />
<text  x="588.81" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (3 samples, 0.42%)</title><rect x="123.5" y="501" width="5.0" height="15.0" fill="rgb(205,149,16)" rx="2" ry="2" />
<text  x="126.49" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_table_statement, std::default_delete&lt;cql3::statements::alter_table_statement&gt; &gt;::~unique_ptr (1 samples, 0.14%)</title><rect x="113.5" y="421" width="1.6" height="15.0" fill="rgb(248,14,22)" rx="2" ry="2" />
<text  x="116.48" y="431.5" ></text>
</g>
<g >
<title>row::row (22 samples, 3.11%)</title><rect x="318.8" y="325" width="36.7" height="15.0" fill="rgb(207,55,46)" rx="2" ry="2" />
<text  x="321.77" y="335.5" >row..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.14%)</title><rect x="48.4" y="341" width="1.7" height="15.0" fill="rgb(246,119,5)" rx="2" ry="2" />
<text  x="51.39" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.14%)</title><rect x="615.9" y="517" width="1.6" height="15.0" fill="rgb(216,72,48)" rx="2" ry="2" />
<text  x="618.86" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="66.7" y="117" width="1.7" height="15.0" fill="rgb(230,211,29)" rx="2" ry="2" />
<text  x="69.75" y="127.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (77 samples, 10.89%)</title><rect x="238.7" y="469" width="128.5" height="15.0" fill="rgb(229,143,53)" rx="2" ry="2" />
<text  x="241.66" y="479.5" >flat_mutation_re..</text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.14%)</title><rect x="90.1" y="309" width="1.7" height="15.0" fill="rgb(235,130,18)" rx="2" ry="2" />
<text  x="93.11" y="319.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="93.5" y="309" width="1.6" height="15.0" fill="rgb(237,125,45)" rx="2" ry="2" />
<text  x="96.45" y="319.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.14%)</title><rect x="170.2" y="517" width="1.7" height="15.0" fill="rgb(244,156,35)" rx="2" ry="2" />
<text  x="173.23" y="527.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.14%)</title><rect x="841.2" y="453" width="1.6" height="15.0" fill="rgb(207,20,26)" rx="2" ry="2" />
<text  x="844.17" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_keyspace_statement, std::default_delete&lt;cql3::statements::alter_keyspace_statement&gt; &gt;::_M_ptr (1 samples, 0.14%)</title><rect x="111.8" y="421" width="1.7" height="15.0" fill="rgb(245,24,34)" rx="2" ry="2" />
<text  x="114.81" y="431.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (3 samples, 0.42%)</title><rect x="1049.8" y="453" width="5.0" height="15.0" fill="rgb(235,200,17)" rx="2" ry="2" />
<text  x="1052.80" y="463.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~RuleReturnValue (1 samples, 0.14%)</title><rect x="63.4" y="357" width="1.7" height="15.0" fill="rgb(219,104,51)" rx="2" ry="2" />
<text  x="66.41" y="367.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (3 samples, 0.42%)</title><rect x="674.3" y="517" width="5.0" height="15.0" fill="rgb(218,189,13)" rx="2" ry="2" />
<text  x="677.27" y="527.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (12 samples, 1.70%)</title><rect x="1006.4" y="357" width="20.0" height="15.0" fill="rgb(219,108,49)" rx="2" ry="2" />
<text  x="1009.41" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="56.7" y="325" width="1.7" height="15.0" fill="rgb(234,13,0)" rx="2" ry="2" />
<text  x="59.73" y="335.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.14%)</title><rect x="983.0" y="325" width="1.7" height="15.0" fill="rgb(221,110,36)" rx="2" ry="2" />
<text  x="986.04" y="335.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.28%)</title><rect x="155.2" y="501" width="3.3" height="15.0" fill="rgb(233,21,27)" rx="2" ry="2" />
<text  x="158.21" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::partition_snapshot_flat_reader&lt;schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.14%)</title><rect x="13.3" y="549" width="1.7" height="15.0" fill="rgb(225,193,43)" rx="2" ry="2" />
<text  x="16.34" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::_M_ptr (1 samples, 0.14%)</title><rect x="121.8" y="373" width="1.7" height="15.0" fill="rgb(254,170,36)" rx="2" ry="2" />
<text  x="124.82" y="383.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.28%)</title><rect x="65.1" y="325" width="3.3" height="15.0" fill="rgb(222,195,53)" rx="2" ry="2" />
<text  x="68.08" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.14%)</title><rect x="98.5" y="149" width="1.6" height="15.0" fill="rgb(237,8,12)" rx="2" ry="2" />
<text  x="101.46" y="159.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.28%)</title><rect x="1054.8" y="469" width="3.3" height="15.0" fill="rgb(215,65,49)" rx="2" ry="2" />
<text  x="1057.81" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (1 samples, 0.14%)</title><rect x="826.2" y="405" width="1.6" height="15.0" fill="rgb(214,196,53)" rx="2" ry="2" />
<text  x="829.15" y="415.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.14%)</title><rect x="33.4" y="469" width="1.6" height="15.0" fill="rgb(207,216,20)" rx="2" ry="2" />
<text  x="36.37" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="689.3" y="501" width="1.7" height="15.0" fill="rgb(238,136,11)" rx="2" ry="2" />
<text  x="692.29" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="61.7" y="309" width="1.7" height="15.0" fill="rgb(229,105,40)" rx="2" ry="2" />
<text  x="64.74" y="319.5" ></text>
</g>
<g >
<title>auth::get_permissions (3 samples, 0.42%)</title><rect x="123.5" y="437" width="5.0" height="15.0" fill="rgb(222,128,1)" rx="2" ry="2" />
<text  x="126.49" y="447.5" ></text>
</g>
<g >
<title>database::query (11 samples, 1.56%)</title><rect x="959.7" y="309" width="18.3" height="15.0" fill="rgb(249,103,39)" rx="2" ry="2" />
<text  x="962.67" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.14%)</title><rect x="1078.2" y="517" width="1.6" height="15.0" fill="rgb(242,206,42)" rx="2" ry="2" />
<text  x="1081.18" y="527.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.42%)</title><rect x="1073.2" y="517" width="5.0" height="15.0" fill="rgb(207,43,36)" rx="2" ry="2" />
<text  x="1076.17" y="527.5" ></text>
</g>
<g >
<title>auth::get_permissions (14 samples, 1.98%)</title><rect x="746.0" y="405" width="23.4" height="15.0" fill="rgb(208,46,48)" rx="2" ry="2" />
<text  x="749.04" y="415.5" >a..</text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (17 samples, 2.40%)</title><rect x="744.4" y="421" width="28.3" height="15.0" fill="rgb(212,206,18)" rx="2" ry="2" />
<text  x="747.37" y="431.5" >se..</text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (1 samples, 0.14%)</title><rect x="141.9" y="549" width="1.6" height="15.0" fill="rgb(224,155,31)" rx="2" ry="2" />
<text  x="144.85" y="559.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (1 samples, 0.14%)</title><rect x="899.6" y="405" width="1.7" height="15.0" fill="rgb(228,134,24)" rx="2" ry="2" />
<text  x="902.59" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_check_len (2 samples, 0.28%)</title><rect x="71.8" y="309" width="3.3" height="15.0" fill="rgb(231,13,28)" rx="2" ry="2" />
<text  x="74.75" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (1 samples, 0.14%)</title><rect x="824.5" y="389" width="1.7" height="15.0" fill="rgb(247,87,48)" rx="2" ry="2" />
<text  x="827.48" y="399.5" ></text>
</g>
<g >
<title>row::~row (6 samples, 0.85%)</title><rect x="397.2" y="421" width="10.0" height="15.0" fill="rgb(241,136,8)" rx="2" ry="2" />
<text  x="400.21" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.28%)</title><rect x="65.1" y="277" width="3.3" height="15.0" fill="rgb(209,158,33)" rx="2" ry="2" />
<text  x="68.08" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.14%)</title><rect x="80.1" y="261" width="1.7" height="15.0" fill="rgb(254,65,30)" rx="2" ry="2" />
<text  x="83.10" y="271.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="614.2" y="517" width="1.7" height="15.0" fill="rgb(241,162,41)" rx="2" ry="2" />
<text  x="617.19" y="527.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.14%)</title><rect x="664.3" y="373" width="1.6" height="15.0" fill="rgb(224,112,22)" rx="2" ry="2" />
<text  x="667.26" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="95.1" y="309" width="1.7" height="15.0" fill="rgb(237,187,1)" rx="2" ry="2" />
<text  x="98.12" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (7 samples, 0.99%)</title><rect x="263.7" y="405" width="11.7" height="15.0" fill="rgb(244,128,46)" rx="2" ry="2" />
<text  x="266.69" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (2 samples, 0.28%)</title><rect x="881.2" y="437" width="3.4" height="15.0" fill="rgb(232,183,41)" rx="2" ry="2" />
<text  x="884.23" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="98.5" y="213" width="1.6" height="15.0" fill="rgb(223,169,36)" rx="2" ry="2" />
<text  x="101.46" y="223.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.28%)</title><rect x="487.3" y="437" width="3.4" height="15.0" fill="rgb(239,198,35)" rx="2" ry="2" />
<text  x="490.34" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="594.2" y="437" width="1.6" height="15.0" fill="rgb(242,197,12)" rx="2" ry="2" />
<text  x="597.16" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.14%)</title><rect x="173.6" y="517" width="1.6" height="15.0" fill="rgb(237,149,30)" rx="2" ry="2" />
<text  x="176.56" y="527.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (2 samples, 0.28%)</title><rect x="218.6" y="485" width="3.4" height="15.0" fill="rgb(235,191,26)" rx="2" ry="2" />
<text  x="221.63" y="495.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (76 samples, 10.75%)</title><rect x="240.3" y="453" width="126.9" height="15.0" fill="rgb(229,24,18)" rx="2" ry="2" />
<text  x="243.33" y="463.5" >merging_reader&lt;..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="405.6" y="373" width="1.6" height="15.0" fill="rgb(248,225,29)" rx="2" ry="2" />
<text  x="408.56" y="383.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.14%)</title><rect x="933.0" y="373" width="1.6" height="15.0" fill="rgb(216,171,0)" rx="2" ry="2" />
<text  x="935.97" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.14%)</title><rect x="83.4" y="261" width="1.7" height="15.0" fill="rgb(236,116,34)" rx="2" ry="2" />
<text  x="86.44" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.14%)</title><rect x="36.7" y="309" width="1.7" height="15.0" fill="rgb(234,175,28)" rx="2" ry="2" />
<text  x="39.70" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.14%)</title><rect x="18.3" y="549" width="1.7" height="15.0" fill="rgb(240,199,8)" rx="2" ry="2" />
<text  x="21.35" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="225.3" y="485" width="1.7" height="15.0" fill="rgb(225,75,38)" rx="2" ry="2" />
<text  x="228.30" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::run (573 samples, 81.05%)</title><rect x="140.2" y="581" width="956.3" height="15.0" fill="rgb(251,117,37)" rx="2" ry="2" />
<text  x="143.18" y="591.5" >seastar::reactor::run</text>
</g>
<g >
<title>memtable::make_flat_reader (28 samples, 3.96%)</title><rect x="517.4" y="437" width="46.7" height="15.0" fill="rgb(212,52,34)" rx="2" ry="2" />
<text  x="520.38" y="447.5" >memt..</text>
</g>
<g >
<title>cql3_parser::CqlParser::term (15 samples, 2.12%)</title><rect x="76.8" y="357" width="25.0" height="15.0" fill="rgb(228,210,49)" rx="2" ry="2" />
<text  x="79.76" y="367.5" >c..</text>
</g>
<g >
<title>database::find_schema (3 samples, 0.42%)</title><rect x="732.7" y="453" width="5.0" height="15.0" fill="rgb(221,114,16)" rx="2" ry="2" />
<text  x="735.69" y="463.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.14%)</title><rect x="308.8" y="309" width="1.6" height="15.0" fill="rgb(230,54,28)" rx="2" ry="2" />
<text  x="311.76" y="319.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (2 samples, 0.28%)</title><rect x="315.4" y="293" width="3.4" height="15.0" fill="rgb(233,193,14)" rx="2" ry="2" />
<text  x="318.43" y="303.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (2 samples, 0.28%)</title><rect x="592.5" y="469" width="3.3" height="15.0" fill="rgb(207,212,29)" rx="2" ry="2" />
<text  x="595.49" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.14%)</title><rect x="510.7" y="405" width="1.7" height="15.0" fill="rgb(234,50,53)" rx="2" ry="2" />
<text  x="513.71" y="415.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.14%)</title><rect x="884.6" y="437" width="1.6" height="15.0" fill="rgb(223,23,13)" rx="2" ry="2" />
<text  x="887.57" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (4 samples, 0.57%)</title><rect x="280.4" y="373" width="6.7" height="15.0" fill="rgb(208,178,15)" rx="2" ry="2" />
<text  x="283.38" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (30 samples, 4.24%)</title><rect x="934.6" y="357" width="50.1" height="15.0" fill="rgb(219,217,51)" rx="2" ry="2" />
<text  x="937.64" y="367.5" >servi..</text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (3 samples, 0.42%)</title><rect x="485.7" y="453" width="5.0" height="15.0" fill="rgb(224,145,41)" rx="2" ry="2" />
<text  x="488.67" y="463.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="1036.4" y="453" width="1.7" height="15.0" fill="rgb(206,61,2)" rx="2" ry="2" />
<text  x="1039.45" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.85%)</title><rect x="397.2" y="405" width="10.0" height="15.0" fill="rgb(249,70,2)" rx="2" ry="2" />
<text  x="400.21" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="80.1" y="101" width="1.7" height="15.0" fill="rgb(226,213,15)" rx="2" ry="2" />
<text  x="83.10" y="111.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.14%)</title><rect x="96.8" y="245" width="1.7" height="15.0" fill="rgb(207,90,34)" rx="2" ry="2" />
<text  x="99.79" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.14%)</title><rect x="353.8" y="261" width="1.7" height="15.0" fill="rgb(248,142,17)" rx="2" ry="2" />
<text  x="356.82" y="271.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (1 samples, 0.14%)</title><rect x="615.9" y="533" width="1.6" height="15.0" fill="rgb(238,11,31)" rx="2" ry="2" />
<text  x="618.86" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="80.1" y="197" width="1.7" height="15.0" fill="rgb(205,226,6)" rx="2" ry="2" />
<text  x="83.10" y="207.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (2 samples, 0.28%)</title><rect x="1054.8" y="453" width="3.3" height="15.0" fill="rgb(224,201,31)" rx="2" ry="2" />
<text  x="1057.81" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::parsed_statement*, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt; (1 samples, 0.14%)</title><rect x="121.8" y="357" width="1.7" height="15.0" fill="rgb(239,19,47)" rx="2" ry="2" />
<text  x="124.82" y="367.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="66.7" y="149" width="1.7" height="15.0" fill="rgb(206,223,13)" rx="2" ry="2" />
<text  x="69.75" y="159.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.14%)</title><rect x="101.8" y="325" width="1.7" height="15.0" fill="rgb(221,184,52)" rx="2" ry="2" />
<text  x="104.80" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;cql3::expr::expression*&gt; (1 samples, 0.14%)</title><rect x="100.1" y="309" width="1.7" height="15.0" fill="rgb(221,213,47)" rx="2" ry="2" />
<text  x="103.13" y="319.5" ></text>
</g>
<g >
<title>table::make_reader (51 samples, 7.21%)</title><rect x="500.7" y="453" width="85.1" height="15.0" fill="rgb(235,203,49)" rx="2" ry="2" />
<text  x="503.69" y="463.5" >table::mak..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (42 samples, 5.94%)</title><rect x="287.1" y="373" width="70.1" height="15.0" fill="rgb(251,134,10)" rx="2" ry="2" />
<text  x="290.06" y="383.5" >partiti..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="105.1" y="293" width="1.7" height="15.0" fill="rgb(231,90,27)" rx="2" ry="2" />
<text  x="108.13" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.42%)</title><rect x="227.0" y="485" width="5.0" height="15.0" fill="rgb(206,5,29)" rx="2" ry="2" />
<text  x="229.97" y="495.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::~single_column_relation (1 samples, 0.14%)</title><rect x="25.0" y="485" width="1.7" height="15.0" fill="rgb(236,100,33)" rx="2" ry="2" />
<text  x="28.02" y="495.5" ></text>
</g>
<g >
<title>make_combined_reader (6 samples, 0.85%)</title><rect x="502.4" y="421" width="10.0" height="15.0" fill="rgb(224,204,37)" rx="2" ry="2" />
<text  x="505.36" y="431.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (132 samples, 18.67%)</title><rect x="829.5" y="517" width="220.3" height="15.0" fill="rgb(208,60,44)" rx="2" ry="2" />
<text  x="832.49" y="527.5" >seastar::concrete_execution_s..</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.14%)</title><rect x="93.5" y="277" width="1.6" height="15.0" fill="rgb(213,140,43)" rx="2" ry="2" />
<text  x="96.45" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.28%)</title><rect x="766.1" y="373" width="3.3" height="15.0" fill="rgb(236,16,33)" rx="2" ry="2" />
<text  x="769.07" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.28%)</title><rect x="487.3" y="421" width="3.4" height="15.0" fill="rgb(249,117,44)" rx="2" ry="2" />
<text  x="490.34" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::statements::create_view_statement&gt;, true&gt;::_Head_base (1 samples, 0.14%)</title><rect x="115.1" y="341" width="1.7" height="15.0" fill="rgb(225,152,31)" rx="2" ry="2" />
<text  x="118.15" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.14%)</title><rect x="105.1" y="181" width="1.7" height="15.0" fill="rgb(245,121,52)" rx="2" ry="2" />
<text  x="108.13" y="191.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (63 samples, 8.91%)</title><rect x="23.4" y="517" width="105.1" height="15.0" fill="rgb(249,7,34)" rx="2" ry="2" />
<text  x="26.35" y="527.5" >cql3::query_..</text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.14%)</title><rect x="58.4" y="341" width="1.7" height="15.0" fill="rgb(251,67,31)" rx="2" ry="2" />
<text  x="61.40" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.14%)</title><rect x="976.4" y="293" width="1.6" height="15.0" fill="rgb(239,138,2)" rx="2" ry="2" />
<text  x="979.36" y="303.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.14%)</title><rect x="554.1" y="357" width="1.7" height="15.0" fill="rgb(252,51,23)" rx="2" ry="2" />
<text  x="557.10" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.28%)</title><rect x="65.1" y="197" width="3.3" height="15.0" fill="rgb(225,29,18)" rx="2" ry="2" />
<text  x="68.08" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="93.5" y="181" width="1.6" height="15.0" fill="rgb(234,47,45)" rx="2" ry="2" />
<text  x="96.45" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="630.9" y="485" width="1.6" height="15.0" fill="rgb(252,221,38)" rx="2" ry="2" />
<text  x="633.88" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.28%)</title><rect x="65.1" y="309" width="3.3" height="15.0" fill="rgb(252,151,21)" rx="2" ry="2" />
<text  x="68.08" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (9 samples, 1.27%)</title><rect x="847.9" y="437" width="15.0" height="15.0" fill="rgb(251,56,30)" rx="2" ry="2" />
<text  x="850.85" y="447.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.28%)</title><rect x="766.1" y="389" width="3.3" height="15.0" fill="rgb(220,217,35)" rx="2" ry="2" />
<text  x="769.07" y="399.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (8 samples, 1.13%)</title><rect x="36.7" y="421" width="13.4" height="15.0" fill="rgb(220,191,11)" rx="2" ry="2" />
<text  x="39.70" y="431.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.14%)</title><rect x="96.8" y="229" width="1.7" height="15.0" fill="rgb(236,225,41)" rx="2" ry="2" />
<text  x="99.79" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (65 samples, 9.19%)</title><rect x="257.0" y="421" width="108.5" height="15.0" fill="rgb(223,98,34)" rx="2" ry="2" />
<text  x="260.02" y="431.5" >mutation_read..</text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (2 samples, 0.28%)</title><rect x="105.1" y="405" width="3.4" height="15.0" fill="rgb(221,173,36)" rx="2" ry="2" />
<text  x="108.13" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="897.9" y="389" width="1.7" height="15.0" fill="rgb(245,47,19)" rx="2" ry="2" />
<text  x="900.92" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="557.4" y="357" width="1.7" height="15.0" fill="rgb(221,132,47)" rx="2" ry="2" />
<text  x="560.44" y="367.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.14%)</title><rect x="445.6" y="437" width="1.7" height="15.0" fill="rgb(245,228,46)" rx="2" ry="2" />
<text  x="448.62" y="447.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (1 samples, 0.14%)</title><rect x="579.1" y="405" width="1.7" height="15.0" fill="rgb(210,168,20)" rx="2" ry="2" />
<text  x="582.14" y="415.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.28%)</title><rect x="851.2" y="357" width="3.3" height="15.0" fill="rgb(233,12,23)" rx="2" ry="2" />
<text  x="854.19" y="367.5" ></text>
</g>
<g >
<title>row::compact_and_expire (7 samples, 0.99%)</title><rect x="455.6" y="437" width="11.7" height="15.0" fill="rgb(235,120,37)" rx="2" ry="2" />
<text  x="458.63" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="103.5" y="309" width="1.6" height="15.0" fill="rgb(243,38,43)" rx="2" ry="2" />
<text  x="106.47" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.14%)</title><rect x="65.1" y="149" width="1.6" height="15.0" fill="rgb(218,135,5)" rx="2" ry="2" />
<text  x="68.08" y="159.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (5 samples, 0.71%)</title><rect x="183.6" y="501" width="8.3" height="15.0" fill="rgb(216,71,16)" rx="2" ry="2" />
<text  x="186.58" y="511.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.14%)</title><rect x="882.9" y="421" width="1.7" height="15.0" fill="rgb(206,48,18)" rx="2" ry="2" />
<text  x="885.90" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt;, true, true&gt;::operator= (1 samples, 0.14%)</title><rect x="121.8" y="421" width="1.7" height="15.0" fill="rgb(221,169,7)" rx="2" ry="2" />
<text  x="124.82" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.14%)</title><rect x="360.5" y="373" width="1.7" height="15.0" fill="rgb(248,176,25)" rx="2" ry="2" />
<text  x="363.50" y="383.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (1 samples, 0.14%)</title><rect x="1079.8" y="517" width="1.7" height="15.0" fill="rgb(227,160,1)" rx="2" ry="2" />
<text  x="1082.84" y="527.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (1 samples, 0.14%)</title><rect x="729.3" y="421" width="1.7" height="15.0" fill="rgb(253,92,43)" rx="2" ry="2" />
<text  x="732.35" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.28%)</title><rect x="1054.8" y="437" width="3.3" height="15.0" fill="rgb(208,136,43)" rx="2" ry="2" />
<text  x="1057.81" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (1 samples, 0.14%)</title><rect x="1056.5" y="389" width="1.6" height="15.0" fill="rgb(225,142,15)" rx="2" ry="2" />
<text  x="1059.48" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="108.5" y="357" width="1.6" height="15.0" fill="rgb(223,18,22)" rx="2" ry="2" />
<text  x="111.47" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.14%)</title><rect x="80.1" y="149" width="1.7" height="15.0" fill="rgb(234,122,52)" rx="2" ry="2" />
<text  x="83.10" y="159.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (7 samples, 0.99%)</title><rect x="817.8" y="453" width="11.7" height="15.0" fill="rgb(205,58,12)" rx="2" ry="2" />
<text  x="820.81" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (7 samples, 0.99%)</title><rect x="817.8" y="485" width="11.7" height="15.0" fill="rgb(241,143,34)" rx="2" ry="2" />
<text  x="820.81" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.28%)</title><rect x="886.2" y="437" width="3.4" height="15.0" fill="rgb(237,78,31)" rx="2" ry="2" />
<text  x="889.24" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.14%)</title><rect x="26.7" y="421" width="1.7" height="15.0" fill="rgb(250,211,30)" rx="2" ry="2" />
<text  x="29.69" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.42%)</title><rect x="1073.2" y="501" width="5.0" height="15.0" fill="rgb(243,65,11)" rx="2" ry="2" />
<text  x="1076.17" y="511.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.14%)</title><rect x="664.3" y="389" width="1.6" height="15.0" fill="rgb(232,121,36)" rx="2" ry="2" />
<text  x="667.26" y="399.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.14%)</title><rect x="584.1" y="437" width="1.7" height="15.0" fill="rgb(254,141,11)" rx="2" ry="2" />
<text  x="587.14" y="447.5" ></text>
</g>
<g >
<title>posix_memalign (6 samples, 0.85%)</title><rect x="342.1" y="261" width="10.0" height="15.0" fill="rgb(246,89,34)" rx="2" ry="2" />
<text  x="345.14" y="271.5" ></text>
</g>
<g >
<title>make_combined_reader (10 samples, 1.41%)</title><rect x="500.7" y="437" width="16.7" height="15.0" fill="rgb(222,116,18)" rx="2" ry="2" />
<text  x="503.69" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (1 samples, 0.14%)</title><rect x="1058.1" y="533" width="1.7" height="15.0" fill="rgb(242,80,10)" rx="2" ry="2" />
<text  x="1061.15" y="543.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (2 samples, 0.28%)</title><rect x="155.2" y="517" width="3.3" height="15.0" fill="rgb(237,197,2)" rx="2" ry="2" />
<text  x="158.21" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.14%)</title><rect x="68.4" y="245" width="1.7" height="15.0" fill="rgb(237,10,26)" rx="2" ry="2" />
<text  x="71.42" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (2 samples, 0.28%)</title><rect x="859.5" y="373" width="3.4" height="15.0" fill="rgb(241,37,43)" rx="2" ry="2" />
<text  x="862.53" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.14%)</title><rect x="78.4" y="325" width="1.7" height="15.0" fill="rgb(220,146,46)" rx="2" ry="2" />
<text  x="81.43" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (4 samples, 0.57%)</title><rect x="791.1" y="469" width="6.7" height="15.0" fill="rgb(249,89,2)" rx="2" ry="2" />
<text  x="794.10" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.14%)</title><rect x="71.8" y="293" width="1.6" height="15.0" fill="rgb(249,17,49)" rx="2" ry="2" />
<text  x="74.75" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="95.1" y="277" width="1.7" height="15.0" fill="rgb(241,131,45)" rx="2" ry="2" />
<text  x="98.12" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.28%)</title><rect x="83.4" y="293" width="3.4" height="15.0" fill="rgb(239,38,52)" rx="2" ry="2" />
<text  x="86.44" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="61.7" y="293" width="1.7" height="15.0" fill="rgb(219,60,33)" rx="2" ry="2" />
<text  x="64.74" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (36 samples, 5.09%)</title><rect x="50.1" y="421" width="60.0" height="15.0" fill="rgb(222,26,4)" rx="2" ry="2" />
<text  x="53.06" y="431.5" >cql3_p..</text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.14%)</title><rect x="66.7" y="53" width="1.7" height="15.0" fill="rgb(235,7,26)" rx="2" ry="2" />
<text  x="69.75" y="63.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="98.5" y="197" width="1.6" height="15.0" fill="rgb(227,183,25)" rx="2" ry="2" />
<text  x="101.46" y="207.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.28%)</title><rect x="80.1" y="325" width="3.3" height="15.0" fill="rgb(219,214,37)" rx="2" ry="2" />
<text  x="83.10" y="335.5" ></text>
</g>
<g >
<title>service::mutation_holder::reply (1 samples, 0.14%)</title><rect x="694.3" y="517" width="1.7" height="15.0" fill="rgb(231,131,53)" rx="2" ry="2" />
<text  x="697.30" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.28%)</title><rect x="968.0" y="245" width="3.4" height="15.0" fill="rgb(215,75,31)" rx="2" ry="2" />
<text  x="971.02" y="255.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (83 samples, 11.74%)</title><rect x="891.2" y="437" width="138.6" height="15.0" fill="rgb(230,58,43)" rx="2" ry="2" />
<text  x="894.24" y="447.5" >service::storage_..</text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.14%)</title><rect x="943.0" y="325" width="1.7" height="15.0" fill="rgb(249,31,19)" rx="2" ry="2" />
<text  x="945.98" y="335.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.28%)</title><rect x="797.8" y="469" width="3.3" height="15.0" fill="rgb(205,20,4)" rx="2" ry="2" />
<text  x="800.78" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (2 samples, 0.28%)</title><rect x="15.0" y="517" width="3.3" height="15.0" fill="rgb(216,180,26)" rx="2" ry="2" />
<text  x="18.01" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (3 samples, 0.42%)</title><rect x="36.7" y="357" width="5.0" height="15.0" fill="rgb(243,13,38)" rx="2" ry="2" />
<text  x="39.70" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (2 samples, 0.28%)</title><rect x="981.4" y="341" width="3.3" height="15.0" fill="rgb(216,191,1)" rx="2" ry="2" />
<text  x="984.37" y="351.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.14%)</title><rect x="312.1" y="309" width="1.7" height="15.0" fill="rgb(230,110,46)" rx="2" ry="2" />
<text  x="315.09" y="319.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.28%)</title><rect x="1038.1" y="453" width="3.4" height="15.0" fill="rgb(208,220,3)" rx="2" ry="2" />
<text  x="1041.12" y="463.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.28%)</title><rect x="497.4" y="453" width="3.3" height="15.0" fill="rgb(245,18,37)" rx="2" ry="2" />
<text  x="500.36" y="463.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (35 samples, 4.95%)</title><rect x="926.3" y="389" width="58.4" height="15.0" fill="rgb(235,94,4)" rx="2" ry="2" />
<text  x="929.29" y="399.5" >servic..</text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (2 samples, 0.28%)</title><rect x="86.8" y="309" width="3.3" height="15.0" fill="rgb(246,97,39)" rx="2" ry="2" />
<text  x="89.78" y="319.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.14%)</title><rect x="724.3" y="421" width="1.7" height="15.0" fill="rgb(243,125,4)" rx="2" ry="2" />
<text  x="727.34" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.14%)</title><rect x="68.4" y="293" width="1.7" height="15.0" fill="rgb(224,184,47)" rx="2" ry="2" />
<text  x="71.42" y="303.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.14%)</title><rect x="470.7" y="421" width="1.6" height="15.0" fill="rgb(205,225,21)" rx="2" ry="2" />
<text  x="473.65" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="66.7" y="133" width="1.7" height="15.0" fill="rgb(240,176,7)" rx="2" ry="2" />
<text  x="69.75" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.28%)</title><rect x="65.1" y="213" width="3.3" height="15.0" fill="rgb(206,39,44)" rx="2" ry="2" />
<text  x="68.08" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.14%)</title><rect x="664.3" y="357" width="1.6" height="15.0" fill="rgb(233,218,39)" rx="2" ry="2" />
<text  x="667.26" y="367.5" ></text>
</g>
<g >
<title>query_result_builder::consume (20 samples, 2.83%)</title><rect x="407.2" y="437" width="33.4" height="15.0" fill="rgb(254,94,2)" rx="2" ry="2" />
<text  x="410.23" y="447.5" >qu..</text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (2 samples, 0.28%)</title><rect x="15.0" y="565" width="3.3" height="15.0" fill="rgb(228,160,20)" rx="2" ry="2" />
<text  x="18.01" y="575.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.14%)</title><rect x="262.0" y="405" width="1.7" height="15.0" fill="rgb(225,59,10)" rx="2" ry="2" />
<text  x="265.02" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.42%)</title><rect x="1049.8" y="485" width="5.0" height="15.0" fill="rgb(249,197,14)" rx="2" ry="2" />
<text  x="1052.80" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.14%)</title><rect x="1033.1" y="437" width="1.7" height="15.0" fill="rgb(227,48,22)" rx="2" ry="2" />
<text  x="1036.11" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.14%)</title><rect x="93.5" y="261" width="1.6" height="15.0" fill="rgb(208,136,22)" rx="2" ry="2" />
<text  x="96.45" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (2 samples, 0.28%)</title><rect x="1093.2" y="549" width="3.3" height="15.0" fill="rgb(222,80,46)" rx="2" ry="2" />
<text  x="1096.20" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="1048.1" y="469" width="1.7" height="15.0" fill="rgb(234,13,40)" rx="2" ry="2" />
<text  x="1051.13" y="479.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (2 samples, 0.28%)</title><rect x="352.1" y="293" width="3.4" height="15.0" fill="rgb(246,73,7)" rx="2" ry="2" />
<text  x="355.15" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.14%)</title><rect x="98.5" y="117" width="1.6" height="15.0" fill="rgb(243,174,15)" rx="2" ry="2" />
<text  x="101.46" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::back (1 samples, 0.14%)</title><rect x="75.1" y="325" width="1.7" height="15.0" fill="rgb(230,55,38)" rx="2" ry="2" />
<text  x="78.09" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (6 samples, 0.85%)</title><rect x="90.1" y="341" width="10.0" height="15.0" fill="rgb(208,179,6)" rx="2" ry="2" />
<text  x="93.11" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (7 samples, 0.99%)</title><rect x="817.8" y="501" width="11.7" height="15.0" fill="rgb(230,7,6)" rx="2" ry="2" />
<text  x="820.81" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.14%)</title><rect x="936.3" y="341" width="1.7" height="15.0" fill="rgb(224,201,35)" rx="2" ry="2" />
<text  x="939.31" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::alter_table_statement*, std::default_delete&lt;cql3::statements::alter_table_statement&gt; &gt; (1 samples, 0.14%)</title><rect x="113.5" y="389" width="1.6" height="15.0" fill="rgb(216,91,40)" rx="2" ry="2" />
<text  x="116.48" y="399.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (2 samples, 0.28%)</title><rect x="101.8" y="357" width="3.3" height="15.0" fill="rgb(245,85,0)" rx="2" ry="2" />
<text  x="104.80" y="367.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.14%)</title><rect x="136.8" y="613" width="1.7" height="15.0" fill="rgb(227,167,25)" rx="2" ry="2" />
<text  x="139.85" y="623.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (9 samples, 1.27%)</title><rect x="1011.4" y="325" width="15.0" height="15.0" fill="rgb(209,76,50)" rx="2" ry="2" />
<text  x="1014.41" y="335.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.28%)</title><rect x="422.2" y="405" width="3.4" height="15.0" fill="rgb(234,123,8)" rx="2" ry="2" />
<text  x="425.25" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::max_size (1 samples, 0.14%)</title><rect x="73.4" y="293" width="1.7" height="15.0" fill="rgb(234,5,51)" rx="2" ry="2" />
<text  x="76.42" y="303.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.14%)</title><rect x="594.2" y="453" width="1.6" height="15.0" fill="rgb(239,223,43)" rx="2" ry="2" />
<text  x="597.16" y="463.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.14%)</title><rect x="300.4" y="325" width="1.7" height="15.0" fill="rgb(226,114,35)" rx="2" ry="2" />
<text  x="303.41" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (36 samples, 5.09%)</title><rect x="295.4" y="357" width="60.1" height="15.0" fill="rgb(207,137,26)" rx="2" ry="2" />
<text  x="298.40" y="367.5" >partit..</text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureISt5tupleIJEEE14discard_resultEvEUlDpOT_E_ZNS7_14then_impl_nrvoISB_NS4_IvEEEET0_OT_EUlOS3_RSB_ONS_12future_stateIS6_EEE_S6_E15run_and_disposeEv (1 samples, 0.14%)</title><rect x="158.5" y="533" width="1.7" height="15.0" fill="rgb(221,205,25)" rx="2" ry="2" />
<text  x="161.54" y="543.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (4 samples, 0.57%)</title><rect x="966.4" y="261" width="6.6" height="15.0" fill="rgb(244,174,9)" rx="2" ry="2" />
<text  x="969.35" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.14%)</title><rect x="95.1" y="261" width="1.7" height="15.0" fill="rgb(240,198,1)" rx="2" ry="2" />
<text  x="98.12" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.14%)</title><rect x="188.6" y="469" width="1.7" height="15.0" fill="rgb(221,158,42)" rx="2" ry="2" />
<text  x="191.59" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (8 samples, 1.13%)</title><rect x="36.7" y="373" width="13.4" height="15.0" fill="rgb(213,10,24)" rx="2" ry="2" />
<text  x="39.70" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.14%)</title><rect x="664.3" y="517" width="1.6" height="15.0" fill="rgb(213,218,35)" rx="2" ry="2" />
<text  x="667.26" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="564.1" y="421" width="1.7" height="15.0" fill="rgb(209,148,32)" rx="2" ry="2" />
<text  x="567.12" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.14%)</title><rect x="93.5" y="293" width="1.6" height="15.0" fill="rgb(212,29,13)" rx="2" ry="2" />
<text  x="96.45" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="56.7" y="341" width="1.7" height="15.0" fill="rgb(234,134,3)" rx="2" ry="2" />
<text  x="59.73" y="351.5" ></text>
</g>
<g >
<title>service::client_state::has_access (20 samples, 2.83%)</title><rect x="739.4" y="437" width="33.3" height="15.0" fill="rgb(240,24,52)" rx="2" ry="2" />
<text  x="742.36" y="447.5" >se..</text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (9 samples, 1.27%)</title><rect x="425.6" y="405" width="15.0" height="15.0" fill="rgb(211,173,4)" rx="2" ry="2" />
<text  x="428.59" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.14%)</title><rect x="96.8" y="325" width="1.7" height="15.0" fill="rgb(217,217,12)" rx="2" ry="2" />
<text  x="99.79" y="335.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (63 samples, 8.91%)</title><rect x="23.4" y="533" width="105.1" height="15.0" fill="rgb(220,149,0)" rx="2" ry="2" />
<text  x="26.35" y="543.5" >single_node_..</text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.14%)</title><rect x="126.8" y="405" width="1.7" height="15.0" fill="rgb(243,69,15)" rx="2" ry="2" />
<text  x="129.83" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::create_view_statement*, std::default_delete&lt;cql3::statements::create_view_statement&gt; &gt;::_Tuple_impl (1 samples, 0.14%)</title><rect x="115.1" y="357" width="1.7" height="15.0" fill="rgb(212,78,20)" rx="2" ry="2" />
<text  x="118.15" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (6 samples, 0.85%)</title><rect x="397.2" y="437" width="10.0" height="15.0" fill="rgb(247,76,31)" rx="2" ry="2" />
<text  x="400.21" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (3 samples, 0.42%)</title><rect x="659.3" y="533" width="5.0" height="15.0" fill="rgb(220,54,54)" rx="2" ry="2" />
<text  x="662.25" y="543.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.14%)</title><rect x="105.1" y="357" width="1.7" height="15.0" fill="rgb(214,132,22)" rx="2" ry="2" />
<text  x="108.13" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.14%)</title><rect x="78.4" y="309" width="1.7" height="15.0" fill="rgb(250,48,47)" rx="2" ry="2" />
<text  x="81.43" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="105.1" y="261" width="1.7" height="15.0" fill="rgb(213,130,13)" rx="2" ry="2" />
<text  x="108.13" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.14%)</title><rect x="812.8" y="533" width="1.7" height="15.0" fill="rgb(220,197,7)" rx="2" ry="2" />
<text  x="815.80" y="543.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.14%)</title><rect x="40.0" y="277" width="1.7" height="15.0" fill="rgb(235,135,15)" rx="2" ry="2" />
<text  x="43.04" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="106.8" y="325" width="1.7" height="15.0" fill="rgb(253,177,34)" rx="2" ry="2" />
<text  x="109.80" y="335.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (144 samples, 20.37%)</title><rect x="817.8" y="533" width="240.3" height="15.0" fill="rgb(249,38,12)" rx="2" ry="2" />
<text  x="820.81" y="543.5" >seastar::lambda_task&lt;seastar::e..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="225.3" y="469" width="1.7" height="15.0" fill="rgb(210,180,14)" rx="2" ry="2" />
<text  x="228.30" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="669.3" y="517" width="1.6" height="15.0" fill="rgb(230,26,39)" rx="2" ry="2" />
<text  x="672.26" y="527.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.14%)</title><rect x="61.7" y="213" width="1.7" height="15.0" fill="rgb(239,74,14)" rx="2" ry="2" />
<text  x="64.74" y="223.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.14%)</title><rect x="664.3" y="453" width="1.6" height="15.0" fill="rgb(247,45,7)" rx="2" ry="2" />
<text  x="667.26" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (258 samples, 36.49%)</title><rect x="175.2" y="517" width="430.6" height="15.0" fill="rgb(209,127,16)" rx="2" ry="2" />
<text  x="178.23" y="527.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (9 samples, 1.27%)</title><rect x="644.2" y="533" width="15.1" height="15.0" fill="rgb(219,165,33)" rx="2" ry="2" />
<text  x="647.23" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.28%)</title><rect x="492.3" y="453" width="3.4" height="15.0" fill="rgb(233,219,47)" rx="2" ry="2" />
<text  x="495.35" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::raw::parsed_statement*, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::_M_head (1 samples, 0.14%)</title><rect x="121.8" y="341" width="1.7" height="15.0" fill="rgb(227,167,21)" rx="2" ry="2" />
<text  x="124.82" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.14%)</title><rect x="355.5" y="357" width="1.7" height="15.0" fill="rgb(207,106,4)" rx="2" ry="2" />
<text  x="358.49" y="367.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.14%)</title><rect x="310.4" y="309" width="1.7" height="15.0" fill="rgb(234,190,40)" rx="2" ry="2" />
<text  x="313.42" y="319.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.14%)</title><rect x="978.0" y="309" width="1.7" height="15.0" fill="rgb(239,99,34)" rx="2" ry="2" />
<text  x="981.03" y="319.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.14%)</title><rect x="101.8" y="261" width="1.7" height="15.0" fill="rgb(223,221,35)" rx="2" ry="2" />
<text  x="104.80" y="271.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (2 samples, 0.28%)</title><rect x="1081.5" y="517" width="3.4" height="15.0" fill="rgb(248,185,14)" rx="2" ry="2" />
<text  x="1084.51" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (67 samples, 9.48%)</title><rect x="20.0" y="581" width="111.8" height="15.0" fill="rgb(236,24,28)" rx="2" ry="2" />
<text  x="23.01" y="591.5" >std::_Functio..</text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.14%)</title><rect x="95.1" y="325" width="1.7" height="15.0" fill="rgb(213,227,28)" rx="2" ry="2" />
<text  x="98.12" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_view_statement, std::default_delete&lt;cql3::statements::create_view_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="115.1" y="389" width="1.7" height="15.0" fill="rgb(246,193,7)" rx="2" ry="2" />
<text  x="118.15" y="399.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.42%)</title><rect x="707.7" y="469" width="5.0" height="15.0" fill="rgb(218,17,53)" rx="2" ry="2" />
<text  x="710.65" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.28%)</title><rect x="973.0" y="261" width="3.4" height="15.0" fill="rgb(211,119,15)" rx="2" ry="2" />
<text  x="976.03" y="271.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.14%)</title><rect x="717.7" y="485" width="1.6" height="15.0" fill="rgb(238,101,2)" rx="2" ry="2" />
<text  x="720.67" y="495.5" ></text>
</g>
<g >
<title>__start_context (72 samples, 10.18%)</title><rect x="11.7" y="629" width="120.1" height="15.0" fill="rgb(252,17,44)" rx="2" ry="2" />
<text  x="14.67" y="639.5" >__start_context</text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.14%)</title><rect x="420.6" y="405" width="1.6" height="15.0" fill="rgb(253,104,9)" rx="2" ry="2" />
<text  x="423.58" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::_M_ptr (1 samples, 0.14%)</title><rect x="108.5" y="341" width="1.6" height="15.0" fill="rgb(237,57,6)" rx="2" ry="2" />
<text  x="111.47" y="351.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.14%)</title><rect x="61.7" y="149" width="1.7" height="15.0" fill="rgb(250,38,49)" rx="2" ry="2" />
<text  x="64.74" y="159.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (50 samples, 7.07%)</title><rect x="36.7" y="437" width="83.5" height="15.0" fill="rgb(211,48,49)" rx="2" ry="2" />
<text  x="39.70" y="447.5" >cql3_pars..</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.14%)</title><rect x="80.1" y="293" width="1.7" height="15.0" fill="rgb(214,13,28)" rx="2" ry="2" />
<text  x="83.10" y="303.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (9 samples, 1.27%)</title><rect x="337.1" y="293" width="15.0" height="15.0" fill="rgb(250,16,26)" rx="2" ry="2" />
<text  x="340.13" y="303.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="667.6" y="517" width="1.7" height="15.0" fill="rgb(228,17,1)" rx="2" ry="2" />
<text  x="670.60" y="527.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (2 samples, 0.28%)</title><rect x="821.1" y="421" width="3.4" height="15.0" fill="rgb(243,101,30)" rx="2" ry="2" />
<text  x="824.15" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.28%)</title><rect x="545.8" y="405" width="3.3" height="15.0" fill="rgb(240,193,49)" rx="2" ry="2" />
<text  x="548.76" y="415.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (3 samples, 0.42%)</title><rect x="534.1" y="421" width="5.0" height="15.0" fill="rgb(226,192,0)" rx="2" ry="2" />
<text  x="537.07" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.14%)</title><rect x="577.5" y="389" width="1.6" height="15.0" fill="rgb(210,45,9)" rx="2" ry="2" />
<text  x="580.47" y="399.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (3 samples, 0.42%)</title><rect x="123.5" y="421" width="5.0" height="15.0" fill="rgb(224,160,12)" rx="2" ry="2" />
<text  x="126.49" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="667.6" y="501" width="1.7" height="15.0" fill="rgb(226,175,17)" rx="2" ry="2" />
<text  x="670.60" y="511.5" ></text>
</g>
<g >
<title>hwloc_linux_set_tid_cpubind (8 samples, 1.13%)</title><rect x="1116.6" y="661" width="13.3" height="15.0" fill="rgb(240,124,28)" rx="2" ry="2" />
<text  x="1119.56" y="671.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.28%)</title><rect x="86.8" y="341" width="3.3" height="15.0" fill="rgb(251,61,17)" rx="2" ry="2" />
<text  x="89.78" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.28%)</title><rect x="797.8" y="453" width="3.3" height="15.0" fill="rgb(209,187,28)" rx="2" ry="2" />
<text  x="800.78" y="463.5" ></text>
</g>
<g >
<title>perf_simple_que (707 samples, 100.00%)</title><rect x="10.0" y="677" width="1180.0" height="15.0" fill="rgb(236,224,2)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >perf_simple_que</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.14%)</title><rect x="101.8" y="245" width="1.7" height="15.0" fill="rgb(213,126,25)" rx="2" ry="2" />
<text  x="104.80" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="861.2" y="341" width="1.7" height="15.0" fill="rgb(211,7,20)" rx="2" ry="2" />
<text  x="864.20" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.28%)</title><rect x="80.1" y="309" width="3.3" height="15.0" fill="rgb(222,136,48)" rx="2" ry="2" />
<text  x="83.10" y="319.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="365.5" y="421" width="1.7" height="15.0" fill="rgb(206,110,8)" rx="2" ry="2" />
<text  x="368.50" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (16 samples, 2.26%)</title><rect x="617.5" y="533" width="26.7" height="15.0" fill="rgb(243,14,22)" rx="2" ry="2" />
<text  x="620.52" y="543.5" >s..</text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.14%)</title><rect x="540.7" y="421" width="1.7" height="15.0" fill="rgb(232,19,33)" rx="2" ry="2" />
<text  x="543.75" y="431.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.28%)</title><rect x="699.3" y="517" width="3.3" height="15.0" fill="rgb(229,142,5)" rx="2" ry="2" />
<text  x="702.31" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.14%)</title><rect x="93.5" y="213" width="1.6" height="15.0" fill="rgb(221,87,9)" rx="2" ry="2" />
<text  x="96.45" y="223.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.14%)</title><rect x="377.2" y="453" width="1.7" height="15.0" fill="rgb(223,193,16)" rx="2" ry="2" />
<text  x="380.19" y="463.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.14%)</title><rect x="11.7" y="549" width="1.6" height="15.0" fill="rgb(217,200,48)" rx="2" ry="2" />
<text  x="14.67" y="559.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (569 samples, 80.48%)</title><rect x="143.5" y="549" width="949.7" height="15.0" fill="rgb(247,223,21)" rx="2" ry="2" />
<text  x="146.52" y="559.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>row_cache::do_make_reader (7 samples, 0.99%)</title><rect x="570.8" y="421" width="11.7" height="15.0" fill="rgb(240,3,19)" rx="2" ry="2" />
<text  x="573.79" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.28%)</title><rect x="851.2" y="341" width="3.3" height="15.0" fill="rgb(210,132,20)" rx="2" ry="2" />
<text  x="854.19" y="351.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (5 samples, 0.71%)</title><rect x="866.2" y="421" width="8.4" height="15.0" fill="rgb(249,13,36)" rx="2" ry="2" />
<text  x="869.21" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.28%)</title><rect x="1054.8" y="485" width="3.3" height="15.0" fill="rgb(253,143,0)" rx="2" ry="2" />
<text  x="1057.81" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="1076.5" y="485" width="1.7" height="15.0" fill="rgb(233,226,40)" rx="2" ry="2" />
<text  x="1079.51" y="495.5" ></text>
</g>
<g >
<title>schema_registry::get (4 samples, 0.57%)</title><rect x="919.6" y="389" width="6.7" height="15.0" fill="rgb(221,146,27)" rx="2" ry="2" />
<text  x="922.62" y="399.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.14%)</title><rect x="16.7" y="469" width="1.6" height="15.0" fill="rgb(211,83,11)" rx="2" ry="2" />
<text  x="19.68" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.42%)</title><rect x="914.6" y="373" width="5.0" height="15.0" fill="rgb(252,52,41)" rx="2" ry="2" />
<text  x="917.61" y="383.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.14%)</title><rect x="105.1" y="341" width="1.7" height="15.0" fill="rgb(212,118,40)" rx="2" ry="2" />
<text  x="108.13" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.14%)</title><rect x="56.7" y="197" width="1.7" height="15.0" fill="rgb(224,52,0)" rx="2" ry="2" />
<text  x="59.73" y="207.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (573 samples, 81.05%)</title><rect x="140.2" y="597" width="956.3" height="15.0" fill="rgb(224,85,54)" rx="2" ry="2" />
<text  x="143.18" y="607.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.14%)</title><rect x="98.5" y="293" width="1.6" height="15.0" fill="rgb(214,47,38)" rx="2" ry="2" />
<text  x="101.46" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (7 samples, 0.99%)</title><rect x="851.2" y="389" width="11.7" height="15.0" fill="rgb(237,15,10)" rx="2" ry="2" />
<text  x="854.19" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="230.3" y="453" width="1.7" height="15.0" fill="rgb(226,60,15)" rx="2" ry="2" />
<text  x="233.31" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.14%)</title><rect x="105.1" y="325" width="1.7" height="15.0" fill="rgb(230,84,51)" rx="2" ry="2" />
<text  x="108.13" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (6 samples, 0.85%)</title><rect x="475.7" y="421" width="10.0" height="15.0" fill="rgb(229,41,34)" rx="2" ry="2" />
<text  x="478.66" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (4 samples, 0.57%)</title><rect x="41.7" y="341" width="6.7" height="15.0" fill="rgb(253,52,0)" rx="2" ry="2" />
<text  x="44.71" y="351.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.14%)</title><rect x="280.4" y="357" width="1.7" height="15.0" fill="rgb(252,86,28)" rx="2" ry="2" />
<text  x="283.38" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.14%)</title><rect x="55.1" y="389" width="1.6" height="15.0" fill="rgb(230,154,13)" rx="2" ry="2" />
<text  x="58.06" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.14%)</title><rect x="80.1" y="229" width="1.7" height="15.0" fill="rgb(208,184,45)" rx="2" ry="2" />
<text  x="83.10" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.14%)</title><rect x="66.7" y="85" width="1.7" height="15.0" fill="rgb(208,3,41)" rx="2" ry="2" />
<text  x="69.75" y="95.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.14%)</title><rect x="454.0" y="437" width="1.6" height="15.0" fill="rgb(245,14,16)" rx="2" ry="2" />
<text  x="456.96" y="447.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.28%)</title><rect x="222.0" y="485" width="3.3" height="15.0" fill="rgb(248,45,8)" rx="2" ry="2" />
<text  x="224.97" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.42%)</title><rect x="313.8" y="309" width="5.0" height="15.0" fill="rgb(231,28,39)" rx="2" ry="2" />
<text  x="316.76" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="479.0" y="389" width="1.7" height="15.0" fill="rgb(231,98,32)" rx="2" ry="2" />
<text  x="482.00" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (1 samples, 0.14%)</title><rect x="105.1" y="373" width="1.7" height="15.0" fill="rgb(231,153,34)" rx="2" ry="2" />
<text  x="108.13" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::list_permissions_statement, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="118.5" y="389" width="1.7" height="15.0" fill="rgb(240,69,49)" rx="2" ry="2" />
<text  x="121.49" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="637.6" y="501" width="1.6" height="15.0" fill="rgb(241,169,27)" rx="2" ry="2" />
<text  x="640.55" y="511.5" ></text>
</g>
<g >
<title>LZ4_compress_fast_extState (1 samples, 0.14%)</title><rect x="10.0" y="645" width="1.7" height="15.0" fill="rgb(218,25,49)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (27 samples, 3.82%)</title><rect x="984.7" y="389" width="45.1" height="15.0" fill="rgb(212,20,27)" rx="2" ry="2" />
<text  x="987.71" y="399.5" >serv..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="101.8" y="277" width="1.7" height="15.0" fill="rgb(228,190,18)" rx="2" ry="2" />
<text  x="104.80" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.14%)</title><rect x="1049.8" y="389" width="1.7" height="15.0" fill="rgb(221,65,2)" rx="2" ry="2" />
<text  x="1052.80" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.14%)</title><rect x="61.7" y="165" width="1.7" height="15.0" fill="rgb(211,90,4)" rx="2" ry="2" />
<text  x="64.74" y="175.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.14%)</title><rect x="83.4" y="245" width="1.7" height="15.0" fill="rgb(231,13,51)" rx="2" ry="2" />
<text  x="86.44" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="56.7" y="277" width="1.7" height="15.0" fill="rgb(252,49,24)" rx="2" ry="2" />
<text  x="59.73" y="287.5" ></text>
</g>
<g >
<title>database::has_keyspace (2 samples, 0.28%)</title><rect x="801.1" y="485" width="3.4" height="15.0" fill="rgb(248,98,15)" rx="2" ry="2" />
<text  x="804.12" y="495.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.14%)</title><rect x="181.9" y="501" width="1.7" height="15.0" fill="rgb(206,185,5)" rx="2" ry="2" />
<text  x="184.91" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="61.7" y="325" width="1.7" height="15.0" fill="rgb(251,149,38)" rx="2" ry="2" />
<text  x="64.74" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="670.9" y="517" width="1.7" height="15.0" fill="rgb(227,49,45)" rx="2" ry="2" />
<text  x="673.93" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.14%)</title><rect x="597.5" y="485" width="1.7" height="15.0" fill="rgb(215,37,41)" rx="2" ry="2" />
<text  x="600.50" y="495.5" ></text>
</g>
<g >
<title>database::apply_in_memory (3 samples, 0.42%)</title><rect x="1049.8" y="437" width="5.0" height="15.0" fill="rgb(207,125,6)" rx="2" ry="2" />
<text  x="1052.80" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.14%)</title><rect x="302.1" y="325" width="1.6" height="15.0" fill="rgb(244,127,9)" rx="2" ry="2" />
<text  x="305.08" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="557.4" y="373" width="1.7" height="15.0" fill="rgb(240,220,12)" rx="2" ry="2" />
<text  x="560.44" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="56.7" y="261" width="1.7" height="15.0" fill="rgb(250,99,16)" rx="2" ry="2" />
<text  x="59.73" y="271.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (72 samples, 10.18%)</title><rect x="11.7" y="613" width="120.1" height="15.0" fill="rgb(234,75,29)" rx="2" ry="2" />
<text  x="14.67" y="623.5" >seastar::threa..</text>
</g>
<g >
<title>query::querier_base::close (14 samples, 1.98%)</title><rect x="467.3" y="485" width="23.4" height="15.0" fill="rgb(241,227,22)" rx="2" ry="2" />
<text  x="470.31" y="495.5" >q..</text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.14%)</title><rect x="664.3" y="469" width="1.6" height="15.0" fill="rgb(207,190,42)" rx="2" ry="2" />
<text  x="667.26" y="479.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (57 samples, 8.06%)</title><rect x="490.7" y="485" width="95.1" height="15.0" fill="rgb(210,67,29)" rx="2" ry="2" />
<text  x="493.68" y="495.5" >query::quer..</text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.14%)</title><rect x="664.3" y="485" width="1.6" height="15.0" fill="rgb(251,71,14)" rx="2" ry="2" />
<text  x="667.26" y="495.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (60 samples, 8.49%)</title><rect x="23.4" y="501" width="100.1" height="15.0" fill="rgb(215,106,43)" rx="2" ry="2" />
<text  x="26.35" y="511.5" >cql3::query_..</text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (2 samples, 0.28%)</title><rect x="1093.2" y="533" width="3.3" height="15.0" fill="rgb(227,189,29)" rx="2" ry="2" />
<text  x="1096.20" y="543.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.14%)</title><rect x="101.8" y="229" width="1.7" height="15.0" fill="rgb(245,136,7)" rx="2" ry="2" />
<text  x="104.80" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (2 samples, 0.28%)</title><rect x="86.8" y="261" width="3.3" height="15.0" fill="rgb(223,42,41)" rx="2" ry="2" />
<text  x="89.78" y="271.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.14%)</title><rect x="484.0" y="405" width="1.7" height="15.0" fill="rgb(222,44,32)" rx="2" ry="2" />
<text  x="487.00" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.14%)</title><rect x="826.2" y="357" width="1.6" height="15.0" fill="rgb(251,33,52)" rx="2" ry="2" />
<text  x="829.15" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (1 samples, 0.14%)</title><rect x="694.3" y="533" width="1.7" height="15.0" fill="rgb(245,186,18)" rx="2" ry="2" />
<text  x="697.30" y="543.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.14%)</title><rect x="353.8" y="277" width="1.7" height="15.0" fill="rgb(223,6,34)" rx="2" ry="2" />
<text  x="356.82" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.14%)</title><rect x="16.7" y="453" width="1.6" height="15.0" fill="rgb(217,31,26)" rx="2" ry="2" />
<text  x="19.68" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.14%)</title><rect x="100.1" y="341" width="1.7" height="15.0" fill="rgb(221,128,39)" rx="2" ry="2" />
<text  x="103.13" y="351.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.14%)</title><rect x="88.4" y="245" width="1.7" height="15.0" fill="rgb(226,213,30)" rx="2" ry="2" />
<text  x="91.44" y="255.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::list_permissions_statement*, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.14%)</title><rect x="118.5" y="373" width="1.7" height="15.0" fill="rgb(225,64,47)" rx="2" ry="2" />
<text  x="121.49" y="383.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="367.2" y="469" width="1.6" height="15.0" fill="rgb(237,61,22)" rx="2" ry="2" />
<text  x="370.17" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (10 samples, 1.41%)</title><rect x="959.7" y="277" width="16.7" height="15.0" fill="rgb(216,227,23)" rx="2" ry="2" />
<text  x="962.67" y="287.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.28%)</title><rect x="876.2" y="437" width="3.4" height="15.0" fill="rgb(224,62,41)" rx="2" ry="2" />
<text  x="879.22" y="447.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.14%)</title><rect x="56.7" y="229" width="1.7" height="15.0" fill="rgb(215,109,47)" rx="2" ry="2" />
<text  x="59.73" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.14%)</title><rect x="91.8" y="293" width="1.7" height="15.0" fill="rgb(209,157,17)" rx="2" ry="2" />
<text  x="94.78" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.14%)</title><rect x="93.5" y="245" width="1.6" height="15.0" fill="rgb(230,0,26)" rx="2" ry="2" />
<text  x="96.45" y="255.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="564.1" y="437" width="1.7" height="15.0" fill="rgb(214,142,37)" rx="2" ry="2" />
<text  x="567.12" y="447.5" ></text>
</g>
<g >
<title>service::write_response_handler::~write_response_handler (1 samples, 0.14%)</title><rect x="1084.9" y="533" width="1.6" height="15.0" fill="rgb(224,197,36)" rx="2" ry="2" />
<text  x="1087.85" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.28%)</title><rect x="83.4" y="309" width="3.4" height="15.0" fill="rgb(232,165,42)" rx="2" ry="2" />
<text  x="86.44" y="319.5" ></text>
</g>
<g >
<title>row::~row (3 samples, 0.42%)</title><rect x="282.1" y="357" width="5.0" height="15.0" fill="rgb(238,161,38)" rx="2" ry="2" />
<text  x="285.05" y="367.5" ></text>
</g>
<g >
<title>__libc_start_main (573 samples, 81.05%)</title><rect x="140.2" y="661" width="956.3" height="15.0" fill="rgb(207,226,53)" rx="2" ry="2" />
<text  x="143.18" y="671.5" >__libc_start_main</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.14%)</title><rect x="16.7" y="485" width="1.6" height="15.0" fill="rgb(229,221,39)" rx="2" ry="2" />
<text  x="19.68" y="495.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (4 samples, 0.57%)</title><rect x="706.0" y="485" width="6.7" height="15.0" fill="rgb(219,188,32)" rx="2" ry="2" />
<text  x="708.98" y="495.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (3 samples, 0.42%)</title><rect x="123.5" y="453" width="5.0" height="15.0" fill="rgb(216,82,5)" rx="2" ry="2" />
<text  x="126.49" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.28%)</title><rect x="65.1" y="245" width="3.3" height="15.0" fill="rgb(206,192,54)" rx="2" ry="2" />
<text  x="68.08" y="255.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::statements::list_permissions_statement&gt;, true&gt;::_Head_base (1 samples, 0.14%)</title><rect x="118.5" y="341" width="1.7" height="15.0" fill="rgb(205,29,33)" rx="2" ry="2" />
<text  x="121.49" y="351.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;clustering_key_prefix&gt;::has_supporting_index (1 samples, 0.14%)</title><rect x="31.7" y="437" width="1.7" height="15.0" fill="rgb(232,31,16)" rx="2" ry="2" />
<text  x="34.70" y="447.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (4 samples, 0.57%)</title><rect x="1041.5" y="453" width="6.6" height="15.0" fill="rgb(246,21,10)" rx="2" ry="2" />
<text  x="1044.46" y="463.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.57%)</title><rect x="912.9" y="389" width="6.7" height="15.0" fill="rgb(246,8,8)" rx="2" ry="2" />
<text  x="915.94" y="399.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.14%)</title><rect x="562.4" y="421" width="1.7" height="15.0" fill="rgb(251,215,40)" rx="2" ry="2" />
<text  x="565.45" y="431.5" ></text>
</g>
<g >
<title>auth::operator== (1 samples, 0.14%)</title><rect x="126.8" y="389" width="1.7" height="15.0" fill="rgb(218,193,31)" rx="2" ry="2" />
<text  x="129.83" y="399.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (47 samples, 6.65%)</title><rect x="722.7" y="485" width="78.4" height="15.0" fill="rgb(249,19,28)" rx="2" ry="2" />
<text  x="725.67" y="495.5" >cql3::que..</text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (1 samples, 0.14%)</title><rect x="874.6" y="421" width="1.6" height="15.0" fill="rgb(222,172,48)" rx="2" ry="2" />
<text  x="877.55" y="431.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (2 samples, 0.28%)</title><rect x="1054.8" y="517" width="3.3" height="15.0" fill="rgb(222,190,31)" rx="2" ry="2" />
<text  x="1057.81" y="527.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.14%)</title><rect x="575.8" y="405" width="1.7" height="15.0" fill="rgb(210,41,16)" rx="2" ry="2" />
<text  x="578.80" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="68.4" y="341" width="1.7" height="15.0" fill="rgb(232,148,36)" rx="2" ry="2" />
<text  x="71.42" y="351.5" ></text>
</g>
<g >
<title>seastar::app_template::run (573 samples, 81.05%)</title><rect x="140.2" y="629" width="956.3" height="15.0" fill="rgb(235,227,50)" rx="2" ry="2" />
<text  x="143.18" y="639.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (2 samples, 0.28%)</title><rect x="86.8" y="277" width="3.3" height="15.0" fill="rgb(228,14,34)" rx="2" ry="2" />
<text  x="89.78" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (53 samples, 7.50%)</title><rect x="35.0" y="469" width="88.5" height="15.0" fill="rgb(210,218,16)" rx="2" ry="2" />
<text  x="38.04" y="479.5" >seastar::n..</text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.14%)</title><rect x="824.5" y="357" width="1.7" height="15.0" fill="rgb(251,203,4)" rx="2" ry="2" />
<text  x="827.48" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="80.1" y="181" width="1.7" height="15.0" fill="rgb(211,76,1)" rx="2" ry="2" />
<text  x="83.10" y="191.5" ></text>
</g>
<g >
<title>ser::mutation_partition_view::rows (1 samples, 0.14%)</title><rect x="1051.5" y="373" width="1.6" height="15.0" fill="rgb(230,27,43)" rx="2" ry="2" />
<text  x="1054.47" y="383.5" ></text>
</g>
<g >
<title>validation::validate_column_family (5 samples, 0.71%)</title><rect x="777.8" y="437" width="8.3" height="15.0" fill="rgb(248,203,17)" rx="2" ry="2" />
<text  x="780.75" y="447.5" ></text>
</g>
<g >
<title>[[vdso]] (4 samples, 0.57%)</title><rect x="1108.2" y="645" width="6.7" height="15.0" fill="rgb(249,130,12)" rx="2" ry="2" />
<text  x="1111.22" y="655.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (1 samples, 0.14%)</title><rect x="872.9" y="405" width="1.7" height="15.0" fill="rgb(210,23,38)" rx="2" ry="2" />
<text  x="875.89" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (4 samples, 0.57%)</title><rect x="26.7" y="469" width="6.7" height="15.0" fill="rgb(207,111,36)" rx="2" ry="2" />
<text  x="29.69" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.14%)</title><rect x="68.4" y="357" width="1.7" height="15.0" fill="rgb(205,82,7)" rx="2" ry="2" />
<text  x="71.42" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (11 samples, 1.56%)</title><rect x="467.3" y="453" width="18.4" height="15.0" fill="rgb(236,162,52)" rx="2" ry="2" />
<text  x="470.31" y="463.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.14%)</title><rect x="98.5" y="101" width="1.6" height="15.0" fill="rgb(249,59,41)" rx="2" ry="2" />
<text  x="101.46" y="111.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (3 samples, 0.42%)</title><rect x="1049.8" y="517" width="5.0" height="15.0" fill="rgb(227,104,37)" rx="2" ry="2" />
<text  x="1052.80" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="1033.1" y="421" width="1.7" height="15.0" fill="rgb(206,165,33)" rx="2" ry="2" />
<text  x="1036.11" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="98.5" y="277" width="1.6" height="15.0" fill="rgb(216,206,37)" rx="2" ry="2" />
<text  x="101.46" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.28%)</title><rect x="71.8" y="325" width="3.3" height="15.0" fill="rgb(247,146,35)" rx="2" ry="2" />
<text  x="74.75" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="68.4" y="309" width="1.7" height="15.0" fill="rgb(221,130,54)" rx="2" ry="2" />
<text  x="71.42" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (2 samples, 0.28%)</title><rect x="627.5" y="485" width="3.4" height="15.0" fill="rgb(210,56,3)" rx="2" ry="2" />
<text  x="630.54" y="495.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.14%)</title><rect x="375.5" y="453" width="1.7" height="15.0" fill="rgb(224,98,6)" rx="2" ry="2" />
<text  x="378.52" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (4 samples, 0.57%)</title><rect x="607.5" y="533" width="6.7" height="15.0" fill="rgb(241,60,38)" rx="2" ry="2" />
<text  x="610.51" y="543.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (8 samples, 1.13%)</title><rect x="679.3" y="533" width="13.3" height="15.0" fill="rgb(218,183,44)" rx="2" ry="2" />
<text  x="682.28" y="543.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.14%)</title><rect x="48.4" y="357" width="1.7" height="15.0" fill="rgb(211,129,2)" rx="2" ry="2" />
<text  x="51.39" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (9 samples, 1.27%)</title><rect x="847.9" y="421" width="15.0" height="15.0" fill="rgb(243,68,7)" rx="2" ry="2" />
<text  x="850.85" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="121.8" y="437" width="1.7" height="15.0" fill="rgb(212,140,4)" rx="2" ry="2" />
<text  x="124.82" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="639.2" y="517" width="1.7" height="15.0" fill="rgb(237,221,51)" rx="2" ry="2" />
<text  x="642.22" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.14%)</title><rect x="60.1" y="373" width="1.6" height="15.0" fill="rgb(222,83,14)" rx="2" ry="2" />
<text  x="63.07" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.42%)</title><rect x="772.7" y="437" width="5.1" height="15.0" fill="rgb(233,88,35)" rx="2" ry="2" />
<text  x="775.74" y="447.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.14%)</title><rect x="33.4" y="453" width="1.6" height="15.0" fill="rgb(249,228,4)" rx="2" ry="2" />
<text  x="36.37" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.28%)</title><rect x="1038.1" y="437" width="3.4" height="15.0" fill="rgb(232,103,29)" rx="2" ry="2" />
<text  x="1041.12" y="447.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.14%)</title><rect x="51.7" y="405" width="1.7" height="15.0" fill="rgb(231,196,32)" rx="2" ry="2" />
<text  x="54.73" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::alter_table_statement*, std::default_delete&lt;cql3::statements::alter_table_statement&gt; &gt; (1 samples, 0.14%)</title><rect x="113.5" y="373" width="1.6" height="15.0" fill="rgb(210,204,43)" rx="2" ry="2" />
<text  x="116.48" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="657.6" y="517" width="1.7" height="15.0" fill="rgb(234,3,52)" rx="2" ry="2" />
<text  x="660.58" y="527.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="128.5" y="549" width="1.7" height="15.0" fill="rgb(247,33,53)" rx="2" ry="2" />
<text  x="131.50" y="559.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (126 samples, 17.82%)</title><rect x="839.5" y="485" width="210.3" height="15.0" fill="rgb(222,21,46)" rx="2" ry="2" />
<text  x="842.50" y="495.5" >seastar::noncopyable_functi..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.14%)</title><rect x="56.7" y="213" width="1.7" height="15.0" fill="rgb(252,6,53)" rx="2" ry="2" />
<text  x="59.73" y="223.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="696.0" y="533" width="1.6" height="15.0" fill="rgb(243,106,5)" rx="2" ry="2" />
<text  x="698.97" y="543.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="680.9" y="517" width="1.7" height="15.0" fill="rgb(225,88,23)" rx="2" ry="2" />
<text  x="683.95" y="527.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.28%)</title><rect x="450.6" y="421" width="3.4" height="15.0" fill="rgb(241,75,46)" rx="2" ry="2" />
<text  x="453.62" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.14%)</title><rect x="1086.5" y="533" width="1.7" height="15.0" fill="rgb(208,27,2)" rx="2" ry="2" />
<text  x="1089.52" y="543.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (31 samples, 4.38%)</title><rect x="303.7" y="341" width="51.8" height="15.0" fill="rgb(215,69,18)" rx="2" ry="2" />
<text  x="306.75" y="351.5" >parti..</text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (4 samples, 0.57%)</title><rect x="183.6" y="485" width="6.7" height="15.0" fill="rgb(250,129,15)" rx="2" ry="2" />
<text  x="186.58" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="964.7" y="261" width="1.7" height="15.0" fill="rgb(221,225,48)" rx="2" ry="2" />
<text  x="967.68" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (2 samples, 0.28%)</title><rect x="1054.8" y="421" width="3.3" height="15.0" fill="rgb(218,120,50)" rx="2" ry="2" />
<text  x="1057.81" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.14%)</title><rect x="238.7" y="453" width="1.6" height="15.0" fill="rgb(208,160,20)" rx="2" ry="2" />
<text  x="241.66" y="463.5" ></text>
</g>
<g >
<title>dht::tri_compare (3 samples, 0.42%)</title><rect x="534.1" y="405" width="5.0" height="15.0" fill="rgb(231,63,26)" rx="2" ry="2" />
<text  x="537.07" y="415.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.14%)</title><rect x="138.5" y="581" width="1.7" height="15.0" fill="rgb(205,51,38)" rx="2" ry="2" />
<text  x="141.51" y="591.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.14%)</title><rect x="55.1" y="357" width="1.6" height="15.0" fill="rgb(211,131,44)" rx="2" ry="2" />
<text  x="58.06" y="367.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (7 samples, 0.99%)</title><rect x="817.8" y="517" width="11.7" height="15.0" fill="rgb(217,108,48)" rx="2" ry="2" />
<text  x="820.81" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.14%)</title><rect x="75.1" y="309" width="1.7" height="15.0" fill="rgb(239,209,40)" rx="2" ry="2" />
<text  x="78.09" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::reset (1 samples, 0.14%)</title><rect x="121.8" y="389" width="1.7" height="15.0" fill="rgb(242,29,31)" rx="2" ry="2" />
<text  x="124.82" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (69 samples, 9.76%)</title><rect x="697.6" y="533" width="115.2" height="15.0" fill="rgb(210,102,36)" rx="2" ry="2" />
<text  x="700.64" y="543.5" >seastar::inter..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.14%)</title><rect x="90.1" y="325" width="1.7" height="15.0" fill="rgb(209,59,23)" rx="2" ry="2" />
<text  x="93.11" y="335.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.14%)</title><rect x="979.7" y="325" width="1.7" height="15.0" fill="rgb(253,212,1)" rx="2" ry="2" />
<text  x="982.70" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.28%)</title><rect x="632.5" y="501" width="3.4" height="15.0" fill="rgb(207,127,25)" rx="2" ry="2" />
<text  x="635.55" y="511.5" ></text>
</g>
<g >
<title>table::query (248 samples, 35.08%)</title><rect x="191.9" y="501" width="413.9" height="15.0" fill="rgb(209,111,24)" rx="2" ry="2" />
<text  x="194.92" y="511.5" >table::query</text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.14%)</title><rect x="275.4" y="389" width="1.6" height="15.0" fill="rgb(229,183,0)" rx="2" ry="2" />
<text  x="278.37" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.14%)</title><rect x="826.2" y="389" width="1.6" height="15.0" fill="rgb(210,83,5)" rx="2" ry="2" />
<text  x="829.15" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="290.4" y="341" width="1.7" height="15.0" fill="rgb(239,139,44)" rx="2" ry="2" />
<text  x="293.40" y="351.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.14%)</title><rect x="664.3" y="437" width="1.6" height="15.0" fill="rgb(229,119,46)" rx="2" ry="2" />
<text  x="667.26" y="447.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (36 samples, 5.09%)</title><rect x="1129.9" y="661" width="60.1" height="15.0" fill="rgb(249,172,15)" rx="2" ry="2" />
<text  x="1132.92" y="671.5" >sched_..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="55.1" y="325" width="1.6" height="15.0" fill="rgb(212,170,2)" rx="2" ry="2" />
<text  x="58.06" y="335.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (53 samples, 7.50%)</title><rect x="378.9" y="453" width="88.4" height="15.0" fill="rgb(217,171,41)" rx="2" ry="2" />
<text  x="381.85" y="463.5" >seastar::d..</text>
</g>
<g >
<title>service::client_state::has_column_family_access (3 samples, 0.42%)</title><rect x="123.5" y="485" width="5.0" height="15.0" fill="rgb(209,165,27)" rx="2" ry="2" />
<text  x="126.49" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="549.1" y="373" width="1.7" height="15.0" fill="rgb(232,188,38)" rx="2" ry="2" />
<text  x="552.09" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_service_level_statement, std::default_delete&lt;cql3::statements::create_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_service_level_statement&gt;, void&gt; (1 samples, 0.14%)</title><rect x="120.2" y="437" width="1.6" height="15.0" fill="rgb(239,195,40)" rx="2" ry="2" />
<text  x="123.16" y="447.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.14%)</title><rect x="138.5" y="645" width="1.7" height="15.0" fill="rgb(230,172,23)" rx="2" ry="2" />
<text  x="141.51" y="655.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (7 samples, 0.99%)</title><rect x="624.2" y="517" width="11.7" height="15.0" fill="rgb(208,187,14)" rx="2" ry="2" />
<text  x="627.20" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="105.1" y="245" width="1.7" height="15.0" fill="rgb(243,87,52)" rx="2" ry="2" />
<text  x="108.13" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.14%)</title><rect x="61.7" y="181" width="1.7" height="15.0" fill="rgb(211,15,50)" rx="2" ry="2" />
<text  x="64.74" y="191.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="80.1" y="117" width="1.7" height="15.0" fill="rgb(245,74,4)" rx="2" ry="2" />
<text  x="83.10" y="127.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (2 samples, 0.28%)</title><rect x="480.7" y="405" width="3.3" height="15.0" fill="rgb(221,35,29)" rx="2" ry="2" />
<text  x="483.66" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="1054.8" y="389" width="1.7" height="15.0" fill="rgb(208,164,32)" rx="2" ry="2" />
<text  x="1057.81" y="399.5" ></text>
</g>
<g >
<title>row_cache::make_reader (9 samples, 1.27%)</title><rect x="569.1" y="437" width="15.0" height="15.0" fill="rgb(226,120,29)" rx="2" ry="2" />
<text  x="572.12" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.14%)</title><rect x="559.1" y="405" width="1.7" height="15.0" fill="rgb(243,95,34)" rx="2" ry="2" />
<text  x="562.11" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.14%)</title><rect x="96.8" y="277" width="1.7" height="15.0" fill="rgb(225,174,10)" rx="2" ry="2" />
<text  x="99.79" y="287.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (3 samples, 0.42%)</title><rect x="440.6" y="437" width="5.0" height="15.0" fill="rgb(226,26,13)" rx="2" ry="2" />
<text  x="443.61" y="447.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (2 samples, 0.28%)</title><rect x="133.5" y="613" width="3.3" height="15.0" fill="rgb(244,185,53)" rx="2" ry="2" />
<text  x="136.51" y="623.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="106.8" y="309" width="1.7" height="15.0" fill="rgb(251,73,40)" rx="2" ry="2" />
<text  x="109.80" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.14%)</title><rect x="83.4" y="277" width="1.7" height="15.0" fill="rgb(221,110,5)" rx="2" ry="2" />
<text  x="86.44" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (3 samples, 0.42%)</title><rect x="36.7" y="341" width="5.0" height="15.0" fill="rgb(207,187,25)" rx="2" ry="2" />
<text  x="39.70" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.14%)</title><rect x="811.1" y="517" width="1.7" height="15.0" fill="rgb(229,52,17)" rx="2" ry="2" />
<text  x="814.13" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.14%)</title><rect x="106.8" y="373" width="1.7" height="15.0" fill="rgb(212,122,48)" rx="2" ry="2" />
<text  x="109.80" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (14 samples, 1.98%)</title><rect x="1003.1" y="373" width="23.3" height="15.0" fill="rgb(239,10,22)" rx="2" ry="2" />
<text  x="1006.07" y="383.5" >s..</text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.42%)</title><rect x="786.1" y="453" width="5.0" height="15.0" fill="rgb(224,167,53)" rx="2" ry="2" />
<text  x="789.10" y="463.5" ></text>
</g>
<g >
<title>table::set_hit_rate (1 samples, 0.14%)</title><rect x="691.0" y="501" width="1.6" height="15.0" fill="rgb(222,157,26)" rx="2" ry="2" />
<text  x="693.96" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="103.5" y="325" width="1.6" height="15.0" fill="rgb(216,215,0)" rx="2" ry="2" />
<text  x="106.47" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (126 samples, 17.82%)</title><rect x="839.5" y="501" width="210.3" height="15.0" fill="rgb(229,206,27)" rx="2" ry="2" />
<text  x="842.50" y="511.5" >seastar::noncopyable_functi..</text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.14%)</title><rect x="1114.9" y="645" width="1.7" height="15.0" fill="rgb(213,89,34)" rx="2" ry="2" />
<text  x="1117.89" y="655.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.14%)</title><rect x="320.4" y="309" width="1.7" height="15.0" fill="rgb(220,203,22)" rx="2" ry="2" />
<text  x="323.44" y="319.5" ></text>
</g>
<g >
<title>database::do_apply (3 samples, 0.42%)</title><rect x="1049.8" y="469" width="5.0" height="15.0" fill="rgb(246,169,19)" rx="2" ry="2" />
<text  x="1052.80" y="479.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (5 samples, 0.71%)</title><rect x="704.3" y="501" width="8.4" height="15.0" fill="rgb(217,151,34)" rx="2" ry="2" />
<text  x="707.31" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (4 samples, 0.57%)</title><rect x="70.1" y="357" width="6.7" height="15.0" fill="rgb(248,138,48)" rx="2" ry="2" />
<text  x="73.08" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.14%)</title><rect x="579.1" y="389" width="1.7" height="15.0" fill="rgb(217,187,17)" rx="2" ry="2" />
<text  x="582.14" y="399.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (3 samples, 0.42%)</title><rect x="792.8" y="453" width="5.0" height="15.0" fill="rgb(251,103,1)" rx="2" ry="2" />
<text  x="795.77" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.14%)</title><rect x="66.7" y="69" width="1.7" height="15.0" fill="rgb(214,75,48)" rx="2" ry="2" />
<text  x="69.75" y="79.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.14%)</title><rect x="90.1" y="293" width="1.7" height="15.0" fill="rgb(228,88,18)" rx="2" ry="2" />
<text  x="93.11" y="303.5" ></text>
</g>
<g >
<title>create_partitions (65 samples, 9.19%)</title><rect x="20.0" y="549" width="108.5" height="15.0" fill="rgb(211,188,28)" rx="2" ry="2" />
<text  x="23.01" y="559.5" >create_partit..</text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.14%)</title><rect x="539.1" y="421" width="1.6" height="15.0" fill="rgb(212,173,26)" rx="2" ry="2" />
<text  x="542.08" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (1 samples, 0.14%)</title><rect x="824.5" y="421" width="1.7" height="15.0" fill="rgb(220,16,34)" rx="2" ry="2" />
<text  x="827.48" y="431.5" ></text>
</g>
<g >
<title>all (707 samples, 100%)</title><rect x="10.0" y="693" width="1180.0" height="15.0" fill="rgb(230,164,54)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (4 samples, 0.57%)</title><rect x="297.1" y="341" width="6.6" height="15.0" fill="rgb(248,151,17)" rx="2" ry="2" />
<text  x="300.07" y="351.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (11 samples, 1.56%)</title><rect x="746.0" y="389" width="18.4" height="15.0" fill="rgb(226,129,36)" rx="2" ry="2" />
<text  x="749.04" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="951.3" y="309" width="1.7" height="15.0" fill="rgb(228,124,47)" rx="2" ry="2" />
<text  x="954.33" y="319.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (2 samples, 0.28%)</title><rect x="851.2" y="373" width="3.3" height="15.0" fill="rgb(232,56,46)" rx="2" ry="2" />
<text  x="854.19" y="383.5" ></text>
</g>
<g >
<title>std::forward&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt; (1 samples, 0.14%)</title><rect x="70.1" y="341" width="1.7" height="15.0" fill="rgb(246,197,19)" rx="2" ry="2" />
<text  x="73.08" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.14%)</title><rect x="106.8" y="341" width="1.7" height="15.0" fill="rgb(216,9,46)" rx="2" ry="2" />
<text  x="109.80" y="351.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (2 samples, 0.28%)</title><rect x="11.7" y="565" width="3.3" height="15.0" fill="rgb(253,13,32)" rx="2" ry="2" />
<text  x="14.67" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="56.7" y="309" width="1.7" height="15.0" fill="rgb(254,182,23)" rx="2" ry="2" />
<text  x="59.73" y="319.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.28%)</title><rect x="178.6" y="501" width="3.3" height="15.0" fill="rgb(244,173,13)" rx="2" ry="2" />
<text  x="181.57" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::arm_highres_timer (1 samples, 0.14%)</title><rect x="1094.9" y="485" width="1.6" height="15.0" fill="rgb(220,97,46)" rx="2" ry="2" />
<text  x="1097.87" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="56.7" y="293" width="1.7" height="15.0" fill="rgb(211,191,0)" rx="2" ry="2" />
<text  x="59.73" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.14%)</title><rect x="1093.2" y="485" width="1.7" height="15.0" fill="rgb(251,48,26)" rx="2" ry="2" />
<text  x="1096.20" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.28%)</title><rect x="333.8" y="293" width="3.3" height="15.0" fill="rgb(234,5,2)" rx="2" ry="2" />
<text  x="336.79" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (3 samples, 0.42%)</title><rect x="879.6" y="453" width="5.0" height="15.0" fill="rgb(249,88,27)" rx="2" ry="2" />
<text  x="882.56" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (31 samples, 4.38%)</title><rect x="53.4" y="405" width="51.7" height="15.0" fill="rgb(238,128,3)" rx="2" ry="2" />
<text  x="56.39" y="415.5" >cql3_..</text>
</g>
<g >
<title>seastar::memory::allocate_aligned (5 samples, 0.71%)</title><rect x="343.8" y="245" width="8.3" height="15.0" fill="rgb(231,38,4)" rx="2" ry="2" />
<text  x="346.80" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="91.8" y="309" width="1.7" height="15.0" fill="rgb(214,110,42)" rx="2" ry="2" />
<text  x="94.78" y="319.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (3 samples, 0.42%)</title><rect x="726.0" y="437" width="5.0" height="15.0" fill="rgb(254,27,33)" rx="2" ry="2" />
<text  x="729.01" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.14%)</title><rect x="629.2" y="469" width="1.7" height="15.0" fill="rgb(251,202,43)" rx="2" ry="2" />
<text  x="632.21" y="479.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (3 samples, 0.42%)</title><rect x="600.8" y="485" width="5.0" height="15.0" fill="rgb(251,21,8)" rx="2" ry="2" />
<text  x="603.83" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (2 samples, 0.28%)</title><rect x="86.8" y="293" width="3.3" height="15.0" fill="rgb(217,192,5)" rx="2" ry="2" />
<text  x="89.78" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.28%)</title><rect x="292.1" y="341" width="3.3" height="15.0" fill="rgb(209,148,23)" rx="2" ry="2" />
<text  x="295.07" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (4 samples, 0.57%)</title><rect x="542.4" y="421" width="6.7" height="15.0" fill="rgb(228,145,18)" rx="2" ry="2" />
<text  x="545.42" y="431.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.14%)</title><rect x="1051.5" y="389" width="1.6" height="15.0" fill="rgb(246,49,15)" rx="2" ry="2" />
<text  x="1054.47" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.14%)</title><rect x="96.8" y="309" width="1.7" height="15.0" fill="rgb(249,42,42)" rx="2" ry="2" />
<text  x="99.79" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::has_supporting_index (1 samples, 0.14%)</title><rect x="30.0" y="421" width="1.7" height="15.0" fill="rgb(246,192,35)" rx="2" ry="2" />
<text  x="33.03" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.14%)</title><rect x="101.8" y="293" width="1.7" height="15.0" fill="rgb(236,208,35)" rx="2" ry="2" />
<text  x="104.80" y="303.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="80.1" y="133" width="1.7" height="15.0" fill="rgb(243,138,52)" rx="2" ry="2" />
<text  x="83.10" y="143.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.14%)</title><rect x="98.5" y="133" width="1.6" height="15.0" fill="rgb(251,47,1)" rx="2" ry="2" />
<text  x="101.46" y="143.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.14%)</title><rect x="21.7" y="517" width="1.7" height="15.0" fill="rgb(235,69,11)" rx="2" ry="2" />
<text  x="24.68" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (1 samples, 0.14%)</title><rect x="106.8" y="357" width="1.7" height="15.0" fill="rgb(246,163,0)" rx="2" ry="2" />
<text  x="109.80" y="367.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="769.4" y="405" width="1.7" height="15.0" fill="rgb(231,224,12)" rx="2" ry="2" />
<text  x="772.41" y="415.5" ></text>
</g>
<g >
<title>dht::tri_compare (6 samples, 0.85%)</title><rect x="1016.4" y="309" width="10.0" height="15.0" fill="rgb(215,130,37)" rx="2" ry="2" />
<text  x="1019.42" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="799.4" y="437" width="1.7" height="15.0" fill="rgb(240,7,40)" rx="2" ry="2" />
<text  x="802.45" y="447.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="80.1" y="165" width="1.7" height="15.0" fill="rgb(205,59,16)" rx="2" ry="2" />
<text  x="83.10" y="175.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (6 samples, 0.85%)</title><rect x="457.3" y="405" width="10.0" height="15.0" fill="rgb(213,195,20)" rx="2" ry="2" />
<text  x="460.30" y="415.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.14%)</title><rect x="752.7" y="373" width="1.7" height="15.0" fill="rgb(230,136,36)" rx="2" ry="2" />
<text  x="755.72" y="383.5" ></text>
</g>
<g >
<title>secondary_index::secondary_index_manager::list_indexes (1 samples, 0.14%)</title><rect x="30.0" y="405" width="1.7" height="15.0" fill="rgb(212,95,21)" rx="2" ry="2" />
<text  x="33.03" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (2 samples, 0.28%)</title><rect x="15.0" y="533" width="3.3" height="15.0" fill="rgb(215,25,52)" rx="2" ry="2" />
<text  x="18.01" y="543.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (264 samples, 37.34%)</title><rect x="166.9" y="533" width="440.6" height="15.0" fill="rgb(229,134,23)" rx="2" ry="2" />
<text  x="169.89" y="543.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (3 samples, 0.42%)</title><rect x="1049.8" y="501" width="5.0" height="15.0" fill="rgb(229,221,33)" rx="2" ry="2" />
<text  x="1052.80" y="511.5" ></text>
</g>
<g >
<title>seastar::jmp_buf_link::switch_in (1 samples, 0.14%)</title><rect x="816.1" y="533" width="1.7" height="15.0" fill="rgb(250,165,50)" rx="2" ry="2" />
<text  x="819.14" y="543.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (2 samples, 0.28%)</title><rect x="552.4" y="389" width="3.4" height="15.0" fill="rgb(225,108,20)" rx="2" ry="2" />
<text  x="555.43" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_M_head (1 samples, 0.14%)</title><rect x="85.1" y="213" width="1.7" height="15.0" fill="rgb(221,177,9)" rx="2" ry="2" />
<text  x="88.11" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_max_size (1 samples, 0.14%)</title><rect x="73.4" y="277" width="1.7" height="15.0" fill="rgb(236,186,44)" rx="2" ry="2" />
<text  x="76.42" y="287.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.28%)</title><rect x="65.1" y="293" width="3.3" height="15.0" fill="rgb(221,143,14)" rx="2" ry="2" />
<text  x="68.08" y="303.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 11.03%)</title><rect x="10.0" y="661" width="130.2" height="15.0" fill="rgb(247,45,0)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >[unknown]</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (3 samples, 0.42%)</title><rect x="71.8" y="341" width="5.0" height="15.0" fill="rgb(205,224,31)" rx="2" ry="2" />
<text  x="74.75" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="365.5" y="405" width="1.7" height="15.0" fill="rgb(237,99,54)" rx="2" ry="2" />
<text  x="368.50" y="415.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (5 samples, 0.71%)</title><rect x="150.2" y="533" width="8.3" height="15.0" fill="rgb(254,123,53)" rx="2" ry="2" />
<text  x="153.20" y="543.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="826.2" y="325" width="1.6" height="15.0" fill="rgb(221,192,25)" rx="2" ry="2" />
<text  x="829.15" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.14%)</title><rect x="171.9" y="517" width="1.7" height="15.0" fill="rgb(231,116,3)" rx="2" ry="2" />
<text  x="174.90" y="527.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.14%)</title><rect x="358.8" y="357" width="1.7" height="15.0" fill="rgb(230,75,44)" rx="2" ry="2" />
<text  x="361.83" y="367.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.42%)</title><rect x="949.7" y="325" width="5.0" height="15.0" fill="rgb(233,4,10)" rx="2" ry="2" />
<text  x="952.66" y="335.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.14%)</title><rect x="549.1" y="405" width="1.7" height="15.0" fill="rgb(206,107,4)" rx="2" ry="2" />
<text  x="552.09" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (22 samples, 3.11%)</title><rect x="842.8" y="453" width="36.8" height="15.0" fill="rgb(233,55,16)" rx="2" ry="2" />
<text  x="845.84" y="463.5" >cql..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_role_statement, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::drop_role_statement&gt;, void&gt; (1 samples, 0.14%)</title><rect x="116.8" y="421" width="1.7" height="15.0" fill="rgb(236,220,36)" rx="2" ry="2" />
<text  x="119.82" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (8 samples, 1.13%)</title><rect x="849.5" y="405" width="13.4" height="15.0" fill="rgb(219,119,35)" rx="2" ry="2" />
<text  x="852.52" y="415.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.14%)</title><rect x="999.7" y="373" width="1.7" height="15.0" fill="rgb(225,161,5)" rx="2" ry="2" />
<text  x="1002.73" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.14%)</title><rect x="190.3" y="485" width="1.6" height="15.0" fill="rgb(233,229,5)" rx="2" ry="2" />
<text  x="193.25" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (77 samples, 10.89%)</title><rect x="901.3" y="405" width="128.5" height="15.0" fill="rgb(241,21,48)" rx="2" ry="2" />
<text  x="904.26" y="415.5" >service::storage..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.14%)</title><rect x="103.5" y="341" width="1.6" height="15.0" fill="rgb(220,82,29)" rx="2" ry="2" />
<text  x="106.47" y="351.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::raw::update_statement*, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.14%)</title><rect x="108.5" y="325" width="1.6" height="15.0" fill="rgb(237,101,4)" rx="2" ry="2" />
<text  x="111.47" y="335.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (1 samples, 0.14%)</title><rect x="130.2" y="549" width="1.6" height="15.0" fill="rgb(219,172,29)" rx="2" ry="2" />
<text  x="133.17" y="559.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (4 samples, 0.57%)</title><rect x="804.5" y="485" width="6.6" height="15.0" fill="rgb(207,17,24)" rx="2" ry="2" />
<text  x="807.46" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.14%)</title><rect x="56.7" y="357" width="1.7" height="15.0" fill="rgb(215,113,51)" rx="2" ry="2" />
<text  x="59.73" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.14%)</title><rect x="36.7" y="229" width="1.7" height="15.0" fill="rgb(232,210,51)" rx="2" ry="2" />
<text  x="39.70" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="93.5" y="197" width="1.6" height="15.0" fill="rgb(253,73,37)" rx="2" ry="2" />
<text  x="96.45" y="207.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (10 samples, 1.41%)</title><rect x="959.7" y="293" width="16.7" height="15.0" fill="rgb(235,80,10)" rx="2" ry="2" />
<text  x="962.67" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.14%)</title><rect x="96.8" y="213" width="1.7" height="15.0" fill="rgb(212,134,26)" rx="2" ry="2" />
<text  x="99.79" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (7 samples, 0.99%)</title><rect x="817.8" y="469" width="11.7" height="15.0" fill="rgb(252,90,51)" rx="2" ry="2" />
<text  x="820.81" y="479.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.28%)</title><rect x="160.2" y="533" width="3.4" height="15.0" fill="rgb(210,19,19)" rx="2" ry="2" />
<text  x="163.21" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.14%)</title><rect x="80.1" y="213" width="1.7" height="15.0" fill="rgb(237,61,47)" rx="2" ry="2" />
<text  x="83.10" y="223.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="98.5" y="245" width="1.6" height="15.0" fill="rgb(208,138,16)" rx="2" ry="2" />
<text  x="101.46" y="255.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.28%)</title><rect x="65.1" y="181" width="3.3" height="15.0" fill="rgb(236,53,13)" rx="2" ry="2" />
<text  x="68.08" y="191.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.14%)</title><rect x="73.4" y="261" width="1.7" height="15.0" fill="rgb(208,44,35)" rx="2" ry="2" />
<text  x="76.42" y="271.5" ></text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.14%)</title><rect x="911.3" y="389" width="1.6" height="15.0" fill="rgb(210,123,47)" rx="2" ry="2" />
<text  x="914.27" y="399.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.28%)</title><rect x="1026.4" y="373" width="3.4" height="15.0" fill="rgb(205,184,10)" rx="2" ry="2" />
<text  x="1029.44" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.28%)</title><rect x="512.4" y="405" width="3.3" height="15.0" fill="rgb(215,154,1)" rx="2" ry="2" />
<text  x="515.38" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (573 samples, 81.05%)</title><rect x="140.2" y="565" width="956.3" height="15.0" fill="rgb(216,85,45)" rx="2" ry="2" />
<text  x="143.18" y="575.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>free (4 samples, 0.57%)</title><rect x="400.6" y="389" width="6.6" height="15.0" fill="rgb(238,54,1)" rx="2" ry="2" />
<text  x="403.55" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (26 samples, 3.68%)</title><rect x="61.7" y="373" width="43.4" height="15.0" fill="rgb(221,14,36)" rx="2" ry="2" />
<text  x="64.74" y="383.5" >cql3..</text>
</g>
<g >
<title>cql3::expr::evaluate (2 samples, 0.28%)</title><rect x="859.5" y="357" width="3.4" height="15.0" fill="rgb(245,168,46)" rx="2" ry="2" />
<text  x="862.53" y="367.5" ></text>
</g>
<g >
<title>mutation_querier::consume (20 samples, 2.83%)</title><rect x="407.2" y="421" width="33.4" height="15.0" fill="rgb(246,129,16)" rx="2" ry="2" />
<text  x="410.23" y="431.5" >mu..</text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="630.9" y="501" width="1.6" height="15.0" fill="rgb(218,132,45)" rx="2" ry="2" />
<text  x="633.88" y="511.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (1 samples, 0.14%)</title><rect x="1079.8" y="501" width="1.7" height="15.0" fill="rgb(231,171,21)" rx="2" ry="2" />
<text  x="1082.84" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (3 samples, 0.42%)</title><rect x="36.7" y="325" width="5.0" height="15.0" fill="rgb(214,156,45)" rx="2" ry="2" />
<text  x="39.70" y="335.5" ></text>
</g>
</g>
</svg>
