<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="790.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="773" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="773" > </text>
<g id="frames">
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="926.5" y="325" width="5.1" height="15.0" fill="rgb(217,39,3)" rx="2" ry="2" />
<text  x="929.46" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (1 samples, 0.14%)</title><rect x="598.3" y="565" width="1.7" height="15.0" fill="rgb(239,47,19)" rx="2" ry="2" />
<text  x="601.30" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (10 samples, 1.44%)</title><rect x="1003.0" y="501" width="17.0" height="15.0" fill="rgb(254,99,20)" rx="2" ry="2" />
<text  x="1005.97" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.14%)</title><rect x="101.8" y="357" width="1.7" height="15.0" fill="rgb(211,220,9)" rx="2" ry="2" />
<text  x="104.82" y="367.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.14%)</title><rect x="710.5" y="469" width="1.7" height="15.0" fill="rgb(239,147,13)" rx="2" ry="2" />
<text  x="713.52" y="479.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.14%)</title><rect x="1038.7" y="293" width="1.7" height="15.0" fill="rgb(249,39,17)" rx="2" ry="2" />
<text  x="1041.67" y="303.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.14%)</title><rect x="166.4" y="453" width="1.7" height="15.0" fill="rgb(232,40,8)" rx="2" ry="2" />
<text  x="169.43" y="463.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="749.6" y="453" width="1.7" height="15.0" fill="rgb(208,33,1)" rx="2" ry="2" />
<text  x="752.63" y="463.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (1 samples, 0.14%)</title><rect x="810.8" y="437" width="1.7" height="15.0" fill="rgb(250,19,10)" rx="2" ry="2" />
<text  x="813.84" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="67.8" y="373" width="1.7" height="15.0" fill="rgb(234,6,7)" rx="2" ry="2" />
<text  x="70.81" y="383.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.14%)</title><rect x="341.6" y="421" width="1.7" height="15.0" fill="rgb(221,45,46)" rx="2" ry="2" />
<text  x="344.56" y="431.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (1 samples, 0.14%)</title><rect x="23.6" y="469" width="1.7" height="15.0" fill="rgb(239,171,39)" rx="2" ry="2" />
<text  x="26.60" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (8 samples, 1.15%)</title><rect x="38.9" y="405" width="13.6" height="15.0" fill="rgb(238,101,49)" rx="2" ry="2" />
<text  x="41.90" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.14%)</title><rect x="494.6" y="501" width="1.7" height="15.0" fill="rgb(249,63,17)" rx="2" ry="2" />
<text  x="497.58" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (5 samples, 0.72%)</title><rect x="249.7" y="421" width="8.5" height="15.0" fill="rgb(251,156,38)" rx="2" ry="2" />
<text  x="252.74" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.14%)</title><rect x="1045.5" y="437" width="1.7" height="15.0" fill="rgb(238,169,7)" rx="2" ry="2" />
<text  x="1048.48" y="447.5" ></text>
</g>
<g >
<title>table::update_cache (1 samples, 0.14%)</title><rect x="1045.5" y="565" width="1.7" height="15.0" fill="rgb(231,4,28)" rx="2" ry="2" />
<text  x="1048.48" y="575.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (1 samples, 0.14%)</title><rect x="40.6" y="357" width="1.7" height="15.0" fill="rgb(216,55,21)" rx="2" ry="2" />
<text  x="43.61" y="367.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::deserialize_visitor&lt;basic_single_fragmented_view&lt; (1 samples, 0.14%)</title><rect x="168.1" y="453" width="1.7" height="15.0" fill="rgb(206,70,21)" rx="2" ry="2" />
<text  x="171.13" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.14%)</title><rect x="78.0" y="197" width="1.7" height="15.0" fill="rgb(217,145,14)" rx="2" ry="2" />
<text  x="81.01" y="207.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (2 samples, 0.29%)</title><rect x="768.3" y="565" width="3.4" height="15.0" fill="rgb(231,92,1)" rx="2" ry="2" />
<text  x="771.33" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::drop_role_statement*, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt; (1 samples, 0.14%)</title><rect x="122.2" y="421" width="1.7" height="15.0" fill="rgb(247,92,3)" rx="2" ry="2" />
<text  x="125.22" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.14%)</title><rect x="727.5" y="485" width="1.7" height="15.0" fill="rgb(249,33,40)" rx="2" ry="2" />
<text  x="730.52" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restrictions&gt;::~shared_ptr_count_for (1 samples, 0.14%)</title><rect x="598.3" y="517" width="1.7" height="15.0" fill="rgb(246,4,33)" rx="2" ry="2" />
<text  x="601.30" y="527.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.14%)</title><rect x="139.2" y="437" width="1.7" height="15.0" fill="rgb(219,107,37)" rx="2" ry="2" />
<text  x="142.22" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.43%)</title><rect x="161.3" y="549" width="5.1" height="15.0" fill="rgb(246,223,46)" rx="2" ry="2" />
<text  x="164.33" y="559.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.14%)</title><rect x="776.8" y="389" width="1.7" height="15.0" fill="rgb(216,223,3)" rx="2" ry="2" />
<text  x="779.83" y="399.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.14%)</title><rect x="180.0" y="565" width="1.7" height="15.0" fill="rgb(219,120,11)" rx="2" ry="2" />
<text  x="183.03" y="575.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="849.9" y="485" width="3.4" height="15.0" fill="rgb(254,174,54)" rx="2" ry="2" />
<text  x="852.94" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="25.3" y="421" width="1.7" height="15.0" fill="rgb(210,102,1)" rx="2" ry="2" />
<text  x="28.30" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.14%)</title><rect x="113.7" y="373" width="1.7" height="15.0" fill="rgb(231,13,19)" rx="2" ry="2" />
<text  x="116.72" y="383.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.14%)</title><rect x="462.3" y="453" width="1.7" height="15.0" fill="rgb(249,41,52)" rx="2" ry="2" />
<text  x="465.28" y="463.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.29%)</title><rect x="74.6" y="357" width="3.4" height="15.0" fill="rgb(232,121,34)" rx="2" ry="2" />
<text  x="77.61" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (13 samples, 1.87%)</title><rect x="458.9" y="485" width="22.1" height="15.0" fill="rgb(213,0,51)" rx="2" ry="2" />
<text  x="461.88" y="495.5" >m..</text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.14%)</title><rect x="438.5" y="485" width="1.7" height="15.0" fill="rgb(224,38,10)" rx="2" ry="2" />
<text  x="441.47" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.14%)</title><rect x="50.8" y="357" width="1.7" height="15.0" fill="rgb(227,95,1)" rx="2" ry="2" />
<text  x="53.81" y="367.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (6 samples, 0.86%)</title><rect x="193.6" y="549" width="10.2" height="15.0" fill="rgb(215,177,38)" rx="2" ry="2" />
<text  x="196.63" y="559.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (2 samples, 0.29%)</title><rect x="18.5" y="629" width="3.4" height="15.0" fill="rgb(250,168,27)" rx="2" ry="2" />
<text  x="21.50" y="639.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (8 samples, 1.15%)</title><rect x="649.3" y="581" width="13.6" height="15.0" fill="rgb(250,140,17)" rx="2" ry="2" />
<text  x="652.31" y="591.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (4 samples, 0.58%)</title><rect x="127.3" y="693" width="6.8" height="15.0" fill="rgb(207,18,45)" rx="2" ry="2" />
<text  x="130.32" y="703.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.14%)</title><rect x="776.8" y="405" width="1.7" height="15.0" fill="rgb(212,76,47)" rx="2" ry="2" />
<text  x="779.83" y="415.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (1 samples, 0.14%)</title><rect x="1040.4" y="293" width="1.7" height="15.0" fill="rgb(206,169,26)" rx="2" ry="2" />
<text  x="1043.37" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::storage_proxy (1 samples, 0.14%)</title><rect x="125.6" y="453" width="1.7" height="15.0" fill="rgb(208,94,7)" rx="2" ry="2" />
<text  x="128.62" y="463.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (2 samples, 0.29%)</title><rect x="690.1" y="533" width="3.4" height="15.0" fill="rgb(212,100,53)" rx="2" ry="2" />
<text  x="693.12" y="543.5" ></text>
</g>
<g >
<title>schema_registry::learn (2 samples, 0.29%)</title><rect x="169.8" y="549" width="3.4" height="15.0" fill="rgb(238,220,53)" rx="2" ry="2" />
<text  x="172.83" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="64.4" y="309" width="1.7" height="15.0" fill="rgb(207,94,14)" rx="2" ry="2" />
<text  x="67.41" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="78.0" y="325" width="1.7" height="15.0" fill="rgb(218,81,39)" rx="2" ry="2" />
<text  x="81.01" y="335.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.43%)</title><rect x="326.3" y="341" width="5.1" height="15.0" fill="rgb(207,83,38)" rx="2" ry="2" />
<text  x="329.25" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (3 samples, 0.43%)</title><rect x="1038.7" y="389" width="5.1" height="15.0" fill="rgb(250,138,32)" rx="2" ry="2" />
<text  x="1041.67" y="399.5" ></text>
</g>
<g >
<title>db::schema_tables::v3::columns (1 samples, 0.14%)</title><rect x="171.5" y="469" width="1.7" height="15.0" fill="rgb(254,53,46)" rx="2" ry="2" />
<text  x="174.53" y="479.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.14%)</title><rect x="20.2" y="469" width="1.7" height="15.0" fill="rgb(246,188,9)" rx="2" ry="2" />
<text  x="23.20" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.14%)</title><rect x="105.2" y="309" width="1.7" height="15.0" fill="rgb(227,121,32)" rx="2" ry="2" />
<text  x="108.22" y="319.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (1 samples, 0.14%)</title><rect x="166.4" y="469" width="1.7" height="15.0" fill="rgb(216,25,16)" rx="2" ry="2" />
<text  x="169.43" y="479.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (2 samples, 0.29%)</title><rect x="336.5" y="405" width="3.4" height="15.0" fill="rgb(249,211,8)" rx="2" ry="2" />
<text  x="339.46" y="415.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.58%)</title><rect x="387.5" y="485" width="6.8" height="15.0" fill="rgb(228,7,48)" rx="2" ry="2" />
<text  x="390.46" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.29%)</title><rect x="351.8" y="469" width="3.4" height="15.0" fill="rgb(215,215,21)" rx="2" ry="2" />
<text  x="354.76" y="479.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="622.1" y="565" width="3.4" height="15.0" fill="rgb(234,13,32)" rx="2" ry="2" />
<text  x="625.10" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="518.4" y="453" width="1.7" height="15.0" fill="rgb(227,224,45)" rx="2" ry="2" />
<text  x="521.39" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="596.6" y="565" width="1.7" height="15.0" fill="rgb(205,138,45)" rx="2" ry="2" />
<text  x="599.60" y="575.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (1 samples, 0.14%)</title><rect x="1043.8" y="373" width="1.7" height="15.0" fill="rgb(227,22,45)" rx="2" ry="2" />
<text  x="1046.78" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="118.8" y="453" width="1.7" height="15.0" fill="rgb(242,157,16)" rx="2" ry="2" />
<text  x="121.82" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.14%)</title><rect x="84.8" y="357" width="1.7" height="15.0" fill="rgb(218,34,50)" rx="2" ry="2" />
<text  x="87.81" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.14%)</title><rect x="125.6" y="533" width="1.7" height="15.0" fill="rgb(213,45,23)" rx="2" ry="2" />
<text  x="128.62" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="686.7" y="549" width="1.7" height="15.0" fill="rgb(239,198,43)" rx="2" ry="2" />
<text  x="689.71" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="95.0" y="293" width="1.7" height="15.0" fill="rgb(221,14,51)" rx="2" ry="2" />
<text  x="98.01" y="303.5" ></text>
</g>
<g >
<title>row_cache::update (1 samples, 0.14%)</title><rect x="1045.5" y="549" width="1.7" height="15.0" fill="rgb(234,47,20)" rx="2" ry="2" />
<text  x="1048.48" y="559.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.58%)</title><rect x="379.0" y="453" width="6.8" height="15.0" fill="rgb(222,155,30)" rx="2" ry="2" />
<text  x="381.96" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.14%)</title><rect x="74.6" y="261" width="1.7" height="15.0" fill="rgb(206,88,30)" rx="2" ry="2" />
<text  x="77.61" y="271.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="686.7" y="565" width="1.7" height="15.0" fill="rgb(207,82,13)" rx="2" ry="2" />
<text  x="689.71" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="339.9" y="405" width="1.7" height="15.0" fill="rgb(207,166,26)" rx="2" ry="2" />
<text  x="342.86" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.14%)</title><rect x="542.2" y="437" width="1.7" height="15.0" fill="rgb(221,81,0)" rx="2" ry="2" />
<text  x="545.19" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_destroy&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.14%)</title><rect x="139.2" y="325" width="1.7" height="15.0" fill="rgb(248,12,31)" rx="2" ry="2" />
<text  x="142.22" y="335.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.14%)</title><rect x="166.4" y="549" width="1.7" height="15.0" fill="rgb(206,227,9)" rx="2" ry="2" />
<text  x="169.43" y="559.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.14%)</title><rect x="1043.8" y="325" width="1.7" height="15.0" fill="rgb(222,93,53)" rx="2" ry="2" />
<text  x="1046.78" y="335.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.14%)</title><rect x="33.8" y="261" width="1.7" height="15.0" fill="rgb(249,189,41)" rx="2" ry="2" />
<text  x="36.80" y="271.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.14%)</title><rect x="875.4" y="469" width="1.7" height="15.0" fill="rgb(233,38,7)" rx="2" ry="2" />
<text  x="878.45" y="479.5" ></text>
</g>
<g >
<title>seastar::app_template::run (550 samples, 79.25%)</title><rect x="142.6" y="677" width="935.2" height="15.0" fill="rgb(218,168,18)" rx="2" ry="2" />
<text  x="145.62" y="687.5" >seastar::app_template::run</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="67.8" y="325" width="1.7" height="15.0" fill="rgb(240,163,11)" rx="2" ry="2" />
<text  x="70.81" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="64.4" y="373" width="1.7" height="15.0" fill="rgb(249,56,4)" rx="2" ry="2" />
<text  x="67.41" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (2 samples, 0.29%)</title><rect x="613.6" y="533" width="3.4" height="15.0" fill="rgb(210,32,35)" rx="2" ry="2" />
<text  x="616.60" y="543.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (1 samples, 0.14%)</title><rect x="1028.5" y="501" width="1.7" height="15.0" fill="rgb(254,227,29)" rx="2" ry="2" />
<text  x="1031.47" y="511.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (1 samples, 0.14%)</title><rect x="266.7" y="405" width="1.7" height="15.0" fill="rgb(250,163,0)" rx="2" ry="2" />
<text  x="269.74" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="1023.4" y="485" width="1.7" height="15.0" fill="rgb(215,56,33)" rx="2" ry="2" />
<text  x="1026.37" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.14%)</title><rect x="798.9" y="501" width="1.7" height="15.0" fill="rgb(244,76,47)" rx="2" ry="2" />
<text  x="801.93" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="74.6" y="101" width="1.7" height="15.0" fill="rgb(236,137,34)" rx="2" ry="2" />
<text  x="77.61" y="111.5" ></text>
</g>
<g >
<title>database::do_apply (5 samples, 0.72%)</title><rect x="1030.2" y="517" width="8.5" height="15.0" fill="rgb(215,8,11)" rx="2" ry="2" />
<text  x="1033.17" y="527.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="86.5" y="341" width="3.4" height="15.0" fill="rgb(235,188,10)" rx="2" ry="2" />
<text  x="89.51" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="78.0" y="309" width="1.7" height="15.0" fill="rgb(253,226,9)" rx="2" ry="2" />
<text  x="81.01" y="319.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_endpoint (1 samples, 0.14%)</title><rect x="20.2" y="453" width="1.7" height="15.0" fill="rgb(248,78,30)" rx="2" ry="2" />
<text  x="23.20" y="463.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (2 samples, 0.29%)</title><rect x="435.1" y="485" width="3.4" height="15.0" fill="rgb(219,13,50)" rx="2" ry="2" />
<text  x="438.07" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.14%)</title><rect x="1045.5" y="405" width="1.7" height="15.0" fill="rgb(250,12,53)" rx="2" ry="2" />
<text  x="1048.48" y="415.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.29%)</title><rect x="800.6" y="501" width="3.4" height="15.0" fill="rgb(247,127,3)" rx="2" ry="2" />
<text  x="803.63" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::max_size (1 samples, 0.14%)</title><rect x="37.2" y="341" width="1.7" height="15.0" fill="rgb(217,229,23)" rx="2" ry="2" />
<text  x="40.20" y="351.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.14%)</title><rect x="101.8" y="341" width="1.7" height="15.0" fill="rgb(222,224,43)" rx="2" ry="2" />
<text  x="104.82" y="351.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.14%)</title><rect x="159.6" y="549" width="1.7" height="15.0" fill="rgb(212,100,21)" rx="2" ry="2" />
<text  x="162.63" y="559.5" ></text>
</g>
<g >
<title>row::~row (3 samples, 0.43%)</title><rect x="253.1" y="405" width="5.1" height="15.0" fill="rgb(211,160,47)" rx="2" ry="2" />
<text  x="256.14" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reallocate_map (1 samples, 0.14%)</title><rect x="35.5" y="325" width="1.7" height="15.0" fill="rgb(240,46,17)" rx="2" ry="2" />
<text  x="38.50" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="113.7" y="325" width="1.7" height="15.0" fill="rgb(250,56,28)" rx="2" ry="2" />
<text  x="116.72" y="335.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="83.1" y="373" width="1.7" height="15.0" fill="rgb(216,136,47)" rx="2" ry="2" />
<text  x="86.11" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (13 samples, 1.87%)</title><rect x="30.4" y="437" width="22.1" height="15.0" fill="rgb(243,185,48)" rx="2" ry="2" />
<text  x="33.40" y="447.5" >a..</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="76.3" y="181" width="1.7" height="15.0" fill="rgb(230,16,39)" rx="2" ry="2" />
<text  x="79.31" y="191.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (3 samples, 0.43%)</title><rect x="1067.6" y="565" width="5.1" height="15.0" fill="rgb(252,43,28)" rx="2" ry="2" />
<text  x="1070.58" y="575.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (7 samples, 1.01%)</title><rect x="931.6" y="341" width="11.9" height="15.0" fill="rgb(226,136,53)" rx="2" ry="2" />
<text  x="934.56" y="351.5" ></text>
</g>
<g >
<title>perf_simple_que (693 samples, 99.86%)</title><rect x="10.0" y="725" width="1178.3" height="15.0" fill="rgb(226,24,36)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >perf_simple_que</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.14%)</title><rect x="64.4" y="229" width="1.7" height="15.0" fill="rgb(248,107,22)" rx="2" ry="2" />
<text  x="67.41" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="936.7" y="293" width="1.7" height="15.0" fill="rgb(216,70,19)" rx="2" ry="2" />
<text  x="939.66" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="86.5" y="325" width="3.4" height="15.0" fill="rgb(220,39,1)" rx="2" ry="2" />
<text  x="89.51" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::attributes::raw&gt;, void&gt; (1 samples, 0.14%)</title><rect x="115.4" y="437" width="1.7" height="15.0" fill="rgb(221,216,34)" rx="2" ry="2" />
<text  x="118.42" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (23 samples, 3.31%)</title><rect x="912.9" y="389" width="39.1" height="15.0" fill="rgb(236,216,2)" rx="2" ry="2" />
<text  x="915.85" y="399.5" >ser..</text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (3 samples, 0.43%)</title><rect x="30.4" y="309" width="5.1" height="15.0" fill="rgb(228,39,33)" rx="2" ry="2" />
<text  x="33.40" y="319.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (1 samples, 0.14%)</title><rect x="515.0" y="453" width="1.7" height="15.0" fill="rgb(222,90,27)" rx="2" ry="2" />
<text  x="517.99" y="463.5" ></text>
</g>
<g >
<title>__libc_start_main (550 samples, 79.25%)</title><rect x="142.6" y="709" width="935.2" height="15.0" fill="rgb(248,119,20)" rx="2" ry="2" />
<text  x="145.62" y="719.5" >__libc_start_main</text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.58%)</title><rect x="1038.7" y="549" width="6.8" height="15.0" fill="rgb(216,145,36)" rx="2" ry="2" />
<text  x="1041.67" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="95.0" y="309" width="1.7" height="15.0" fill="rgb(231,24,9)" rx="2" ry="2" />
<text  x="98.01" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (2 samples, 0.29%)</title><rect x="23.6" y="485" width="3.4" height="15.0" fill="rgb(239,221,51)" rx="2" ry="2" />
<text  x="26.60" y="495.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.14%)</title><rect x="18.5" y="597" width="1.7" height="15.0" fill="rgb(218,156,39)" rx="2" ry="2" />
<text  x="21.50" y="607.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="1021.7" y="501" width="3.4" height="15.0" fill="rgb(228,35,29)" rx="2" ry="2" />
<text  x="1024.67" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.14%)</title><rect x="25.3" y="453" width="1.7" height="15.0" fill="rgb(237,37,21)" rx="2" ry="2" />
<text  x="28.30" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="817.6" y="405" width="1.7" height="15.0" fill="rgb(225,174,32)" rx="2" ry="2" />
<text  x="820.64" y="415.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (1 samples, 0.14%)</title><rect x="705.4" y="533" width="1.7" height="15.0" fill="rgb(220,93,49)" rx="2" ry="2" />
<text  x="708.42" y="543.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (1 samples, 0.14%)</title><rect x="27.0" y="517" width="1.7" height="15.0" fill="rgb(231,180,22)" rx="2" ry="2" />
<text  x="30.00" y="527.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (2 samples, 0.29%)</title><rect x="815.9" y="421" width="3.4" height="15.0" fill="rgb(241,123,36)" rx="2" ry="2" />
<text  x="818.94" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, std::unique_ptr&lt;column_computation, std::default_delete&lt;column_computation&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, std::unique_ptr&lt;column_computation, std::default_delete&lt;column_computation&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.14%)</title><rect x="169.8" y="469" width="1.7" height="15.0" fill="rgb(240,140,7)" rx="2" ry="2" />
<text  x="172.83" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="66.1" y="357" width="1.7" height="15.0" fill="rgb(209,121,39)" rx="2" ry="2" />
<text  x="69.11" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="98.4" y="293" width="1.7" height="15.0" fill="rgb(218,177,13)" rx="2" ry="2" />
<text  x="101.41" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="98.4" y="229" width="1.7" height="15.0" fill="rgb(232,24,42)" rx="2" ry="2" />
<text  x="101.41" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.14%)</title><rect x="112.0" y="357" width="1.7" height="15.0" fill="rgb(243,37,22)" rx="2" ry="2" />
<text  x="115.02" y="367.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.14%)</title><rect x="78.0" y="373" width="1.7" height="15.0" fill="rgb(205,79,6)" rx="2" ry="2" />
<text  x="81.01" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.14%)</title><rect x="15.1" y="501" width="1.7" height="15.0" fill="rgb(222,106,51)" rx="2" ry="2" />
<text  x="18.10" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (73 samples, 10.52%)</title><rect x="231.0" y="517" width="124.2" height="15.0" fill="rgb(227,86,39)" rx="2" ry="2" />
<text  x="234.04" y="527.5" >flat_mutation_r..</text>
</g>
<g >
<title>service::shared_mutation::apply_locally (1 samples, 0.14%)</title><rect x="1043.8" y="357" width="1.7" height="15.0" fill="rgb(230,2,25)" rx="2" ry="2" />
<text  x="1046.78" y="367.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.14%)</title><rect x="1033.6" y="405" width="1.7" height="15.0" fill="rgb(206,1,10)" rx="2" ry="2" />
<text  x="1036.57" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="67.8" y="277" width="1.7" height="15.0" fill="rgb(223,16,5)" rx="2" ry="2" />
<text  x="70.81" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="74.6" y="69" width="1.7" height="15.0" fill="rgb(212,195,0)" rx="2" ry="2" />
<text  x="77.61" y="79.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (1 samples, 0.14%)</title><rect x="535.4" y="453" width="1.7" height="15.0" fill="rgb(229,97,21)" rx="2" ry="2" />
<text  x="538.39" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="909.5" y="373" width="1.7" height="15.0" fill="rgb(235,207,23)" rx="2" ry="2" />
<text  x="912.45" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="489.5" y="517" width="1.7" height="15.0" fill="rgb(208,212,51)" rx="2" ry="2" />
<text  x="492.48" y="527.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.14%)</title><rect x="566.0" y="437" width="1.7" height="15.0" fill="rgb(247,116,40)" rx="2" ry="2" />
<text  x="568.99" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="64.4" y="277" width="1.7" height="15.0" fill="rgb(245,141,4)" rx="2" ry="2" />
<text  x="67.41" y="287.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (2 samples, 0.29%)</title><rect x="470.8" y="437" width="3.4" height="15.0" fill="rgb(226,82,39)" rx="2" ry="2" />
<text  x="473.78" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.14%)</title><rect x="33.8" y="277" width="1.7" height="15.0" fill="rgb(247,153,51)" rx="2" ry="2" />
<text  x="36.80" y="287.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.14%)</title><rect x="139.2" y="693" width="1.7" height="15.0" fill="rgb(228,50,31)" rx="2" ry="2" />
<text  x="142.22" y="703.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.29%)</title><rect x="62.7" y="437" width="3.4" height="15.0" fill="rgb(215,169,46)" rx="2" ry="2" />
<text  x="65.71" y="447.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (2 samples, 0.29%)</title><rect x="843.1" y="469" width="3.4" height="15.0" fill="rgb(246,124,19)" rx="2" ry="2" />
<text  x="846.14" y="479.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="1014.9" y="469" width="3.4" height="15.0" fill="rgb(223,52,29)" rx="2" ry="2" />
<text  x="1017.87" y="479.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.14%)</title><rect x="168.1" y="533" width="1.7" height="15.0" fill="rgb(250,10,22)" rx="2" ry="2" />
<text  x="171.13" y="543.5" ></text>
</g>
<g >
<title>do_with_cql_env_thread (1 samples, 0.14%)</title><rect x="125.6" y="661" width="1.7" height="15.0" fill="rgb(216,92,1)" rx="2" ry="2" />
<text  x="128.62" y="671.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.14%)</title><rect x="171.5" y="501" width="1.7" height="15.0" fill="rgb(228,121,53)" rx="2" ry="2" />
<text  x="174.53" y="511.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="617.0" y="549" width="1.7" height="15.0" fill="rgb(216,67,33)" rx="2" ry="2" />
<text  x="620.00" y="559.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.14%)</title><rect x="549.0" y="437" width="1.7" height="15.0" fill="rgb(237,127,47)" rx="2" ry="2" />
<text  x="551.99" y="447.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.14%)</title><rect x="139.2" y="613" width="1.7" height="15.0" fill="rgb(252,1,26)" rx="2" ry="2" />
<text  x="142.22" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="1016.6" y="437" width="1.7" height="15.0" fill="rgb(252,177,43)" rx="2" ry="2" />
<text  x="1019.57" y="447.5" ></text>
</g>
<g >
<title>free (1 samples, 0.14%)</title><rect x="164.7" y="517" width="1.7" height="15.0" fill="rgb(213,209,0)" rx="2" ry="2" />
<text  x="167.73" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::drop_role_statement*, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt;::_M_head (1 samples, 0.14%)</title><rect x="122.2" y="405" width="1.7" height="15.0" fill="rgb(235,189,20)" rx="2" ry="2" />
<text  x="125.22" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.14%)</title><rect x="125.6" y="677" width="1.7" height="15.0" fill="rgb(215,96,2)" rx="2" ry="2" />
<text  x="128.62" y="687.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.14%)</title><rect x="95.0" y="245" width="1.7" height="15.0" fill="rgb(205,151,23)" rx="2" ry="2" />
<text  x="98.01" y="255.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.14%)</title><rect x="139.2" y="357" width="1.7" height="15.0" fill="rgb(237,156,27)" rx="2" ry="2" />
<text  x="142.22" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="16.8" y="581" width="1.7" height="15.0" fill="rgb(214,214,19)" rx="2" ry="2" />
<text  x="19.80" y="591.5" ></text>
</g>
<g >
<title>database::find_keyspace (1 samples, 0.14%)</title><rect x="957.1" y="421" width="1.7" height="15.0" fill="rgb(251,206,23)" rx="2" ry="2" />
<text  x="960.06" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.29%)</title><rect x="81.4" y="405" width="3.4" height="15.0" fill="rgb(212,169,11)" rx="2" ry="2" />
<text  x="84.41" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (46 samples, 6.63%)</title><rect x="688.4" y="565" width="78.2" height="15.0" fill="rgb(219,74,7)" rx="2" ry="2" />
<text  x="691.41" y="575.5" >single_no..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="703.7" y="533" width="1.7" height="15.0" fill="rgb(215,161,28)" rx="2" ry="2" />
<text  x="706.72" y="543.5" ></text>
</g>
<g >
<title>[unknown] (68 samples, 9.80%)</title><rect x="11.7" y="693" width="115.6" height="15.0" fill="rgb(233,165,27)" rx="2" ry="2" />
<text  x="14.70" y="703.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="76.3" y="261" width="1.7" height="15.0" fill="rgb(249,133,7)" rx="2" ry="2" />
<text  x="79.31" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.14%)</title><rect x="1072.7" y="581" width="1.7" height="15.0" fill="rgb(253,207,30)" rx="2" ry="2" />
<text  x="1075.68" y="591.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;service::storage_proxy&gt;::start&lt;std::reference_wrapper&lt;seastar::sharded&lt;database&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;gms::gossiper&gt; &gt;, service::storage_proxy::config&amp;, std::reference_wrapper&lt;db::view::node_update_backlog&gt;, seastar::scheduling_group_key, std::reference_wrapper&lt;seastar::sharded&lt;gms::feature_service&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;locator::shared_token_metadata&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;netw::messaging_service&gt; &gt; &gt; (1 samples, 0.14%)</title><rect x="125.6" y="469" width="1.7" height="15.0" fill="rgb(251,74,5)" rx="2" ry="2" />
<text  x="128.62" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (17 samples, 2.45%)</title><rect x="79.7" y="421" width="28.9" height="15.0" fill="rgb(241,215,34)" rx="2" ry="2" />
<text  x="82.71" y="431.5" >cq..</text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.14%)</title><rect x="10.0" y="693" width="1.7" height="15.0" fill="rgb(225,71,39)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (8 samples, 1.15%)</title><rect x="537.1" y="453" width="13.6" height="15.0" fill="rgb(220,97,6)" rx="2" ry="2" />
<text  x="540.09" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="168.1" y="437" width="1.7" height="15.0" fill="rgb(253,21,8)" rx="2" ry="2" />
<text  x="171.13" y="447.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (6 samples, 0.86%)</title><rect x="736.0" y="437" width="10.2" height="15.0" fill="rgb(206,214,37)" rx="2" ry="2" />
<text  x="739.02" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (11 samples, 1.59%)</title><rect x="810.8" y="469" width="18.7" height="15.0" fill="rgb(217,9,23)" rx="2" ry="2" />
<text  x="813.84" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (1 samples, 0.14%)</title><rect x="27.0" y="501" width="1.7" height="15.0" fill="rgb(253,39,1)" rx="2" ry="2" />
<text  x="30.00" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (30 samples, 4.32%)</title><rect x="282.0" y="389" width="51.1" height="15.0" fill="rgb(238,210,1)" rx="2" ry="2" />
<text  x="285.05" y="399.5" >parti..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.29%)</title><rect x="74.6" y="309" width="3.4" height="15.0" fill="rgb(217,90,32)" rx="2" ry="2" />
<text  x="77.61" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="78.0" y="261" width="1.7" height="15.0" fill="rgb(252,107,24)" rx="2" ry="2" />
<text  x="81.01" y="271.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (1 samples, 0.14%)</title><rect x="814.2" y="421" width="1.7" height="15.0" fill="rgb(226,142,28)" rx="2" ry="2" />
<text  x="817.24" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.14%)</title><rect x="84.8" y="341" width="1.7" height="15.0" fill="rgb(215,139,40)" rx="2" ry="2" />
<text  x="87.81" y="351.5" ></text>
</g>
<g >
<title>all (694 samples, 100%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(229,202,47)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="482.7" y="485" width="3.4" height="15.0" fill="rgb(236,64,39)" rx="2" ry="2" />
<text  x="485.68" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="849.9" y="469" width="3.4" height="15.0" fill="rgb(230,93,52)" rx="2" ry="2" />
<text  x="852.94" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="91.6" y="213" width="1.7" height="15.0" fill="rgb(214,205,6)" rx="2" ry="2" />
<text  x="94.61" y="223.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (1 samples, 0.14%)</title><rect x="566.0" y="453" width="1.7" height="15.0" fill="rgb(233,71,40)" rx="2" ry="2" />
<text  x="568.99" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="27.0" y="405" width="1.7" height="15.0" fill="rgb(217,36,6)" rx="2" ry="2" />
<text  x="30.00" y="415.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.14%)</title><rect x="139.2" y="661" width="1.7" height="15.0" fill="rgb(218,104,25)" rx="2" ry="2" />
<text  x="142.22" y="671.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (37 samples, 5.33%)</title><rect x="270.1" y="405" width="63.0" height="15.0" fill="rgb(250,135,9)" rx="2" ry="2" />
<text  x="273.14" y="415.5" >partit..</text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (10 samples, 1.44%)</title><rect x="829.5" y="485" width="17.0" height="15.0" fill="rgb(243,173,42)" rx="2" ry="2" />
<text  x="832.54" y="495.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (9 samples, 1.30%)</title><rect x="418.1" y="453" width="15.3" height="15.0" fill="rgb(208,108,51)" rx="2" ry="2" />
<text  x="421.07" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (21 samples, 3.03%)</title><rect x="965.6" y="421" width="35.7" height="15.0" fill="rgb(249,221,49)" rx="2" ry="2" />
<text  x="968.56" y="431.5" >ser..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (57 samples, 8.21%)</title><rect x="248.0" y="437" width="97.0" height="15.0" fill="rgb(234,55,9)" rx="2" ry="2" />
<text  x="251.04" y="447.5" >partition_s..</text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (46 samples, 6.63%)</title><rect x="491.2" y="517" width="78.2" height="15.0" fill="rgb(220,129,42)" rx="2" ry="2" />
<text  x="494.18" y="527.5" >std::_Fun..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="64.4" y="389" width="1.7" height="15.0" fill="rgb(206,100,23)" rx="2" ry="2" />
<text  x="67.41" y="399.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.14%)</title><rect x="945.2" y="357" width="1.7" height="15.0" fill="rgb(244,12,32)" rx="2" ry="2" />
<text  x="948.16" y="367.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (1 samples, 0.14%)</title><rect x="59.3" y="373" width="1.7" height="15.0" fill="rgb(218,10,25)" rx="2" ry="2" />
<text  x="62.31" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (1 samples, 0.14%)</title><rect x="1183.2" y="709" width="1.7" height="15.0" fill="rgb(223,129,26)" rx="2" ry="2" />
<text  x="1186.20" y="719.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="163.0" y="533" width="1.7" height="15.0" fill="rgb(232,33,25)" rx="2" ry="2" />
<text  x="166.03" y="543.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.14%)</title><rect x="57.6" y="453" width="1.7" height="15.0" fill="rgb(241,175,38)" rx="2" ry="2" />
<text  x="60.61" y="463.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (2 samples, 0.29%)</title><rect x="482.7" y="501" width="3.4" height="15.0" fill="rgb(250,77,32)" rx="2" ry="2" />
<text  x="485.68" y="511.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (6 samples, 0.86%)</title><rect x="156.2" y="581" width="10.2" height="15.0" fill="rgb(223,73,4)" rx="2" ry="2" />
<text  x="159.22" y="591.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.14%)</title><rect x="761.5" y="533" width="1.7" height="15.0" fill="rgb(231,131,47)" rx="2" ry="2" />
<text  x="764.53" y="543.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (1 samples, 0.14%)</title><rect x="246.3" y="453" width="1.7" height="15.0" fill="rgb(233,214,20)" rx="2" ry="2" />
<text  x="249.34" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.43%)</title><rect x="503.1" y="485" width="5.1" height="15.0" fill="rgb(240,145,52)" rx="2" ry="2" />
<text  x="506.08" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (4 samples, 0.58%)</title><rect x="1038.7" y="437" width="6.8" height="15.0" fill="rgb(239,156,30)" rx="2" ry="2" />
<text  x="1041.67" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_role_statement, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.14%)</title><rect x="122.2" y="469" width="1.7" height="15.0" fill="rgb(239,82,54)" rx="2" ry="2" />
<text  x="125.22" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (24 samples, 3.46%)</title><rect x="911.2" y="405" width="40.8" height="15.0" fill="rgb(210,105,40)" rx="2" ry="2" />
<text  x="914.15" y="415.5" >ser..</text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.14%)</title><rect x="200.4" y="517" width="1.7" height="15.0" fill="rgb(236,128,10)" rx="2" ry="2" />
<text  x="203.43" y="527.5" ></text>
</g>
<g >
<title>schema_registry::get (3 samples, 0.43%)</title><rect x="890.7" y="437" width="5.2" height="15.0" fill="rgb(232,178,47)" rx="2" ry="2" />
<text  x="893.75" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (26 samples, 3.75%)</title><rect x="907.8" y="421" width="44.2" height="15.0" fill="rgb(223,59,26)" rx="2" ry="2" />
<text  x="910.75" y="431.5" >serv..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.43%)</title><rect x="861.8" y="453" width="5.1" height="15.0" fill="rgb(209,105,47)" rx="2" ry="2" />
<text  x="864.84" y="463.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="156.2" y="549" width="3.4" height="15.0" fill="rgb(221,51,7)" rx="2" ry="2" />
<text  x="159.22" y="559.5" ></text>
</g>
<g >
<title>distributed_loader::init_system_keyspace (1 samples, 0.14%)</title><rect x="18.5" y="613" width="1.7" height="15.0" fill="rgb(229,74,35)" rx="2" ry="2" />
<text  x="21.50" y="623.5" ></text>
</g>
<g >
<title>memtable::apply (4 samples, 0.58%)</title><rect x="1031.9" y="453" width="6.8" height="15.0" fill="rgb(234,118,26)" rx="2" ry="2" />
<text  x="1034.87" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="66.1" y="261" width="1.7" height="15.0" fill="rgb(247,133,50)" rx="2" ry="2" />
<text  x="69.11" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="266.7" y="373" width="1.7" height="15.0" fill="rgb(234,138,18)" rx="2" ry="2" />
<text  x="269.74" y="383.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (1 samples, 0.14%)</title><rect x="787.0" y="517" width="1.7" height="15.0" fill="rgb(245,92,39)" rx="2" ry="2" />
<text  x="790.03" y="527.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="739.4" y="421" width="1.7" height="15.0" fill="rgb(226,139,11)" rx="2" ry="2" />
<text  x="742.42" y="431.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="345.0" y="469" width="1.7" height="15.0" fill="rgb(220,22,19)" rx="2" ry="2" />
<text  x="347.96" y="479.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (57 samples, 8.21%)</title><rect x="27.0" y="533" width="96.9" height="15.0" fill="rgb(251,206,24)" rx="2" ry="2" />
<text  x="30.00" y="543.5" >cql3::util:..</text>
</g>
<g >
<title>__start_context (1 samples, 0.14%)</title><rect x="1045.5" y="485" width="1.7" height="15.0" fill="rgb(221,215,20)" rx="2" ry="2" />
<text  x="1048.48" y="495.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (2 samples, 0.29%)</title><rect x="824.4" y="389" width="3.4" height="15.0" fill="rgb(242,54,21)" rx="2" ry="2" />
<text  x="827.44" y="399.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (3 samples, 0.43%)</title><rect x="690.1" y="549" width="5.1" height="15.0" fill="rgb(216,114,43)" rx="2" ry="2" />
<text  x="693.12" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.14%)</title><rect x="331.4" y="309" width="1.7" height="15.0" fill="rgb(251,155,47)" rx="2" ry="2" />
<text  x="334.35" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.14%)</title><rect x="166.4" y="405" width="1.7" height="15.0" fill="rgb(219,92,49)" rx="2" ry="2" />
<text  x="169.43" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reserve_map_at_back (1 samples, 0.14%)</title><rect x="35.5" y="341" width="1.7" height="15.0" fill="rgb(242,149,39)" rx="2" ry="2" />
<text  x="38.50" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.14%)</title><rect x="611.9" y="549" width="1.7" height="15.0" fill="rgb(219,5,31)" rx="2" ry="2" />
<text  x="614.90" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.29%)</title><rect x="1057.4" y="533" width="3.4" height="15.0" fill="rgb(254,52,49)" rx="2" ry="2" />
<text  x="1060.38" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="771.7" y="549" width="1.7" height="15.0" fill="rgb(252,85,22)" rx="2" ry="2" />
<text  x="774.73" y="559.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (1 samples, 0.14%)</title><rect x="827.8" y="437" width="1.7" height="15.0" fill="rgb(208,96,34)" rx="2" ry="2" />
<text  x="830.84" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.29%)</title><rect x="962.2" y="389" width="3.4" height="15.0" fill="rgb(208,174,52)" rx="2" ry="2" />
<text  x="965.16" y="399.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (3 samples, 0.43%)</title><rect x="571.1" y="517" width="5.1" height="15.0" fill="rgb(222,135,35)" rx="2" ry="2" />
<text  x="574.10" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::vector (1 samples, 0.14%)</title><rect x="117.1" y="437" width="1.7" height="15.0" fill="rgb(222,107,38)" rx="2" ry="2" />
<text  x="120.12" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (1 samples, 0.14%)</title><rect x="1043.8" y="389" width="1.7" height="15.0" fill="rgb(226,104,17)" rx="2" ry="2" />
<text  x="1046.78" y="399.5" ></text>
</g>
<g >
<title>distributed_loader::populate_keyspace (1 samples, 0.14%)</title><rect x="18.5" y="533" width="1.7" height="15.0" fill="rgb(218,161,41)" rx="2" ry="2" />
<text  x="21.50" y="543.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (2 samples, 0.29%)</title><rect x="550.7" y="469" width="3.4" height="15.0" fill="rgb(225,90,5)" rx="2" ry="2" />
<text  x="553.69" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (56 samples, 8.07%)</title><rect x="28.7" y="517" width="95.2" height="15.0" fill="rgb(225,187,23)" rx="2" ry="2" />
<text  x="31.70" y="527.5" >seastar::no..</text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.14%)</title><rect x="1077.8" y="709" width="1.7" height="15.0" fill="rgb(219,183,46)" rx="2" ry="2" />
<text  x="1080.78" y="719.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (4 samples, 0.58%)</title><rect x="1038.7" y="453" width="6.8" height="15.0" fill="rgb(208,154,20)" rx="2" ry="2" />
<text  x="1041.67" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (2 samples, 0.29%)</title><rect x="1040.4" y="341" width="3.4" height="15.0" fill="rgb(206,69,26)" rx="2" ry="2" />
<text  x="1043.37" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.29%)</title><rect x="679.9" y="581" width="3.4" height="15.0" fill="rgb(207,36,22)" rx="2" ry="2" />
<text  x="682.91" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="960.5" y="405" width="5.1" height="15.0" fill="rgb(205,119,25)" rx="2" ry="2" />
<text  x="963.46" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.14%)</title><rect x="67.8" y="389" width="1.7" height="15.0" fill="rgb(214,13,38)" rx="2" ry="2" />
<text  x="70.81" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (12 samples, 1.73%)</title><rect x="86.5" y="405" width="20.4" height="15.0" fill="rgb(207,156,16)" rx="2" ry="2" />
<text  x="89.51" y="415.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.14%)</title><rect x="134.1" y="693" width="1.7" height="15.0" fill="rgb(253,63,18)" rx="2" ry="2" />
<text  x="137.12" y="703.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="355.2" y="517" width="1.7" height="15.0" fill="rgb(252,184,1)" rx="2" ry="2" />
<text  x="358.16" y="527.5" ></text>
</g>
<g >
<title>make_combined_reader (7 samples, 1.01%)</title><rect x="508.2" y="485" width="11.9" height="15.0" fill="rgb(230,22,13)" rx="2" ry="2" />
<text  x="511.18" y="495.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (3 samples, 0.43%)</title><rect x="712.2" y="485" width="5.1" height="15.0" fill="rgb(231,120,10)" rx="2" ry="2" />
<text  x="715.22" y="495.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_error (1 samples, 0.14%)</title><rect x="38.9" y="373" width="1.7" height="15.0" fill="rgb(244,158,30)" rx="2" ry="2" />
<text  x="41.90" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="916.3" y="357" width="5.1" height="15.0" fill="rgb(254,88,45)" rx="2" ry="2" />
<text  x="919.25" y="367.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (41 samples, 5.91%)</title><rect x="696.9" y="549" width="69.7" height="15.0" fill="rgb(245,77,6)" rx="2" ry="2" />
<text  x="699.92" y="559.5" >single_..</text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (1 samples, 0.14%)</title><rect x="110.3" y="421" width="1.7" height="15.0" fill="rgb(220,199,4)" rx="2" ry="2" />
<text  x="113.32" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="74.6" y="181" width="1.7" height="15.0" fill="rgb(250,117,42)" rx="2" ry="2" />
<text  x="77.61" y="191.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.14%)</title><rect x="66.1" y="245" width="1.7" height="15.0" fill="rgb(230,70,5)" rx="2" ry="2" />
<text  x="69.11" y="255.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (1 samples, 0.14%)</title><rect x="1065.9" y="549" width="1.7" height="15.0" fill="rgb(223,82,47)" rx="2" ry="2" />
<text  x="1068.88" y="559.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.14%)</title><rect x="67.8" y="213" width="1.7" height="15.0" fill="rgb(243,184,4)" rx="2" ry="2" />
<text  x="70.81" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (5 samples, 0.72%)</title><rect x="30.4" y="373" width="8.5" height="15.0" fill="rgb(252,6,54)" rx="2" ry="2" />
<text  x="33.40" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (4 samples, 0.58%)</title><rect x="72.9" y="405" width="6.8" height="15.0" fill="rgb(244,99,5)" rx="2" ry="2" />
<text  x="75.91" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (143 samples, 20.61%)</title><rect x="787.0" y="533" width="243.2" height="15.0" fill="rgb(215,7,5)" rx="2" ry="2" />
<text  x="790.03" y="543.5" >seastar::noncopyable_function&lt;se..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="695.2" y="549" width="1.7" height="15.0" fill="rgb(232,46,42)" rx="2" ry="2" />
<text  x="698.22" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.14%)</title><rect x="84.8" y="325" width="1.7" height="15.0" fill="rgb(240,218,42)" rx="2" ry="2" />
<text  x="87.81" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.14%)</title><rect x="1045.5" y="517" width="1.7" height="15.0" fill="rgb(219,37,38)" rx="2" ry="2" />
<text  x="1048.48" y="527.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.14%)</title><rect x="460.6" y="469" width="1.7" height="15.0" fill="rgb(252,122,10)" rx="2" ry="2" />
<text  x="463.58" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="100.1" y="341" width="1.7" height="15.0" fill="rgb(214,143,27)" rx="2" ry="2" />
<text  x="103.12" y="351.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.14%)</title><rect x="225.9" y="533" width="1.7" height="15.0" fill="rgb(216,143,26)" rx="2" ry="2" />
<text  x="228.94" y="543.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (1 samples, 0.14%)</title><rect x="203.8" y="549" width="1.7" height="15.0" fill="rgb(241,221,46)" rx="2" ry="2" />
<text  x="206.83" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="66.1" y="325" width="1.7" height="15.0" fill="rgb(206,107,37)" rx="2" ry="2" />
<text  x="69.11" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (20 samples, 2.88%)</title><rect x="299.0" y="357" width="34.1" height="15.0" fill="rgb(217,186,20)" rx="2" ry="2" />
<text  x="302.05" y="367.5" >co..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (2 samples, 0.29%)</title><rect x="613.6" y="549" width="3.4" height="15.0" fill="rgb(205,58,23)" rx="2" ry="2" />
<text  x="616.60" y="559.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.14%)</title><rect x="334.8" y="405" width="1.7" height="15.0" fill="rgb(236,145,4)" rx="2" ry="2" />
<text  x="337.76" y="415.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.43%)</title><rect x="926.5" y="341" width="5.1" height="15.0" fill="rgb(220,171,21)" rx="2" ry="2" />
<text  x="929.46" y="351.5" ></text>
</g>
<g >
<title>map_type_impl::deserialize&lt;basic_single_fragmented_view&lt; (1 samples, 0.14%)</title><rect x="168.1" y="469" width="1.7" height="15.0" fill="rgb(229,31,36)" rx="2" ry="2" />
<text  x="171.13" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (143 samples, 20.61%)</title><rect x="787.0" y="549" width="243.2" height="15.0" fill="rgb(252,26,4)" rx="2" ry="2" />
<text  x="790.03" y="559.5" >seastar::noncopyable_function&lt;se..</text>
</g>
<g >
<title>partition_entry::make_evictable (1 samples, 0.14%)</title><rect x="134.1" y="645" width="1.7" height="15.0" fill="rgb(245,73,2)" rx="2" ry="2" />
<text  x="137.12" y="655.5" ></text>
</g>
<g >
<title>service::storage_service::join_cluster (1 samples, 0.14%)</title><rect x="20.2" y="613" width="1.7" height="15.0" fill="rgb(238,8,23)" rx="2" ry="2" />
<text  x="23.20" y="623.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (1 samples, 0.14%)</title><rect x="113.7" y="389" width="1.7" height="15.0" fill="rgb(224,177,11)" rx="2" ry="2" />
<text  x="116.72" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="339.9" y="389" width="1.7" height="15.0" fill="rgb(225,176,29)" rx="2" ry="2" />
<text  x="342.86" y="399.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (2 samples, 0.29%)</title><rect x="1031.9" y="421" width="3.4" height="15.0" fill="rgb(246,29,23)" rx="2" ry="2" />
<text  x="1034.87" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.14%)</title><rect x="676.5" y="581" width="1.7" height="15.0" fill="rgb(238,25,38)" rx="2" ry="2" />
<text  x="679.51" y="591.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (550 samples, 79.25%)</title><rect x="142.6" y="645" width="935.2" height="15.0" fill="rgb(238,97,33)" rx="2" ry="2" />
<text  x="145.62" y="655.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>service::client_state::has_column_family_access (23 samples, 3.31%)</title><rect x="722.4" y="501" width="39.1" height="15.0" fill="rgb(217,168,28)" rx="2" ry="2" />
<text  x="725.42" y="511.5" >ser..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="74.6" y="53" width="1.7" height="15.0" fill="rgb(219,121,41)" rx="2" ry="2" />
<text  x="77.61" y="63.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="693.5" y="533" width="1.7" height="15.0" fill="rgb(236,216,26)" rx="2" ry="2" />
<text  x="696.52" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (2 samples, 0.29%)</title><rect x="95.0" y="325" width="3.4" height="15.0" fill="rgb(234,80,16)" rx="2" ry="2" />
<text  x="98.01" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="74.6" y="245" width="1.7" height="15.0" fill="rgb(231,22,51)" rx="2" ry="2" />
<text  x="77.61" y="255.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (2 samples, 0.29%)</title><rect x="23.6" y="533" width="3.4" height="15.0" fill="rgb(210,99,22)" rx="2" ry="2" />
<text  x="26.60" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="105.2" y="261" width="1.7" height="15.0" fill="rgb(235,113,18)" rx="2" ry="2" />
<text  x="108.22" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.14%)</title><rect x="11.7" y="677" width="1.7" height="15.0" fill="rgb(240,100,26)" rx="2" ry="2" />
<text  x="14.70" y="687.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.14%)</title><rect x="773.4" y="453" width="1.7" height="15.0" fill="rgb(248,28,41)" rx="2" ry="2" />
<text  x="776.43" y="463.5" ></text>
</g>
<g >
<title>table::query (222 samples, 31.99%)</title><rect x="205.5" y="549" width="377.5" height="15.0" fill="rgb(208,118,54)" rx="2" ry="2" />
<text  x="208.53" y="559.5" >table::query</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.14%)</title><rect x="61.0" y="437" width="1.7" height="15.0" fill="rgb(254,25,8)" rx="2" ry="2" />
<text  x="64.01" y="447.5" ></text>
</g>
<g >
<title>sstables::compaction_strategy_impl::make_sstable_set (1 samples, 0.14%)</title><rect x="173.2" y="517" width="1.7" height="15.0" fill="rgb(218,133,40)" rx="2" ry="2" />
<text  x="176.23" y="527.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (4 samples, 0.58%)</title><rect x="775.1" y="469" width="6.8" height="15.0" fill="rgb(240,152,4)" rx="2" ry="2" />
<text  x="778.13" y="479.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (11 samples, 1.59%)</title><rect x="307.6" y="341" width="18.7" height="15.0" fill="rgb(206,104,17)" rx="2" ry="2" />
<text  x="310.55" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="742.8" y="405" width="1.7" height="15.0" fill="rgb(235,194,19)" rx="2" ry="2" />
<text  x="745.82" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.29%)</title><rect x="219.1" y="485" width="3.4" height="15.0" fill="rgb(245,63,14)" rx="2" ry="2" />
<text  x="222.14" y="495.5" ></text>
</g>
<g >
<title>read_context::create_reader (1 samples, 0.14%)</title><rect x="166.4" y="325" width="1.7" height="15.0" fill="rgb(222,123,44)" rx="2" ry="2" />
<text  x="169.43" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.14%)</title><rect x="139.2" y="373" width="1.7" height="15.0" fill="rgb(213,22,22)" rx="2" ry="2" />
<text  x="142.22" y="383.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (145 samples, 20.89%)</title><rect x="783.6" y="565" width="246.6" height="15.0" fill="rgb(234,17,16)" rx="2" ry="2" />
<text  x="786.63" y="575.5" >seastar::concrete_execution_stag..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.14%)</title><rect x="44.0" y="293" width="1.7" height="15.0" fill="rgb(253,165,34)" rx="2" ry="2" />
<text  x="47.01" y="303.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.14%)</title><rect x="91.6" y="309" width="1.7" height="15.0" fill="rgb(243,209,11)" rx="2" ry="2" />
<text  x="94.61" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (2 samples, 0.29%)</title><rect x="103.5" y="373" width="3.4" height="15.0" fill="rgb(236,56,31)" rx="2" ry="2" />
<text  x="106.52" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.14%)</title><rect x="1188.3" y="677" width="1.7" height="15.0" fill="rgb(208,212,54)" rx="2" ry="2" />
<text  x="1191.30" y="687.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.29%)</title><rect x="69.5" y="309" width="3.4" height="15.0" fill="rgb(222,197,30)" rx="2" ry="2" />
<text  x="72.51" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.14%)</title><rect x="30.4" y="293" width="1.7" height="15.0" fill="rgb(238,78,18)" rx="2" ry="2" />
<text  x="33.40" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="105.2" y="245" width="1.7" height="15.0" fill="rgb(211,93,40)" rx="2" ry="2" />
<text  x="108.22" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (6 samples, 0.86%)</title><rect x="773.4" y="549" width="10.2" height="15.0" fill="rgb(236,34,17)" rx="2" ry="2" />
<text  x="776.43" y="559.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.14%)</title><rect x="1040.4" y="309" width="1.7" height="15.0" fill="rgb(215,13,32)" rx="2" ry="2" />
<text  x="1043.37" y="319.5" ></text>
</g>
<g >
<title>query::result_set_builder::deserialize (1 samples, 0.14%)</title><rect x="168.1" y="517" width="1.7" height="15.0" fill="rgb(237,113,48)" rx="2" ry="2" />
<text  x="171.13" y="527.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.14%)</title><rect x="957.1" y="405" width="1.7" height="15.0" fill="rgb(214,99,35)" rx="2" ry="2" />
<text  x="960.06" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (1 samples, 0.14%)</title><rect x="853.3" y="501" width="1.7" height="15.0" fill="rgb(233,1,2)" rx="2" ry="2" />
<text  x="856.34" y="511.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (5 samples, 0.72%)</title><rect x="1030.2" y="565" width="8.5" height="15.0" fill="rgb(237,177,7)" rx="2" ry="2" />
<text  x="1033.17" y="575.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (2 samples, 0.29%)</title><rect x="13.4" y="613" width="3.4" height="15.0" fill="rgb(207,220,26)" rx="2" ry="2" />
<text  x="16.40" y="623.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (56 samples, 8.07%)</title><rect x="28.7" y="485" width="95.2" height="15.0" fill="rgb(227,38,53)" rx="2" ry="2" />
<text  x="31.70" y="495.5" >cql3_parser..</text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="591.5" y="565" width="1.7" height="15.0" fill="rgb(227,131,4)" rx="2" ry="2" />
<text  x="594.50" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.43%)</title><rect x="30.4" y="357" width="5.1" height="15.0" fill="rgb(225,17,20)" rx="2" ry="2" />
<text  x="33.40" y="367.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="66.1" y="373" width="1.7" height="15.0" fill="rgb(247,108,30)" rx="2" ry="2" />
<text  x="69.11" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (66 samples, 9.51%)</title><rect x="13.4" y="645" width="112.2" height="15.0" fill="rgb(225,117,54)" rx="2" ry="2" />
<text  x="16.40" y="655.5" >seastar::nonc..</text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.14%)</title><rect x="125.6" y="629" width="1.7" height="15.0" fill="rgb(249,201,17)" rx="2" ry="2" />
<text  x="128.62" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="74.6" y="149" width="1.7" height="15.0" fill="rgb(236,144,7)" rx="2" ry="2" />
<text  x="77.61" y="159.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.14%)</title><rect x="125.6" y="613" width="1.7" height="15.0" fill="rgb(205,63,51)" rx="2" ry="2" />
<text  x="128.62" y="623.5" ></text>
</g>
<g >
<title>query::querier&lt; (134 samples, 19.31%)</title><rect x="227.6" y="533" width="227.9" height="15.0" fill="rgb(251,73,7)" rx="2" ry="2" />
<text  x="230.64" y="543.5" >query::querier&lt;</text>
</g>
<g >
<title>seastar::metrics::impl::metric_id::operator= (1 samples, 0.14%)</title><rect x="125.6" y="325" width="1.7" height="15.0" fill="rgb(249,64,37)" rx="2" ry="2" />
<text  x="128.62" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.14%)</title><rect x="52.5" y="469" width="1.7" height="15.0" fill="rgb(211,7,47)" rx="2" ry="2" />
<text  x="55.51" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.29%)</title><rect x="86.5" y="389" width="3.4" height="15.0" fill="rgb(238,27,14)" rx="2" ry="2" />
<text  x="89.51" y="399.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="66.1" y="389" width="1.7" height="15.0" fill="rgb(233,189,49)" rx="2" ry="2" />
<text  x="69.11" y="399.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.14%)</title><rect x="113.7" y="341" width="1.7" height="15.0" fill="rgb(209,134,28)" rx="2" ry="2" />
<text  x="116.72" y="351.5" ></text>
</g>
<g >
<title>compare_row_marker_for_merge (1 samples, 0.14%)</title><rect x="1035.3" y="421" width="1.7" height="15.0" fill="rgb(230,49,33)" rx="2" ry="2" />
<text  x="1038.27" y="431.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (3 samples, 0.43%)</title><rect x="169.8" y="581" width="5.1" height="15.0" fill="rgb(220,144,40)" rx="2" ry="2" />
<text  x="172.83" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.29%)</title><rect x="69.5" y="229" width="3.4" height="15.0" fill="rgb(251,26,19)" rx="2" ry="2" />
<text  x="72.51" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.72%)</title><rect x="1030.2" y="549" width="8.5" height="15.0" fill="rgb(222,211,46)" rx="2" ry="2" />
<text  x="1033.17" y="559.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.14%)</title><rect x="166.4" y="437" width="1.7" height="15.0" fill="rgb(219,191,44)" rx="2" ry="2" />
<text  x="169.43" y="447.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.14%)</title><rect x="759.8" y="469" width="1.7" height="15.0" fill="rgb(216,158,30)" rx="2" ry="2" />
<text  x="762.83" y="479.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.14%)</title><rect x="76.3" y="165" width="1.7" height="15.0" fill="rgb(218,168,18)" rx="2" ry="2" />
<text  x="79.31" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="74.6" y="197" width="1.7" height="15.0" fill="rgb(209,116,25)" rx="2" ry="2" />
<text  x="77.61" y="207.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (52 samples, 7.49%)</title><rect x="367.1" y="501" width="88.4" height="15.0" fill="rgb(243,107,47)" rx="2" ry="2" />
<text  x="370.06" y="511.5" >seastar::d..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (18 samples, 2.59%)</title><rect x="455.5" y="517" width="30.6" height="15.0" fill="rgb(234,88,13)" rx="2" ry="2" />
<text  x="458.48" y="527.5" >st..</text>
</g>
<g >
<title>operator new (5 samples, 0.72%)</title><rect x="858.4" y="485" width="8.5" height="15.0" fill="rgb(229,90,11)" rx="2" ry="2" />
<text  x="861.44" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="78.0" y="277" width="1.7" height="15.0" fill="rgb(241,209,17)" rx="2" ry="2" />
<text  x="81.01" y="287.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.14%)</title><rect x="394.3" y="485" width="1.7" height="15.0" fill="rgb(210,68,0)" rx="2" ry="2" />
<text  x="397.27" y="495.5" ></text>
</g>
<g >
<title>[unknown] (78 samples, 11.24%)</title><rect x="10.0" y="709" width="132.6" height="15.0" fill="rgb(252,198,52)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >[unknown]</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.29%)</title><rect x="583.0" y="565" width="3.4" height="15.0" fill="rgb(233,158,14)" rx="2" ry="2" />
<text  x="586.00" y="575.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.14%)</title><rect x="295.6" y="341" width="1.7" height="15.0" fill="rgb(218,209,23)" rx="2" ry="2" />
<text  x="298.65" y="351.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.14%)</title><rect x="20.2" y="581" width="1.7" height="15.0" fill="rgb(241,83,9)" rx="2" ry="2" />
<text  x="23.20" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.14%)</title><rect x="91.6" y="293" width="1.7" height="15.0" fill="rgb(217,36,24)" rx="2" ry="2" />
<text  x="94.61" y="303.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.14%)</title><rect x="804.0" y="501" width="1.7" height="15.0" fill="rgb(220,28,45)" rx="2" ry="2" />
<text  x="807.03" y="511.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.14%)</title><rect x="554.1" y="469" width="1.7" height="15.0" fill="rgb(218,218,0)" rx="2" ry="2" />
<text  x="557.09" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (2 samples, 0.29%)</title><rect x="13.4" y="581" width="3.4" height="15.0" fill="rgb(229,192,36)" rx="2" ry="2" />
<text  x="16.40" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.14%)</title><rect x="350.1" y="469" width="1.7" height="15.0" fill="rgb(249,79,40)" rx="2" ry="2" />
<text  x="353.06" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (3 samples, 0.43%)</title><rect x="776.8" y="437" width="5.1" height="15.0" fill="rgb(214,85,10)" rx="2" ry="2" />
<text  x="779.83" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::drop_role_statement*, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt; (1 samples, 0.14%)</title><rect x="122.2" y="437" width="1.7" height="15.0" fill="rgb(254,179,28)" rx="2" ry="2" />
<text  x="125.22" y="447.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.14%)</title><rect x="15.1" y="517" width="1.7" height="15.0" fill="rgb(250,189,35)" rx="2" ry="2" />
<text  x="18.10" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.29%)</title><rect x="69.5" y="373" width="3.4" height="15.0" fill="rgb(219,109,12)" rx="2" ry="2" />
<text  x="72.51" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.14%)</title><rect x="220.8" y="437" width="1.7" height="15.0" fill="rgb(220,143,15)" rx="2" ry="2" />
<text  x="223.84" y="447.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.14%)</title><rect x="139.2" y="677" width="1.7" height="15.0" fill="rgb(211,200,47)" rx="2" ry="2" />
<text  x="142.22" y="687.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (11 samples, 1.59%)</title><rect x="810.8" y="485" width="18.7" height="15.0" fill="rgb(218,14,50)" rx="2" ry="2" />
<text  x="813.84" y="495.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (7 samples, 1.01%)</title><rect x="637.4" y="581" width="11.9" height="15.0" fill="rgb(208,96,25)" rx="2" ry="2" />
<text  x="640.41" y="591.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.14%)</title><rect x="265.0" y="405" width="1.7" height="15.0" fill="rgb(222,169,43)" rx="2" ry="2" />
<text  x="268.04" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (14 samples, 2.02%)</title><rect x="1048.9" y="581" width="23.8" height="15.0" fill="rgb(248,156,38)" rx="2" ry="2" />
<text  x="1051.88" y="591.5" >s..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="902.7" y="389" width="1.7" height="15.0" fill="rgb(238,4,26)" rx="2" ry="2" />
<text  x="905.65" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.14%)</title><rect x="198.7" y="517" width="1.7" height="15.0" fill="rgb(248,160,1)" rx="2" ry="2" />
<text  x="201.73" y="527.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::execute_direct (1 samples, 0.14%)</title><rect x="594.9" y="581" width="1.7" height="15.0" fill="rgb(226,197,31)" rx="2" ry="2" />
<text  x="597.90" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.14%)</title><rect x="76.3" y="229" width="1.7" height="15.0" fill="rgb(207,176,39)" rx="2" ry="2" />
<text  x="79.31" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.14%)</title><rect x="66.1" y="229" width="1.7" height="15.0" fill="rgb(222,224,1)" rx="2" ry="2" />
<text  x="69.11" y="239.5" ></text>
</g>
<g >
<title>seastar::thread_pool::work (1 samples, 0.14%)</title><rect x="1188.3" y="661" width="1.7" height="15.0" fill="rgb(206,210,34)" rx="2" ry="2" />
<text  x="1191.30" y="671.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (4 samples, 0.58%)</title><rect x="836.3" y="453" width="6.8" height="15.0" fill="rgb(213,39,40)" rx="2" ry="2" />
<text  x="839.34" y="463.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (1 samples, 0.14%)</title><rect x="169.8" y="501" width="1.7" height="15.0" fill="rgb(221,99,41)" rx="2" ry="2" />
<text  x="172.83" y="511.5" ></text>
</g>
<g >
<title>database::query (14 samples, 2.02%)</title><rect x="921.4" y="357" width="23.8" height="15.0" fill="rgb(237,118,34)" rx="2" ry="2" />
<text  x="924.35" y="367.5" >d..</text>
</g>
<g >
<title>sstables::compaction_strategy::make_sstable_set (1 samples, 0.14%)</title><rect x="173.2" y="533" width="1.7" height="15.0" fill="rgb(222,178,27)" rx="2" ry="2" />
<text  x="176.23" y="543.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.14%)</title><rect x="20.2" y="485" width="1.7" height="15.0" fill="rgb(236,64,26)" rx="2" ry="2" />
<text  x="23.20" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="74.6" y="229" width="1.7" height="15.0" fill="rgb(248,91,1)" rx="2" ry="2" />
<text  x="77.61" y="239.5" ></text>
</g>
<g >
<title>table::set_compaction_strategy (1 samples, 0.14%)</title><rect x="173.2" y="549" width="1.7" height="15.0" fill="rgb(239,220,48)" rx="2" ry="2" />
<text  x="176.23" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="467.4" y="437" width="1.7" height="15.0" fill="rgb(205,73,22)" rx="2" ry="2" />
<text  x="470.38" y="447.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (1 samples, 0.14%)</title><rect x="1188.3" y="629" width="1.7" height="15.0" fill="rgb(222,35,0)" rx="2" ry="2" />
<text  x="1191.30" y="639.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (3 samples, 0.43%)</title><rect x="776.8" y="421" width="5.1" height="15.0" fill="rgb(211,207,12)" rx="2" ry="2" />
<text  x="779.83" y="431.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.14%)</title><rect x="139.2" y="469" width="1.7" height="15.0" fill="rgb(236,60,41)" rx="2" ry="2" />
<text  x="142.22" y="479.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.43%)</title><rect x="30.4" y="325" width="5.1" height="15.0" fill="rgb(244,59,26)" rx="2" ry="2" />
<text  x="33.40" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.14%)</title><rect x="106.9" y="341" width="1.7" height="15.0" fill="rgb(234,73,50)" rx="2" ry="2" />
<text  x="109.92" y="351.5" ></text>
</g>
<g >
<title>free (1 samples, 0.14%)</title><rect x="16.8" y="597" width="1.7" height="15.0" fill="rgb(211,45,37)" rx="2" ry="2" />
<text  x="19.80" y="607.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (87 samples, 12.54%)</title><rect x="855.0" y="501" width="148.0" height="15.0" fill="rgb(211,33,41)" rx="2" ry="2" />
<text  x="858.04" y="511.5" >cql3::statements::..</text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.14%)</title><rect x="59.3" y="437" width="1.7" height="15.0" fill="rgb(244,76,17)" rx="2" ry="2" />
<text  x="62.31" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="64.4" y="293" width="1.7" height="15.0" fill="rgb(250,222,53)" rx="2" ry="2" />
<text  x="67.41" y="303.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (6 samples, 0.86%)</title><rect x="773.4" y="565" width="10.2" height="15.0" fill="rgb(240,128,8)" rx="2" ry="2" />
<text  x="776.43" y="575.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.29%)</title><rect x="103.5" y="341" width="3.4" height="15.0" fill="rgb(227,178,41)" rx="2" ry="2" />
<text  x="106.52" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (3 samples, 0.43%)</title><rect x="651.0" y="565" width="5.1" height="15.0" fill="rgb(221,169,40)" rx="2" ry="2" />
<text  x="654.01" y="575.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (1 samples, 0.14%)</title><rect x="764.9" y="533" width="1.7" height="15.0" fill="rgb(243,87,28)" rx="2" ry="2" />
<text  x="767.93" y="543.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::registered_metric::registered_metric (1 samples, 0.14%)</title><rect x="125.6" y="341" width="1.7" height="15.0" fill="rgb(239,174,1)" rx="2" ry="2" />
<text  x="128.62" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (44 samples, 6.34%)</title><rect x="258.2" y="421" width="74.9" height="15.0" fill="rgb(228,154,14)" rx="2" ry="2" />
<text  x="261.24" y="431.5" >partitio..</text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.14%)</title><rect x="1074.4" y="581" width="1.7" height="15.0" fill="rgb(242,110,52)" rx="2" ry="2" />
<text  x="1077.38" y="591.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::operator new (1 samples, 0.14%)</title><rect x="27.0" y="453" width="1.7" height="15.0" fill="rgb(250,211,47)" rx="2" ry="2" />
<text  x="30.00" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.14%)</title><rect x="117.1" y="421" width="1.7" height="15.0" fill="rgb(219,108,16)" rx="2" ry="2" />
<text  x="120.12" y="431.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_metric (1 samples, 0.14%)</title><rect x="125.6" y="389" width="1.7" height="15.0" fill="rgb(242,78,46)" rx="2" ry="2" />
<text  x="128.62" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.58%)</title><rect x="406.2" y="453" width="6.8" height="15.0" fill="rgb(251,144,12)" rx="2" ry="2" />
<text  x="409.17" y="463.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.14%)</title><rect x="202.1" y="517" width="1.7" height="15.0" fill="rgb(230,137,46)" rx="2" ry="2" />
<text  x="205.13" y="527.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="174.9" y="581" width="1.7" height="15.0" fill="rgb(214,104,28)" rx="2" ry="2" />
<text  x="177.93" y="591.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (549 samples, 79.11%)</title><rect x="142.6" y="613" width="933.5" height="15.0" fill="rgb(208,131,23)" rx="2" ry="2" />
<text  x="145.62" y="623.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (1 samples, 0.14%)</title><rect x="1040.4" y="325" width="1.7" height="15.0" fill="rgb(209,172,39)" rx="2" ry="2" />
<text  x="1043.37" y="335.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="771.7" y="565" width="1.7" height="15.0" fill="rgb(231,42,52)" rx="2" ry="2" />
<text  x="774.73" y="575.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (548 samples, 78.96%)</title><rect x="144.3" y="597" width="931.8" height="15.0" fill="rgb(224,43,1)" rx="2" ry="2" />
<text  x="147.32" y="607.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (7 samples, 1.01%)</title><rect x="664.6" y="565" width="11.9" height="15.0" fill="rgb(245,198,41)" rx="2" ry="2" />
<text  x="667.61" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="67.8" y="357" width="1.7" height="15.0" fill="rgb(254,7,51)" rx="2" ry="2" />
<text  x="70.81" y="367.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.14%)</title><rect x="732.6" y="469" width="1.7" height="15.0" fill="rgb(205,218,5)" rx="2" ry="2" />
<text  x="735.62" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (9 samples, 1.30%)</title><rect x="603.4" y="565" width="15.3" height="15.0" fill="rgb(211,196,1)" rx="2" ry="2" />
<text  x="606.40" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="93.3" y="309" width="1.7" height="15.0" fill="rgb(252,85,16)" rx="2" ry="2" />
<text  x="96.31" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.43%)</title><rect x="293.9" y="357" width="5.1" height="15.0" fill="rgb(213,125,45)" rx="2" ry="2" />
<text  x="296.95" y="367.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.29%)</title><rect x="103.5" y="357" width="3.4" height="15.0" fill="rgb(235,37,10)" rx="2" ry="2" />
<text  x="106.52" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (56 samples, 8.07%)</title><rect x="28.7" y="501" width="95.2" height="15.0" fill="rgb(250,92,12)" rx="2" ry="2" />
<text  x="31.70" y="511.5" >cql3_parser..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.29%)</title><rect x="74.6" y="325" width="3.4" height="15.0" fill="rgb(213,127,15)" rx="2" ry="2" />
<text  x="77.61" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="518.4" y="469" width="1.7" height="15.0" fill="rgb(238,198,21)" rx="2" ry="2" />
<text  x="521.39" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.14%)</title><rect x="110.3" y="389" width="1.7" height="15.0" fill="rgb(222,103,48)" rx="2" ry="2" />
<text  x="113.32" y="399.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.14%)</title><rect x="297.3" y="341" width="1.7" height="15.0" fill="rgb(206,172,32)" rx="2" ry="2" />
<text  x="300.35" y="351.5" ></text>
</g>
<g >
<title>row::~row (4 samples, 0.58%)</title><rect x="379.0" y="469" width="6.8" height="15.0" fill="rgb(230,215,48)" rx="2" ry="2" />
<text  x="381.96" y="479.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.14%)</title><rect x="139.2" y="565" width="1.7" height="15.0" fill="rgb(228,153,13)" rx="2" ry="2" />
<text  x="142.22" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="67.8" y="309" width="1.7" height="15.0" fill="rgb(217,138,40)" rx="2" ry="2" />
<text  x="70.81" y="319.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="86.5" y="357" width="3.4" height="15.0" fill="rgb(224,113,13)" rx="2" ry="2" />
<text  x="89.51" y="367.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::deserialize_visitor&lt;basic_single_fragmented_view&lt; (1 samples, 0.14%)</title><rect x="168.1" y="485" width="1.7" height="15.0" fill="rgb(236,132,38)" rx="2" ry="2" />
<text  x="171.13" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.14%)</title><rect x="91.6" y="261" width="1.7" height="15.0" fill="rgb(253,87,48)" rx="2" ry="2" />
<text  x="94.61" y="271.5" ></text>
</g>
<g >
<title>row_cache::make_reader (7 samples, 1.01%)</title><rect x="555.8" y="485" width="11.9" height="15.0" fill="rgb(251,49,25)" rx="2" ry="2" />
<text  x="558.79" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="266.7" y="389" width="1.7" height="15.0" fill="rgb(228,27,45)" rx="2" ry="2" />
<text  x="269.74" y="399.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (4 samples, 0.58%)</title><rect x="1101.6" y="693" width="6.8" height="15.0" fill="rgb(242,93,4)" rx="2" ry="2" />
<text  x="1104.59" y="703.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.14%)</title><rect x="55.9" y="421" width="1.7" height="15.0" fill="rgb(244,220,17)" rx="2" ry="2" />
<text  x="58.91" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (2 samples, 0.29%)</title><rect x="1014.9" y="485" width="3.4" height="15.0" fill="rgb(215,4,50)" rx="2" ry="2" />
<text  x="1017.87" y="495.5" ></text>
</g>
<g >
<title>seastar::posix_thread::start_routine (1 samples, 0.14%)</title><rect x="1188.3" y="693" width="1.7" height="15.0" fill="rgb(211,223,13)" rx="2" ry="2" />
<text  x="1191.30" y="703.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="346.7" y="453" width="3.4" height="15.0" fill="rgb(247,142,13)" rx="2" ry="2" />
<text  x="349.66" y="463.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_following (1 samples, 0.14%)</title><rect x="89.9" y="373" width="1.7" height="15.0" fill="rgb(206,146,24)" rx="2" ry="2" />
<text  x="92.91" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="1055.7" y="549" width="1.7" height="15.0" fill="rgb(214,212,8)" rx="2" ry="2" />
<text  x="1058.68" y="559.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.14%)</title><rect x="98.4" y="309" width="1.7" height="15.0" fill="rgb(228,210,46)" rx="2" ry="2" />
<text  x="101.41" y="319.5" ></text>
</g>
<g >
<title>seastar::app_template::run (550 samples, 79.25%)</title><rect x="142.6" y="661" width="935.2" height="15.0" fill="rgb(227,203,8)" rx="2" ry="2" />
<text  x="145.62" y="671.5" >seastar::app_template::run</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (2 samples, 0.29%)</title><rect x="13.4" y="565" width="3.4" height="15.0" fill="rgb(246,6,30)" rx="2" ry="2" />
<text  x="16.40" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.29%)</title><rect x="74.6" y="293" width="3.4" height="15.0" fill="rgb(250,31,8)" rx="2" ry="2" />
<text  x="77.61" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.14%)</title><rect x="278.6" y="373" width="1.7" height="15.0" fill="rgb(250,105,9)" rx="2" ry="2" />
<text  x="281.65" y="383.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::prepare (1 samples, 0.14%)</title><rect x="21.9" y="533" width="1.7" height="15.0" fill="rgb(219,100,11)" rx="2" ry="2" />
<text  x="24.90" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::_M_ptr (1 samples, 0.14%)</title><rect x="115.4" y="405" width="1.7" height="15.0" fill="rgb(230,18,53)" rx="2" ry="2" />
<text  x="118.42" y="415.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.14%)</title><rect x="125.6" y="597" width="1.7" height="15.0" fill="rgb(219,5,10)" rx="2" ry="2" />
<text  x="128.62" y="607.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.14%)</title><rect x="20.2" y="565" width="1.7" height="15.0" fill="rgb(248,107,13)" rx="2" ry="2" />
<text  x="23.20" y="575.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (1 samples, 0.14%)</title><rect x="166.4" y="373" width="1.7" height="15.0" fill="rgb(213,11,31)" rx="2" ry="2" />
<text  x="169.43" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.14%)</title><rect x="83.1" y="357" width="1.7" height="15.0" fill="rgb(240,229,38)" rx="2" ry="2" />
<text  x="86.11" y="367.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.58%)</title><rect x="215.7" y="517" width="6.8" height="15.0" fill="rgb(219,9,0)" rx="2" ry="2" />
<text  x="218.73" y="527.5" ></text>
</g>
<g >
<title>database::apply_in_memory (4 samples, 0.58%)</title><rect x="1031.9" y="485" width="6.8" height="15.0" fill="rgb(245,48,18)" rx="2" ry="2" />
<text  x="1034.87" y="495.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (2 samples, 0.29%)</title><rect x="948.6" y="373" width="3.4" height="15.0" fill="rgb(207,90,46)" rx="2" ry="2" />
<text  x="951.56" y="383.5" ></text>
</g>
<g >
<title>table::apply (4 samples, 0.58%)</title><rect x="1031.9" y="469" width="6.8" height="15.0" fill="rgb(237,10,47)" rx="2" ry="2" />
<text  x="1034.87" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (30 samples, 4.32%)</title><rect x="952.0" y="437" width="51.0" height="15.0" fill="rgb(231,103,50)" rx="2" ry="2" />
<text  x="954.96" y="447.5" >servi..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.14%)</title><rect x="105.2" y="325" width="1.7" height="15.0" fill="rgb(247,91,18)" rx="2" ry="2" />
<text  x="108.22" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (3 samples, 0.43%)</title><rect x="469.1" y="453" width="5.1" height="15.0" fill="rgb(232,166,15)" rx="2" ry="2" />
<text  x="472.08" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3 samples, 0.43%)</title><rect x="42.3" y="341" width="5.1" height="15.0" fill="rgb(215,16,25)" rx="2" ry="2" />
<text  x="45.31" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="1064.2" y="565" width="1.7" height="15.0" fill="rgb(232,132,40)" rx="2" ry="2" />
<text  x="1067.18" y="575.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (2 samples, 0.29%)</title><rect x="1035.3" y="437" width="3.4" height="15.0" fill="rgb(210,42,6)" rx="2" ry="2" />
<text  x="1038.27" y="447.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="1057.4" y="565" width="3.4" height="15.0" fill="rgb(248,96,7)" rx="2" ry="2" />
<text  x="1060.38" y="575.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (3 samples, 0.43%)</title><rect x="938.4" y="325" width="5.1" height="15.0" fill="rgb(242,105,52)" rx="2" ry="2" />
<text  x="941.36" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (13 samples, 1.87%)</title><rect x="30.4" y="421" width="22.1" height="15.0" fill="rgb(230,13,48)" rx="2" ry="2" />
<text  x="33.40" y="431.5" >a..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (28 samples, 4.03%)</title><rect x="805.7" y="501" width="47.6" height="15.0" fill="rgb(213,41,7)" rx="2" ry="2" />
<text  x="808.73" y="511.5" >cql3..</text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="1020.0" y="501" width="1.7" height="15.0" fill="rgb(205,56,23)" rx="2" ry="2" />
<text  x="1022.97" y="511.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.14%)</title><rect x="564.3" y="453" width="1.7" height="15.0" fill="rgb(248,57,32)" rx="2" ry="2" />
<text  x="567.29" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (10 samples, 1.44%)</title><rect x="462.3" y="469" width="17.0" height="15.0" fill="rgb(252,33,31)" rx="2" ry="2" />
<text  x="465.28" y="479.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.14%)</title><rect x="125.6" y="565" width="1.7" height="15.0" fill="rgb(250,133,41)" rx="2" ry="2" />
<text  x="128.62" y="575.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.14%)</title><rect x="16.8" y="629" width="1.7" height="15.0" fill="rgb(212,200,38)" rx="2" ry="2" />
<text  x="19.80" y="639.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="125.6" y="277" width="1.7" height="15.0" fill="rgb(254,117,12)" rx="2" ry="2" />
<text  x="128.62" y="287.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (161 samples, 23.20%)</title><rect x="771.7" y="581" width="273.8" height="15.0" fill="rgb(239,35,9)" rx="2" ry="2" />
<text  x="774.73" y="591.5" >seastar::lambda_task&lt;seastar::execut..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (13 samples, 1.87%)</title><rect x="30.4" y="453" width="22.1" height="15.0" fill="rgb(249,22,2)" rx="2" ry="2" />
<text  x="33.40" y="463.5" >a..</text>
</g>
<g >
<title>__start_context (1 samples, 0.14%)</title><rect x="18.5" y="581" width="1.7" height="15.0" fill="rgb(233,117,3)" rx="2" ry="2" />
<text  x="21.50" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="224.2" y="517" width="1.7" height="15.0" fill="rgb(207,22,13)" rx="2" ry="2" />
<text  x="227.24" y="527.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="671.4" y="549" width="1.7" height="15.0" fill="rgb(233,148,2)" rx="2" ry="2" />
<text  x="674.41" y="559.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.29%)</title><rect x="1025.1" y="501" width="3.4" height="15.0" fill="rgb(238,30,25)" rx="2" ry="2" />
<text  x="1028.07" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.14%)</title><rect x="15.1" y="533" width="1.7" height="15.0" fill="rgb(237,83,17)" rx="2" ry="2" />
<text  x="18.10" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::modification_statement, std::default_delete&lt;cql3::statements::raw::modification_statement&gt; &gt;::_M_ptr (1 samples, 0.14%)</title><rect x="120.5" y="469" width="1.7" height="15.0" fill="rgb(223,128,40)" rx="2" ry="2" />
<text  x="123.52" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.14%)</title><rect x="40.6" y="341" width="1.7" height="15.0" fill="rgb(234,154,35)" rx="2" ry="2" />
<text  x="43.61" y="351.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (61 samples, 8.79%)</title><rect x="21.9" y="581" width="103.7" height="15.0" fill="rgb(222,216,42)" rx="2" ry="2" />
<text  x="24.90" y="591.5" >single_node_..</text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.14%)</title><rect x="547.3" y="437" width="1.7" height="15.0" fill="rgb(247,131,34)" rx="2" ry="2" />
<text  x="550.29" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.14%)</title><rect x="941.8" y="309" width="1.7" height="15.0" fill="rgb(218,51,12)" rx="2" ry="2" />
<text  x="944.76" y="319.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.14%)</title><rect x="129.0" y="661" width="1.7" height="15.0" fill="rgb(211,141,45)" rx="2" ry="2" />
<text  x="132.02" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="40.6" y="325" width="1.7" height="15.0" fill="rgb(246,171,28)" rx="2" ry="2" />
<text  x="43.61" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="763.2" y="517" width="1.7" height="15.0" fill="rgb(225,209,19)" rx="2" ry="2" />
<text  x="766.23" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (28 samples, 4.03%)</title><rect x="62.7" y="453" width="47.6" height="15.0" fill="rgb(236,217,23)" rx="2" ry="2" />
<text  x="65.71" y="463.5" >cql3..</text>
</g>
<g >
<title>malloc (1 samples, 0.14%)</title><rect x="572.8" y="501" width="1.7" height="15.0" fill="rgb(237,56,20)" rx="2" ry="2" />
<text  x="575.80" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (1 samples, 0.14%)</title><rect x="123.9" y="549" width="1.7" height="15.0" fill="rgb(231,218,31)" rx="2" ry="2" />
<text  x="126.92" y="559.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (1 samples, 0.14%)</title><rect x="535.4" y="469" width="1.7" height="15.0" fill="rgb(226,182,5)" rx="2" ry="2" />
<text  x="538.39" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="662.9" y="565" width="1.7" height="15.0" fill="rgb(233,92,54)" rx="2" ry="2" />
<text  x="665.91" y="575.5" ></text>
</g>
<g >
<title>[[vdso]] (8 samples, 1.15%)</title><rect x="1088.0" y="693" width="13.6" height="15.0" fill="rgb(216,191,33)" rx="2" ry="2" />
<text  x="1090.98" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="115.4" y="421" width="1.7" height="15.0" fill="rgb(222,1,15)" rx="2" ry="2" />
<text  x="118.42" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="1014.9" y="453" width="3.4" height="15.0" fill="rgb(228,128,36)" rx="2" ry="2" />
<text  x="1017.87" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.14%)</title><rect x="74.6" y="277" width="1.7" height="15.0" fill="rgb(222,186,51)" rx="2" ry="2" />
<text  x="77.61" y="287.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (2 samples, 0.29%)</title><rect x="169.8" y="517" width="3.4" height="15.0" fill="rgb(253,104,19)" rx="2" ry="2" />
<text  x="172.83" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.14%)</title><rect x="166.4" y="341" width="1.7" height="15.0" fill="rgb(228,103,9)" rx="2" ry="2" />
<text  x="169.43" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (8 samples, 1.15%)</title><rect x="662.9" y="581" width="13.6" height="15.0" fill="rgb(232,212,33)" rx="2" ry="2" />
<text  x="665.91" y="591.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.14%)</title><rect x="168.1" y="565" width="1.7" height="15.0" fill="rgb(247,12,52)" rx="2" ry="2" />
<text  x="171.13" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.29%)</title><rect x="69.5" y="277" width="3.4" height="15.0" fill="rgb(227,165,49)" rx="2" ry="2" />
<text  x="72.51" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (2 samples, 0.29%)</title><rect x="23.6" y="501" width="3.4" height="15.0" fill="rgb(223,166,43)" rx="2" ry="2" />
<text  x="26.60" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.14%)</title><rect x="45.7" y="293" width="1.7" height="15.0" fill="rgb(250,11,6)" rx="2" ry="2" />
<text  x="48.71" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (2 samples, 0.29%)</title><rect x="59.3" y="453" width="3.4" height="15.0" fill="rgb(253,87,3)" rx="2" ry="2" />
<text  x="62.31" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.14%)</title><rect x="55.9" y="453" width="1.7" height="15.0" fill="rgb(208,185,39)" rx="2" ry="2" />
<text  x="58.91" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (3 samples, 0.43%)</title><rect x="110.3" y="453" width="5.1" height="15.0" fill="rgb(211,55,34)" rx="2" ry="2" />
<text  x="113.32" y="463.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (2 samples, 0.29%)</title><rect x="130.7" y="661" width="3.4" height="15.0" fill="rgb(246,148,28)" rx="2" ry="2" />
<text  x="133.72" y="671.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.14%)</title><rect x="16.8" y="613" width="1.7" height="15.0" fill="rgb(229,17,41)" rx="2" ry="2" />
<text  x="19.80" y="623.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.58%)</title><rect x="72.9" y="421" width="6.8" height="15.0" fill="rgb(225,172,3)" rx="2" ry="2" />
<text  x="75.91" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (234 samples, 33.72%)</title><rect x="185.1" y="565" width="397.9" height="15.0" fill="rgb(234,15,14)" rx="2" ry="2" />
<text  x="188.13" y="575.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.29%)</title><rect x="69.5" y="341" width="3.4" height="15.0" fill="rgb(225,20,34)" rx="2" ry="2" />
<text  x="72.51" y="351.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.14%)</title><rect x="331.4" y="341" width="1.7" height="15.0" fill="rgb(232,116,54)" rx="2" ry="2" />
<text  x="334.35" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="74.6" y="117" width="1.7" height="15.0" fill="rgb(237,181,4)" rx="2" ry="2" />
<text  x="77.61" y="127.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="98.4" y="277" width="1.7" height="15.0" fill="rgb(224,63,34)" rx="2" ry="2" />
<text  x="101.41" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.14%)</title><rect x="20.2" y="549" width="1.7" height="15.0" fill="rgb(214,150,11)" rx="2" ry="2" />
<text  x="23.20" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (9 samples, 1.30%)</title><rect x="812.5" y="437" width="15.3" height="15.0" fill="rgb(219,130,8)" rx="2" ry="2" />
<text  x="815.54" y="447.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_impl&amp;&gt; (1 samples, 0.14%)</title><rect x="117.1" y="405" width="1.7" height="15.0" fill="rgb(244,188,13)" rx="2" ry="2" />
<text  x="120.12" y="415.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.14%)</title><rect x="1047.2" y="581" width="1.7" height="15.0" fill="rgb(223,217,18)" rx="2" ry="2" />
<text  x="1050.18" y="591.5" ></text>
</g>
<g >
<title>keyspace::column_family_directory (1 samples, 0.14%)</title><rect x="18.5" y="517" width="1.7" height="15.0" fill="rgb(235,91,18)" rx="2" ry="2" />
<text  x="21.50" y="527.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.14%)</title><rect x="166.4" y="309" width="1.7" height="15.0" fill="rgb(223,136,51)" rx="2" ry="2" />
<text  x="169.43" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (3 samples, 0.43%)</title><rect x="1038.7" y="357" width="5.1" height="15.0" fill="rgb(252,66,45)" rx="2" ry="2" />
<text  x="1041.67" y="367.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (1 samples, 0.14%)</title><rect x="685.0" y="565" width="1.7" height="15.0" fill="rgb(223,0,15)" rx="2" ry="2" />
<text  x="688.01" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="78.0" y="293" width="1.7" height="15.0" fill="rgb(247,206,5)" rx="2" ry="2" />
<text  x="81.01" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="105.2" y="229" width="1.7" height="15.0" fill="rgb(243,95,23)" rx="2" ry="2" />
<text  x="108.22" y="239.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (6 samples, 0.86%)</title><rect x="773.4" y="485" width="10.2" height="15.0" fill="rgb(248,18,9)" rx="2" ry="2" />
<text  x="776.43" y="495.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.14%)</title><rect x="64.4" y="405" width="1.7" height="15.0" fill="rgb(228,20,23)" rx="2" ry="2" />
<text  x="67.41" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="105.2" y="293" width="1.7" height="15.0" fill="rgb(244,215,49)" rx="2" ry="2" />
<text  x="108.22" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.86%)</title><rect x="193.6" y="533" width="10.2" height="15.0" fill="rgb(252,64,4)" rx="2" ry="2" />
<text  x="196.63" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (5 samples, 0.72%)</title><rect x="91.6" y="357" width="8.5" height="15.0" fill="rgb(239,8,18)" rx="2" ry="2" />
<text  x="94.61" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.29%)</title><rect x="69.5" y="357" width="3.4" height="15.0" fill="rgb(253,213,17)" rx="2" ry="2" />
<text  x="72.51" y="367.5" ></text>
</g>
<g >
<title>db::hints::manager::register_metrics (1 samples, 0.14%)</title><rect x="125.6" y="437" width="1.7" height="15.0" fill="rgb(251,23,20)" rx="2" ry="2" />
<text  x="128.62" y="447.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.14%)</title><rect x="125.6" y="517" width="1.7" height="15.0" fill="rgb(246,14,17)" rx="2" ry="2" />
<text  x="128.62" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (13 samples, 1.87%)</title><rect x="30.4" y="469" width="22.1" height="15.0" fill="rgb(231,47,37)" rx="2" ry="2" />
<text  x="33.40" y="479.5" >a..</text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="1037.0" y="421" width="1.7" height="15.0" fill="rgb(241,204,5)" rx="2" ry="2" />
<text  x="1039.97" y="431.5" ></text>
</g>
<g >
<title>create_partitions (61 samples, 8.79%)</title><rect x="21.9" y="597" width="103.7" height="15.0" fill="rgb(226,106,9)" rx="2" ry="2" />
<text  x="24.90" y="607.5" >create_parti..</text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.14%)</title><rect x="139.2" y="405" width="1.7" height="15.0" fill="rgb(239,122,53)" rx="2" ry="2" />
<text  x="142.22" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.14%)</title><rect x="55.9" y="405" width="1.7" height="15.0" fill="rgb(210,131,26)" rx="2" ry="2" />
<text  x="58.91" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="936.7" y="325" width="1.7" height="15.0" fill="rgb(225,4,42)" rx="2" ry="2" />
<text  x="939.66" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="66.1" y="309" width="1.7" height="15.0" fill="rgb(247,129,53)" rx="2" ry="2" />
<text  x="69.11" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (8 samples, 1.15%)</title><rect x="38.9" y="389" width="13.6" height="15.0" fill="rgb(215,18,46)" rx="2" ry="2" />
<text  x="41.90" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="96.7" y="309" width="1.7" height="15.0" fill="rgb(231,73,50)" rx="2" ry="2" />
<text  x="99.71" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.14%)</title><rect x="139.2" y="341" width="1.7" height="15.0" fill="rgb(228,45,31)" rx="2" ry="2" />
<text  x="142.22" y="351.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (1 samples, 0.14%)</title><rect x="27.0" y="485" width="1.7" height="15.0" fill="rgb(235,214,50)" rx="2" ry="2" />
<text  x="30.00" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (1 samples, 0.14%)</title><rect x="113.7" y="405" width="1.7" height="15.0" fill="rgb(216,225,42)" rx="2" ry="2" />
<text  x="116.72" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="125.6" y="261" width="1.7" height="15.0" fill="rgb(234,29,48)" rx="2" ry="2" />
<text  x="128.62" y="271.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (1 samples, 0.14%)</title><rect x="678.2" y="581" width="1.7" height="15.0" fill="rgb(222,63,2)" rx="2" ry="2" />
<text  x="681.21" y="591.5" ></text>
</g>
<g >
<title>row::external_memory_usage (3 samples, 0.43%)</title><rect x="293.9" y="373" width="5.1" height="15.0" fill="rgb(232,188,47)" rx="2" ry="2" />
<text  x="296.95" y="383.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (10 samples, 1.44%)</title><rect x="736.0" y="469" width="17.0" height="15.0" fill="rgb(243,156,21)" rx="2" ry="2" />
<text  x="739.02" y="479.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (8 samples, 1.15%)</title><rect x="537.1" y="469" width="13.6" height="15.0" fill="rgb(245,205,8)" rx="2" ry="2" />
<text  x="540.09" y="479.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (1 samples, 0.14%)</title><rect x="598.3" y="533" width="1.7" height="15.0" fill="rgb(251,82,43)" rx="2" ry="2" />
<text  x="601.30" y="543.5" ></text>
</g>
<g >
<title>seastar::metrics::metric_groups::add_group (1 samples, 0.14%)</title><rect x="125.6" y="421" width="1.7" height="15.0" fill="rgb(239,78,31)" rx="2" ry="2" />
<text  x="128.62" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (5 samples, 0.72%)</title><rect x="30.4" y="389" width="8.5" height="15.0" fill="rgb(253,125,41)" rx="2" ry="2" />
<text  x="33.40" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;seastar::metrics::impl::registered_metric&gt;::shared_ptr_count_for&lt;seastar::metrics::impl::metric_id const&amp;, std::function&lt;seastar::metrics::impl::metric_value  (1 samples, 0.14%)</title><rect x="125.6" y="357" width="1.7" height="15.0" fill="rgb(221,86,17)" rx="2" ry="2" />
<text  x="128.62" y="367.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::impl::add_registration (1 samples, 0.14%)</title><rect x="125.6" y="373" width="1.7" height="15.0" fill="rgb(227,69,47)" rx="2" ry="2" />
<text  x="128.62" y="383.5" ></text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.14%)</title><rect x="1076.1" y="629" width="1.7" height="15.0" fill="rgb(248,216,45)" rx="2" ry="2" />
<text  x="1079.08" y="639.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (58 samples, 8.36%)</title><rect x="356.9" y="517" width="98.6" height="15.0" fill="rgb(230,75,31)" rx="2" ry="2" />
<text  x="359.86" y="527.5" >query::cons..</text>
</g>
<g >
<title>auth::resource::parent (1 samples, 0.14%)</title><rect x="734.3" y="469" width="1.7" height="15.0" fill="rgb(227,200,30)" rx="2" ry="2" />
<text  x="737.32" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.58%)</title><rect x="1038.7" y="485" width="6.8" height="15.0" fill="rgb(231,87,50)" rx="2" ry="2" />
<text  x="1041.67" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (11 samples, 1.59%)</title><rect x="810.8" y="453" width="18.7" height="15.0" fill="rgb(239,6,19)" rx="2" ry="2" />
<text  x="813.84" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.14%)</title><rect x="40.6" y="277" width="1.7" height="15.0" fill="rgb(225,131,42)" rx="2" ry="2" />
<text  x="43.61" y="287.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.14%)</title><rect x="191.9" y="533" width="1.7" height="15.0" fill="rgb(236,149,10)" rx="2" ry="2" />
<text  x="194.93" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="67.8" y="293" width="1.7" height="15.0" fill="rgb(223,186,10)" rx="2" ry="2" />
<text  x="70.81" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (6 samples, 0.86%)</title><rect x="773.4" y="501" width="10.2" height="15.0" fill="rgb(227,207,12)" rx="2" ry="2" />
<text  x="776.43" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.14%)</title><rect x="78.0" y="213" width="1.7" height="15.0" fill="rgb(228,39,13)" rx="2" ry="2" />
<text  x="81.01" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.14%)</title><rect x="18.5" y="549" width="1.7" height="15.0" fill="rgb(244,39,21)" rx="2" ry="2" />
<text  x="21.50" y="559.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.14%)</title><rect x="139.2" y="645" width="1.7" height="15.0" fill="rgb(211,142,3)" rx="2" ry="2" />
<text  x="142.22" y="655.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.29%)</title><rect x="1060.8" y="565" width="3.4" height="15.0" fill="rgb(224,173,41)" rx="2" ry="2" />
<text  x="1063.78" y="575.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (4 samples, 0.58%)</title><rect x="1038.7" y="501" width="6.8" height="15.0" fill="rgb(213,162,46)" rx="2" ry="2" />
<text  x="1041.67" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.14%)</title><rect x="598.3" y="501" width="1.7" height="15.0" fill="rgb(250,82,34)" rx="2" ry="2" />
<text  x="601.30" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="572.8" y="485" width="1.7" height="15.0" fill="rgb(230,5,24)" rx="2" ry="2" />
<text  x="575.80" y="495.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="516.7" y="453" width="1.7" height="15.0" fill="rgb(221,203,32)" rx="2" ry="2" />
<text  x="519.69" y="463.5" ></text>
</g>
<g >
<title>schema_mutations::schema_mutations (1 samples, 0.14%)</title><rect x="171.5" y="485" width="1.7" height="15.0" fill="rgb(234,211,48)" rx="2" ry="2" />
<text  x="174.53" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="100.1" y="325" width="1.7" height="15.0" fill="rgb(231,47,49)" rx="2" ry="2" />
<text  x="103.12" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.14%)</title><rect x="78.0" y="181" width="1.7" height="15.0" fill="rgb(244,89,48)" rx="2" ry="2" />
<text  x="81.01" y="191.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.14%)</title><rect x="18.5" y="565" width="1.7" height="15.0" fill="rgb(226,126,46)" rx="2" ry="2" />
<text  x="21.50" y="575.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (3 samples, 0.43%)</title><rect x="440.2" y="485" width="5.1" height="15.0" fill="rgb(216,3,41)" rx="2" ry="2" />
<text  x="443.17" y="495.5" ></text>
</g>
<g >
<title>service::storage_service::join_token_ring (1 samples, 0.14%)</title><rect x="20.2" y="533" width="1.7" height="15.0" fill="rgb(244,181,3)" rx="2" ry="2" />
<text  x="23.20" y="543.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="268.4" y="405" width="1.7" height="15.0" fill="rgb(226,79,38)" rx="2" ry="2" />
<text  x="271.44" y="415.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.14%)</title><rect x="78.0" y="357" width="1.7" height="15.0" fill="rgb(231,46,38)" rx="2" ry="2" />
<text  x="81.01" y="367.5" ></text>
</g>
<g >
<title>syscall-0 (1 samples, 0.14%)</title><rect x="1188.3" y="725" width="1.7" height="15.0" fill="rgb(249,85,46)" rx="2" ry="2" />
<text  x="1191.30" y="735.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.14%)</title><rect x="91.6" y="245" width="1.7" height="15.0" fill="rgb(243,156,31)" rx="2" ry="2" />
<text  x="94.61" y="255.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.14%)</title><rect x="1045.5" y="533" width="1.7" height="15.0" fill="rgb(207,204,32)" rx="2" ry="2" />
<text  x="1048.48" y="543.5" ></text>
</g>
<g >
<title>db::schema_tables::read_tables_for_keyspaces (1 samples, 0.14%)</title><rect x="168.1" y="581" width="1.7" height="15.0" fill="rgb(210,167,22)" rx="2" ry="2" />
<text  x="171.13" y="591.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.14%)</title><rect x="139.2" y="629" width="1.7" height="15.0" fill="rgb(244,172,21)" rx="2" ry="2" />
<text  x="142.22" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="574.5" y="501" width="1.7" height="15.0" fill="rgb(250,59,6)" rx="2" ry="2" />
<text  x="577.50" y="511.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="112.0" y="373" width="1.7" height="15.0" fill="rgb(214,60,34)" rx="2" ry="2" />
<text  x="115.02" y="383.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.14%)</title><rect x="139.2" y="485" width="1.7" height="15.0" fill="rgb(227,42,39)" rx="2" ry="2" />
<text  x="142.22" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="74.6" y="213" width="1.7" height="15.0" fill="rgb(230,121,37)" rx="2" ry="2" />
<text  x="77.61" y="223.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::alloc (1 samples, 0.14%)</title><rect x="27.0" y="437" width="1.7" height="15.0" fill="rgb(214,37,31)" rx="2" ry="2" />
<text  x="30.00" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.14%)</title><rect x="106.9" y="405" width="1.7" height="15.0" fill="rgb(246,55,21)" rx="2" ry="2" />
<text  x="109.92" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="81.4" y="389" width="3.4" height="15.0" fill="rgb(234,76,35)" rx="2" ry="2" />
<text  x="84.41" y="399.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="618.7" y="565" width="3.4" height="15.0" fill="rgb(231,53,5)" rx="2" ry="2" />
<text  x="621.70" y="575.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.14%)</title><rect x="139.2" y="549" width="1.7" height="15.0" fill="rgb(247,144,37)" rx="2" ry="2" />
<text  x="142.22" y="559.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;service::storage_proxy&gt;::start&lt;std::reference_wrapper&lt;seastar::sharded&lt;database&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;gms::gossiper&gt; &gt;, service::storage_proxy::config&amp;, std::reference_wrapper&lt;db::view::node_update_backlog&gt;, seastar::scheduling_group_key, std::reference_wrapper&lt;seastar::sharded&lt;gms::feature_service&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;locator::shared_token_metadata&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;netw::messaging_service&gt; &gt; &gt; (1 samples, 0.14%)</title><rect x="125.6" y="485" width="1.7" height="15.0" fill="rgb(226,46,24)" rx="2" ry="2" />
<text  x="128.62" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (1 samples, 0.14%)</title><rect x="598.3" y="549" width="1.7" height="15.0" fill="rgb(210,84,45)" rx="2" ry="2" />
<text  x="601.30" y="559.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (66 samples, 9.51%)</title><rect x="13.4" y="661" width="112.2" height="15.0" fill="rgb(247,190,50)" rx="2" ry="2" />
<text  x="16.40" y="671.5" >seastar::thre..</text>
</g>
<g >
<title>seastar::reactor::run (549 samples, 79.11%)</title><rect x="142.6" y="629" width="933.5" height="15.0" fill="rgb(207,45,28)" rx="2" ry="2" />
<text  x="145.62" y="639.5" >seastar::reactor::run</text>
</g>
<g >
<title>service::storage_service::prepare_to_join (1 samples, 0.14%)</title><rect x="139.2" y="517" width="1.7" height="15.0" fill="rgb(238,213,1)" rx="2" ry="2" />
<text  x="142.22" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt; &gt;::deallocate (1 samples, 0.14%)</title><rect x="35.5" y="293" width="1.7" height="15.0" fill="rgb(222,223,42)" rx="2" ry="2" />
<text  x="38.50" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="74.6" y="85" width="1.7" height="15.0" fill="rgb(229,96,40)" rx="2" ry="2" />
<text  x="77.61" y="95.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (49 samples, 7.06%)</title><rect x="486.1" y="533" width="83.3" height="15.0" fill="rgb(232,191,36)" rx="2" ry="2" />
<text  x="489.08" y="543.5" >query::qu..</text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="907.8" y="389" width="3.4" height="15.0" fill="rgb(236,31,31)" rx="2" ry="2" />
<text  x="910.75" y="399.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.14%)</title><rect x="20.2" y="437" width="1.7" height="15.0" fill="rgb(249,22,39)" rx="2" ry="2" />
<text  x="23.20" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (6 samples, 0.86%)</title><rect x="156.2" y="565" width="10.2" height="15.0" fill="rgb(217,168,40)" rx="2" ry="2" />
<text  x="159.22" y="575.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.14%)</title><rect x="251.4" y="405" width="1.7" height="15.0" fill="rgb(220,134,24)" rx="2" ry="2" />
<text  x="254.44" y="415.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.14%)</title><rect x="343.3" y="421" width="1.7" height="15.0" fill="rgb(207,152,46)" rx="2" ry="2" />
<text  x="346.26" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="168.1" y="421" width="1.7" height="15.0" fill="rgb(254,206,37)" rx="2" ry="2" />
<text  x="171.13" y="431.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.14%)</title><rect x="59.3" y="389" width="1.7" height="15.0" fill="rgb(214,124,23)" rx="2" ry="2" />
<text  x="62.31" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (2 samples, 0.29%)</title><rect x="190.2" y="549" width="3.4" height="15.0" fill="rgb(217,157,17)" rx="2" ry="2" />
<text  x="193.23" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="889.0" y="421" width="1.7" height="15.0" fill="rgb(218,220,24)" rx="2" ry="2" />
<text  x="892.05" y="431.5" ></text>
</g>
<g >
<title>query_result_builder::consume (22 samples, 3.17%)</title><rect x="396.0" y="485" width="37.4" height="15.0" fill="rgb(205,226,2)" rx="2" ry="2" />
<text  x="398.97" y="495.5" >que..</text>
</g>
<g >
<title>start_thread (1 samples, 0.14%)</title><rect x="1188.3" y="709" width="1.7" height="15.0" fill="rgb(252,63,43)" rx="2" ry="2" />
<text  x="1191.30" y="719.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (5 samples, 0.72%)</title><rect x="559.2" y="469" width="8.5" height="15.0" fill="rgb(218,122,33)" rx="2" ry="2" />
<text  x="562.19" y="479.5" ></text>
</g>
<g >
<title>evictable_reader::recreate_reader (1 samples, 0.14%)</title><rect x="166.4" y="357" width="1.7" height="15.0" fill="rgb(235,170,44)" rx="2" ry="2" />
<text  x="169.43" y="367.5" ></text>
</g>
<g >
<title>rows_entry::memory_usage (1 samples, 0.14%)</title><rect x="1045.5" y="421" width="1.7" height="15.0" fill="rgb(210,51,46)" rx="2" ry="2" />
<text  x="1048.48" y="431.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.14%)</title><rect x="98.4" y="325" width="1.7" height="15.0" fill="rgb(254,48,2)" rx="2" ry="2" />
<text  x="101.41" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.14%)</title><rect x="943.5" y="341" width="1.7" height="15.0" fill="rgb(220,120,38)" rx="2" ry="2" />
<text  x="946.46" y="351.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.14%)</title><rect x="137.5" y="693" width="1.7" height="15.0" fill="rgb(212,13,2)" rx="2" ry="2" />
<text  x="140.52" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.14%)</title><rect x="91.6" y="277" width="1.7" height="15.0" fill="rgb(236,102,34)" rx="2" ry="2" />
<text  x="94.61" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (3 samples, 0.43%)</title><rect x="1038.7" y="373" width="5.1" height="15.0" fill="rgb(217,229,38)" rx="2" ry="2" />
<text  x="1041.67" y="383.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.58%)</title><rect x="958.8" y="421" width="6.8" height="15.0" fill="rgb(231,196,16)" rx="2" ry="2" />
<text  x="961.76" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.14%)</title><rect x="181.7" y="565" width="1.7" height="15.0" fill="rgb(251,21,44)" rx="2" ry="2" />
<text  x="184.73" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_deallocate_map (1 samples, 0.14%)</title><rect x="35.5" y="309" width="1.7" height="15.0" fill="rgb(229,29,35)" rx="2" ry="2" />
<text  x="38.50" y="319.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="645.9" y="565" width="1.7" height="15.0" fill="rgb(213,72,41)" rx="2" ry="2" />
<text  x="648.91" y="575.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="222.5" y="533" width="1.7" height="15.0" fill="rgb(211,172,23)" rx="2" ry="2" />
<text  x="225.54" y="543.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="35.5" y="261" width="1.7" height="15.0" fill="rgb(220,63,41)" rx="2" ry="2" />
<text  x="38.50" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.14%)</title><rect x="106.9" y="389" width="1.7" height="15.0" fill="rgb(215,56,26)" rx="2" ry="2" />
<text  x="109.92" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (80 samples, 11.53%)</title><rect x="866.9" y="485" width="136.1" height="15.0" fill="rgb(223,215,34)" rx="2" ry="2" />
<text  x="869.95" y="495.5" >service::storage_..</text>
</g>
<g >
<title>db::schema_tables::create_columns_from_column_rows (1 samples, 0.14%)</title><rect x="169.8" y="485" width="1.7" height="15.0" fill="rgb(215,31,2)" rx="2" ry="2" />
<text  x="172.83" y="495.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (3 samples, 0.43%)</title><rect x="474.2" y="453" width="5.1" height="15.0" fill="rgb(247,142,23)" rx="2" ry="2" />
<text  x="477.18" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="751.3" y="437" width="1.7" height="15.0" fill="rgb(227,39,33)" rx="2" ry="2" />
<text  x="754.33" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.14%)</title><rect x="741.1" y="421" width="1.7" height="15.0" fill="rgb(210,193,0)" rx="2" ry="2" />
<text  x="744.12" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (2 samples, 0.29%)</title><rect x="543.9" y="437" width="3.4" height="15.0" fill="rgb(236,7,6)" rx="2" ry="2" />
<text  x="546.89" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="64.4" y="341" width="1.7" height="15.0" fill="rgb(209,60,49)" rx="2" ry="2" />
<text  x="67.41" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (4 samples, 0.58%)</title><rect x="630.6" y="581" width="6.8" height="15.0" fill="rgb(246,186,19)" rx="2" ry="2" />
<text  x="633.61" y="591.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.14%)</title><rect x="134.1" y="661" width="1.7" height="15.0" fill="rgb(231,21,42)" rx="2" ry="2" />
<text  x="137.12" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="74.6" y="165" width="1.7" height="15.0" fill="rgb(232,11,26)" rx="2" ry="2" />
<text  x="77.61" y="175.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.43%)</title><rect x="74.6" y="389" width="5.1" height="15.0" fill="rgb(211,33,5)" rx="2" ry="2" />
<text  x="77.61" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="98.4" y="245" width="1.7" height="15.0" fill="rgb(206,17,36)" rx="2" ry="2" />
<text  x="101.41" y="255.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.43%)</title><rect x="916.3" y="373" width="5.1" height="15.0" fill="rgb(213,145,4)" rx="2" ry="2" />
<text  x="919.25" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.14%)</title><rect x="84.8" y="309" width="1.7" height="15.0" fill="rgb(210,78,39)" rx="2" ry="2" />
<text  x="87.81" y="319.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (1 samples, 0.14%)</title><rect x="1065.9" y="565" width="1.7" height="15.0" fill="rgb(239,95,51)" rx="2" ry="2" />
<text  x="1068.88" y="575.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.14%)</title><rect x="1042.1" y="309" width="1.7" height="15.0" fill="rgb(244,217,41)" rx="2" ry="2" />
<text  x="1045.07" y="319.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (4 samples, 0.58%)</title><rect x="66.1" y="421" width="6.8" height="15.0" fill="rgb(219,201,37)" rx="2" ry="2" />
<text  x="69.11" y="431.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.43%)</title><rect x="899.3" y="421" width="5.1" height="15.0" fill="rgb(205,72,50)" rx="2" ry="2" />
<text  x="902.25" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="25.3" y="437" width="1.7" height="15.0" fill="rgb(206,5,4)" rx="2" ry="2" />
<text  x="28.30" y="447.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.14%)</title><rect x="290.5" y="357" width="1.7" height="15.0" fill="rgb(230,143,12)" rx="2" ry="2" />
<text  x="293.55" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="647.6" y="565" width="1.7" height="15.0" fill="rgb(228,211,27)" rx="2" ry="2" />
<text  x="650.61" y="575.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.14%)</title><rect x="168.1" y="549" width="1.7" height="15.0" fill="rgb(236,66,5)" rx="2" ry="2" />
<text  x="171.13" y="559.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (21 samples, 3.03%)</title><rect x="520.1" y="485" width="35.7" height="15.0" fill="rgb(243,194,28)" rx="2" ry="2" />
<text  x="523.09" y="495.5" >mem..</text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (73 samples, 10.52%)</title><rect x="231.0" y="485" width="124.2" height="15.0" fill="rgb(226,181,14)" rx="2" ry="2" />
<text  x="234.04" y="495.5" >merging_reader&lt;..</text>
</g>
<g >
<title>database::add_column_family (3 samples, 0.43%)</title><rect x="169.8" y="565" width="5.1" height="15.0" fill="rgb(226,223,4)" rx="2" ry="2" />
<text  x="172.83" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (5 samples, 0.72%)</title><rect x="91.6" y="373" width="8.5" height="15.0" fill="rgb(243,180,5)" rx="2" ry="2" />
<text  x="94.61" y="383.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (5 samples, 0.72%)</title><rect x="708.8" y="517" width="8.5" height="15.0" fill="rgb(226,140,31)" rx="2" ry="2" />
<text  x="711.82" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (3 samples, 0.43%)</title><rect x="42.3" y="325" width="5.1" height="15.0" fill="rgb(236,192,51)" rx="2" ry="2" />
<text  x="45.31" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.14%)</title><rect x="1076.1" y="613" width="1.7" height="15.0" fill="rgb(217,38,30)" rx="2" ry="2" />
<text  x="1079.08" y="623.5" ></text>
</g>
<g >
<title>strcmp (1 samples, 0.14%)</title><rect x="1184.9" y="709" width="1.7" height="15.0" fill="rgb(237,79,41)" rx="2" ry="2" />
<text  x="1187.90" y="719.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.14%)</title><rect x="1043.8" y="341" width="1.7" height="15.0" fill="rgb(228,105,29)" rx="2" ry="2" />
<text  x="1046.78" y="351.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.14%)</title><rect x="134.1" y="677" width="1.7" height="15.0" fill="rgb(219,160,25)" rx="2" ry="2" />
<text  x="137.12" y="687.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.14%)</title><rect x="55.9" y="437" width="1.7" height="15.0" fill="rgb(229,194,53)" rx="2" ry="2" />
<text  x="58.91" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (3 samples, 0.43%)</title><rect x="776.8" y="453" width="5.1" height="15.0" fill="rgb(210,51,0)" rx="2" ry="2" />
<text  x="779.83" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.14%)</title><rect x="853.3" y="485" width="1.7" height="15.0" fill="rgb(231,12,26)" rx="2" ry="2" />
<text  x="856.34" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (1 samples, 0.14%)</title><rect x="166.4" y="485" width="1.7" height="15.0" fill="rgb(224,26,51)" rx="2" ry="2" />
<text  x="169.43" y="495.5" ></text>
</g>
<g >
<title>query::querier_base::close (18 samples, 2.59%)</title><rect x="455.5" y="533" width="30.6" height="15.0" fill="rgb(220,148,20)" rx="2" ry="2" />
<text  x="458.48" y="543.5" >qu..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.14%)</title><rect x="67.8" y="245" width="1.7" height="15.0" fill="rgb(249,112,41)" rx="2" ry="2" />
<text  x="70.81" y="255.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="1055.7" y="565" width="1.7" height="15.0" fill="rgb(251,209,42)" rx="2" ry="2" />
<text  x="1058.68" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.14%)</title><rect x="40.6" y="293" width="1.7" height="15.0" fill="rgb(234,62,21)" rx="2" ry="2" />
<text  x="43.61" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.14%)</title><rect x="1076.1" y="597" width="1.7" height="15.0" fill="rgb(243,11,52)" rx="2" ry="2" />
<text  x="1079.08" y="607.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.14%)</title><rect x="44.0" y="277" width="1.7" height="15.0" fill="rgb(246,209,53)" rx="2" ry="2" />
<text  x="47.01" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.14%)</title><rect x="627.2" y="565" width="1.7" height="15.0" fill="rgb(226,88,4)" rx="2" ry="2" />
<text  x="630.20" y="575.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (13 samples, 1.87%)</title><rect x="1086.3" y="709" width="22.1" height="15.0" fill="rgb(209,149,22)" rx="2" ry="2" />
<text  x="1089.28" y="719.5" >c..</text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.14%)</title><rect x="166.4" y="501" width="1.7" height="15.0" fill="rgb(216,160,18)" rx="2" ry="2" />
<text  x="169.43" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="360.3" y="485" width="5.1" height="15.0" fill="rgb(241,156,39)" rx="2" ry="2" />
<text  x="363.26" y="495.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.43%)</title><rect x="360.3" y="501" width="5.1" height="15.0" fill="rgb(246,72,46)" rx="2" ry="2" />
<text  x="363.26" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.29%)</title><rect x="32.1" y="293" width="3.4" height="15.0" fill="rgb(216,156,26)" rx="2" ry="2" />
<text  x="35.10" y="303.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.14%)</title><rect x="1045.5" y="389" width="1.7" height="15.0" fill="rgb(229,79,24)" rx="2" ry="2" />
<text  x="1048.48" y="399.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (73 samples, 10.52%)</title><rect x="231.0" y="501" width="124.2" height="15.0" fill="rgb(244,223,29)" rx="2" ry="2" />
<text  x="234.04" y="511.5" >merging_reader&lt;..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="453.8" y="485" width="1.7" height="15.0" fill="rgb(205,121,50)" rx="2" ry="2" />
<text  x="456.78" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="66.1" y="277" width="1.7" height="15.0" fill="rgb(249,29,51)" rx="2" ry="2" />
<text  x="69.11" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.14%)</title><rect x="202.1" y="501" width="1.7" height="15.0" fill="rgb(233,121,49)" rx="2" ry="2" />
<text  x="205.13" y="511.5" ></text>
</g>
<g >
<title>db::system_keyspace::query_mutations (1 samples, 0.14%)</title><rect x="166.4" y="517" width="1.7" height="15.0" fill="rgb(216,34,27)" rx="2" ry="2" />
<text  x="169.43" y="527.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (2 samples, 0.29%)</title><rect x="591.5" y="581" width="3.4" height="15.0" fill="rgb(233,139,41)" rx="2" ry="2" />
<text  x="594.50" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="889.0" y="437" width="1.7" height="15.0" fill="rgb(217,58,5)" rx="2" ry="2" />
<text  x="892.05" y="447.5" ></text>
</g>
<g >
<title>auth::operator== (1 samples, 0.14%)</title><rect x="744.5" y="405" width="1.7" height="15.0" fill="rgb(239,65,38)" rx="2" ry="2" />
<text  x="747.52" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="78.0" y="341" width="1.7" height="15.0" fill="rgb(240,163,32)" rx="2" ry="2" />
<text  x="81.01" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (2 samples, 0.29%)</title><rect x="13.4" y="597" width="3.4" height="15.0" fill="rgb(209,225,11)" rx="2" ry="2" />
<text  x="16.40" y="607.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.14%)</title><rect x="280.3" y="389" width="1.7" height="15.0" fill="rgb(227,148,6)" rx="2" ry="2" />
<text  x="283.35" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (6 samples, 0.86%)</title><rect x="773.4" y="517" width="10.2" height="15.0" fill="rgb(242,194,17)" rx="2" ry="2" />
<text  x="776.43" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (7 samples, 1.01%)</title><rect x="40.6" y="373" width="11.9" height="15.0" fill="rgb(244,13,37)" rx="2" ry="2" />
<text  x="43.61" y="383.5" ></text>
</g>
<g >
<title>__start_context (66 samples, 9.51%)</title><rect x="13.4" y="677" width="112.2" height="15.0" fill="rgb(205,18,52)" rx="2" ry="2" />
<text  x="16.40" y="687.5" >__start_context</text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (1 samples, 0.14%)</title><rect x="1028.5" y="485" width="1.7" height="15.0" fill="rgb(248,83,39)" rx="2" ry="2" />
<text  x="1031.47" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.14%)</title><rect x="615.3" y="517" width="1.7" height="15.0" fill="rgb(219,208,40)" rx="2" ry="2" />
<text  x="618.30" y="527.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.58%)</title><rect x="1038.7" y="469" width="6.8" height="15.0" fill="rgb(248,121,11)" rx="2" ry="2" />
<text  x="1041.67" y="479.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (3 samples, 0.43%)</title><rect x="42.3" y="357" width="5.1" height="15.0" fill="rgb(215,192,38)" rx="2" ry="2" />
<text  x="45.31" y="367.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::with_scheduling_group&lt;table::try_flush_memtable_to_sstable (1 samples, 0.14%)</title><rect x="1045.5" y="581" width="1.7" height="15.0" fill="rgb(236,120,1)" rx="2" ry="2" />
<text  x="1048.48" y="591.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (63 samples, 9.08%)</title><rect x="237.8" y="469" width="107.2" height="15.0" fill="rgb(206,93,39)" rx="2" ry="2" />
<text  x="240.84" y="479.5" >mutation_read..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.14%)</title><rect x="27.0" y="469" width="1.7" height="15.0" fill="rgb(227,91,17)" rx="2" ry="2" />
<text  x="30.00" y="479.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.14%)</title><rect x="67.8" y="261" width="1.7" height="15.0" fill="rgb(231,34,39)" rx="2" ry="2" />
<text  x="70.81" y="271.5" ></text>
</g>
<g >
<title>table::set_hit_rate (1 samples, 0.14%)</title><rect x="674.8" y="549" width="1.7" height="15.0" fill="rgb(227,148,5)" rx="2" ry="2" />
<text  x="677.81" y="559.5" ></text>
</g>
<g >
<title>locator::token_metadata::pending_endpoints_for (1 samples, 0.14%)</title><rect x="1042.1" y="325" width="1.7" height="15.0" fill="rgb(227,154,45)" rx="2" ry="2" />
<text  x="1045.07" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.14%)</title><rect x="112.0" y="405" width="1.7" height="15.0" fill="rgb(222,49,20)" rx="2" ry="2" />
<text  x="115.02" y="415.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.14%)</title><rect x="331.4" y="325" width="1.7" height="15.0" fill="rgb(248,97,49)" rx="2" ry="2" />
<text  x="334.35" y="335.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.58%)</title><rect x="1079.5" y="709" width="6.8" height="15.0" fill="rgb(216,209,2)" rx="2" ry="2" />
<text  x="1082.48" y="719.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="64.4" y="261" width="1.7" height="15.0" fill="rgb(229,8,39)" rx="2" ry="2" />
<text  x="67.41" y="271.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.58%)</title><rect x="127.3" y="677" width="6.8" height="15.0" fill="rgb(237,35,38)" rx="2" ry="2" />
<text  x="130.32" y="687.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.14%)</title><rect x="113.7" y="357" width="1.7" height="15.0" fill="rgb(228,63,50)" rx="2" ry="2" />
<text  x="116.72" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (5 samples, 0.72%)</title><rect x="819.3" y="421" width="8.5" height="15.0" fill="rgb(223,207,33)" rx="2" ry="2" />
<text  x="822.34" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (5 samples, 0.72%)</title><rect x="333.1" y="421" width="8.5" height="15.0" fill="rgb(223,164,1)" rx="2" ry="2" />
<text  x="336.05" y="431.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.14%)</title><rect x="781.9" y="469" width="1.7" height="15.0" fill="rgb(241,57,11)" rx="2" ry="2" />
<text  x="784.93" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="163.0" y="517" width="1.7" height="15.0" fill="rgb(213,46,48)" rx="2" ry="2" />
<text  x="166.03" y="527.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (18 samples, 2.59%)</title><rect x="600.0" y="581" width="30.6" height="15.0" fill="rgb(224,222,30)" rx="2" ry="2" />
<text  x="603.00" y="591.5" >se..</text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.14%)</title><rect x="1045.5" y="469" width="1.7" height="15.0" fill="rgb(211,75,49)" rx="2" ry="2" />
<text  x="1048.48" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.29%)</title><rect x="74.6" y="341" width="3.4" height="15.0" fill="rgb(247,212,21)" rx="2" ry="2" />
<text  x="77.61" y="351.5" ></text>
</g>
<g >
<title>posix_memalign (3 samples, 0.43%)</title><rect x="321.2" y="309" width="5.1" height="15.0" fill="rgb(207,20,40)" rx="2" ry="2" />
<text  x="324.15" y="319.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (8 samples, 1.15%)</title><rect x="987.7" y="373" width="13.6" height="15.0" fill="rgb(214,12,8)" rx="2" ry="2" />
<text  x="990.67" y="383.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.14%)</title><rect x="64.4" y="245" width="1.7" height="15.0" fill="rgb(211,210,18)" rx="2" ry="2" />
<text  x="67.41" y="255.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (61 samples, 8.79%)</title><rect x="21.9" y="629" width="103.7" height="15.0" fill="rgb(209,175,21)" rx="2" ry="2" />
<text  x="24.90" y="639.5" >std::_Functi..</text>
</g>
<g >
<title>service::abstract_read_executor::execute (33 samples, 4.76%)</title><rect x="895.9" y="437" width="56.1" height="15.0" fill="rgb(243,162,54)" rx="2" ry="2" />
<text  x="898.85" y="447.5" >servi..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (3 samples, 0.43%)</title><rect x="42.3" y="309" width="5.1" height="15.0" fill="rgb(244,180,28)" rx="2" ry="2" />
<text  x="45.31" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_role_statement, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt;::_M_ptr (1 samples, 0.14%)</title><rect x="122.2" y="453" width="1.7" height="15.0" fill="rgb(236,162,30)" rx="2" ry="2" />
<text  x="125.22" y="463.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (5 samples, 0.72%)</title><rect x="214.0" y="533" width="8.5" height="15.0" fill="rgb(251,179,4)" rx="2" ry="2" />
<text  x="217.03" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (5 samples, 0.72%)</title><rect x="819.3" y="405" width="8.5" height="15.0" fill="rgb(240,9,27)" rx="2" ry="2" />
<text  x="822.34" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="594.9" y="565" width="1.7" height="15.0" fill="rgb(229,67,18)" rx="2" ry="2" />
<text  x="597.90" y="575.5" ></text>
</g>
<g >
<title>libat_store_16_i1 (1 samples, 0.14%)</title><rect x="678.2" y="565" width="1.7" height="15.0" fill="rgb(247,34,29)" rx="2" ry="2" />
<text  x="681.21" y="575.5" ></text>
</g>
<g >
<title>boost::algorithm::detail::find_format_all_impl2&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, boost::algorithm::detail::first_finderF&lt;char const*, boost::algorithm::is_equal&gt;, boost::algorithm::detail::empty_formatF&lt;char&gt;, boost::iterator_range&lt;char*&gt;, boost::algorithm::detail::empty_container&lt;char&gt; &gt; (1 samples, 0.14%)</title><rect x="18.5" y="501" width="1.7" height="15.0" fill="rgb(220,60,7)" rx="2" ry="2" />
<text  x="21.50" y="511.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.14%)</title><rect x="127.3" y="661" width="1.7" height="15.0" fill="rgb(207,212,43)" rx="2" ry="2" />
<text  x="130.32" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="617.0" y="533" width="1.7" height="15.0" fill="rgb(240,89,33)" rx="2" ry="2" />
<text  x="620.00" y="543.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (2 samples, 0.29%)</title><rect x="23.6" y="517" width="3.4" height="15.0" fill="rgb(253,3,53)" rx="2" ry="2" />
<text  x="26.60" y="527.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (4 samples, 0.58%)</title><rect x="1031.9" y="501" width="6.8" height="15.0" fill="rgb(226,71,46)" rx="2" ry="2" />
<text  x="1034.87" y="511.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="846.5" y="485" width="3.4" height="15.0" fill="rgb(249,98,2)" rx="2" ry="2" />
<text  x="849.54" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="125.6" y="245" width="1.7" height="15.0" fill="rgb(248,125,2)" rx="2" ry="2" />
<text  x="128.62" y="255.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (1 samples, 0.14%)</title><rect x="117.1" y="453" width="1.7" height="15.0" fill="rgb(245,111,50)" rx="2" ry="2" />
<text  x="120.12" y="463.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.14%)</title><rect x="139.2" y="453" width="1.7" height="15.0" fill="rgb(220,0,11)" rx="2" ry="2" />
<text  x="142.22" y="463.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 6.34%)</title><rect x="1108.4" y="709" width="74.8" height="15.0" fill="rgb(235,42,10)" rx="2" ry="2" />
<text  x="1111.39" y="719.5" >sched_se..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="100.1" y="373" width="1.7" height="15.0" fill="rgb(228,129,21)" rx="2" ry="2" />
<text  x="103.12" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.14%)</title><rect x="766.6" y="565" width="1.7" height="15.0" fill="rgb(251,71,36)" rx="2" ry="2" />
<text  x="769.63" y="575.5" ></text>
</g>
<g >
<title>database::find_column_family (2 samples, 0.29%)</title><rect x="953.7" y="421" width="3.4" height="15.0" fill="rgb(227,192,53)" rx="2" ry="2" />
<text  x="956.66" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="725.8" y="485" width="1.7" height="15.0" fill="rgb(237,87,35)" rx="2" ry="2" />
<text  x="728.82" y="495.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.14%)</title><rect x="37.2" y="325" width="1.7" height="15.0" fill="rgb(216,88,3)" rx="2" ry="2" />
<text  x="40.20" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="751.3" y="453" width="1.7" height="15.0" fill="rgb(231,203,36)" rx="2" ry="2" />
<text  x="754.33" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="74.6" y="133" width="1.7" height="15.0" fill="rgb(213,222,47)" rx="2" ry="2" />
<text  x="77.61" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.14%)</title><rect x="220.8" y="453" width="1.7" height="15.0" fill="rgb(218,179,35)" rx="2" ry="2" />
<text  x="223.84" y="463.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.29%)</title><rect x="450.4" y="437" width="3.4" height="15.0" fill="rgb(249,179,52)" rx="2" ry="2" />
<text  x="453.37" y="447.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.14%)</title><rect x="1001.3" y="421" width="1.7" height="15.0" fill="rgb(221,226,36)" rx="2" ry="2" />
<text  x="1004.27" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (26 samples, 3.75%)</title><rect x="717.3" y="517" width="44.2" height="15.0" fill="rgb(251,157,38)" rx="2" ry="2" />
<text  x="720.32" y="527.5" >cql3..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="100.1" y="357" width="1.7" height="15.0" fill="rgb(217,83,16)" rx="2" ry="2" />
<text  x="103.12" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="64.4" y="357" width="1.7" height="15.0" fill="rgb(241,186,11)" rx="2" ry="2" />
<text  x="67.41" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="739.4" y="405" width="1.7" height="15.0" fill="rgb(250,58,7)" rx="2" ry="2" />
<text  x="742.42" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.29%)</title><rect x="74.6" y="373" width="3.4" height="15.0" fill="rgb(210,199,28)" rx="2" ry="2" />
<text  x="77.61" y="383.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.14%)</title><rect x="965.6" y="405" width="1.7" height="15.0" fill="rgb(238,104,12)" rx="2" ry="2" />
<text  x="968.56" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (74 samples, 10.66%)</title><rect x="877.1" y="469" width="125.9" height="15.0" fill="rgb(230,2,42)" rx="2" ry="2" />
<text  x="880.15" y="479.5" >service::storag..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="596.6" y="549" width="1.7" height="15.0" fill="rgb(233,144,12)" rx="2" ry="2" />
<text  x="599.60" y="559.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (1 samples, 0.14%)</title><rect x="166.4" y="565" width="1.7" height="15.0" fill="rgb(224,51,4)" rx="2" ry="2" />
<text  x="169.43" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.14%)</title><rect x="183.4" y="565" width="1.7" height="15.0" fill="rgb(222,211,53)" rx="2" ry="2" />
<text  x="186.43" y="575.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (10 samples, 1.44%)</title><rect x="89.9" y="389" width="17.0" height="15.0" fill="rgb(226,71,13)" rx="2" ry="2" />
<text  x="92.91" y="399.5" ></text>
</g>
<g >
<title>validation::validate_column_family (4 samples, 0.58%)</title><rect x="754.7" y="485" width="6.8" height="15.0" fill="rgb(239,117,54)" rx="2" ry="2" />
<text  x="757.73" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.14%)</title><rect x="220.8" y="469" width="1.7" height="15.0" fill="rgb(249,97,49)" rx="2" ry="2" />
<text  x="223.84" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.14%)</title><rect x="84.8" y="373" width="1.7" height="15.0" fill="rgb(249,151,26)" rx="2" ry="2" />
<text  x="87.81" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (25 samples, 3.60%)</title><rect x="66.1" y="437" width="42.5" height="15.0" fill="rgb(254,198,14)" rx="2" ry="2" />
<text  x="69.11" y="447.5" >cql3..</text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="98.4" y="213" width="1.7" height="15.0" fill="rgb(206,136,40)" rx="2" ry="2" />
<text  x="101.41" y="223.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (6 samples, 0.86%)</title><rect x="832.9" y="469" width="10.2" height="15.0" fill="rgb(211,203,40)" rx="2" ry="2" />
<text  x="835.94" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.58%)</title><rect x="1038.7" y="517" width="6.8" height="15.0" fill="rgb(210,171,50)" rx="2" ry="2" />
<text  x="1041.67" y="527.5" ></text>
</g>
<g >
<title>database::find_schema (3 samples, 0.43%)</title><rect x="754.7" y="469" width="5.1" height="15.0" fill="rgb(248,69,26)" rx="2" ry="2" />
<text  x="757.73" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.43%)</title><rect x="30.4" y="341" width="5.1" height="15.0" fill="rgb(229,100,41)" rx="2" ry="2" />
<text  x="33.40" y="351.5" ></text>
</g>
<g >
<title>db::system_keyspace::get_saved_tokens (1 samples, 0.14%)</title><rect x="139.2" y="501" width="1.7" height="15.0" fill="rgb(252,64,29)" rx="2" ry="2" />
<text  x="142.22" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.14%)</title><rect x="481.0" y="485" width="1.7" height="15.0" fill="rgb(247,157,6)" rx="2" ry="2" />
<text  x="483.98" y="495.5" ></text>
</g>
<g >
<title>service::storage_service::mutate_token_metadata (1 samples, 0.14%)</title><rect x="20.2" y="517" width="1.7" height="15.0" fill="rgb(242,84,42)" rx="2" ry="2" />
<text  x="23.20" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="67.8" y="341" width="1.7" height="15.0" fill="rgb(248,91,31)" rx="2" ry="2" />
<text  x="70.81" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::_Select1st&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt;::_M_copy&lt;false, std::_Rb_tree&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::_Select1st&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt;::_Reuse_or_alloc_node&gt; (1 samples, 0.14%)</title><rect x="125.6" y="293" width="1.7" height="15.0" fill="rgb(221,203,11)" rx="2" ry="2" />
<text  x="128.62" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.14%)</title><rect x="95.0" y="277" width="1.7" height="15.0" fill="rgb(236,201,42)" rx="2" ry="2" />
<text  x="98.01" y="287.5" ></text>
</g>
<g >
<title>make_combined_reader (5 samples, 0.72%)</title><rect x="509.9" y="469" width="8.5" height="15.0" fill="rgb(230,15,52)" rx="2" ry="2" />
<text  x="512.88" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.14%)</title><rect x="443.6" y="469" width="1.7" height="15.0" fill="rgb(233,222,19)" rx="2" ry="2" />
<text  x="446.57" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="1018.3" y="485" width="1.7" height="15.0" fill="rgb(246,92,42)" rx="2" ry="2" />
<text  x="1021.27" y="495.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (2 samples, 0.29%)</title><rect x="1031.9" y="437" width="3.4" height="15.0" fill="rgb(210,20,51)" rx="2" ry="2" />
<text  x="1034.87" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="1076.1" y="581" width="1.7" height="15.0" fill="rgb(235,89,51)" rx="2" ry="2" />
<text  x="1079.08" y="591.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (1 samples, 0.14%)</title><rect x="1038.7" y="309" width="1.7" height="15.0" fill="rgb(240,119,21)" rx="2" ry="2" />
<text  x="1041.67" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (52 samples, 7.49%)</title><rect x="683.3" y="581" width="88.4" height="15.0" fill="rgb(210,136,35)" rx="2" ry="2" />
<text  x="686.31" y="591.5" >seastar::i..</text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (4 samples, 0.58%)</title><rect x="1038.7" y="565" width="6.8" height="15.0" fill="rgb(206,117,17)" rx="2" ry="2" />
<text  x="1041.67" y="575.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (1 samples, 0.14%)</title><rect x="142.6" y="597" width="1.7" height="15.0" fill="rgb(224,55,52)" rx="2" ry="2" />
<text  x="145.62" y="607.5" ></text>
</g>
<g >
<title>dht::tri_compare (2 samples, 0.29%)</title><rect x="997.9" y="357" width="3.4" height="15.0" fill="rgb(245,132,45)" rx="2" ry="2" />
<text  x="1000.87" y="367.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (2 samples, 0.29%)</title><rect x="904.4" y="421" width="3.4" height="15.0" fill="rgb(227,144,34)" rx="2" ry="2" />
<text  x="907.35" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.14%)</title><rect x="64.4" y="421" width="1.7" height="15.0" fill="rgb(234,105,30)" rx="2" ry="2" />
<text  x="67.41" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="83.1" y="341" width="1.7" height="15.0" fill="rgb(230,175,39)" rx="2" ry="2" />
<text  x="86.11" y="351.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (2 samples, 0.29%)</title><rect x="169.8" y="533" width="3.4" height="15.0" fill="rgb(243,83,21)" rx="2" ry="2" />
<text  x="172.83" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="112.0" y="389" width="1.7" height="15.0" fill="rgb(220,159,41)" rx="2" ry="2" />
<text  x="115.02" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="66.1" y="341" width="1.7" height="15.0" fill="rgb(246,28,5)" rx="2" ry="2" />
<text  x="69.11" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="64.4" y="325" width="1.7" height="15.0" fill="rgb(246,41,44)" rx="2" ry="2" />
<text  x="67.41" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (1 samples, 0.14%)</title><rect x="49.1" y="357" width="1.7" height="15.0" fill="rgb(245,32,48)" rx="2" ry="2" />
<text  x="52.11" y="367.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (4 samples, 0.58%)</title><rect x="656.1" y="565" width="6.8" height="15.0" fill="rgb(228,68,26)" rx="2" ry="2" />
<text  x="659.11" y="575.5" ></text>
</g>
<g >
<title>query::querier_base::close (1 samples, 0.14%)</title><rect x="188.5" y="549" width="1.7" height="15.0" fill="rgb(220,55,46)" rx="2" ry="2" />
<text  x="191.53" y="559.5" ></text>
</g>
<g >
<title>row::apply_monotonically (2 samples, 0.29%)</title><rect x="778.5" y="405" width="3.4" height="15.0" fill="rgb(222,48,5)" rx="2" ry="2" />
<text  x="781.53" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (2 samples, 0.29%)</title><rect x="112.0" y="421" width="3.4" height="15.0" fill="rgb(252,106,47)" rx="2" ry="2" />
<text  x="115.02" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="936.7" y="309" width="1.7" height="15.0" fill="rgb(223,34,5)" rx="2" ry="2" />
<text  x="939.66" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_move_assign (1 samples, 0.14%)</title><rect x="118.8" y="437" width="1.7" height="15.0" fill="rgb(225,163,44)" rx="2" ry="2" />
<text  x="121.82" y="447.5" ></text>
</g>
<g >
<title>seastar::async&lt;single_node_cql_env::do_with (1 samples, 0.14%)</title><rect x="125.6" y="645" width="1.7" height="15.0" fill="rgb(217,117,14)" rx="2" ry="2" />
<text  x="128.62" y="655.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::attributes::raw&gt; (1 samples, 0.14%)</title><rect x="115.4" y="453" width="1.7" height="15.0" fill="rgb(236,170,21)" rx="2" ry="2" />
<text  x="118.42" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (3 samples, 0.43%)</title><rect x="321.2" y="293" width="5.1" height="15.0" fill="rgb(206,47,29)" rx="2" ry="2" />
<text  x="324.15" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;seastar::shared_ptr&lt;cql3::relation&gt;*, seastar::shared_ptr&lt;cql3::relation&gt; &gt; (1 samples, 0.14%)</title><rect x="118.8" y="421" width="1.7" height="15.0" fill="rgb(209,115,14)" rx="2" ry="2" />
<text  x="121.82" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.14%)</title><rect x="108.6" y="437" width="1.7" height="15.0" fill="rgb(226,47,47)" rx="2" ry="2" />
<text  x="111.62" y="447.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (2 samples, 0.29%)</title><rect x="13.4" y="629" width="3.4" height="15.0" fill="rgb(211,31,24)" rx="2" ry="2" />
<text  x="16.40" y="639.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.14%)</title><rect x="673.1" y="549" width="1.7" height="15.0" fill="rgb(233,214,19)" rx="2" ry="2" />
<text  x="676.11" y="559.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.14%)</title><rect x="1045.5" y="501" width="1.7" height="15.0" fill="rgb(252,139,21)" rx="2" ry="2" />
<text  x="1048.48" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.29%)</title><rect x="69.5" y="245" width="3.4" height="15.0" fill="rgb(222,168,47)" rx="2" ry="2" />
<text  x="72.51" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="489.5" y="501" width="1.7" height="15.0" fill="rgb(243,103,48)" rx="2" ry="2" />
<text  x="492.48" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="817.6" y="389" width="1.7" height="15.0" fill="rgb(250,64,49)" rx="2" ry="2" />
<text  x="820.64" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.29%)</title><rect x="69.5" y="325" width="3.4" height="15.0" fill="rgb(218,126,30)" rx="2" ry="2" />
<text  x="72.51" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (70 samples, 10.09%)</title><rect x="883.9" y="453" width="119.1" height="15.0" fill="rgb(224,68,50)" rx="2" ry="2" />
<text  x="886.95" y="463.5" >service::stora..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.14%)</title><rect x="1045.5" y="453" width="1.7" height="15.0" fill="rgb(217,23,23)" rx="2" ry="2" />
<text  x="1048.48" y="463.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="907.8" y="405" width="3.4" height="15.0" fill="rgb(249,224,34)" rx="2" ry="2" />
<text  x="910.75" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="93.3" y="325" width="1.7" height="15.0" fill="rgb(241,206,27)" rx="2" ry="2" />
<text  x="96.31" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.14%)</title><rect x="113.7" y="309" width="1.7" height="15.0" fill="rgb(238,210,34)" rx="2" ry="2" />
<text  x="116.72" y="319.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.14%)</title><rect x="27.0" y="421" width="1.7" height="15.0" fill="rgb(244,47,40)" rx="2" ry="2" />
<text  x="30.00" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.14%)</title><rect x="67.8" y="229" width="1.7" height="15.0" fill="rgb(236,50,3)" rx="2" ry="2" />
<text  x="70.81" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.72%)</title><rect x="858.4" y="469" width="8.5" height="15.0" fill="rgb(215,222,33)" rx="2" ry="2" />
<text  x="861.44" y="479.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (20 samples, 2.88%)</title><rect x="967.3" y="405" width="34.0" height="15.0" fill="rgb(251,125,10)" rx="2" ry="2" />
<text  x="970.26" y="415.5" >lo..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="484.4" y="469" width="1.7" height="15.0" fill="rgb(236,131,4)" rx="2" ry="2" />
<text  x="487.38" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.29%)</title><rect x="35.5" y="357" width="3.4" height="15.0" fill="rgb(244,107,41)" rx="2" ry="2" />
<text  x="38.50" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="78.0" y="245" width="1.7" height="15.0" fill="rgb(229,110,17)" rx="2" ry="2" />
<text  x="81.01" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.14%)</title><rect x="25.3" y="469" width="1.7" height="15.0" fill="rgb(232,47,36)" rx="2" ry="2" />
<text  x="28.30" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (57 samples, 8.21%)</title><rect x="248.0" y="453" width="97.0" height="15.0" fill="rgb(246,72,31)" rx="2" ry="2" />
<text  x="251.04" y="463.5" >partition_s..</text>
</g>
<g >
<title>summarize.isra.0 (1 samples, 0.14%)</title><rect x="1186.6" y="709" width="1.7" height="15.0" fill="rgb(243,68,52)" rx="2" ry="2" />
<text  x="1189.60" y="719.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (3 samples, 0.43%)</title><rect x="586.4" y="581" width="5.1" height="15.0" fill="rgb(230,23,21)" rx="2" ry="2" />
<text  x="589.40" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="747.9" y="437" width="1.7" height="15.0" fill="rgb(226,75,10)" rx="2" ry="2" />
<text  x="750.93" y="447.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.14%)</title><rect x="166.4" y="533" width="1.7" height="15.0" fill="rgb(226,136,39)" rx="2" ry="2" />
<text  x="169.43" y="543.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (1 samples, 0.14%)</title><rect x="773.4" y="469" width="1.7" height="15.0" fill="rgb(240,186,53)" rx="2" ry="2" />
<text  x="776.43" y="479.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.14%)</title><rect x="134.1" y="629" width="1.7" height="15.0" fill="rgb(224,214,13)" rx="2" ry="2" />
<text  x="137.12" y="639.5" ></text>
</g>
<g >
<title>uw_update_context_1 (1 samples, 0.14%)</title><rect x="140.9" y="693" width="1.7" height="15.0" fill="rgb(249,70,48)" rx="2" ry="2" />
<text  x="143.92" y="703.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.14%)</title><rect x="946.9" y="357" width="1.7" height="15.0" fill="rgb(208,58,31)" rx="2" ry="2" />
<text  x="949.86" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="105.2" y="277" width="1.7" height="15.0" fill="rgb(218,4,6)" rx="2" ry="2" />
<text  x="108.22" y="287.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.14%)</title><rect x="110.3" y="405" width="1.7" height="15.0" fill="rgb(234,16,37)" rx="2" ry="2" />
<text  x="113.32" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.29%)</title><rect x="821.0" y="389" width="3.4" height="15.0" fill="rgb(235,28,17)" rx="2" ry="2" />
<text  x="824.04" y="399.5" ></text>
</g>
<g >
<title>row::compact_and_expire (1 samples, 0.14%)</title><rect x="365.4" y="501" width="1.7" height="15.0" fill="rgb(244,111,20)" rx="2" ry="2" />
<text  x="368.36" y="511.5" ></text>
</g>
<g >
<title>freeze (1 samples, 0.14%)</title><rect x="1038.7" y="341" width="1.7" height="15.0" fill="rgb(242,207,52)" rx="2" ry="2" />
<text  x="1041.67" y="351.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (1 samples, 0.14%)</title><rect x="164.7" y="533" width="1.7" height="15.0" fill="rgb(253,155,51)" rx="2" ry="2" />
<text  x="167.73" y="543.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.14%)</title><rect x="292.2" y="373" width="1.7" height="15.0" fill="rgb(241,200,10)" rx="2" ry="2" />
<text  x="295.25" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.14%)</title><rect x="753.0" y="485" width="1.7" height="15.0" fill="rgb(238,165,14)" rx="2" ry="2" />
<text  x="756.03" y="495.5" ></text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.14%)</title><rect x="887.3" y="437" width="1.7" height="15.0" fill="rgb(209,197,43)" rx="2" ry="2" />
<text  x="890.35" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.58%)</title><rect x="215.7" y="501" width="6.8" height="15.0" fill="rgb(227,74,53)" rx="2" ry="2" />
<text  x="218.73" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.14%)</title><rect x="59.3" y="421" width="1.7" height="15.0" fill="rgb(212,138,49)" rx="2" ry="2" />
<text  x="62.31" y="431.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.14%)</title><rect x="134.1" y="613" width="1.7" height="15.0" fill="rgb(225,20,6)" rx="2" ry="2" />
<text  x="137.12" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.14%)</title><rect x="50.8" y="341" width="1.7" height="15.0" fill="rgb(232,52,33)" rx="2" ry="2" />
<text  x="53.81" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="899.3" y="405" width="5.1" height="15.0" fill="rgb(249,131,36)" rx="2" ry="2" />
<text  x="902.25" y="415.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="346.7" y="469" width="3.4" height="15.0" fill="rgb(209,108,24)" rx="2" ry="2" />
<text  x="349.66" y="479.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (1 samples, 0.14%)</title><rect x="433.4" y="485" width="1.7" height="15.0" fill="rgb(230,210,34)" rx="2" ry="2" />
<text  x="436.37" y="495.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="588.1" y="565" width="1.7" height="15.0" fill="rgb(245,160,32)" rx="2" ry="2" />
<text  x="591.10" y="575.5" ></text>
</g>
<g >
<title>auth::get_permissions (8 samples, 1.15%)</title><rect x="736.0" y="453" width="13.6" height="15.0" fill="rgb(229,60,52)" rx="2" ry="2" />
<text  x="739.02" y="463.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (1 samples, 0.14%)</title><rect x="385.8" y="485" width="1.7" height="15.0" fill="rgb(251,222,10)" rx="2" ry="2" />
<text  x="388.76" y="495.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;service::storage_proxy&gt;::start&lt;std::reference_wrapper&lt;seastar::sharded&lt;database&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;gms::gossiper&gt; &gt;, service::storage_proxy::config&amp;, std::reference_wrapper&lt;db::view::node_update_backlog&gt;, seastar::scheduling_group_key, std::reference_wrapper&lt;seastar::sharded&lt;gms::feature_service&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;locator::shared_token_metadata&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;netw::messaging_service&gt; &gt; &gt; (1 samples, 0.14%)</title><rect x="125.6" y="549" width="1.7" height="15.0" fill="rgb(221,219,54)" rx="2" ry="2" />
<text  x="128.62" y="559.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (3 samples, 0.43%)</title><rect x="448.7" y="453" width="5.1" height="15.0" fill="rgb(246,87,31)" rx="2" ry="2" />
<text  x="451.67" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.14%)</title><rect x="40.6" y="309" width="1.7" height="15.0" fill="rgb(217,196,21)" rx="2" ry="2" />
<text  x="43.61" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="98.4" y="261" width="1.7" height="15.0" fill="rgb(221,163,23)" rx="2" ry="2" />
<text  x="101.41" y="271.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (61 samples, 8.79%)</title><rect x="21.9" y="565" width="103.7" height="15.0" fill="rgb(245,94,33)" rx="2" ry="2" />
<text  x="24.90" y="575.5" >cql3::query_..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.14%)</title><rect x="797.2" y="501" width="1.7" height="15.0" fill="rgb(247,154,3)" rx="2" ry="2" />
<text  x="800.23" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="91.6" y="229" width="1.7" height="15.0" fill="rgb(217,168,39)" rx="2" ry="2" />
<text  x="94.61" y="239.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl&amp;&gt; (1 samples, 0.14%)</title><rect x="78.0" y="165" width="1.7" height="15.0" fill="rgb(241,77,10)" rx="2" ry="2" />
<text  x="81.01" y="175.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_group (1 samples, 0.14%)</title><rect x="125.6" y="405" width="1.7" height="15.0" fill="rgb(219,27,41)" rx="2" ry="2" />
<text  x="128.62" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (39 samples, 5.62%)</title><rect x="54.2" y="469" width="66.3" height="15.0" fill="rgb(233,22,53)" rx="2" ry="2" />
<text  x="57.21" y="479.5" >cql3_pa..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.14%)</title><rect x="139.2" y="421" width="1.7" height="15.0" fill="rgb(249,68,45)" rx="2" ry="2" />
<text  x="142.22" y="431.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (1 samples, 0.14%)</title><rect x="1038.7" y="325" width="1.7" height="15.0" fill="rgb(234,211,14)" rx="2" ry="2" />
<text  x="1041.67" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.29%)</title><rect x="69.5" y="389" width="3.4" height="15.0" fill="rgb(244,173,24)" rx="2" ry="2" />
<text  x="72.51" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="1057.4" y="549" width="3.4" height="15.0" fill="rgb(209,38,25)" rx="2" ry="2" />
<text  x="1060.38" y="559.5" ></text>
</g>
<g >
<title>database::find_schema (3 samples, 0.43%)</title><rect x="717.3" y="501" width="5.1" height="15.0" fill="rgb(228,65,49)" rx="2" ry="2" />
<text  x="720.32" y="511.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (1 samples, 0.14%)</title><rect x="23.6" y="453" width="1.7" height="15.0" fill="rgb(241,176,19)" rx="2" ry="2" />
<text  x="26.60" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::_Select1st&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="125.6" y="309" width="1.7" height="15.0" fill="rgb(245,123,30)" rx="2" ry="2" />
<text  x="128.62" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="593.2" y="565" width="1.7" height="15.0" fill="rgb(245,162,53)" rx="2" ry="2" />
<text  x="596.20" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="224.2" y="533" width="1.7" height="15.0" fill="rgb(231,198,35)" rx="2" ry="2" />
<text  x="227.24" y="543.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (1 samples, 0.14%)</title><rect x="47.4" y="357" width="1.7" height="15.0" fill="rgb(241,28,53)" rx="2" ry="2" />
<text  x="50.41" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (241 samples, 34.73%)</title><rect x="176.6" y="581" width="409.8" height="15.0" fill="rgb(251,83,39)" rx="2" ry="2" />
<text  x="179.63" y="591.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="746.2" y="437" width="1.7" height="15.0" fill="rgb(239,138,34)" rx="2" ry="2" />
<text  x="749.22" y="447.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (1 samples, 0.14%)</title><rect x="166.4" y="581" width="1.7" height="15.0" fill="rgb(230,155,18)" rx="2" ry="2" />
<text  x="169.43" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="625.5" y="565" width="1.7" height="15.0" fill="rgb(211,147,39)" rx="2" ry="2" />
<text  x="628.50" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.14%)</title><rect x="91.6" y="325" width="1.7" height="15.0" fill="rgb(222,188,13)" rx="2" ry="2" />
<text  x="94.61" y="335.5" ></text>
</g>
<g >
<title>mutation_querier::consume (22 samples, 3.17%)</title><rect x="396.0" y="469" width="37.4" height="15.0" fill="rgb(211,226,37)" rx="2" ry="2" />
<text  x="398.97" y="479.5" >mut..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (2 samples, 0.29%)</title><rect x="778.5" y="389" width="3.4" height="15.0" fill="rgb(210,69,47)" rx="2" ry="2" />
<text  x="781.53" y="399.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.14%)</title><rect x="166.4" y="389" width="1.7" height="15.0" fill="rgb(228,194,33)" rx="2" ry="2" />
<text  x="169.43" y="399.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::work_item_returning&lt;seastar::syscall_result_extra&lt;stat&gt; &gt;::process (1 samples, 0.14%)</title><rect x="1188.3" y="645" width="1.7" height="15.0" fill="rgb(250,2,26)" rx="2" ry="2" />
<text  x="1191.30" y="655.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (5 samples, 0.72%)</title><rect x="708.8" y="501" width="8.5" height="15.0" fill="rgb(245,78,52)" rx="2" ry="2" />
<text  x="711.82" y="511.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.43%)</title><rect x="464.0" y="453" width="5.1" height="15.0" fill="rgb(215,162,24)" rx="2" ry="2" />
<text  x="466.98" y="463.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (16 samples, 2.31%)</title><rect x="921.4" y="373" width="27.2" height="15.0" fill="rgb(233,226,46)" rx="2" ry="2" />
<text  x="924.35" y="383.5" >s..</text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::~inheriting_concrete_execution_stage (1 samples, 0.14%)</title><rect x="135.8" y="693" width="1.7" height="15.0" fill="rgb(221,15,13)" rx="2" ry="2" />
<text  x="138.82" y="703.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.14%)</title><rect x="101.8" y="373" width="1.7" height="15.0" fill="rgb(240,11,30)" rx="2" ry="2" />
<text  x="104.82" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.14%)</title><rect x="84.8" y="389" width="1.7" height="15.0" fill="rgb(206,51,8)" rx="2" ry="2" />
<text  x="87.81" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (142 samples, 20.46%)</title><rect x="788.7" y="517" width="241.5" height="15.0" fill="rgb(240,195,32)" rx="2" ry="2" />
<text  x="791.73" y="527.5" >cql3::statements::select_stateme..</text>
</g>
<g >
<title>schema::column_at (3 samples, 0.43%)</title><rect x="413.0" y="453" width="5.1" height="15.0" fill="rgb(206,111,31)" rx="2" ry="2" />
<text  x="415.97" y="463.5" ></text>
</g>
<g >
<title>do_cql_test (61 samples, 8.79%)</title><rect x="21.9" y="613" width="103.7" height="15.0" fill="rgb(245,120,35)" rx="2" ry="2" />
<text  x="24.90" y="623.5" >do_cql_test</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.58%)</title><rect x="66.1" y="405" width="6.8" height="15.0" fill="rgb(244,97,50)" rx="2" ry="2" />
<text  x="69.11" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="74.6" y="37" width="1.7" height="15.0" fill="rgb(220,163,44)" rx="2" ry="2" />
<text  x="77.61" y="47.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (5 samples, 0.72%)</title><rect x="91.6" y="341" width="8.5" height="15.0" fill="rgb(220,71,20)" rx="2" ry="2" />
<text  x="94.61" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (5 samples, 0.72%)</title><rect x="30.4" y="405" width="8.5" height="15.0" fill="rgb(221,147,30)" rx="2" ry="2" />
<text  x="33.40" y="415.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (20 samples, 2.88%)</title><rect x="967.3" y="389" width="34.0" height="15.0" fill="rgb(207,139,47)" rx="2" ry="2" />
<text  x="970.26" y="399.5" >lo..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="76.3" y="197" width="1.7" height="15.0" fill="rgb(223,222,44)" rx="2" ry="2" />
<text  x="79.31" y="207.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="101.8" y="325" width="1.7" height="15.0" fill="rgb(236,163,44)" rx="2" ry="2" />
<text  x="104.82" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.14%)</title><rect x="579.6" y="533" width="1.7" height="15.0" fill="rgb(215,38,36)" rx="2" ry="2" />
<text  x="582.60" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="66.1" y="293" width="1.7" height="15.0" fill="rgb(238,202,1)" rx="2" ry="2" />
<text  x="69.11" y="303.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.14%)</title><rect x="581.3" y="533" width="1.7" height="15.0" fill="rgb(208,185,0)" rx="2" ry="2" />
<text  x="584.30" y="543.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.14%)</title><rect x="1043.8" y="405" width="1.7" height="15.0" fill="rgb(205,226,27)" rx="2" ry="2" />
<text  x="1046.78" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.72%)</title><rect x="1030.2" y="533" width="8.5" height="15.0" fill="rgb(254,84,6)" rx="2" ry="2" />
<text  x="1033.17" y="543.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.14%)</title><rect x="535.4" y="437" width="1.7" height="15.0" fill="rgb(246,57,5)" rx="2" ry="2" />
<text  x="538.39" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.14%)</title><rect x="139.2" y="389" width="1.7" height="15.0" fill="rgb(229,204,46)" rx="2" ry="2" />
<text  x="142.22" y="399.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (3 samples, 0.43%)</title><rect x="1038.7" y="405" width="5.1" height="15.0" fill="rgb(205,198,45)" rx="2" ry="2" />
<text  x="1041.67" y="415.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.29%)</title><rect x="69.5" y="261" width="3.4" height="15.0" fill="rgb(241,222,4)" rx="2" ry="2" />
<text  x="72.51" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.14%)</title><rect x="106.9" y="373" width="1.7" height="15.0" fill="rgb(220,222,43)" rx="2" ry="2" />
<text  x="109.92" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (4 samples, 0.58%)</title><rect x="1038.7" y="421" width="6.8" height="15.0" fill="rgb(220,2,27)" rx="2" ry="2" />
<text  x="1041.67" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::deallocate (1 samples, 0.14%)</title><rect x="35.5" y="277" width="1.7" height="15.0" fill="rgb(211,163,54)" rx="2" ry="2" />
<text  x="38.50" y="287.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="358.6" y="501" width="1.7" height="15.0" fill="rgb(244,16,12)" rx="2" ry="2" />
<text  x="361.56" y="511.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.14%)</title><rect x="20.2" y="597" width="1.7" height="15.0" fill="rgb(210,155,40)" rx="2" ry="2" />
<text  x="23.20" y="607.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (5 samples, 0.72%)</title><rect x="317.8" y="325" width="8.5" height="15.0" fill="rgb(215,2,4)" rx="2" ry="2" />
<text  x="320.75" y="335.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (60 samples, 8.65%)</title><rect x="21.9" y="549" width="102.0" height="15.0" fill="rgb(234,141,45)" rx="2" ry="2" />
<text  x="24.90" y="559.5" >cql3::query_..</text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.29%)</title><rect x="576.2" y="533" width="3.4" height="15.0" fill="rgb(244,97,9)" rx="2" ry="2" />
<text  x="579.20" y="543.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.14%)</title><rect x="244.6" y="453" width="1.7" height="15.0" fill="rgb(229,79,32)" rx="2" ry="2" />
<text  x="247.64" y="463.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.14%)</title><rect x="567.7" y="485" width="1.7" height="15.0" fill="rgb(221,194,45)" rx="2" ry="2" />
<text  x="570.69" y="495.5" ></text>
</g>
<g >
<title>main (550 samples, 79.25%)</title><rect x="142.6" y="693" width="935.2" height="15.0" fill="rgb(250,61,4)" rx="2" ry="2" />
<text  x="145.62" y="703.5" >main</text>
</g>
<g >
<title>row::row (20 samples, 2.88%)</title><rect x="299.0" y="373" width="34.1" height="15.0" fill="rgb(253,60,25)" rx="2" ry="2" />
<text  x="302.05" y="383.5" >ro..</text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (5 samples, 0.72%)</title><rect x="271.8" y="389" width="8.5" height="15.0" fill="rgb(250,176,4)" rx="2" ry="2" />
<text  x="274.84" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (4 samples, 0.58%)</title><rect x="379.0" y="485" width="6.8" height="15.0" fill="rgb(215,81,17)" rx="2" ry="2" />
<text  x="381.96" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (3 samples, 0.43%)</title><rect x="110.3" y="437" width="5.1" height="15.0" fill="rgb(235,204,52)" rx="2" ry="2" />
<text  x="113.32" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.14%)</title><rect x="59.3" y="405" width="1.7" height="15.0" fill="rgb(249,165,27)" rx="2" ry="2" />
<text  x="62.31" y="415.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (14 samples, 2.02%)</title><rect x="458.9" y="501" width="23.8" height="15.0" fill="rgb(233,95,25)" rx="2" ry="2" />
<text  x="461.88" y="511.5" >m..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="635.7" y="565" width="1.7" height="15.0" fill="rgb(221,120,22)" rx="2" ry="2" />
<text  x="638.71" y="575.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.14%)</title><rect x="139.2" y="533" width="1.7" height="15.0" fill="rgb(249,144,14)" rx="2" ry="2" />
<text  x="142.22" y="543.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (2 samples, 0.29%)</title><rect x="596.6" y="581" width="3.4" height="15.0" fill="rgb(229,199,47)" rx="2" ry="2" />
<text  x="599.60" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (3 samples, 0.43%)</title><rect x="287.1" y="373" width="5.1" height="15.0" fill="rgb(247,13,50)" rx="2" ry="2" />
<text  x="290.15" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="814.2" y="405" width="1.7" height="15.0" fill="rgb(206,0,51)" rx="2" ry="2" />
<text  x="817.24" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (1 samples, 0.14%)</title><rect x="15.1" y="549" width="1.7" height="15.0" fill="rgb(222,227,50)" rx="2" ry="2" />
<text  x="18.10" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.14%)</title><rect x="84.8" y="405" width="1.7" height="15.0" fill="rgb(239,162,21)" rx="2" ry="2" />
<text  x="87.81" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.43%)</title><rect x="926.5" y="309" width="5.1" height="15.0" fill="rgb(237,32,44)" rx="2" ry="2" />
<text  x="929.46" y="319.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, true&gt; (1 samples, 0.14%)</title><rect x="106.9" y="357" width="1.7" height="15.0" fill="rgb(235,175,28)" rx="2" ry="2" />
<text  x="109.92" y="367.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="76.3" y="245" width="1.7" height="15.0" fill="rgb(213,100,26)" rx="2" ry="2" />
<text  x="79.31" y="255.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.14%)</title><rect x="628.9" y="565" width="1.7" height="15.0" fill="rgb(226,9,25)" rx="2" ry="2" />
<text  x="631.90" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="86.5" y="373" width="3.4" height="15.0" fill="rgb(248,145,2)" rx="2" ry="2" />
<text  x="89.51" y="383.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char const*&gt; (1 samples, 0.14%)</title><rect x="59.3" y="357" width="1.7" height="15.0" fill="rgb(208,124,30)" rx="2" ry="2" />
<text  x="62.31" y="367.5" ></text>
</g>
<g >
<title>free (1 samples, 0.14%)</title><rect x="384.1" y="437" width="1.7" height="15.0" fill="rgb(227,20,26)" rx="2" ry="2" />
<text  x="387.06" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="814.2" y="389" width="1.7" height="15.0" fill="rgb(205,174,1)" rx="2" ry="2" />
<text  x="817.24" y="399.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (2 samples, 0.29%)</title><rect x="708.8" y="485" width="3.4" height="15.0" fill="rgb(213,196,12)" rx="2" ry="2" />
<text  x="711.82" y="495.5" ></text>
</g>
<g >
<title>row::compact_and_expire (5 samples, 0.72%)</title><rect x="445.3" y="485" width="8.5" height="15.0" fill="rgb(234,82,16)" rx="2" ry="2" />
<text  x="448.27" y="495.5" ></text>
</g>
<g >
<title>table::make_reader (43 samples, 6.20%)</title><rect x="496.3" y="501" width="73.1" height="15.0" fill="rgb(247,22,41)" rx="2" ry="2" />
<text  x="499.28" y="511.5" >table::m..</text>
</g>
<g >
<title>abstract_type::deserialize_impl&lt;basic_single_fragmented_view&lt; (1 samples, 0.14%)</title><rect x="168.1" y="501" width="1.7" height="15.0" fill="rgb(214,171,3)" rx="2" ry="2" />
<text  x="171.13" y="511.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.58%)</title><rect x="1038.7" y="533" width="6.8" height="15.0" fill="rgb(250,196,49)" rx="2" ry="2" />
<text  x="1041.67" y="543.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (6 samples, 0.86%)</title><rect x="773.4" y="533" width="10.2" height="15.0" fill="rgb(252,163,51)" rx="2" ry="2" />
<text  x="776.43" y="543.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.14%)</title><rect x="479.3" y="469" width="1.7" height="15.0" fill="rgb(231,159,7)" rx="2" ry="2" />
<text  x="482.28" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="76.3" y="277" width="1.7" height="15.0" fill="rgb(205,221,36)" rx="2" ry="2" />
<text  x="79.31" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.29%)</title><rect x="69.5" y="293" width="3.4" height="15.0" fill="rgb(227,131,27)" rx="2" ry="2" />
<text  x="72.51" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (5 samples, 0.72%)</title><rect x="445.3" y="469" width="8.5" height="15.0" fill="rgb(233,47,32)" rx="2" ry="2" />
<text  x="448.27" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.14%)</title><rect x="125.6" y="581" width="1.7" height="15.0" fill="rgb(224,63,41)" rx="2" ry="2" />
<text  x="128.62" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (1 samples, 0.14%)</title><rect x="23.6" y="437" width="1.7" height="15.0" fill="rgb(250,5,5)" rx="2" ry="2" />
<text  x="26.60" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.14%)</title><rect x="661.2" y="549" width="1.7" height="15.0" fill="rgb(233,99,52)" rx="2" ry="2" />
<text  x="664.21" y="559.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.14%)</title><rect x="139.2" y="597" width="1.7" height="15.0" fill="rgb(227,143,26)" rx="2" ry="2" />
<text  x="142.22" y="607.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.14%)</title><rect x="557.5" y="469" width="1.7" height="15.0" fill="rgb(207,122,26)" rx="2" ry="2" />
<text  x="560.49" y="479.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="76.3" y="213" width="1.7" height="15.0" fill="rgb(243,26,11)" rx="2" ry="2" />
<text  x="79.31" y="223.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.14%)</title><rect x="139.2" y="581" width="1.7" height="15.0" fill="rgb(210,2,7)" rx="2" ry="2" />
<text  x="142.22" y="591.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.29%)</title><rect x="69.5" y="213" width="3.4" height="15.0" fill="rgb(215,49,21)" rx="2" ry="2" />
<text  x="72.51" y="223.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="763.2" y="533" width="1.7" height="15.0" fill="rgb(227,60,5)" rx="2" ry="2" />
<text  x="766.23" y="543.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.14%)</title><rect x="986.0" y="373" width="1.7" height="15.0" fill="rgb(226,111,8)" rx="2" ry="2" />
<text  x="988.97" y="383.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.14%)</title><rect x="57.6" y="437" width="1.7" height="15.0" fill="rgb(209,27,14)" rx="2" ry="2" />
<text  x="60.61" y="447.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.29%)</title><rect x="742.8" y="421" width="3.4" height="15.0" fill="rgb(217,187,49)" rx="2" ry="2" />
<text  x="745.82" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="78.0" y="229" width="1.7" height="15.0" fill="rgb(233,4,53)" rx="2" ry="2" />
<text  x="81.01" y="239.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.14%)</title><rect x="20.2" y="501" width="1.7" height="15.0" fill="rgb(245,99,24)" rx="2" ry="2" />
<text  x="23.20" y="511.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.14%)</title><rect x="95.0" y="261" width="1.7" height="15.0" fill="rgb(217,86,45)" rx="2" ry="2" />
<text  x="98.01" y="271.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.14%)</title><rect x="166.4" y="421" width="1.7" height="15.0" fill="rgb(238,182,18)" rx="2" ry="2" />
<text  x="169.43" y="431.5" ></text>
</g>
<g >
<title>query_state::query_state (4 samples, 0.58%)</title><rect x="569.4" y="533" width="6.8" height="15.0" fill="rgb(220,29,8)" rx="2" ry="2" />
<text  x="572.39" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="589.8" y="565" width="1.7" height="15.0" fill="rgb(246,111,40)" rx="2" ry="2" />
<text  x="592.80" y="575.5" ></text>
</g>
<g >
<title>service::client_state::has_access (14 samples, 2.02%)</title><rect x="729.2" y="485" width="23.8" height="15.0" fill="rgb(243,28,22)" rx="2" ry="2" />
<text  x="732.22" y="495.5" >s..</text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (32 samples, 4.61%)</title><rect x="707.1" y="533" width="54.4" height="15.0" fill="rgb(253,180,19)" rx="2" ry="2" />
<text  x="710.12" y="543.5" >cql3:..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="669.7" y="549" width="1.7" height="15.0" fill="rgb(239,29,51)" rx="2" ry="2" />
<text  x="672.71" y="559.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.14%)</title><rect x="125.6" y="501" width="1.7" height="15.0" fill="rgb(217,144,9)" rx="2" ry="2" />
<text  x="128.62" y="511.5" ></text>
</g>
</g>
</svg>
