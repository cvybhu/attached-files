<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1830" onload="init(evt)" viewBox="0 0 1200 1830" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1830.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1813" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1813" > </text>
<g id="frames">
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="837" width="64.9" height="15.0" fill="rgb(223,111,35)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (19 samples, 2.75%)</title><rect x="495.0" y="1557" width="32.4" height="15.0" fill="rgb(213,135,34)" rx="2" ry="2" />
<text  x="497.98" y="1567.5" >st..</text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (2 samples, 0.29%)</title><rect x="1055.1" y="1477" width="3.4" height="15.0" fill="rgb(211,156,51)" rx="2" ry="2" />
<text  x="1058.09" y="1487.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.29%)</title><rect x="39.0" y="229" width="3.4" height="15.0" fill="rgb(230,71,34)" rx="2" ry="2" />
<text  x="42.03" y="239.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.14%)</title><rect x="74.9" y="1173" width="1.7" height="15.0" fill="rgb(237,0,6)" rx="2" ry="2" />
<text  x="77.89" y="1183.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.14%)</title><rect x="626.5" y="1573" width="1.7" height="15.0" fill="rgb(239,175,43)" rx="2" ry="2" />
<text  x="629.47" y="1583.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.14%)</title><rect x="990.2" y="1461" width="1.7" height="15.0" fill="rgb(247,224,35)" rx="2" ry="2" />
<text  x="993.20" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="709" width="64.9" height="15.0" fill="rgb(221,33,36)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >[unknown]</text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (21 samples, 3.04%)</title><rect x="993.6" y="1477" width="35.9" height="15.0" fill="rgb(238,48,4)" rx="2" ry="2" />
<text  x="996.62" y="1487.5" >ser..</text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="606.0" y="1493" width="1.7" height="15.0" fill="rgb(237,185,35)" rx="2" ry="2" />
<text  x="608.98" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.14%)</title><rect x="109.0" y="1333" width="1.8" height="15.0" fill="rgb(205,136,49)" rx="2" ry="2" />
<text  x="112.04" y="1343.5" ></text>
</g>
<g >
<title>database::query (11 samples, 1.59%)</title><rect x="964.6" y="1397" width="18.8" height="15.0" fill="rgb(228,143,24)" rx="2" ry="2" />
<text  x="967.59" y="1407.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="162.0" y="1605" width="1.7" height="15.0" fill="rgb(252,190,17)" rx="2" ry="2" />
<text  x="164.98" y="1615.5" ></text>
</g>
<g >
<title>do_cql_test (14 samples, 2.03%)</title><rect x="97.1" y="1653" width="23.9" height="15.0" fill="rgb(246,115,28)" rx="2" ry="2" />
<text  x="100.09" y="1663.5" >d..</text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1221" width="68.3" height="15.0" fill="rgb(240,50,35)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="1005.6" y="1445" width="3.4" height="15.0" fill="rgb(225,2,46)" rx="2" ry="2" />
<text  x="1008.57" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::deallocate (1 samples, 0.14%)</title><rect x="16.8" y="133" width="1.7" height="15.0" fill="rgb(212,139,14)" rx="2" ry="2" />
<text  x="19.83" y="143.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="98.8" y="1301" width="1.7" height="15.0" fill="rgb(250,89,26)" rx="2" ry="2" />
<text  x="101.80" y="1311.5" ></text>
</g>
<g >
<title>auth::operator== (2 samples, 0.29%)</title><rect x="797.2" y="1445" width="3.5" height="15.0" fill="rgb(224,149,8)" rx="2" ry="2" />
<text  x="800.24" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="739.2" y="1573" width="1.7" height="15.0" fill="rgb(221,179,1)" rx="2" ry="2" />
<text  x="742.18" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (2 samples, 0.29%)</title><rect x="71.5" y="389" width="3.4" height="15.0" fill="rgb(210,42,10)" rx="2" ry="2" />
<text  x="74.48" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (1 samples, 0.14%)</title><rect x="303.7" y="1445" width="1.7" height="15.0" fill="rgb(231,26,0)" rx="2" ry="2" />
<text  x="306.72" y="1455.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.14%)</title><rect x="71.5" y="309" width="1.7" height="15.0" fill="rgb(220,67,38)" rx="2" ry="2" />
<text  x="74.48" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.14%)</title><rect x="52.7" y="197" width="1.7" height="15.0" fill="rgb(227,212,54)" rx="2" ry="2" />
<text  x="55.69" y="207.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.14%)</title><rect x="134.7" y="1653" width="1.7" height="15.0" fill="rgb(229,213,53)" rx="2" ry="2" />
<text  x="137.66" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.14%)</title><rect x="71.5" y="373" width="1.7" height="15.0" fill="rgb(211,158,7)" rx="2" ry="2" />
<text  x="74.48" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="669.2" y="1589" width="1.7" height="15.0" fill="rgb(219,181,17)" rx="2" ry="2" />
<text  x="672.16" y="1599.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.14%)</title><rect x="197.8" y="1589" width="1.8" height="15.0" fill="rgb(206,82,41)" rx="2" ry="2" />
<text  x="200.84" y="1599.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (4 samples, 0.58%)</title><rect x="283.2" y="1477" width="6.9" height="15.0" fill="rgb(247,21,3)" rx="2" ry="2" />
<text  x="286.23" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.14%)</title><rect x="52.7" y="181" width="1.7" height="15.0" fill="rgb(249,208,39)" rx="2" ry="2" />
<text  x="55.69" y="191.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (7 samples, 1.01%)</title><rect x="788.7" y="1477" width="12.0" height="15.0" fill="rgb(221,216,28)" rx="2" ry="2" />
<text  x="791.70" y="1487.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (4 samples, 0.58%)</title><rect x="1031.2" y="1541" width="6.8" height="15.0" fill="rgb(213,4,47)" rx="2" ry="2" />
<text  x="1034.19" y="1551.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.14%)</title><rect x="361.8" y="1349" width="1.7" height="15.0" fill="rgb(234,206,20)" rx="2" ry="2" />
<text  x="364.78" y="1359.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.14%)</title><rect x="30.5" y="197" width="1.7" height="15.0" fill="rgb(228,115,9)" rx="2" ry="2" />
<text  x="33.49" y="207.5" ></text>
</g>
<g >
<title>__start_context (4 samples, 0.58%)</title><rect x="124.4" y="1733" width="6.8" height="15.0" fill="rgb(226,189,30)" rx="2" ry="2" />
<text  x="127.41" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="551.3" y="1477" width="1.7" height="15.0" fill="rgb(228,129,38)" rx="2" ry="2" />
<text  x="554.33" y="1487.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.14%)</title><rect x="600.9" y="1477" width="1.7" height="15.0" fill="rgb(240,183,29)" rx="2" ry="2" />
<text  x="603.85" y="1487.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.14%)</title><rect x="826.3" y="1429" width="1.7" height="15.0" fill="rgb(238,153,19)" rx="2" ry="2" />
<text  x="829.27" y="1439.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (2 samples, 0.29%)</title><rect x="824.6" y="1509" width="3.4" height="15.0" fill="rgb(225,9,35)" rx="2" ry="2" />
<text  x="827.56" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="773.3" y="1509" width="1.7" height="15.0" fill="rgb(224,140,19)" rx="2" ry="2" />
<text  x="776.33" y="1519.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (86 samples, 12.45%)</title><rect x="247.4" y="1525" width="146.8" height="15.0" fill="rgb(245,55,20)" rx="2" ry="2" />
<text  x="250.37" y="1535.5" >merging_reader&lt;mut..</text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.14%)</title><rect x="114.2" y="1461" width="1.7" height="15.0" fill="rgb(250,108,47)" rx="2" ry="2" />
<text  x="117.17" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1621" width="68.3" height="15.0" fill="rgb(239,59,8)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.14%)</title><rect x="293.5" y="1461" width="1.7" height="15.0" fill="rgb(206,33,25)" rx="2" ry="2" />
<text  x="296.47" y="1471.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (4 samples, 0.58%)</title><rect x="64.6" y="373" width="6.9" height="15.0" fill="rgb(219,213,47)" rx="2" ry="2" />
<text  x="67.65" y="383.5" ></text>
</g>
<g >
<title>database::query (3 samples, 0.43%)</title><rect x="158.6" y="1621" width="5.1" height="15.0" fill="rgb(212,68,39)" rx="2" ry="2" />
<text  x="161.57" y="1631.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="107.3" y="1397" width="1.7" height="15.0" fill="rgb(244,6,41)" rx="2" ry="2" />
<text  x="110.34" y="1407.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (11 samples, 1.59%)</title><rect x="78.3" y="1589" width="18.8" height="15.0" fill="rgb(231,215,3)" rx="2" ry="2" />
<text  x="81.31" y="1599.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (5 samples, 0.72%)</title><rect x="1061.9" y="1493" width="8.6" height="15.0" fill="rgb(227,208,41)" rx="2" ry="2" />
<text  x="1064.92" y="1503.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::allocate (1 samples, 0.14%)</title><rect x="15.1" y="165" width="1.7" height="15.0" fill="rgb(217,17,16)" rx="2" ry="2" />
<text  x="18.12" y="175.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (2 samples, 0.29%)</title><rect x="662.3" y="1589" width="3.4" height="15.0" fill="rgb(207,185,28)" rx="2" ry="2" />
<text  x="665.33" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.14%)</title><rect x="1096.1" y="1621" width="1.7" height="15.0" fill="rgb(251,86,26)" rx="2" ry="2" />
<text  x="1099.08" y="1631.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (2 samples, 0.29%)</title><rect x="824.6" y="1477" width="3.4" height="15.0" fill="rgb(222,205,14)" rx="2" ry="2" />
<text  x="827.56" y="1487.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (1 samples, 0.14%)</title><rect x="599.1" y="1477" width="1.8" height="15.0" fill="rgb(205,217,46)" rx="2" ry="2" />
<text  x="602.15" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="98.8" y="1349" width="1.7" height="15.0" fill="rgb(239,227,19)" rx="2" ry="2" />
<text  x="101.80" y="1359.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (12 samples, 1.74%)</title><rect x="442.0" y="1493" width="20.5" height="15.0" fill="rgb(243,158,26)" rx="2" ry="2" />
<text  x="445.04" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.14%)</title><rect x="1029.5" y="1525" width="1.7" height="15.0" fill="rgb(246,136,15)" rx="2" ry="2" />
<text  x="1032.48" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="670.9" y="1589" width="1.7" height="15.0" fill="rgb(234,197,29)" rx="2" ry="2" />
<text  x="673.87" y="1599.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (1 samples, 0.14%)</title><rect x="686.2" y="1605" width="1.7" height="15.0" fill="rgb(211,219,16)" rx="2" ry="2" />
<text  x="689.24" y="1615.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (9 samples, 1.30%)</title><rect x="476.2" y="1509" width="15.4" height="15.0" fill="rgb(231,122,21)" rx="2" ry="2" />
<text  x="479.19" y="1519.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.14%)</title><rect x="361.8" y="1365" width="1.7" height="15.0" fill="rgb(208,36,32)" rx="2" ry="2" />
<text  x="364.78" y="1375.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="1084.1" y="1605" width="1.7" height="15.0" fill="rgb(230,89,2)" rx="2" ry="2" />
<text  x="1087.12" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (1 samples, 0.14%)</title><rect x="20.2" y="213" width="1.8" height="15.0" fill="rgb(242,12,18)" rx="2" ry="2" />
<text  x="23.25" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (5 samples, 0.72%)</title><rect x="375.4" y="1461" width="8.6" height="15.0" fill="rgb(205,111,38)" rx="2" ry="2" />
<text  x="378.44" y="1471.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (5 samples, 0.72%)</title><rect x="853.6" y="1509" width="8.5" height="15.0" fill="rgb(234,12,15)" rx="2" ry="2" />
<text  x="856.59" y="1519.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1 samples, 0.14%)</title><rect x="95.4" y="1541" width="1.7" height="15.0" fill="rgb(231,161,15)" rx="2" ry="2" />
<text  x="98.38" y="1551.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="647.0" y="1605" width="1.7" height="15.0" fill="rgb(248,14,7)" rx="2" ry="2" />
<text  x="649.96" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="800.7" y="1461" width="1.7" height="15.0" fill="rgb(230,141,17)" rx="2" ry="2" />
<text  x="803.65" y="1471.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.29%)</title><rect x="192.7" y="1573" width="3.4" height="15.0" fill="rgb(248,48,12)" rx="2" ry="2" />
<text  x="195.72" y="1583.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.29%)</title><rect x="640.1" y="1605" width="3.4" height="15.0" fill="rgb(254,5,45)" rx="2" ry="2" />
<text  x="643.13" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="40.7" y="133" width="1.7" height="15.0" fill="rgb(230,184,37)" rx="2" ry="2" />
<text  x="43.74" y="143.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="124.4" y="1653" width="1.7" height="15.0" fill="rgb(232,145,29)" rx="2" ry="2" />
<text  x="127.41" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (4 samples, 0.58%)</title><rect x="124.4" y="1717" width="6.8" height="15.0" fill="rgb(213,134,8)" rx="2" ry="2" />
<text  x="127.41" y="1727.5" ></text>
</g>
<g >
<title>table::make_reader (52 samples, 7.53%)</title><rect x="536.0" y="1541" width="88.8" height="15.0" fill="rgb(234,180,38)" rx="2" ry="2" />
<text  x="538.96" y="1551.5" >table::mak..</text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="901" width="64.9" height="15.0" fill="rgb(213,126,29)" rx="2" ry="2" />
<text  x="13.00" y="911.5" >[unknown]</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.14%)</title><rect x="319.1" y="1429" width="1.7" height="15.0" fill="rgb(236,195,38)" rx="2" ry="2" />
<text  x="322.09" y="1439.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::release (1 samples, 0.14%)</title><rect x="69.8" y="309" width="1.7" height="15.0" fill="rgb(222,24,35)" rx="2" ry="2" />
<text  x="72.77" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (30 samples, 4.34%)</title><rect x="320.8" y="1429" width="51.2" height="15.0" fill="rgb(239,176,13)" rx="2" ry="2" />
<text  x="323.80" y="1439.5" >parti..</text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.14%)</title><rect x="462.5" y="1509" width="1.7" height="15.0" fill="rgb(229,66,40)" rx="2" ry="2" />
<text  x="465.53" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.14%)</title><rect x="97.1" y="1381" width="1.7" height="15.0" fill="rgb(226,140,5)" rx="2" ry="2" />
<text  x="100.09" y="1391.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (24 samples, 3.47%)</title><rect x="10.0" y="517" width="41.0" height="15.0" fill="rgb(234,107,24)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >sea..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="920.2" y="1461" width="1.7" height="15.0" fill="rgb(248,212,31)" rx="2" ry="2" />
<text  x="923.19" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="805" width="64.9" height="15.0" fill="rgb(210,218,43)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >[unknown]</text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::explode (1 samples, 0.14%)</title><rect x="1065.3" y="1349" width="1.7" height="15.0" fill="rgb(253,142,32)" rx="2" ry="2" />
<text  x="1068.34" y="1359.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.14%)</title><rect x="73.2" y="245" width="1.7" height="15.0" fill="rgb(210,46,42)" rx="2" ry="2" />
<text  x="76.18" y="255.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.14%)</title><rect x="1067.0" y="1317" width="1.8" height="15.0" fill="rgb(229,41,50)" rx="2" ry="2" />
<text  x="1070.05" y="1327.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.14%)</title><rect x="40.7" y="101" width="1.7" height="15.0" fill="rgb(250,74,19)" rx="2" ry="2" />
<text  x="43.74" y="111.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="802.4" y="1493" width="3.4" height="15.0" fill="rgb(250,140,19)" rx="2" ry="2" />
<text  x="805.36" y="1503.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_following (1 samples, 0.14%)</title><rect x="102.2" y="1413" width="1.7" height="15.0" fill="rgb(211,95,34)" rx="2" ry="2" />
<text  x="105.21" y="1423.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_SET (1 samples, 0.14%)</title><rect x="28.8" y="229" width="1.7" height="15.0" fill="rgb(210,42,52)" rx="2" ry="2" />
<text  x="31.78" y="239.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (3 samples, 0.43%)</title><rect x="1091.0" y="1605" width="5.1" height="15.0" fill="rgb(216,100,36)" rx="2" ry="2" />
<text  x="1093.96" y="1615.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (1 samples, 0.14%)</title><rect x="126.1" y="1653" width="1.7" height="15.0" fill="rgb(252,214,46)" rx="2" ry="2" />
<text  x="129.12" y="1663.5" ></text>
</g>
<g >
<title>do_cql_test (5 samples, 0.72%)</title><rect x="51.0" y="485" width="8.5" height="15.0" fill="rgb(254,5,30)" rx="2" ry="2" />
<text  x="53.98" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.14%)</title><rect x="112.5" y="1397" width="1.7" height="15.0" fill="rgb(231,34,28)" rx="2" ry="2" />
<text  x="115.46" y="1407.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (6 samples, 0.87%)</title><rect x="110.8" y="1477" width="10.2" height="15.0" fill="rgb(208,93,47)" rx="2" ry="2" />
<text  x="113.75" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="621.3" y="1461" width="1.8" height="15.0" fill="rgb(213,42,16)" rx="2" ry="2" />
<text  x="624.35" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="606.0" y="1477" width="1.7" height="15.0" fill="rgb(240,228,24)" rx="2" ry="2" />
<text  x="608.98" y="1487.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (3 samples, 0.43%)</title><rect x="471.1" y="1525" width="5.1" height="15.0" fill="rgb(226,210,13)" rx="2" ry="2" />
<text  x="474.07" y="1535.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (2 samples, 0.29%)</title><rect x="575.2" y="1493" width="3.5" height="15.0" fill="rgb(215,148,53)" rx="2" ry="2" />
<text  x="578.24" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (24 samples, 3.47%)</title><rect x="10.0" y="549" width="41.0" height="15.0" fill="rgb(216,68,45)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >[un..</text>
</g>
<g >
<title>cql3::query_processor::get_statement (22 samples, 3.18%)</title><rect x="11.7" y="405" width="37.6" height="15.0" fill="rgb(232,131,47)" rx="2" ry="2" />
<text  x="14.71" y="415.5" >cql..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="698.2" y="1589" width="1.7" height="15.0" fill="rgb(219,152,34)" rx="2" ry="2" />
<text  x="701.19" y="1599.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.14%)</title><rect x="30.5" y="165" width="1.7" height="15.0" fill="rgb(241,168,33)" rx="2" ry="2" />
<text  x="33.49" y="175.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::~set_value (1 samples, 0.14%)</title><rect x="81.7" y="1557" width="1.7" height="15.0" fill="rgb(223,171,16)" rx="2" ry="2" />
<text  x="84.72" y="1567.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (2 samples, 0.29%)</title><rect x="662.3" y="1573" width="3.4" height="15.0" fill="rgb(228,141,53)" rx="2" ry="2" />
<text  x="665.33" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.14%)</title><rect x="35.6" y="117" width="1.7" height="15.0" fill="rgb(231,121,6)" rx="2" ry="2" />
<text  x="38.62" y="127.5" ></text>
</g>
<g >
<title>schema_registry::get (1 samples, 0.14%)</title><rect x="921.9" y="1477" width="1.7" height="15.0" fill="rgb(241,97,54)" rx="2" ry="2" />
<text  x="924.90" y="1487.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="32.2" y="197" width="1.7" height="15.0" fill="rgb(235,25,53)" rx="2" ry="2" />
<text  x="35.20" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (55 samples, 7.96%)</title><rect x="290.1" y="1493" width="93.9" height="15.0" fill="rgb(208,13,30)" rx="2" ry="2" />
<text  x="293.06" y="1503.5" >partition_s..</text>
</g>
<g >
<title>database::do_apply (4 samples, 0.58%)</title><rect x="1055.1" y="1557" width="6.8" height="15.0" fill="rgb(233,96,5)" rx="2" ry="2" />
<text  x="1058.09" y="1567.5" ></text>
</g>
<g >
<title>row::row (20 samples, 2.89%)</title><rect x="337.9" y="1413" width="34.1" height="15.0" fill="rgb(213,97,34)" rx="2" ry="2" />
<text  x="340.87" y="1423.5" >ro..</text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.14%)</title><rect x="1099.5" y="1653" width="1.7" height="15.0" fill="rgb(230,214,35)" rx="2" ry="2" />
<text  x="1102.49" y="1663.5" ></text>
</g>
<g >
<title>perf_simple_que (691 samples, 100.00%)</title><rect x="10.0" y="1765" width="1180.0" height="15.0" fill="rgb(225,10,16)" rx="2" ry="2" />
<text  x="13.00" y="1775.5" >perf_simple_que</text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (6 samples, 0.87%)</title><rect x="83.4" y="1557" width="10.3" height="15.0" fill="rgb(228,20,38)" rx="2" ry="2" />
<text  x="86.43" y="1567.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (2 samples, 0.29%)</title><rect x="679.4" y="1605" width="3.4" height="15.0" fill="rgb(216,62,29)" rx="2" ry="2" />
<text  x="682.41" y="1615.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.14%)</title><rect x="986.8" y="1413" width="1.7" height="15.0" fill="rgb(236,226,22)" rx="2" ry="2" />
<text  x="989.79" y="1423.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (3 samples, 0.43%)</title><rect x="148.3" y="1573" width="5.1" height="15.0" fill="rgb(226,173,1)" rx="2" ry="2" />
<text  x="151.32" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.14%)</title><rect x="45.9" y="133" width="1.7" height="15.0" fill="rgb(244,103,14)" rx="2" ry="2" />
<text  x="48.86" y="143.5" ></text>
</g>
<g >
<title>all (691 samples, 100%)</title><rect x="10.0" y="1781" width="1180.0" height="15.0" fill="rgb(239,4,12)" rx="2" ry="2" />
<text  x="13.00" y="1791.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.14%)</title><rect x="629.9" y="1605" width="1.7" height="15.0" fill="rgb(217,85,20)" rx="2" ry="2" />
<text  x="632.88" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.14%)</title><rect x="810.9" y="1557" width="1.7" height="15.0" fill="rgb(221,117,1)" rx="2" ry="2" />
<text  x="813.90" y="1567.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.14%)</title><rect x="71.5" y="293" width="1.7" height="15.0" fill="rgb(215,218,44)" rx="2" ry="2" />
<text  x="74.48" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="672.6" y="1605" width="1.7" height="15.0" fill="rgb(249,210,4)" rx="2" ry="2" />
<text  x="675.58" y="1615.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (2 samples, 0.29%)</title><rect x="1026.1" y="1445" width="3.4" height="15.0" fill="rgb(218,112,26)" rx="2" ry="2" />
<text  x="1029.06" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="773" width="64.9" height="15.0" fill="rgb(222,220,33)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="18.5" y="197" width="1.7" height="15.0" fill="rgb(233,73,28)" rx="2" ry="2" />
<text  x="21.54" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.14%)</title><rect x="92.0" y="1493" width="1.7" height="15.0" fill="rgb(208,217,1)" rx="2" ry="2" />
<text  x="94.97" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.29%)</title><rect x="121.0" y="1717" width="3.4" height="15.0" fill="rgb(218,44,4)" rx="2" ry="2" />
<text  x="124.00" y="1727.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="773.3" y="1525" width="1.7" height="15.0" fill="rgb(214,55,35)" rx="2" ry="2" />
<text  x="776.33" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.14%)</title><rect x="73.2" y="325" width="1.7" height="15.0" fill="rgb(234,131,7)" rx="2" ry="2" />
<text  x="76.18" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.14%)</title><rect x="83.4" y="1445" width="1.7" height="15.0" fill="rgb(238,149,8)" rx="2" ry="2" />
<text  x="86.43" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1333" width="68.3" height="15.0" fill="rgb(234,160,4)" rx="2" ry="2" />
<text  x="13.00" y="1343.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.14%)</title><rect x="103.9" y="1301" width="1.7" height="15.0" fill="rgb(208,24,8)" rx="2" ry="2" />
<text  x="106.92" y="1311.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (8 samples, 1.16%)</title><rect x="97.1" y="1445" width="13.7" height="15.0" fill="rgb(207,223,40)" rx="2" ry="2" />
<text  x="100.09" y="1455.5" ></text>
</g>
<g >
<title>make_combined_reader (7 samples, 1.01%)</title><rect x="541.1" y="1509" width="11.9" height="15.0" fill="rgb(238,137,32)" rx="2" ry="2" />
<text  x="544.09" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (3 samples, 0.43%)</title><rect x="52.7" y="309" width="5.1" height="15.0" fill="rgb(219,226,1)" rx="2" ry="2" />
<text  x="55.69" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.14%)</title><rect x="71.5" y="261" width="1.7" height="15.0" fill="rgb(242,193,14)" rx="2" ry="2" />
<text  x="74.48" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (7 samples, 1.01%)</title><rect x="877.5" y="1525" width="12.0" height="15.0" fill="rgb(249,38,44)" rx="2" ry="2" />
<text  x="880.50" y="1535.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.43%)</title><rect x="928.7" y="1461" width="5.1" height="15.0" fill="rgb(253,144,5)" rx="2" ry="2" />
<text  x="931.73" y="1471.5" ></text>
</g>
<g >
<title>seastar::reactor::run (564 samples, 81.62%)</title><rect x="136.4" y="1669" width="963.1" height="15.0" fill="rgb(242,171,11)" rx="2" ry="2" />
<text  x="139.37" y="1679.5" >seastar::reactor::run</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (3 samples, 0.43%)</title><rect x="691.4" y="1621" width="5.1" height="15.0" fill="rgb(238,175,6)" rx="2" ry="2" />
<text  x="694.36" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.14%)</title><rect x="109.0" y="1317" width="1.8" height="15.0" fill="rgb(218,11,14)" rx="2" ry="2" />
<text  x="112.04" y="1327.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="127.8" y="1685" width="1.7" height="15.0" fill="rgb(232,32,26)" rx="2" ry="2" />
<text  x="130.83" y="1695.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.58%)</title><rect x="793.8" y="1461" width="6.9" height="15.0" fill="rgb(231,69,44)" rx="2" ry="2" />
<text  x="796.82" y="1471.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (266 samples, 38.49%)</title><rect x="175.6" y="1605" width="454.3" height="15.0" fill="rgb(226,5,24)" rx="2" ry="2" />
<text  x="178.64" y="1615.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="792.1" y="1445" width="1.7" height="15.0" fill="rgb(209,188,9)" rx="2" ry="2" />
<text  x="795.11" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1573" width="68.3" height="15.0" fill="rgb(246,85,44)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" >[unknown]</text>
</g>
<g >
<title>standard_allocation_strategy::alloc (4 samples, 0.58%)</title><rect x="365.2" y="1381" width="6.8" height="15.0" fill="rgb(227,28,33)" rx="2" ry="2" />
<text  x="368.20" y="1391.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.14%)</title><rect x="97.1" y="1365" width="1.7" height="15.0" fill="rgb(230,186,12)" rx="2" ry="2" />
<text  x="100.09" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (2 samples, 0.29%)</title><rect x="25.4" y="213" width="3.4" height="15.0" fill="rgb(216,27,16)" rx="2" ry="2" />
<text  x="28.37" y="223.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.14%)</title><rect x="129.5" y="1685" width="1.7" height="15.0" fill="rgb(214,21,41)" rx="2" ry="2" />
<text  x="132.54" y="1695.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (2 samples, 0.29%)</title><rect x="315.7" y="1429" width="3.4" height="15.0" fill="rgb(230,196,0)" rx="2" ry="2" />
<text  x="318.67" y="1439.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.14%)</title><rect x="103.9" y="1349" width="1.7" height="15.0" fill="rgb(249,102,17)" rx="2" ry="2" />
<text  x="106.92" y="1359.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.14%)</title><rect x="361.8" y="1333" width="1.7" height="15.0" fill="rgb(238,92,42)" rx="2" ry="2" />
<text  x="364.78" y="1343.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.58%)</title><rect x="501.8" y="1509" width="6.8" height="15.0" fill="rgb(237,72,10)" rx="2" ry="2" />
<text  x="504.81" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.14%)</title><rect x="828.0" y="1477" width="1.7" height="15.0" fill="rgb(235,0,45)" rx="2" ry="2" />
<text  x="830.97" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.14%)</title><rect x="73.2" y="261" width="1.7" height="15.0" fill="rgb(217,50,6)" rx="2" ry="2" />
<text  x="76.18" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (2 samples, 0.29%)</title><rect x="746.0" y="1573" width="3.4" height="15.0" fill="rgb(222,21,4)" rx="2" ry="2" />
<text  x="749.01" y="1583.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.14%)</title><rect x="52.7" y="213" width="1.7" height="15.0" fill="rgb(231,32,24)" rx="2" ry="2" />
<text  x="55.69" y="223.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.14%)</title><rect x="1056.8" y="1413" width="1.7" height="15.0" fill="rgb(249,164,28)" rx="2" ry="2" />
<text  x="1059.80" y="1423.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.29%)</title><rect x="71.5" y="533" width="3.4" height="15.0" fill="rgb(208,151,37)" rx="2" ry="2" />
<text  x="74.48" y="543.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="974.8" y="1365" width="1.7" height="15.0" fill="rgb(251,190,37)" rx="2" ry="2" />
<text  x="977.83" y="1375.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (131 samples, 18.96%)</title><rect x="831.4" y="1605" width="223.7" height="15.0" fill="rgb(248,54,26)" rx="2" ry="2" />
<text  x="834.39" y="1615.5" >seastar::concrete_execution_s..</text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="816.0" y="1573" width="1.7" height="15.0" fill="rgb(210,11,41)" rx="2" ry="2" />
<text  x="819.02" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="816.0" y="1557" width="1.7" height="15.0" fill="rgb(239,175,47)" rx="2" ry="2" />
<text  x="819.02" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="127.8" y="1669" width="1.7" height="15.0" fill="rgb(221,21,12)" rx="2" ry="2" />
<text  x="130.83" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.14%)</title><rect x="109.0" y="1301" width="1.8" height="15.0" fill="rgb(218,121,47)" rx="2" ry="2" />
<text  x="112.04" y="1311.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="97.1" y="1397" width="1.7" height="15.0" fill="rgb(243,108,1)" rx="2" ry="2" />
<text  x="100.09" y="1407.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="117.6" y="1333" width="1.7" height="15.0" fill="rgb(244,9,17)" rx="2" ry="2" />
<text  x="120.58" y="1343.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_aggregate_statement, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_aggregate_statement&gt;, void&gt; (1 samples, 0.14%)</title><rect x="47.6" y="325" width="1.7" height="15.0" fill="rgb(224,14,45)" rx="2" ry="2" />
<text  x="50.57" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="218.3" y="1541" width="1.7" height="15.0" fill="rgb(207,207,0)" rx="2" ry="2" />
<text  x="221.34" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1605" width="68.3" height="15.0" fill="rgb(211,113,33)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" >[unknown]</text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.29%)</title><rect x="71.5" y="565" width="3.4" height="15.0" fill="rgb(237,168,49)" rx="2" ry="2" />
<text  x="74.48" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.14%)</title><rect x="76.6" y="981" width="1.7" height="15.0" fill="rgb(207,225,54)" rx="2" ry="2" />
<text  x="79.60" y="991.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.14%)</title><rect x="370.3" y="1365" width="1.7" height="15.0" fill="rgb(254,156,47)" rx="2" ry="2" />
<text  x="373.32" y="1375.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.14%)</title><rect x="783.6" y="1509" width="1.7" height="15.0" fill="rgb(239,41,26)" rx="2" ry="2" />
<text  x="786.57" y="1519.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.29%)</title><rect x="32.2" y="309" width="3.4" height="15.0" fill="rgb(246,74,36)" rx="2" ry="2" />
<text  x="35.20" y="319.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.14%)</title><rect x="124.4" y="1685" width="1.7" height="15.0" fill="rgb(243,158,47)" rx="2" ry="2" />
<text  x="127.41" y="1695.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="45.9" y="197" width="1.7" height="15.0" fill="rgb(225,31,35)" rx="2" ry="2" />
<text  x="48.86" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.14%)</title><rect x="602.6" y="1493" width="1.7" height="15.0" fill="rgb(236,4,24)" rx="2" ry="2" />
<text  x="605.56" y="1503.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (5 samples, 0.72%)</title><rect x="51.0" y="501" width="8.5" height="15.0" fill="rgb(207,199,2)" rx="2" ry="2" />
<text  x="53.98" y="511.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="218.3" y="1557" width="1.7" height="15.0" fill="rgb(229,192,7)" rx="2" ry="2" />
<text  x="221.34" y="1567.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="800.7" y="1477" width="1.7" height="15.0" fill="rgb(208,117,7)" rx="2" ry="2" />
<text  x="803.65" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 9.41%)</title><rect x="10.0" y="1733" width="111.0" height="15.0" fill="rgb(250,71,10)" rx="2" ry="2" />
<text  x="13.00" y="1743.5" >[unknown]</text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.14%)</title><rect x="824.6" y="1413" width="1.7" height="15.0" fill="rgb(232,82,28)" rx="2" ry="2" />
<text  x="827.56" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="804.1" y="1477" width="1.7" height="15.0" fill="rgb(220,209,34)" rx="2" ry="2" />
<text  x="807.07" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (14 samples, 2.03%)</title><rect x="97.1" y="1541" width="23.9" height="15.0" fill="rgb(210,12,48)" rx="2" ry="2" />
<text  x="100.09" y="1551.5" >c..</text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (5 samples, 0.72%)</title><rect x="822.9" y="1557" width="8.5" height="15.0" fill="rgb(230,10,50)" rx="2" ry="2" />
<text  x="825.85" y="1567.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (1 samples, 0.14%)</title><rect x="93.7" y="1557" width="1.7" height="15.0" fill="rgb(250,229,14)" rx="2" ry="2" />
<text  x="96.68" y="1567.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.14%)</title><rect x="711.9" y="1589" width="1.7" height="15.0" fill="rgb(221,220,47)" rx="2" ry="2" />
<text  x="714.85" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (77 samples, 11.14%)</title><rect x="898.0" y="1525" width="131.5" height="15.0" fill="rgb(223,54,51)" rx="2" ry="2" />
<text  x="900.99" y="1535.5" >service::storage..</text>
</g>
<g >
<title>schema::column_at (1 samples, 0.14%)</title><rect x="336.2" y="1381" width="1.7" height="15.0" fill="rgb(210,107,7)" rx="2" ry="2" />
<text  x="339.16" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.14%)</title><rect x="90.3" y="1381" width="1.7" height="15.0" fill="rgb(253,57,32)" rx="2" ry="2" />
<text  x="93.26" y="1391.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (4 samples, 0.58%)</title><rect x="571.8" y="1509" width="6.9" height="15.0" fill="rgb(222,101,49)" rx="2" ry="2" />
<text  x="574.82" y="1519.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (2 samples, 0.29%)</title><rect x="59.5" y="389" width="3.4" height="15.0" fill="rgb(216,0,52)" rx="2" ry="2" />
<text  x="62.52" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.72%)</title><rect x="880.9" y="1509" width="8.6" height="15.0" fill="rgb(222,110,51)" rx="2" ry="2" />
<text  x="883.91" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.72%)</title><rect x="1061.9" y="1557" width="8.6" height="15.0" fill="rgb(208,127,2)" rx="2" ry="2" />
<text  x="1064.92" y="1567.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.14%)</title><rect x="112.5" y="1381" width="1.7" height="15.0" fill="rgb(225,39,13)" rx="2" ry="2" />
<text  x="115.46" y="1391.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (60 samples, 8.68%)</title><rect x="720.4" y="1621" width="102.5" height="15.0" fill="rgb(244,28,31)" rx="2" ry="2" />
<text  x="723.39" y="1631.5" >seastar::int..</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (6 samples, 0.87%)</title><rect x="37.3" y="277" width="10.3" height="15.0" fill="rgb(246,130,21)" rx="2" ry="2" />
<text  x="40.32" y="287.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.14%)</title><rect x="80.0" y="1541" width="1.7" height="15.0" fill="rgb(205,65,20)" rx="2" ry="2" />
<text  x="83.01" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1701" width="68.3" height="15.0" fill="rgb(248,212,48)" rx="2" ry="2" />
<text  x="13.00" y="1711.5" >[unknown]</text>
</g>
<g >
<title>[[vdso]] (4 samples, 0.58%)</title><rect x="1108.0" y="1733" width="6.9" height="15.0" fill="rgb(231,31,35)" rx="2" ry="2" />
<text  x="1111.03" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.14%)</title><rect x="74.9" y="1157" width="1.7" height="15.0" fill="rgb(214,158,44)" rx="2" ry="2" />
<text  x="77.89" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1669" width="68.3" height="15.0" fill="rgb(205,144,41)" rx="2" ry="2" />
<text  x="13.00" y="1679.5" >[unknown]</text>
</g>
<g >
<title>mutation_partition::lower_bound (3 samples, 0.43%)</title><rect x="377.1" y="1445" width="5.2" height="15.0" fill="rgb(235,147,6)" rx="2" ry="2" />
<text  x="380.15" y="1455.5" ></text>
</g>
<g >
<title>create_partitions (2 samples, 0.29%)</title><rect x="71.5" y="501" width="3.4" height="15.0" fill="rgb(228,222,48)" rx="2" ry="2" />
<text  x="74.48" y="511.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (75 samples, 10.85%)</title><rect x="255.9" y="1509" width="128.1" height="15.0" fill="rgb(209,144,48)" rx="2" ry="2" />
<text  x="258.90" y="1519.5" >mutation_reader_..</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (5 samples, 0.72%)</title><rect x="51.0" y="405" width="8.5" height="15.0" fill="rgb(248,4,28)" rx="2" ry="2" />
<text  x="53.98" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="985.1" y="1365" width="1.7" height="15.0" fill="rgb(211,111,50)" rx="2" ry="2" />
<text  x="988.08" y="1375.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.58%)</title><rect x="413.0" y="1525" width="6.8" height="15.0" fill="rgb(214,94,12)" rx="2" ry="2" />
<text  x="416.01" y="1535.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="15.1" y="149" width="1.7" height="15.0" fill="rgb(243,159,0)" rx="2" ry="2" />
<text  x="18.12" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.14%)</title><rect x="97.1" y="1221" width="1.7" height="15.0" fill="rgb(208,114,10)" rx="2" ry="2" />
<text  x="100.09" y="1231.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::allocate (1 samples, 0.14%)</title><rect x="15.1" y="181" width="1.7" height="15.0" fill="rgb(231,200,52)" rx="2" ry="2" />
<text  x="18.12" y="191.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (3 samples, 0.43%)</title><rect x="1063.6" y="1413" width="5.2" height="15.0" fill="rgb(240,140,48)" rx="2" ry="2" />
<text  x="1066.63" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="969.7" y="1365" width="3.4" height="15.0" fill="rgb(226,195,10)" rx="2" ry="2" />
<text  x="972.71" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="821" width="64.9" height="15.0" fill="rgb(225,164,51)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >[unknown]</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="105.6" y="1333" width="1.7" height="15.0" fill="rgb(212,29,43)" rx="2" ry="2" />
<text  x="108.63" y="1343.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (2 samples, 0.29%)</title><rect x="824.6" y="1493" width="3.4" height="15.0" fill="rgb(242,226,45)" rx="2" ry="2" />
<text  x="827.56" y="1503.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.14%)</title><rect x="134.7" y="1637" width="1.7" height="15.0" fill="rgb(226,186,31)" rx="2" ry="2" />
<text  x="137.66" y="1647.5" ></text>
</g>
<g >
<title>create_partitions (14 samples, 2.03%)</title><rect x="97.1" y="1637" width="23.9" height="15.0" fill="rgb(235,115,42)" rx="2" ry="2" />
<text  x="100.09" y="1647.5" >c..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.14%)</title><rect x="35.6" y="133" width="1.7" height="15.0" fill="rgb(243,28,44)" rx="2" ry="2" />
<text  x="38.62" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="162.0" y="1589" width="1.7" height="15.0" fill="rgb(232,40,19)" rx="2" ry="2" />
<text  x="164.98" y="1599.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="681.1" y="1589" width="1.7" height="15.0" fill="rgb(228,158,24)" rx="2" ry="2" />
<text  x="684.11" y="1599.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (2 samples, 0.29%)</title><rect x="1055.1" y="1461" width="3.4" height="15.0" fill="rgb(207,121,49)" rx="2" ry="2" />
<text  x="1058.09" y="1471.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_aggregate_statement, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.14%)</title><rect x="47.6" y="309" width="1.7" height="15.0" fill="rgb(248,5,3)" rx="2" ry="2" />
<text  x="50.57" y="319.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (5 samples, 0.72%)</title><rect x="822.9" y="1605" width="8.5" height="15.0" fill="rgb(241,203,50)" rx="2" ry="2" />
<text  x="825.85" y="1615.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (2 samples, 0.29%)</title><rect x="220.0" y="1557" width="3.5" height="15.0" fill="rgb(232,23,47)" rx="2" ry="2" />
<text  x="223.04" y="1567.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (7 samples, 1.01%)</title><rect x="877.5" y="1541" width="12.0" height="15.0" fill="rgb(220,172,25)" rx="2" ry="2" />
<text  x="880.50" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.14%)</title><rect x="76.6" y="1141" width="1.7" height="15.0" fill="rgb(210,45,31)" rx="2" ry="2" />
<text  x="79.60" y="1151.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.43%)</title><rect x="397.6" y="1541" width="5.2" height="15.0" fill="rgb(239,17,14)" rx="2" ry="2" />
<text  x="400.64" y="1551.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.14%)</title><rect x="25.4" y="197" width="1.7" height="15.0" fill="rgb(210,7,43)" rx="2" ry="2" />
<text  x="28.37" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="665.7" y="1573" width="3.5" height="15.0" fill="rgb(238,64,10)" rx="2" ry="2" />
<text  x="668.75" y="1583.5" ></text>
</g>
<g >
<title>create_partitions (5 samples, 0.72%)</title><rect x="51.0" y="469" width="8.5" height="15.0" fill="rgb(223,10,35)" rx="2" ry="2" />
<text  x="53.98" y="479.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.29%)</title><rect x="32.2" y="293" width="3.4" height="15.0" fill="rgb(221,0,46)" rx="2" ry="2" />
<text  x="35.20" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (2 samples, 0.29%)</title><rect x="59.5" y="421" width="3.4" height="15.0" fill="rgb(249,160,9)" rx="2" ry="2" />
<text  x="62.52" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::~unique_ptr (1 samples, 0.14%)</title><rect x="68.1" y="357" width="1.7" height="15.0" fill="rgb(246,137,16)" rx="2" ry="2" />
<text  x="71.06" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.14%)</title><rect x="623.1" y="1493" width="1.7" height="15.0" fill="rgb(236,43,6)" rx="2" ry="2" />
<text  x="626.05" y="1503.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.14%)</title><rect x="382.3" y="1429" width="1.7" height="15.0" fill="rgb(215,38,6)" rx="2" ry="2" />
<text  x="385.27" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="1013" width="64.9" height="15.0" fill="rgb(235,51,43)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" >[unknown]</text>
</g>
<g >
<title>do_cql_test (1 samples, 0.14%)</title><rect x="74.9" y="1109" width="1.7" height="15.0" fill="rgb(219,57,13)" rx="2" ry="2" />
<text  x="77.89" y="1119.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (2 samples, 0.29%)</title><rect x="88.6" y="1429" width="3.4" height="15.0" fill="rgb(235,53,36)" rx="2" ry="2" />
<text  x="91.55" y="1439.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.14%)</title><rect x="76.6" y="1077" width="1.7" height="15.0" fill="rgb(232,12,16)" rx="2" ry="2" />
<text  x="79.60" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.14%)</title><rect x="103.9" y="1317" width="1.7" height="15.0" fill="rgb(209,9,2)" rx="2" ry="2" />
<text  x="106.92" y="1327.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.14%)</title><rect x="392.5" y="1509" width="1.7" height="15.0" fill="rgb(235,194,40)" rx="2" ry="2" />
<text  x="395.52" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1509" width="68.3" height="15.0" fill="rgb(228,182,44)" rx="2" ry="2" />
<text  x="13.00" y="1519.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (22 samples, 3.18%)</title><rect x="11.7" y="341" width="37.6" height="15.0" fill="rgb(220,180,12)" rx="2" ry="2" />
<text  x="14.71" y="351.5" >cql..</text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.14%)</title><rect x="80.0" y="1525" width="1.7" height="15.0" fill="rgb(214,155,8)" rx="2" ry="2" />
<text  x="83.01" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="42.4" y="181" width="1.8" height="15.0" fill="rgb(205,37,38)" rx="2" ry="2" />
<text  x="45.45" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.14%)</title><rect x="981.7" y="1381" width="1.7" height="15.0" fill="rgb(227,144,30)" rx="2" ry="2" />
<text  x="984.66" y="1391.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.14%)</title><rect x="933.8" y="1461" width="1.8" height="15.0" fill="rgb(231,124,28)" rx="2" ry="2" />
<text  x="936.85" y="1471.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.14%)</title><rect x="76.6" y="1109" width="1.7" height="15.0" fill="rgb(240,102,7)" rx="2" ry="2" />
<text  x="79.60" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="57.8" y="117" width="1.7" height="15.0" fill="rgb(229,118,32)" rx="2" ry="2" />
<text  x="60.81" y="127.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (1 samples, 0.14%)</title><rect x="495.0" y="1525" width="1.7" height="15.0" fill="rgb(215,136,15)" rx="2" ry="2" />
<text  x="497.98" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="40.7" y="117" width="1.7" height="15.0" fill="rgb(212,148,10)" rx="2" ry="2" />
<text  x="43.74" y="127.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.14%)</title><rect x="824.6" y="1429" width="1.7" height="15.0" fill="rgb(244,76,24)" rx="2" ry="2" />
<text  x="827.56" y="1439.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.58%)</title><rect x="1101.2" y="1749" width="6.8" height="15.0" fill="rgb(247,180,38)" rx="2" ry="2" />
<text  x="1104.20" y="1759.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.14%)</title><rect x="56.1" y="149" width="1.7" height="15.0" fill="rgb(217,48,20)" rx="2" ry="2" />
<text  x="59.11" y="159.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1461" width="68.3" height="15.0" fill="rgb(206,42,9)" rx="2" ry="2" />
<text  x="13.00" y="1471.5" >[unknown]</text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (2 samples, 0.29%)</title><rect x="870.7" y="1493" width="3.4" height="15.0" fill="rgb(236,213,39)" rx="2" ry="2" />
<text  x="873.67" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.14%)</title><rect x="57.8" y="133" width="1.7" height="15.0" fill="rgb(223,124,12)" rx="2" ry="2" />
<text  x="60.81" y="143.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.29%)</title><rect x="575.2" y="1477" width="3.5" height="15.0" fill="rgb(245,198,32)" rx="2" ry="2" />
<text  x="578.24" y="1487.5" ></text>
</g>
<g >
<title>seastar::writeable_eventfd::signal (1 samples, 0.14%)</title><rect x="134.7" y="1733" width="1.7" height="15.0" fill="rgb(219,181,24)" rx="2" ry="2" />
<text  x="137.66" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="303.7" y="1413" width="1.7" height="15.0" fill="rgb(220,173,28)" rx="2" ry="2" />
<text  x="306.72" y="1423.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (3 samples, 0.43%)</title><rect x="869.0" y="1509" width="5.1" height="15.0" fill="rgb(233,142,42)" rx="2" ry="2" />
<text  x="871.96" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="35.6" y="181" width="1.7" height="15.0" fill="rgb(234,172,1)" rx="2" ry="2" />
<text  x="38.62" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="419.8" y="1509" width="1.7" height="15.0" fill="rgb(247,115,38)" rx="2" ry="2" />
<text  x="422.84" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (37 samples, 5.35%)</title><rect x="749.4" y="1573" width="63.2" height="15.0" fill="rgb(210,116,53)" rx="2" ry="2" />
<text  x="752.42" y="1583.5" >cql3::..</text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.14%)</title><rect x="76.6" y="1045" width="1.7" height="15.0" fill="rgb(212,225,10)" rx="2" ry="2" />
<text  x="79.60" y="1055.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (562 samples, 81.33%)</title><rect x="139.8" y="1637" width="959.7" height="15.0" fill="rgb(235,113,8)" rx="2" ry="2" />
<text  x="142.78" y="1647.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (7 samples, 1.01%)</title><rect x="59.5" y="517" width="12.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="62.52" y="527.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (7 samples, 1.01%)</title><rect x="612.8" y="1509" width="12.0" height="15.0" fill="rgb(252,197,1)" rx="2" ry="2" />
<text  x="615.81" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (5 samples, 0.72%)</title><rect x="51.0" y="421" width="8.5" height="15.0" fill="rgb(220,186,19)" rx="2" ry="2" />
<text  x="53.98" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="30.5" y="277" width="1.7" height="15.0" fill="rgb(240,193,0)" rx="2" ry="2" />
<text  x="33.49" y="287.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.14%)</title><rect x="809.2" y="1541" width="1.7" height="15.0" fill="rgb(249,176,8)" rx="2" ry="2" />
<text  x="812.19" y="1551.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="1043.1" y="1541" width="1.7" height="15.0" fill="rgb(216,60,51)" rx="2" ry="2" />
<text  x="1046.14" y="1551.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.14%)</title><rect x="35.6" y="277" width="1.7" height="15.0" fill="rgb(209,68,31)" rx="2" ry="2" />
<text  x="38.62" y="287.5" ></text>
</g>
<g >
<title>database::apply_in_memory (4 samples, 0.58%)</title><rect x="1055.1" y="1525" width="6.8" height="15.0" fill="rgb(223,222,20)" rx="2" ry="2" />
<text  x="1058.09" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (1 samples, 0.14%)</title><rect x="57.8" y="325" width="1.7" height="15.0" fill="rgb(212,215,17)" rx="2" ry="2" />
<text  x="60.81" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::raw::cf_statement::keyspace (1 samples, 0.14%)</title><rect x="61.2" y="373" width="1.7" height="15.0" fill="rgb(207,144,34)" rx="2" ry="2" />
<text  x="64.23" y="383.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="875.8" y="1525" width="1.7" height="15.0" fill="rgb(236,2,0)" rx="2" ry="2" />
<text  x="878.79" y="1535.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.14%)</title><rect x="464.2" y="1509" width="1.7" height="15.0" fill="rgb(213,137,54)" rx="2" ry="2" />
<text  x="467.24" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1637" width="68.3" height="15.0" fill="rgb(245,144,17)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" >[unknown]</text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (6 samples, 0.87%)</title><rect x="1015.8" y="1445" width="10.3" height="15.0" fill="rgb(248,83,20)" rx="2" ry="2" />
<text  x="1018.82" y="1455.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.14%)</title><rect x="372.0" y="1445" width="1.7" height="15.0" fill="rgb(237,11,3)" rx="2" ry="2" />
<text  x="375.03" y="1455.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (5 samples, 0.72%)</title><rect x="822.9" y="1589" width="8.5" height="15.0" fill="rgb(208,117,4)" rx="2" ry="2" />
<text  x="825.85" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.14%)</title><rect x="57.8" y="165" width="1.7" height="15.0" fill="rgb(211,175,13)" rx="2" ry="2" />
<text  x="60.81" y="175.5" ></text>
</g>
<g >
<title>__start_context (14 samples, 2.03%)</title><rect x="97.1" y="1717" width="23.9" height="15.0" fill="rgb(218,208,49)" rx="2" ry="2" />
<text  x="100.09" y="1727.5" >_..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reallocate_map (1 samples, 0.14%)</title><rect x="16.8" y="181" width="1.7" height="15.0" fill="rgb(217,212,52)" rx="2" ry="2" />
<text  x="19.83" y="191.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="32.2" y="245" width="1.7" height="15.0" fill="rgb(216,37,5)" rx="2" ry="2" />
<text  x="35.20" y="255.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.14%)</title><rect x="394.2" y="1525" width="1.7" height="15.0" fill="rgb(248,31,18)" rx="2" ry="2" />
<text  x="397.23" y="1535.5" ></text>
</g>
<g >
<title>row::~row (2 samples, 0.29%)</title><rect x="409.6" y="1509" width="3.4" height="15.0" fill="rgb(224,41,37)" rx="2" ry="2" />
<text  x="412.59" y="1519.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (7 samples, 1.01%)</title><rect x="749.4" y="1557" width="12.0" height="15.0" fill="rgb(250,141,21)" rx="2" ry="2" />
<text  x="752.42" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1237" width="68.3" height="15.0" fill="rgb(211,11,43)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="1125" width="64.9" height="15.0" fill="rgb(213,125,45)" rx="2" ry="2" />
<text  x="13.00" y="1135.5" >[unknown]</text>
</g>
<g >
<title>mutation_fragment::destroy_data (2 samples, 0.29%)</title><rect x="409.6" y="1525" width="3.4" height="15.0" fill="rgb(210,107,26)" rx="2" ry="2" />
<text  x="412.59" y="1535.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (7 samples, 1.01%)</title><rect x="351.5" y="1381" width="12.0" height="15.0" fill="rgb(205,83,39)" rx="2" ry="2" />
<text  x="354.53" y="1391.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (22 samples, 3.18%)</title><rect x="11.7" y="373" width="37.6" height="15.0" fill="rgb(238,148,20)" rx="2" ry="2" />
<text  x="14.71" y="383.5" >sea..</text>
</g>
<g >
<title>create_partitions (11 samples, 1.59%)</title><rect x="78.3" y="1621" width="18.8" height="15.0" fill="rgb(224,3,39)" rx="2" ry="2" />
<text  x="81.31" y="1631.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.14%)</title><rect x="76.6" y="1029" width="1.7" height="15.0" fill="rgb(252,27,38)" rx="2" ry="2" />
<text  x="79.60" y="1039.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.14%)</title><rect x="980.0" y="1333" width="1.7" height="15.0" fill="rgb(215,179,37)" rx="2" ry="2" />
<text  x="982.96" y="1343.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="93.7" y="1541" width="1.7" height="15.0" fill="rgb(238,24,45)" rx="2" ry="2" />
<text  x="96.68" y="1551.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.29%)</title><rect x="409.6" y="1493" width="3.4" height="15.0" fill="rgb(235,22,48)" rx="2" ry="2" />
<text  x="412.59" y="1503.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (5 samples, 0.72%)</title><rect x="51.0" y="453" width="8.5" height="15.0" fill="rgb(211,2,32)" rx="2" ry="2" />
<text  x="53.98" y="463.5" ></text>
</g>
<g >
<title>table::apply (4 samples, 0.58%)</title><rect x="1055.1" y="1509" width="6.8" height="15.0" fill="rgb(239,7,0)" rx="2" ry="2" />
<text  x="1058.09" y="1519.5" ></text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.14%)</title><rect x="129.5" y="1653" width="1.7" height="15.0" fill="rgb(237,199,1)" rx="2" ry="2" />
<text  x="132.54" y="1663.5" ></text>
</g>
<g >
<title>database::has_keyspace (2 samples, 0.29%)</title><rect x="812.6" y="1573" width="3.4" height="15.0" fill="rgb(225,72,2)" rx="2" ry="2" />
<text  x="815.60" y="1583.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="904.8" y="1493" width="3.4" height="15.0" fill="rgb(233,81,17)" rx="2" ry="2" />
<text  x="907.82" y="1503.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.14%)</title><rect x="590.6" y="1493" width="1.7" height="15.0" fill="rgb(222,195,27)" rx="2" ry="2" />
<text  x="593.61" y="1503.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.58%)</title><rect x="344.7" y="1381" width="6.8" height="15.0" fill="rgb(208,77,18)" rx="2" ry="2" />
<text  x="347.70" y="1391.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (37 samples, 5.35%)</title><rect x="308.8" y="1445" width="63.2" height="15.0" fill="rgb(253,52,46)" rx="2" ry="2" />
<text  x="311.84" y="1455.5" >partit..</text>
</g>
<g >
<title>cql3_parser::CqlParser::value (1 samples, 0.14%)</title><rect x="119.3" y="1445" width="1.7" height="15.0" fill="rgb(233,120,37)" rx="2" ry="2" />
<text  x="122.29" y="1455.5" ></text>
</g>
<g >
<title>main (565 samples, 81.77%)</title><rect x="136.4" y="1733" width="964.8" height="15.0" fill="rgb(237,188,49)" rx="2" ry="2" />
<text  x="139.37" y="1743.5" >main</text>
</g>
<g >
<title>operator delete (3 samples, 0.43%)</title><rect x="510.3" y="1493" width="5.2" height="15.0" fill="rgb(221,224,26)" rx="2" ry="2" />
<text  x="513.35" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (36 samples, 5.21%)</title><rect x="10.0" y="581" width="61.5" height="15.0" fill="rgb(248,154,11)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >[unkno..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.14%)</title><rect x="74.9" y="1141" width="1.7" height="15.0" fill="rgb(221,2,39)" rx="2" ry="2" />
<text  x="77.89" y="1151.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.29%)</title><rect x="39.0" y="165" width="3.4" height="15.0" fill="rgb(215,126,15)" rx="2" ry="2" />
<text  x="42.03" y="175.5" ></text>
</g>
<g >
<title>table::set_hit_rate (3 samples, 0.43%)</title><rect x="713.6" y="1589" width="5.1" height="15.0" fill="rgb(249,24,38)" rx="2" ry="2" />
<text  x="716.56" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (24 samples, 3.47%)</title><rect x="10.0" y="485" width="41.0" height="15.0" fill="rgb(213,216,17)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >std..</text>
</g>
<g >
<title>flat_mutation_reader::peek (89 samples, 12.88%)</title><rect x="244.0" y="1557" width="151.9" height="15.0" fill="rgb(220,113,12)" rx="2" ry="2" />
<text  x="246.95" y="1567.5" >flat_mutation_reade..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.14%)</title><rect x="35.6" y="149" width="1.7" height="15.0" fill="rgb(224,52,27)" rx="2" ry="2" />
<text  x="38.62" y="159.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (8 samples, 1.16%)</title><rect x="97.1" y="1461" width="13.7" height="15.0" fill="rgb(212,225,20)" rx="2" ry="2" />
<text  x="100.09" y="1471.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="1044.8" y="1541" width="1.8" height="15.0" fill="rgb(205,136,17)" rx="2" ry="2" />
<text  x="1047.85" y="1551.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (2 samples, 0.29%)</title><rect x="648.7" y="1621" width="3.4" height="15.0" fill="rgb(251,93,1)" rx="2" ry="2" />
<text  x="651.67" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="885" width="64.9" height="15.0" fill="rgb(240,35,51)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="1093" width="64.9" height="15.0" fill="rgb(234,76,37)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1269" width="68.3" height="15.0" fill="rgb(229,159,41)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" >[unknown]</text>
</g>
<g >
<title>single_node_cql_env::execute_cql (11 samples, 1.59%)</title><rect x="78.3" y="1605" width="18.8" height="15.0" fill="rgb(230,13,18)" rx="2" ry="2" />
<text  x="81.31" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (7 samples, 1.01%)</title><rect x="35.6" y="309" width="12.0" height="15.0" fill="rgb(221,115,32)" rx="2" ry="2" />
<text  x="38.62" y="319.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (7 samples, 1.01%)</title><rect x="59.5" y="549" width="12.0" height="15.0" fill="rgb(234,22,26)" rx="2" ry="2" />
<text  x="62.52" y="559.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.29%)</title><rect x="155.2" y="1621" width="3.4" height="15.0" fill="rgb(248,63,21)" rx="2" ry="2" />
<text  x="158.15" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="112.5" y="1445" width="1.7" height="15.0" fill="rgb(228,21,18)" rx="2" ry="2" />
<text  x="115.46" y="1455.5" ></text>
</g>
<g >
<title>partition_entry::read (2 samples, 0.29%)</title><rect x="604.3" y="1509" width="3.4" height="15.0" fill="rgb(210,98,53)" rx="2" ry="2" />
<text  x="607.27" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.14%)</title><rect x="846.8" y="1541" width="1.7" height="15.0" fill="rgb(236,150,0)" rx="2" ry="2" />
<text  x="849.76" y="1551.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (82 samples, 11.87%)</title><rect x="891.2" y="1541" width="140.0" height="15.0" fill="rgb(232,166,0)" rx="2" ry="2" />
<text  x="894.16" y="1551.5" >cql3::statements:..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="974.8" y="1349" width="1.7" height="15.0" fill="rgb(216,201,5)" rx="2" ry="2" />
<text  x="977.83" y="1359.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (7 samples, 1.01%)</title><rect x="749.4" y="1541" width="12.0" height="15.0" fill="rgb(212,81,52)" rx="2" ry="2" />
<text  x="752.42" y="1551.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (15 samples, 2.17%)</title><rect x="652.1" y="1621" width="25.6" height="15.0" fill="rgb(218,213,51)" rx="2" ry="2" />
<text  x="655.08" y="1631.5" >s..</text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="597" width="64.9" height="15.0" fill="rgb(210,119,51)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.14%)</title><rect x="98.8" y="1253" width="1.7" height="15.0" fill="rgb(250,57,48)" rx="2" ry="2" />
<text  x="101.80" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="917" width="64.9" height="15.0" fill="rgb(225,141,29)" rx="2" ry="2" />
<text  x="13.00" y="927.5" >[unknown]</text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (55 samples, 7.96%)</title><rect x="728.9" y="1605" width="94.0" height="15.0" fill="rgb(251,10,31)" rx="2" ry="2" />
<text  x="731.93" y="1615.5" >single_node..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (131 samples, 18.96%)</title><rect x="831.4" y="1589" width="223.7" height="15.0" fill="rgb(210,125,27)" rx="2" ry="2" />
<text  x="834.39" y="1599.5" >seastar::noncopyable_function..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (8 samples, 1.16%)</title><rect x="477.9" y="1493" width="13.7" height="15.0" fill="rgb(243,171,10)" rx="2" ry="2" />
<text  x="480.90" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="1029" width="64.9" height="15.0" fill="rgb(216,138,40)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" >[unknown]</text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (12 samples, 1.74%)</title><rect x="785.3" y="1509" width="20.5" height="15.0" fill="rgb(245,145,54)" rx="2" ry="2" />
<text  x="788.28" y="1519.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (22 samples, 3.18%)</title><rect x="11.7" y="437" width="37.6" height="15.0" fill="rgb(249,91,24)" rx="2" ry="2" />
<text  x="14.71" y="447.5" >sin..</text>
</g>
<g >
<title>single_node_cql_env::execute_cql (2 samples, 0.29%)</title><rect x="71.5" y="485" width="3.4" height="15.0" fill="rgb(225,144,41)" rx="2" ry="2" />
<text  x="74.48" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="57.8" y="85" width="1.7" height="15.0" fill="rgb(229,25,46)" rx="2" ry="2" />
<text  x="60.81" y="95.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1493" width="68.3" height="15.0" fill="rgb(238,208,33)" rx="2" ry="2" />
<text  x="13.00" y="1503.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="97.1" y="1413" width="1.7" height="15.0" fill="rgb(219,85,52)" rx="2" ry="2" />
<text  x="100.09" y="1423.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (145 samples, 20.98%)</title><rect x="822.9" y="1621" width="247.6" height="15.0" fill="rgb(246,90,16)" rx="2" ry="2" />
<text  x="825.85" y="1631.5" >seastar::lambda_task&lt;seastar::ex..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="124.4" y="1637" width="1.7" height="15.0" fill="rgb(240,148,11)" rx="2" ry="2" />
<text  x="127.41" y="1647.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (33 samples, 4.78%)</title><rect x="553.0" y="1525" width="56.4" height="15.0" fill="rgb(217,108,18)" rx="2" ry="2" />
<text  x="556.04" y="1535.5" >memta..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="35.6" y="213" width="1.7" height="15.0" fill="rgb(219,62,9)" rx="2" ry="2" />
<text  x="38.62" y="223.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.14%)</title><rect x="100.5" y="1413" width="1.7" height="15.0" fill="rgb(224,219,21)" rx="2" ry="2" />
<text  x="103.51" y="1423.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (2 samples, 0.29%)</title><rect x="121.0" y="1701" width="3.4" height="15.0" fill="rgb(227,175,41)" rx="2" ry="2" />
<text  x="124.00" y="1711.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (2 samples, 0.29%)</title><rect x="88.6" y="1461" width="3.4" height="15.0" fill="rgb(233,18,21)" rx="2" ry="2" />
<text  x="91.55" y="1471.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.14%)</title><rect x="124.4" y="1669" width="1.7" height="15.0" fill="rgb(254,71,2)" rx="2" ry="2" />
<text  x="127.41" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="103.9" y="1397" width="3.4" height="15.0" fill="rgb(234,198,35)" rx="2" ry="2" />
<text  x="106.92" y="1407.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (6 samples, 0.87%)</title><rect x="863.8" y="1525" width="10.3" height="15.0" fill="rgb(236,178,53)" rx="2" ry="2" />
<text  x="866.84" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (6 samples, 0.87%)</title><rect x="18.5" y="229" width="10.3" height="15.0" fill="rgb(238,101,37)" rx="2" ry="2" />
<text  x="21.54" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (5 samples, 0.72%)</title><rect x="51.0" y="373" width="8.5" height="15.0" fill="rgb(238,189,28)" rx="2" ry="2" />
<text  x="53.98" y="383.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (5 samples, 0.72%)</title><rect x="62.9" y="421" width="8.6" height="15.0" fill="rgb(213,203,34)" rx="2" ry="2" />
<text  x="65.94" y="431.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (5 samples, 0.72%)</title><rect x="518.9" y="1541" width="8.5" height="15.0" fill="rgb(233,92,46)" rx="2" ry="2" />
<text  x="521.89" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (11 samples, 1.59%)</title><rect x="11.7" y="277" width="18.8" height="15.0" fill="rgb(246,45,13)" rx="2" ry="2" />
<text  x="14.71" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.14%)</title><rect x="491.6" y="1525" width="1.7" height="15.0" fill="rgb(223,203,26)" rx="2" ry="2" />
<text  x="494.56" y="1535.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.14%)</title><rect x="848.5" y="1541" width="1.7" height="15.0" fill="rgb(224,213,44)" rx="2" ry="2" />
<text  x="851.47" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="949" width="64.9" height="15.0" fill="rgb(254,41,24)" rx="2" ry="2" />
<text  x="13.00" y="959.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.14%)</title><rect x="35.6" y="229" width="1.7" height="15.0" fill="rgb(221,52,16)" rx="2" ry="2" />
<text  x="38.62" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="397.6" y="1525" width="5.2" height="15.0" fill="rgb(242,147,45)" rx="2" ry="2" />
<text  x="400.64" y="1535.5" ></text>
</g>
<g >
<title>do_cql_test (2 samples, 0.29%)</title><rect x="71.5" y="517" width="3.4" height="15.0" fill="rgb(243,7,41)" rx="2" ry="2" />
<text  x="74.48" y="527.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1205" width="68.3" height="15.0" fill="rgb(252,7,48)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.58%)</title><rect x="940.7" y="1429" width="6.8" height="15.0" fill="rgb(239,87,0)" rx="2" ry="2" />
<text  x="943.68" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="629" width="64.9" height="15.0" fill="rgb(213,68,49)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.14%)</title><rect x="119.3" y="1397" width="1.7" height="15.0" fill="rgb(232,148,32)" rx="2" ry="2" />
<text  x="122.29" y="1407.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (5 samples, 0.72%)</title><rect x="973.1" y="1381" width="8.6" height="15.0" fill="rgb(252,29,2)" rx="2" ry="2" />
<text  x="976.13" y="1391.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="792.1" y="1461" width="1.7" height="15.0" fill="rgb(208,11,0)" rx="2" ry="2" />
<text  x="795.11" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="117.6" y="1397" width="1.7" height="15.0" fill="rgb(223,189,50)" rx="2" ry="2" />
<text  x="120.58" y="1407.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="16.8" y="117" width="1.7" height="15.0" fill="rgb(249,108,49)" rx="2" ry="2" />
<text  x="19.83" y="127.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (1 samples, 0.14%)</title><rect x="83.4" y="1461" width="1.7" height="15.0" fill="rgb(218,67,38)" rx="2" ry="2" />
<text  x="86.43" y="1471.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.14%)</title><rect x="39.0" y="101" width="1.7" height="15.0" fill="rgb(242,137,40)" rx="2" ry="2" />
<text  x="42.03" y="111.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="983.4" y="1397" width="3.4" height="15.0" fill="rgb(235,146,5)" rx="2" ry="2" />
<text  x="986.37" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.14%)</title><rect x="27.1" y="181" width="1.7" height="15.0" fill="rgb(217,222,36)" rx="2" ry="2" />
<text  x="30.08" y="191.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.14%)</title><rect x="117.6" y="1445" width="1.7" height="15.0" fill="rgb(244,11,2)" rx="2" ry="2" />
<text  x="120.58" y="1455.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (2 samples, 0.29%)</title><rect x="978.2" y="1349" width="3.5" height="15.0" fill="rgb(226,186,5)" rx="2" ry="2" />
<text  x="981.25" y="1359.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (1 samples, 0.14%)</title><rect x="153.4" y="1589" width="1.8" height="15.0" fill="rgb(224,19,51)" rx="2" ry="2" />
<text  x="156.44" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="117.6" y="1413" width="1.7" height="15.0" fill="rgb(251,71,13)" rx="2" ry="2" />
<text  x="120.58" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="15.1" y="133" width="1.7" height="15.0" fill="rgb(253,190,52)" rx="2" ry="2" />
<text  x="18.12" y="143.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.14%)</title><rect x="73.2" y="277" width="1.7" height="15.0" fill="rgb(230,138,24)" rx="2" ry="2" />
<text  x="76.18" y="287.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (5 samples, 0.72%)</title><rect x="214.9" y="1573" width="8.6" height="15.0" fill="rgb(249,220,16)" rx="2" ry="2" />
<text  x="217.92" y="1583.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.58%)</title><rect x="732.3" y="1557" width="6.9" height="15.0" fill="rgb(245,121,14)" rx="2" ry="2" />
<text  x="735.34" y="1567.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (565 samples, 81.77%)</title><rect x="136.4" y="1685" width="964.8" height="15.0" fill="rgb(208,81,31)" rx="2" ry="2" />
<text  x="139.37" y="1695.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>__start_context (5 samples, 0.72%)</title><rect x="51.0" y="549" width="8.5" height="15.0" fill="rgb(246,114,41)" rx="2" ry="2" />
<text  x="53.98" y="559.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (5 samples, 0.72%)</title><rect x="822.9" y="1541" width="8.5" height="15.0" fill="rgb(246,94,44)" rx="2" ry="2" />
<text  x="825.85" y="1551.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_aggregate_statement, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="47.6" y="293" width="1.7" height="15.0" fill="rgb(208,76,24)" rx="2" ry="2" />
<text  x="50.57" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.14%)</title><rect x="684.5" y="1605" width="1.7" height="15.0" fill="rgb(220,14,6)" rx="2" ry="2" />
<text  x="687.53" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1445" width="68.3" height="15.0" fill="rgb(232,225,20)" rx="2" ry="2" />
<text  x="13.00" y="1455.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::evaluate (2 samples, 0.29%)</title><rect x="857.0" y="1445" width="3.4" height="15.0" fill="rgb(216,199,19)" rx="2" ry="2" />
<text  x="860.00" y="1455.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.14%)</title><rect x="821.1" y="1557" width="1.8" height="15.0" fill="rgb(221,87,50)" rx="2" ry="2" />
<text  x="824.14" y="1567.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.14%)</title><rect x="98.8" y="1269" width="1.7" height="15.0" fill="rgb(208,99,34)" rx="2" ry="2" />
<text  x="101.80" y="1279.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.58%)</title><rect x="1055.1" y="1589" width="6.8" height="15.0" fill="rgb(244,165,33)" rx="2" ry="2" />
<text  x="1058.09" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.58%)</title><rect x="1055.1" y="1573" width="6.8" height="15.0" fill="rgb(214,125,25)" rx="2" ry="2" />
<text  x="1058.09" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.58%)</title><rect x="64.6" y="405" width="6.9" height="15.0" fill="rgb(217,168,5)" rx="2" ry="2" />
<text  x="67.65" y="415.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="1141" width="64.9" height="15.0" fill="rgb(227,59,52)" rx="2" ry="2" />
<text  x="13.00" y="1151.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.14%)</title><rect x="103.9" y="1365" width="1.7" height="15.0" fill="rgb(254,119,17)" rx="2" ry="2" />
<text  x="106.92" y="1375.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (6 samples, 0.87%)</title><rect x="708.4" y="1605" width="10.3" height="15.0" fill="rgb(211,215,13)" rx="2" ry="2" />
<text  x="711.44" y="1615.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (10 samples, 1.45%)</title><rect x="703.3" y="1621" width="17.1" height="15.0" fill="rgb(251,53,41)" rx="2" ry="2" />
<text  x="706.31" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (3 samples, 0.43%)</title><rect x="52.7" y="245" width="5.1" height="15.0" fill="rgb(237,199,19)" rx="2" ry="2" />
<text  x="55.69" y="255.5" ></text>
</g>
<g >
<title>create_partitions (23 samples, 3.33%)</title><rect x="10.0" y="453" width="39.3" height="15.0" fill="rgb(215,225,2)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >cre..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="57.8" y="261" width="1.7" height="15.0" fill="rgb(207,221,25)" rx="2" ry="2" />
<text  x="60.81" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.14%)</title><rect x="44.2" y="245" width="1.7" height="15.0" fill="rgb(241,2,28)" rx="2" ry="2" />
<text  x="47.15" y="255.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_Head_base (1 samples, 0.14%)</title><rect x="105.6" y="1285" width="1.7" height="15.0" fill="rgb(211,219,27)" rx="2" ry="2" />
<text  x="108.63" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="1173" width="64.9" height="15.0" fill="rgb(244,19,54)" rx="2" ry="2" />
<text  x="13.00" y="1183.5" >[unknown]</text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.14%)</title><rect x="1099.5" y="1669" width="1.7" height="15.0" fill="rgb(245,1,42)" rx="2" ry="2" />
<text  x="1102.49" y="1679.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.14%)</title><rect x="363.5" y="1381" width="1.7" height="15.0" fill="rgb(249,25,40)" rx="2" ry="2" />
<text  x="366.49" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.14%)</title><rect x="97.1" y="1237" width="1.7" height="15.0" fill="rgb(229,0,7)" rx="2" ry="2" />
<text  x="100.09" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.14%)</title><rect x="103.9" y="1205" width="1.7" height="15.0" fill="rgb(235,135,54)" rx="2" ry="2" />
<text  x="106.92" y="1215.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.14%)</title><rect x="42.4" y="245" width="1.8" height="15.0" fill="rgb(230,11,42)" rx="2" ry="2" />
<text  x="45.45" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.14%)</title><rect x="370.3" y="1349" width="1.7" height="15.0" fill="rgb(251,175,22)" rx="2" ry="2" />
<text  x="373.32" y="1359.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (1 samples, 0.14%)</title><rect x="126.1" y="1621" width="1.7" height="15.0" fill="rgb(251,179,4)" rx="2" ry="2" />
<text  x="129.12" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.14%)</title><rect x="45.9" y="229" width="1.7" height="15.0" fill="rgb(216,201,18)" rx="2" ry="2" />
<text  x="48.86" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.29%)</title><rect x="416.4" y="1509" width="3.4" height="15.0" fill="rgb(225,203,24)" rx="2" ry="2" />
<text  x="419.43" y="1519.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="696.5" y="1605" width="1.7" height="15.0" fill="rgb(235,204,31)" rx="2" ry="2" />
<text  x="699.48" y="1615.5" ></text>
</g>
<g >
<title>query::querier_base::close (19 samples, 2.75%)</title><rect x="495.0" y="1573" width="32.4" height="15.0" fill="rgb(226,207,49)" rx="2" ry="2" />
<text  x="497.98" y="1583.5" >qu..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="98.8" y="1381" width="1.7" height="15.0" fill="rgb(254,185,44)" rx="2" ry="2" />
<text  x="101.80" y="1391.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.14%)</title><rect x="570.1" y="1509" width="1.7" height="15.0" fill="rgb(220,190,21)" rx="2" ry="2" />
<text  x="573.12" y="1519.5" ></text>
</g>
<g >
<title>TLS init function for seastar::testing::local_random_engine (1 samples, 0.14%)</title><rect x="141.5" y="1621" width="1.7" height="15.0" fill="rgb(226,211,4)" rx="2" ry="2" />
<text  x="144.49" y="1631.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.14%)</title><rect x="578.7" y="1509" width="1.7" height="15.0" fill="rgb(228,84,15)" rx="2" ry="2" />
<text  x="581.65" y="1519.5" ></text>
</g>
<g >
<title>row_cache::make_reader (8 samples, 1.16%)</title><rect x="611.1" y="1525" width="13.7" height="15.0" fill="rgb(207,40,35)" rx="2" ry="2" />
<text  x="614.10" y="1535.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.14%)</title><rect x="49.3" y="453" width="1.7" height="15.0" fill="rgb(240,165,6)" rx="2" ry="2" />
<text  x="52.28" y="463.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="693" width="64.9" height="15.0" fill="rgb(250,18,32)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >[unknown]</text>
</g>
<g >
<title>query::querier&lt; (154 samples, 22.29%)</title><rect x="232.0" y="1573" width="263.0" height="15.0" fill="rgb(251,85,46)" rx="2" ry="2" />
<text  x="235.00" y="1583.5" >query::querier&lt;</text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (1 samples, 0.14%)</title><rect x="57.8" y="309" width="1.7" height="15.0" fill="rgb(247,91,2)" rx="2" ry="2" />
<text  x="60.81" y="319.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.14%)</title><rect x="1068.8" y="1461" width="1.7" height="15.0" fill="rgb(230,54,25)" rx="2" ry="2" />
<text  x="1071.76" y="1471.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (2 samples, 0.29%)</title><rect x="1038.0" y="1541" width="3.4" height="15.0" fill="rgb(214,58,17)" rx="2" ry="2" />
<text  x="1041.02" y="1551.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (4 samples, 0.58%)</title><rect x="1019.2" y="1413" width="6.9" height="15.0" fill="rgb(214,46,11)" rx="2" ry="2" />
<text  x="1022.23" y="1423.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (2 samples, 0.29%)</title><rect x="956.0" y="1413" width="3.5" height="15.0" fill="rgb(219,138,9)" rx="2" ry="2" />
<text  x="959.05" y="1423.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (7 samples, 1.01%)</title><rect x="851.9" y="1525" width="11.9" height="15.0" fill="rgb(213,176,30)" rx="2" ry="2" />
<text  x="854.88" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::~unique_ptr (1 samples, 0.14%)</title><rect x="56.1" y="101" width="1.7" height="15.0" fill="rgb(243,144,29)" rx="2" ry="2" />
<text  x="59.11" y="111.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (3 samples, 0.43%)</title><rect x="1063.6" y="1461" width="5.2" height="15.0" fill="rgb(227,4,8)" rx="2" ry="2" />
<text  x="1066.63" y="1471.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (5 samples, 0.72%)</title><rect x="51.0" y="341" width="8.5" height="15.0" fill="rgb(205,150,1)" rx="2" ry="2" />
<text  x="53.98" y="351.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (3 samples, 0.43%)</title><rect x="817.7" y="1573" width="5.2" height="15.0" fill="rgb(227,157,46)" rx="2" ry="2" />
<text  x="820.73" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1413" width="68.3" height="15.0" fill="rgb(223,135,8)" rx="2" ry="2" />
<text  x="13.00" y="1423.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="97.1" y="1205" width="1.7" height="15.0" fill="rgb(247,148,3)" rx="2" ry="2" />
<text  x="100.09" y="1215.5" ></text>
</g>
<g >
<title>mutation_querier::consume (24 samples, 3.47%)</title><rect x="421.5" y="1509" width="41.0" height="15.0" fill="rgb(229,60,50)" rx="2" ry="2" />
<text  x="424.55" y="1519.5" >mut..</text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="223.5" y="1573" width="1.7" height="15.0" fill="rgb(240,195,43)" rx="2" ry="2" />
<text  x="226.46" y="1583.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.14%)</title><rect x="382.3" y="1445" width="1.7" height="15.0" fill="rgb(210,210,29)" rx="2" ry="2" />
<text  x="385.27" y="1455.5" ></text>
</g>
<g >
<title>memtable::apply (4 samples, 0.58%)</title><rect x="1055.1" y="1493" width="6.8" height="15.0" fill="rgb(250,109,39)" rx="2" ry="2" />
<text  x="1058.09" y="1503.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.14%)</title><rect x="968.0" y="1381" width="1.7" height="15.0" fill="rgb(231,165,32)" rx="2" ry="2" />
<text  x="971.00" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.14%)</title><rect x="13.4" y="133" width="1.7" height="15.0" fill="rgb(249,72,15)" rx="2" ry="2" />
<text  x="16.42" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.14%)</title><rect x="103.9" y="1333" width="1.7" height="15.0" fill="rgb(226,213,48)" rx="2" ry="2" />
<text  x="106.92" y="1343.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (3 samples, 0.43%)</title><rect x="185.9" y="1589" width="5.1" height="15.0" fill="rgb(211,190,43)" rx="2" ry="2" />
<text  x="188.89" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (7 samples, 1.01%)</title><rect x="35.6" y="293" width="12.0" height="15.0" fill="rgb(235,76,21)" rx="2" ry="2" />
<text  x="38.62" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="1034.6" y="1493" width="3.4" height="15.0" fill="rgb(229,66,43)" rx="2" ry="2" />
<text  x="1037.60" y="1503.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (5 samples, 0.72%)</title><rect x="1061.9" y="1541" width="8.6" height="15.0" fill="rgb(230,88,3)" rx="2" ry="2" />
<text  x="1064.92" y="1551.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (1 samples, 0.14%)</title><rect x="1067.0" y="1381" width="1.8" height="15.0" fill="rgb(214,104,6)" rx="2" ry="2" />
<text  x="1070.05" y="1391.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (1 samples, 0.14%)</title><rect x="115.9" y="1461" width="1.7" height="15.0" fill="rgb(206,25,4)" rx="2" ry="2" />
<text  x="118.88" y="1471.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (1 samples, 0.14%)</title><rect x="126.1" y="1669" width="1.7" height="15.0" fill="rgb(241,176,31)" rx="2" ry="2" />
<text  x="129.12" y="1679.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (1 samples, 0.14%)</title><rect x="991.9" y="1477" width="1.7" height="15.0" fill="rgb(206,53,39)" rx="2" ry="2" />
<text  x="994.91" y="1487.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.58%)</title><rect x="940.7" y="1445" width="6.8" height="15.0" fill="rgb(237,193,2)" rx="2" ry="2" />
<text  x="943.68" y="1455.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="69.8" y="325" width="1.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="72.77" y="335.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.14%)</title><rect x="874.1" y="1525" width="1.7" height="15.0" fill="rgb(215,137,48)" rx="2" ry="2" />
<text  x="877.08" y="1535.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="590.6" y="1477" width="1.7" height="15.0" fill="rgb(218,64,7)" rx="2" ry="2" />
<text  x="593.61" y="1487.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.14%)</title><rect x="826.3" y="1445" width="1.7" height="15.0" fill="rgb(225,29,25)" rx="2" ry="2" />
<text  x="829.27" y="1455.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (272 samples, 39.36%)</title><rect x="167.1" y="1621" width="464.5" height="15.0" fill="rgb(240,47,38)" rx="2" ry="2" />
<text  x="170.11" y="1631.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.14%)</title><rect x="105.6" y="1317" width="1.7" height="15.0" fill="rgb(234,44,50)" rx="2" ry="2" />
<text  x="108.63" y="1327.5" ></text>
</g>
<g >
<title>do_cql_test (11 samples, 1.59%)</title><rect x="78.3" y="1637" width="18.8" height="15.0" fill="rgb(209,200,18)" rx="2" ry="2" />
<text  x="81.31" y="1647.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="739.2" y="1589" width="1.7" height="15.0" fill="rgb(237,176,52)" rx="2" ry="2" />
<text  x="742.18" y="1599.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.14%)</title><rect x="935.6" y="1461" width="1.7" height="15.0" fill="rgb(220,138,27)" rx="2" ry="2" />
<text  x="938.56" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="57.8" y="37" width="1.7" height="15.0" fill="rgb(251,122,29)" rx="2" ry="2" />
<text  x="60.81" y="47.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (12 samples, 1.74%)</title><rect x="269.6" y="1493" width="20.5" height="15.0" fill="rgb(221,186,14)" rx="2" ry="2" />
<text  x="272.57" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.14%)</title><rect x="45.9" y="181" width="1.7" height="15.0" fill="rgb(254,41,46)" rx="2" ry="2" />
<text  x="48.86" y="191.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (2 samples, 0.29%)</title><rect x="88.6" y="1477" width="3.4" height="15.0" fill="rgb(222,215,9)" rx="2" ry="2" />
<text  x="91.55" y="1487.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.14%)</title><rect x="781.9" y="1509" width="1.7" height="15.0" fill="rgb(237,83,39)" rx="2" ry="2" />
<text  x="784.87" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (7 samples, 1.01%)</title><rect x="59.5" y="437" width="12.0" height="15.0" fill="rgb(214,15,4)" rx="2" ry="2" />
<text  x="62.52" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (14 samples, 2.03%)</title><rect x="97.1" y="1525" width="23.9" height="15.0" fill="rgb(205,17,15)" rx="2" ry="2" />
<text  x="100.09" y="1535.5" >c..</text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (6 samples, 0.87%)</title><rect x="83.4" y="1525" width="10.3" height="15.0" fill="rgb(213,219,28)" rx="2" ry="2" />
<text  x="86.43" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.14%)</title><rect x="585.5" y="1493" width="1.7" height="15.0" fill="rgb(232,161,28)" rx="2" ry="2" />
<text  x="588.48" y="1503.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (2 samples, 0.29%)</title><rect x="121.0" y="1733" width="3.4" height="15.0" fill="rgb(243,218,12)" rx="2" ry="2" />
<text  x="124.00" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="57.8" y="53" width="1.7" height="15.0" fill="rgb(226,24,12)" rx="2" ry="2" />
<text  x="60.81" y="63.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="682.8" y="1605" width="1.7" height="15.0" fill="rgb(214,171,7)" rx="2" ry="2" />
<text  x="685.82" y="1615.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.14%)</title><rect x="126.1" y="1685" width="1.7" height="15.0" fill="rgb(217,159,54)" rx="2" ry="2" />
<text  x="129.12" y="1695.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="384.0" y="1509" width="3.4" height="15.0" fill="rgb(254,144,27)" rx="2" ry="2" />
<text  x="386.98" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1349" width="68.3" height="15.0" fill="rgb(254,129,21)" rx="2" ry="2" />
<text  x="13.00" y="1359.5" >[unknown]</text>
</g>
<g >
<title>row::compact_and_expire (9 samples, 1.30%)</title><rect x="476.2" y="1525" width="15.4" height="15.0" fill="rgb(229,46,10)" rx="2" ry="2" />
<text  x="479.19" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.14%)</title><rect x="387.4" y="1509" width="1.7" height="15.0" fill="rgb(240,23,22)" rx="2" ry="2" />
<text  x="390.40" y="1519.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.58%)</title><rect x="146.6" y="1589" width="6.8" height="15.0" fill="rgb(243,121,40)" rx="2" ry="2" />
<text  x="149.61" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="69.8" y="357" width="1.7" height="15.0" fill="rgb(245,168,26)" rx="2" ry="2" />
<text  x="72.77" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.14%)</title><rect x="117.6" y="1285" width="1.7" height="15.0" fill="rgb(253,141,36)" rx="2" ry="2" />
<text  x="120.58" y="1295.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="1082.4" y="1589" width="1.7" height="15.0" fill="rgb(212,12,22)" rx="2" ry="2" />
<text  x="1085.42" y="1599.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (8 samples, 1.16%)</title><rect x="631.6" y="1621" width="13.7" height="15.0" fill="rgb(215,40,34)" rx="2" ry="2" />
<text  x="634.59" y="1631.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.14%)</title><rect x="1003.9" y="1445" width="1.7" height="15.0" fill="rgb(208,84,1)" rx="2" ry="2" />
<text  x="1006.86" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (74 samples, 10.71%)</title><rect x="10.0" y="1749" width="126.4" height="15.0" fill="rgb(208,8,6)" rx="2" ry="2" />
<text  x="13.00" y="1759.5" >[unknown]</text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="609.4" y="1525" width="1.7" height="15.0" fill="rgb(253,96,13)" rx="2" ry="2" />
<text  x="612.39" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.29%)</title><rect x="32.2" y="277" width="3.4" height="15.0" fill="rgb(207,195,49)" rx="2" ry="2" />
<text  x="35.20" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (14 samples, 2.03%)</title><rect x="97.1" y="1509" width="23.9" height="15.0" fill="rgb(212,120,37)" rx="2" ry="2" />
<text  x="100.09" y="1519.5" >c..</text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.29%)</title><rect x="54.4" y="165" width="3.4" height="15.0" fill="rgb(214,24,51)" rx="2" ry="2" />
<text  x="57.40" y="175.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="1082.4" y="1605" width="1.7" height="15.0" fill="rgb(228,16,22)" rx="2" ry="2" />
<text  x="1085.42" y="1615.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (5 samples, 0.72%)</title><rect x="730.6" y="1573" width="8.6" height="15.0" fill="rgb(218,194,37)" rx="2" ry="2" />
<text  x="733.64" y="1583.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.29%)</title><rect x="472.8" y="1509" width="3.4" height="15.0" fill="rgb(207,173,6)" rx="2" ry="2" />
<text  x="475.78" y="1519.5" ></text>
</g>
<g >
<title>auth::get_permissions (9 samples, 1.30%)</title><rect x="787.0" y="1493" width="15.4" height="15.0" fill="rgb(250,123,10)" rx="2" ry="2" />
<text  x="789.99" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.14%)</title><rect x="805.8" y="1509" width="1.7" height="15.0" fill="rgb(221,55,5)" rx="2" ry="2" />
<text  x="808.77" y="1519.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.14%)</title><rect x="98.8" y="1413" width="1.7" height="15.0" fill="rgb(228,39,47)" rx="2" ry="2" />
<text  x="101.80" y="1423.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.14%)</title><rect x="534.3" y="1541" width="1.7" height="15.0" fill="rgb(231,22,3)" rx="2" ry="2" />
<text  x="537.25" y="1551.5" ></text>
</g>
<g >
<title>do_cql_test (24 samples, 3.47%)</title><rect x="10.0" y="469" width="41.0" height="15.0" fill="rgb(232,10,34)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >do_..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (5 samples, 0.72%)</title><rect x="83.4" y="1493" width="8.6" height="15.0" fill="rgb(246,152,11)" rx="2" ry="2" />
<text  x="86.43" y="1503.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (27 samples, 3.91%)</title><rect x="761.4" y="1557" width="46.1" height="15.0" fill="rgb(239,218,11)" rx="2" ry="2" />
<text  x="764.37" y="1567.5" >cql3..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (5 samples, 0.72%)</title><rect x="51.0" y="389" width="8.5" height="15.0" fill="rgb(223,17,2)" rx="2" ry="2" />
<text  x="53.98" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="706.7" y="1605" width="1.7" height="15.0" fill="rgb(212,124,4)" rx="2" ry="2" />
<text  x="709.73" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="983.4" y="1381" width="3.4" height="15.0" fill="rgb(231,111,28)" rx="2" ry="2" />
<text  x="986.37" y="1391.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.14%)</title><rect x="134.7" y="1669" width="1.7" height="15.0" fill="rgb(238,173,11)" rx="2" ry="2" />
<text  x="137.66" y="1679.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (6 samples, 0.87%)</title><rect x="83.4" y="1509" width="10.3" height="15.0" fill="rgb(241,90,7)" rx="2" ry="2" />
<text  x="86.43" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (5 samples, 0.72%)</title><rect x="822.9" y="1573" width="8.5" height="15.0" fill="rgb(237,227,31)" rx="2" ry="2" />
<text  x="825.85" y="1583.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.29%)</title><rect x="110.8" y="1461" width="3.4" height="15.0" fill="rgb(206,83,3)" rx="2" ry="2" />
<text  x="113.75" y="1471.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.14%)</title><rect x="39.0" y="117" width="1.7" height="15.0" fill="rgb(227,133,11)" rx="2" ry="2" />
<text  x="42.03" y="127.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.29%)</title><rect x="39.0" y="149" width="3.4" height="15.0" fill="rgb(242,4,45)" rx="2" ry="2" />
<text  x="42.03" y="159.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1685" width="68.3" height="15.0" fill="rgb(231,220,27)" rx="2" ry="2" />
<text  x="13.00" y="1695.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="1043.1" y="1525" width="1.7" height="15.0" fill="rgb(237,176,46)" rx="2" ry="2" />
<text  x="1046.14" y="1535.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (2 samples, 0.29%)</title><rect x="824.6" y="1461" width="3.4" height="15.0" fill="rgb(217,204,47)" rx="2" ry="2" />
<text  x="827.56" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="32.2" y="229" width="1.7" height="15.0" fill="rgb(239,55,40)" rx="2" ry="2" />
<text  x="35.20" y="239.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.14%)</title><rect x="35.6" y="245" width="1.7" height="15.0" fill="rgb(252,114,5)" rx="2" ry="2" />
<text  x="38.62" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (1 samples, 0.14%)</title><rect x="62.9" y="405" width="1.7" height="15.0" fill="rgb(213,205,36)" rx="2" ry="2" />
<text  x="65.94" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.14%)</title><rect x="105.6" y="1365" width="1.7" height="15.0" fill="rgb(223,79,42)" rx="2" ry="2" />
<text  x="108.63" y="1375.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (2 samples, 0.29%)</title><rect x="71.5" y="437" width="3.4" height="15.0" fill="rgb(210,61,25)" rx="2" ry="2" />
<text  x="74.48" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="98.8" y="1365" width="1.7" height="15.0" fill="rgb(207,81,4)" rx="2" ry="2" />
<text  x="101.80" y="1375.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (11 samples, 1.59%)</title><rect x="78.3" y="1685" width="18.8" height="15.0" fill="rgb(249,115,49)" rx="2" ry="2" />
<text  x="81.31" y="1695.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (11 samples, 1.59%)</title><rect x="11.7" y="325" width="18.8" height="15.0" fill="rgb(213,85,24)" rx="2" ry="2" />
<text  x="14.71" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (54 samples, 7.81%)</title><rect x="532.5" y="1557" width="92.3" height="15.0" fill="rgb(249,126,42)" rx="2" ry="2" />
<text  x="535.55" y="1567.5" >std::_Funct..</text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (24 samples, 3.47%)</title><rect x="947.5" y="1445" width="41.0" height="15.0" fill="rgb(214,168,10)" rx="2" ry="2" />
<text  x="950.51" y="1455.5" >ser..</text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (13 samples, 1.88%)</title><rect x="964.6" y="1413" width="22.2" height="15.0" fill="rgb(209,46,30)" rx="2" ry="2" />
<text  x="967.59" y="1423.5" >s..</text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.14%)</title><rect x="293.5" y="1477" width="1.7" height="15.0" fill="rgb(245,141,32)" rx="2" ry="2" />
<text  x="296.47" y="1487.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (4 samples, 0.58%)</title><rect x="1063.6" y="1477" width="6.9" height="15.0" fill="rgb(210,217,43)" rx="2" ry="2" />
<text  x="1066.63" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="981" width="64.9" height="15.0" fill="rgb(229,111,45)" rx="2" ry="2" />
<text  x="13.00" y="991.5" >[unknown]</text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.14%)</title><rect x="580.4" y="1509" width="1.7" height="15.0" fill="rgb(254,183,28)" rx="2" ry="2" />
<text  x="583.36" y="1519.5" ></text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.14%)</title><rect x="76.6" y="997" width="1.7" height="15.0" fill="rgb(236,72,7)" rx="2" ry="2" />
<text  x="79.60" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="661" width="64.9" height="15.0" fill="rgb(232,11,38)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >[unknown]</text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="90.3" y="1365" width="1.7" height="15.0" fill="rgb(210,48,41)" rx="2" ry="2" />
<text  x="93.26" y="1375.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (3 samples, 0.43%)</title><rect x="52.7" y="293" width="5.1" height="15.0" fill="rgb(253,17,30)" rx="2" ry="2" />
<text  x="55.69" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.14%)</title><rect x="40.7" y="69" width="1.7" height="15.0" fill="rgb(232,105,0)" rx="2" ry="2" />
<text  x="43.74" y="79.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (52 samples, 7.53%)</title><rect x="295.2" y="1477" width="88.8" height="15.0" fill="rgb(243,156,50)" rx="2" ry="2" />
<text  x="298.18" y="1487.5" >partition_..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.14%)</title><rect x="744.3" y="1573" width="1.7" height="15.0" fill="rgb(212,185,13)" rx="2" ry="2" />
<text  x="747.30" y="1583.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.14%)</title><rect x="660.6" y="1589" width="1.7" height="15.0" fill="rgb(246,78,15)" rx="2" ry="2" />
<text  x="663.62" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="218.3" y="1525" width="1.7" height="15.0" fill="rgb(253,217,10)" rx="2" ry="2" />
<text  x="221.34" y="1535.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.14%)</title><rect x="822.9" y="1493" width="1.7" height="15.0" fill="rgb(205,94,5)" rx="2" ry="2" />
<text  x="825.85" y="1503.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (71 samples, 10.27%)</title><rect x="908.2" y="1493" width="121.3" height="15.0" fill="rgb(238,32,4)" rx="2" ry="2" />
<text  x="911.23" y="1503.5" >service::storag..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.14%)</title><rect x="18.5" y="117" width="1.7" height="15.0" fill="rgb(230,23,10)" rx="2" ry="2" />
<text  x="21.54" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.14%)</title><rect x="54.4" y="149" width="1.7" height="15.0" fill="rgb(225,112,50)" rx="2" ry="2" />
<text  x="57.40" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="722.1" y="1589" width="5.1" height="15.0" fill="rgb(250,153,33)" rx="2" ry="2" />
<text  x="725.10" y="1599.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::storage_proxy::send_to_live_endpoints (1 samples, 0.14%)</title><rect x="696.5" y="1621" width="1.7" height="15.0" fill="rgb(243,65,34)" rx="2" ry="2" />
<text  x="699.48" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (1 samples, 0.14%)</title><rect x="822.9" y="1509" width="1.7" height="15.0" fill="rgb(230,130,18)" rx="2" ry="2" />
<text  x="825.85" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="609.4" y="1509" width="1.7" height="15.0" fill="rgb(253,27,27)" rx="2" ry="2" />
<text  x="612.39" y="1519.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.14%)</title><rect x="607.7" y="1509" width="1.7" height="15.0" fill="rgb(217,182,14)" rx="2" ry="2" />
<text  x="610.68" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="42.4" y="229" width="1.8" height="15.0" fill="rgb(210,35,3)" rx="2" ry="2" />
<text  x="45.45" y="239.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (1 samples, 0.14%)</title><rect x="1003.9" y="1461" width="1.7" height="15.0" fill="rgb(217,128,28)" rx="2" ry="2" />
<text  x="1006.86" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.14%)</title><rect x="57.8" y="149" width="1.7" height="15.0" fill="rgb(220,46,1)" rx="2" ry="2" />
<text  x="60.81" y="159.5" ></text>
</g>
<g >
<title>service::client_state::has_access (19 samples, 2.75%)</title><rect x="775.0" y="1525" width="32.5" height="15.0" fill="rgb(219,40,49)" rx="2" ry="2" />
<text  x="778.04" y="1535.5" >se..</text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1365" width="68.3" height="15.0" fill="rgb(250,93,20)" rx="2" ry="2" />
<text  x="13.00" y="1375.5" >[unknown]</text>
</g>
<g >
<title>cql3::query_processor::execute_direct (14 samples, 2.03%)</title><rect x="97.1" y="1605" width="23.9" height="15.0" fill="rgb(245,119,9)" rx="2" ry="2" />
<text  x="100.09" y="1615.5" >c..</text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt; &gt;::deallocate (1 samples, 0.14%)</title><rect x="16.8" y="149" width="1.7" height="15.0" fill="rgb(238,155,16)" rx="2" ry="2" />
<text  x="19.83" y="159.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.14%)</title><rect x="862.1" y="1509" width="1.7" height="15.0" fill="rgb(227,40,19)" rx="2" ry="2" />
<text  x="865.13" y="1519.5" ></text>
</g>
<g >
<title>__start_context (11 samples, 1.59%)</title><rect x="78.3" y="1701" width="18.8" height="15.0" fill="rgb(236,47,54)" rx="2" ry="2" />
<text  x="81.31" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="45.9" y="85" width="1.7" height="15.0" fill="rgb(254,102,42)" rx="2" ry="2" />
<text  x="48.86" y="95.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="42.4" y="197" width="1.8" height="15.0" fill="rgb(237,22,43)" rx="2" ry="2" />
<text  x="45.45" y="207.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (1 samples, 0.14%)</title><rect x="828.0" y="1509" width="1.7" height="15.0" fill="rgb(253,196,40)" rx="2" ry="2" />
<text  x="830.97" y="1519.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.29%)</title><rect x="54.4" y="181" width="3.4" height="15.0" fill="rgb(240,209,45)" rx="2" ry="2" />
<text  x="57.40" y="191.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1477" width="68.3" height="15.0" fill="rgb(212,202,5)" rx="2" ry="2" />
<text  x="13.00" y="1487.5" >[unknown]</text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="894.6" y="1525" width="3.4" height="15.0" fill="rgb(217,155,25)" rx="2" ry="2" />
<text  x="897.57" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.14%)</title><rect x="30.5" y="149" width="1.7" height="15.0" fill="rgb(215,83,25)" rx="2" ry="2" />
<text  x="33.49" y="159.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (6 samples, 0.87%)</title><rect x="1015.8" y="1429" width="10.3" height="15.0" fill="rgb(221,208,8)" rx="2" ry="2" />
<text  x="1018.82" y="1439.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="42.4" y="213" width="1.8" height="15.0" fill="rgb(231,144,16)" rx="2" ry="2" />
<text  x="45.45" y="223.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.14%)</title><rect x="80.0" y="1509" width="1.7" height="15.0" fill="rgb(235,21,8)" rx="2" ry="2" />
<text  x="83.01" y="1519.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.43%)</title><rect x="959.5" y="1413" width="5.1" height="15.0" fill="rgb(241,160,26)" rx="2" ry="2" />
<text  x="962.46" y="1423.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (5 samples, 0.72%)</title><rect x="51.0" y="437" width="8.5" height="15.0" fill="rgb(216,105,5)" rx="2" ry="2" />
<text  x="53.98" y="447.5" ></text>
</g>
<g >
<title>db::validate_for_read (1 samples, 0.14%)</title><rect x="1041.4" y="1541" width="1.7" height="15.0" fill="rgb(206,148,52)" rx="2" ry="2" />
<text  x="1044.43" y="1551.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.14%)</title><rect x="889.5" y="1541" width="1.7" height="15.0" fill="rgb(245,119,34)" rx="2" ry="2" />
<text  x="892.45" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1301" width="68.3" height="15.0" fill="rgb(250,117,31)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" >[unknown]</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.29%)</title><rect x="334.5" y="1397" width="3.4" height="15.0" fill="rgb(234,150,19)" rx="2" ry="2" />
<text  x="337.46" y="1407.5" ></text>
</g>
<g >
<title>[perf_simple_query_g] (1 samples, 0.14%)</title><rect x="433.5" y="1493" width="1.7" height="15.0" fill="rgb(245,136,32)" rx="2" ry="2" />
<text  x="436.50" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.14%)</title><rect x="57.8" y="245" width="1.7" height="15.0" fill="rgb(232,219,4)" rx="2" ry="2" />
<text  x="60.81" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (1 samples, 0.14%)</title><rect x="45.9" y="245" width="1.7" height="15.0" fill="rgb(224,187,0)" rx="2" ry="2" />
<text  x="48.86" y="255.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (1 samples, 0.14%)</title><rect x="18.5" y="213" width="1.7" height="15.0" fill="rgb(248,31,16)" rx="2" ry="2" />
<text  x="21.54" y="223.5" ></text>
</g>
<g >
<title>ser::mutation_partition_view::range_tombstones (1 samples, 0.14%)</title><rect x="1058.5" y="1477" width="1.7" height="15.0" fill="rgb(251,215,10)" rx="2" ry="2" />
<text  x="1061.51" y="1487.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (7 samples, 1.01%)</title><rect x="18.5" y="245" width="12.0" height="15.0" fill="rgb(248,116,25)" rx="2" ry="2" />
<text  x="21.54" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reserve_map_at_back (1 samples, 0.14%)</title><rect x="16.8" y="197" width="1.7" height="15.0" fill="rgb(234,201,20)" rx="2" ry="2" />
<text  x="19.83" y="207.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.14%)</title><rect x="493.3" y="1557" width="1.7" height="15.0" fill="rgb(222,162,41)" rx="2" ry="2" />
<text  x="496.27" y="1567.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.72%)</title><rect x="1061.9" y="1509" width="8.6" height="15.0" fill="rgb(221,4,33)" rx="2" ry="2" />
<text  x="1064.92" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.14%)</title><rect x="727.2" y="1605" width="1.7" height="15.0" fill="rgb(251,92,44)" rx="2" ry="2" />
<text  x="730.22" y="1615.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="1034.6" y="1509" width="3.4" height="15.0" fill="rgb(225,56,48)" rx="2" ry="2" />
<text  x="1037.60" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.14%)</title><rect x="57.8" y="293" width="1.7" height="15.0" fill="rgb(226,178,23)" rx="2" ry="2" />
<text  x="60.81" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (3 samples, 0.43%)</title><rect x="582.1" y="1509" width="5.1" height="15.0" fill="rgb(244,91,52)" rx="2" ry="2" />
<text  x="585.07" y="1519.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.14%)</title><rect x="126.1" y="1589" width="1.7" height="15.0" fill="rgb(209,57,3)" rx="2" ry="2" />
<text  x="129.12" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1397" width="68.3" height="15.0" fill="rgb(231,185,3)" rx="2" ry="2" />
<text  x="13.00" y="1407.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="57.8" y="277" width="1.7" height="15.0" fill="rgb(238,131,16)" rx="2" ry="2" />
<text  x="60.81" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.14%)</title><rect x="18.5" y="165" width="1.7" height="15.0" fill="rgb(215,199,45)" rx="2" ry="2" />
<text  x="21.54" y="175.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.14%)</title><rect x="76.6" y="1189" width="1.7" height="15.0" fill="rgb(238,138,22)" rx="2" ry="2" />
<text  x="79.60" y="1199.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_with_triggers (1 samples, 0.14%)</title><rect x="829.7" y="1525" width="1.7" height="15.0" fill="rgb(226,155,50)" rx="2" ry="2" />
<text  x="832.68" y="1535.5" ></text>
</g>
<g >
<title>do_cql_test (7 samples, 1.01%)</title><rect x="59.5" y="501" width="12.0" height="15.0" fill="rgb(253,192,39)" rx="2" ry="2" />
<text  x="62.52" y="511.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (3 samples, 0.43%)</title><rect x="1063.6" y="1445" width="5.2" height="15.0" fill="rgb(217,136,40)" rx="2" ry="2" />
<text  x="1066.63" y="1455.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (13 samples, 1.88%)</title><rect x="496.7" y="1525" width="22.2" height="15.0" fill="rgb(218,94,45)" rx="2" ry="2" />
<text  x="499.69" y="1535.5" >m..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.14%)</title><rect x="109.0" y="1365" width="1.8" height="15.0" fill="rgb(217,111,6)" rx="2" ry="2" />
<text  x="112.04" y="1375.5" ></text>
</g>
<g >
<title>__libc_start_main (565 samples, 81.77%)</title><rect x="136.4" y="1749" width="964.8" height="15.0" fill="rgb(228,6,12)" rx="2" ry="2" />
<text  x="139.37" y="1759.5" >__libc_start_main</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="896.3" y="1493" width="1.7" height="15.0" fill="rgb(205,77,28)" rx="2" ry="2" />
<text  x="899.28" y="1503.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (14 samples, 2.03%)</title><rect x="97.1" y="1621" width="23.9" height="15.0" fill="rgb(246,40,45)" rx="2" ry="2" />
<text  x="100.09" y="1631.5" >s..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.14%)</title><rect x="30.5" y="181" width="1.7" height="15.0" fill="rgb(223,86,31)" rx="2" ry="2" />
<text  x="33.49" y="191.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (1 samples, 0.14%)</title><rect x="10.0" y="437" width="1.7" height="15.0" fill="rgb(254,190,18)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>__start_context (24 samples, 3.47%)</title><rect x="10.0" y="533" width="41.0" height="15.0" fill="rgb(208,148,5)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >__s..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="32.2" y="261" width="1.7" height="15.0" fill="rgb(253,178,13)" rx="2" ry="2" />
<text  x="35.20" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::~pair (1 samples, 0.14%)</title><rect x="56.1" y="117" width="1.7" height="15.0" fill="rgb(243,113,53)" rx="2" ry="2" />
<text  x="59.11" y="127.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (31 samples, 4.49%)</title><rect x="937.3" y="1461" width="52.9" height="15.0" fill="rgb(247,135,2)" rx="2" ry="2" />
<text  x="940.26" y="1471.5" >servi..</text>
</g>
<g >
<title>__start_context (1 samples, 0.14%)</title><rect x="134.7" y="1701" width="1.7" height="15.0" fill="rgb(242,82,21)" rx="2" ry="2" />
<text  x="137.66" y="1711.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.14%)</title><rect x="52.7" y="229" width="1.7" height="15.0" fill="rgb(225,163,48)" rx="2" ry="2" />
<text  x="55.69" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.14%)</title><rect x="57.8" y="213" width="1.7" height="15.0" fill="rgb(244,216,18)" rx="2" ry="2" />
<text  x="60.81" y="223.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1429" width="68.3" height="15.0" fill="rgb(207,82,6)" rx="2" ry="2" />
<text  x="13.00" y="1439.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="35.6" y="197" width="1.7" height="15.0" fill="rgb(224,75,47)" rx="2" ry="2" />
<text  x="38.62" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.29%)</title><rect x="886.0" y="1493" width="3.5" height="15.0" fill="rgb(215,134,0)" rx="2" ry="2" />
<text  x="889.03" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.14%)</title><rect x="30.5" y="309" width="1.7" height="15.0" fill="rgb(221,81,52)" rx="2" ry="2" />
<text  x="33.49" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.14%)</title><rect x="628.2" y="1573" width="1.7" height="15.0" fill="rgb(208,67,22)" rx="2" ry="2" />
<text  x="631.18" y="1583.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (8 samples, 1.16%)</title><rect x="677.7" y="1621" width="13.7" height="15.0" fill="rgb(231,13,46)" rx="2" ry="2" />
<text  x="680.70" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.14%)</title><rect x="85.1" y="1477" width="1.7" height="15.0" fill="rgb(249,206,22)" rx="2" ry="2" />
<text  x="88.14" y="1487.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.14%)</title><rect x="988.5" y="1445" width="1.7" height="15.0" fill="rgb(212,31,49)" rx="2" ry="2" />
<text  x="991.49" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1541" width="68.3" height="15.0" fill="rgb(249,16,54)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" >[unknown]</text>
</g>
<g >
<title>seastar::expiring_fifo&lt;seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::entry, std::function&lt;void  (1 samples, 0.14%)</title><rect x="129.5" y="1621" width="1.7" height="15.0" fill="rgb(239,139,50)" rx="2" ry="2" />
<text  x="132.54" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (1 samples, 0.14%)</title><rect x="90.3" y="1413" width="1.7" height="15.0" fill="rgb(253,22,5)" rx="2" ry="2" />
<text  x="93.26" y="1423.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.29%)</title><rect x="71.5" y="549" width="3.4" height="15.0" fill="rgb(221,15,11)" rx="2" ry="2" />
<text  x="74.48" y="559.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.14%)</title><rect x="134.7" y="1685" width="1.7" height="15.0" fill="rgb(217,82,4)" rx="2" ry="2" />
<text  x="137.66" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.58%)</title><rect x="124.4" y="1701" width="6.8" height="15.0" fill="rgb(213,175,27)" rx="2" ry="2" />
<text  x="127.41" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (46 samples, 6.66%)</title><rect x="296.9" y="1461" width="78.5" height="15.0" fill="rgb(240,185,32)" rx="2" ry="2" />
<text  x="299.89" y="1471.5" >partition..</text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (1 samples, 0.14%)</title><rect x="74.9" y="1077" width="1.7" height="15.0" fill="rgb(219,200,41)" rx="2" ry="2" />
<text  x="77.89" y="1087.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="35.6" y="165" width="1.7" height="15.0" fill="rgb(254,61,39)" rx="2" ry="2" />
<text  x="38.62" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.29%)</title><rect x="15.1" y="213" width="3.4" height="15.0" fill="rgb(244,93,41)" rx="2" ry="2" />
<text  x="18.12" y="223.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="741" width="64.9" height="15.0" fill="rgb(249,13,5)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >[unknown]</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (2 samples, 0.29%)</title><rect x="54.4" y="229" width="3.4" height="15.0" fill="rgb(234,54,8)" rx="2" ry="2" />
<text  x="57.40" y="239.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="621.3" y="1477" width="1.8" height="15.0" fill="rgb(237,138,34)" rx="2" ry="2" />
<text  x="624.35" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="904.8" y="1477" width="3.4" height="15.0" fill="rgb(233,192,40)" rx="2" ry="2" />
<text  x="907.82" y="1487.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.29%)</title><rect x="39.0" y="213" width="3.4" height="15.0" fill="rgb(245,190,53)" rx="2" ry="2" />
<text  x="42.03" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.14%)</title><rect x="13.4" y="197" width="1.7" height="15.0" fill="rgb(214,137,20)" rx="2" ry="2" />
<text  x="16.42" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="928.7" y="1445" width="5.1" height="15.0" fill="rgb(212,67,42)" rx="2" ry="2" />
<text  x="931.73" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (6 samples, 0.87%)</title><rect x="508.6" y="1509" width="10.3" height="15.0" fill="rgb(224,59,16)" rx="2" ry="2" />
<text  x="511.64" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.14%)</title><rect x="73.2" y="373" width="1.7" height="15.0" fill="rgb(228,103,47)" rx="2" ry="2" />
<text  x="76.18" y="383.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (2 samples, 0.29%)</title><rect x="1055.1" y="1445" width="3.4" height="15.0" fill="rgb(238,181,19)" rx="2" ry="2" />
<text  x="1058.09" y="1455.5" ></text>
</g>
<g >
<title>row::external_memory_usage (2 samples, 0.29%)</title><rect x="334.5" y="1413" width="3.4" height="15.0" fill="rgb(208,64,12)" rx="2" ry="2" />
<text  x="337.46" y="1423.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.14%)</title><rect x="39.0" y="133" width="1.7" height="15.0" fill="rgb(232,170,53)" rx="2" ry="2" />
<text  x="42.03" y="143.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="965" width="64.9" height="15.0" fill="rgb(227,174,1)" rx="2" ry="2" />
<text  x="13.00" y="975.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="894.6" y="1509" width="3.4" height="15.0" fill="rgb(231,104,28)" rx="2" ry="2" />
<text  x="897.57" y="1519.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (1 samples, 0.14%)</title><rect x="83.4" y="1477" width="1.7" height="15.0" fill="rgb(251,86,14)" rx="2" ry="2" />
<text  x="86.43" y="1487.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.72%)</title><rect x="1061.9" y="1525" width="8.6" height="15.0" fill="rgb(225,20,2)" rx="2" ry="2" />
<text  x="1064.92" y="1535.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="184.2" y="1589" width="1.7" height="15.0" fill="rgb(219,59,48)" rx="2" ry="2" />
<text  x="187.18" y="1599.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.14%)</title><rect x="293.5" y="1445" width="1.7" height="15.0" fill="rgb(218,19,24)" rx="2" ry="2" />
<text  x="296.47" y="1455.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (4 samples, 0.58%)</title><rect x="754.5" y="1525" width="6.9" height="15.0" fill="rgb(244,126,29)" rx="2" ry="2" />
<text  x="757.54" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="645" width="64.9" height="15.0" fill="rgb(220,74,37)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >[unknown]</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="1063.6" y="1365" width="1.7" height="15.0" fill="rgb(231,51,28)" rx="2" ry="2" />
<text  x="1066.63" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="1044.8" y="1525" width="1.8" height="15.0" fill="rgb(254,62,3)" rx="2" ry="2" />
<text  x="1047.85" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="32.2" y="213" width="1.7" height="15.0" fill="rgb(211,54,32)" rx="2" ry="2" />
<text  x="35.20" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.14%)</title><rect x="13.4" y="165" width="1.7" height="15.0" fill="rgb(242,70,46)" rx="2" ry="2" />
<text  x="16.42" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.14%)</title><rect x="18.5" y="181" width="1.7" height="15.0" fill="rgb(252,109,25)" rx="2" ry="2" />
<text  x="21.54" y="191.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::substr[abi:cxx11] (1 samples, 0.14%)</title><rect x="109.0" y="1381" width="1.8" height="15.0" fill="rgb(246,54,54)" rx="2" ry="2" />
<text  x="112.04" y="1391.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.14%)</title><rect x="73.2" y="309" width="1.7" height="15.0" fill="rgb(238,175,23)" rx="2" ry="2" />
<text  x="76.18" y="319.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.14%)</title><rect x="515.5" y="1493" width="1.7" height="15.0" fill="rgb(250,110,48)" rx="2" ry="2" />
<text  x="518.47" y="1503.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (2 samples, 0.29%)</title><rect x="699.9" y="1605" width="3.4" height="15.0" fill="rgb(234,85,10)" rx="2" ry="2" />
<text  x="702.90" y="1615.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="103.9" y="1237" width="1.7" height="15.0" fill="rgb(251,223,23)" rx="2" ry="2" />
<text  x="106.92" y="1247.5" ></text>
</g>
<g >
<title>table::query (252 samples, 36.47%)</title><rect x="199.6" y="1589" width="430.3" height="15.0" fill="rgb(220,117,25)" rx="2" ry="2" />
<text  x="202.55" y="1599.5" >table::query</text>
</g>
<g >
<title>query::consume_page&lt; (56 samples, 8.10%)</title><rect x="397.6" y="1557" width="95.7" height="15.0" fill="rgb(214,190,39)" rx="2" ry="2" />
<text  x="400.64" y="1567.5" >query::cons..</text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="305.4" y="1445" width="3.4" height="15.0" fill="rgb(227,122,40)" rx="2" ry="2" />
<text  x="308.43" y="1455.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.14%)</title><rect x="112.5" y="1365" width="1.7" height="15.0" fill="rgb(235,144,17)" rx="2" ry="2" />
<text  x="115.46" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="57.8" y="101" width="1.7" height="15.0" fill="rgb(216,115,6)" rx="2" ry="2" />
<text  x="60.81" y="111.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (10 samples, 1.45%)</title><rect x="655.5" y="1605" width="17.1" height="15.0" fill="rgb(238,168,39)" rx="2" ry="2" />
<text  x="658.50" y="1615.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.14%)</title><rect x="1080.7" y="1589" width="1.7" height="15.0" fill="rgb(237,227,6)" rx="2" ry="2" />
<text  x="1083.71" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (3 samples, 0.43%)</title><rect x="1063.6" y="1429" width="5.2" height="15.0" fill="rgb(217,29,53)" rx="2" ry="2" />
<text  x="1066.63" y="1439.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (6 samples, 0.87%)</title><rect x="144.9" y="1605" width="10.3" height="15.0" fill="rgb(226,194,33)" rx="2" ry="2" />
<text  x="147.91" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (2 samples, 0.29%)</title><rect x="1034.6" y="1525" width="3.4" height="15.0" fill="rgb(244,111,2)" rx="2" ry="2" />
<text  x="1037.60" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="1045" width="64.9" height="15.0" fill="rgb(225,107,14)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="613" width="64.9" height="15.0" fill="rgb(240,24,17)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >[unknown]</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (22 samples, 3.18%)</title><rect x="11.7" y="389" width="37.6" height="15.0" fill="rgb(241,96,54)" rx="2" ry="2" />
<text  x="14.71" y="399.5" >cql..</text>
</g>
<g >
<title>seastar::reactor::do_run (564 samples, 81.62%)</title><rect x="136.4" y="1653" width="963.1" height="15.0" fill="rgb(227,105,41)" rx="2" ry="2" />
<text  x="139.37" y="1663.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>query_result_builder::consume (26 samples, 3.76%)</title><rect x="421.5" y="1525" width="44.4" height="15.0" fill="rgb(217,184,16)" rx="2" ry="2" />
<text  x="424.55" y="1535.5" >quer..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="30.5" y="261" width="1.7" height="15.0" fill="rgb(205,87,35)" rx="2" ry="2" />
<text  x="33.49" y="271.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.43%)</title><rect x="722.1" y="1605" width="5.1" height="15.0" fill="rgb(242,100,54)" rx="2" ry="2" />
<text  x="725.10" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="933" width="64.9" height="15.0" fill="rgb(241,190,28)" rx="2" ry="2" />
<text  x="13.00" y="943.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="103.9" y="1253" width="1.7" height="15.0" fill="rgb(239,222,17)" rx="2" ry="2" />
<text  x="106.92" y="1263.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timestamp_set (1 samples, 0.14%)</title><rect x="78.3" y="1541" width="1.7" height="15.0" fill="rgb(245,197,18)" rx="2" ry="2" />
<text  x="81.31" y="1551.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (14 samples, 2.03%)</title><rect x="1072.2" y="1621" width="23.9" height="15.0" fill="rgb(238,211,19)" rx="2" ry="2" />
<text  x="1075.17" y="1631.5" >s..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (1 samples, 0.14%)</title><rect x="860.4" y="1461" width="1.7" height="15.0" fill="rgb(237,192,3)" rx="2" ry="2" />
<text  x="863.42" y="1471.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.14%)</title><rect x="76.6" y="1093" width="1.7" height="15.0" fill="rgb(242,124,36)" rx="2" ry="2" />
<text  x="79.60" y="1103.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (48 samples, 6.95%)</title><rect x="740.9" y="1589" width="82.0" height="15.0" fill="rgb(223,223,2)" rx="2" ry="2" />
<text  x="743.88" y="1599.5" >single_no..</text>
</g>
<g >
<title>make_combined_reader (7 samples, 1.01%)</title><rect x="541.1" y="1525" width="11.9" height="15.0" fill="rgb(233,188,36)" rx="2" ry="2" />
<text  x="544.09" y="1535.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (6 samples, 0.87%)</title><rect x="83.4" y="1541" width="10.3" height="15.0" fill="rgb(236,215,20)" rx="2" ry="2" />
<text  x="86.43" y="1551.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (1 samples, 0.14%)</title><rect x="62.9" y="389" width="1.7" height="15.0" fill="rgb(243,13,33)" rx="2" ry="2" />
<text  x="65.94" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="30.5" y="245" width="1.7" height="15.0" fill="rgb(250,229,34)" rx="2" ry="2" />
<text  x="33.49" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.14%)</title><rect x="71.5" y="325" width="1.7" height="15.0" fill="rgb(249,228,31)" rx="2" ry="2" />
<text  x="74.48" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="112.5" y="1413" width="1.7" height="15.0" fill="rgb(210,138,54)" rx="2" ry="2" />
<text  x="115.46" y="1423.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="32.2" y="165" width="1.7" height="15.0" fill="rgb(222,139,7)" rx="2" ry="2" />
<text  x="35.20" y="175.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="677" width="64.9" height="15.0" fill="rgb(210,8,54)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >[unknown]</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="119.3" y="1413" width="1.7" height="15.0" fill="rgb(240,176,7)" rx="2" ry="2" />
<text  x="122.29" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="869" width="64.9" height="15.0" fill="rgb(237,86,32)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >[unknown]</text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (3 samples, 0.43%)</title><rect x="976.5" y="1365" width="5.2" height="15.0" fill="rgb(236,190,45)" rx="2" ry="2" />
<text  x="979.54" y="1375.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.14%)</title><rect x="117.6" y="1381" width="1.7" height="15.0" fill="rgb(209,187,24)" rx="2" ry="2" />
<text  x="120.58" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1285" width="68.3" height="15.0" fill="rgb(212,148,20)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="1077" width="64.9" height="15.0" fill="rgb(233,34,1)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" >[unknown]</text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.29%)</title><rect x="78.3" y="1573" width="3.4" height="15.0" fill="rgb(214,191,8)" rx="2" ry="2" />
<text  x="81.31" y="1583.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.14%)</title><rect x="74.9" y="1093" width="1.7" height="15.0" fill="rgb(210,97,10)" rx="2" ry="2" />
<text  x="77.89" y="1103.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (22 samples, 3.18%)</title><rect x="11.7" y="357" width="37.6" height="15.0" fill="rgb(250,95,6)" rx="2" ry="2" />
<text  x="14.71" y="367.5" >cql..</text>
</g>
<g >
<title>[unknown] (39 samples, 5.64%)</title><rect x="10.0" y="1189" width="66.6" height="15.0" fill="rgb(229,1,18)" rx="2" ry="2" />
<text  x="13.00" y="1199.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="30.5" y="213" width="1.7" height="15.0" fill="rgb(244,199,33)" rx="2" ry="2" />
<text  x="33.49" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (22 samples, 3.18%)</title><rect x="950.9" y="1429" width="37.6" height="15.0" fill="rgb(254,19,40)" rx="2" ry="2" />
<text  x="953.93" y="1439.5" >ser..</text>
</g>
<g >
<title>cql3::query_processor::execute_direct (7 samples, 1.01%)</title><rect x="59.5" y="453" width="12.0" height="15.0" fill="rgb(211,227,51)" rx="2" ry="2" />
<text  x="62.52" y="463.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (2 samples, 0.29%)</title><rect x="22.0" y="197" width="3.4" height="15.0" fill="rgb(209,66,45)" rx="2" ry="2" />
<text  x="24.95" y="207.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="665.7" y="1589" width="3.5" height="15.0" fill="rgb(254,131,31)" rx="2" ry="2" />
<text  x="668.75" y="1599.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (2 samples, 0.29%)</title><rect x="751.1" y="1525" width="3.4" height="15.0" fill="rgb(237,109,48)" rx="2" ry="2" />
<text  x="754.13" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.14%)</title><rect x="15.1" y="197" width="1.7" height="15.0" fill="rgb(240,218,17)" rx="2" ry="2" />
<text  x="18.12" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.14%)</title><rect x="1029.5" y="1509" width="1.7" height="15.0" fill="rgb(207,195,52)" rx="2" ry="2" />
<text  x="1032.48" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (7 samples, 1.01%)</title><rect x="59.5" y="533" width="12.0" height="15.0" fill="rgb(247,89,8)" rx="2" ry="2" />
<text  x="62.52" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (4 samples, 0.58%)</title><rect x="11.7" y="261" width="6.8" height="15.0" fill="rgb(225,48,40)" rx="2" ry="2" />
<text  x="14.71" y="271.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.14%)</title><rect x="35.6" y="261" width="1.7" height="15.0" fill="rgb(252,36,45)" rx="2" ry="2" />
<text  x="38.62" y="271.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.14%)</title><rect x="33.9" y="261" width="1.7" height="15.0" fill="rgb(238,107,37)" rx="2" ry="2" />
<text  x="36.91" y="271.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.14%)</title><rect x="489.9" y="1477" width="1.7" height="15.0" fill="rgb(220,199,49)" rx="2" ry="2" />
<text  x="492.86" y="1487.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.14%)</title><rect x="44.2" y="181" width="1.7" height="15.0" fill="rgb(220,183,49)" rx="2" ry="2" />
<text  x="47.15" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="98.8" y="1317" width="1.7" height="15.0" fill="rgb(220,150,36)" rx="2" ry="2" />
<text  x="101.80" y="1327.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.14%)</title><rect x="40.7" y="85" width="1.7" height="15.0" fill="rgb(216,153,47)" rx="2" ry="2" />
<text  x="43.74" y="95.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.14%)</title><rect x="97.1" y="1301" width="1.7" height="15.0" fill="rgb(254,0,11)" rx="2" ry="2" />
<text  x="100.09" y="1311.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (131 samples, 18.96%)</title><rect x="831.4" y="1573" width="223.7" height="15.0" fill="rgb(216,200,47)" rx="2" ry="2" />
<text  x="834.39" y="1583.5" >seastar::noncopyable_function..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.14%)</title><rect x="97.1" y="1349" width="1.7" height="15.0" fill="rgb(238,43,34)" rx="2" ry="2" />
<text  x="100.09" y="1359.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (8 samples, 1.16%)</title><rect x="97.1" y="1477" width="13.7" height="15.0" fill="rgb(233,222,0)" rx="2" ry="2" />
<text  x="100.09" y="1487.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="592.3" y="1493" width="1.7" height="15.0" fill="rgb(208,179,50)" rx="2" ry="2" />
<text  x="595.32" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="643.5" y="1605" width="1.8" height="15.0" fill="rgb(253,64,30)" rx="2" ry="2" />
<text  x="646.55" y="1615.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="419.8" y="1525" width="1.7" height="15.0" fill="rgb(241,122,34)" rx="2" ry="2" />
<text  x="422.84" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="71.5" y="341" width="1.7" height="15.0" fill="rgb(209,72,40)" rx="2" ry="2" />
<text  x="74.48" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (1 samples, 0.14%)</title><rect x="1070.5" y="1621" width="1.7" height="15.0" fill="rgb(232,19,17)" rx="2" ry="2" />
<text  x="1073.46" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1253" width="68.3" height="15.0" fill="rgb(241,151,11)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" >[unknown]</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.14%)</title><rect x="126.1" y="1605" width="1.7" height="15.0" fill="rgb(235,54,12)" rx="2" ry="2" />
<text  x="129.12" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="1109" width="64.9" height="15.0" fill="rgb(205,1,26)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" >[unknown]</text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (4 samples, 0.58%)</title><rect x="822.9" y="1525" width="6.8" height="15.0" fill="rgb(234,43,42)" rx="2" ry="2" />
<text  x="825.85" y="1535.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.14%)</title><rect x="901.4" y="1509" width="1.7" height="15.0" fill="rgb(206,111,39)" rx="2" ry="2" />
<text  x="904.40" y="1519.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (5 samples, 0.72%)</title><rect x="51.0" y="533" width="8.5" height="15.0" fill="rgb(229,74,17)" rx="2" ry="2" />
<text  x="53.98" y="543.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.14%)</title><rect x="64.6" y="357" width="1.8" height="15.0" fill="rgb(242,90,29)" rx="2" ry="2" />
<text  x="67.65" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="117.6" y="1365" width="1.7" height="15.0" fill="rgb(223,91,30)" rx="2" ry="2" />
<text  x="120.58" y="1375.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.14%)</title><rect x="226.9" y="1573" width="1.7" height="15.0" fill="rgb(206,101,36)" rx="2" ry="2" />
<text  x="229.87" y="1583.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (1 samples, 0.14%)</title><rect x="59.5" y="373" width="1.7" height="15.0" fill="rgb(218,138,47)" rx="2" ry="2" />
<text  x="62.52" y="383.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (1 samples, 0.14%)</title><rect x="520.6" y="1525" width="1.7" height="15.0" fill="rgb(248,65,12)" rx="2" ry="2" />
<text  x="523.59" y="1535.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="213.2" y="1573" width="1.7" height="15.0" fill="rgb(218,103,40)" rx="2" ry="2" />
<text  x="216.21" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (3 samples, 0.43%)</title><rect x="52.7" y="277" width="5.1" height="15.0" fill="rgb(253,58,17)" rx="2" ry="2" />
<text  x="55.69" y="287.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.14%)</title><rect x="76.6" y="1173" width="1.7" height="15.0" fill="rgb(242,81,29)" rx="2" ry="2" />
<text  x="79.60" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="1157" width="64.9" height="15.0" fill="rgb(243,16,30)" rx="2" ry="2" />
<text  x="13.00" y="1167.5" >[unknown]</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.14%)</title><rect x="64.6" y="341" width="1.8" height="15.0" fill="rgb(216,40,51)" rx="2" ry="2" />
<text  x="67.65" y="351.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="1005.6" y="1461" width="3.4" height="15.0" fill="rgb(254,143,31)" rx="2" ry="2" />
<text  x="1008.57" y="1471.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (2 samples, 0.29%)</title><rect x="88.6" y="1445" width="3.4" height="15.0" fill="rgb(220,141,53)" rx="2" ry="2" />
<text  x="91.55" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.14%)</title><rect x="27.1" y="197" width="1.7" height="15.0" fill="rgb(217,198,9)" rx="2" ry="2" />
<text  x="30.08" y="207.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="710.1" y="1589" width="1.8" height="15.0" fill="rgb(246,16,4)" rx="2" ry="2" />
<text  x="713.14" y="1599.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.14%)</title><rect x="117.6" y="1301" width="1.7" height="15.0" fill="rgb(217,180,6)" rx="2" ry="2" />
<text  x="120.58" y="1311.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.29%)</title><rect x="71.5" y="469" width="3.4" height="15.0" fill="rgb(220,115,51)" rx="2" ry="2" />
<text  x="74.48" y="479.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.14%)</title><rect x="45.9" y="165" width="1.7" height="15.0" fill="rgb(214,58,33)" rx="2" ry="2" />
<text  x="48.86" y="175.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (2 samples, 0.29%)</title><rect x="22.0" y="213" width="3.4" height="15.0" fill="rgb(243,99,42)" rx="2" ry="2" />
<text  x="24.95" y="223.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.29%)</title><rect x="969.7" y="1381" width="3.4" height="15.0" fill="rgb(250,212,34)" rx="2" ry="2" />
<text  x="972.71" y="1391.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.14%)</title><rect x="98.8" y="1397" width="1.7" height="15.0" fill="rgb(220,120,14)" rx="2" ry="2" />
<text  x="101.80" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (2 samples, 0.29%)</title><rect x="857.0" y="1461" width="3.4" height="15.0" fill="rgb(229,228,40)" rx="2" ry="2" />
<text  x="860.00" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1525" width="68.3" height="15.0" fill="rgb(212,115,42)" rx="2" ry="2" />
<text  x="13.00" y="1535.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.14%)</title><rect x="73.2" y="357" width="1.7" height="15.0" fill="rgb(216,91,5)" rx="2" ry="2" />
<text  x="76.18" y="367.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.14%)</title><rect x="13.4" y="181" width="1.7" height="15.0" fill="rgb(207,78,7)" rx="2" ry="2" />
<text  x="16.42" y="191.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.29%)</title><rect x="39.0" y="197" width="3.4" height="15.0" fill="rgb(217,148,19)" rx="2" ry="2" />
<text  x="42.03" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="117.6" y="1317" width="1.7" height="15.0" fill="rgb(232,90,42)" rx="2" ry="2" />
<text  x="120.58" y="1327.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.29%)</title><rect x="163.7" y="1621" width="3.4" height="15.0" fill="rgb(222,88,2)" rx="2" ry="2" />
<text  x="166.69" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.14%)</title><rect x="45.9" y="101" width="1.7" height="15.0" fill="rgb(240,104,43)" rx="2" ry="2" />
<text  x="48.86" y="111.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (2 samples, 0.29%)</title><rect x="78.3" y="1557" width="3.4" height="15.0" fill="rgb(240,109,18)" rx="2" ry="2" />
<text  x="81.31" y="1567.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.29%)</title><rect x="71.5" y="581" width="3.4" height="15.0" fill="rgb(226,109,36)" rx="2" ry="2" />
<text  x="74.48" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (2 samples, 0.29%)</title><rect x="331.0" y="1413" width="3.5" height="15.0" fill="rgb(216,55,21)" rx="2" ry="2" />
<text  x="334.04" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1317" width="68.3" height="15.0" fill="rgb(207,104,40)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" >[unknown]</text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (1 samples, 0.14%)</title><rect x="1067.0" y="1365" width="1.8" height="15.0" fill="rgb(245,109,53)" rx="2" ry="2" />
<text  x="1070.05" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt; &gt;  (1 samples, 0.14%)</title><rect x="90.3" y="1397" width="1.7" height="15.0" fill="rgb(237,60,8)" rx="2" ry="2" />
<text  x="93.26" y="1407.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="1065.3" y="1333" width="1.7" height="15.0" fill="rgb(246,17,48)" rx="2" ry="2" />
<text  x="1068.34" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.14%)</title><rect x="97.1" y="1333" width="1.7" height="15.0" fill="rgb(246,163,22)" rx="2" ry="2" />
<text  x="100.09" y="1343.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (22 samples, 3.18%)</title><rect x="11.7" y="421" width="37.6" height="15.0" fill="rgb(209,19,52)" rx="2" ry="2" />
<text  x="14.71" y="431.5" >cql..</text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (4 samples, 0.58%)</title><rect x="855.3" y="1477" width="6.8" height="15.0" fill="rgb(208,225,49)" rx="2" ry="2" />
<text  x="858.30" y="1487.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.14%)</title><rect x="109.0" y="1349" width="1.8" height="15.0" fill="rgb(230,106,13)" rx="2" ry="2" />
<text  x="112.04" y="1359.5" ></text>
</g>
<g >
<title>database::find_keyspace (2 samples, 0.29%)</title><rect x="1000.4" y="1461" width="3.5" height="15.0" fill="rgb(212,16,43)" rx="2" ry="2" />
<text  x="1003.45" y="1471.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.14%)</title><rect x="112.5" y="1429" width="1.7" height="15.0" fill="rgb(226,224,34)" rx="2" ry="2" />
<text  x="115.46" y="1439.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (2 samples, 0.29%)</title><rect x="619.6" y="1493" width="3.5" height="15.0" fill="rgb(243,53,19)" rx="2" ry="2" />
<text  x="622.64" y="1503.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (5 samples, 0.72%)</title><rect x="51.0" y="517" width="8.5" height="15.0" fill="rgb(253,123,44)" rx="2" ry="2" />
<text  x="53.98" y="527.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (5 samples, 0.72%)</title><rect x="1061.9" y="1605" width="8.6" height="15.0" fill="rgb(210,179,37)" rx="2" ry="2" />
<text  x="1064.92" y="1615.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.14%)</title><rect x="13.4" y="213" width="1.7" height="15.0" fill="rgb(214,77,31)" rx="2" ry="2" />
<text  x="16.42" y="223.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.14%)</title><rect x="30.5" y="133" width="1.7" height="15.0" fill="rgb(226,8,36)" rx="2" ry="2" />
<text  x="33.49" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.29%)</title><rect x="1051.7" y="1541" width="3.4" height="15.0" fill="rgb(220,205,24)" rx="2" ry="2" />
<text  x="1054.68" y="1551.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (11 samples, 1.59%)</title><rect x="11.7" y="293" width="18.8" height="15.0" fill="rgb(246,30,32)" rx="2" ry="2" />
<text  x="14.71" y="303.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (53 samples, 7.67%)</title><rect x="402.8" y="1541" width="90.5" height="15.0" fill="rgb(253,184,15)" rx="2" ry="2" />
<text  x="405.76" y="1551.5" >seastar::d..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (16 samples, 2.32%)</title><rect x="850.2" y="1541" width="27.3" height="15.0" fill="rgb(212,190,16)" rx="2" ry="2" />
<text  x="853.17" y="1551.5" >c..</text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (2 samples, 0.29%)</title><rect x="751.1" y="1509" width="3.4" height="15.0" fill="rgb(245,42,3)" rx="2" ry="2" />
<text  x="754.13" y="1519.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (57 samples, 8.25%)</title><rect x="527.4" y="1573" width="97.4" height="15.0" fill="rgb(228,207,3)" rx="2" ry="2" />
<text  x="530.42" y="1583.5" >query::quer..</text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (2 samples, 0.29%)</title><rect x="290.1" y="1477" width="3.4" height="15.0" fill="rgb(212,194,38)" rx="2" ry="2" />
<text  x="293.06" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (2 samples, 0.29%)</title><rect x="54.4" y="213" width="3.4" height="15.0" fill="rgb(218,159,54)" rx="2" ry="2" />
<text  x="57.40" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.14%)</title><rect x="98.8" y="1285" width="1.7" height="15.0" fill="rgb(235,8,32)" rx="2" ry="2" />
<text  x="101.80" y="1295.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (7 samples, 1.01%)</title><rect x="18.5" y="261" width="12.0" height="15.0" fill="rgb(248,69,43)" rx="2" ry="2" />
<text  x="21.54" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.14%)</title><rect x="1046.6" y="1541" width="1.7" height="15.0" fill="rgb(233,205,42)" rx="2" ry="2" />
<text  x="1049.56" y="1551.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="1099.5" y="1621" width="1.7" height="15.0" fill="rgb(234,205,18)" rx="2" ry="2" />
<text  x="1102.49" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.14%)</title><rect x="73.2" y="341" width="1.7" height="15.0" fill="rgb(241,205,12)" rx="2" ry="2" />
<text  x="76.18" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.14%)</title><rect x="13.4" y="101" width="1.7" height="15.0" fill="rgb(226,46,6)" rx="2" ry="2" />
<text  x="16.42" y="111.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (4 samples, 0.58%)</title><rect x="64.6" y="389" width="6.9" height="15.0" fill="rgb(253,37,18)" rx="2" ry="2" />
<text  x="67.65" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (2 samples, 0.29%)</title><rect x="187.6" y="1573" width="3.4" height="15.0" fill="rgb(252,119,33)" rx="2" ry="2" />
<text  x="190.60" y="1583.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (4 samples, 0.58%)</title><rect x="1055.1" y="1605" width="6.8" height="15.0" fill="rgb(215,6,54)" rx="2" ry="2" />
<text  x="1058.09" y="1615.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.14%)</title><rect x="51.0" y="325" width="1.7" height="15.0" fill="rgb(231,144,17)" rx="2" ry="2" />
<text  x="53.98" y="335.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="771.6" y="1525" width="1.7" height="15.0" fill="rgb(224,81,47)" rx="2" ry="2" />
<text  x="774.62" y="1535.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.29%)</title><rect x="103.9" y="1413" width="3.4" height="15.0" fill="rgb(252,118,22)" rx="2" ry="2" />
<text  x="106.92" y="1423.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.14%)</title><rect x="76.6" y="1157" width="1.7" height="15.0" fill="rgb(215,160,46)" rx="2" ry="2" />
<text  x="79.60" y="1167.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (4 samples, 0.58%)</title><rect x="11.7" y="229" width="6.8" height="15.0" fill="rgb(210,38,48)" rx="2" ry="2" />
<text  x="14.71" y="239.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (2 samples, 0.29%)</title><rect x="1087.5" y="1605" width="3.5" height="15.0" fill="rgb(205,192,29)" rx="2" ry="2" />
<text  x="1090.54" y="1615.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.14%)</title><rect x="13.4" y="85" width="1.7" height="15.0" fill="rgb(210,165,35)" rx="2" ry="2" />
<text  x="16.42" y="95.5" ></text>
</g>
<g >
<title>_dl_cache_libcmp (1 samples, 0.14%)</title><rect x="131.2" y="1733" width="1.8" height="15.0" fill="rgb(252,105,14)" rx="2" ry="2" />
<text  x="134.24" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="373.7" y="1445" width="1.7" height="15.0" fill="rgb(247,9,32)" rx="2" ry="2" />
<text  x="376.73" y="1455.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.14%)</title><rect x="57.8" y="229" width="1.7" height="15.0" fill="rgb(253,18,53)" rx="2" ry="2" />
<text  x="60.81" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator* (1 samples, 0.14%)</title><rect x="32.2" y="149" width="1.7" height="15.0" fill="rgb(251,2,20)" rx="2" ry="2" />
<text  x="35.20" y="159.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (24 samples, 3.47%)</title><rect x="10.0" y="501" width="41.0" height="15.0" fill="rgb(231,181,25)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >sea..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.14%)</title><rect x="117.6" y="1429" width="1.7" height="15.0" fill="rgb(232,129,52)" rx="2" ry="2" />
<text  x="120.58" y="1439.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.29%)</title><rect x="228.6" y="1573" width="3.4" height="15.0" fill="rgb(218,46,27)" rx="2" ry="2" />
<text  x="231.58" y="1583.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (4 samples, 0.58%)</title><rect x="1055.1" y="1541" width="6.8" height="15.0" fill="rgb(254,139,5)" rx="2" ry="2" />
<text  x="1058.09" y="1551.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (1 samples, 0.14%)</title><rect x="126.1" y="1637" width="1.7" height="15.0" fill="rgb(242,76,1)" rx="2" ry="2" />
<text  x="129.12" y="1647.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (14 samples, 2.03%)</title><rect x="97.1" y="1573" width="23.9" height="15.0" fill="rgb(240,77,3)" rx="2" ry="2" />
<text  x="100.09" y="1583.5" >c..</text>
</g>
<g >
<title>cql3::query_processor::get_statement (2 samples, 0.29%)</title><rect x="71.5" y="453" width="3.4" height="15.0" fill="rgb(241,204,28)" rx="2" ry="2" />
<text  x="74.48" y="463.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="638.4" y="1605" width="1.7" height="15.0" fill="rgb(223,189,52)" rx="2" ry="2" />
<text  x="641.42" y="1615.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (2 samples, 0.29%)</title><rect x="1048.3" y="1541" width="3.4" height="15.0" fill="rgb(250,73,27)" rx="2" ry="2" />
<text  x="1051.26" y="1551.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::delete_statement*, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt; (1 samples, 0.14%)</title><rect x="68.1" y="325" width="1.7" height="15.0" fill="rgb(229,182,40)" rx="2" ry="2" />
<text  x="71.06" y="335.5" ></text>
</g>
<g >
<title>database::find_schema (3 samples, 0.43%)</title><rect x="761.4" y="1541" width="5.1" height="15.0" fill="rgb(225,221,24)" rx="2" ry="2" />
<text  x="764.37" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14 samples, 2.03%)</title><rect x="97.1" y="1669" width="23.9" height="15.0" fill="rgb(232,158,43)" rx="2" ry="2" />
<text  x="100.09" y="1679.5" >s..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.14%)</title><rect x="40.7" y="53" width="1.7" height="15.0" fill="rgb(227,225,29)" rx="2" ry="2" />
<text  x="43.74" y="63.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (14 samples, 2.03%)</title><rect x="97.1" y="1701" width="23.9" height="15.0" fill="rgb(222,225,41)" rx="2" ry="2" />
<text  x="100.09" y="1711.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (3 samples, 0.43%)</title><rect x="52.7" y="261" width="5.1" height="15.0" fill="rgb(227,30,5)" rx="2" ry="2" />
<text  x="55.69" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (3 samples, 0.43%)</title><rect x="1063.6" y="1397" width="5.2" height="15.0" fill="rgb(222,153,5)" rx="2" ry="2" />
<text  x="1066.63" y="1407.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.14%)</title><rect x="824.6" y="1445" width="1.7" height="15.0" fill="rgb(209,34,51)" rx="2" ry="2" />
<text  x="827.56" y="1455.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="97.1" y="1253" width="1.7" height="15.0" fill="rgb(236,73,33)" rx="2" ry="2" />
<text  x="100.09" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1589" width="68.3" height="15.0" fill="rgb(208,111,29)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="119.3" y="1429" width="1.7" height="15.0" fill="rgb(250,214,6)" rx="2" ry="2" />
<text  x="122.29" y="1439.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (1 samples, 0.14%)</title><rect x="73.2" y="293" width="1.7" height="15.0" fill="rgb(210,132,4)" rx="2" ry="2" />
<text  x="76.18" y="303.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.43%)</title><rect x="522.3" y="1525" width="5.1" height="15.0" fill="rgb(244,148,28)" rx="2" ry="2" />
<text  x="525.30" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (7 samples, 1.01%)</title><rect x="98.8" y="1429" width="12.0" height="15.0" fill="rgb(225,128,47)" rx="2" ry="2" />
<text  x="101.80" y="1439.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.14%)</title><rect x="30.5" y="293" width="1.7" height="15.0" fill="rgb(224,148,28)" rx="2" ry="2" />
<text  x="33.49" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.29%)</title><rect x="389.1" y="1509" width="3.4" height="15.0" fill="rgb(252,96,8)" rx="2" ry="2" />
<text  x="392.10" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1381" width="68.3" height="15.0" fill="rgb(213,165,48)" rx="2" ry="2" />
<text  x="13.00" y="1391.5" >[unknown]</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::_M_ptr (1 samples, 0.14%)</title><rect x="68.1" y="341" width="1.7" height="15.0" fill="rgb(240,38,27)" rx="2" ry="2" />
<text  x="71.06" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.14%)</title><rect x="32.2" y="181" width="1.7" height="15.0" fill="rgb(214,213,32)" rx="2" ry="2" />
<text  x="35.20" y="191.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (10 samples, 1.45%)</title><rect x="587.2" y="1509" width="17.1" height="15.0" fill="rgb(243,7,49)" rx="2" ry="2" />
<text  x="590.19" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="621.3" y="1445" width="1.8" height="15.0" fill="rgb(229,66,24)" rx="2" ry="2" />
<text  x="624.35" y="1455.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (6 samples, 0.87%)</title><rect x="110.8" y="1493" width="10.2" height="15.0" fill="rgb(243,96,12)" rx="2" ry="2" />
<text  x="113.75" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="1085.8" y="1605" width="1.7" height="15.0" fill="rgb(253,83,49)" rx="2" ry="2" />
<text  x="1088.83" y="1615.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.14%)</title><rect x="112.5" y="1349" width="1.7" height="15.0" fill="rgb(227,197,25)" rx="2" ry="2" />
<text  x="115.46" y="1359.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (4 samples, 0.58%)</title><rect x="262.7" y="1493" width="6.9" height="15.0" fill="rgb(244,192,34)" rx="2" ry="2" />
<text  x="265.74" y="1503.5" ></text>
</g>
<g >
<title>query_state::query_state (1 samples, 0.14%)</title><rect x="624.8" y="1573" width="1.7" height="15.0" fill="rgb(249,18,42)" rx="2" ry="2" />
<text  x="627.76" y="1583.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (24 samples, 3.47%)</title><rect x="766.5" y="1541" width="41.0" height="15.0" fill="rgb(253,164,34)" rx="2" ry="2" />
<text  x="769.50" y="1551.5" >ser..</text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (5 samples, 0.72%)</title><rect x="51.0" y="357" width="8.5" height="15.0" fill="rgb(207,31,16)" rx="2" ry="2" />
<text  x="53.98" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true, true&gt;::operator= (1 samples, 0.14%)</title><rect x="69.8" y="341" width="1.7" height="15.0" fill="rgb(207,92,38)" rx="2" ry="2" />
<text  x="72.77" y="351.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.14%)</title><rect x="1056.8" y="1429" width="1.7" height="15.0" fill="rgb(246,146,2)" rx="2" ry="2" />
<text  x="1059.80" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="151.7" y="1557" width="1.7" height="15.0" fill="rgb(250,212,29)" rx="2" ry="2" />
<text  x="154.74" y="1567.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::update_statement*, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.14%)</title><rect x="69.8" y="293" width="1.7" height="15.0" fill="rgb(211,9,54)" rx="2" ry="2" />
<text  x="72.77" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (3 samples, 0.43%)</title><rect x="52.7" y="325" width="5.1" height="15.0" fill="rgb(240,163,0)" rx="2" ry="2" />
<text  x="55.69" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.14%)</title><rect x="525.7" y="1509" width="1.7" height="15.0" fill="rgb(236,85,33)" rx="2" ry="2" />
<text  x="528.72" y="1519.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.14%)</title><rect x="76.6" y="1125" width="1.7" height="15.0" fill="rgb(231,208,25)" rx="2" ry="2" />
<text  x="79.60" y="1135.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="592.3" y="1477" width="1.7" height="15.0" fill="rgb(231,107,53)" rx="2" ry="2" />
<text  x="595.32" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.14%)</title><rect x="45.9" y="149" width="1.7" height="15.0" fill="rgb(246,16,18)" rx="2" ry="2" />
<text  x="48.86" y="159.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (1 samples, 0.14%)</title><rect x="1065.3" y="1365" width="1.7" height="15.0" fill="rgb(218,187,45)" rx="2" ry="2" />
<text  x="1068.34" y="1375.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.14%)</title><rect x="74.9" y="1125" width="1.7" height="15.0" fill="rgb(209,207,35)" rx="2" ry="2" />
<text  x="77.89" y="1135.5" ></text>
</g>
<g >
<title>table::set_hit_rate (1 samples, 0.14%)</title><rect x="718.7" y="1605" width="1.7" height="15.0" fill="rgb(217,45,25)" rx="2" ry="2" />
<text  x="721.68" y="1615.5" ></text>
</g>
<g >
<title>sstables::sstable::write_scylla_metadata (1 samples, 0.14%)</title><rect x="129.5" y="1669" width="1.7" height="15.0" fill="rgb(221,191,53)" rx="2" ry="2" />
<text  x="132.54" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.14%)</title><rect x="119.3" y="1381" width="1.7" height="15.0" fill="rgb(208,176,2)" rx="2" ry="2" />
<text  x="122.29" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="853" width="64.9" height="15.0" fill="rgb(237,93,8)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="98.8" y="1333" width="1.7" height="15.0" fill="rgb(217,18,21)" rx="2" ry="2" />
<text  x="101.80" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (51 samples, 7.38%)</title><rect x="10.0" y="1717" width="87.1" height="15.0" fill="rgb(230,122,17)" rx="2" ry="2" />
<text  x="13.00" y="1727.5" >[unknown]</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::raw::delete_statement*, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt; (1 samples, 0.14%)</title><rect x="68.1" y="309" width="1.7" height="15.0" fill="rgb(228,192,1)" rx="2" ry="2" />
<text  x="71.06" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (5 samples, 0.72%)</title><rect x="39.0" y="261" width="8.6" height="15.0" fill="rgb(215,185,49)" rx="2" ry="2" />
<text  x="42.03" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_initial_partition_key_restrictions (1 samples, 0.14%)</title><rect x="86.8" y="1477" width="1.8" height="15.0" fill="rgb(214,195,21)" rx="2" ry="2" />
<text  x="89.85" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="1065.3" y="1317" width="1.7" height="15.0" fill="rgb(240,189,16)" rx="2" ry="2" />
<text  x="1068.34" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1557" width="68.3" height="15.0" fill="rgb(250,169,17)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" >[unknown]</text>
</g>
<g >
<title>cql3::query_options::query_options (6 samples, 0.87%)</title><rect x="728.9" y="1589" width="10.3" height="15.0" fill="rgb(214,136,44)" rx="2" ry="2" />
<text  x="731.93" y="1599.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (4 samples, 0.58%)</title><rect x="1108.0" y="1749" width="6.9" height="15.0" fill="rgb(224,32,6)" rx="2" ry="2" />
<text  x="1111.03" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.14%)</title><rect x="906.5" y="1461" width="1.7" height="15.0" fill="rgb(215,18,12)" rx="2" ry="2" />
<text  x="909.53" y="1471.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 2.03%)</title><rect x="97.1" y="1685" width="23.9" height="15.0" fill="rgb(232,130,51)" rx="2" ry="2" />
<text  x="100.09" y="1695.5" >s..</text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (2 samples, 0.29%)</title><rect x="59.5" y="405" width="3.4" height="15.0" fill="rgb(253,93,5)" rx="2" ry="2" />
<text  x="62.52" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.14%)</title><rect x="71.5" y="277" width="1.7" height="15.0" fill="rgb(213,117,16)" rx="2" ry="2" />
<text  x="74.48" y="287.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.14%)</title><rect x="115.9" y="1445" width="1.7" height="15.0" fill="rgb(252,169,15)" rx="2" ry="2" />
<text  x="118.88" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="997" width="64.9" height="15.0" fill="rgb(237,147,45)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" >[unknown]</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.14%)</title><rect x="676.0" y="1605" width="1.7" height="15.0" fill="rgb(205,53,34)" rx="2" ry="2" />
<text  x="678.99" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.43%)</title><rect x="959.5" y="1397" width="5.1" height="15.0" fill="rgb(249,129,11)" rx="2" ry="2" />
<text  x="962.46" y="1407.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (2 samples, 0.29%)</title><rect x="807.5" y="1557" width="3.4" height="15.0" fill="rgb(237,112,5)" rx="2" ry="2" />
<text  x="810.48" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.14%)</title><rect x="109.0" y="1397" width="1.8" height="15.0" fill="rgb(249,25,37)" rx="2" ry="2" />
<text  x="112.04" y="1407.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.14%)</title><rect x="18.5" y="101" width="1.7" height="15.0" fill="rgb(226,140,2)" rx="2" ry="2" />
<text  x="21.54" y="111.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.29%)</title><rect x="39.0" y="245" width="3.4" height="15.0" fill="rgb(208,174,41)" rx="2" ry="2" />
<text  x="42.03" y="255.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="757" width="64.9" height="15.0" fill="rgb(222,181,33)" rx="2" ry="2" />
<text  x="13.00" y="767.5" >[unknown]</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.14%)</title><rect x="105.6" y="1301" width="1.7" height="15.0" fill="rgb(226,81,7)" rx="2" ry="2" />
<text  x="108.63" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="97.1" y="1285" width="1.7" height="15.0" fill="rgb(225,142,3)" rx="2" ry="2" />
<text  x="100.09" y="1295.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (11 samples, 1.59%)</title><rect x="78.3" y="1669" width="18.8" height="15.0" fill="rgb(210,51,45)" rx="2" ry="2" />
<text  x="81.31" y="1679.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.29%)</title><rect x="54.4" y="197" width="3.4" height="15.0" fill="rgb(218,88,30)" rx="2" ry="2" />
<text  x="57.40" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (2 samples, 0.29%)</title><rect x="117.6" y="1461" width="3.4" height="15.0" fill="rgb(243,190,35)" rx="2" ry="2" />
<text  x="120.58" y="1471.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.14%)</title><rect x="107.3" y="1413" width="1.7" height="15.0" fill="rgb(213,198,11)" rx="2" ry="2" />
<text  x="110.34" y="1423.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.14%)</title><rect x="76.6" y="1061" width="1.7" height="15.0" fill="rgb(224,65,35)" rx="2" ry="2" />
<text  x="79.60" y="1071.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (14 samples, 2.03%)</title><rect x="495.0" y="1541" width="23.9" height="15.0" fill="rgb(206,153,6)" rx="2" ry="2" />
<text  x="497.98" y="1551.5" >m..</text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="97.1" y="1189" width="1.7" height="15.0" fill="rgb(254,123,25)" rx="2" ry="2" />
<text  x="100.09" y="1199.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.14%)</title><rect x="821.1" y="1541" width="1.8" height="15.0" fill="rgb(240,116,13)" rx="2" ry="2" />
<text  x="824.14" y="1551.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="395.9" y="1557" width="1.7" height="15.0" fill="rgb(238,181,9)" rx="2" ry="2" />
<text  x="398.93" y="1567.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (1 samples, 0.14%)</title><rect x="698.2" y="1605" width="1.7" height="15.0" fill="rgb(232,108,34)" rx="2" ry="2" />
<text  x="701.19" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.14%)</title><rect x="590.6" y="1461" width="1.7" height="15.0" fill="rgb(218,25,19)" rx="2" ry="2" />
<text  x="593.61" y="1471.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (11 samples, 1.59%)</title><rect x="11.7" y="309" width="18.8" height="15.0" fill="rgb(244,40,44)" rx="2" ry="2" />
<text  x="14.71" y="319.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::raw::delete_statement*, false&gt;::_M_head (1 samples, 0.14%)</title><rect x="68.1" y="293" width="1.7" height="15.0" fill="rgb(235,37,34)" rx="2" ry="2" />
<text  x="71.06" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="103.9" y="1269" width="1.7" height="15.0" fill="rgb(222,90,4)" rx="2" ry="2" />
<text  x="106.92" y="1279.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (2 samples, 0.29%)</title><rect x="1087.5" y="1589" width="3.5" height="15.0" fill="rgb(230,207,12)" rx="2" ry="2" />
<text  x="1090.54" y="1599.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="103.9" y="1189" width="1.7" height="15.0" fill="rgb(251,80,43)" rx="2" ry="2" />
<text  x="106.92" y="1199.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_deallocate_map (1 samples, 0.14%)</title><rect x="16.8" y="165" width="1.7" height="15.0" fill="rgb(243,18,6)" rx="2" ry="2" />
<text  x="19.83" y="175.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.14%)</title><rect x="144.9" y="1589" width="1.7" height="15.0" fill="rgb(208,32,46)" rx="2" ry="2" />
<text  x="147.91" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (1 samples, 0.14%)</title><rect x="95.4" y="1573" width="1.7" height="15.0" fill="rgb(207,147,41)" rx="2" ry="2" />
<text  x="98.38" y="1583.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (2 samples, 0.29%)</title><rect x="645.3" y="1621" width="3.4" height="15.0" fill="rgb(252,220,7)" rx="2" ry="2" />
<text  x="648.25" y="1631.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (40 samples, 5.79%)</title><rect x="923.6" y="1477" width="68.3" height="15.0" fill="rgb(225,67,35)" rx="2" ry="2" />
<text  x="926.60" y="1487.5" >service..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.29%)</title><rect x="39.0" y="181" width="3.4" height="15.0" fill="rgb(249,50,51)" rx="2" ry="2" />
<text  x="42.03" y="191.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (1 samples, 0.14%)</title><rect x="95.4" y="1557" width="1.7" height="15.0" fill="rgb(224,78,21)" rx="2" ry="2" />
<text  x="98.38" y="1567.5" ></text>
</g>
<g >
<title>seastar::file_data_sink_impl::~file_data_sink_impl (1 samples, 0.14%)</title><rect x="129.5" y="1637" width="1.7" height="15.0" fill="rgb(253,19,28)" rx="2" ry="2" />
<text  x="132.54" y="1647.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (130 samples, 18.81%)</title><rect x="833.1" y="1557" width="222.0" height="15.0" fill="rgb(247,179,7)" rx="2" ry="2" />
<text  x="836.10" y="1567.5" >cql3::statements::select_stat..</text>
</g>
<g >
<title>table::add_coordinator_read_latency (1 samples, 0.14%)</title><rect x="1097.8" y="1621" width="1.7" height="15.0" fill="rgb(248,117,22)" rx="2" ry="2" />
<text  x="1100.79" y="1631.5" ></text>
</g>
<g >
<title>create_partitions (7 samples, 1.01%)</title><rect x="59.5" y="485" width="12.0" height="15.0" fill="rgb(249,155,48)" rx="2" ry="2" />
<text  x="62.52" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (1 samples, 0.14%)</title><rect x="76.6" y="1013" width="1.7" height="15.0" fill="rgb(223,90,10)" rx="2" ry="2" />
<text  x="79.60" y="1023.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.14%)</title><rect x="71.5" y="357" width="1.7" height="15.0" fill="rgb(232,217,7)" rx="2" ry="2" />
<text  x="74.48" y="367.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="789" width="64.9" height="15.0" fill="rgb(231,4,39)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.14%)</title><rect x="103.9" y="1285" width="1.7" height="15.0" fill="rgb(241,220,5)" rx="2" ry="2" />
<text  x="106.92" y="1295.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::function&lt;partition_presence_checker_result  (1 samples, 0.14%)</title><rect x="196.1" y="1589" width="1.7" height="15.0" fill="rgb(205,78,19)" rx="2" ry="2" />
<text  x="199.14" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.14%)</title><rect x="57.8" y="197" width="1.7" height="15.0" fill="rgb(212,147,36)" rx="2" ry="2" />
<text  x="60.81" y="207.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.14%)</title><rect x="71.5" y="245" width="1.7" height="15.0" fill="rgb(226,155,38)" rx="2" ry="2" />
<text  x="74.48" y="255.5" ></text>
</g>
<g >
<title>freeze (2 samples, 0.29%)</title><rect x="1063.6" y="1381" width="3.4" height="15.0" fill="rgb(206,84,22)" rx="2" ry="2" />
<text  x="1066.63" y="1391.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (1 samples, 0.14%)</title><rect x="1080.7" y="1605" width="1.7" height="15.0" fill="rgb(214,27,47)" rx="2" ry="2" />
<text  x="1083.71" y="1615.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (1 samples, 0.14%)</title><rect x="759.7" y="1509" width="1.7" height="15.0" fill="rgb(225,137,3)" rx="2" ry="2" />
<text  x="762.67" y="1519.5" ></text>
</g>
<g >
<title>seastar::app_template::run (565 samples, 81.77%)</title><rect x="136.4" y="1701" width="964.8" height="15.0" fill="rgb(221,92,21)" rx="2" ry="2" />
<text  x="139.37" y="1711.5" >seastar::app_template::run</text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.14%)</title><rect x="97.1" y="1429" width="1.7" height="15.0" fill="rgb(236,123,10)" rx="2" ry="2" />
<text  x="100.09" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.14%)</title><rect x="13.4" y="149" width="1.7" height="15.0" fill="rgb(231,97,40)" rx="2" ry="2" />
<text  x="16.42" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.14%)</title><rect x="674.3" y="1605" width="1.7" height="15.0" fill="rgb(245,155,8)" rx="2" ry="2" />
<text  x="677.28" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.29%)</title><rect x="687.9" y="1605" width="3.5" height="15.0" fill="rgb(237,217,24)" rx="2" ry="2" />
<text  x="690.95" y="1615.5" ></text>
</g>
<g >
<title>free (1 samples, 0.14%)</title><rect x="411.3" y="1477" width="1.7" height="15.0" fill="rgb(207,13,41)" rx="2" ry="2" />
<text  x="414.30" y="1487.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (5 samples, 0.72%)</title><rect x="594.0" y="1493" width="8.6" height="15.0" fill="rgb(212,10,46)" rx="2" ry="2" />
<text  x="597.02" y="1503.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.14%)</title><rect x="114.2" y="1445" width="1.7" height="15.0" fill="rgb(248,156,7)" rx="2" ry="2" />
<text  x="117.17" y="1455.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.29%)</title><rect x="71.5" y="421" width="3.4" height="15.0" fill="rgb(234,201,12)" rx="2" ry="2" />
<text  x="74.48" y="431.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::create_aggregate_statement*, std::default_delete&lt;cql3::statements::create_aggregate_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.14%)</title><rect x="47.6" y="277" width="1.7" height="15.0" fill="rgb(213,215,33)" rx="2" ry="2" />
<text  x="50.57" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.14%)</title><rect x="105.6" y="1349" width="1.7" height="15.0" fill="rgb(230,158,5)" rx="2" ry="2" />
<text  x="108.63" y="1359.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (1 samples, 0.14%)</title><rect x="1050.0" y="1525" width="1.7" height="15.0" fill="rgb(222,130,13)" rx="2" ry="2" />
<text  x="1052.97" y="1535.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (34 samples, 4.92%)</title><rect x="1131.9" y="1749" width="58.1" height="15.0" fill="rgb(219,105,36)" rx="2" ry="2" />
<text  x="1134.94" y="1759.5" >sched_..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.14%)</title><rect x="45.9" y="213" width="1.7" height="15.0" fill="rgb(225,201,13)" rx="2" ry="2" />
<text  x="48.86" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.14%)</title><rect x="117.6" y="1349" width="1.7" height="15.0" fill="rgb(244,219,41)" rx="2" ry="2" />
<text  x="120.58" y="1359.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (5 samples, 0.72%)</title><rect x="853.6" y="1493" width="8.5" height="15.0" fill="rgb(254,91,37)" rx="2" ry="2" />
<text  x="856.59" y="1503.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="44.2" y="197" width="1.7" height="15.0" fill="rgb(214,77,48)" rx="2" ry="2" />
<text  x="47.15" y="207.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 5.79%)</title><rect x="10.0" y="1653" width="68.3" height="15.0" fill="rgb(219,132,53)" rx="2" ry="2" />
<text  x="13.00" y="1663.5" >[unknown]</text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (12 samples, 1.74%)</title><rect x="1009.0" y="1461" width="20.5" height="15.0" fill="rgb(247,5,12)" rx="2" ry="2" />
<text  x="1011.99" y="1471.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (3 samples, 0.43%)</title><rect x="465.9" y="1525" width="5.2" height="15.0" fill="rgb(218,84,14)" rx="2" ry="2" />
<text  x="468.95" y="1535.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.58%)</title><rect x="435.2" y="1493" width="6.8" height="15.0" fill="rgb(219,201,18)" rx="2" ry="2" />
<text  x="438.21" y="1503.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.14%)</title><rect x="517.2" y="1493" width="1.7" height="15.0" fill="rgb(222,162,22)" rx="2" ry="2" />
<text  x="520.18" y="1503.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (7 samples, 1.01%)</title><rect x="59.5" y="469" width="12.0" height="15.0" fill="rgb(232,53,42)" rx="2" ry="2" />
<text  x="62.52" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (20 samples, 2.89%)</title><rect x="337.9" y="1397" width="34.1" height="15.0" fill="rgb(245,179,23)" rx="2" ry="2" />
<text  x="340.87" y="1407.5" >co..</text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.29%)</title><rect x="384.0" y="1493" width="3.4" height="15.0" fill="rgb(234,136,25)" rx="2" ry="2" />
<text  x="386.98" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.14%)</title><rect x="30.5" y="229" width="1.7" height="15.0" fill="rgb(249,192,44)" rx="2" ry="2" />
<text  x="33.49" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.14%)</title><rect x="103.9" y="1221" width="1.7" height="15.0" fill="rgb(251,66,11)" rx="2" ry="2" />
<text  x="106.92" y="1231.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.58%)</title><rect x="732.3" y="1541" width="6.9" height="15.0" fill="rgb(243,150,53)" rx="2" ry="2" />
<text  x="735.34" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.14%)</title><rect x="664.0" y="1557" width="1.7" height="15.0" fill="rgb(214,176,24)" rx="2" ry="2" />
<text  x="667.04" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (8 samples, 1.16%)</title><rect x="97.1" y="1493" width="13.7" height="15.0" fill="rgb(209,7,10)" rx="2" ry="2" />
<text  x="100.09" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="1061" width="64.9" height="15.0" fill="rgb(249,133,16)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" >[unknown]</text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.14%)</title><rect x="225.2" y="1573" width="1.7" height="15.0" fill="rgb(210,32,43)" rx="2" ry="2" />
<text  x="228.17" y="1583.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (1 samples, 0.14%)</title><rect x="138.1" y="1637" width="1.7" height="15.0" fill="rgb(231,119,47)" rx="2" ry="2" />
<text  x="141.08" y="1647.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="303.7" y="1429" width="1.7" height="15.0" fill="rgb(246,210,27)" rx="2" ry="2" />
<text  x="306.72" y="1439.5" ></text>
</g>
<g >
<title>__start_context (7 samples, 1.01%)</title><rect x="59.5" y="565" width="12.0" height="15.0" fill="rgb(252,50,28)" rx="2" ry="2" />
<text  x="62.52" y="575.5" ></text>
</g>
<g >
<title>hwloc_bitmap_andnot (1 samples, 0.14%)</title><rect x="133.0" y="1733" width="1.7" height="15.0" fill="rgb(216,146,27)" rx="2" ry="2" />
<text  x="135.95" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (1 samples, 0.14%)</title><rect x="109.0" y="1413" width="1.8" height="15.0" fill="rgb(231,123,33)" rx="2" ry="2" />
<text  x="112.04" y="1423.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (1 samples, 0.14%)</title><rect x="1067.0" y="1333" width="1.8" height="15.0" fill="rgb(247,195,34)" rx="2" ry="2" />
<text  x="1070.05" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.14%)</title><rect x="18.5" y="133" width="1.7" height="15.0" fill="rgb(215,228,49)" rx="2" ry="2" />
<text  x="21.54" y="143.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="551.3" y="1493" width="1.7" height="15.0" fill="rgb(244,95,47)" rx="2" ry="2" />
<text  x="554.33" y="1503.5" ></text>
</g>
<g >
<title>dht::tri_compare (2 samples, 0.29%)</title><rect x="571.8" y="1493" width="3.4" height="15.0" fill="rgb(212,54,41)" rx="2" ry="2" />
<text  x="574.82" y="1503.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.14%)</title><rect x="858.7" y="1429" width="1.7" height="15.0" fill="rgb(231,77,6)" rx="2" ry="2" />
<text  x="861.71" y="1439.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (14 samples, 2.03%)</title><rect x="97.1" y="1589" width="23.9" height="15.0" fill="rgb(247,10,31)" rx="2" ry="2" />
<text  x="100.09" y="1599.5" >c..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.14%)</title><rect x="18.5" y="149" width="1.7" height="15.0" fill="rgb(238,62,8)" rx="2" ry="2" />
<text  x="21.54" y="159.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (3 samples, 0.43%)</title><rect x="698.2" y="1621" width="5.1" height="15.0" fill="rgb(217,20,1)" rx="2" ry="2" />
<text  x="701.19" y="1631.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (3 samples, 0.43%)</title><rect x="191.0" y="1589" width="5.1" height="15.0" fill="rgb(231,39,45)" rx="2" ry="2" />
<text  x="194.01" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="134.7" y="1717" width="1.7" height="15.0" fill="rgb(213,105,5)" rx="2" ry="2" />
<text  x="137.66" y="1727.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_exception (1 samples, 0.14%)</title><rect x="62.9" y="373" width="1.7" height="15.0" fill="rgb(219,85,24)" rx="2" ry="2" />
<text  x="65.94" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.14%)</title><rect x="57.8" y="69" width="1.7" height="15.0" fill="rgb(241,191,4)" rx="2" ry="2" />
<text  x="60.81" y="79.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::_M_ptr (1 samples, 0.14%)</title><rect x="66.4" y="357" width="1.7" height="15.0" fill="rgb(223,185,45)" rx="2" ry="2" />
<text  x="69.35" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.72%)</title><rect x="1061.9" y="1589" width="8.6" height="15.0" fill="rgb(254,155,54)" rx="2" ry="2" />
<text  x="1064.92" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.72%)</title><rect x="1061.9" y="1573" width="8.6" height="15.0" fill="rgb(226,26,28)" rx="2" ry="2" />
<text  x="1064.92" y="1583.5" ></text>
</g>
<g >
<title>hwloc_linux_set_tid_cpubind (10 samples, 1.45%)</title><rect x="1114.9" y="1749" width="17.0" height="15.0" fill="rgb(245,174,13)" rx="2" ry="2" />
<text  x="1117.86" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (2 samples, 0.29%)</title><rect x="71.5" y="405" width="3.4" height="15.0" fill="rgb(248,47,19)" rx="2" ry="2" />
<text  x="74.48" y="415.5" ></text>
</g>
<g >
<title>ser::mutation_partition_view::static_row (1 samples, 0.14%)</title><rect x="1060.2" y="1477" width="1.7" height="15.0" fill="rgb(227,207,5)" rx="2" ry="2" />
<text  x="1063.22" y="1487.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.14%)</title><rect x="107.3" y="1381" width="1.7" height="15.0" fill="rgb(233,114,20)" rx="2" ry="2" />
<text  x="110.34" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.14%)</title><rect x="45.9" y="117" width="1.7" height="15.0" fill="rgb(240,204,54)" rx="2" ry="2" />
<text  x="48.86" y="127.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (10 samples, 1.45%)</title><rect x="30.5" y="325" width="17.1" height="15.0" fill="rgb(247,201,37)" rx="2" ry="2" />
<text  x="33.49" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.14%)</title><rect x="97.1" y="1317" width="1.7" height="15.0" fill="rgb(234,106,20)" rx="2" ry="2" />
<text  x="100.09" y="1327.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (89 samples, 12.88%)</title><rect x="244.0" y="1541" width="151.9" height="15.0" fill="rgb(252,179,38)" rx="2" ry="2" />
<text  x="246.95" y="1551.5" >merging_reader&lt;muta..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.14%)</title><rect x="57.8" y="181" width="1.7" height="15.0" fill="rgb(241,114,43)" rx="2" ry="2" />
<text  x="60.81" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.14%)</title><rect x="13.4" y="117" width="1.7" height="15.0" fill="rgb(206,168,20)" rx="2" ry="2" />
<text  x="16.42" y="127.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.14%)</title><rect x="51.0" y="309" width="1.7" height="15.0" fill="rgb(246,185,35)" rx="2" ry="2" />
<text  x="53.98" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.14%)</title><rect x="1099.5" y="1637" width="1.7" height="15.0" fill="rgb(242,39,43)" rx="2" ry="2" />
<text  x="1102.49" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 5.50%)</title><rect x="10.0" y="725" width="64.9" height="15.0" fill="rgb(236,144,45)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.14%)</title><rect x="97.1" y="1269" width="1.7" height="15.0" fill="rgb(210,39,34)" rx="2" ry="2" />
<text  x="100.09" y="1279.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.29%)</title><rect x="103.9" y="1381" width="3.4" height="15.0" fill="rgb(239,0,41)" rx="2" ry="2" />
<text  x="106.92" y="1391.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.14%)</title><rect x="920.2" y="1477" width="1.7" height="15.0" fill="rgb(226,174,22)" rx="2" ry="2" />
<text  x="923.19" y="1487.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.14%)</title><rect x="44.2" y="213" width="1.7" height="15.0" fill="rgb(213,218,5)" rx="2" ry="2" />
<text  x="47.15" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (1 samples, 0.14%)</title><rect x="828.0" y="1493" width="1.7" height="15.0" fill="rgb(238,121,44)" rx="2" ry="2" />
<text  x="830.97" y="1503.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (11 samples, 1.59%)</title><rect x="78.3" y="1653" width="18.8" height="15.0" fill="rgb(214,177,5)" rx="2" ry="2" />
<text  x="81.31" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.43%)</title><rect x="942.4" y="1413" width="5.1" height="15.0" fill="rgb(249,22,6)" rx="2" ry="2" />
<text  x="945.39" y="1423.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 2.03%)</title><rect x="97.1" y="1557" width="23.9" height="15.0" fill="rgb(205,78,43)" rx="2" ry="2" />
<text  x="100.09" y="1567.5" >s..</text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.14%)</title><rect x="1067.0" y="1349" width="1.8" height="15.0" fill="rgb(235,165,26)" rx="2" ry="2" />
<text  x="1070.05" y="1359.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.14%)</title><rect x="51.0" y="293" width="1.7" height="15.0" fill="rgb(231,57,20)" rx="2" ry="2" />
<text  x="53.98" y="303.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.14%)</title><rect x="56.1" y="133" width="1.7" height="15.0" fill="rgb(212,54,48)" rx="2" ry="2" />
<text  x="59.11" y="143.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (4 samples, 0.58%)</title><rect x="11.7" y="245" width="6.8" height="15.0" fill="rgb(252,144,34)" rx="2" ry="2" />
<text  x="14.71" y="255.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (7 samples, 1.01%)</title><rect x="143.2" y="1621" width="12.0" height="15.0" fill="rgb(209,41,16)" rx="2" ry="2" />
<text  x="146.20" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (29 samples, 4.20%)</title><rect x="10.0" y="565" width="49.5" height="15.0" fill="rgb(227,151,28)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >[unk..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.14%)</title><rect x="705.0" y="1605" width="1.7" height="15.0" fill="rgb(244,49,42)" rx="2" ry="2" />
<text  x="708.02" y="1615.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (74 samples, 10.71%)</title><rect x="903.1" y="1509" width="126.4" height="15.0" fill="rgb(226,99,47)" rx="2" ry="2" />
<text  x="906.11" y="1519.5" >service::storag..</text>
</g>
<g >
<title>seastar::app_template::run (565 samples, 81.77%)</title><rect x="136.4" y="1717" width="964.8" height="15.0" fill="rgb(210,37,24)" rx="2" ry="2" />
<text  x="139.37" y="1727.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.14%)</title><rect x="44.2" y="229" width="1.7" height="15.0" fill="rgb(218,69,48)" rx="2" ry="2" />
<text  x="47.15" y="239.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (8 samples, 1.16%)</title><rect x="81.7" y="1573" width="13.7" height="15.0" fill="rgb(207,141,54)" rx="2" ry="2" />
<text  x="84.72" y="1583.5" ></text>
</g>
</g>
</svg>
