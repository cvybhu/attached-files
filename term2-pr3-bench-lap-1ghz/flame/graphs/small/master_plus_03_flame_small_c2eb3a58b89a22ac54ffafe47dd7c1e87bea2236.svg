<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="838.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="821" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="821" > </text>
<g id="frames">
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%)</title><rect x="138.8" y="517" width="0.4" height="15.0" fill="rgb(233,58,35)" rx="2" ry="2" />
<text  x="141.82" y="527.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="112.7" y="293" width="0.4" height="15.0" fill="rgb(207,71,1)" rx="2" ry="2" />
<text  x="115.69" y="303.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.03%)</title><rect x="10.4" y="469" width="0.3" height="15.0" fill="rgb(226,85,49)" rx="2" ry="2" />
<text  x="13.37" y="479.5" ></text>
</g>
<g >
<title>create_partitions (341 samples, 10.64%)</title><rect x="12.9" y="645" width="125.6" height="15.0" fill="rgb(224,207,21)" rx="2" ry="2" />
<text  x="15.94" y="655.5" >create_partitions</text>
</g>
<g >
<title>validation::validate_column_family (21 samples, 0.66%)</title><rect x="821.6" y="533" width="7.7" height="15.0" fill="rgb(220,86,52)" rx="2" ry="2" />
<text  x="824.57" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="103.9" y="373" width="0.3" height="15.0" fill="rgb(254,145,39)" rx="2" ry="2" />
<text  x="106.86" y="383.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS4_12restrictionsL11has_eq_nullERKNS4_13query_optionsERKNS5_10expressionEE3$_8EES8_SI_T_EUlRS7_E_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_8constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_11conjunctionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_12column_valueEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_5tokenEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13function_callEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4castEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_15field_selectionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4nullEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13bind_variableEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_16untyped_constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_17tuple_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_22collection_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSR_S6_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_S1V_SN_S1Z_S23_S27_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES2C_S2F_ (2 samples, 0.06%)</title><rect x="851.8" y="485" width="0.7" height="15.0" fill="rgb(242,126,26)" rx="2" ry="2" />
<text  x="854.75" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="105.0" y="261" width="0.3" height="15.0" fill="rgb(226,88,1)" rx="2" ry="2" />
<text  x="107.96" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (1 samples, 0.03%)</title><rect x="1028.1" y="485" width="0.3" height="15.0" fill="rgb(236,224,28)" rx="2" ry="2" />
<text  x="1031.05" y="495.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%)</title><rect x="87.7" y="181" width="0.3" height="15.0" fill="rgb(215,37,28)" rx="2" ry="2" />
<text  x="90.66" y="191.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (52 samples, 1.62%)</title><rect x="1055.3" y="437" width="19.1" height="15.0" fill="rgb(220,167,22)" rx="2" ry="2" />
<text  x="1058.29" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (9 samples, 0.28%)</title><rect x="385.4" y="517" width="3.3" height="15.0" fill="rgb(206,73,9)" rx="2" ry="2" />
<text  x="388.42" y="527.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.03%)</title><rect x="378.8" y="437" width="0.4" height="15.0" fill="rgb(243,186,6)" rx="2" ry="2" />
<text  x="381.80" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%)</title><rect x="181.9" y="613" width="1.1" height="15.0" fill="rgb(207,108,18)" rx="2" ry="2" />
<text  x="184.88" y="623.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="119.3" y="229" width="0.4" height="15.0" fill="rgb(243,152,38)" rx="2" ry="2" />
<text  x="122.31" y="239.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%)</title><rect x="978.4" y="453" width="0.3" height="15.0" fill="rgb(244,18,30)" rx="2" ry="2" />
<text  x="981.37" y="463.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.03%)</title><rect x="43.1" y="405" width="0.4" height="15.0" fill="rgb(224,209,16)" rx="2" ry="2" />
<text  x="46.13" y="415.5" ></text>
</g>
<g >
<title>auth::resource::resource (5 samples, 0.16%)</title><rect x="793.2" y="533" width="1.9" height="15.0" fill="rgb(252,77,5)" rx="2" ry="2" />
<text  x="796.23" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="28.0" y="421" width="0.8" height="15.0" fill="rgb(218,162,28)" rx="2" ry="2" />
<text  x="31.03" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="114.5" y="389" width="0.4" height="15.0" fill="rgb(229,198,6)" rx="2" ry="2" />
<text  x="117.53" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.12%)</title><rect x="942.3" y="485" width="1.5" height="15.0" fill="rgb(221,66,40)" rx="2" ry="2" />
<text  x="945.30" y="495.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (5 samples, 0.16%)</title><rect x="79.2" y="421" width="1.8" height="15.0" fill="rgb(212,96,40)" rx="2" ry="2" />
<text  x="82.20" y="431.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (52 samples, 1.62%)</title><rect x="1055.3" y="453" width="19.1" height="15.0" fill="rgb(248,210,52)" rx="2" ry="2" />
<text  x="1058.29" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="99.4" y="373" width="0.4" height="15.0" fill="rgb(229,171,9)" rx="2" ry="2" />
<text  x="102.44" y="383.5" ></text>
</g>
<g >
<title>free (10 samples, 0.31%)</title><rect x="429.2" y="485" width="3.7" height="15.0" fill="rgb(247,100,16)" rx="2" ry="2" />
<text  x="432.22" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (19 samples, 0.59%)</title><rect x="31.3" y="453" width="7.0" height="15.0" fill="rgb(225,113,47)" rx="2" ry="2" />
<text  x="34.35" y="463.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.03%)</title><rect x="184.5" y="597" width="0.3" height="15.0" fill="rgb(233,74,10)" rx="2" ry="2" />
<text  x="187.46" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="96.1" y="261" width="0.4" height="15.0" fill="rgb(220,3,21)" rx="2" ry="2" />
<text  x="99.13" y="271.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%)</title><rect x="843.7" y="597" width="0.3" height="15.0" fill="rgb(252,215,43)" rx="2" ry="2" />
<text  x="846.66" y="607.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (11 samples, 0.34%)</title><rect x="1109.4" y="421" width="4.0" height="15.0" fill="rgb(246,46,34)" rx="2" ry="2" />
<text  x="1112.39" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="70.0" y="357" width="0.4" height="15.0" fill="rgb(205,158,49)" rx="2" ry="2" />
<text  x="72.99" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.06%)</title><rect x="45.0" y="309" width="0.7" height="15.0" fill="rgb(211,26,41)" rx="2" ry="2" />
<text  x="47.97" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="29.1" y="389" width="0.4" height="15.0" fill="rgb(229,217,7)" rx="2" ry="2" />
<text  x="32.14" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.03%)</title><rect x="378.8" y="453" width="0.4" height="15.0" fill="rgb(212,108,25)" rx="2" ry="2" />
<text  x="381.80" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="762.3" y="581" width="0.4" height="15.0" fill="rgb(249,147,51)" rx="2" ry="2" />
<text  x="765.31" y="591.5" ></text>
</g>
<g >
<title>ser::deserialize_array_helper&lt;false, ser::deletable_row_view&gt;::doit&lt;seastar::simple_memory_input_stream, utils::chunked_vector&lt;ser::deletable_row_view, 131072ul&gt; &gt; (1 samples, 0.03%)</title><rect x="1107.2" y="453" width="0.4" height="15.0" fill="rgb(241,147,3)" rx="2" ry="2" />
<text  x="1110.19" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::deque (1 samples, 0.03%)</title><rect x="26.6" y="453" width="0.3" height="15.0" fill="rgb(218,225,23)" rx="2" ry="2" />
<text  x="29.56" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="73.3" y="325" width="0.4" height="15.0" fill="rgb(216,176,21)" rx="2" ry="2" />
<text  x="76.31" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%)</title><rect x="604.0" y="469" width="1.2" height="15.0" fill="rgb(223,98,28)" rx="2" ry="2" />
<text  x="607.05" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="92.8" y="261" width="1.1" height="15.0" fill="rgb(229,7,28)" rx="2" ry="2" />
<text  x="95.81" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::update_statement (2 samples, 0.06%)</title><rect x="125.6" y="485" width="0.7" height="15.0" fill="rgb(215,89,53)" rx="2" ry="2" />
<text  x="128.57" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="72.6" y="325" width="0.3" height="15.0" fill="rgb(254,125,21)" rx="2" ry="2" />
<text  x="75.57" y="335.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%)</title><rect x="12.6" y="645" width="0.3" height="15.0" fill="rgb(220,102,14)" rx="2" ry="2" />
<text  x="15.58" y="655.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%)</title><rect x="835.2" y="565" width="0.4" height="15.0" fill="rgb(240,27,20)" rx="2" ry="2" />
<text  x="838.19" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="84.3" y="341" width="0.4" height="15.0" fill="rgb(224,150,45)" rx="2" ry="2" />
<text  x="87.35" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (2 samples, 0.06%)</title><rect x="36.5" y="389" width="0.7" height="15.0" fill="rgb(240,102,47)" rx="2" ry="2" />
<text  x="39.50" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%)</title><rect x="722.6" y="597" width="0.7" height="15.0" fill="rgb(221,157,7)" rx="2" ry="2" />
<text  x="725.56" y="607.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%)</title><rect x="90.6" y="421" width="0.4" height="15.0" fill="rgb(210,28,30)" rx="2" ry="2" />
<text  x="93.61" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (2 samples, 0.06%)</title><rect x="33.6" y="325" width="0.7" height="15.0" fill="rgb(206,5,41)" rx="2" ry="2" />
<text  x="36.56" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%)</title><rect x="85.8" y="277" width="0.4" height="15.0" fill="rgb(224,169,0)" rx="2" ry="2" />
<text  x="88.82" y="287.5" ></text>
</g>
<g >
<title>schema_mutations::schema_mutations (1 samples, 0.03%)</title><rect x="186.3" y="533" width="0.4" height="15.0" fill="rgb(218,43,17)" rx="2" ry="2" />
<text  x="189.30" y="543.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (3 samples, 0.09%)</title><rect x="12.9" y="629" width="1.1" height="15.0" fill="rgb(205,228,25)" rx="2" ry="2" />
<text  x="15.94" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="75.9" y="325" width="0.7" height="15.0" fill="rgb(250,204,27)" rx="2" ry="2" />
<text  x="78.88" y="335.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (1 samples, 0.03%)</title><rect x="1119.0" y="629" width="0.3" height="15.0" fill="rgb(253,52,2)" rx="2" ry="2" />
<text  x="1121.96" y="639.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="152.4" y="645" width="0.4" height="15.0" fill="rgb(228,85,32)" rx="2" ry="2" />
<text  x="155.44" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="78.1" y="357" width="0.7" height="15.0" fill="rgb(206,183,19)" rx="2" ry="2" />
<text  x="81.09" y="367.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.03%)</title><rect x="710.0" y="613" width="0.4" height="15.0" fill="rgb(237,219,53)" rx="2" ry="2" />
<text  x="713.05" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%)</title><rect x="835.9" y="565" width="2.2" height="15.0" fill="rgb(251,195,45)" rx="2" ry="2" />
<text  x="838.93" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator* (1 samples, 0.03%)</title><rect x="115.6" y="293" width="0.4" height="15.0" fill="rgb(234,98,3)" rx="2" ry="2" />
<text  x="118.63" y="303.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (9 samples, 0.28%)</title><rect x="111.2" y="437" width="3.3" height="15.0" fill="rgb(253,157,0)" rx="2" ry="2" />
<text  x="114.22" y="447.5" ></text>
</g>
<g >
<title>partition_entry::read (7 samples, 0.22%)</title><rect x="609.2" y="517" width="2.6" height="15.0" fill="rgb(219,74,20)" rx="2" ry="2" />
<text  x="612.20" y="527.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (3 samples, 0.09%)</title><rect x="185.6" y="629" width="1.1" height="15.0" fill="rgb(247,157,11)" rx="2" ry="2" />
<text  x="188.56" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.9" y="229" width="0.4" height="15.0" fill="rgb(230,179,30)" rx="2" ry="2" />
<text  x="82.93" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="1022.5" y="373" width="0.4" height="15.0" fill="rgb(247,151,27)" rx="2" ry="2" />
<text  x="1025.53" y="383.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (2 samples, 0.06%)</title><rect x="12.2" y="677" width="0.7" height="15.0" fill="rgb(206,220,32)" rx="2" ry="2" />
<text  x="15.21" y="687.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="796.9" y="533" width="0.4" height="15.0" fill="rgb(253,25,3)" rx="2" ry="2" />
<text  x="799.91" y="543.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (3 samples, 0.09%)</title><rect x="1018.9" y="341" width="1.1" height="15.0" fill="rgb(217,71,40)" rx="2" ry="2" />
<text  x="1021.85" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%)</title><rect x="936.0" y="533" width="0.8" height="15.0" fill="rgb(220,206,7)" rx="2" ry="2" />
<text  x="939.04" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="120.8" y="341" width="0.4" height="15.0" fill="rgb(249,126,35)" rx="2" ry="2" />
<text  x="123.79" y="351.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="58.2" y="469" width="0.8" height="15.0" fill="rgb(207,7,12)" rx="2" ry="2" />
<text  x="61.22" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="78.8" y="421" width="0.4" height="15.0" fill="rgb(222,29,32)" rx="2" ry="2" />
<text  x="81.83" y="431.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.34%)</title><rect x="951.9" y="485" width="4.0" height="15.0" fill="rgb(251,172,2)" rx="2" ry="2" />
<text  x="954.87" y="495.5" ></text>
</g>
<g >
<title>auth::operator== (3 samples, 0.09%)</title><rect x="815.7" y="453" width="1.1" height="15.0" fill="rgb(227,222,7)" rx="2" ry="2" />
<text  x="818.68" y="463.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%)</title><rect x="186.7" y="613" width="0.3" height="15.0" fill="rgb(253,208,34)" rx="2" ry="2" />
<text  x="189.67" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.06%)</title><rect x="898.1" y="453" width="0.8" height="15.0" fill="rgb(224,153,31)" rx="2" ry="2" />
<text  x="901.13" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (642 samples, 20.02%)</title><rect x="862.8" y="597" width="236.3" height="15.0" fill="rgb(226,77,15)" rx="2" ry="2" />
<text  x="865.79" y="607.5" >seastar::noncopyable_function&lt;s..</text>
</g>
<g >
<title>row::~row (1 samples, 0.03%)</title><rect x="149.1" y="677" width="0.4" height="15.0" fill="rgb(211,100,44)" rx="2" ry="2" />
<text  x="152.13" y="687.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.03%)</title><rect x="70.7" y="437" width="0.4" height="15.0" fill="rgb(241,146,54)" rx="2" ry="2" />
<text  x="73.73" y="447.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (3 samples, 0.09%)</title><rect x="71.5" y="421" width="1.1" height="15.0" fill="rgb(227,56,8)" rx="2" ry="2" />
<text  x="74.47" y="431.5" ></text>
</g>
<g >
<title>posix_memalign (9 samples, 0.28%)</title><rect x="363.0" y="357" width="3.3" height="15.0" fill="rgb(249,216,6)" rx="2" ry="2" />
<text  x="365.97" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%)</title><rect x="128.1" y="469" width="0.4" height="15.0" fill="rgb(227,10,2)" rx="2" ry="2" />
<text  x="131.15" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%)</title><rect x="818.3" y="453" width="0.3" height="15.0" fill="rgb(236,115,6)" rx="2" ry="2" />
<text  x="821.26" y="463.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (12 samples, 0.37%)</title><rect x="85.5" y="405" width="4.4" height="15.0" fill="rgb(243,101,29)" rx="2" ry="2" />
<text  x="88.45" y="415.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (1 samples, 0.03%)</title><rect x="1151.7" y="613" width="0.4" height="15.0" fill="rgb(218,76,15)" rx="2" ry="2" />
<text  x="1154.72" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="67.4" y="293" width="0.4" height="15.0" fill="rgb(214,24,53)" rx="2" ry="2" />
<text  x="70.42" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (4 samples, 0.12%)</title><rect x="100.2" y="405" width="1.4" height="15.0" fill="rgb(221,47,52)" rx="2" ry="2" />
<text  x="103.17" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;2ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="97.2" y="69" width="0.4" height="15.0" fill="rgb(225,223,13)" rx="2" ry="2" />
<text  x="100.23" y="79.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%)</title><rect x="75.5" y="357" width="0.4" height="15.0" fill="rgb(235,225,38)" rx="2" ry="2" />
<text  x="78.51" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%)</title><rect x="105.7" y="341" width="0.4" height="15.0" fill="rgb(209,197,6)" rx="2" ry="2" />
<text  x="108.70" y="351.5" ></text>
</g>
<g >
<title>table::make_reader (255 samples, 7.95%)</title><rect x="543.7" y="549" width="93.8" height="15.0" fill="rgb(254,104,38)" rx="2" ry="2" />
<text  x="546.69" y="559.5" >table::make..</text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (1 samples, 0.03%)</title><rect x="185.6" y="565" width="0.3" height="15.0" fill="rgb(221,26,48)" rx="2" ry="2" />
<text  x="188.56" y="575.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%)</title><rect x="684.7" y="613" width="2.2" height="15.0" fill="rgb(248,119,34)" rx="2" ry="2" />
<text  x="687.65" y="623.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%)</title><rect x="67.8" y="437" width="0.7" height="15.0" fill="rgb(242,132,44)" rx="2" ry="2" />
<text  x="70.79" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%)</title><rect x="99.4" y="341" width="0.4" height="15.0" fill="rgb(206,8,35)" rx="2" ry="2" />
<text  x="102.44" y="351.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (5 samples, 0.16%)</title><rect x="830.4" y="549" width="1.8" height="15.0" fill="rgb(235,169,1)" rx="2" ry="2" />
<text  x="833.41" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="89.5" y="341" width="0.4" height="15.0" fill="rgb(252,9,50)" rx="2" ry="2" />
<text  x="92.50" y="351.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="29.1" y="373" width="0.4" height="15.0" fill="rgb(234,132,3)" rx="2" ry="2" />
<text  x="32.14" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="277" width="0.4" height="15.0" fill="rgb(226,221,54)" rx="2" ry="2" />
<text  x="123.42" y="287.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="72.6" y="309" width="0.3" height="15.0" fill="rgb(206,212,26)" rx="2" ry="2" />
<text  x="75.57" y="319.5" ></text>
</g>
<g >
<title>make_map_value (1 samples, 0.03%)</title><rect x="185.6" y="501" width="0.3" height="15.0" fill="rgb(252,93,41)" rx="2" ry="2" />
<text  x="188.56" y="511.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (6 samples, 0.19%)</title><rect x="508.0" y="517" width="2.2" height="15.0" fill="rgb(215,79,30)" rx="2" ry="2" />
<text  x="510.99" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="90.2" y="325" width="0.4" height="15.0" fill="rgb(252,202,53)" rx="2" ry="2" />
<text  x="93.24" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.09%)</title><rect x="68.5" y="389" width="1.1" height="15.0" fill="rgb(213,165,45)" rx="2" ry="2" />
<text  x="71.52" y="399.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="926.1" y="517" width="0.4" height="15.0" fill="rgb(235,164,30)" rx="2" ry="2" />
<text  x="929.10" y="527.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (2 samples, 0.06%)</title><rect x="185.9" y="565" width="0.8" height="15.0" fill="rgb(226,213,13)" rx="2" ry="2" />
<text  x="188.93" y="575.5" ></text>
</g>
<g >
<title>operator== (1 samples, 0.03%)</title><rect x="183.4" y="581" width="0.3" height="15.0" fill="rgb(205,117,7)" rx="2" ry="2" />
<text  x="186.36" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_role_statement, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::drop_role_statement&gt;, void&gt; (1 samples, 0.03%)</title><rect x="130.4" y="517" width="0.3" height="15.0" fill="rgb(216,111,12)" rx="2" ry="2" />
<text  x="133.36" y="527.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (1 samples, 0.03%)</title><rect x="710.0" y="629" width="0.4" height="15.0" fill="rgb(211,223,47)" rx="2" ry="2" />
<text  x="713.05" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.03%)</title><rect x="1148.0" y="629" width="0.4" height="15.0" fill="rgb(218,199,23)" rx="2" ry="2" />
<text  x="1151.04" y="639.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="78.5" y="341" width="0.3" height="15.0" fill="rgb(242,31,35)" rx="2" ry="2" />
<text  x="81.46" y="351.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.03%)</title><rect x="851.8" y="453" width="0.3" height="15.0" fill="rgb(232,161,31)" rx="2" ry="2" />
<text  x="854.75" y="463.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%)</title><rect x="891.5" y="469" width="1.1" height="15.0" fill="rgb(243,71,34)" rx="2" ry="2" />
<text  x="894.50" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (13 samples, 0.41%)</title><rect x="85.1" y="421" width="4.8" height="15.0" fill="rgb(215,40,34)" rx="2" ry="2" />
<text  x="88.08" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="852.1" y="437" width="0.4" height="15.0" fill="rgb(237,173,50)" rx="2" ry="2" />
<text  x="855.12" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.03%)</title><rect x="10.4" y="693" width="0.3" height="15.0" fill="rgb(223,146,34)" rx="2" ry="2" />
<text  x="13.37" y="703.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (2 samples, 0.06%)</title><rect x="296.7" y="469" width="0.8" height="15.0" fill="rgb(231,161,8)" rx="2" ry="2" />
<text  x="299.72" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.9" y="261" width="0.4" height="15.0" fill="rgb(231,157,4)" rx="2" ry="2" />
<text  x="82.93" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="58.6" y="453" width="0.4" height="15.0" fill="rgb(223,122,0)" rx="2" ry="2" />
<text  x="61.58" y="463.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.03%)</title><rect x="324.3" y="421" width="0.4" height="15.0" fill="rgb(233,163,36)" rx="2" ry="2" />
<text  x="327.32" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (1 samples, 0.03%)</title><rect x="853.2" y="453" width="0.4" height="15.0" fill="rgb(243,15,30)" rx="2" ry="2" />
<text  x="856.23" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (1 samples, 0.03%)</title><rect x="664.8" y="613" width="0.3" height="15.0" fill="rgb(214,65,51)" rx="2" ry="2" />
<text  x="667.78" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (6 samples, 0.19%)</title><rect x="40.2" y="389" width="2.2" height="15.0" fill="rgb(231,0,7)" rx="2" ry="2" />
<text  x="43.18" y="399.5" ></text>
</g>
<g >
<title>dht::tri_compare (11 samples, 0.34%)</title><rect x="1070.4" y="405" width="4.0" height="15.0" fill="rgb(232,207,10)" rx="2" ry="2" />
<text  x="1073.38" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%)</title><rect x="72.2" y="261" width="0.4" height="15.0" fill="rgb(233,118,21)" rx="2" ry="2" />
<text  x="75.20" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (3 samples, 0.09%)</title><rect x="1112.3" y="389" width="1.1" height="15.0" fill="rgb(211,38,34)" rx="2" ry="2" />
<text  x="1115.34" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="121.2" y="341" width="0.3" height="15.0" fill="rgb(208,212,20)" rx="2" ry="2" />
<text  x="124.15" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%)</title><rect x="969.5" y="421" width="0.4" height="15.0" fill="rgb(219,31,53)" rx="2" ry="2" />
<text  x="972.53" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="90.2" y="389" width="0.4" height="15.0" fill="rgb(218,146,46)" rx="2" ry="2" />
<text  x="93.24" y="399.5" ></text>
</g>
<g >
<title>__start_context (14 samples, 0.44%)</title><rect x="146.2" y="741" width="5.1" height="15.0" fill="rgb(244,218,12)" rx="2" ry="2" />
<text  x="149.18" y="751.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="92.8" y="245" width="1.1" height="15.0" fill="rgb(236,81,33)" rx="2" ry="2" />
<text  x="95.81" y="255.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="890.8" y="469" width="0.7" height="15.0" fill="rgb(235,53,8)" rx="2" ry="2" />
<text  x="893.77" y="479.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (7 samples, 0.22%)</title><rect x="143.2" y="709" width="2.6" height="15.0" fill="rgb(234,8,53)" rx="2" ry="2" />
<text  x="146.24" y="719.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (5 samples, 0.16%)</title><rect x="99.8" y="421" width="1.8" height="15.0" fill="rgb(231,199,53)" rx="2" ry="2" />
<text  x="102.81" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (4 samples, 0.12%)</title><rect x="1110.9" y="309" width="1.4" height="15.0" fill="rgb(208,47,13)" rx="2" ry="2" />
<text  x="1113.87" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="85.5" y="373" width="0.3" height="15.0" fill="rgb(246,214,35)" rx="2" ry="2" />
<text  x="88.45" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%)</title><rect x="585.6" y="517" width="0.4" height="15.0" fill="rgb(210,112,36)" rx="2" ry="2" />
<text  x="588.65" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%)</title><rect x="110.1" y="469" width="0.4" height="15.0" fill="rgb(252,226,17)" rx="2" ry="2" />
<text  x="113.11" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%)</title><rect x="106.1" y="405" width="0.3" height="15.0" fill="rgb(217,41,54)" rx="2" ry="2" />
<text  x="109.06" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.06%)</title><rect x="81.0" y="453" width="0.8" height="15.0" fill="rgb(211,38,32)" rx="2" ry="2" />
<text  x="84.04" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="113.8" y="373" width="0.7" height="15.0" fill="rgb(213,79,34)" rx="2" ry="2" />
<text  x="116.79" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.03%)</title><rect x="54.2" y="389" width="0.3" height="15.0" fill="rgb(249,67,27)" rx="2" ry="2" />
<text  x="57.17" y="399.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (2 samples, 0.06%)</title><rect x="799.9" y="517" width="0.7" height="15.0" fill="rgb(239,48,6)" rx="2" ry="2" />
<text  x="802.86" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="252.6" y="549" width="0.3" height="15.0" fill="rgb(242,17,5)" rx="2" ry="2" />
<text  x="255.55" y="559.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.03%)</title><rect x="10.4" y="613" width="0.3" height="15.0" fill="rgb(238,80,16)" rx="2" ry="2" />
<text  x="13.37" y="623.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="852.1" y="453" width="0.4" height="15.0" fill="rgb(252,137,50)" rx="2" ry="2" />
<text  x="855.12" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (6 samples, 0.19%)</title><rect x="92.1" y="309" width="2.2" height="15.0" fill="rgb(236,128,17)" rx="2" ry="2" />
<text  x="95.08" y="319.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (5 samples, 0.16%)</title><rect x="895.6" y="437" width="1.8" height="15.0" fill="rgb(246,170,24)" rx="2" ry="2" />
<text  x="898.55" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="113.8" y="277" width="0.7" height="15.0" fill="rgb(221,223,34)" rx="2" ry="2" />
<text  x="116.79" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%)</title><rect x="822.3" y="517" width="0.7" height="15.0" fill="rgb(241,83,35)" rx="2" ry="2" />
<text  x="825.31" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="29.1" y="437" width="0.4" height="15.0" fill="rgb(228,4,25)" rx="2" ry="2" />
<text  x="32.14" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (25 samples, 0.78%)</title><rect x="692.0" y="629" width="9.2" height="15.0" fill="rgb(231,62,45)" rx="2" ry="2" />
<text  x="695.01" y="639.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%)</title><rect x="522.0" y="517" width="0.3" height="15.0" fill="rgb(222,204,14)" rx="2" ry="2" />
<text  x="524.97" y="527.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%)</title><rect x="853.2" y="421" width="0.4" height="15.0" fill="rgb(246,46,15)" rx="2" ry="2" />
<text  x="856.23" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%)</title><rect x="107.5" y="421" width="0.4" height="15.0" fill="rgb(241,8,16)" rx="2" ry="2" />
<text  x="110.54" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (49 samples, 1.53%)</title><rect x="505.0" y="533" width="18.1" height="15.0" fill="rgb(246,212,18)" rx="2" ry="2" />
<text  x="508.04" y="543.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.03%)</title><rect x="710.0" y="597" width="0.4" height="15.0" fill="rgb(236,96,4)" rx="2" ry="2" />
<text  x="713.05" y="607.5" ></text>
</g>
<g >
<title>data_value::data_value (1 samples, 0.03%)</title><rect x="184.1" y="581" width="0.4" height="15.0" fill="rgb(208,210,52)" rx="2" ry="2" />
<text  x="187.09" y="591.5" ></text>
</g>
<g >
<title>abstract_type::from_string (6 samples, 0.19%)</title><rect x="17.4" y="501" width="2.2" height="15.0" fill="rgb(226,218,52)" rx="2" ry="2" />
<text  x="20.36" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%)</title><rect x="606.6" y="501" width="0.4" height="15.0" fill="rgb(250,103,33)" rx="2" ry="2" />
<text  x="609.63" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (6 samples, 0.19%)</title><rect x="78.8" y="453" width="2.2" height="15.0" fill="rgb(225,190,28)" rx="2" ry="2" />
<text  x="81.83" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.56%)</title><rect x="1005.2" y="373" width="6.7" height="15.0" fill="rgb(229,211,35)" rx="2" ry="2" />
<text  x="1008.23" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%)</title><rect x="1140.7" y="613" width="0.3" height="15.0" fill="rgb(211,45,14)" rx="2" ry="2" />
<text  x="1143.68" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="119.7" y="357" width="0.3" height="15.0" fill="rgb(210,103,13)" rx="2" ry="2" />
<text  x="122.68" y="367.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (8 samples, 0.25%)</title><rect x="1109.4" y="373" width="2.9" height="15.0" fill="rgb(241,160,1)" rx="2" ry="2" />
<text  x="1112.39" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (11 samples, 0.34%)</title><rect x="1109.4" y="437" width="4.0" height="15.0" fill="rgb(223,170,34)" rx="2" ry="2" />
<text  x="1112.39" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.09%)</title><rect x="71.5" y="405" width="1.1" height="15.0" fill="rgb(208,118,12)" rx="2" ry="2" />
<text  x="74.47" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%)</title><rect x="60.8" y="469" width="0.7" height="15.0" fill="rgb(249,56,17)" rx="2" ry="2" />
<text  x="63.79" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="1114.9" y="613" width="0.4" height="15.0" fill="rgb(250,134,15)" rx="2" ry="2" />
<text  x="1117.92" y="623.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (5 samples, 0.16%)</title><rect x="582.7" y="501" width="1.8" height="15.0" fill="rgb(249,117,9)" rx="2" ry="2" />
<text  x="585.70" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="453" width="0.4" height="15.0" fill="rgb(213,115,53)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="838.1" y="581" width="0.4" height="15.0" fill="rgb(222,78,26)" rx="2" ry="2" />
<text  x="841.13" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="709" width="0.4" height="15.0" fill="rgb(251,134,33)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="613" width="0.4" height="15.0" fill="rgb(237,1,46)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>query::querier_base::close (88 samples, 2.74%)</title><rect x="503.6" y="581" width="32.4" height="15.0" fill="rgb(209,119,13)" rx="2" ry="2" />
<text  x="506.57" y="591.5" >qu..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="78.5" y="261" width="0.3" height="15.0" fill="rgb(215,66,48)" rx="2" ry="2" />
<text  x="81.46" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.16%)</title><rect x="67.8" y="469" width="1.8" height="15.0" fill="rgb(241,35,25)" rx="2" ry="2" />
<text  x="70.79" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="120.0" y="357" width="0.4" height="15.0" fill="rgb(219,93,50)" rx="2" ry="2" />
<text  x="123.05" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;**&gt;::allocate (1 samples, 0.03%)</title><rect x="26.6" y="373" width="0.3" height="15.0" fill="rgb(235,43,2)" rx="2" ry="2" />
<text  x="29.56" y="383.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getCharIndex (2 samples, 0.06%)</title><rect x="42.4" y="405" width="0.7" height="15.0" fill="rgb(225,84,36)" rx="2" ry="2" />
<text  x="45.39" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (3 samples, 0.09%)</title><rect x="739.1" y="629" width="1.1" height="15.0" fill="rgb(240,52,11)" rx="2" ry="2" />
<text  x="742.13" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="244.1" y="565" width="0.4" height="15.0" fill="rgb(232,112,40)" rx="2" ry="2" />
<text  x="247.09" y="575.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.66%)</title><rect x="990.1" y="421" width="7.8" height="15.0" fill="rgb(223,140,38)" rx="2" ry="2" />
<text  x="993.14" y="431.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (2 samples, 0.06%)</title><rect x="1052.0" y="453" width="0.7" height="15.0" fill="rgb(250,150,49)" rx="2" ry="2" />
<text  x="1054.98" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.06%)</title><rect x="147.3" y="613" width="0.7" height="15.0" fill="rgb(232,123,5)" rx="2" ry="2" />
<text  x="150.29" y="623.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="112.7" y="213" width="0.4" height="15.0" fill="rgb(234,120,4)" rx="2" ry="2" />
<text  x="115.69" y="223.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (1 samples, 0.03%)</title><rect x="184.5" y="629" width="0.3" height="15.0" fill="rgb(237,22,48)" rx="2" ry="2" />
<text  x="187.46" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.06%)</title><rect x="218.3" y="597" width="0.8" height="15.0" fill="rgb(205,38,48)" rx="2" ry="2" />
<text  x="221.32" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="121.2" y="309" width="0.3" height="15.0" fill="rgb(251,141,17)" rx="2" ry="2" />
<text  x="124.15" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (170 samples, 5.30%)</title><rect x="307.0" y="453" width="62.6" height="15.0" fill="rgb(237,222,35)" rx="2" ry="2" />
<text  x="310.02" y="463.5" >partit..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="105.0" y="309" width="0.3" height="15.0" fill="rgb(221,201,44)" rx="2" ry="2" />
<text  x="107.96" y="319.5" ></text>
</g>
<g >
<title>schema::column_at (4 samples, 0.12%)</title><rect x="366.3" y="389" width="1.5" height="15.0" fill="rgb(225,69,14)" rx="2" ry="2" />
<text  x="369.28" y="399.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.03%)</title><rect x="338.3" y="405" width="0.4" height="15.0" fill="rgb(225,87,32)" rx="2" ry="2" />
<text  x="341.31" y="415.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="608.5" y="517" width="0.7" height="15.0" fill="rgb(226,200,53)" rx="2" ry="2" />
<text  x="611.47" y="527.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%)</title><rect x="843.3" y="581" width="0.4" height="15.0" fill="rgb(216,204,54)" rx="2" ry="2" />
<text  x="846.29" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%)</title><rect x="75.5" y="421" width="0.4" height="15.0" fill="rgb(249,136,19)" rx="2" ry="2" />
<text  x="78.51" y="431.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="1189.6" y="709" width="0.4" height="15.0" fill="rgb(238,9,52)" rx="2" ry="2" />
<text  x="1192.63" y="719.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (18 samples, 0.56%)</title><rect x="777.4" y="533" width="6.6" height="15.0" fill="rgb(213,2,25)" rx="2" ry="2" />
<text  x="780.40" y="543.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (1 samples, 0.03%)</title><rect x="667.4" y="581" width="0.3" height="15.0" fill="rgb(238,48,24)" rx="2" ry="2" />
<text  x="670.35" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_role_statement, std::default_delete&lt;cql3::statements::create_role_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%)</title><rect x="129.6" y="501" width="0.4" height="15.0" fill="rgb(242,226,54)" rx="2" ry="2" />
<text  x="132.62" y="511.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (1 samples, 0.03%)</title><rect x="1114.5" y="405" width="0.4" height="15.0" fill="rgb(252,144,27)" rx="2" ry="2" />
<text  x="1117.55" y="415.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.06%)</title><rect x="15.2" y="597" width="0.7" height="15.0" fill="rgb(214,122,19)" rx="2" ry="2" />
<text  x="18.15" y="607.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (1 samples, 0.03%)</title><rect x="469.3" y="517" width="0.4" height="15.0" fill="rgb(221,69,46)" rx="2" ry="2" />
<text  x="472.34" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (4 samples, 0.12%)</title><rect x="847.7" y="629" width="1.5" height="15.0" fill="rgb(206,39,24)" rx="2" ry="2" />
<text  x="850.70" y="639.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%)</title><rect x="604.0" y="485" width="1.2" height="15.0" fill="rgb(214,63,42)" rx="2" ry="2" />
<text  x="607.05" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%)</title><rect x="1089.9" y="517" width="1.1" height="15.0" fill="rgb(209,180,19)" rx="2" ry="2" />
<text  x="1092.89" y="527.5" ></text>
</g>
<g >
<title>__libc_start_main (2,718 samples, 84.78%)</title><rect x="153.2" y="757" width="1000.4" height="15.0" fill="rgb(245,163,52)" rx="2" ry="2" />
<text  x="156.18" y="767.5" >__libc_start_main</text>
</g>
<g >
<title>row::external_memory_usage (18 samples, 0.56%)</title><rect x="330.2" y="421" width="6.6" height="15.0" fill="rgb(208,78,23)" rx="2" ry="2" />
<text  x="333.21" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (37 samples, 1.15%)</title><rect x="593.0" y="501" width="13.6" height="15.0" fill="rgb(254,60,9)" rx="2" ry="2" />
<text  x="596.01" y="511.5" ></text>
</g>
<g >
<title>tolower (1 samples, 0.03%)</title><rect x="65.9" y="453" width="0.4" height="15.0" fill="rgb(222,56,11)" rx="2" ry="2" />
<text  x="68.95" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%)</title><rect x="1088.0" y="533" width="3.0" height="15.0" fill="rgb(210,2,23)" rx="2" ry="2" />
<text  x="1091.05" y="543.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.06%)</title><rect x="37.2" y="357" width="0.8" height="15.0" fill="rgb(222,110,0)" rx="2" ry="2" />
<text  x="40.24" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%)</title><rect x="74.4" y="341" width="0.4" height="15.0" fill="rgb(205,107,32)" rx="2" ry="2" />
<text  x="77.41" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.16%)</title><rect x="104.2" y="405" width="1.9" height="15.0" fill="rgb(222,198,19)" rx="2" ry="2" />
<text  x="107.22" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (4 samples, 0.12%)</title><rect x="44.2" y="357" width="1.5" height="15.0" fill="rgb(248,177,27)" rx="2" ry="2" />
<text  x="47.23" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="100.2" y="357" width="0.3" height="15.0" fill="rgb(220,136,16)" rx="2" ry="2" />
<text  x="103.17" y="367.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%)</title><rect x="70.7" y="453" width="0.4" height="15.0" fill="rgb(212,190,54)" rx="2" ry="2" />
<text  x="73.73" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="61.5" y="373" width="0.4" height="15.0" fill="rgb(241,197,25)" rx="2" ry="2" />
<text  x="64.53" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_WHERE (1 samples, 0.03%)</title><rect x="47.5" y="405" width="0.4" height="15.0" fill="rgb(226,201,33)" rx="2" ry="2" />
<text  x="50.54" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="499.5" y="549" width="0.8" height="15.0" fill="rgb(217,100,52)" rx="2" ry="2" />
<text  x="502.52" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::grant_statement, std::default_delete&lt;cql3::statements::grant_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="132.2" y="533" width="0.4" height="15.0" fill="rgb(210,228,49)" rx="2" ry="2" />
<text  x="135.20" y="543.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.09%)</title><rect x="77.7" y="453" width="1.1" height="15.0" fill="rgb(221,195,51)" rx="2" ry="2" />
<text  x="80.72" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="58.6" y="421" width="0.4" height="15.0" fill="rgb(237,14,7)" rx="2" ry="2" />
<text  x="61.58" y="431.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (18 samples, 0.56%)</title><rect x="577.9" y="517" width="6.6" height="15.0" fill="rgb(208,87,7)" rx="2" ry="2" />
<text  x="580.92" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="113.8" y="357" width="0.7" height="15.0" fill="rgb(234,106,6)" rx="2" ry="2" />
<text  x="116.79" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (44 samples, 1.37%)</title><rect x="90.6" y="437" width="16.2" height="15.0" fill="rgb(221,11,13)" rx="2" ry="2" />
<text  x="93.61" y="447.5" ></text>
</g>
<g >
<title>dht::tri_compare (8 samples, 0.25%)</title><rect x="579.8" y="501" width="2.9" height="15.0" fill="rgb(220,127,22)" rx="2" ry="2" />
<text  x="582.76" y="511.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (2 samples, 0.06%)</title><rect x="62.6" y="501" width="0.8" height="15.0" fill="rgb(213,90,16)" rx="2" ry="2" />
<text  x="65.63" y="511.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.19%)</title><rect x="71.5" y="469" width="2.2" height="15.0" fill="rgb(223,136,15)" rx="2" ry="2" />
<text  x="74.47" y="479.5" ></text>
</g>
<g >
<title>freeze (8 samples, 0.25%)</title><rect x="1109.4" y="389" width="2.9" height="15.0" fill="rgb(207,84,53)" rx="2" ry="2" />
<text  x="1112.39" y="399.5" ></text>
</g>
<g >
<title>auth::get_permissions (38 samples, 1.19%)</title><rect x="805.0" y="501" width="14.0" height="15.0" fill="rgb(253,89,29)" rx="2" ry="2" />
<text  x="808.01" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::end (1 samples, 0.03%)</title><rect x="109.7" y="453" width="0.4" height="15.0" fill="rgb(218,211,53)" rx="2" ry="2" />
<text  x="112.74" y="463.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (12 samples, 0.37%)</title><rect x="1167.2" y="741" width="4.4" height="15.0" fill="rgb(236,124,17)" rx="2" ry="2" />
<text  x="1170.18" y="751.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~_Deque_base (1 samples, 0.03%)</title><rect x="26.9" y="485" width="0.4" height="15.0" fill="rgb(253,21,47)" rx="2" ry="2" />
<text  x="29.93" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="29.1" y="405" width="0.4" height="15.0" fill="rgb(218,193,45)" rx="2" ry="2" />
<text  x="32.14" y="415.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.03%)</title><rect x="185.2" y="565" width="0.4" height="15.0" fill="rgb(248,221,38)" rx="2" ry="2" />
<text  x="188.20" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="61.2" y="389" width="0.3" height="15.0" fill="rgb(205,209,6)" rx="2" ry="2" />
<text  x="64.16" y="399.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.03%)</title><rect x="45.3" y="293" width="0.4" height="15.0" fill="rgb(215,68,35)" rx="2" ry="2" />
<text  x="48.33" y="303.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (4 samples, 0.12%)</title><rect x="21.0" y="517" width="1.5" height="15.0" fill="rgb(231,7,3)" rx="2" ry="2" />
<text  x="24.04" y="527.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%)</title><rect x="611.8" y="517" width="0.3" height="15.0" fill="rgb(209,190,31)" rx="2" ry="2" />
<text  x="614.78" y="527.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%)</title><rect x="116.4" y="437" width="0.3" height="15.0" fill="rgb(254,142,22)" rx="2" ry="2" />
<text  x="119.37" y="447.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%)</title><rect x="121.5" y="389" width="0.4" height="15.0" fill="rgb(209,38,1)" rx="2" ry="2" />
<text  x="124.52" y="399.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="681.0" y="565" width="0.3" height="15.0" fill="rgb(223,114,19)" rx="2" ry="2" />
<text  x="683.97" y="575.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.03%)</title><rect x="1151.7" y="597" width="0.4" height="15.0" fill="rgb(231,95,32)" rx="2" ry="2" />
<text  x="1154.72" y="607.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (1 samples, 0.03%)</title><rect x="184.5" y="533" width="0.3" height="15.0" fill="rgb(206,100,30)" rx="2" ry="2" />
<text  x="187.46" y="543.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.03%)</title><rect x="468.2" y="517" width="0.4" height="15.0" fill="rgb(254,53,41)" rx="2" ry="2" />
<text  x="471.23" y="527.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="252.2" y="565" width="0.7" height="15.0" fill="rgb(248,30,50)" rx="2" ry="2" />
<text  x="255.18" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="501" width="0.4" height="15.0" fill="rgb(234,61,0)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (12 samples, 0.37%)</title><rect x="279.1" y="501" width="4.4" height="15.0" fill="rgb(207,124,6)" rx="2" ry="2" />
<text  x="282.05" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_role_statement, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="129.3" y="517" width="0.3" height="15.0" fill="rgb(223,88,9)" rx="2" ry="2" />
<text  x="132.25" y="527.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%)</title><rect x="186.7" y="597" width="0.3" height="15.0" fill="rgb(220,201,24)" rx="2" ry="2" />
<text  x="189.67" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="93.5" y="181" width="0.4" height="15.0" fill="rgb(234,117,24)" rx="2" ry="2" />
<text  x="96.55" y="191.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="138.8" y="485" width="0.4" height="15.0" fill="rgb(235,62,28)" rx="2" ry="2" />
<text  x="141.82" y="495.5" ></text>
</g>
<g >
<title>schema::column_at (7 samples, 0.22%)</title><rect x="494.0" y="485" width="2.6" height="15.0" fill="rgb(250,8,8)" rx="2" ry="2" />
<text  x="497.00" y="495.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (1 samples, 0.03%)</title><rect x="883.0" y="485" width="0.4" height="15.0" fill="rgb(224,126,49)" rx="2" ry="2" />
<text  x="886.04" y="495.5" ></text>
</g>
<g >
<title>db::filter_for_query (1 samples, 0.03%)</title><rect x="951.1" y="485" width="0.4" height="15.0" fill="rgb(242,112,50)" rx="2" ry="2" />
<text  x="954.13" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%)</title><rect x="119.7" y="309" width="0.3" height="15.0" fill="rgb(230,190,52)" rx="2" ry="2" />
<text  x="122.68" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="701.2" y="581" width="0.4" height="15.0" fill="rgb(234,201,51)" rx="2" ry="2" />
<text  x="704.22" y="591.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="38.0" y="309" width="0.3" height="15.0" fill="rgb(222,49,29)" rx="2" ry="2" />
<text  x="40.97" y="319.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="118.9" y="229" width="0.4" height="15.0" fill="rgb(219,75,11)" rx="2" ry="2" />
<text  x="121.95" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="152.1" y="677" width="0.3" height="15.0" fill="rgb(218,150,51)" rx="2" ry="2" />
<text  x="155.07" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (3 samples, 0.09%)</title><rect x="123.4" y="469" width="1.1" height="15.0" fill="rgb(226,181,48)" rx="2" ry="2" />
<text  x="126.36" y="479.5" ></text>
</g>
<g >
<title>sstables::mc::writer::writer (1 samples, 0.03%)</title><rect x="151.0" y="661" width="0.3" height="15.0" fill="rgb(234,172,1)" rx="2" ry="2" />
<text  x="153.97" y="671.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="510.2" y="501" width="0.4" height="15.0" fill="rgb(234,216,27)" rx="2" ry="2" />
<text  x="513.19" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="82.5" y="437" width="0.4" height="15.0" fill="rgb(220,48,45)" rx="2" ry="2" />
<text  x="85.51" y="447.5" ></text>
</g>
<g >
<title>[[vdso]] (26 samples, 0.81%)</title><rect x="1157.6" y="741" width="9.6" height="15.0" fill="rgb(219,115,43)" rx="2" ry="2" />
<text  x="1160.61" y="751.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.03%)</title><rect x="900.3" y="517" width="0.4" height="15.0" fill="rgb(212,72,35)" rx="2" ry="2" />
<text  x="903.34" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="780.0" y="517" width="0.3" height="15.0" fill="rgb(233,169,36)" rx="2" ry="2" />
<text  x="782.98" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.16%)</title><rect x="36.5" y="405" width="1.8" height="15.0" fill="rgb(218,111,53)" rx="2" ry="2" />
<text  x="39.50" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="701.2" y="597" width="0.4" height="15.0" fill="rgb(222,174,9)" rx="2" ry="2" />
<text  x="704.22" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (8 samples, 0.25%)</title><rect x="967.0" y="437" width="2.9" height="15.0" fill="rgb(241,72,29)" rx="2" ry="2" />
<text  x="969.96" y="447.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (1 samples, 0.03%)</title><rect x="504.3" y="533" width="0.4" height="15.0" fill="rgb(209,89,3)" rx="2" ry="2" />
<text  x="507.30" y="543.5" ></text>
</g>
<g >
<title>cache_tracker::cache_tracker (1 samples, 0.03%)</title><rect x="152.4" y="533" width="0.4" height="15.0" fill="rgb(212,81,30)" rx="2" ry="2" />
<text  x="155.44" y="543.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="75.1" y="389" width="0.4" height="15.0" fill="rgb(221,66,36)" rx="2" ry="2" />
<text  x="78.15" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.22%)</title><rect x="1109.8" y="325" width="2.5" height="15.0" fill="rgb(230,202,37)" rx="2" ry="2" />
<text  x="1112.76" y="335.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (1 samples, 0.03%)</title><rect x="183.7" y="517" width="0.4" height="15.0" fill="rgb(214,170,2)" rx="2" ry="2" />
<text  x="186.72" y="527.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.06%)</title><rect x="204.0" y="597" width="0.7" height="15.0" fill="rgb(252,11,45)" rx="2" ry="2" />
<text  x="206.97" y="607.5" ></text>
</g>
<g >
<title>schema_registry::learn (3 samples, 0.09%)</title><rect x="185.6" y="597" width="1.1" height="15.0" fill="rgb(205,222,48)" rx="2" ry="2" />
<text  x="188.56" y="607.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%)</title><rect x="77.7" y="421" width="0.4" height="15.0" fill="rgb(207,226,0)" rx="2" ry="2" />
<text  x="80.72" y="431.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (2 samples, 0.06%)</title><rect x="367.8" y="389" width="0.7" height="15.0" fill="rgb(206,171,45)" rx="2" ry="2" />
<text  x="370.75" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="118.6" y="245" width="0.3" height="15.0" fill="rgb(237,227,25)" rx="2" ry="2" />
<text  x="121.58" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="120.0" y="373" width="0.4" height="15.0" fill="rgb(240,71,53)" rx="2" ry="2" />
<text  x="123.05" y="383.5" ></text>
</g>
<g >
<title>partition_entry::apply_to_incomplete (1 samples, 0.03%)</title><rect x="152.1" y="661" width="0.3" height="15.0" fill="rgb(209,15,25)" rx="2" ry="2" />
<text  x="155.07" y="671.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%)</title><rect x="76.3" y="213" width="0.3" height="15.0" fill="rgb(245,226,53)" rx="2" ry="2" />
<text  x="79.25" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="105.0" y="293" width="0.3" height="15.0" fill="rgb(249,67,35)" rx="2" ry="2" />
<text  x="107.96" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%)</title><rect x="1011.5" y="341" width="0.4" height="15.0" fill="rgb(227,143,52)" rx="2" ry="2" />
<text  x="1014.49" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;seastar::shared_ptr&lt;cql3::relation&gt;*, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt; &gt;::operator* (1 samples, 0.03%)</title><rect x="123.4" y="453" width="0.3" height="15.0" fill="rgb(220,85,45)" rx="2" ry="2" />
<text  x="126.36" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="110.5" y="469" width="0.3" height="15.0" fill="rgb(227,61,30)" rx="2" ry="2" />
<text  x="113.48" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="533" width="0.4" height="15.0" fill="rgb(248,152,7)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (1 samples, 0.03%)</title><rect x="1151.7" y="565" width="0.4" height="15.0" fill="rgb(226,169,15)" rx="2" ry="2" />
<text  x="1154.72" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="373" width="0.4" height="15.0" fill="rgb(212,68,41)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%)</title><rect x="69.6" y="469" width="0.4" height="15.0" fill="rgb(254,41,49)" rx="2" ry="2" />
<text  x="72.63" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::drop_role_statement*, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%)</title><rect x="130.4" y="453" width="0.3" height="15.0" fill="rgb(234,140,4)" rx="2" ry="2" />
<text  x="133.36" y="463.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (3 samples, 0.09%)</title><rect x="71.5" y="437" width="1.1" height="15.0" fill="rgb(246,29,39)" rx="2" ry="2" />
<text  x="74.47" y="447.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (2 samples, 0.06%)</title><rect x="26.9" y="533" width="0.8" height="15.0" fill="rgb(214,10,53)" rx="2" ry="2" />
<text  x="29.93" y="543.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (2 samples, 0.06%)</title><rect x="26.2" y="501" width="0.7" height="15.0" fill="rgb(231,38,48)" rx="2" ry="2" />
<text  x="29.19" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="127.4" y="469" width="0.4" height="15.0" fill="rgb(216,65,53)" rx="2" ry="2" />
<text  x="130.41" y="479.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="80.7" y="405" width="0.3" height="15.0" fill="rgb(209,206,39)" rx="2" ry="2" />
<text  x="83.67" y="415.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.03%)</title><rect x="714.8" y="613" width="0.4" height="15.0" fill="rgb(225,12,48)" rx="2" ry="2" />
<text  x="717.83" y="623.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (2 samples, 0.06%)</title><rect x="853.6" y="437" width="0.7" height="15.0" fill="rgb(205,61,2)" rx="2" ry="2" />
<text  x="856.59" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%)</title><rect x="240.4" y="533" width="0.7" height="15.0" fill="rgb(254,201,11)" rx="2" ry="2" />
<text  x="243.41" y="543.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (235 samples, 7.33%)</title><rect x="294.9" y="485" width="86.5" height="15.0" fill="rgb(227,99,50)" rx="2" ry="2" />
<text  x="297.88" y="495.5" >partition_..</text>
</g>
<g >
<title>row::~row (30 samples, 0.94%)</title><rect x="423.0" y="517" width="11.0" height="15.0" fill="rgb(218,220,6)" rx="2" ry="2" />
<text  x="425.96" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (3 samples, 0.09%)</title><rect x="102.4" y="341" width="1.1" height="15.0" fill="rgb(245,125,0)" rx="2" ry="2" />
<text  x="105.38" y="351.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%)</title><rect x="932.4" y="533" width="0.3" height="15.0" fill="rgb(249,15,32)" rx="2" ry="2" />
<text  x="935.36" y="543.5" ></text>
</g>
<g >
<title>db::block_for (3 samples, 0.09%)</title><rect x="1042.0" y="453" width="1.1" height="15.0" fill="rgb(243,140,53)" rx="2" ry="2" />
<text  x="1045.04" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%)</title><rect x="713.0" y="613" width="0.7" height="15.0" fill="rgb(219,212,44)" rx="2" ry="2" />
<text  x="715.99" y="623.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (10 samples, 0.31%)</title><rect x="32.8" y="373" width="3.7" height="15.0" fill="rgb(240,104,38)" rx="2" ry="2" />
<text  x="35.82" y="383.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.03%)</title><rect x="186.7" y="565" width="0.3" height="15.0" fill="rgb(227,208,45)" rx="2" ry="2" />
<text  x="189.67" y="575.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (2 samples, 0.06%)</title><rect x="147.3" y="677" width="0.7" height="15.0" fill="rgb(243,92,25)" rx="2" ry="2" />
<text  x="150.29" y="687.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.03%)</title><rect x="294.5" y="485" width="0.4" height="15.0" fill="rgb(242,18,9)" rx="2" ry="2" />
<text  x="297.51" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="103.9" y="389" width="0.3" height="15.0" fill="rgb(241,162,52)" rx="2" ry="2" />
<text  x="106.86" y="399.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.09%)</title><rect x="1092.1" y="549" width="1.1" height="15.0" fill="rgb(253,70,49)" rx="2" ry="2" />
<text  x="1095.10" y="559.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.31%)</title><rect x="449.5" y="501" width="3.6" height="15.0" fill="rgb(228,108,16)" rx="2" ry="2" />
<text  x="452.46" y="511.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (29 samples, 0.90%)</title><rect x="806.1" y="485" width="10.7" height="15.0" fill="rgb(233,13,29)" rx="2" ry="2" />
<text  x="809.11" y="495.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="138.8" y="661" width="0.4" height="15.0" fill="rgb(205,83,34)" rx="2" ry="2" />
<text  x="141.82" y="671.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (5 samples, 0.16%)</title><rect x="1084.4" y="533" width="1.8" height="15.0" fill="rgb(213,191,45)" rx="2" ry="2" />
<text  x="1087.37" y="543.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (32 samples, 1.00%)</title><rect x="1074.8" y="549" width="11.8" height="15.0" fill="rgb(226,111,28)" rx="2" ry="2" />
<text  x="1077.80" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="94.7" y="341" width="0.3" height="15.0" fill="rgb(214,126,42)" rx="2" ry="2" />
<text  x="97.65" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (3 samples, 0.09%)</title><rect x="723.3" y="597" width="1.1" height="15.0" fill="rgb(222,228,44)" rx="2" ry="2" />
<text  x="726.30" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="67.8" y="389" width="0.7" height="15.0" fill="rgb(231,137,41)" rx="2" ry="2" />
<text  x="70.79" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%)</title><rect x="79.9" y="405" width="0.8" height="15.0" fill="rgb(236,181,11)" rx="2" ry="2" />
<text  x="82.93" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%)</title><rect x="727.3" y="613" width="0.8" height="15.0" fill="rgb(205,8,38)" rx="2" ry="2" />
<text  x="730.35" y="623.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="28.0" y="469" width="0.8" height="15.0" fill="rgb(226,166,22)" rx="2" ry="2" />
<text  x="31.03" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%)</title><rect x="146.9" y="597" width="0.4" height="15.0" fill="rgb(240,8,26)" rx="2" ry="2" />
<text  x="149.92" y="607.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="72.6" y="421" width="0.7" height="15.0" fill="rgb(216,25,47)" rx="2" ry="2" />
<text  x="75.57" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (8 samples, 0.25%)</title><rect x="17.0" y="533" width="2.9" height="15.0" fill="rgb(216,137,44)" rx="2" ry="2" />
<text  x="19.99" y="543.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (1 samples, 0.03%)</title><rect x="183.7" y="549" width="0.4" height="15.0" fill="rgb(244,38,47)" rx="2" ry="2" />
<text  x="186.72" y="559.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (6 samples, 0.19%)</title><rect x="635.3" y="533" width="2.2" height="15.0" fill="rgb(241,95,51)" rx="2" ry="2" />
<text  x="638.33" y="543.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%)</title><rect x="652.3" y="613" width="0.3" height="15.0" fill="rgb(239,170,2)" rx="2" ry="2" />
<text  x="655.26" y="623.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="582.7" y="485" width="0.4" height="15.0" fill="rgb(214,6,50)" rx="2" ry="2" />
<text  x="585.70" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.16%)</title><rect x="60.4" y="501" width="1.9" height="15.0" fill="rgb(212,11,20)" rx="2" ry="2" />
<text  x="63.42" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%)</title><rect x="114.5" y="469" width="0.4" height="15.0" fill="rgb(253,93,33)" rx="2" ry="2" />
<text  x="117.53" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%)</title><rect x="301.5" y="421" width="3.3" height="15.0" fill="rgb(236,90,36)" rx="2" ry="2" />
<text  x="304.50" y="431.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.03%)</title><rect x="784.0" y="549" width="0.4" height="15.0" fill="rgb(236,69,10)" rx="2" ry="2" />
<text  x="787.03" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (7 samples, 0.22%)</title><rect x="85.5" y="389" width="2.5" height="15.0" fill="rgb(241,96,45)" rx="2" ry="2" />
<text  x="88.45" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.03%)</title><rect x="146.9" y="629" width="0.4" height="15.0" fill="rgb(241,214,25)" rx="2" ry="2" />
<text  x="149.92" y="639.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="725.9" y="613" width="1.1" height="15.0" fill="rgb(230,146,16)" rx="2" ry="2" />
<text  x="728.88" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.12%)</title><rect x="817.2" y="469" width="1.4" height="15.0" fill="rgb(251,72,36)" rx="2" ry="2" />
<text  x="820.16" y="479.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.03%)</title><rect x="15.5" y="565" width="0.4" height="15.0" fill="rgb(240,227,33)" rx="2" ry="2" />
<text  x="18.52" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.03%)</title><rect x="44.2" y="341" width="0.4" height="15.0" fill="rgb(234,96,18)" rx="2" ry="2" />
<text  x="47.23" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="113.8" y="389" width="0.7" height="15.0" fill="rgb(212,89,19)" rx="2" ry="2" />
<text  x="116.79" y="399.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="405" width="0.4" height="15.0" fill="rgb(242,57,23)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (3 samples, 0.09%)</title><rect x="297.8" y="469" width="1.1" height="15.0" fill="rgb(247,220,25)" rx="2" ry="2" />
<text  x="300.82" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%)</title><rect x="62.6" y="485" width="0.4" height="15.0" fill="rgb(225,20,25)" rx="2" ry="2" />
<text  x="65.63" y="495.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.09%)</title><rect x="828.2" y="517" width="1.1" height="15.0" fill="rgb(229,120,43)" rx="2" ry="2" />
<text  x="831.20" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="89.5" y="293" width="0.4" height="15.0" fill="rgb(216,62,19)" rx="2" ry="2" />
<text  x="92.50" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%)</title><rect x="754.2" y="549" width="2.6" height="15.0" fill="rgb(230,191,36)" rx="2" ry="2" />
<text  x="757.22" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (2 samples, 0.06%)</title><rect x="113.8" y="261" width="0.7" height="15.0" fill="rgb(230,74,4)" rx="2" ry="2" />
<text  x="116.79" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="565" width="0.4" height="15.0" fill="rgb(251,126,27)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="19.2" y="437" width="0.4" height="15.0" fill="rgb(210,58,48)" rx="2" ry="2" />
<text  x="22.20" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.16%)</title><rect x="86.2" y="293" width="1.8" height="15.0" fill="rgb(221,24,6)" rx="2" ry="2" />
<text  x="89.19" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.06%)</title><rect x="1020.0" y="357" width="0.7" height="15.0" fill="rgb(240,84,36)" rx="2" ry="2" />
<text  x="1022.96" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%)</title><rect x="832.2" y="533" width="0.4" height="15.0" fill="rgb(236,50,35)" rx="2" ry="2" />
<text  x="835.25" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%)</title><rect x="70.0" y="453" width="0.7" height="15.0" fill="rgb(205,58,20)" rx="2" ry="2" />
<text  x="72.99" y="463.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.03%)</title><rect x="434.0" y="517" width="0.4" height="15.0" fill="rgb(217,223,41)" rx="2" ry="2" />
<text  x="437.00" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="1102.0" y="405" width="0.4" height="15.0" fill="rgb(253,45,31)" rx="2" ry="2" />
<text  x="1105.03" y="415.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (7 samples, 0.22%)</title><rect x="1052.7" y="453" width="2.6" height="15.0" fill="rgb(248,57,23)" rx="2" ry="2" />
<text  x="1055.71" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_destroy&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="59.0" y="437" width="0.3" height="15.0" fill="rgb(251,91,54)" rx="2" ry="2" />
<text  x="61.95" y="447.5" ></text>
</g>
<g >
<title>ser::mutation_partition_view::rows (1 samples, 0.03%)</title><rect x="1107.2" y="469" width="0.4" height="15.0" fill="rgb(207,142,34)" rx="2" ry="2" />
<text  x="1110.19" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.09%)</title><rect x="666.3" y="613" width="1.1" height="15.0" fill="rgb(216,133,7)" rx="2" ry="2" />
<text  x="669.25" y="623.5" ></text>
</g>
<g >
<title>service::storage_service::join_token_ring (1 samples, 0.03%)</title><rect x="12.6" y="581" width="0.3" height="15.0" fill="rgb(234,140,5)" rx="2" ry="2" />
<text  x="15.58" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="112.3" y="325" width="0.8" height="15.0" fill="rgb(248,14,4)" rx="2" ry="2" />
<text  x="115.32" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.12%)</title><rect x="1115.7" y="629" width="1.4" height="15.0" fill="rgb(239,178,21)" rx="2" ry="2" />
<text  x="1118.65" y="639.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.09%)</title><rect x="116.7" y="453" width="1.1" height="15.0" fill="rgb(223,35,2)" rx="2" ry="2" />
<text  x="119.74" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.06%)</title><rect x="899.6" y="485" width="0.7" height="15.0" fill="rgb(206,25,35)" rx="2" ry="2" />
<text  x="902.60" y="495.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="562.8" y="517" width="0.8" height="15.0" fill="rgb(239,228,13)" rx="2" ry="2" />
<text  x="565.83" y="527.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%)</title><rect x="74.4" y="405" width="0.4" height="15.0" fill="rgb(221,197,18)" rx="2" ry="2" />
<text  x="77.41" y="415.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_nextChar (1 samples, 0.03%)</title><rect x="39.4" y="405" width="0.4" height="15.0" fill="rgb(206,66,5)" rx="2" ry="2" />
<text  x="42.44" y="415.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="64.5" y="341" width="0.3" height="15.0" fill="rgb(233,45,17)" rx="2" ry="2" />
<text  x="67.47" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="977.6" y="453" width="0.4" height="15.0" fill="rgb(228,47,46)" rx="2" ry="2" />
<text  x="980.63" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="115.6" y="373" width="0.8" height="15.0" fill="rgb(250,136,36)" rx="2" ry="2" />
<text  x="118.63" y="383.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="76.6" y="421" width="0.4" height="15.0" fill="rgb(254,3,0)" rx="2" ry="2" />
<text  x="79.62" y="431.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (1 samples, 0.03%)</title><rect x="496.6" y="533" width="0.3" height="15.0" fill="rgb(211,108,20)" rx="2" ry="2" />
<text  x="499.58" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_role_statement, std::default_delete&lt;cql3::statements::create_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_role_statement&gt;, void&gt; (1 samples, 0.03%)</title><rect x="129.6" y="517" width="0.4" height="15.0" fill="rgb(254,80,11)" rx="2" ry="2" />
<text  x="132.62" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%)</title><rect x="116.4" y="405" width="0.3" height="15.0" fill="rgb(207,42,13)" rx="2" ry="2" />
<text  x="119.37" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%)</title><rect x="605.9" y="485" width="0.7" height="15.0" fill="rgb(208,179,7)" rx="2" ry="2" />
<text  x="608.89" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="400.9" y="533" width="0.7" height="15.0" fill="rgb(223,61,9)" rx="2" ry="2" />
<text  x="403.88" y="543.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (16 samples, 0.50%)</title><rect x="1109.0" y="549" width="5.9" height="15.0" fill="rgb(205,137,31)" rx="2" ry="2" />
<text  x="1112.03" y="559.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~RuleReturnValue (1 samples, 0.03%)</title><rect x="66.7" y="485" width="0.3" height="15.0" fill="rgb(225,56,45)" rx="2" ry="2" />
<text  x="69.68" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (2 samples, 0.06%)</title><rect x="113.8" y="245" width="0.7" height="15.0" fill="rgb(217,19,39)" rx="2" ry="2" />
<text  x="116.79" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (3 samples, 0.09%)</title><rect x="68.5" y="421" width="1.1" height="15.0" fill="rgb(245,131,40)" rx="2" ry="2" />
<text  x="71.52" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="23.6" y="421" width="0.4" height="15.0" fill="rgb(224,161,12)" rx="2" ry="2" />
<text  x="26.62" y="431.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (1 samples, 0.03%)</title><rect x="22.1" y="437" width="0.4" height="15.0" fill="rgb(241,187,5)" rx="2" ry="2" />
<text  x="25.15" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%)</title><rect x="117.8" y="389" width="0.4" height="15.0" fill="rgb(206,143,45)" rx="2" ry="2" />
<text  x="120.84" y="399.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (1 samples, 0.03%)</title><rect x="851.4" y="501" width="0.4" height="15.0" fill="rgb(227,120,21)" rx="2" ry="2" />
<text  x="854.38" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::back (1 samples, 0.03%)</title><rect x="84.0" y="421" width="0.3" height="15.0" fill="rgb(243,2,10)" rx="2" ry="2" />
<text  x="86.98" y="431.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (37 samples, 1.15%)</title><rect x="163.5" y="629" width="13.6" height="15.0" fill="rgb(217,118,43)" rx="2" ry="2" />
<text  x="166.48" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%)</title><rect x="1081.1" y="501" width="2.9" height="15.0" fill="rgb(232,85,1)" rx="2" ry="2" />
<text  x="1084.05" y="511.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (11 samples, 0.34%)</title><rect x="1109.4" y="405" width="4.0" height="15.0" fill="rgb(231,51,34)" rx="2" ry="2" />
<text  x="1112.39" y="415.5" ></text>
</g>
<g >
<title>__sigsetjmp (1 samples, 0.03%)</title><rect x="14.0" y="613" width="0.4" height="15.0" fill="rgb(224,58,38)" rx="2" ry="2" />
<text  x="17.05" y="623.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (1 samples, 0.03%)</title><rect x="184.8" y="629" width="0.4" height="15.0" fill="rgb(247,10,52)" rx="2" ry="2" />
<text  x="187.83" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="658.5" y="597" width="0.4" height="15.0" fill="rgb(219,218,36)" rx="2" ry="2" />
<text  x="661.52" y="607.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (333 samples, 10.39%)</title><rect x="14.8" y="613" width="122.5" height="15.0" fill="rgb(238,203,8)" rx="2" ry="2" />
<text  x="17.78" y="623.5" >cql3::query_pro..</text>
</g>
<g >
<title>locator::everywhere_replication_strategy::calculate_natural_endpoints (1 samples, 0.03%)</title><rect x="12.6" y="517" width="0.3" height="15.0" fill="rgb(220,75,26)" rx="2" ry="2" />
<text  x="15.58" y="527.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (343 samples, 10.70%)</title><rect x="264.3" y="533" width="126.3" height="15.0" fill="rgb(226,160,34)" rx="2" ry="2" />
<text  x="267.33" y="543.5" >merging_reader&lt;..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="68.2" y="341" width="0.3" height="15.0" fill="rgb(240,106,53)" rx="2" ry="2" />
<text  x="71.15" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="89.5" y="357" width="0.4" height="15.0" fill="rgb(213,79,0)" rx="2" ry="2" />
<text  x="92.50" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (3 samples, 0.09%)</title><rect x="119.7" y="437" width="1.1" height="15.0" fill="rgb(213,171,18)" rx="2" ry="2" />
<text  x="122.68" y="447.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (4 samples, 0.12%)</title><rect x="1101.7" y="469" width="1.4" height="15.0" fill="rgb(215,104,13)" rx="2" ry="2" />
<text  x="1104.67" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_view_statement, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="131.8" y="533" width="0.4" height="15.0" fill="rgb(237,23,44)" rx="2" ry="2" />
<text  x="134.83" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;2ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="97.6" y="53" width="0.4" height="15.0" fill="rgb(248,3,26)" rx="2" ry="2" />
<text  x="100.60" y="63.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%)</title><rect x="92.4" y="277" width="0.4" height="15.0" fill="rgb(205,88,18)" rx="2" ry="2" />
<text  x="95.45" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, true&gt; (2 samples, 0.06%)</title><rect x="108.6" y="405" width="0.8" height="15.0" fill="rgb(228,111,20)" rx="2" ry="2" />
<text  x="111.64" y="415.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (4 samples, 0.12%)</title><rect x="327.3" y="405" width="1.4" height="15.0" fill="rgb(241,217,49)" rx="2" ry="2" />
<text  x="330.27" y="415.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (2 samples, 0.06%)</title><rect x="750.9" y="597" width="0.7" height="15.0" fill="rgb(247,62,27)" rx="2" ry="2" />
<text  x="753.90" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="119.7" y="373" width="0.3" height="15.0" fill="rgb(217,225,0)" rx="2" ry="2" />
<text  x="122.68" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (2 samples, 0.06%)</title><rect x="1152.5" y="645" width="0.7" height="15.0" fill="rgb(248,113,35)" rx="2" ry="2" />
<text  x="1155.46" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (11 samples, 0.34%)</title><rect x="32.5" y="389" width="4.0" height="15.0" fill="rgb(207,77,40)" rx="2" ry="2" />
<text  x="35.45" y="399.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.03%)</title><rect x="150.2" y="645" width="0.4" height="15.0" fill="rgb(228,131,53)" rx="2" ry="2" />
<text  x="153.23" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="119.7" y="245" width="0.3" height="15.0" fill="rgb(223,20,14)" rx="2" ry="2" />
<text  x="122.68" y="255.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (1 samples, 0.03%)</title><rect x="184.5" y="613" width="0.3" height="15.0" fill="rgb(223,184,39)" rx="2" ry="2" />
<text  x="187.46" y="623.5" ></text>
</g>
<g >
<title>db::validate_for_read (1 samples, 0.03%)</title><rect x="1086.6" y="549" width="0.3" height="15.0" fill="rgb(244,121,15)" rx="2" ry="2" />
<text  x="1089.58" y="559.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1 samples, 0.03%)</title><rect x="157.6" y="645" width="0.4" height="15.0" fill="rgb(213,224,35)" rx="2" ry="2" />
<text  x="160.59" y="655.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2 samples, 0.06%)</title><rect x="854.3" y="501" width="0.8" height="15.0" fill="rgb(232,48,7)" rx="2" ry="2" />
<text  x="857.33" y="511.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_endpoint (1 samples, 0.03%)</title><rect x="1147.3" y="581" width="0.4" height="15.0" fill="rgb(246,91,22)" rx="2" ry="2" />
<text  x="1150.31" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.9" y="245" width="0.4" height="15.0" fill="rgb(248,103,22)" rx="2" ry="2" />
<text  x="82.93" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="726.6" y="597" width="0.4" height="15.0" fill="rgb(242,58,18)" rx="2" ry="2" />
<text  x="729.61" y="607.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%)</title><rect x="665.9" y="613" width="0.4" height="15.0" fill="rgb(244,152,4)" rx="2" ry="2" />
<text  x="668.88" y="623.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="95.8" y="293" width="0.3" height="15.0" fill="rgb(212,95,22)" rx="2" ry="2" />
<text  x="98.76" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (46 samples, 1.43%)</title><rect x="38.3" y="437" width="17.0" height="15.0" fill="rgb(242,114,11)" rx="2" ry="2" />
<text  x="41.34" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (6 samples, 0.19%)</title><rect x="586.0" y="517" width="2.2" height="15.0" fill="rgb(217,30,54)" rx="2" ry="2" />
<text  x="589.01" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="611.0" y="485" width="0.8" height="15.0" fill="rgb(206,116,27)" rx="2" ry="2" />
<text  x="614.04" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::get_deleter (1 samples, 0.03%)</title><rect x="131.1" y="517" width="0.4" height="15.0" fill="rgb(212,10,47)" rx="2" ry="2" />
<text  x="134.09" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="693" width="0.4" height="15.0" fill="rgb(226,173,27)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.19%)</title><rect x="1137.4" y="581" width="2.2" height="15.0" fill="rgb(248,185,12)" rx="2" ry="2" />
<text  x="1140.37" y="591.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="138.5" y="693" width="0.3" height="15.0" fill="rgb(216,136,0)" rx="2" ry="2" />
<text  x="141.45" y="703.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="121.2" y="357" width="0.3" height="15.0" fill="rgb(227,118,48)" rx="2" ry="2" />
<text  x="124.15" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (5 samples, 0.16%)</title><rect x="147.3" y="693" width="1.8" height="15.0" fill="rgb(236,45,31)" rx="2" ry="2" />
<text  x="150.29" y="703.5" ></text>
</g>
<g >
<title>db::system_keyspace::load_tokens (1 samples, 0.03%)</title><rect x="10.4" y="517" width="0.3" height="15.0" fill="rgb(223,184,25)" rx="2" ry="2" />
<text  x="13.37" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (11 samples, 0.34%)</title><rect x="893.3" y="453" width="4.1" height="15.0" fill="rgb(234,17,22)" rx="2" ry="2" />
<text  x="896.34" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::update_write_metrics&lt;seastar::future&lt;void&gt; &gt; (1 samples, 0.03%)</title><rect x="710.4" y="629" width="0.4" height="15.0" fill="rgb(241,221,34)" rx="2" ry="2" />
<text  x="713.42" y="639.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (4 samples, 0.12%)</title><rect x="852.9" y="485" width="1.4" height="15.0" fill="rgb(226,188,10)" rx="2" ry="2" />
<text  x="855.86" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (19 samples, 0.59%)</title><rect x="31.3" y="437" width="7.0" height="15.0" fill="rgb(228,123,18)" rx="2" ry="2" />
<text  x="34.35" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%)</title><rect x="20.7" y="533" width="0.3" height="15.0" fill="rgb(241,122,5)" rx="2" ry="2" />
<text  x="23.67" y="543.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="630.5" y="485" width="0.8" height="15.0" fill="rgb(216,94,54)" rx="2" ry="2" />
<text  x="633.55" y="495.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (1 samples, 0.03%)</title><rect x="543.0" y="549" width="0.3" height="15.0" fill="rgb(231,50,33)" rx="2" ry="2" />
<text  x="545.95" y="559.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="121.2" y="261" width="0.3" height="15.0" fill="rgb(232,129,34)" rx="2" ry="2" />
<text  x="124.15" y="271.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%)</title><rect x="90.2" y="357" width="0.4" height="15.0" fill="rgb(205,136,43)" rx="2" ry="2" />
<text  x="93.24" y="367.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.03%)</title><rect x="799.5" y="517" width="0.4" height="15.0" fill="rgb(221,53,35)" rx="2" ry="2" />
<text  x="802.49" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%)</title><rect x="735.1" y="581" width="0.3" height="15.0" fill="rgb(213,163,22)" rx="2" ry="2" />
<text  x="738.08" y="591.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (2 samples, 0.06%)</title><rect x="65.6" y="485" width="0.7" height="15.0" fill="rgb(238,93,33)" rx="2" ry="2" />
<text  x="68.58" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (7 samples, 0.22%)</title><rect x="91.7" y="373" width="2.6" height="15.0" fill="rgb(222,33,14)" rx="2" ry="2" />
<text  x="94.71" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="105.0" y="245" width="0.3" height="15.0" fill="rgb(215,221,39)" rx="2" ry="2" />
<text  x="107.96" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::kernel_submit_work (1 samples, 0.03%)</title><rect x="1152.8" y="629" width="0.4" height="15.0" fill="rgb(250,187,52)" rx="2" ry="2" />
<text  x="1155.83" y="639.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="78.5" y="309" width="0.3" height="15.0" fill="rgb(236,61,38)" rx="2" ry="2" />
<text  x="81.46" y="319.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (2 samples, 0.06%)</title><rect x="371.4" y="453" width="0.8" height="15.0" fill="rgb(254,216,0)" rx="2" ry="2" />
<text  x="374.43" y="463.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="187.0" y="629" width="1.1" height="15.0" fill="rgb(226,136,19)" rx="2" ry="2" />
<text  x="190.04" y="639.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="89.5" y="277" width="0.4" height="15.0" fill="rgb(229,225,32)" rx="2" ry="2" />
<text  x="92.50" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="90.2" y="309" width="0.4" height="15.0" fill="rgb(241,174,19)" rx="2" ry="2" />
<text  x="93.24" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.16%)</title><rect x="96.9" y="293" width="1.8" height="15.0" fill="rgb(217,175,36)" rx="2" ry="2" />
<text  x="99.86" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (7 samples, 0.22%)</title><rect x="17.0" y="517" width="2.6" height="15.0" fill="rgb(211,55,42)" rx="2" ry="2" />
<text  x="19.99" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.03%)</title><rect x="107.9" y="421" width="0.4" height="15.0" fill="rgb(226,169,3)" rx="2" ry="2" />
<text  x="110.90" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%)</title><rect x="475.2" y="517" width="0.4" height="15.0" fill="rgb(230,51,2)" rx="2" ry="2" />
<text  x="478.23" y="527.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="917.6" y="533" width="1.1" height="15.0" fill="rgb(213,193,7)" rx="2" ry="2" />
<text  x="920.64" y="543.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (4 samples, 0.12%)</title><rect x="632.8" y="501" width="1.4" height="15.0" fill="rgb(249,122,32)" rx="2" ry="2" />
<text  x="635.76" y="511.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_channel (1 samples, 0.03%)</title><rect x="38.3" y="421" width="0.4" height="15.0" fill="rgb(206,161,6)" rx="2" ry="2" />
<text  x="41.34" y="431.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.16%)</title><rect x="86.2" y="261" width="1.8" height="15.0" fill="rgb(211,89,46)" rx="2" ry="2" />
<text  x="89.19" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (2 samples, 0.06%)</title><rect x="1118.2" y="629" width="0.8" height="15.0" fill="rgb(211,164,51)" rx="2" ry="2" />
<text  x="1121.23" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="60.1" y="453" width="0.3" height="15.0" fill="rgb(248,40,0)" rx="2" ry="2" />
<text  x="63.06" y="463.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.03%)</title><rect x="186.3" y="469" width="0.4" height="15.0" fill="rgb(213,47,14)" rx="2" ry="2" />
<text  x="189.30" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%)</title><rect x="115.6" y="325" width="0.8" height="15.0" fill="rgb(244,34,43)" rx="2" ry="2" />
<text  x="118.63" y="335.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.03%)</title><rect x="1147.3" y="629" width="0.4" height="15.0" fill="rgb(246,104,24)" rx="2" ry="2" />
<text  x="1150.31" y="639.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="67.4" y="277" width="0.4" height="15.0" fill="rgb(227,133,53)" rx="2" ry="2" />
<text  x="70.42" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (4 samples, 0.12%)</title><rect x="1149.1" y="629" width="1.5" height="15.0" fill="rgb(224,43,21)" rx="2" ry="2" />
<text  x="1152.15" y="639.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="83.6" y="357" width="0.4" height="15.0" fill="rgb(254,104,17)" rx="2" ry="2" />
<text  x="86.61" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="118.6" y="229" width="0.3" height="15.0" fill="rgb(245,41,24)" rx="2" ry="2" />
<text  x="121.58" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="92.4" y="165" width="0.4" height="15.0" fill="rgb(211,220,10)" rx="2" ry="2" />
<text  x="95.45" y="175.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="534.1" y="533" width="0.4" height="15.0" fill="rgb(234,19,40)" rx="2" ry="2" />
<text  x="537.12" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%)</title><rect x="116.4" y="389" width="0.3" height="15.0" fill="rgb(213,107,22)" rx="2" ry="2" />
<text  x="119.37" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.03%)</title><rect x="107.5" y="405" width="0.4" height="15.0" fill="rgb(249,80,3)" rx="2" ry="2" />
<text  x="110.54" y="415.5" ></text>
</g>
<g >
<title>do_cql_test (341 samples, 10.64%)</title><rect x="12.9" y="661" width="125.6" height="15.0" fill="rgb(223,123,50)" rx="2" ry="2" />
<text  x="15.94" y="671.5" >do_cql_test</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.09%)</title><rect x="118.6" y="421" width="1.1" height="15.0" fill="rgb(233,138,6)" rx="2" ry="2" />
<text  x="121.58" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (1 samples, 0.03%)</title><rect x="116.4" y="469" width="0.3" height="15.0" fill="rgb(245,120,14)" rx="2" ry="2" />
<text  x="119.37" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="438.4" y="517" width="0.4" height="15.0" fill="rgb(252,156,4)" rx="2" ry="2" />
<text  x="441.42" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="78.5" y="325" width="0.3" height="15.0" fill="rgb(239,12,54)" rx="2" ry="2" />
<text  x="81.46" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="795.8" y="517" width="0.4" height="15.0" fill="rgb(214,115,50)" rx="2" ry="2" />
<text  x="798.81" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="67.8" y="373" width="0.7" height="15.0" fill="rgb(254,107,15)" rx="2" ry="2" />
<text  x="70.79" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (2 samples, 0.06%)</title><rect x="1098.4" y="565" width="0.7" height="15.0" fill="rgb(238,200,1)" rx="2" ry="2" />
<text  x="1101.35" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%)</title><rect x="1018.1" y="341" width="0.4" height="15.0" fill="rgb(212,159,35)" rx="2" ry="2" />
<text  x="1021.12" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%)</title><rect x="106.1" y="389" width="0.3" height="15.0" fill="rgb(236,164,1)" rx="2" ry="2" />
<text  x="109.06" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (11 samples, 0.34%)</title><rect x="20.7" y="549" width="4.0" height="15.0" fill="rgb(222,93,21)" rx="2" ry="2" />
<text  x="23.67" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.12%)</title><rect x="934.6" y="501" width="1.4" height="15.0" fill="rgb(228,82,28)" rx="2" ry="2" />
<text  x="937.57" y="511.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%)</title><rect x="120.4" y="389" width="0.4" height="15.0" fill="rgb(212,140,51)" rx="2" ry="2" />
<text  x="123.42" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.06%)</title><rect x="598.5" y="485" width="0.8" height="15.0" fill="rgb(243,71,41)" rx="2" ry="2" />
<text  x="601.53" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%)</title><rect x="68.9" y="293" width="0.7" height="15.0" fill="rgb(244,114,46)" rx="2" ry="2" />
<text  x="71.89" y="303.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.47%)</title><rect x="527.9" y="533" width="5.5" height="15.0" fill="rgb(251,140,0)" rx="2" ry="2" />
<text  x="530.86" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="67.0" y="405" width="0.8" height="15.0" fill="rgb(212,124,3)" rx="2" ry="2" />
<text  x="70.05" y="415.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (2 samples, 0.06%)</title><rect x="1151.0" y="581" width="0.7" height="15.0" fill="rgb(213,103,50)" rx="2" ry="2" />
<text  x="1153.99" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.03%)</title><rect x="43.9" y="389" width="0.3" height="15.0" fill="rgb(245,155,23)" rx="2" ry="2" />
<text  x="46.86" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%)</title><rect x="135.1" y="581" width="0.8" height="15.0" fill="rgb(238,201,47)" rx="2" ry="2" />
<text  x="138.14" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (9 samples, 0.28%)</title><rect x="111.2" y="453" width="3.3" height="15.0" fill="rgb(235,34,28)" rx="2" ry="2" />
<text  x="114.22" y="463.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%)</title><rect x="119.7" y="389" width="0.3" height="15.0" fill="rgb(245,117,2)" rx="2" ry="2" />
<text  x="122.68" y="399.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%)</title><rect x="60.4" y="469" width="0.4" height="15.0" fill="rgb(231,177,32)" rx="2" ry="2" />
<text  x="63.42" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_allocate (1 samples, 0.03%)</title><rect x="83.2" y="405" width="0.4" height="15.0" fill="rgb(227,99,21)" rx="2" ry="2" />
<text  x="86.24" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (3 samples, 0.09%)</title><rect x="82.9" y="421" width="1.1" height="15.0" fill="rgb(212,157,10)" rx="2" ry="2" />
<text  x="85.88" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="642.0" y="581" width="0.3" height="15.0" fill="rgb(250,101,53)" rx="2" ry="2" />
<text  x="644.96" y="591.5" ></text>
</g>
<g >
<title>db::system_keyspace::make (1 samples, 0.03%)</title><rect x="138.8" y="437" width="0.4" height="15.0" fill="rgb(222,116,31)" rx="2" ry="2" />
<text  x="141.82" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%)</title><rect x="215.0" y="565" width="0.4" height="15.0" fill="rgb(244,169,16)" rx="2" ry="2" />
<text  x="218.01" y="575.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.09%)</title><rect x="820.5" y="533" width="1.1" height="15.0" fill="rgb(237,61,50)" rx="2" ry="2" />
<text  x="823.47" y="543.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.03%)</title><rect x="136.2" y="565" width="0.4" height="15.0" fill="rgb(247,147,42)" rx="2" ry="2" />
<text  x="139.24" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (3 samples, 0.09%)</title><rect x="135.9" y="597" width="1.1" height="15.0" fill="rgb(236,91,47)" rx="2" ry="2" />
<text  x="138.88" y="607.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%)</title><rect x="716.3" y="597" width="0.7" height="15.0" fill="rgb(228,75,40)" rx="2" ry="2" />
<text  x="719.31" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="73.3" y="357" width="0.4" height="15.0" fill="rgb(231,47,3)" rx="2" ry="2" />
<text  x="76.31" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (3 samples, 0.09%)</title><rect x="44.6" y="341" width="1.1" height="15.0" fill="rgb(244,223,48)" rx="2" ry="2" />
<text  x="47.60" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (39 samples, 1.22%)</title><rect x="724.8" y="629" width="14.3" height="15.0" fill="rgb(239,42,13)" rx="2" ry="2" />
<text  x="727.77" y="639.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="116.0" y="245" width="0.4" height="15.0" fill="rgb(226,187,29)" rx="2" ry="2" />
<text  x="119.00" y="255.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%)</title><rect x="98.7" y="389" width="0.4" height="15.0" fill="rgb(206,16,1)" rx="2" ry="2" />
<text  x="101.70" y="399.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (1 samples, 0.03%)</title><rect x="121.5" y="357" width="0.4" height="15.0" fill="rgb(213,151,25)" rx="2" ry="2" />
<text  x="124.52" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%)</title><rect x="100.9" y="341" width="0.4" height="15.0" fill="rgb(236,25,40)" rx="2" ry="2" />
<text  x="103.91" y="351.5" ></text>
</g>
<g >
<title>cql3::cf_name::set_column_family (1 samples, 0.03%)</title><rect x="65.9" y="469" width="0.4" height="15.0" fill="rgb(222,96,7)" rx="2" ry="2" />
<text  x="68.95" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="712.6" y="597" width="0.4" height="15.0" fill="rgb(247,170,3)" rx="2" ry="2" />
<text  x="715.63" y="607.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (8 samples, 0.25%)</title><rect x="67.0" y="485" width="3.0" height="15.0" fill="rgb(239,229,1)" rx="2" ry="2" />
<text  x="70.05" y="495.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (9 samples, 0.28%)</title><rect x="780.7" y="517" width="3.3" height="15.0" fill="rgb(213,187,16)" rx="2" ry="2" />
<text  x="783.72" y="527.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (11 samples, 0.34%)</title><rect x="1109.4" y="453" width="4.0" height="15.0" fill="rgb(242,39,19)" rx="2" ry="2" />
<text  x="1112.39" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (121 samples, 3.77%)</title><rect x="983.2" y="437" width="44.5" height="15.0" fill="rgb(220,199,19)" rx="2" ry="2" />
<text  x="986.15" y="447.5" >serv..</text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.16%)</title><rect x="86.2" y="277" width="1.8" height="15.0" fill="rgb(215,54,48)" rx="2" ry="2" />
<text  x="89.19" y="287.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%)</title><rect x="28.0" y="309" width="0.8" height="15.0" fill="rgb(244,180,53)" rx="2" ry="2" />
<text  x="31.03" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (24 samples, 0.75%)</title><rect x="424.1" y="501" width="8.8" height="15.0" fill="rgb(214,66,2)" rx="2" ry="2" />
<text  x="427.07" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%)</title><rect x="117.1" y="357" width="0.7" height="15.0" fill="rgb(220,224,27)" rx="2" ry="2" />
<text  x="120.11" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="67.4" y="357" width="0.4" height="15.0" fill="rgb(221,136,47)" rx="2" ry="2" />
<text  x="70.42" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%)</title><rect x="87.3" y="149" width="0.4" height="15.0" fill="rgb(234,204,46)" rx="2" ry="2" />
<text  x="90.29" y="159.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="61.2" y="437" width="0.3" height="15.0" fill="rgb(223,25,10)" rx="2" ry="2" />
<text  x="64.16" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.9" y="165" width="0.4" height="15.0" fill="rgb(230,151,26)" rx="2" ry="2" />
<text  x="82.93" y="175.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_M_head (1 samples, 0.03%)</title><rect x="95.8" y="277" width="0.3" height="15.0" fill="rgb(254,166,46)" rx="2" ry="2" />
<text  x="98.76" y="287.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="61.9" y="293" width="0.4" height="15.0" fill="rgb(220,201,48)" rx="2" ry="2" />
<text  x="64.90" y="303.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (19 samples, 0.59%)</title><rect x="235.6" y="581" width="7.0" height="15.0" fill="rgb(219,36,14)" rx="2" ry="2" />
<text  x="238.62" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_Deque_base (1 samples, 0.03%)</title><rect x="26.6" y="437" width="0.3" height="15.0" fill="rgb(237,89,7)" rx="2" ry="2" />
<text  x="29.56" y="447.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (2 samples, 0.06%)</title><rect x="512.4" y="501" width="0.7" height="15.0" fill="rgb(232,92,3)" rx="2" ry="2" />
<text  x="515.40" y="511.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="202.9" y="597" width="0.7" height="15.0" fill="rgb(246,0,10)" rx="2" ry="2" />
<text  x="205.86" y="607.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (19 samples, 0.59%)</title><rect x="717.4" y="613" width="7.0" height="15.0" fill="rgb(215,35,3)" rx="2" ry="2" />
<text  x="720.41" y="623.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.06%)</title><rect x="548.5" y="533" width="0.7" height="15.0" fill="rgb(236,121,3)" rx="2" ry="2" />
<text  x="551.47" y="543.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (1 samples, 0.03%)</title><rect x="14.4" y="629" width="0.4" height="15.0" fill="rgb(246,13,20)" rx="2" ry="2" />
<text  x="17.42" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%)</title><rect x="37.6" y="309" width="0.4" height="15.0" fill="rgb(246,23,10)" rx="2" ry="2" />
<text  x="40.60" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="119.7" y="229" width="0.3" height="15.0" fill="rgb(244,123,41)" rx="2" ry="2" />
<text  x="122.68" y="239.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="24.4" y="485" width="0.3" height="15.0" fill="rgb(226,68,1)" rx="2" ry="2" />
<text  x="27.35" y="495.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (232 samples, 7.24%)</title><rect x="758.3" y="597" width="85.4" height="15.0" fill="rgb(247,205,49)" rx="2" ry="2" />
<text  x="761.27" y="607.5" >single_nod..</text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%)</title><rect x="756.8" y="581" width="1.1" height="15.0" fill="rgb(243,133,53)" rx="2" ry="2" />
<text  x="759.79" y="591.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="114.9" y="437" width="0.4" height="15.0" fill="rgb(214,135,0)" rx="2" ry="2" />
<text  x="117.90" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (3 samples, 0.09%)</title><rect x="94.7" y="373" width="1.1" height="15.0" fill="rgb(238,46,16)" rx="2" ry="2" />
<text  x="97.65" y="383.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.03%)</title><rect x="183.7" y="581" width="0.4" height="15.0" fill="rgb(231,217,44)" rx="2" ry="2" />
<text  x="186.72" y="591.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (1 samples, 0.03%)</title><rect x="951.5" y="485" width="0.4" height="15.0" fill="rgb(225,68,46)" rx="2" ry="2" />
<text  x="954.50" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%)</title><rect x="747.2" y="581" width="1.1" height="15.0" fill="rgb(209,61,47)" rx="2" ry="2" />
<text  x="750.22" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="851.8" y="437" width="0.3" height="15.0" fill="rgb(249,86,13)" rx="2" ry="2" />
<text  x="854.75" y="447.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::StackType (1 samples, 0.03%)</title><rect x="26.2" y="469" width="0.4" height="15.0" fill="rgb(227,27,30)" rx="2" ry="2" />
<text  x="29.19" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="72.6" y="373" width="0.7" height="15.0" fill="rgb(239,129,53)" rx="2" ry="2" />
<text  x="75.57" y="383.5" ></text>
</g>
<g >
<title>database::database (1 samples, 0.03%)</title><rect x="152.4" y="549" width="0.4" height="15.0" fill="rgb(252,32,29)" rx="2" ry="2" />
<text  x="155.44" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.09%)</title><rect x="116.7" y="437" width="1.1" height="15.0" fill="rgb(250,78,51)" rx="2" ry="2" />
<text  x="119.74" y="447.5" ></text>
</g>
<g >
<title>seastar::when_all_succeed&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt; (1 samples, 0.03%)</title><rect x="12.2" y="581" width="0.4" height="15.0" fill="rgb(241,86,25)" rx="2" ry="2" />
<text  x="15.21" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="75.1" y="421" width="0.4" height="15.0" fill="rgb(248,166,20)" rx="2" ry="2" />
<text  x="78.15" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (14 samples, 0.44%)</title><rect x="922.4" y="549" width="5.2" height="15.0" fill="rgb(207,96,7)" rx="2" ry="2" />
<text  x="925.42" y="559.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.16%)</title><rect x="60.4" y="485" width="1.9" height="15.0" fill="rgb(243,221,39)" rx="2" ry="2" />
<text  x="63.42" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_Deque_base (1 samples, 0.03%)</title><rect x="26.2" y="437" width="0.4" height="15.0" fill="rgb(208,154,7)" rx="2" ry="2" />
<text  x="29.19" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="105.7" y="357" width="0.4" height="15.0" fill="rgb(228,215,26)" rx="2" ry="2" />
<text  x="108.70" y="367.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="10.7" y="661" width="0.4" height="15.0" fill="rgb(239,125,45)" rx="2" ry="2" />
<text  x="13.74" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%)</title><rect x="439.2" y="501" width="0.3" height="15.0" fill="rgb(237,83,14)" rx="2" ry="2" />
<text  x="442.16" y="511.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::create_role_statement*, std::default_delete&lt;cql3::statements::create_role_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%)</title><rect x="129.6" y="485" width="0.4" height="15.0" fill="rgb(222,40,0)" rx="2" ry="2" />
<text  x="132.62" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="432.5" y="469" width="0.4" height="15.0" fill="rgb(220,81,53)" rx="2" ry="2" />
<text  x="435.53" y="479.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (3 samples, 0.09%)</title><rect x="252.9" y="565" width="1.1" height="15.0" fill="rgb(209,207,34)" rx="2" ry="2" />
<text  x="255.92" y="575.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%)</title><rect x="756.8" y="597" width="1.1" height="15.0" fill="rgb(208,129,8)" rx="2" ry="2" />
<text  x="759.79" y="607.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.03%)</title><rect x="139.6" y="725" width="0.3" height="15.0" fill="rgb(245,2,8)" rx="2" ry="2" />
<text  x="142.56" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="1084.0" y="517" width="0.4" height="15.0" fill="rgb(218,133,25)" rx="2" ry="2" />
<text  x="1087.00" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (7 samples, 0.22%)</title><rect x="689.4" y="613" width="2.6" height="15.0" fill="rgb(231,175,30)" rx="2" ry="2" />
<text  x="692.44" y="623.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="12.6" y="629" width="0.3" height="15.0" fill="rgb(243,193,11)" rx="2" ry="2" />
<text  x="15.58" y="639.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="120.8" y="197" width="0.4" height="15.0" fill="rgb(250,196,53)" rx="2" ry="2" />
<text  x="123.79" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%)</title><rect x="95.8" y="373" width="0.3" height="15.0" fill="rgb(225,105,4)" rx="2" ry="2" />
<text  x="98.76" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%)</title><rect x="115.6" y="309" width="0.8" height="15.0" fill="rgb(205,59,14)" rx="2" ry="2" />
<text  x="118.63" y="319.5" ></text>
</g>
<g >
<title>utils::i_filter::get_filter (1 samples, 0.03%)</title><rect x="151.0" y="645" width="0.3" height="15.0" fill="rgb(240,6,35)" rx="2" ry="2" />
<text  x="153.97" y="655.5" ></text>
</g>
<g >
<title>db::schema_tables::store_map&lt;clustering_key_prefix, std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="185.6" y="517" width="0.3" height="15.0" fill="rgb(239,28,20)" rx="2" ry="2" />
<text  x="188.56" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (29 samples, 0.90%)</title><rect x="485.9" y="501" width="10.7" height="15.0" fill="rgb(231,68,30)" rx="2" ry="2" />
<text  x="488.90" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="116.0" y="277" width="0.4" height="15.0" fill="rgb(219,31,29)" rx="2" ry="2" />
<text  x="119.00" y="287.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="185.6" y="485" width="0.3" height="15.0" fill="rgb(248,129,26)" rx="2" ry="2" />
<text  x="188.56" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="75.9" y="357" width="0.7" height="15.0" fill="rgb(250,42,35)" rx="2" ry="2" />
<text  x="78.88" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%)</title><rect x="64.5" y="437" width="0.3" height="15.0" fill="rgb(213,65,19)" rx="2" ry="2" />
<text  x="67.47" y="447.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.03%)</title><rect x="326.9" y="405" width="0.4" height="15.0" fill="rgb(214,206,36)" rx="2" ry="2" />
<text  x="329.90" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (5 samples, 0.16%)</title><rect x="96.9" y="389" width="1.8" height="15.0" fill="rgb(219,197,15)" rx="2" ry="2" />
<text  x="99.86" y="399.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (2 samples, 0.06%)</title><rect x="59.7" y="485" width="0.7" height="15.0" fill="rgb(228,143,40)" rx="2" ry="2" />
<text  x="62.69" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.03%)</title><rect x="523.4" y="533" width="0.4" height="15.0" fill="rgb(214,197,0)" rx="2" ry="2" />
<text  x="526.44" y="543.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.37%)</title><rect x="349.7" y="389" width="4.4" height="15.0" fill="rgb(219,200,11)" rx="2" ry="2" />
<text  x="352.72" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::deallocate (1 samples, 0.03%)</title><rect x="38.0" y="325" width="0.3" height="15.0" fill="rgb(228,146,0)" rx="2" ry="2" />
<text  x="40.97" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%)</title><rect x="126.7" y="485" width="0.3" height="15.0" fill="rgb(219,81,19)" rx="2" ry="2" />
<text  x="129.67" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.03%)</title><rect x="1188.9" y="741" width="0.4" height="15.0" fill="rgb(210,35,39)" rx="2" ry="2" />
<text  x="1191.90" y="751.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%)</title><rect x="1107.9" y="485" width="0.4" height="15.0" fill="rgb(211,164,50)" rx="2" ry="2" />
<text  x="1110.92" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1 samples, 0.03%)</title><rect x="1188.9" y="757" width="0.4" height="15.0" fill="rgb(243,37,26)" rx="2" ry="2" />
<text  x="1191.90" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="645" width="0.4" height="15.0" fill="rgb(241,173,1)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="80.3" y="293" width="0.4" height="15.0" fill="rgb(232,173,24)" rx="2" ry="2" />
<text  x="83.30" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%)</title><rect x="709.3" y="613" width="0.4" height="15.0" fill="rgb(238,210,30)" rx="2" ry="2" />
<text  x="712.31" y="623.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (46 samples, 1.43%)</title><rect x="38.3" y="453" width="17.0" height="15.0" fill="rgb(253,1,30)" rx="2" ry="2" />
<text  x="41.34" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="497.3" y="533" width="0.4" height="15.0" fill="rgb(235,66,38)" rx="2" ry="2" />
<text  x="500.31" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%)</title><rect x="76.6" y="469" width="0.4" height="15.0" fill="rgb(223,0,53)" rx="2" ry="2" />
<text  x="79.62" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (19 samples, 0.59%)</title><rect x="372.2" y="469" width="7.0" height="15.0" fill="rgb(218,219,24)" rx="2" ry="2" />
<text  x="375.17" y="479.5" ></text>
</g>
<g >
<title>database::query (14 samples, 0.44%)</title><rect x="178.2" y="629" width="5.2" height="15.0" fill="rgb(212,161,6)" rx="2" ry="2" />
<text  x="181.20" y="639.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="183.7" y="501" width="0.4" height="15.0" fill="rgb(236,172,8)" rx="2" ry="2" />
<text  x="186.72" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="112.7" y="261" width="0.4" height="15.0" fill="rgb(239,164,33)" rx="2" ry="2" />
<text  x="115.69" y="271.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (4 samples, 0.12%)</title><rect x="1113.4" y="453" width="1.5" height="15.0" fill="rgb(220,156,24)" rx="2" ry="2" />
<text  x="1116.44" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (5 samples, 0.16%)</title><rect x="172.3" y="581" width="1.9" height="15.0" fill="rgb(240,202,9)" rx="2" ry="2" />
<text  x="175.31" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="72.9" y="341" width="0.4" height="15.0" fill="rgb(211,185,46)" rx="2" ry="2" />
<text  x="75.94" y="351.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="12.2" y="629" width="0.4" height="15.0" fill="rgb(209,86,16)" rx="2" ry="2" />
<text  x="15.21" y="639.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="10.4" y="549" width="0.3" height="15.0" fill="rgb(250,41,50)" rx="2" ry="2" />
<text  x="13.37" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.03%)</title><rect x="139.2" y="709" width="0.4" height="15.0" fill="rgb(231,93,9)" rx="2" ry="2" />
<text  x="142.19" y="719.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%)</title><rect x="121.5" y="421" width="0.4" height="15.0" fill="rgb(233,7,23)" rx="2" ry="2" />
<text  x="124.52" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.16%)</title><rect x="104.2" y="389" width="1.9" height="15.0" fill="rgb(221,102,2)" rx="2" ry="2" />
<text  x="107.22" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="69.3" y="277" width="0.3" height="15.0" fill="rgb(234,207,17)" rx="2" ry="2" />
<text  x="72.26" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="603.7" y="469" width="0.3" height="15.0" fill="rgb(219,141,35)" rx="2" ry="2" />
<text  x="606.68" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%)</title><rect x="68.9" y="341" width="0.7" height="15.0" fill="rgb(253,203,39)" rx="2" ry="2" />
<text  x="71.89" y="351.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.12%)</title><rect x="97.2" y="261" width="1.5" height="15.0" fill="rgb(242,32,8)" rx="2" ry="2" />
<text  x="100.23" y="271.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.09%)</title><rect x="115.3" y="437" width="1.1" height="15.0" fill="rgb(222,69,52)" rx="2" ry="2" />
<text  x="118.27" y="447.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.03%)</title><rect x="145.8" y="741" width="0.4" height="15.0" fill="rgb(246,156,32)" rx="2" ry="2" />
<text  x="148.81" y="751.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%)</title><rect x="1023.6" y="389" width="2.2" height="15.0" fill="rgb(246,56,15)" rx="2" ry="2" />
<text  x="1026.64" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%)</title><rect x="71.5" y="389" width="1.1" height="15.0" fill="rgb(208,173,46)" rx="2" ry="2" />
<text  x="74.47" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%)</title><rect x="112.0" y="309" width="0.3" height="15.0" fill="rgb(211,98,51)" rx="2" ry="2" />
<text  x="114.95" y="319.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.03%)</title><rect x="185.9" y="501" width="0.4" height="15.0" fill="rgb(234,132,36)" rx="2" ry="2" />
<text  x="188.93" y="511.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_data (1 samples, 0.03%)</title><rect x="39.1" y="405" width="0.3" height="15.0" fill="rgb(238,190,31)" rx="2" ry="2" />
<text  x="42.08" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%)</title><rect x="79.9" y="373" width="0.8" height="15.0" fill="rgb(240,108,30)" rx="2" ry="2" />
<text  x="82.93" y="383.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%)</title><rect x="124.8" y="437" width="0.4" height="15.0" fill="rgb(228,147,16)" rx="2" ry="2" />
<text  x="127.83" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="97.2" y="149" width="1.1" height="15.0" fill="rgb(238,143,32)" rx="2" ry="2" />
<text  x="100.23" y="159.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%)</title><rect x="90.2" y="405" width="0.4" height="15.0" fill="rgb(247,2,36)" rx="2" ry="2" />
<text  x="93.24" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::future&lt;void&gt;, std::allocator&lt;seastar::future&lt;void&gt; &gt; &gt;::reserve (1 samples, 0.03%)</title><rect x="1114.2" y="405" width="0.3" height="15.0" fill="rgb(248,12,20)" rx="2" ry="2" />
<text  x="1117.18" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="119.7" y="213" width="0.3" height="15.0" fill="rgb(245,190,32)" rx="2" ry="2" />
<text  x="122.68" y="223.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.03%)</title><rect x="1135.2" y="597" width="0.3" height="15.0" fill="rgb(252,117,11)" rx="2" ry="2" />
<text  x="1138.16" y="607.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (1 samples, 0.03%)</title><rect x="22.1" y="469" width="0.4" height="15.0" fill="rgb(206,145,19)" rx="2" ry="2" />
<text  x="25.15" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="820.1" y="501" width="0.4" height="15.0" fill="rgb(235,109,45)" rx="2" ry="2" />
<text  x="823.10" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="820.1" y="485" width="0.4" height="15.0" fill="rgb(235,117,19)" rx="2" ry="2" />
<text  x="823.10" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%)</title><rect x="28.0" y="325" width="0.8" height="15.0" fill="rgb(243,47,23)" rx="2" ry="2" />
<text  x="31.03" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::select_statement, std::default_delete&lt;cql3::statements::raw::select_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%)</title><rect x="130.7" y="501" width="0.4" height="15.0" fill="rgb(245,111,7)" rx="2" ry="2" />
<text  x="133.72" y="511.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.03%)</title><rect x="916.9" y="517" width="0.4" height="15.0" fill="rgb(206,102,20)" rx="2" ry="2" />
<text  x="919.90" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="93.2" y="197" width="0.3" height="15.0" fill="rgb(241,87,43)" rx="2" ry="2" />
<text  x="96.18" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (5 samples, 0.16%)</title><rect x="96.9" y="325" width="1.8" height="15.0" fill="rgb(247,212,33)" rx="2" ry="2" />
<text  x="99.86" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.03%)</title><rect x="186.7" y="581" width="0.3" height="15.0" fill="rgb(228,218,35)" rx="2" ry="2" />
<text  x="189.67" y="591.5" ></text>
</g>
<g >
<title>std::move&lt;cql3::expr::conjunction&amp;&gt; (1 samples, 0.03%)</title><rect x="93.2" y="165" width="0.3" height="15.0" fill="rgb(249,99,49)" rx="2" ry="2" />
<text  x="96.18" y="175.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%)</title><rect x="982.8" y="437" width="0.4" height="15.0" fill="rgb(230,204,24)" rx="2" ry="2" />
<text  x="985.78" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (277 samples, 8.64%)</title><rect x="29.5" y="533" width="102.0" height="15.0" fill="rgb(234,42,10)" rx="2" ry="2" />
<text  x="32.51" y="543.5" >cql3_parser:..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="138.8" y="533" width="0.4" height="15.0" fill="rgb(251,56,28)" rx="2" ry="2" />
<text  x="141.82" y="543.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%)</title><rect x="738.4" y="613" width="0.4" height="15.0" fill="rgb(215,198,5)" rx="2" ry="2" />
<text  x="741.39" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%)</title><rect x="107.2" y="437" width="0.3" height="15.0" fill="rgb(238,75,7)" rx="2" ry="2" />
<text  x="110.17" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier_raw&gt;::shared_ptr_count_for&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%)</title><rect x="69.6" y="437" width="0.4" height="15.0" fill="rgb(238,190,10)" rx="2" ry="2" />
<text  x="72.63" y="447.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.03%)</title><rect x="45.0" y="293" width="0.3" height="15.0" fill="rgb(250,56,40)" rx="2" ry="2" />
<text  x="47.97" y="303.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="152.4" y="677" width="0.4" height="15.0" fill="rgb(245,217,13)" rx="2" ry="2" />
<text  x="155.44" y="687.5" ></text>
</g>
<g >
<title>schema::~schema (1 samples, 0.03%)</title><rect x="138.8" y="341" width="0.4" height="15.0" fill="rgb(218,86,33)" rx="2" ry="2" />
<text  x="141.82" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%)</title><rect x="121.9" y="405" width="0.4" height="15.0" fill="rgb(215,89,27)" rx="2" ry="2" />
<text  x="124.89" y="415.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (28 samples, 0.87%)</title><rect x="773.7" y="549" width="10.3" height="15.0" fill="rgb(241,3,22)" rx="2" ry="2" />
<text  x="776.72" y="559.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%)</title><rect x="301.5" y="437" width="3.3" height="15.0" fill="rgb(244,67,21)" rx="2" ry="2" />
<text  x="304.50" y="447.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%)</title><rect x="138.1" y="613" width="0.4" height="15.0" fill="rgb(243,8,2)" rx="2" ry="2" />
<text  x="141.08" y="623.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (16 samples, 0.50%)</title><rect x="612.5" y="517" width="5.9" height="15.0" fill="rgb(236,39,6)" rx="2" ry="2" />
<text  x="615.51" y="527.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (13 samples, 0.41%)</title><rect x="476.3" y="533" width="4.8" height="15.0" fill="rgb(220,134,54)" rx="2" ry="2" />
<text  x="479.33" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="121.2" y="245" width="0.3" height="15.0" fill="rgb(208,87,50)" rx="2" ry="2" />
<text  x="124.15" y="255.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%)</title><rect x="1102.8" y="437" width="0.3" height="15.0" fill="rgb(221,26,7)" rx="2" ry="2" />
<text  x="1105.77" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%)</title><rect x="118.2" y="453" width="0.4" height="15.0" fill="rgb(224,151,50)" rx="2" ry="2" />
<text  x="121.21" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="93.2" y="213" width="0.3" height="15.0" fill="rgb(248,200,2)" rx="2" ry="2" />
<text  x="96.18" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%)</title><rect x="849.5" y="629" width="0.8" height="15.0" fill="rgb(251,206,18)" rx="2" ry="2" />
<text  x="852.54" y="639.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_allocate_map (1 samples, 0.03%)</title><rect x="26.6" y="405" width="0.3" height="15.0" fill="rgb(230,65,44)" rx="2" ry="2" />
<text  x="29.56" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;cql3::expr::expression*&gt; (1 samples, 0.03%)</title><rect x="73.7" y="405" width="0.3" height="15.0" fill="rgb(245,8,26)" rx="2" ry="2" />
<text  x="76.67" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (19 samples, 0.59%)</title><rect x="209.9" y="581" width="6.9" height="15.0" fill="rgb(227,58,12)" rx="2" ry="2" />
<text  x="212.86" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (7 samples, 0.22%)</title><rect x="74.0" y="453" width="2.6" height="15.0" fill="rgb(220,136,52)" rx="2" ry="2" />
<text  x="77.04" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.06%)</title><rect x="37.2" y="325" width="0.8" height="15.0" fill="rgb(227,227,9)" rx="2" ry="2" />
<text  x="40.24" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (2 samples, 0.06%)</title><rect x="1104.6" y="453" width="0.7" height="15.0" fill="rgb(235,126,32)" rx="2" ry="2" />
<text  x="1107.61" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (11 samples, 0.34%)</title><rect x="324.7" y="421" width="4.0" height="15.0" fill="rgb(208,49,14)" rx="2" ry="2" />
<text  x="327.69" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%)</title><rect x="117.1" y="325" width="0.4" height="15.0" fill="rgb(221,200,16)" rx="2" ry="2" />
<text  x="120.11" y="335.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.03%)</title><rect x="146.9" y="693" width="0.4" height="15.0" fill="rgb(218,205,5)" rx="2" ry="2" />
<text  x="149.92" y="703.5" ></text>
</g>
<g >
<title>seastar::async&lt;single_node_cql_env::do_with (1 samples, 0.03%)</title><rect x="138.8" y="693" width="0.4" height="15.0" fill="rgb(232,156,21)" rx="2" ry="2" />
<text  x="141.82" y="703.5" ></text>
</g>
<g >
<title>db::filter_for_query (3 samples, 0.09%)</title><rect x="1043.1" y="469" width="1.1" height="15.0" fill="rgb(241,36,5)" rx="2" ry="2" />
<text  x="1046.14" y="479.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (354 samples, 11.04%)</title><rect x="262.1" y="549" width="130.3" height="15.0" fill="rgb(248,144,36)" rx="2" ry="2" />
<text  x="265.12" y="559.5" >merging_reader&lt;m..</text>
</g>
<g >
<title>seastar::reactor::do_run (2,717 samples, 84.75%)</title><rect x="153.2" y="661" width="1000.0" height="15.0" fill="rgb(224,27,17)" rx="2" ry="2" />
<text  x="156.18" y="671.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (2 samples, 0.06%)</title><rect x="26.9" y="549" width="0.8" height="15.0" fill="rgb(243,120,24)" rx="2" ry="2" />
<text  x="29.93" y="559.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%)</title><rect x="305.9" y="453" width="1.1" height="15.0" fill="rgb(213,144,54)" rx="2" ry="2" />
<text  x="308.92" y="463.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (4 samples, 0.12%)</title><rect x="1101.7" y="453" width="1.4" height="15.0" fill="rgb(253,221,28)" rx="2" ry="2" />
<text  x="1104.67" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.03%)</title><rect x="40.9" y="325" width="0.4" height="15.0" fill="rgb(218,133,17)" rx="2" ry="2" />
<text  x="43.92" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="75.5" y="405" width="0.4" height="15.0" fill="rgb(223,2,34)" rx="2" ry="2" />
<text  x="78.51" y="415.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%)</title><rect x="10.7" y="693" width="0.4" height="15.0" fill="rgb(216,32,27)" rx="2" ry="2" />
<text  x="13.74" y="703.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%)</title><rect x="10.4" y="629" width="0.3" height="15.0" fill="rgb(249,9,30)" rx="2" ry="2" />
<text  x="13.37" y="639.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="121.2" y="293" width="0.3" height="15.0" fill="rgb(231,120,17)" rx="2" ry="2" />
<text  x="124.15" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (2 samples, 0.06%)</title><rect x="21.8" y="485" width="0.7" height="15.0" fill="rgb(245,226,5)" rx="2" ry="2" />
<text  x="24.78" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::allocator (1 samples, 0.03%)</title><rect x="87.3" y="117" width="0.4" height="15.0" fill="rgb(222,9,36)" rx="2" ry="2" />
<text  x="90.29" y="127.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="72.6" y="389" width="0.7" height="15.0" fill="rgb(216,40,54)" rx="2" ry="2" />
<text  x="75.57" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%)</title><rect x="83.2" y="373" width="0.4" height="15.0" fill="rgb(217,33,15)" rx="2" ry="2" />
<text  x="86.24" y="383.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (20 samples, 0.62%)</title><rect x="209.5" y="597" width="7.3" height="15.0" fill="rgb(224,44,27)" rx="2" ry="2" />
<text  x="212.49" y="607.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="15.9" y="549" width="0.4" height="15.0" fill="rgb(241,227,54)" rx="2" ry="2" />
<text  x="18.89" y="559.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.12%)</title><rect x="382.8" y="517" width="1.5" height="15.0" fill="rgb(248,130,49)" rx="2" ry="2" />
<text  x="385.84" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%)</title><rect x="71.1" y="469" width="0.4" height="15.0" fill="rgb(233,175,41)" rx="2" ry="2" />
<text  x="74.10" y="479.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (1 samples, 0.03%)</title><rect x="121.5" y="373" width="0.4" height="15.0" fill="rgb(219,50,16)" rx="2" ry="2" />
<text  x="124.52" y="383.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (5 samples, 0.16%)</title><rect x="640.1" y="565" width="1.9" height="15.0" fill="rgb(225,38,53)" rx="2" ry="2" />
<text  x="643.12" y="575.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (77 samples, 2.40%)</title><rect x="998.2" y="421" width="28.4" height="15.0" fill="rgb(219,153,13)" rx="2" ry="2" />
<text  x="1001.24" y="431.5" >se..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="371.1" y="453" width="0.3" height="15.0" fill="rgb(243,220,8)" rx="2" ry="2" />
<text  x="374.07" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="61.2" y="405" width="0.3" height="15.0" fill="rgb(237,115,54)" rx="2" ry="2" />
<text  x="64.16" y="415.5" ></text>
</g>
<g >
<title>std::move&lt;cql3::expr::expression::impl*&amp;&gt; (1 samples, 0.03%)</title><rect x="99.8" y="405" width="0.4" height="15.0" fill="rgb(215,159,41)" rx="2" ry="2" />
<text  x="102.81" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="120.8" y="261" width="0.4" height="15.0" fill="rgb(208,97,14)" rx="2" ry="2" />
<text  x="123.79" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="969.9" y="469" width="0.4" height="15.0" fill="rgb(225,62,53)" rx="2" ry="2" />
<text  x="972.90" y="479.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (1 samples, 0.03%)</title><rect x="917.3" y="517" width="0.3" height="15.0" fill="rgb(209,199,40)" rx="2" ry="2" />
<text  x="920.27" y="527.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (3 samples, 0.09%)</title><rect x="921.3" y="533" width="1.1" height="15.0" fill="rgb(214,50,22)" rx="2" ry="2" />
<text  x="924.32" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (9 samples, 0.28%)</title><rect x="111.2" y="469" width="3.3" height="15.0" fill="rgb(254,196,42)" rx="2" ry="2" />
<text  x="114.22" y="479.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%)</title><rect x="1027.7" y="469" width="0.4" height="15.0" fill="rgb(249,27,23)" rx="2" ry="2" />
<text  x="1030.69" y="479.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1 samples, 0.03%)</title><rect x="819.0" y="501" width="0.4" height="15.0" fill="rgb(214,108,10)" rx="2" ry="2" />
<text  x="822.00" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (5 samples, 0.16%)</title><rect x="96.9" y="357" width="1.8" height="15.0" fill="rgb(245,194,19)" rx="2" ry="2" />
<text  x="99.86" y="367.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_metric (1 samples, 0.03%)</title><rect x="152.4" y="469" width="0.4" height="15.0" fill="rgb(244,201,2)" rx="2" ry="2" />
<text  x="155.44" y="479.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="68.2" y="309" width="0.3" height="15.0" fill="rgb(226,86,0)" rx="2" ry="2" />
<text  x="71.15" y="319.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%)</title><rect x="184.5" y="485" width="0.3" height="15.0" fill="rgb(213,225,47)" rx="2" ry="2" />
<text  x="187.46" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%)</title><rect x="62.6" y="469" width="0.4" height="15.0" fill="rgb(251,2,13)" rx="2" ry="2" />
<text  x="65.63" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_initial_partition_key_restrictions (1 samples, 0.03%)</title><rect x="22.5" y="517" width="0.4" height="15.0" fill="rgb(216,155,1)" rx="2" ry="2" />
<text  x="25.51" y="527.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (8 samples, 0.25%)</title><rect x="1141.0" y="613" width="3.0" height="15.0" fill="rgb(234,173,24)" rx="2" ry="2" />
<text  x="1144.05" y="623.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="657.8" y="613" width="1.1" height="15.0" fill="rgb(254,199,8)" rx="2" ry="2" />
<text  x="660.79" y="623.5" ></text>
</g>
<g >
<title>std::_Enable_default_constructor&lt;true, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt;::_Enable_default_constructor (1 samples, 0.03%)</title><rect x="80.7" y="389" width="0.3" height="15.0" fill="rgb(211,128,26)" rx="2" ry="2" />
<text  x="83.67" y="399.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%)</title><rect x="120.8" y="421" width="0.7" height="15.0" fill="rgb(222,189,28)" rx="2" ry="2" />
<text  x="123.79" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (2 samples, 0.06%)</title><rect x="854.3" y="517" width="0.8" height="15.0" fill="rgb(248,219,10)" rx="2" ry="2" />
<text  x="857.33" y="527.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%)</title><rect x="71.1" y="453" width="0.4" height="15.0" fill="rgb(246,119,49)" rx="2" ry="2" />
<text  x="74.10" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::get_deleter (1 samples, 0.03%)</title><rect x="118.2" y="421" width="0.4" height="15.0" fill="rgb(235,93,19)" rx="2" ry="2" />
<text  x="121.21" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="309" width="0.4" height="15.0" fill="rgb(238,95,10)" rx="2" ry="2" />
<text  x="123.42" y="319.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="661" width="0.4" height="15.0" fill="rgb(222,88,10)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (2 samples, 0.06%)</title><rect x="26.9" y="565" width="0.8" height="15.0" fill="rgb(222,192,27)" rx="2" ry="2" />
<text  x="29.93" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (17 samples, 0.53%)</title><rect x="32.1" y="421" width="6.2" height="15.0" fill="rgb(249,68,20)" rx="2" ry="2" />
<text  x="35.08" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.03%)</title><rect x="64.8" y="469" width="0.4" height="15.0" fill="rgb(218,190,28)" rx="2" ry="2" />
<text  x="67.84" y="479.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="61.9" y="341" width="0.4" height="15.0" fill="rgb(247,53,33)" rx="2" ry="2" />
<text  x="64.90" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="72.6" y="405" width="0.7" height="15.0" fill="rgb(215,77,20)" rx="2" ry="2" />
<text  x="75.57" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::attributes::raw*, false&gt;::_Head_base (1 samples, 0.03%)</title><rect x="124.8" y="421" width="0.4" height="15.0" fill="rgb(246,196,16)" rx="2" ry="2" />
<text  x="127.83" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="119.7" y="261" width="0.3" height="15.0" fill="rgb(250,197,32)" rx="2" ry="2" />
<text  x="122.68" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%)</title><rect x="318.1" y="421" width="0.3" height="15.0" fill="rgb(229,162,37)" rx="2" ry="2" />
<text  x="321.07" y="431.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.03%)</title><rect x="504.7" y="533" width="0.3" height="15.0" fill="rgb(206,10,1)" rx="2" ry="2" />
<text  x="507.67" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%)</title><rect x="89.9" y="421" width="0.3" height="15.0" fill="rgb(218,52,12)" rx="2" ry="2" />
<text  x="92.87" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="83.6" y="277" width="0.4" height="15.0" fill="rgb(227,153,49)" rx="2" ry="2" />
<text  x="86.61" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="113.8" y="341" width="0.7" height="15.0" fill="rgb(243,94,14)" rx="2" ry="2" />
<text  x="116.79" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="61.9" y="373" width="0.4" height="15.0" fill="rgb(221,87,38)" rx="2" ry="2" />
<text  x="64.90" y="383.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Lexer (1 samples, 0.03%)</title><rect x="25.8" y="565" width="0.4" height="15.0" fill="rgb(233,35,5)" rx="2" ry="2" />
<text  x="28.83" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="87.3" y="181" width="0.4" height="15.0" fill="rgb(227,106,32)" rx="2" ry="2" />
<text  x="90.29" y="191.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="29.1" y="357" width="0.4" height="15.0" fill="rgb(216,179,5)" rx="2" ry="2" />
<text  x="32.14" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%)</title><rect x="714.1" y="613" width="0.7" height="15.0" fill="rgb(239,56,41)" rx="2" ry="2" />
<text  x="717.10" y="623.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (3 samples, 0.09%)</title><rect x="68.5" y="437" width="1.1" height="15.0" fill="rgb(229,58,31)" rx="2" ry="2" />
<text  x="71.52" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="78.1" y="341" width="0.4" height="15.0" fill="rgb(214,143,25)" rx="2" ry="2" />
<text  x="81.09" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (2 samples, 0.06%)</title><rect x="851.8" y="469" width="0.7" height="15.0" fill="rgb(253,78,54)" rx="2" ry="2" />
<text  x="854.75" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="84.3" y="405" width="0.4" height="15.0" fill="rgb(252,50,39)" rx="2" ry="2" />
<text  x="87.35" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%)</title><rect x="112.0" y="325" width="0.3" height="15.0" fill="rgb(216,55,49)" rx="2" ry="2" />
<text  x="114.95" y="335.5" ></text>
</g>
<g >
<title>sstables::mc::writer::drain_tombstones (1 samples, 0.03%)</title><rect x="148.8" y="661" width="0.3" height="15.0" fill="rgb(246,1,4)" rx="2" ry="2" />
<text  x="151.76" y="671.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (13 samples, 0.41%)</title><rect x="752.0" y="581" width="4.8" height="15.0" fill="rgb(251,20,34)" rx="2" ry="2" />
<text  x="755.01" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="97.2" y="213" width="1.1" height="15.0" fill="rgb(252,61,3)" rx="2" ry="2" />
<text  x="100.23" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~deque (1 samples, 0.03%)</title><rect x="27.3" y="517" width="0.4" height="15.0" fill="rgb(254,7,17)" rx="2" ry="2" />
<text  x="30.30" y="527.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (400 samples, 12.48%)</title><rect x="927.6" y="549" width="147.2" height="15.0" fill="rgb(243,140,19)" rx="2" ry="2" />
<text  x="930.57" y="559.5" >cql3::statements::..</text>
</g>
<g >
<title>schema::registry_entry (1 samples, 0.03%)</title><rect x="997.9" y="421" width="0.3" height="15.0" fill="rgb(248,30,23)" rx="2" ry="2" />
<text  x="1000.87" y="431.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (148 samples, 4.62%)</title><rect x="563.9" y="533" width="54.5" height="15.0" fill="rgb(249,74,32)" rx="2" ry="2" />
<text  x="566.93" y="543.5" >memta..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="775.9" y="533" width="0.4" height="15.0" fill="rgb(208,182,37)" rx="2" ry="2" />
<text  x="778.93" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~deque (1 samples, 0.03%)</title><rect x="26.9" y="501" width="0.4" height="15.0" fill="rgb(213,107,28)" rx="2" ry="2" />
<text  x="29.93" y="511.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (5 samples, 0.16%)</title><rect x="762.7" y="581" width="1.8" height="15.0" fill="rgb(223,200,1)" rx="2" ry="2" />
<text  x="765.68" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="120.8" y="293" width="0.4" height="15.0" fill="rgb(215,218,33)" rx="2" ry="2" />
<text  x="123.79" y="303.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%)</title><rect x="330.2" y="405" width="0.4" height="15.0" fill="rgb(208,71,16)" rx="2" ry="2" />
<text  x="333.21" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="502.8" y="565" width="0.8" height="15.0" fill="rgb(247,21,32)" rx="2" ry="2" />
<text  x="505.83" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (1 samples, 0.03%)</title><rect x="1097.2" y="565" width="0.4" height="15.0" fill="rgb(222,21,41)" rx="2" ry="2" />
<text  x="1100.25" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="92.4" y="133" width="0.4" height="15.0" fill="rgb(252,3,9)" rx="2" ry="2" />
<text  x="95.45" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%)</title><rect x="97.2" y="229" width="1.1" height="15.0" fill="rgb(223,166,51)" rx="2" ry="2" />
<text  x="100.23" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (291 samples, 9.08%)</title><rect x="27.7" y="565" width="107.1" height="15.0" fill="rgb(233,66,26)" rx="2" ry="2" />
<text  x="30.67" y="575.5" >seastar::nonc..</text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (41 samples, 1.28%)</title><rect x="769.3" y="565" width="15.1" height="15.0" fill="rgb(250,199,48)" rx="2" ry="2" />
<text  x="772.31" y="575.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1,261 samples, 39.33%)</title><rect x="188.5" y="629" width="464.1" height="15.0" fill="rgb(243,218,34)" rx="2" ry="2" />
<text  x="191.51" y="639.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.09%)</title><rect x="102.4" y="373" width="1.1" height="15.0" fill="rgb(227,193,11)" rx="2" ry="2" />
<text  x="105.38" y="383.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%)</title><rect x="842.9" y="565" width="0.4" height="15.0" fill="rgb(245,199,16)" rx="2" ry="2" />
<text  x="845.92" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%)</title><rect x="117.8" y="421" width="0.4" height="15.0" fill="rgb(233,59,41)" rx="2" ry="2" />
<text  x="120.84" y="431.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%)</title><rect x="535.2" y="549" width="0.4" height="15.0" fill="rgb(226,68,0)" rx="2" ry="2" />
<text  x="538.22" y="559.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (2 samples, 0.06%)</title><rect x="147.3" y="661" width="0.7" height="15.0" fill="rgb(212,115,0)" rx="2" ry="2" />
<text  x="150.29" y="671.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="120.8" y="309" width="0.4" height="15.0" fill="rgb(208,161,36)" rx="2" ry="2" />
<text  x="123.79" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="92.4" y="245" width="0.4" height="15.0" fill="rgb(224,114,21)" rx="2" ry="2" />
<text  x="95.45" y="255.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (2 samples, 0.06%)</title><rect x="208.8" y="581" width="0.7" height="15.0" fill="rgb(238,207,12)" rx="2" ry="2" />
<text  x="211.75" y="591.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (43 samples, 1.34%)</title><rect x="38.7" y="421" width="15.8" height="15.0" fill="rgb(245,192,54)" rx="2" ry="2" />
<text  x="41.71" y="431.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.34%)</title><rect x="973.6" y="453" width="4.0" height="15.0" fill="rgb(232,36,4)" rx="2" ry="2" />
<text  x="976.58" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (11 samples, 0.34%)</title><rect x="648.2" y="613" width="4.1" height="15.0" fill="rgb(230,140,24)" rx="2" ry="2" />
<text  x="651.22" y="623.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.03%)</title><rect x="185.2" y="517" width="0.4" height="15.0" fill="rgb(230,7,52)" rx="2" ry="2" />
<text  x="188.20" y="527.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="19.9" y="533" width="0.4" height="15.0" fill="rgb(207,229,31)" rx="2" ry="2" />
<text  x="22.94" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.09%)</title><rect x="112.0" y="357" width="1.1" height="15.0" fill="rgb(215,162,43)" rx="2" ry="2" />
<text  x="114.95" y="367.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="90.2" y="293" width="0.4" height="15.0" fill="rgb(222,156,38)" rx="2" ry="2" />
<text  x="93.24" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="70.0" y="437" width="0.7" height="15.0" fill="rgb(254,164,54)" rx="2" ry="2" />
<text  x="72.99" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="67.8" y="405" width="0.7" height="15.0" fill="rgb(225,122,4)" rx="2" ry="2" />
<text  x="70.79" y="415.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%)</title><rect x="138.5" y="661" width="0.3" height="15.0" fill="rgb(251,8,15)" rx="2" ry="2" />
<text  x="141.45" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.03%)</title><rect x="969.5" y="389" width="0.4" height="15.0" fill="rgb(245,226,9)" rx="2" ry="2" />
<text  x="972.53" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="93.2" y="181" width="0.3" height="15.0" fill="rgb(252,80,40)" rx="2" ry="2" />
<text  x="96.18" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="112.7" y="229" width="0.4" height="15.0" fill="rgb(252,45,29)" rx="2" ry="2" />
<text  x="115.69" y="239.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%)</title><rect x="10.0" y="261" width="0.4" height="15.0" fill="rgb(234,80,8)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate (1 samples, 0.03%)</title><rect x="855.8" y="517" width="0.4" height="15.0" fill="rgb(217,103,9)" rx="2" ry="2" />
<text  x="858.80" y="527.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.09%)</title><rect x="829.3" y="549" width="1.1" height="15.0" fill="rgb(251,82,10)" rx="2" ry="2" />
<text  x="832.30" y="559.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%)</title><rect x="120.4" y="405" width="0.4" height="15.0" fill="rgb(245,198,34)" rx="2" ry="2" />
<text  x="123.42" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (5 samples, 0.16%)</title><rect x="86.2" y="245" width="1.8" height="15.0" fill="rgb(236,205,1)" rx="2" ry="2" />
<text  x="89.19" y="255.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~RuleReturnValue (1 samples, 0.03%)</title><rect x="62.3" y="501" width="0.3" height="15.0" fill="rgb(235,175,31)" rx="2" ry="2" />
<text  x="65.26" y="511.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%)</title><rect x="800.6" y="517" width="0.4" height="15.0" fill="rgb(249,49,39)" rx="2" ry="2" />
<text  x="803.59" y="527.5" ></text>
</g>
<g >
<title>db::rp_handle::~rp_handle (1 samples, 0.03%)</title><rect x="1108.3" y="533" width="0.4" height="15.0" fill="rgb(234,161,15)" rx="2" ry="2" />
<text  x="1111.29" y="543.5" ></text>
</g>
<g >
<title>table::set_hit_rate (5 samples, 0.16%)</title><rect x="736.6" y="597" width="1.8" height="15.0" fill="rgb(251,26,1)" rx="2" ry="2" />
<text  x="739.55" y="607.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%)</title><rect x="12.2" y="645" width="0.4" height="15.0" fill="rgb(244,179,28)" rx="2" ry="2" />
<text  x="15.21" y="655.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%)</title><rect x="103.9" y="229" width="0.3" height="15.0" fill="rgb(247,126,7)" rx="2" ry="2" />
<text  x="106.86" y="239.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (26 samples, 0.81%)</title><rect x="907.3" y="517" width="9.6" height="15.0" fill="rgb(246,101,8)" rx="2" ry="2" />
<text  x="910.33" y="527.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%)</title><rect x="754.2" y="565" width="2.6" height="15.0" fill="rgb(234,199,2)" rx="2" ry="2" />
<text  x="757.22" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%)</title><rect x="85.8" y="293" width="0.4" height="15.0" fill="rgb(251,126,18)" rx="2" ry="2" />
<text  x="88.82" y="303.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.03%)</title><rect x="185.2" y="533" width="0.4" height="15.0" fill="rgb(246,120,30)" rx="2" ry="2" />
<text  x="188.20" y="543.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (8 samples, 0.25%)</title><rect x="1109.4" y="341" width="2.9" height="15.0" fill="rgb(232,226,43)" rx="2" ry="2" />
<text  x="1112.39" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="75.9" y="389" width="0.7" height="15.0" fill="rgb(222,206,50)" rx="2" ry="2" />
<text  x="78.88" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%)</title><rect x="659.6" y="613" width="0.8" height="15.0" fill="rgb(239,114,41)" rx="2" ry="2" />
<text  x="662.63" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="73.3" y="293" width="0.4" height="15.0" fill="rgb(219,108,23)" rx="2" ry="2" />
<text  x="76.31" y="303.5" ></text>
</g>
<g >
<title>distributed_loader::init_system_keyspace (1 samples, 0.03%)</title><rect x="138.8" y="597" width="0.4" height="15.0" fill="rgb(250,56,12)" rx="2" ry="2" />
<text  x="141.82" y="607.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%)</title><rect x="874.6" y="549" width="0.3" height="15.0" fill="rgb(242,26,49)" rx="2" ry="2" />
<text  x="877.57" y="559.5" ></text>
</g>
<g >
<title>gms::gossiper::stop (1 samples, 0.03%)</title><rect x="12.2" y="597" width="0.4" height="15.0" fill="rgb(246,52,48)" rx="2" ry="2" />
<text  x="15.21" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (4 samples, 0.12%)</title><rect x="102.0" y="405" width="1.5" height="15.0" fill="rgb(219,22,31)" rx="2" ry="2" />
<text  x="105.01" y="415.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.12%)</title><rect x="817.2" y="485" width="1.4" height="15.0" fill="rgb(254,199,45)" rx="2" ry="2" />
<text  x="820.16" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (2 samples, 0.06%)</title><rect x="108.6" y="453" width="0.8" height="15.0" fill="rgb(206,134,52)" rx="2" ry="2" />
<text  x="111.64" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="97.2" y="101" width="1.1" height="15.0" fill="rgb(242,54,37)" rx="2" ry="2" />
<text  x="100.23" y="111.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%)</title><rect x="79.9" y="309" width="0.4" height="15.0" fill="rgb(247,118,51)" rx="2" ry="2" />
<text  x="82.93" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%)</title><rect x="384.3" y="501" width="1.1" height="15.0" fill="rgb(236,78,13)" rx="2" ry="2" />
<text  x="387.32" y="511.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.06%)</title><rect x="520.5" y="501" width="0.7" height="15.0" fill="rgb(220,116,20)" rx="2" ry="2" />
<text  x="523.50" y="511.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="10.7" y="677" width="0.4" height="15.0" fill="rgb(207,51,18)" rx="2" ry="2" />
<text  x="13.74" y="687.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;5ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="181" width="0.4" height="15.0" fill="rgb(245,45,36)" rx="2" ry="2" />
<text  x="123.42" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="72.6" y="341" width="0.3" height="15.0" fill="rgb(210,82,12)" rx="2" ry="2" />
<text  x="75.57" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.31%)</title><rect x="952.2" y="469" width="3.7" height="15.0" fill="rgb(208,61,42)" rx="2" ry="2" />
<text  x="955.23" y="479.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.59%)</title><rect x="1004.9" y="389" width="7.0" height="15.0" fill="rgb(222,54,1)" rx="2" ry="2" />
<text  x="1007.87" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="26.9" y="421" width="0.4" height="15.0" fill="rgb(245,171,52)" rx="2" ry="2" />
<text  x="29.93" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="83.2" y="357" width="0.4" height="15.0" fill="rgb(216,154,52)" rx="2" ry="2" />
<text  x="86.24" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.16%)</title><rect x="588.2" y="517" width="1.9" height="15.0" fill="rgb(208,175,51)" rx="2" ry="2" />
<text  x="591.22" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_Head_base (1 samples, 0.03%)</title><rect x="75.5" y="341" width="0.4" height="15.0" fill="rgb(234,11,5)" rx="2" ry="2" />
<text  x="78.51" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="61.9" y="357" width="0.4" height="15.0" fill="rgb(212,66,20)" rx="2" ry="2" />
<text  x="64.90" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.03%)</title><rect x="101.6" y="405" width="0.4" height="15.0" fill="rgb(229,31,24)" rx="2" ry="2" />
<text  x="104.65" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (3 samples, 0.09%)</title><rect x="678.8" y="565" width="1.1" height="15.0" fill="rgb(246,58,11)" rx="2" ry="2" />
<text  x="681.76" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;**&gt; &gt;::deallocate (1 samples, 0.03%)</title><rect x="26.9" y="453" width="0.4" height="15.0" fill="rgb(238,21,44)" rx="2" ry="2" />
<text  x="29.93" y="463.5" ></text>
</g>
<g >
<title>service::mutation_holder::reply (2 samples, 0.06%)</title><rect x="739.1" y="613" width="0.8" height="15.0" fill="rgb(240,125,20)" rx="2" ry="2" />
<text  x="742.13" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="197" width="0.4" height="15.0" fill="rgb(214,169,52)" rx="2" ry="2" />
<text  x="123.42" y="207.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.03%)</title><rect x="328.7" y="421" width="0.4" height="15.0" fill="rgb(241,32,54)" rx="2" ry="2" />
<text  x="331.74" y="431.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.03%)</title><rect x="521.6" y="517" width="0.4" height="15.0" fill="rgb(231,211,32)" rx="2" ry="2" />
<text  x="524.60" y="527.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (1 samples, 0.03%)</title><rect x="138.8" y="421" width="0.4" height="15.0" fill="rgb(252,192,54)" rx="2" ry="2" />
<text  x="141.82" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.06%)</title><rect x="533.4" y="533" width="0.7" height="15.0" fill="rgb(232,81,25)" rx="2" ry="2" />
<text  x="536.38" y="543.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (660 samples, 20.59%)</title><rect x="856.2" y="613" width="242.9" height="15.0" fill="rgb(215,92,21)" rx="2" ry="2" />
<text  x="859.17" y="623.5" >seastar::concrete_execution_stag..</text>
</g>
<g >
<title>seastar::memory::allocate_aligned (2 samples, 0.06%)</title><rect x="367.8" y="357" width="0.7" height="15.0" fill="rgb(252,105,14)" rx="2" ry="2" />
<text  x="370.75" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;gms::gossiper&gt;::stop (1 samples, 0.03%)</title><rect x="12.2" y="661" width="0.4" height="15.0" fill="rgb(234,142,4)" rx="2" ry="2" />
<text  x="15.21" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="92.4" y="69" width="0.4" height="15.0" fill="rgb(218,95,15)" rx="2" ry="2" />
<text  x="95.45" y="79.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="832.6" y="565" width="0.4" height="15.0" fill="rgb(235,142,21)" rx="2" ry="2" />
<text  x="835.61" y="575.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%)</title><rect x="59.0" y="501" width="0.3" height="15.0" fill="rgb(236,131,12)" rx="2" ry="2" />
<text  x="61.95" y="511.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%)</title><rect x="549.2" y="533" width="0.4" height="15.0" fill="rgb(207,5,9)" rx="2" ry="2" />
<text  x="552.21" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="64.5" y="453" width="0.3" height="15.0" fill="rgb(214,62,29)" rx="2" ry="2" />
<text  x="67.47" y="463.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="679.5" y="549" width="0.4" height="15.0" fill="rgb(249,200,10)" rx="2" ry="2" />
<text  x="682.50" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="70.4" y="341" width="0.3" height="15.0" fill="rgb(239,59,23)" rx="2" ry="2" />
<text  x="73.36" y="351.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (2 samples, 0.06%)</title><rect x="1097.6" y="565" width="0.8" height="15.0" fill="rgb(238,39,3)" rx="2" ry="2" />
<text  x="1100.62" y="575.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%)</title><rect x="739.9" y="581" width="0.3" height="15.0" fill="rgb(215,88,24)" rx="2" ry="2" />
<text  x="742.86" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="112.7" y="277" width="0.4" height="15.0" fill="rgb(226,44,18)" rx="2" ry="2" />
<text  x="115.69" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="90.2" y="277" width="0.4" height="15.0" fill="rgb(236,98,37)" rx="2" ry="2" />
<text  x="93.24" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="152.4" y="565" width="0.4" height="15.0" fill="rgb(251,62,0)" rx="2" ry="2" />
<text  x="155.44" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::attributes::raw&gt;, void&gt; (1 samples, 0.03%)</title><rect x="124.8" y="485" width="0.4" height="15.0" fill="rgb(209,73,31)" rx="2" ry="2" />
<text  x="127.83" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%)</title><rect x="70.7" y="469" width="0.4" height="15.0" fill="rgb(207,46,8)" rx="2" ry="2" />
<text  x="73.73" y="479.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1 samples, 0.03%)</title><rect x="45.3" y="277" width="0.4" height="15.0" fill="rgb(238,24,40)" rx="2" ry="2" />
<text  x="48.33" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.03%)</title><rect x="875.3" y="549" width="0.4" height="15.0" fill="rgb(219,151,30)" rx="2" ry="2" />
<text  x="878.31" y="559.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (23 samples, 0.72%)</title><rect x="701.6" y="629" width="8.4" height="15.0" fill="rgb(226,4,20)" rx="2" ry="2" />
<text  x="704.58" y="639.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="115.6" y="357" width="0.8" height="15.0" fill="rgb(250,5,11)" rx="2" ry="2" />
<text  x="118.63" y="367.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%)</title><rect x="71.8" y="293" width="0.8" height="15.0" fill="rgb(250,167,41)" rx="2" ry="2" />
<text  x="74.83" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%)</title><rect x="699.0" y="613" width="1.1" height="15.0" fill="rgb(240,115,11)" rx="2" ry="2" />
<text  x="702.01" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="72.9" y="293" width="0.4" height="15.0" fill="rgb(241,148,43)" rx="2" ry="2" />
<text  x="75.94" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="97.6" y="37" width="0.4" height="15.0" fill="rgb(206,150,43)" rx="2" ry="2" />
<text  x="100.60" y="47.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;ser::buffer_view&lt;bytes_ostream::fragment_iterator&gt; &gt; (1 samples, 0.03%)</title><rect x="1103.9" y="437" width="0.3" height="15.0" fill="rgb(247,64,9)" rx="2" ry="2" />
<text  x="1106.87" y="447.5" ></text>
</g>
<g >
<title>cql3::functions::function_name::~function_name (1 samples, 0.03%)</title><rect x="81.8" y="453" width="0.3" height="15.0" fill="rgb(242,74,11)" rx="2" ry="2" />
<text  x="84.77" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="390.2" y="517" width="0.4" height="15.0" fill="rgb(243,96,32)" rx="2" ry="2" />
<text  x="393.21" y="527.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%)</title><rect x="99.1" y="389" width="0.3" height="15.0" fill="rgb(240,80,8)" rx="2" ry="2" />
<text  x="102.07" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="84.3" y="357" width="0.4" height="15.0" fill="rgb(208,83,22)" rx="2" ry="2" />
<text  x="87.35" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="138.5" y="677" width="0.3" height="15.0" fill="rgb(245,210,53)" rx="2" ry="2" />
<text  x="141.45" y="687.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="115.6" y="389" width="0.8" height="15.0" fill="rgb(253,21,13)" rx="2" ry="2" />
<text  x="118.63" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (3 samples, 0.09%)</title><rect x="584.5" y="517" width="1.1" height="15.0" fill="rgb(249,227,39)" rx="2" ry="2" />
<text  x="587.54" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (8 samples, 0.25%)</title><rect x="363.3" y="341" width="3.0" height="15.0" fill="rgb(250,220,18)" rx="2" ry="2" />
<text  x="366.34" y="351.5" ></text>
</g>
<g >
<title>query_state::query_state (1 samples, 0.03%)</title><rect x="207.3" y="597" width="0.3" height="15.0" fill="rgb(231,228,46)" rx="2" ry="2" />
<text  x="210.28" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="165" width="0.4" height="15.0" fill="rgb(239,52,32)" rx="2" ry="2" />
<text  x="123.42" y="175.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (2 samples, 0.06%)</title><rect x="527.1" y="533" width="0.8" height="15.0" fill="rgb(246,149,19)" rx="2" ry="2" />
<text  x="530.12" y="543.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="12.6" y="613" width="0.3" height="15.0" fill="rgb(235,3,49)" rx="2" ry="2" />
<text  x="15.58" y="623.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%)</title><rect x="932.0" y="533" width="0.4" height="15.0" fill="rgb(254,37,33)" rx="2" ry="2" />
<text  x="934.99" y="543.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.09%)</title><rect x="177.1" y="629" width="1.1" height="15.0" fill="rgb(217,140,26)" rx="2" ry="2" />
<text  x="180.10" y="639.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (375 samples, 11.70%)</title><rect x="936.8" y="533" width="138.0" height="15.0" fill="rgb(216,59,2)" rx="2" ry="2" />
<text  x="939.77" y="543.5" >service::storage_..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="700.8" y="613" width="0.4" height="15.0" fill="rgb(245,72,23)" rx="2" ry="2" />
<text  x="703.85" y="623.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (1 samples, 0.03%)</title><rect x="176.4" y="597" width="0.3" height="15.0" fill="rgb(235,106,28)" rx="2" ry="2" />
<text  x="179.36" y="607.5" ></text>
</g>
<g >
<title>service::client_state::has_access (63 samples, 1.97%)</title><rect x="797.3" y="533" width="23.2" height="15.0" fill="rgb(215,124,3)" rx="2" ry="2" />
<text  x="800.28" y="543.5" >s..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%)</title><rect x="71.5" y="357" width="1.1" height="15.0" fill="rgb(221,26,49)" rx="2" ry="2" />
<text  x="74.47" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.50%)</title><rect x="1109.0" y="597" width="5.9" height="15.0" fill="rgb(221,65,50)" rx="2" ry="2" />
<text  x="1112.03" y="607.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (14 samples, 0.44%)</title><rect x="851.0" y="613" width="5.2" height="15.0" fill="rgb(240,132,37)" rx="2" ry="2" />
<text  x="854.02" y="623.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (199 samples, 6.21%)</title><rect x="298.9" y="469" width="73.3" height="15.0" fill="rgb(226,149,1)" rx="2" ry="2" />
<text  x="301.93" y="479.5" >partitio..</text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.03%)</title><rect x="184.8" y="613" width="0.4" height="15.0" fill="rgb(238,229,45)" rx="2" ry="2" />
<text  x="187.83" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="844.0" y="613" width="0.4" height="15.0" fill="rgb(243,125,4)" rx="2" ry="2" />
<text  x="847.02" y="623.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (110 samples, 3.43%)</title><rect x="788.8" y="549" width="40.5" height="15.0" fill="rgb(249,15,22)" rx="2" ry="2" />
<text  x="791.81" y="559.5" >ser..</text>
</g>
<g >
<title>operator new (8 samples, 0.25%)</title><rect x="1136.6" y="613" width="3.0" height="15.0" fill="rgb(227,189,41)" rx="2" ry="2" />
<text  x="1139.63" y="623.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, lister::scan_dir (1 samples, 0.03%)</title><rect x="154.3" y="645" width="0.3" height="15.0" fill="rgb(210,127,0)" rx="2" ry="2" />
<text  x="157.28" y="655.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.03%)</title><rect x="874.9" y="549" width="0.4" height="15.0" fill="rgb(230,157,41)" rx="2" ry="2" />
<text  x="877.94" y="559.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.09%)</title><rect x="1109.8" y="309" width="1.1" height="15.0" fill="rgb(215,3,5)" rx="2" ry="2" />
<text  x="1112.76" y="319.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (258 samples, 8.05%)</title><rect x="749.1" y="613" width="94.9" height="15.0" fill="rgb(239,1,19)" rx="2" ry="2" />
<text  x="752.06" y="623.5" >single_node..</text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.03%)</title><rect x="926.8" y="517" width="0.4" height="15.0" fill="rgb(222,210,54)" rx="2" ry="2" />
<text  x="929.84" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (112 samples, 3.49%)</title><rect x="70.0" y="485" width="41.2" height="15.0" fill="rgb(231,221,10)" rx="2" ry="2" />
<text  x="72.99" y="495.5" >cql..</text>
</g>
<g >
<title>posix_memalign (1 samples, 0.03%)</title><rect x="185.2" y="501" width="0.4" height="15.0" fill="rgb(249,161,0)" rx="2" ry="2" />
<text  x="188.20" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (4 samples, 0.12%)</title><rect x="44.2" y="389" width="1.5" height="15.0" fill="rgb(246,229,34)" rx="2" ry="2" />
<text  x="47.23" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="70.0" y="373" width="0.7" height="15.0" fill="rgb(238,174,49)" rx="2" ry="2" />
<text  x="72.99" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="112.0" y="277" width="0.3" height="15.0" fill="rgb(251,147,15)" rx="2" ry="2" />
<text  x="114.95" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="67.0" y="421" width="0.8" height="15.0" fill="rgb(211,176,5)" rx="2" ry="2" />
<text  x="70.05" y="431.5" ></text>
</g>
<g >
<title>frozen_mutation::unfreeze (1 samples, 0.03%)</title><rect x="185.2" y="613" width="0.4" height="15.0" fill="rgb(242,129,43)" rx="2" ry="2" />
<text  x="188.20" y="623.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.09%)</title><rect x="10.0" y="725" width="1.1" height="15.0" fill="rgb(242,111,29)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (88 samples, 2.74%)</title><rect x="503.6" y="565" width="32.4" height="15.0" fill="rgb(209,20,43)" rx="2" ry="2" />
<text  x="506.57" y="575.5" >st..</text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%)</title><rect x="335.4" y="389" width="0.3" height="15.0" fill="rgb(238,196,30)" rx="2" ry="2" />
<text  x="338.36" y="399.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (4 samples, 0.12%)</title><rect x="254.0" y="581" width="1.5" height="15.0" fill="rgb(226,71,37)" rx="2" ry="2" />
<text  x="257.02" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%)</title><rect x="1045.7" y="437" width="1.1" height="15.0" fill="rgb(250,5,21)" rx="2" ry="2" />
<text  x="1048.72" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="325" width="0.4" height="15.0" fill="rgb(254,214,21)" rx="2" ry="2" />
<text  x="123.42" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%)</title><rect x="118.9" y="245" width="0.8" height="15.0" fill="rgb(250,159,49)" rx="2" ry="2" />
<text  x="121.95" y="255.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%)</title><rect x="28.0" y="501" width="0.8" height="15.0" fill="rgb(240,51,24)" rx="2" ry="2" />
<text  x="31.03" y="511.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="126.3" y="485" width="0.4" height="15.0" fill="rgb(221,5,28)" rx="2" ry="2" />
<text  x="129.31" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="120.0" y="389" width="0.4" height="15.0" fill="rgb(210,173,42)" rx="2" ry="2" />
<text  x="123.05" y="399.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="138.5" y="709" width="0.3" height="15.0" fill="rgb(220,170,38)" rx="2" ry="2" />
<text  x="141.45" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="119.7" y="197" width="0.3" height="15.0" fill="rgb(239,103,28)" rx="2" ry="2" />
<text  x="122.68" y="207.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%)</title><rect x="1044.6" y="469" width="2.6" height="15.0" fill="rgb(213,165,12)" rx="2" ry="2" />
<text  x="1047.62" y="479.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="95.0" y="341" width="0.4" height="15.0" fill="rgb(254,114,1)" rx="2" ry="2" />
<text  x="98.02" y="351.5" ></text>
</g>
<g >
<title>std::move&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%)</title><rect x="117.5" y="325" width="0.3" height="15.0" fill="rgb(210,150,22)" rx="2" ry="2" />
<text  x="120.47" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (24 samples, 0.75%)</title><rect x="16.6" y="565" width="8.9" height="15.0" fill="rgb(242,194,11)" rx="2" ry="2" />
<text  x="19.63" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="78.1" y="325" width="0.4" height="15.0" fill="rgb(207,105,43)" rx="2" ry="2" />
<text  x="81.09" y="335.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.03%)</title><rect x="1103.9" y="421" width="0.3" height="15.0" fill="rgb(252,78,12)" rx="2" ry="2" />
<text  x="1106.87" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.03%)</title><rect x="399.4" y="549" width="0.4" height="15.0" fill="rgb(237,228,33)" rx="2" ry="2" />
<text  x="402.41" y="559.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%)</title><rect x="102.8" y="277" width="0.7" height="15.0" fill="rgb(211,113,42)" rx="2" ry="2" />
<text  x="105.75" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.22%)</title><rect x="171.6" y="597" width="2.6" height="15.0" fill="rgb(234,214,38)" rx="2" ry="2" />
<text  x="174.58" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%)</title><rect x="381.4" y="485" width="0.3" height="15.0" fill="rgb(212,33,37)" rx="2" ry="2" />
<text  x="384.37" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (15 samples, 0.47%)</title><rect x="91.0" y="421" width="5.5" height="15.0" fill="rgb(241,211,50)" rx="2" ry="2" />
<text  x="93.97" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (154 samples, 4.80%)</title><rect x="971.0" y="469" width="56.7" height="15.0" fill="rgb(231,123,30)" rx="2" ry="2" />
<text  x="974.00" y="479.5" >servic..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="84.3" y="373" width="0.4" height="15.0" fill="rgb(218,183,4)" rx="2" ry="2" />
<text  x="87.35" y="383.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%)</title><rect x="12.6" y="533" width="0.3" height="15.0" fill="rgb(229,102,14)" rx="2" ry="2" />
<text  x="15.58" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%)</title><rect x="79.9" y="325" width="0.8" height="15.0" fill="rgb(243,150,17)" rx="2" ry="2" />
<text  x="82.93" y="335.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="152.4" y="661" width="0.4" height="15.0" fill="rgb(244,205,0)" rx="2" ry="2" />
<text  x="155.44" y="671.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%)</title><rect x="152.4" y="693" width="0.4" height="15.0" fill="rgb(254,212,0)" rx="2" ry="2" />
<text  x="155.44" y="703.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="28.0" y="453" width="0.8" height="15.0" fill="rgb(246,28,33)" rx="2" ry="2" />
<text  x="31.03" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="107.5" y="373" width="0.4" height="15.0" fill="rgb(214,14,27)" rx="2" ry="2" />
<text  x="110.54" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (4 samples, 0.12%)</title><rect x="44.2" y="373" width="1.5" height="15.0" fill="rgb(224,0,50)" rx="2" ry="2" />
<text  x="47.23" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%)</title><rect x="72.6" y="437" width="0.7" height="15.0" fill="rgb(238,41,27)" rx="2" ry="2" />
<text  x="75.57" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1153.2" y="629" width="0.4" height="15.0" fill="rgb(241,151,11)" rx="2" ry="2" />
<text  x="1156.19" y="639.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.03%)</title><rect x="717.0" y="597" width="0.4" height="15.0" fill="rgb(221,141,3)" rx="2" ry="2" />
<text  x="720.04" y="607.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (16 samples, 0.50%)</title><rect x="469.7" y="533" width="5.9" height="15.0" fill="rgb(221,92,10)" rx="2" ry="2" />
<text  x="472.71" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="91.0" y="389" width="0.3" height="15.0" fill="rgb(228,142,35)" rx="2" ry="2" />
<text  x="93.97" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (5 samples, 0.16%)</title><rect x="40.5" y="357" width="1.9" height="15.0" fill="rgb(238,117,48)" rx="2" ry="2" />
<text  x="43.55" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="117.8" y="357" width="0.4" height="15.0" fill="rgb(227,105,53)" rx="2" ry="2" />
<text  x="120.84" y="367.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%)</title><rect x="120.8" y="373" width="0.4" height="15.0" fill="rgb(220,147,22)" rx="2" ry="2" />
<text  x="123.79" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%)</title><rect x="605.2" y="485" width="0.3" height="15.0" fill="rgb(230,173,14)" rx="2" ry="2" />
<text  x="608.15" y="495.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (1 samples, 0.03%)</title><rect x="643.4" y="581" width="0.4" height="15.0" fill="rgb(232,104,18)" rx="2" ry="2" />
<text  x="646.43" y="591.5" ></text>
</g>
<g >
<title>db::schema_tables::diff_table_or_view (1 samples, 0.03%)</title><rect x="183.7" y="597" width="0.4" height="15.0" fill="rgb(228,219,44)" rx="2" ry="2" />
<text  x="186.72" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::vector (1 samples, 0.03%)</title><rect x="128.1" y="501" width="0.4" height="15.0" fill="rgb(235,55,19)" rx="2" ry="2" />
<text  x="131.15" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.09%)</title><rect x="57.8" y="485" width="1.2" height="15.0" fill="rgb(250,125,44)" rx="2" ry="2" />
<text  x="60.85" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%)</title><rect x="1117.9" y="629" width="0.3" height="15.0" fill="rgb(215,220,27)" rx="2" ry="2" />
<text  x="1120.86" y="639.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.03%)</title><rect x="185.9" y="517" width="0.4" height="15.0" fill="rgb(251,42,39)" rx="2" ry="2" />
<text  x="188.93" y="527.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (356 samples, 11.10%)</title><rect x="261.4" y="565" width="131.0" height="15.0" fill="rgb(209,82,28)" rx="2" ry="2" />
<text  x="264.38" y="575.5" >flat_mutation_re..</text>
</g>
<g >
<title>std::_Optional_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false&gt;::~_Optional_base (1 samples, 0.03%)</title><rect x="65.2" y="469" width="0.4" height="15.0" fill="rgb(235,205,3)" rx="2" ry="2" />
<text  x="68.21" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (133 samples, 4.15%)</title><rect x="319.5" y="437" width="49.0" height="15.0" fill="rgb(221,162,46)" rx="2" ry="2" />
<text  x="322.54" y="447.5" >part..</text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.03%)</title><rect x="681.3" y="565" width="0.4" height="15.0" fill="rgb(242,174,11)" rx="2" ry="2" />
<text  x="684.34" y="575.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%)</title><rect x="661.5" y="613" width="0.3" height="15.0" fill="rgb(233,41,31)" rx="2" ry="2" />
<text  x="664.47" y="623.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.03%)</title><rect x="146.9" y="661" width="0.4" height="15.0" fill="rgb(212,125,32)" rx="2" ry="2" />
<text  x="149.92" y="671.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="304.8" y="453" width="1.1" height="15.0" fill="rgb(236,106,52)" rx="2" ry="2" />
<text  x="307.82" y="463.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%)</title><rect x="537.4" y="565" width="2.6" height="15.0" fill="rgb(208,182,16)" rx="2" ry="2" />
<text  x="540.43" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="978.0" y="453" width="0.4" height="15.0" fill="rgb(212,134,38)" rx="2" ry="2" />
<text  x="981.00" y="463.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (4 samples, 0.12%)</title><rect x="583.1" y="485" width="1.4" height="15.0" fill="rgb(241,17,40)" rx="2" ry="2" />
<text  x="586.07" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (2 samples, 0.06%)</title><rect x="1151.0" y="565" width="0.7" height="15.0" fill="rgb(210,5,19)" rx="2" ry="2" />
<text  x="1153.99" y="575.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%)</title><rect x="384.3" y="517" width="1.1" height="15.0" fill="rgb(236,106,18)" rx="2" ry="2" />
<text  x="387.32" y="527.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="93.5" y="197" width="0.4" height="15.0" fill="rgb(253,54,31)" rx="2" ry="2" />
<text  x="96.55" y="207.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (4 samples, 0.12%)</title><rect x="1113.4" y="437" width="1.5" height="15.0" fill="rgb(213,41,46)" rx="2" ry="2" />
<text  x="1116.44" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%)</title><rect x="680.2" y="565" width="0.8" height="15.0" fill="rgb(240,131,42)" rx="2" ry="2" />
<text  x="683.24" y="575.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.03%)</title><rect x="1103.9" y="453" width="0.3" height="15.0" fill="rgb(225,201,28)" rx="2" ry="2" />
<text  x="1106.87" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="96.1" y="341" width="0.4" height="15.0" fill="rgb(244,226,46)" rx="2" ry="2" />
<text  x="99.13" y="351.5" ></text>
</g>
<g >
<title>database::add_column_family (3 samples, 0.09%)</title><rect x="185.6" y="613" width="1.1" height="15.0" fill="rgb(224,99,6)" rx="2" ry="2" />
<text  x="188.56" y="623.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="84.3" y="437" width="0.4" height="15.0" fill="rgb(214,130,31)" rx="2" ry="2" />
<text  x="87.35" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reallocate_map (1 samples, 0.03%)</title><rect x="38.0" y="373" width="0.3" height="15.0" fill="rgb(229,150,19)" rx="2" ry="2" />
<text  x="40.97" y="383.5" ></text>
</g>
<g >
<title>make_shared_schema (1 samples, 0.03%)</title><rect x="138.8" y="373" width="0.4" height="15.0" fill="rgb(245,187,14)" rx="2" ry="2" />
<text  x="141.82" y="383.5" ></text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.03%)</title><rect x="1153.2" y="677" width="0.4" height="15.0" fill="rgb(238,49,2)" rx="2" ry="2" />
<text  x="1156.19" y="687.5" ></text>
</g>
<g >
<title>table::set_hit_rate (1 samples, 0.03%)</title><rect x="738.8" y="613" width="0.3" height="15.0" fill="rgb(230,202,14)" rx="2" ry="2" />
<text  x="741.76" y="623.5" ></text>
</g>
<g >
<title>sstables::sstable::write_components (1 samples, 0.03%)</title><rect x="10.7" y="709" width="0.4" height="15.0" fill="rgb(230,22,51)" rx="2" ry="2" />
<text  x="13.74" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.9" y="277" width="0.4" height="15.0" fill="rgb(241,138,19)" rx="2" ry="2" />
<text  x="82.93" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (9 samples, 0.28%)</title><rect x="1093.6" y="549" width="3.3" height="15.0" fill="rgb(225,50,12)" rx="2" ry="2" />
<text  x="1096.57" y="559.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.50%)</title><rect x="1109.0" y="533" width="5.9" height="15.0" fill="rgb(238,11,4)" rx="2" ry="2" />
<text  x="1112.03" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="118.9" y="293" width="0.8" height="15.0" fill="rgb(216,191,40)" rx="2" ry="2" />
<text  x="121.95" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="25.8" y="533" width="0.4" height="15.0" fill="rgb(210,181,3)" rx="2" ry="2" />
<text  x="28.83" y="543.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::native_value_delete_visitor&gt; (1 samples, 0.03%)</title><rect x="21.4" y="453" width="0.4" height="15.0" fill="rgb(250,102,26)" rx="2" ry="2" />
<text  x="24.41" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.06%)</title><rect x="667.7" y="597" width="0.8" height="15.0" fill="rgb(225,121,54)" rx="2" ry="2" />
<text  x="670.72" y="607.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%)</title><rect x="119.7" y="405" width="0.3" height="15.0" fill="rgb(215,166,26)" rx="2" ry="2" />
<text  x="122.68" y="415.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="116.0" y="293" width="0.4" height="15.0" fill="rgb(219,189,52)" rx="2" ry="2" />
<text  x="119.00" y="303.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_partition (3 samples, 0.09%)</title><rect x="148.0" y="677" width="1.1" height="15.0" fill="rgb(223,156,11)" rx="2" ry="2" />
<text  x="151.02" y="687.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (3 samples, 0.09%)</title><rect x="851.4" y="517" width="1.1" height="15.0" fill="rgb(207,57,52)" rx="2" ry="2" />
<text  x="854.38" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%)</title><rect x="71.8" y="277" width="0.8" height="15.0" fill="rgb(241,65,28)" rx="2" ry="2" />
<text  x="74.83" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="113.1" y="405" width="0.3" height="15.0" fill="rgb(225,198,49)" rx="2" ry="2" />
<text  x="116.06" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;cql3::expr::expression*, cql3::expr::expression&gt; (1 samples, 0.03%)</title><rect x="73.7" y="421" width="0.3" height="15.0" fill="rgb(254,22,10)" rx="2" ry="2" />
<text  x="76.67" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="115.6" y="341" width="0.8" height="15.0" fill="rgb(241,218,16)" rx="2" ry="2" />
<text  x="118.63" y="351.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (14 samples, 0.44%)</title><rect x="751.6" y="597" width="5.2" height="15.0" fill="rgb(218,58,33)" rx="2" ry="2" />
<text  x="754.64" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="1026.2" y="405" width="0.4" height="15.0" fill="rgb(212,109,52)" rx="2" ry="2" />
<text  x="1029.21" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (1 samples, 0.03%)</title><rect x="23.6" y="453" width="0.4" height="15.0" fill="rgb(234,60,16)" rx="2" ry="2" />
<text  x="26.62" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (1 samples, 0.03%)</title><rect x="1114.5" y="421" width="0.4" height="15.0" fill="rgb(252,124,29)" rx="2" ry="2" />
<text  x="1117.55" y="431.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (2 samples, 0.06%)</title><rect x="377.7" y="453" width="0.7" height="15.0" fill="rgb(206,196,46)" rx="2" ry="2" />
<text  x="380.69" y="463.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.03%)</title><rect x="10.7" y="613" width="0.4" height="15.0" fill="rgb(254,211,44)" rx="2" ry="2" />
<text  x="13.74" y="623.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%)</title><rect x="28.0" y="485" width="0.8" height="15.0" fill="rgb(206,105,22)" rx="2" ry="2" />
<text  x="31.03" y="495.5" ></text>
</g>
<g >
<title>TLS wrapper function for logalloc::shard_segment_pool (1 samples, 0.03%)</title><rect x="138.5" y="613" width="0.3" height="15.0" fill="rgb(233,83,8)" rx="2" ry="2" />
<text  x="141.45" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="67.4" y="341" width="0.4" height="15.0" fill="rgb(230,62,33)" rx="2" ry="2" />
<text  x="70.42" y="351.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="100.5" y="373" width="0.4" height="15.0" fill="rgb(216,178,40)" rx="2" ry="2" />
<text  x="103.54" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="72.6" y="293" width="0.3" height="15.0" fill="rgb(227,6,11)" rx="2" ry="2" />
<text  x="75.57" y="303.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.12%)</title><rect x="607.0" y="517" width="1.5" height="15.0" fill="rgb(233,176,12)" rx="2" ry="2" />
<text  x="609.99" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%)</title><rect x="618.4" y="517" width="1.1" height="15.0" fill="rgb(217,225,19)" rx="2" ry="2" />
<text  x="621.40" y="527.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="832.2" y="565" width="0.4" height="15.0" fill="rgb(209,121,15)" rx="2" ry="2" />
<text  x="835.25" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="29.1" y="469" width="0.4" height="15.0" fill="rgb(248,129,42)" rx="2" ry="2" />
<text  x="32.14" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2 samples, 0.06%)</title><rect x="102.8" y="309" width="0.7" height="15.0" fill="rgb(234,15,10)" rx="2" ry="2" />
<text  x="105.75" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="97.2" y="197" width="1.1" height="15.0" fill="rgb(225,213,4)" rx="2" ry="2" />
<text  x="100.23" y="207.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="87.3" y="229" width="0.7" height="15.0" fill="rgb(224,89,5)" rx="2" ry="2" />
<text  x="90.29" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="1113.4" y="405" width="0.8" height="15.0" fill="rgb(228,192,8)" rx="2" ry="2" />
<text  x="1116.44" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="563.6" y="517" width="0.3" height="15.0" fill="rgb(233,48,34)" rx="2" ry="2" />
<text  x="566.56" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%)</title><rect x="74.4" y="357" width="0.4" height="15.0" fill="rgb(244,189,11)" rx="2" ry="2" />
<text  x="77.41" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (22 samples, 0.69%)</title><rect x="652.6" y="629" width="8.1" height="15.0" fill="rgb(209,208,41)" rx="2" ry="2" />
<text  x="655.63" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="293" width="0.4" height="15.0" fill="rgb(251,187,50)" rx="2" ry="2" />
<text  x="123.42" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="85" width="0.4" height="15.0" fill="rgb(214,13,38)" rx="2" ry="2" />
<text  x="123.42" y="95.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.09%)</title><rect x="118.6" y="309" width="1.1" height="15.0" fill="rgb(221,11,48)" rx="2" ry="2" />
<text  x="121.58" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%)</title><rect x="99.4" y="357" width="0.4" height="15.0" fill="rgb(226,211,11)" rx="2" ry="2" />
<text  x="102.44" y="367.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="78.1" y="277" width="0.4" height="15.0" fill="rgb(220,68,2)" rx="2" ry="2" />
<text  x="81.09" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (2 samples, 0.06%)</title><rect x="1148.4" y="629" width="0.7" height="15.0" fill="rgb(226,78,2)" rx="2" ry="2" />
<text  x="1151.41" y="639.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="67.0" y="389" width="0.8" height="15.0" fill="rgb(250,227,38)" rx="2" ry="2" />
<text  x="70.05" y="399.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (6 samples, 0.19%)</title><rect x="17.4" y="485" width="2.2" height="15.0" fill="rgb(250,178,14)" rx="2" ry="2" />
<text  x="20.36" y="495.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl&amp;&gt; (1 samples, 0.03%)</title><rect x="114.2" y="213" width="0.3" height="15.0" fill="rgb(236,13,16)" rx="2" ry="2" />
<text  x="117.16" y="223.5" ></text>
</g>
<g >
<title>row::apply_monotonically (2 samples, 0.06%)</title><rect x="853.6" y="453" width="0.7" height="15.0" fill="rgb(245,71,16)" rx="2" ry="2" />
<text  x="856.59" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::get_deleter (1 samples, 0.03%)</title><rect x="109.4" y="453" width="0.3" height="15.0" fill="rgb(224,11,24)" rx="2" ry="2" />
<text  x="112.38" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="608.5" y="501" width="0.7" height="15.0" fill="rgb(237,125,1)" rx="2" ry="2" />
<text  x="611.47" y="511.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (1 samples, 0.03%)</title><rect x="513.1" y="501" width="0.4" height="15.0" fill="rgb(217,159,46)" rx="2" ry="2" />
<text  x="516.14" y="511.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="1107.6" y="485" width="0.3" height="15.0" fill="rgb(228,161,35)" rx="2" ry="2" />
<text  x="1110.55" y="495.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (26 samples, 0.81%)</title><rect x="1064.9" y="421" width="9.5" height="15.0" fill="rgb(220,138,44)" rx="2" ry="2" />
<text  x="1067.86" y="431.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (34 samples, 1.06%)</title><rect x="621.7" y="517" width="12.5" height="15.0" fill="rgb(249,74,27)" rx="2" ry="2" />
<text  x="624.72" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="138.8" y="725" width="0.4" height="15.0" fill="rgb(217,196,40)" rx="2" ry="2" />
<text  x="141.82" y="735.5" ></text>
</g>
<g >
<title>db::schema_tables::make_table_mutations (1 samples, 0.03%)</title><rect x="185.6" y="549" width="0.3" height="15.0" fill="rgb(231,154,49)" rx="2" ry="2" />
<text  x="188.56" y="559.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::delay&lt;service::abstract_write_response_handler::signal (1 samples, 0.03%)</title><rect x="739.9" y="597" width="0.3" height="15.0" fill="rgb(221,76,33)" rx="2" ry="2" />
<text  x="742.86" y="607.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%)</title><rect x="90.2" y="341" width="0.4" height="15.0" fill="rgb(246,18,50)" rx="2" ry="2" />
<text  x="93.24" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="87.3" y="213" width="0.7" height="15.0" fill="rgb(211,181,7)" rx="2" ry="2" />
<text  x="90.29" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="120.0" y="341" width="0.4" height="15.0" fill="rgb(233,88,3)" rx="2" ry="2" />
<text  x="123.05" y="351.5" ></text>
</g>
<g >
<title>data_value::data_value (1 samples, 0.03%)</title><rect x="22.9" y="485" width="0.4" height="15.0" fill="rgb(252,53,46)" rx="2" ry="2" />
<text  x="25.88" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%)</title><rect x="79.9" y="357" width="0.8" height="15.0" fill="rgb(214,75,5)" rx="2" ry="2" />
<text  x="82.93" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%)</title><rect x="116.4" y="421" width="0.3" height="15.0" fill="rgb(225,15,27)" rx="2" ry="2" />
<text  x="119.37" y="431.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (1 samples, 0.03%)</title><rect x="1047.2" y="469" width="0.4" height="15.0" fill="rgb(226,56,31)" rx="2" ry="2" />
<text  x="1050.19" y="479.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="695.7" y="597" width="0.7" height="15.0" fill="rgb(231,24,19)" rx="2" ry="2" />
<text  x="698.70" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="61.2" y="373" width="0.3" height="15.0" fill="rgb(228,204,44)" rx="2" ry="2" />
<text  x="64.16" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%)</title><rect x="61.5" y="453" width="0.8" height="15.0" fill="rgb(230,53,25)" rx="2" ry="2" />
<text  x="64.53" y="463.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.06%)</title><rect x="403.8" y="549" width="0.8" height="15.0" fill="rgb(245,83,46)" rx="2" ry="2" />
<text  x="406.82" y="559.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (25 samples, 0.78%)</title><rect x="167.9" y="613" width="9.2" height="15.0" fill="rgb(242,49,17)" rx="2" ry="2" />
<text  x="170.90" y="623.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (18 samples, 0.56%)</title><rect x="1014.8" y="373" width="6.6" height="15.0" fill="rgb(222,5,28)" rx="2" ry="2" />
<text  x="1017.80" y="383.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.03%)</title><rect x="812.7" y="469" width="0.4" height="15.0" fill="rgb(247,100,7)" rx="2" ry="2" />
<text  x="815.74" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%)</title><rect x="73.7" y="437" width="0.3" height="15.0" fill="rgb(211,22,14)" rx="2" ry="2" />
<text  x="76.67" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="796.2" y="517" width="0.7" height="15.0" fill="rgb(219,168,1)" rx="2" ry="2" />
<text  x="799.18" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="630.5" y="469" width="0.8" height="15.0" fill="rgb(215,92,51)" rx="2" ry="2" />
<text  x="633.55" y="479.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%)</title><rect x="1102.0" y="437" width="0.4" height="15.0" fill="rgb(244,86,0)" rx="2" ry="2" />
<text  x="1105.03" y="447.5" ></text>
</g>
<g >
<title>db::system_keyspace::query_mutations (1 samples, 0.03%)</title><rect x="184.5" y="565" width="0.3" height="15.0" fill="rgb(217,76,5)" rx="2" ry="2" />
<text  x="187.46" y="575.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="10.4" y="437" width="0.3" height="15.0" fill="rgb(214,172,26)" rx="2" ry="2" />
<text  x="13.37" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.03%)</title><rect x="53.1" y="389" width="0.3" height="15.0" fill="rgb(243,159,14)" rx="2" ry="2" />
<text  x="56.06" y="399.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (4 samples, 0.12%)</title><rect x="852.9" y="469" width="1.4" height="15.0" fill="rgb(226,119,32)" rx="2" ry="2" />
<text  x="855.86" y="479.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::substr[abi:cxx11] (3 samples, 0.09%)</title><rect x="102.4" y="389" width="1.1" height="15.0" fill="rgb(219,29,44)" rx="2" ry="2" />
<text  x="105.38" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (2 samples, 0.06%)</title><rect x="108.6" y="421" width="0.8" height="15.0" fill="rgb(236,38,26)" rx="2" ry="2" />
<text  x="111.64" y="431.5" ></text>
</g>
<g >
<title>std::addressof&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="93.5" y="165" width="0.4" height="15.0" fill="rgb(213,160,9)" rx="2" ry="2" />
<text  x="96.55" y="175.5" ></text>
</g>
<g >
<title>std::move&lt;cql3::expr::conjunction&amp;&gt; (1 samples, 0.03%)</title><rect x="86.9" y="181" width="0.4" height="15.0" fill="rgb(247,111,13)" rx="2" ry="2" />
<text  x="89.92" y="191.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (3 samples, 0.09%)</title><rect x="149.5" y="677" width="1.1" height="15.0" fill="rgb(230,147,32)" rx="2" ry="2" />
<text  x="152.49" y="687.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%)</title><rect x="68.9" y="309" width="0.7" height="15.0" fill="rgb(234,8,20)" rx="2" ry="2" />
<text  x="71.89" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::~_Optional_payload (1 samples, 0.03%)</title><rect x="123.0" y="389" width="0.4" height="15.0" fill="rgb(234,71,28)" rx="2" ry="2" />
<text  x="125.99" y="399.5" ></text>
</g>
<g >
<title>database::find_schema (8 samples, 0.25%)</title><rect x="785.5" y="549" width="2.9" height="15.0" fill="rgb(220,124,1)" rx="2" ry="2" />
<text  x="788.50" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%)</title><rect x="119.7" y="341" width="0.3" height="15.0" fill="rgb(248,14,37)" rx="2" ry="2" />
<text  x="122.68" y="351.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="58.6" y="325" width="0.4" height="15.0" fill="rgb(230,19,9)" rx="2" ry="2" />
<text  x="61.58" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.03%)</title><rect x="969.5" y="405" width="0.4" height="15.0" fill="rgb(218,164,17)" rx="2" ry="2" />
<text  x="972.53" y="415.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (32 samples, 1.00%)</title><rect x="456.5" y="501" width="11.7" height="15.0" fill="rgb(248,207,41)" rx="2" ry="2" />
<text  x="459.46" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;**&gt;::deallocate (1 samples, 0.03%)</title><rect x="26.9" y="437" width="0.4" height="15.0" fill="rgb(239,104,10)" rx="2" ry="2" />
<text  x="29.93" y="447.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (2 samples, 0.06%)</title><rect x="909.2" y="501" width="0.7" height="15.0" fill="rgb(243,113,8)" rx="2" ry="2" />
<text  x="912.17" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.03%)</title><rect x="84.0" y="405" width="0.3" height="15.0" fill="rgb(211,138,34)" rx="2" ry="2" />
<text  x="86.98" y="415.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::serialized_size_visitor&gt; (1 samples, 0.03%)</title><rect x="183.4" y="565" width="0.3" height="15.0" fill="rgb(249,165,34)" rx="2" ry="2" />
<text  x="186.36" y="575.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (1 samples, 0.03%)</title><rect x="153.5" y="645" width="0.4" height="15.0" fill="rgb(208,188,12)" rx="2" ry="2" />
<text  x="156.54" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%)</title><rect x="79.9" y="341" width="0.8" height="15.0" fill="rgb(231,126,37)" rx="2" ry="2" />
<text  x="82.93" y="351.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="138.8" y="501" width="0.4" height="15.0" fill="rgb(212,1,23)" rx="2" ry="2" />
<text  x="141.82" y="511.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="855.4" y="517" width="0.4" height="15.0" fill="rgb(232,105,45)" rx="2" ry="2" />
<text  x="858.43" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%)</title><rect x="71.8" y="325" width="0.8" height="15.0" fill="rgb(240,107,45)" rx="2" ry="2" />
<text  x="74.83" y="335.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="68.9" y="245" width="0.4" height="15.0" fill="rgb(239,220,19)" rx="2" ry="2" />
<text  x="71.89" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="181.1" y="597" width="0.4" height="15.0" fill="rgb(248,191,32)" rx="2" ry="2" />
<text  x="184.15" y="607.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (1 samples, 0.03%)</title><rect x="897.4" y="453" width="0.4" height="15.0" fill="rgb(246,71,35)" rx="2" ry="2" />
<text  x="900.39" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="105.7" y="373" width="0.4" height="15.0" fill="rgb(246,181,23)" rx="2" ry="2" />
<text  x="108.70" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="28.8" y="485" width="0.7" height="15.0" fill="rgb(237,59,48)" rx="2" ry="2" />
<text  x="31.77" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%)</title><rect x="117.8" y="373" width="0.4" height="15.0" fill="rgb(241,178,8)" rx="2" ry="2" />
<text  x="120.84" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.03%)</title><rect x="261.8" y="549" width="0.3" height="15.0" fill="rgb(250,45,43)" rx="2" ry="2" />
<text  x="264.75" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="95.8" y="309" width="0.3" height="15.0" fill="rgb(253,45,43)" rx="2" ry="2" />
<text  x="98.76" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.09%)</title><rect x="71.5" y="373" width="1.1" height="15.0" fill="rgb(217,109,10)" rx="2" ry="2" />
<text  x="74.47" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (1 samples, 0.03%)</title><rect x="121.5" y="341" width="0.4" height="15.0" fill="rgb(233,124,53)" rx="2" ry="2" />
<text  x="124.52" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.12%)</title><rect x="791.4" y="533" width="1.5" height="15.0" fill="rgb(219,1,2)" rx="2" ry="2" />
<text  x="794.39" y="543.5" ></text>
</g>
<g >
<title>database::find_schema (11 samples, 0.34%)</title><rect x="823.0" y="517" width="4.1" height="15.0" fill="rgb(235,206,20)" rx="2" ry="2" />
<text  x="826.04" y="527.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (15 samples, 0.47%)</title><rect x="140.3" y="741" width="5.5" height="15.0" fill="rgb(246,105,33)" rx="2" ry="2" />
<text  x="143.29" y="751.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="89.5" y="373" width="0.4" height="15.0" fill="rgb(217,226,8)" rx="2" ry="2" />
<text  x="92.50" y="383.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%)</title><rect x="1086.2" y="533" width="0.4" height="15.0" fill="rgb(236,190,41)" rx="2" ry="2" />
<text  x="1089.21" y="543.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (3 samples, 0.09%)</title><rect x="1026.6" y="421" width="1.1" height="15.0" fill="rgb(244,54,47)" rx="2" ry="2" />
<text  x="1029.58" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (285 samples, 8.89%)</title><rect x="276.8" y="517" width="104.9" height="15.0" fill="rgb(246,14,33)" rx="2" ry="2" />
<text  x="279.84" y="527.5" >mutation_rea..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="122.3" y="405" width="0.3" height="15.0" fill="rgb(225,211,21)" rx="2" ry="2" />
<text  x="125.26" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (4 samples, 0.12%)</title><rect x="149.5" y="693" width="1.5" height="15.0" fill="rgb(232,106,51)" rx="2" ry="2" />
<text  x="152.49" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="112.0" y="293" width="0.3" height="15.0" fill="rgb(220,10,10)" rx="2" ry="2" />
<text  x="114.95" y="303.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (297 samples, 9.26%)</title><rect x="25.5" y="581" width="109.3" height="15.0" fill="rgb(234,176,26)" rx="2" ry="2" />
<text  x="28.46" y="591.5" >cql3::util::d..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="68.5" y="341" width="0.4" height="15.0" fill="rgb(243,161,30)" rx="2" ry="2" />
<text  x="71.52" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (11 samples, 0.34%)</title><rect x="288.3" y="485" width="4.0" height="15.0" fill="rgb(240,117,9)" rx="2" ry="2" />
<text  x="291.25" y="495.5" ></text>
</g>
<g >
<title>service::storage_service::mutate_token_metadata (1 samples, 0.03%)</title><rect x="12.6" y="565" width="0.3" height="15.0" fill="rgb(244,180,38)" rx="2" ry="2" />
<text  x="15.58" y="575.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%)</title><rect x="780.3" y="517" width="0.4" height="15.0" fill="rgb(212,108,0)" rx="2" ry="2" />
<text  x="783.35" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_deallocate_map (1 samples, 0.03%)</title><rect x="38.0" y="357" width="0.3" height="15.0" fill="rgb(254,40,42)" rx="2" ry="2" />
<text  x="40.97" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="562.8" y="501" width="0.8" height="15.0" fill="rgb(214,147,12)" rx="2" ry="2" />
<text  x="565.83" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;4ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="97.2" y="85" width="0.8" height="15.0" fill="rgb(220,189,39)" rx="2" ry="2" />
<text  x="100.23" y="95.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="818.6" y="485" width="0.4" height="15.0" fill="rgb(208,32,35)" rx="2" ry="2" />
<text  x="821.63" y="495.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (2 samples, 0.06%)</title><rect x="26.2" y="533" width="0.7" height="15.0" fill="rgb(253,188,46)" rx="2" ry="2" />
<text  x="29.19" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="58.6" y="389" width="0.4" height="15.0" fill="rgb(231,66,13)" rx="2" ry="2" />
<text  x="61.58" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (6 samples, 0.19%)</title><rect x="627.6" y="501" width="2.2" height="15.0" fill="rgb(233,58,42)" rx="2" ry="2" />
<text  x="630.60" y="511.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="138.8" y="325" width="0.4" height="15.0" fill="rgb(228,165,50)" rx="2" ry="2" />
<text  x="141.82" y="335.5" ></text>
</g>
<g >
<title>row::row (86 samples, 2.68%)</title><rect x="336.8" y="421" width="31.7" height="15.0" fill="rgb(242,96,14)" rx="2" ry="2" />
<text  x="339.84" y="431.5" >ro..</text>
</g>
<g >
<title>cql3::column_identifier_raw::column_identifier_raw (1 samples, 0.03%)</title><rect x="69.6" y="421" width="0.4" height="15.0" fill="rgb(214,20,27)" rx="2" ry="2" />
<text  x="72.63" y="431.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%)</title><rect x="238.2" y="565" width="2.9" height="15.0" fill="rgb(223,98,3)" rx="2" ry="2" />
<text  x="241.20" y="575.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.03%)</title><rect x="520.1" y="501" width="0.4" height="15.0" fill="rgb(238,84,46)" rx="2" ry="2" />
<text  x="523.13" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="373" width="0.4" height="15.0" fill="rgb(247,39,1)" rx="2" ry="2" />
<text  x="123.42" y="383.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (5 samples, 0.16%)</title><rect x="1095.0" y="533" width="1.9" height="15.0" fill="rgb(247,48,36)" rx="2" ry="2" />
<text  x="1098.04" y="543.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (3 samples, 0.09%)</title><rect x="119.7" y="421" width="1.1" height="15.0" fill="rgb(209,229,35)" rx="2" ry="2" />
<text  x="122.68" y="431.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (186 samples, 5.80%)</title><rect x="764.5" y="581" width="68.5" height="15.0" fill="rgb(212,169,43)" rx="2" ry="2" />
<text  x="767.52" y="591.5" >cql3::q..</text>
</g>
<g >
<title>operator new (5 samples, 0.16%)</title><rect x="941.9" y="501" width="1.9" height="15.0" fill="rgb(215,205,38)" rx="2" ry="2" />
<text  x="944.93" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="78.5" y="277" width="0.3" height="15.0" fill="rgb(207,157,39)" rx="2" ry="2" />
<text  x="81.46" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="97.2" y="181" width="1.1" height="15.0" fill="rgb(215,36,41)" rx="2" ry="2" />
<text  x="100.23" y="191.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.03%)</title><rect x="10.7" y="629" width="0.4" height="15.0" fill="rgb(207,64,29)" rx="2" ry="2" />
<text  x="13.74" y="639.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%)</title><rect x="104.6" y="341" width="0.4" height="15.0" fill="rgb(220,166,20)" rx="2" ry="2" />
<text  x="107.59" y="351.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="69.3" y="261" width="0.3" height="15.0" fill="rgb(207,42,44)" rx="2" ry="2" />
<text  x="72.26" y="271.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="118.9" y="261" width="0.8" height="15.0" fill="rgb(213,159,41)" rx="2" ry="2" />
<text  x="121.95" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (34 samples, 1.06%)</title><rect x="421.9" y="533" width="12.5" height="15.0" fill="rgb(222,26,38)" rx="2" ry="2" />
<text  x="424.86" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (4 samples, 0.12%)</title><rect x="97.2" y="245" width="1.5" height="15.0" fill="rgb(241,63,15)" rx="2" ry="2" />
<text  x="100.23" y="255.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5 samples, 0.16%)</title><rect x="390.6" y="533" width="1.8" height="15.0" fill="rgb(250,78,49)" rx="2" ry="2" />
<text  x="393.57" y="543.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (3 samples, 0.09%)</title><rect x="21.4" y="501" width="1.1" height="15.0" fill="rgb(218,18,36)" rx="2" ry="2" />
<text  x="24.41" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="110.8" y="469" width="0.4" height="15.0" fill="rgb(207,10,14)" rx="2" ry="2" />
<text  x="113.85" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="108.3" y="437" width="0.3" height="15.0" fill="rgb(230,56,19)" rx="2" ry="2" />
<text  x="111.27" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%)</title><rect x="619.5" y="533" width="0.4" height="15.0" fill="rgb(222,229,52)" rx="2" ry="2" />
<text  x="622.51" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (4 samples, 0.12%)</title><rect x="92.4" y="293" width="1.5" height="15.0" fill="rgb(239,105,44)" rx="2" ry="2" />
<text  x="95.45" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%)</title><rect x="116.4" y="453" width="0.3" height="15.0" fill="rgb(236,109,5)" rx="2" ry="2" />
<text  x="119.37" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="103.9" y="341" width="0.3" height="15.0" fill="rgb(254,181,43)" rx="2" ry="2" />
<text  x="106.86" y="351.5" ></text>
</g>
<g >
<title>query::querier&lt; (2 samples, 0.06%)</title><rect x="205.1" y="597" width="0.7" height="15.0" fill="rgb(213,193,12)" rx="2" ry="2" />
<text  x="208.07" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%)</title><rect x="60.1" y="469" width="0.3" height="15.0" fill="rgb(243,31,25)" rx="2" ry="2" />
<text  x="63.06" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%)</title><rect x="87.3" y="165" width="0.4" height="15.0" fill="rgb(213,160,5)" rx="2" ry="2" />
<text  x="90.29" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%)</title><rect x="1014.4" y="341" width="0.4" height="15.0" fill="rgb(230,9,5)" rx="2" ry="2" />
<text  x="1017.44" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::select_statement, std::default_delete&lt;cql3::statements::raw::select_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::select_statement&gt;, void&gt; (1 samples, 0.03%)</title><rect x="133.7" y="533" width="0.3" height="15.0" fill="rgb(234,32,53)" rx="2" ry="2" />
<text  x="136.67" y="543.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (8 samples, 0.25%)</title><rect x="1141.0" y="597" width="3.0" height="15.0" fill="rgb(220,118,21)" rx="2" ry="2" />
<text  x="1144.05" y="607.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.09%)</title><rect x="116.7" y="389" width="1.1" height="15.0" fill="rgb(245,143,19)" rx="2" ry="2" />
<text  x="119.74" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;**&gt; &gt;::allocate (1 samples, 0.03%)</title><rect x="26.6" y="389" width="0.3" height="15.0" fill="rgb(213,80,34)" rx="2" ry="2" />
<text  x="29.56" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (14 samples, 0.44%)</title><rect x="851.0" y="581" width="5.2" height="15.0" fill="rgb(240,118,51)" rx="2" ry="2" />
<text  x="854.02" y="591.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (1 samples, 0.03%)</title><rect x="23.3" y="485" width="0.3" height="15.0" fill="rgb(207,62,11)" rx="2" ry="2" />
<text  x="26.25" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="75.9" y="277" width="0.7" height="15.0" fill="rgb(213,229,42)" rx="2" ry="2" />
<text  x="78.88" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="687.6" y="613" width="0.4" height="15.0" fill="rgb(209,190,37)" rx="2" ry="2" />
<text  x="690.60" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%)</title><rect x="116.7" y="357" width="0.4" height="15.0" fill="rgb(228,3,2)" rx="2" ry="2" />
<text  x="119.74" y="367.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (1 samples, 0.03%)</title><rect x="1113.1" y="373" width="0.3" height="15.0" fill="rgb(226,180,15)" rx="2" ry="2" />
<text  x="1116.08" y="383.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="138.8" y="549" width="0.4" height="15.0" fill="rgb(213,226,13)" rx="2" ry="2" />
<text  x="141.82" y="559.5" ></text>
</g>
<g >
<title>clustering_key_prefix::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="852.5" y="501" width="0.4" height="15.0" fill="rgb(247,177,31)" rx="2" ry="2" />
<text  x="855.49" y="511.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%)</title><rect x="104.6" y="357" width="0.7" height="15.0" fill="rgb(217,119,36)" rx="2" ry="2" />
<text  x="107.59" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%)</title><rect x="392.4" y="565" width="0.4" height="15.0" fill="rgb(250,37,17)" rx="2" ry="2" />
<text  x="395.41" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%)</title><rect x="92.4" y="261" width="0.4" height="15.0" fill="rgb(241,149,43)" rx="2" ry="2" />
<text  x="95.45" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="96.1" y="245" width="0.4" height="15.0" fill="rgb(210,155,1)" rx="2" ry="2" />
<text  x="99.13" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="918.4" y="517" width="0.3" height="15.0" fill="rgb(246,188,25)" rx="2" ry="2" />
<text  x="921.37" y="527.5" ></text>
</g>
<g >
<title>seastar::writeable_eventfd::signal (1 samples, 0.03%)</title><rect x="152.1" y="741" width="0.3" height="15.0" fill="rgb(211,197,37)" rx="2" ry="2" />
<text  x="155.07" y="751.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::operator= (1 samples, 0.03%)</title><rect x="139.2" y="725" width="0.4" height="15.0" fill="rgb(218,128,42)" rx="2" ry="2" />
<text  x="142.19" y="735.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%)</title><rect x="10.4" y="597" width="0.3" height="15.0" fill="rgb(245,58,29)" rx="2" ry="2" />
<text  x="13.37" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="75.9" y="309" width="0.7" height="15.0" fill="rgb(236,106,30)" rx="2" ry="2" />
<text  x="78.88" y="319.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::set_errorRecovery (1 samples, 0.03%)</title><rect x="115.3" y="421" width="0.3" height="15.0" fill="rgb(215,113,3)" rx="2" ry="2" />
<text  x="118.27" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%)</title><rect x="152.4" y="597" width="0.4" height="15.0" fill="rgb(240,138,49)" rx="2" ry="2" />
<text  x="155.44" y="607.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (81 samples, 2.53%)</title><rect x="338.7" y="405" width="29.8" height="15.0" fill="rgb(214,33,31)" rx="2" ry="2" />
<text  x="341.68" y="415.5" >co..</text>
</g>
<g >
<title>ser::deletable_row_view::key (1 samples, 0.03%)</title><rect x="1105.3" y="469" width="0.4" height="15.0" fill="rgb(207,130,24)" rx="2" ry="2" />
<text  x="1108.35" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (4 samples, 0.12%)</title><rect x="114.9" y="469" width="1.5" height="15.0" fill="rgb(225,107,22)" rx="2" ry="2" />
<text  x="117.90" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (46 samples, 1.43%)</title><rect x="900.7" y="533" width="16.9" height="15.0" fill="rgb(226,171,43)" rx="2" ry="2" />
<text  x="903.70" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="58.6" y="341" width="0.4" height="15.0" fill="rgb(242,149,5)" rx="2" ry="2" />
<text  x="61.58" y="351.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="114.5" y="373" width="0.4" height="15.0" fill="rgb(212,145,5)" rx="2" ry="2" />
<text  x="117.53" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="78.1" y="405" width="0.7" height="15.0" fill="rgb(208,228,13)" rx="2" ry="2" />
<text  x="81.09" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="861.7" y="581" width="0.4" height="15.0" fill="rgb(253,43,5)" rx="2" ry="2" />
<text  x="864.69" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (1 samples, 0.03%)</title><rect x="523.1" y="533" width="0.3" height="15.0" fill="rgb(208,58,8)" rx="2" ry="2" />
<text  x="526.08" y="543.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="10.0" y="293" width="0.4" height="15.0" fill="rgb(206,22,33)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (1 samples, 0.03%)</title><rect x="184.5" y="517" width="0.3" height="15.0" fill="rgb(254,194,6)" rx="2" ry="2" />
<text  x="187.46" y="527.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.03%)</title><rect x="735.1" y="597" width="0.3" height="15.0" fill="rgb(235,44,33)" rx="2" ry="2" />
<text  x="738.08" y="607.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="1151.4" y="533" width="0.3" height="15.0" fill="rgb(214,53,54)" rx="2" ry="2" />
<text  x="1154.35" y="543.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="502.5" y="565" width="0.3" height="15.0" fill="rgb(242,104,6)" rx="2" ry="2" />
<text  x="505.46" y="575.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.03%)</title><rect x="510.2" y="517" width="0.4" height="15.0" fill="rgb(238,226,9)" rx="2" ry="2" />
<text  x="513.19" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="832.2" y="549" width="0.4" height="15.0" fill="rgb(223,90,30)" rx="2" ry="2" />
<text  x="835.25" y="559.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (18 samples, 0.56%)</title><rect x="910.3" y="501" width="6.6" height="15.0" fill="rgb(219,179,17)" rx="2" ry="2" />
<text  x="913.27" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="853.2" y="437" width="0.4" height="15.0" fill="rgb(234,85,48)" rx="2" ry="2" />
<text  x="856.23" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="120.8" y="213" width="0.4" height="15.0" fill="rgb(233,76,38)" rx="2" ry="2" />
<text  x="123.79" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (3 samples, 0.09%)</title><rect x="55.3" y="437" width="1.1" height="15.0" fill="rgb(213,197,4)" rx="2" ry="2" />
<text  x="58.27" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="96.1" y="357" width="0.4" height="15.0" fill="rgb(246,78,28)" rx="2" ry="2" />
<text  x="99.13" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="926.1" y="501" width="0.4" height="15.0" fill="rgb(224,191,52)" rx="2" ry="2" />
<text  x="929.10" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (27 samples, 0.84%)</title><rect x="674.7" y="613" width="10.0" height="15.0" fill="rgb(221,147,23)" rx="2" ry="2" />
<text  x="677.72" y="623.5" ></text>
</g>
<g >
<title>db::block_for (2 samples, 0.06%)</title><rect x="1043.5" y="453" width="0.7" height="15.0" fill="rgb(250,102,52)" rx="2" ry="2" />
<text  x="1046.51" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="10.7" y="645" width="0.4" height="15.0" fill="rgb(228,167,18)" rx="2" ry="2" />
<text  x="13.74" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.09%)</title><rect x="697.9" y="597" width="1.1" height="15.0" fill="rgb(250,45,38)" rx="2" ry="2" />
<text  x="700.90" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="80.3" y="309" width="0.4" height="15.0" fill="rgb(237,187,16)" rx="2" ry="2" />
<text  x="83.30" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="68.2" y="325" width="0.3" height="15.0" fill="rgb(229,17,12)" rx="2" ry="2" />
<text  x="71.15" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (2 samples, 0.06%)</title><rect x="113.8" y="229" width="0.7" height="15.0" fill="rgb(239,73,37)" rx="2" ry="2" />
<text  x="116.79" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="103.9" y="293" width="0.3" height="15.0" fill="rgb(234,182,52)" rx="2" ry="2" />
<text  x="106.86" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="96.1" y="277" width="0.4" height="15.0" fill="rgb(216,198,15)" rx="2" ry="2" />
<text  x="99.13" y="287.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="83.6" y="309" width="0.4" height="15.0" fill="rgb(214,142,3)" rx="2" ry="2" />
<text  x="86.61" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (15 samples, 0.47%)</title><rect x="84.7" y="437" width="5.5" height="15.0" fill="rgb(212,24,24)" rx="2" ry="2" />
<text  x="87.72" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%)</title><rect x="127.0" y="469" width="0.4" height="15.0" fill="rgb(219,120,26)" rx="2" ry="2" />
<text  x="130.04" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.09%)</title><rect x="112.0" y="341" width="1.1" height="15.0" fill="rgb(219,216,38)" rx="2" ry="2" />
<text  x="114.95" y="351.5" ></text>
</g>
<g >
<title>db::schema_tables::add_table_params_to_mutations (1 samples, 0.03%)</title><rect x="185.6" y="533" width="0.3" height="15.0" fill="rgb(233,139,30)" rx="2" ry="2" />
<text  x="188.56" y="543.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (341 samples, 10.64%)</title><rect x="12.9" y="677" width="125.6" height="15.0" fill="rgb(215,137,21)" rx="2" ry="2" />
<text  x="15.94" y="687.5" >std::_Function_..</text>
</g>
<g >
<title>database::apply_with_commitlog (22 samples, 0.69%)</title><rect x="1100.6" y="549" width="8.1" height="15.0" fill="rgb(206,53,51)" rx="2" ry="2" />
<text  x="1103.56" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.03%)</title><rect x="1011.5" y="325" width="0.4" height="15.0" fill="rgb(242,80,30)" rx="2" ry="2" />
<text  x="1014.49" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%)</title><rect x="68.9" y="325" width="0.7" height="15.0" fill="rgb(221,177,41)" rx="2" ry="2" />
<text  x="71.89" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="97.2" y="117" width="1.1" height="15.0" fill="rgb(240,96,38)" rx="2" ry="2" />
<text  x="100.23" y="127.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (1 samples, 0.03%)</title><rect x="909.9" y="501" width="0.4" height="15.0" fill="rgb(244,134,18)" rx="2" ry="2" />
<text  x="912.91" y="511.5" ></text>
</g>
<g >
<title>posix_memalign (2 samples, 0.06%)</title><rect x="367.8" y="373" width="0.7" height="15.0" fill="rgb(243,99,45)" rx="2" ry="2" />
<text  x="370.75" y="383.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (2 samples, 0.06%)</title><rect x="185.9" y="581" width="0.8" height="15.0" fill="rgb(227,9,10)" rx="2" ry="2" />
<text  x="188.93" y="591.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (46 samples, 1.43%)</title><rect x="590.1" y="517" width="16.9" height="15.0" fill="rgb(226,64,8)" rx="2" ry="2" />
<text  x="593.06" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="245" width="0.4" height="15.0" fill="rgb(235,217,15)" rx="2" ry="2" />
<text  x="123.42" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="121.2" y="229" width="0.3" height="15.0" fill="rgb(243,68,45)" rx="2" ry="2" />
<text  x="124.15" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%)</title><rect x="599.6" y="469" width="0.8" height="15.0" fill="rgb(239,193,4)" rx="2" ry="2" />
<text  x="602.63" y="479.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (1 samples, 0.03%)</title><rect x="185.9" y="549" width="0.4" height="15.0" fill="rgb(229,41,27)" rx="2" ry="2" />
<text  x="188.93" y="559.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare_conditions (1 samples, 0.03%)</title><rect x="16.3" y="565" width="0.3" height="15.0" fill="rgb(235,147,0)" rx="2" ry="2" />
<text  x="19.26" y="575.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.03%)</title><rect x="138.8" y="357" width="0.4" height="15.0" fill="rgb(214,63,37)" rx="2" ry="2" />
<text  x="141.82" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%)</title><rect x="880.5" y="533" width="0.7" height="15.0" fill="rgb(211,13,2)" rx="2" ry="2" />
<text  x="883.46" y="543.5" ></text>
</g>
<g >
<title>database::has_keyspace (7 samples, 0.22%)</title><rect x="833.0" y="581" width="2.6" height="15.0" fill="rgb(209,206,17)" rx="2" ry="2" />
<text  x="835.98" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="127.0" y="453" width="0.4" height="15.0" fill="rgb(233,187,47)" rx="2" ry="2" />
<text  x="130.04" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="118.9" y="213" width="0.4" height="15.0" fill="rgb(239,23,49)" rx="2" ry="2" />
<text  x="121.95" y="223.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="543.3" y="549" width="0.4" height="15.0" fill="rgb(249,25,28)" rx="2" ry="2" />
<text  x="546.32" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_tokenSource (1 samples, 0.03%)</title><rect x="56.4" y="469" width="0.3" height="15.0" fill="rgb(238,139,50)" rx="2" ry="2" />
<text  x="59.38" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_service_level_statement, std::default_delete&lt;cql3::statements::create_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="130.0" y="517" width="0.4" height="15.0" fill="rgb(218,173,32)" rx="2" ry="2" />
<text  x="132.99" y="527.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="152.4" y="581" width="0.4" height="15.0" fill="rgb(236,48,31)" rx="2" ry="2" />
<text  x="155.44" y="591.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.50%)</title><rect x="1109.0" y="581" width="5.9" height="15.0" fill="rgb(241,110,39)" rx="2" ry="2" />
<text  x="1112.03" y="591.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1,231 samples, 38.40%)</title><rect x="195.1" y="613" width="453.1" height="15.0" fill="rgb(214,33,0)" rx="2" ry="2" />
<text  x="198.13" y="623.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="926.5" y="517" width="0.3" height="15.0" fill="rgb(240,198,11)" rx="2" ry="2" />
<text  x="929.47" y="527.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.03%)</title><rect x="312.9" y="437" width="0.4" height="15.0" fill="rgb(235,77,7)" rx="2" ry="2" />
<text  x="315.91" y="447.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (2 samples, 0.06%)</title><rect x="469.0" y="533" width="0.7" height="15.0" fill="rgb(238,152,16)" rx="2" ry="2" />
<text  x="471.97" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::~untyped_constant (1 samples, 0.03%)</title><rect x="101.6" y="421" width="0.4" height="15.0" fill="rgb(228,102,28)" rx="2" ry="2" />
<text  x="104.65" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="120.8" y="357" width="0.4" height="15.0" fill="rgb(212,183,1)" rx="2" ry="2" />
<text  x="123.79" y="367.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="105.0" y="229" width="0.3" height="15.0" fill="rgb(246,129,18)" rx="2" ry="2" />
<text  x="107.96" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%)</title><rect x="658.9" y="613" width="0.7" height="15.0" fill="rgb(239,220,30)" rx="2" ry="2" />
<text  x="661.89" y="623.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (2 samples, 0.06%)</title><rect x="122.6" y="437" width="0.8" height="15.0" fill="rgb(253,78,13)" rx="2" ry="2" />
<text  x="125.63" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="95.0" y="325" width="0.4" height="15.0" fill="rgb(215,9,51)" rx="2" ry="2" />
<text  x="98.02" y="335.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%)</title><rect x="242.6" y="581" width="1.9" height="15.0" fill="rgb(228,122,39)" rx="2" ry="2" />
<text  x="245.61" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="89.5" y="325" width="0.4" height="15.0" fill="rgb(231,9,25)" rx="2" ry="2" />
<text  x="92.50" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%)</title><rect x="10.4" y="405" width="0.3" height="15.0" fill="rgb(229,48,36)" rx="2" ry="2" />
<text  x="13.37" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (356 samples, 11.10%)</title><rect x="943.8" y="501" width="131.0" height="15.0" fill="rgb(243,21,7)" rx="2" ry="2" />
<text  x="946.77" y="511.5" >service::storage..</text>
</g>
<g >
<title>[unknown] (354 samples, 11.04%)</title><rect x="10.0" y="741" width="130.3" height="15.0" fill="rgb(242,74,21)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >[unknown]</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="922.4" y="533" width="0.4" height="15.0" fill="rgb(249,161,36)" rx="2" ry="2" />
<text  x="925.42" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%)</title><rect x="1024.7" y="373" width="1.1" height="15.0" fill="rgb(230,67,22)" rx="2" ry="2" />
<text  x="1027.74" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%)</title><rect x="401.6" y="533" width="1.9" height="15.0" fill="rgb(249,188,4)" rx="2" ry="2" />
<text  x="404.62" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="112.0" y="261" width="0.3" height="15.0" fill="rgb(238,85,2)" rx="2" ry="2" />
<text  x="114.95" y="271.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%)</title><rect x="172.7" y="565" width="0.4" height="15.0" fill="rgb(229,130,49)" rx="2" ry="2" />
<text  x="175.68" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::deque (1 samples, 0.03%)</title><rect x="26.2" y="453" width="0.4" height="15.0" fill="rgb(241,179,36)" rx="2" ry="2" />
<text  x="29.19" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (265 samples, 8.27%)</title><rect x="540.0" y="565" width="97.5" height="15.0" fill="rgb(245,61,29)" rx="2" ry="2" />
<text  x="543.01" y="575.5" >std::_Funct..</text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.16%)</title><rect x="814.9" y="469" width="1.9" height="15.0" fill="rgb(233,28,1)" rx="2" ry="2" />
<text  x="817.95" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%)</title><rect x="1136.6" y="597" width="3.0" height="15.0" fill="rgb(220,76,54)" rx="2" ry="2" />
<text  x="1139.63" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.03%)</title><rect x="83.6" y="405" width="0.4" height="15.0" fill="rgb(237,173,40)" rx="2" ry="2" />
<text  x="86.61" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="154.6" y="645" width="0.4" height="15.0" fill="rgb(238,99,18)" rx="2" ry="2" />
<text  x="157.65" y="655.5" ></text>
</g>
<g >
<title>table::make_reader (1 samples, 0.03%)</title><rect x="1151.7" y="581" width="0.4" height="15.0" fill="rgb(244,51,22)" rx="2" ry="2" />
<text  x="1154.72" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="665.1" y="597" width="0.8" height="15.0" fill="rgb(212,80,45)" rx="2" ry="2" />
<text  x="668.15" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%)</title><rect x="601.5" y="453" width="1.1" height="15.0" fill="rgb(254,40,10)" rx="2" ry="2" />
<text  x="604.47" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.03%)</title><rect x="128.1" y="485" width="0.4" height="15.0" fill="rgb(236,120,24)" rx="2" ry="2" />
<text  x="131.15" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (4 samples, 0.12%)</title><rect x="860.6" y="597" width="1.5" height="15.0" fill="rgb(233,193,47)" rx="2" ry="2" />
<text  x="863.59" y="607.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="438.8" y="533" width="0.7" height="15.0" fill="rgb(249,114,32)" rx="2" ry="2" />
<text  x="441.79" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::get_deleter (2 samples, 0.06%)</title><rect x="100.9" y="389" width="0.7" height="15.0" fill="rgb(216,90,35)" rx="2" ry="2" />
<text  x="103.91" y="399.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="71.5" y="261" width="0.3" height="15.0" fill="rgb(251,224,41)" rx="2" ry="2" />
<text  x="74.47" y="271.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (51 samples, 1.59%)</title><rect x="881.6" y="517" width="18.7" height="15.0" fill="rgb(229,86,16)" rx="2" ry="2" />
<text  x="884.57" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restrictions&gt;::~shared_ptr_count_for (1 samples, 0.03%)</title><rect x="667.4" y="565" width="0.3" height="15.0" fill="rgb(233,102,8)" rx="2" ry="2" />
<text  x="670.35" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt;::base (1 samples, 0.03%)</title><rect x="82.5" y="421" width="0.4" height="15.0" fill="rgb(247,171,50)" rx="2" ry="2" />
<text  x="85.51" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="203.6" y="597" width="0.4" height="15.0" fill="rgb(230,48,20)" rx="2" ry="2" />
<text  x="206.60" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.06%)</title><rect x="37.2" y="389" width="0.8" height="15.0" fill="rgb(222,126,41)" rx="2" ry="2" />
<text  x="40.24" y="399.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (2 samples, 0.06%)</title><rect x="147.3" y="629" width="0.7" height="15.0" fill="rgb(220,135,1)" rx="2" ry="2" />
<text  x="150.29" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%)</title><rect x="35.0" y="277" width="0.4" height="15.0" fill="rgb(217,75,50)" rx="2" ry="2" />
<text  x="38.03" y="287.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%)</title><rect x="53.8" y="357" width="0.4" height="15.0" fill="rgb(207,15,12)" rx="2" ry="2" />
<text  x="56.80" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="124.8" y="469" width="0.4" height="15.0" fill="rgb(249,166,39)" rx="2" ry="2" />
<text  x="127.83" y="479.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.03%)</title><rect x="1102.4" y="437" width="0.4" height="15.0" fill="rgb(207,19,52)" rx="2" ry="2" />
<text  x="1105.40" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (8 samples, 0.25%)</title><rect x="63.4" y="501" width="2.9" height="15.0" fill="rgb(238,137,37)" rx="2" ry="2" />
<text  x="66.37" y="511.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (277 samples, 8.64%)</title><rect x="536.0" y="581" width="101.9" height="15.0" fill="rgb(236,133,14)" rx="2" ry="2" />
<text  x="538.96" y="591.5" >query::queri..</text>
</g>
<g >
<title>unimplemented::warn (1 samples, 0.03%)</title><rect x="137.0" y="597" width="0.3" height="15.0" fill="rgb(219,160,45)" rx="2" ry="2" />
<text  x="139.98" y="607.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (8 samples, 0.25%)</title><rect x="1109.4" y="357" width="2.9" height="15.0" fill="rgb(252,52,17)" rx="2" ry="2" />
<text  x="1112.39" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%)</title><rect x="140.3" y="709" width="0.4" height="15.0" fill="rgb(237,153,17)" rx="2" ry="2" />
<text  x="143.29" y="719.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%)</title><rect x="10.4" y="485" width="0.3" height="15.0" fill="rgb(206,86,14)" rx="2" ry="2" />
<text  x="13.37" y="495.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.03%)</title><rect x="1093.2" y="549" width="0.4" height="15.0" fill="rgb(232,74,5)" rx="2" ry="2" />
<text  x="1096.20" y="559.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%)</title><rect x="28.0" y="357" width="0.8" height="15.0" fill="rgb(238,61,4)" rx="2" ry="2" />
<text  x="31.03" y="367.5" ></text>
</g>
<g >
<title>__start_context (343 samples, 10.70%)</title><rect x="12.2" y="725" width="126.3" height="15.0" fill="rgb(211,23,47)" rx="2" ry="2" />
<text  x="15.21" y="735.5" >__start_context</text>
</g>
<g >
<title>from_hex (5 samples, 0.16%)</title><rect x="17.7" y="469" width="1.9" height="15.0" fill="rgb(209,166,10)" rx="2" ry="2" />
<text  x="20.73" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%)</title><rect x="100.2" y="373" width="0.3" height="15.0" fill="rgb(208,146,12)" rx="2" ry="2" />
<text  x="103.17" y="383.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%)</title><rect x="468.6" y="517" width="0.4" height="15.0" fill="rgb(226,229,3)" rx="2" ry="2" />
<text  x="471.60" y="527.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (27 samples, 0.84%)</title><rect x="1099.1" y="613" width="9.9" height="15.0" fill="rgb(231,104,48)" rx="2" ry="2" />
<text  x="1102.09" y="623.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="10.4" y="645" width="0.3" height="15.0" fill="rgb(250,67,21)" rx="2" ry="2" />
<text  x="13.37" y="655.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (3 samples, 0.09%)</title><rect x="599.3" y="485" width="1.1" height="15.0" fill="rgb(213,184,42)" rx="2" ry="2" />
<text  x="602.26" y="495.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.03%)</title><rect x="1152.1" y="629" width="0.4" height="15.0" fill="rgb(236,93,38)" rx="2" ry="2" />
<text  x="1155.09" y="639.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.03%)</title><rect x="831.9" y="533" width="0.3" height="15.0" fill="rgb(206,162,46)" rx="2" ry="2" />
<text  x="834.88" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (5 samples, 0.16%)</title><rect x="155.8" y="645" width="1.8" height="15.0" fill="rgb(213,31,28)" rx="2" ry="2" />
<text  x="158.75" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="71.5" y="309" width="0.3" height="15.0" fill="rgb(244,3,43)" rx="2" ry="2" />
<text  x="74.47" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="118.6" y="261" width="0.3" height="15.0" fill="rgb(232,5,54)" rx="2" ry="2" />
<text  x="121.58" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="105.0" y="213" width="0.3" height="15.0" fill="rgb(250,64,11)" rx="2" ry="2" />
<text  x="107.96" y="223.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%)</title><rect x="1189.6" y="725" width="0.4" height="15.0" fill="rgb(222,51,0)" rx="2" ry="2" />
<text  x="1192.63" y="735.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (343 samples, 10.70%)</title><rect x="12.2" y="693" width="126.3" height="15.0" fill="rgb(237,109,50)" rx="2" ry="2" />
<text  x="15.21" y="703.5" >seastar::noncop..</text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_deallocate_map (1 samples, 0.03%)</title><rect x="26.9" y="469" width="0.4" height="15.0" fill="rgb(248,2,15)" rx="2" ry="2" />
<text  x="29.93" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (1 samples, 0.03%)</title><rect x="22.9" y="501" width="0.4" height="15.0" fill="rgb(218,205,6)" rx="2" ry="2" />
<text  x="25.88" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator bool (1 samples, 0.03%)</title><rect x="132.9" y="533" width="0.4" height="15.0" fill="rgb(208,228,12)" rx="2" ry="2" />
<text  x="135.93" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.03%)</title><rect x="959.2" y="485" width="0.4" height="15.0" fill="rgb(224,189,43)" rx="2" ry="2" />
<text  x="962.23" y="495.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (4 samples, 0.12%)</title><rect x="241.1" y="565" width="1.5" height="15.0" fill="rgb(253,191,42)" rx="2" ry="2" />
<text  x="244.14" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="114.5" y="405" width="0.4" height="15.0" fill="rgb(212,155,51)" rx="2" ry="2" />
<text  x="117.53" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="733.2" y="597" width="0.4" height="15.0" fill="rgb(216,21,13)" rx="2" ry="2" />
<text  x="736.24" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="516.1" y="485" width="0.4" height="15.0" fill="rgb(242,172,39)" rx="2" ry="2" />
<text  x="519.08" y="495.5" ></text>
</g>
<g >
<title>schema::column_at (9 samples, 0.28%)</title><rect x="453.1" y="501" width="3.4" height="15.0" fill="rgb(223,182,46)" rx="2" ry="2" />
<text  x="456.14" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (6 samples, 0.19%)</title><rect x="92.1" y="341" width="2.2" height="15.0" fill="rgb(226,50,11)" rx="2" ry="2" />
<text  x="95.08" y="351.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="114.9" y="421" width="0.4" height="15.0" fill="rgb(224,217,36)" rx="2" ry="2" />
<text  x="117.90" y="431.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (2 samples, 0.06%)</title><rect x="368.9" y="437" width="0.7" height="15.0" fill="rgb(211,152,8)" rx="2" ry="2" />
<text  x="371.86" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="713.7" y="613" width="0.4" height="15.0" fill="rgb(225,222,14)" rx="2" ry="2" />
<text  x="716.73" y="623.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%)</title><rect x="1101.3" y="485" width="0.4" height="15.0" fill="rgb(249,193,11)" rx="2" ry="2" />
<text  x="1104.30" y="495.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="665.1" y="613" width="0.8" height="15.0" fill="rgb(241,131,31)" rx="2" ry="2" />
<text  x="668.15" y="623.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%)</title><rect x="66.3" y="485" width="0.4" height="15.0" fill="rgb(254,106,19)" rx="2" ry="2" />
<text  x="69.31" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%)</title><rect x="68.5" y="405" width="1.1" height="15.0" fill="rgb(216,181,1)" rx="2" ry="2" />
<text  x="71.52" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="103.9" y="245" width="0.3" height="15.0" fill="rgb(244,167,34)" rx="2" ry="2" />
<text  x="106.86" y="255.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (7 samples, 0.22%)</title><rect x="39.8" y="405" width="2.6" height="15.0" fill="rgb(221,99,33)" rx="2" ry="2" />
<text  x="42.81" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%)</title><rect x="166.1" y="613" width="0.7" height="15.0" fill="rgb(235,27,41)" rx="2" ry="2" />
<text  x="169.06" y="623.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="679.9" y="565" width="0.3" height="15.0" fill="rgb(234,136,49)" rx="2" ry="2" />
<text  x="682.87" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="61.5" y="389" width="0.8" height="15.0" fill="rgb(242,187,40)" rx="2" ry="2" />
<text  x="64.53" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="67.0" y="437" width="0.8" height="15.0" fill="rgb(254,211,49)" rx="2" ry="2" />
<text  x="70.05" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (11 samples, 0.34%)</title><rect x="677.7" y="581" width="4.0" height="15.0" fill="rgb(227,174,24)" rx="2" ry="2" />
<text  x="680.66" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="90.2" y="421" width="0.4" height="15.0" fill="rgb(209,68,6)" rx="2" ry="2" />
<text  x="93.24" y="431.5" ></text>
</g>
<g >
<title>dht::tri_compare (4 samples, 0.12%)</title><rect x="1063.4" y="421" width="1.5" height="15.0" fill="rgb(209,166,27)" rx="2" ry="2" />
<text  x="1066.39" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="73.3" y="341" width="0.4" height="15.0" fill="rgb(251,153,48)" rx="2" ry="2" />
<text  x="76.31" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%)</title><rect x="193.3" y="613" width="0.7" height="15.0" fill="rgb(254,28,7)" rx="2" ry="2" />
<text  x="196.29" y="623.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (7 samples, 0.22%)</title><rect x="49.8" y="389" width="2.5" height="15.0" fill="rgb(252,70,24)" rx="2" ry="2" />
<text  x="52.75" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="12.2" y="613" width="0.4" height="15.0" fill="rgb(217,70,43)" rx="2" ry="2" />
<text  x="15.21" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_S_relocate (1 samples, 0.03%)</title><rect x="124.1" y="437" width="0.4" height="15.0" fill="rgb(245,176,38)" rx="2" ry="2" />
<text  x="127.10" y="447.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="708.9" y="613" width="0.4" height="15.0" fill="rgb(226,66,22)" rx="2" ry="2" />
<text  x="711.95" y="623.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (63 samples, 1.97%)</title><rect x="84.3" y="453" width="23.2" height="15.0" fill="rgb(206,180,1)" rx="2" ry="2" />
<text  x="87.35" y="463.5" >c..</text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%)</title><rect x="10.0" y="277" width="0.4" height="15.0" fill="rgb(224,3,5)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.12%)</title><rect x="1153.9" y="757" width="1.5" height="15.0" fill="rgb(253,2,23)" rx="2" ry="2" />
<text  x="1156.93" y="767.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (10 samples, 0.31%)</title><rect x="21.0" y="533" width="3.7" height="15.0" fill="rgb(207,173,39)" rx="2" ry="2" />
<text  x="24.04" y="543.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.03%)</title><rect x="576.8" y="517" width="0.4" height="15.0" fill="rgb(240,12,15)" rx="2" ry="2" />
<text  x="579.81" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="113.8" y="293" width="0.7" height="15.0" fill="rgb(241,169,28)" rx="2" ry="2" />
<text  x="116.79" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.06%)</title><rect x="53.4" y="389" width="0.8" height="15.0" fill="rgb(235,215,21)" rx="2" ry="2" />
<text  x="56.43" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.03%)</title><rect x="106.4" y="405" width="0.4" height="15.0" fill="rgb(242,158,23)" rx="2" ry="2" />
<text  x="109.43" y="415.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::drop_role_statement*, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%)</title><rect x="130.4" y="469" width="0.3" height="15.0" fill="rgb(246,220,49)" rx="2" ry="2" />
<text  x="133.36" y="479.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_M_split_cmpts (1 samples, 0.03%)</title><rect x="152.8" y="741" width="0.4" height="15.0" fill="rgb(229,13,39)" rx="2" ry="2" />
<text  x="155.81" y="751.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (1 samples, 0.03%)</title><rect x="551.0" y="517" width="0.4" height="15.0" fill="rgb(224,28,33)" rx="2" ry="2" />
<text  x="554.05" y="527.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%)</title><rect x="19.2" y="453" width="0.4" height="15.0" fill="rgb(206,7,46)" rx="2" ry="2" />
<text  x="22.20" y="463.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="61.2" y="325" width="0.3" height="15.0" fill="rgb(216,12,36)" rx="2" ry="2" />
<text  x="64.16" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%)</title><rect x="1083.3" y="485" width="0.7" height="15.0" fill="rgb(218,168,34)" rx="2" ry="2" />
<text  x="1086.26" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.44%)</title><rect x="146.2" y="709" width="5.1" height="15.0" fill="rgb(241,70,3)" rx="2" ry="2" />
<text  x="149.18" y="719.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (7 samples, 0.22%)</title><rect x="74.0" y="437" width="2.6" height="15.0" fill="rgb(246,166,50)" rx="2" ry="2" />
<text  x="77.04" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="101" width="0.4" height="15.0" fill="rgb(239,103,15)" rx="2" ry="2" />
<text  x="123.42" y="111.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%)</title><rect x="28.0" y="373" width="0.8" height="15.0" fill="rgb(206,64,8)" rx="2" ry="2" />
<text  x="31.03" y="383.5" ></text>
</g>
<g >
<title>memtable::apply (21 samples, 0.66%)</title><rect x="1100.6" y="501" width="7.7" height="15.0" fill="rgb(254,48,34)" rx="2" ry="2" />
<text  x="1103.56" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_role_statement, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="130.4" y="485" width="0.3" height="15.0" fill="rgb(217,7,40)" rx="2" ry="2" />
<text  x="133.36" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (2 samples, 0.06%)</title><rect x="1151.0" y="597" width="0.7" height="15.0" fill="rgb(213,20,7)" rx="2" ry="2" />
<text  x="1153.99" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%)</title><rect x="1046.8" y="453" width="0.4" height="15.0" fill="rgb(238,79,33)" rx="2" ry="2" />
<text  x="1049.82" y="463.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.03%)</title><rect x="185.9" y="533" width="0.4" height="15.0" fill="rgb(228,215,22)" rx="2" ry="2" />
<text  x="188.93" y="543.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (247 samples, 7.70%)</title><rect x="408.2" y="549" width="91.0" height="15.0" fill="rgb(209,168,44)" rx="2" ry="2" />
<text  x="411.24" y="559.5" >seastar::d..</text>
</g>
<g >
<title>db::system_keyspace::all_tables (1 samples, 0.03%)</title><rect x="138.8" y="405" width="0.4" height="15.0" fill="rgb(213,139,35)" rx="2" ry="2" />
<text  x="141.82" y="415.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.03%)</title><rect x="10.4" y="533" width="0.3" height="15.0" fill="rgb(229,202,14)" rx="2" ry="2" />
<text  x="13.37" y="543.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (2 samples, 0.06%)</title><rect x="107.5" y="437" width="0.8" height="15.0" fill="rgb(220,197,45)" rx="2" ry="2" />
<text  x="110.54" y="447.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%)</title><rect x="1047.6" y="469" width="0.3" height="15.0" fill="rgb(212,2,36)" rx="2" ry="2" />
<text  x="1050.56" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="99.4" y="405" width="0.4" height="15.0" fill="rgb(244,138,8)" rx="2" ry="2" />
<text  x="102.44" y="415.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="10.4" y="677" width="0.3" height="15.0" fill="rgb(226,171,42)" rx="2" ry="2" />
<text  x="13.37" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.16%)</title><rect x="975.8" y="421" width="1.8" height="15.0" fill="rgb(240,218,37)" rx="2" ry="2" />
<text  x="978.79" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.03%)</title><rect x="146.9" y="645" width="0.4" height="15.0" fill="rgb(238,164,37)" rx="2" ry="2" />
<text  x="149.92" y="655.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (3 samples, 0.09%)</title><rect x="776.3" y="533" width="1.1" height="15.0" fill="rgb(232,8,6)" rx="2" ry="2" />
<text  x="779.30" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="73.3" y="389" width="0.4" height="15.0" fill="rgb(207,197,7)" rx="2" ry="2" />
<text  x="76.31" y="399.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%)</title><rect x="123.0" y="421" width="0.4" height="15.0" fill="rgb(222,60,20)" rx="2" ry="2" />
<text  x="125.99" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.9" y="181" width="0.4" height="15.0" fill="rgb(245,19,23)" rx="2" ry="2" />
<text  x="82.93" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (2 samples, 0.06%)</title><rect x="850.3" y="629" width="0.7" height="15.0" fill="rgb(221,107,8)" rx="2" ry="2" />
<text  x="853.28" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (6 samples, 0.19%)</title><rect x="85.8" y="325" width="2.2" height="15.0" fill="rgb(211,166,0)" rx="2" ry="2" />
<text  x="88.82" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_role_statement, std::default_delete&lt;cql3::statements::revoke_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::revoke_role_statement&gt;, void&gt; (1 samples, 0.03%)</title><rect x="134.0" y="533" width="0.4" height="15.0" fill="rgb(209,101,10)" rx="2" ry="2" />
<text  x="137.04" y="543.5" ></text>
</g>
<g >
<title>schema_registry::get_or_load (1 samples, 0.03%)</title><rect x="183.7" y="565" width="0.4" height="15.0" fill="rgb(230,186,6)" rx="2" ry="2" />
<text  x="186.72" y="575.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (9 samples, 0.28%)</title><rect x="644.2" y="581" width="3.3" height="15.0" fill="rgb(234,138,45)" rx="2" ry="2" />
<text  x="647.17" y="591.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (14 samples, 0.44%)</title><rect x="146.2" y="725" width="5.1" height="15.0" fill="rgb(212,202,26)" rx="2" ry="2" />
<text  x="149.18" y="735.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1117.5" y="597" width="0.4" height="15.0" fill="rgb(223,72,19)" rx="2" ry="2" />
<text  x="1120.49" y="607.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.06%)</title><rect x="388.7" y="517" width="0.8" height="15.0" fill="rgb(213,143,6)" rx="2" ry="2" />
<text  x="391.73" y="527.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%)</title><rect x="560.2" y="501" width="2.6" height="15.0" fill="rgb(249,23,30)" rx="2" ry="2" />
<text  x="563.25" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%)</title><rect x="381.0" y="469" width="0.4" height="15.0" fill="rgb(250,144,12)" rx="2" ry="2" />
<text  x="384.00" y="479.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%)</title><rect x="120.8" y="389" width="0.4" height="15.0" fill="rgb(227,54,28)" rx="2" ry="2" />
<text  x="123.79" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%)</title><rect x="183.0" y="613" width="0.4" height="15.0" fill="rgb(225,176,31)" rx="2" ry="2" />
<text  x="185.99" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="68.5" y="293" width="0.4" height="15.0" fill="rgb(240,116,16)" rx="2" ry="2" />
<text  x="71.52" y="303.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.09%)</title><rect x="116.7" y="421" width="1.1" height="15.0" fill="rgb(223,126,33)" rx="2" ry="2" />
<text  x="119.74" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.03%)</title><rect x="124.1" y="453" width="0.4" height="15.0" fill="rgb(238,154,27)" rx="2" ry="2" />
<text  x="127.10" y="463.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (1 samples, 0.03%)</title><rect x="1108.7" y="549" width="0.3" height="15.0" fill="rgb(243,128,25)" rx="2" ry="2" />
<text  x="1111.66" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::selectStatement (1 samples, 0.03%)</title><rect x="10.4" y="389" width="0.3" height="15.0" fill="rgb(231,37,1)" rx="2" ry="2" />
<text  x="13.37" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (36 samples, 1.12%)</title><rect x="111.2" y="501" width="13.3" height="15.0" fill="rgb(234,118,4)" rx="2" ry="2" />
<text  x="114.22" y="511.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%)</title><rect x="137.7" y="613" width="0.4" height="15.0" fill="rgb(251,162,8)" rx="2" ry="2" />
<text  x="140.72" y="623.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="67.4" y="325" width="0.4" height="15.0" fill="rgb(211,163,30)" rx="2" ry="2" />
<text  x="70.42" y="335.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (3 samples, 0.09%)</title><rect x="107.5" y="453" width="1.1" height="15.0" fill="rgb(218,64,46)" rx="2" ry="2" />
<text  x="110.54" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%)</title><rect x="118.6" y="277" width="0.3" height="15.0" fill="rgb(239,78,31)" rx="2" ry="2" />
<text  x="121.58" y="287.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (7 samples, 0.22%)</title><rect x="629.8" y="501" width="2.6" height="15.0" fill="rgb(221,44,26)" rx="2" ry="2" />
<text  x="632.81" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="152.1" y="725" width="0.3" height="15.0" fill="rgb(209,132,41)" rx="2" ry="2" />
<text  x="155.07" y="735.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.06%)</title><rect x="737.7" y="581" width="0.7" height="15.0" fill="rgb(240,183,33)" rx="2" ry="2" />
<text  x="740.65" y="591.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%)</title><rect x="59.0" y="485" width="0.3" height="15.0" fill="rgb(241,82,45)" rx="2" ry="2" />
<text  x="61.95" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (2 samples, 0.06%)</title><rect x="47.9" y="405" width="0.7" height="15.0" fill="rgb(216,166,14)" rx="2" ry="2" />
<text  x="50.91" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="70.4" y="357" width="0.3" height="15.0" fill="rgb(248,97,39)" rx="2" ry="2" />
<text  x="73.36" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_SET (1 samples, 0.03%)</title><rect x="46.8" y="405" width="0.4" height="15.0" fill="rgb(226,56,40)" rx="2" ry="2" />
<text  x="49.81" y="415.5" ></text>
</g>
<g >
<title>TLS wrapper function for logalloc::shard_segment_pool (1 samples, 0.03%)</title><rect x="10.0" y="245" width="0.4" height="15.0" fill="rgb(218,13,42)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>row::append_cell (2 samples, 0.06%)</title><rect x="1104.6" y="469" width="0.7" height="15.0" fill="rgb(235,21,11)" rx="2" ry="2" />
<text  x="1107.61" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="383.6" y="501" width="0.7" height="15.0" fill="rgb(231,100,2)" rx="2" ry="2" />
<text  x="386.58" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (5 samples, 0.16%)</title><rect x="111.2" y="421" width="1.9" height="15.0" fill="rgb(214,176,13)" rx="2" ry="2" />
<text  x="114.22" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%)</title><rect x="117.1" y="341" width="0.7" height="15.0" fill="rgb(244,225,9)" rx="2" ry="2" />
<text  x="120.11" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (27 samples, 0.84%)</title><rect x="1099.1" y="597" width="9.9" height="15.0" fill="rgb(245,147,39)" rx="2" ry="2" />
<text  x="1102.09" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%)</title><rect x="954.8" y="453" width="1.1" height="15.0" fill="rgb(229,68,21)" rx="2" ry="2" />
<text  x="957.81" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="517" width="0.4" height="15.0" fill="rgb(228,28,50)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="73.3" y="309" width="0.4" height="15.0" fill="rgb(219,224,21)" rx="2" ry="2" />
<text  x="76.31" y="319.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (2 samples, 0.06%)</title><rect x="113.8" y="405" width="0.7" height="15.0" fill="rgb(236,182,47)" rx="2" ry="2" />
<text  x="116.79" y="415.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="84.3" y="293" width="0.4" height="15.0" fill="rgb(217,124,40)" rx="2" ry="2" />
<text  x="87.35" y="303.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (2 samples, 0.06%)</title><rect x="1117.1" y="629" width="0.8" height="15.0" fill="rgb(241,136,37)" rx="2" ry="2" />
<text  x="1120.12" y="639.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%)</title><rect x="73.3" y="437" width="0.4" height="15.0" fill="rgb(253,19,45)" rx="2" ry="2" />
<text  x="76.31" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%)</title><rect x="28.0" y="389" width="0.8" height="15.0" fill="rgb(246,148,20)" rx="2" ry="2" />
<text  x="31.03" y="399.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (14 samples, 0.44%)</title><rect x="884.5" y="469" width="5.2" height="15.0" fill="rgb(210,68,33)" rx="2" ry="2" />
<text  x="887.51" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (3 samples, 0.09%)</title><rect x="45.7" y="405" width="1.1" height="15.0" fill="rgb(210,63,17)" rx="2" ry="2" />
<text  x="48.70" y="415.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="103.9" y="213" width="0.3" height="15.0" fill="rgb(250,65,35)" rx="2" ry="2" />
<text  x="106.86" y="223.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%)</title><rect x="60.4" y="453" width="0.4" height="15.0" fill="rgb(243,30,11)" rx="2" ry="2" />
<text  x="63.42" y="463.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%)</title><rect x="186.7" y="629" width="0.3" height="15.0" fill="rgb(216,107,7)" rx="2" ry="2" />
<text  x="189.67" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="357" width="0.4" height="15.0" fill="rgb(232,22,25)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::stats (3 samples, 0.09%)</title><rect x="628.7" y="485" width="1.1" height="15.0" fill="rgb(237,77,45)" rx="2" ry="2" />
<text  x="631.71" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (43 samples, 1.34%)</title><rect x="883.4" y="485" width="15.8" height="15.0" fill="rgb(215,204,11)" rx="2" ry="2" />
<text  x="886.41" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%)</title><rect x="61.5" y="469" width="0.8" height="15.0" fill="rgb(223,61,53)" rx="2" ry="2" />
<text  x="64.53" y="479.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.12%)</title><rect x="216.8" y="597" width="1.5" height="15.0" fill="rgb(215,220,23)" rx="2" ry="2" />
<text  x="219.85" y="607.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (2 samples, 0.06%)</title><rect x="147.3" y="597" width="0.7" height="15.0" fill="rgb(231,58,51)" rx="2" ry="2" />
<text  x="150.29" y="607.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (3 samples, 0.09%)</title><rect x="183.4" y="629" width="1.1" height="15.0" fill="rgb(247,84,51)" rx="2" ry="2" />
<text  x="186.36" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (2 samples, 0.06%)</title><rect x="100.9" y="357" width="0.7" height="15.0" fill="rgb(208,29,11)" rx="2" ry="2" />
<text  x="103.91" y="367.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.12%)</title><rect x="510.6" y="517" width="1.4" height="15.0" fill="rgb(240,106,4)" rx="2" ry="2" />
<text  x="513.56" y="527.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="20.3" y="533" width="0.4" height="15.0" fill="rgb(216,183,38)" rx="2" ry="2" />
<text  x="23.31" y="543.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="60.1" y="421" width="0.3" height="15.0" fill="rgb(246,186,3)" rx="2" ry="2" />
<text  x="63.06" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mWS (2 samples, 0.06%)</title><rect x="52.3" y="405" width="0.8" height="15.0" fill="rgb(217,72,30)" rx="2" ry="2" />
<text  x="55.33" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.09%)</title><rect x="118.6" y="341" width="1.1" height="15.0" fill="rgb(206,188,37)" rx="2" ry="2" />
<text  x="121.58" y="351.5" ></text>
</g>
<g >
<title>service::write_response_handler::~write_response_handler (1 samples, 0.03%)</title><rect x="1147.7" y="629" width="0.3" height="15.0" fill="rgb(214,187,29)" rx="2" ry="2" />
<text  x="1150.67" y="639.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%)</title><rect x="68.9" y="277" width="0.4" height="15.0" fill="rgb(228,147,41)" rx="2" ry="2" />
<text  x="71.89" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (6 samples, 0.19%)</title><rect x="82.1" y="453" width="2.2" height="15.0" fill="rgb(244,223,40)" rx="2" ry="2" />
<text  x="85.14" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::add_operation (1 samples, 0.03%)</title><rect x="19.9" y="549" width="0.4" height="15.0" fill="rgb(242,29,44)" rx="2" ry="2" />
<text  x="22.94" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="61.5" y="437" width="0.8" height="15.0" fill="rgb(233,64,13)" rx="2" ry="2" />
<text  x="64.53" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%)</title><rect x="1044.6" y="453" width="2.2" height="15.0" fill="rgb(223,130,41)" rx="2" ry="2" />
<text  x="1047.62" y="463.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (1 samples, 0.03%)</title><rect x="724.4" y="613" width="0.4" height="15.0" fill="rgb(247,76,37)" rx="2" ry="2" />
<text  x="727.40" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="92.4" y="85" width="0.4" height="15.0" fill="rgb(212,155,50)" rx="2" ry="2" />
<text  x="95.45" y="95.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (2 samples, 0.06%)</title><rect x="647.5" y="597" width="0.7" height="15.0" fill="rgb(249,157,20)" rx="2" ry="2" />
<text  x="650.48" y="607.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (193 samples, 6.02%)</title><rect x="57.5" y="517" width="71.0" height="15.0" fill="rgb(220,198,45)" rx="2" ry="2" />
<text  x="60.48" y="527.5" >cql3_par..</text>
</g>
<g >
<title>query::querier_base::close (3 samples, 0.09%)</title><rect x="205.8" y="597" width="1.1" height="15.0" fill="rgb(208,226,33)" rx="2" ry="2" />
<text  x="208.81" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="29.1" y="453" width="0.4" height="15.0" fill="rgb(215,119,51)" rx="2" ry="2" />
<text  x="32.14" y="463.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="138.8" y="565" width="0.4" height="15.0" fill="rgb(228,56,47)" rx="2" ry="2" />
<text  x="141.82" y="575.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%)</title><rect x="1023.6" y="405" width="2.2" height="15.0" fill="rgb(210,196,37)" rx="2" ry="2" />
<text  x="1026.64" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.09%)</title><rect x="631.3" y="485" width="1.1" height="15.0" fill="rgb(220,14,0)" rx="2" ry="2" />
<text  x="634.29" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%)</title><rect x="74.4" y="421" width="0.4" height="15.0" fill="rgb(228,86,6)" rx="2" ry="2" />
<text  x="77.41" y="431.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.03%)</title><rect x="186.3" y="549" width="0.4" height="15.0" fill="rgb(230,32,11)" rx="2" ry="2" />
<text  x="189.30" y="559.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="114.9" y="453" width="0.4" height="15.0" fill="rgb(251,114,29)" rx="2" ry="2" />
<text  x="117.90" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="83.6" y="261" width="0.4" height="15.0" fill="rgb(245,215,24)" rx="2" ry="2" />
<text  x="86.61" y="271.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="165.3" y="613" width="0.8" height="15.0" fill="rgb(209,168,42)" rx="2" ry="2" />
<text  x="168.32" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="103.9" y="277" width="0.3" height="15.0" fill="rgb(241,188,37)" rx="2" ry="2" />
<text  x="106.86" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%)</title><rect x="75.5" y="373" width="0.4" height="15.0" fill="rgb(227,93,48)" rx="2" ry="2" />
<text  x="78.51" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="25.8" y="549" width="0.4" height="15.0" fill="rgb(231,187,20)" rx="2" ry="2" />
<text  x="28.83" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.09%)</title><rect x="112.0" y="373" width="1.1" height="15.0" fill="rgb(241,67,29)" rx="2" ry="2" />
<text  x="114.95" y="383.5" ></text>
</g>
<g >
<title>query::querier&lt; (674 samples, 21.02%)</title><rect x="255.5" y="581" width="248.1" height="15.0" fill="rgb(223,161,51)" rx="2" ry="2" />
<text  x="258.50" y="591.5" >query::querier&lt;</text>
</g>
<g >
<title>multishard_combining_reader::close (1 samples, 0.03%)</title><rect x="184.5" y="469" width="0.3" height="15.0" fill="rgb(236,128,21)" rx="2" ry="2" />
<text  x="187.46" y="479.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%)</title><rect x="142.9" y="709" width="0.3" height="15.0" fill="rgb(214,228,31)" rx="2" ry="2" />
<text  x="145.87" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="75.9" y="341" width="0.7" height="15.0" fill="rgb(205,205,19)" rx="2" ry="2" />
<text  x="78.88" y="351.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%)</title><rect x="170.8" y="597" width="0.8" height="15.0" fill="rgb(245,61,20)" rx="2" ry="2" />
<text  x="173.84" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="86.2" y="213" width="1.1" height="15.0" fill="rgb(214,58,31)" rx="2" ry="2" />
<text  x="89.19" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%)</title><rect x="497.7" y="533" width="1.1" height="15.0" fill="rgb(210,100,28)" rx="2" ry="2" />
<text  x="500.68" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="58.6" y="405" width="0.4" height="15.0" fill="rgb(246,173,52)" rx="2" ry="2" />
<text  x="61.58" y="415.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="10.0" y="309" width="0.4" height="15.0" fill="rgb(248,114,46)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::modification_statement (1 samples, 0.03%)</title><rect x="20.3" y="549" width="0.4" height="15.0" fill="rgb(238,12,3)" rx="2" ry="2" />
<text  x="23.31" y="559.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (1 samples, 0.03%)</title><rect x="206.9" y="597" width="0.4" height="15.0" fill="rgb(231,160,52)" rx="2" ry="2" />
<text  x="209.91" y="607.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.25%)</title><rect x="513.5" y="501" width="3.0" height="15.0" fill="rgb(229,0,31)" rx="2" ry="2" />
<text  x="516.51" y="511.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::operator (1 samples, 0.03%)</title><rect x="855.8" y="501" width="0.4" height="15.0" fill="rgb(245,184,8)" rx="2" ry="2" />
<text  x="858.80" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="58.6" y="373" width="0.4" height="15.0" fill="rgb(233,62,47)" rx="2" ry="2" />
<text  x="61.58" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="112.0" y="229" width="0.3" height="15.0" fill="rgb(217,218,31)" rx="2" ry="2" />
<text  x="114.95" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%)</title><rect x="710.4" y="613" width="0.4" height="15.0" fill="rgb(206,77,2)" rx="2" ry="2" />
<text  x="713.42" y="623.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (1 samples, 0.03%)</title><rect x="183.7" y="533" width="0.4" height="15.0" fill="rgb(219,41,53)" rx="2" ry="2" />
<text  x="186.72" y="543.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%)</title><rect x="70.0" y="469" width="0.7" height="15.0" fill="rgb(206,91,26)" rx="2" ry="2" />
<text  x="72.99" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%)</title><rect x="1140.3" y="613" width="0.4" height="15.0" fill="rgb(252,11,49)" rx="2" ry="2" />
<text  x="1143.31" y="623.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="535.6" y="549" width="0.4" height="15.0" fill="rgb(223,154,46)" rx="2" ry="2" />
<text  x="538.59" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (1 samples, 0.03%)</title><rect x="54.9" y="421" width="0.4" height="15.0" fill="rgb(253,42,51)" rx="2" ry="2" />
<text  x="57.90" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (2 samples, 0.06%)</title><rect x="216.1" y="549" width="0.7" height="15.0" fill="rgb(254,161,32)" rx="2" ry="2" />
<text  x="219.11" y="559.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_all_endpoints (1 samples, 0.03%)</title><rect x="12.6" y="501" width="0.3" height="15.0" fill="rgb(233,6,26)" rx="2" ry="2" />
<text  x="15.58" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="61.5" y="405" width="0.8" height="15.0" fill="rgb(254,147,50)" rx="2" ry="2" />
<text  x="64.53" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_index_statement, std::default_delete&lt;cql3::statements::create_index_statement&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="128.9" y="517" width="0.4" height="15.0" fill="rgb(217,69,25)" rx="2" ry="2" />
<text  x="131.88" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (5 samples, 0.16%)</title><rect x="96.9" y="341" width="1.8" height="15.0" fill="rgb(249,148,19)" rx="2" ry="2" />
<text  x="99.86" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%)</title><rect x="537.1" y="565" width="0.3" height="15.0" fill="rgb(217,156,23)" rx="2" ry="2" />
<text  x="540.06" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.03%)</title><rect x="173.8" y="549" width="0.4" height="15.0" fill="rgb(221,0,11)" rx="2" ry="2" />
<text  x="176.79" y="559.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%)</title><rect x="64.1" y="485" width="0.4" height="15.0" fill="rgb(207,180,42)" rx="2" ry="2" />
<text  x="67.10" y="495.5" ></text>
</g>
<g >
<title>table::query (4 samples, 0.12%)</title><rect x="1150.6" y="629" width="1.5" height="15.0" fill="rgb(220,81,5)" rx="2" ry="2" />
<text  x="1153.62" y="639.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="64.5" y="389" width="0.3" height="15.0" fill="rgb(250,109,13)" rx="2" ry="2" />
<text  x="67.47" y="399.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.03%)</title><rect x="185.2" y="549" width="0.4" height="15.0" fill="rgb(242,192,27)" rx="2" ry="2" />
<text  x="188.20" y="559.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="10.0" y="325" width="0.4" height="15.0" fill="rgb(252,163,7)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="138.8" y="629" width="0.4" height="15.0" fill="rgb(227,30,5)" rx="2" ry="2" />
<text  x="141.82" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%)</title><rect x="79.9" y="293" width="0.4" height="15.0" fill="rgb(247,207,48)" rx="2" ry="2" />
<text  x="82.93" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.9" y="213" width="0.4" height="15.0" fill="rgb(249,133,20)" rx="2" ry="2" />
<text  x="82.93" y="223.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="677" width="0.4" height="15.0" fill="rgb(214,204,41)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::destroy&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="59.0" y="453" width="0.3" height="15.0" fill="rgb(218,160,45)" rx="2" ry="2" />
<text  x="61.95" y="463.5" ></text>
</g>
<g >
<title>mutation_partition::apply (1 samples, 0.03%)</title><rect x="186.3" y="501" width="0.4" height="15.0" fill="rgb(213,189,52)" rx="2" ry="2" />
<text  x="189.30" y="511.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%)</title><rect x="146.9" y="581" width="0.4" height="15.0" fill="rgb(238,156,27)" rx="2" ry="2" />
<text  x="149.92" y="591.5" ></text>
</g>
<g >
<title>database::find_keyspace (4 samples, 0.12%)</title><rect x="1040.2" y="469" width="1.5" height="15.0" fill="rgb(251,145,36)" rx="2" ry="2" />
<text  x="1043.20" y="479.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%)</title><rect x="169.0" y="597" width="1.8" height="15.0" fill="rgb(239,209,46)" rx="2" ry="2" />
<text  x="172.00" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%)</title><rect x="36.1" y="325" width="0.4" height="15.0" fill="rgb(250,196,42)" rx="2" ry="2" />
<text  x="39.13" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="116.0" y="261" width="0.4" height="15.0" fill="rgb(237,65,42)" rx="2" ry="2" />
<text  x="119.00" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (125 samples, 3.90%)</title><rect x="784.4" y="565" width="46.0" height="15.0" fill="rgb(241,32,17)" rx="2" ry="2" />
<text  x="787.40" y="575.5" >cql3..</text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="982.4" y="437" width="0.4" height="15.0" fill="rgb(253,111,19)" rx="2" ry="2" />
<text  x="985.41" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::io_getevents (1 samples, 0.03%)</title><rect x="1117.5" y="613" width="0.4" height="15.0" fill="rgb(245,56,41)" rx="2" ry="2" />
<text  x="1120.49" y="623.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%)</title><rect x="100.2" y="325" width="0.3" height="15.0" fill="rgb(232,121,6)" rx="2" ry="2" />
<text  x="103.17" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="83.2" y="341" width="0.4" height="15.0" fill="rgb(213,21,20)" rx="2" ry="2" />
<text  x="86.24" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="170.5" y="581" width="0.3" height="15.0" fill="rgb(220,117,43)" rx="2" ry="2" />
<text  x="173.47" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="92.4" y="197" width="0.4" height="15.0" fill="rgb(246,7,3)" rx="2" ry="2" />
<text  x="95.45" y="207.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.03%)</title><rect x="852.9" y="453" width="0.3" height="15.0" fill="rgb(205,40,34)" rx="2" ry="2" />
<text  x="855.86" y="463.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="10.4" y="581" width="0.3" height="15.0" fill="rgb(213,162,44)" rx="2" ry="2" />
<text  x="13.37" y="591.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (1 samples, 0.03%)</title><rect x="26.9" y="517" width="0.4" height="15.0" fill="rgb(228,125,50)" rx="2" ry="2" />
<text  x="29.93" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (290 samples, 9.05%)</title><rect x="28.0" y="549" width="106.8" height="15.0" fill="rgb(222,62,51)" rx="2" ry="2" />
<text  x="31.03" y="559.5" >cql3_parser::..</text>
</g>
<g >
<title>frozen_schema::frozen_schema (1 samples, 0.03%)</title><rect x="185.6" y="581" width="0.3" height="15.0" fill="rgb(250,37,8)" rx="2" ry="2" />
<text  x="188.56" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="76.6" y="453" width="0.4" height="15.0" fill="rgb(240,51,50)" rx="2" ry="2" />
<text  x="79.62" y="463.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (1 samples, 0.03%)</title><rect x="183.7" y="613" width="0.4" height="15.0" fill="rgb(250,180,38)" rx="2" ry="2" />
<text  x="186.72" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="67.0" y="373" width="0.8" height="15.0" fill="rgb(244,3,10)" rx="2" ry="2" />
<text  x="70.05" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="498.8" y="533" width="0.4" height="15.0" fill="rgb(246,128,11)" rx="2" ry="2" />
<text  x="501.78" y="543.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (3 samples, 0.09%)</title><rect x="166.8" y="613" width="1.1" height="15.0" fill="rgb(232,114,0)" rx="2" ry="2" />
<text  x="169.79" y="623.5" ></text>
</g>
<g >
<title>query::querier_base::close (3 samples, 0.09%)</title><rect x="1150.6" y="613" width="1.1" height="15.0" fill="rgb(248,75,11)" rx="2" ry="2" />
<text  x="1153.62" y="623.5" ></text>
</g>
<g >
<title>std::optional&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::optional (1 samples, 0.03%)</title><rect x="63.0" y="485" width="0.4" height="15.0" fill="rgb(206,225,40)" rx="2" ry="2" />
<text  x="66.00" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="112.0" y="245" width="0.3" height="15.0" fill="rgb(227,205,53)" rx="2" ry="2" />
<text  x="114.95" y="255.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="103.9" y="261" width="0.3" height="15.0" fill="rgb(235,186,12)" rx="2" ry="2" />
<text  x="106.86" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%)</title><rect x="75.9" y="245" width="0.4" height="15.0" fill="rgb(245,36,15)" rx="2" ry="2" />
<text  x="78.88" y="255.5" ></text>
</g>
<g >
<title>cql3::cf_name::~cf_name (1 samples, 0.03%)</title><rect x="65.2" y="485" width="0.4" height="15.0" fill="rgb(252,133,50)" rx="2" ry="2" />
<text  x="68.21" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="114.5" y="453" width="0.4" height="15.0" fill="rgb(210,153,4)" rx="2" ry="2" />
<text  x="117.53" y="463.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.12%)</title><rect x="28.0" y="517" width="1.5" height="15.0" fill="rgb(215,68,50)" rx="2" ry="2" />
<text  x="31.03" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="73.3" y="405" width="0.4" height="15.0" fill="rgb(254,1,14)" rx="2" ry="2" />
<text  x="76.31" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.03%)</title><rect x="10.7" y="597" width="0.4" height="15.0" fill="rgb(209,178,13)" rx="2" ry="2" />
<text  x="13.74" y="607.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="748.3" y="613" width="0.4" height="15.0" fill="rgb(247,176,10)" rx="2" ry="2" />
<text  x="751.33" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%)</title><rect x="238.6" y="549" width="2.5" height="15.0" fill="rgb(243,192,17)" rx="2" ry="2" />
<text  x="241.57" y="559.5" ></text>
</g>
<g >
<title>row_cache::make_reader (41 samples, 1.28%)</title><rect x="619.9" y="533" width="15.1" height="15.0" fill="rgb(254,92,24)" rx="2" ry="2" />
<text  x="622.88" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reserve_map_at_back (1 samples, 0.03%)</title><rect x="38.0" y="389" width="0.3" height="15.0" fill="rgb(229,224,42)" rx="2" ry="2" />
<text  x="40.97" y="399.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="120.8" y="245" width="0.4" height="15.0" fill="rgb(230,59,6)" rx="2" ry="2" />
<text  x="123.79" y="255.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;, true&gt;::_M_head (1 samples, 0.03%)</title><rect x="117.8" y="325" width="0.4" height="15.0" fill="rgb(220,219,34)" rx="2" ry="2" />
<text  x="120.84" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::select_statement, std::default_delete&lt;cql3::statements::raw::select_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="130.7" y="485" width="0.4" height="15.0" fill="rgb(208,111,19)" rx="2" ry="2" />
<text  x="133.72" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="115.6" y="405" width="0.8" height="15.0" fill="rgb(238,86,41)" rx="2" ry="2" />
<text  x="118.63" y="415.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.03%)</title><rect x="1189.6" y="757" width="0.4" height="15.0" fill="rgb(212,54,41)" rx="2" ry="2" />
<text  x="1192.63" y="767.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.47%)</title><rect x="964.4" y="453" width="5.5" height="15.0" fill="rgb(211,80,33)" rx="2" ry="2" />
<text  x="967.38" y="463.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1153.6" y="757" width="0.3" height="15.0" fill="rgb(232,194,29)" rx="2" ry="2" />
<text  x="1156.56" y="767.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt; (2 samples, 0.06%)</title><rect x="1112.3" y="373" width="0.8" height="15.0" fill="rgb(240,168,17)" rx="2" ry="2" />
<text  x="1115.34" y="383.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (10 samples, 0.31%)</title><rect x="1016.3" y="357" width="3.7" height="15.0" fill="rgb(208,165,15)" rx="2" ry="2" />
<text  x="1019.28" y="367.5" ></text>
</g>
<g >
<title>db::schema_tables::read_schema_for_keyspaces (1 samples, 0.03%)</title><rect x="184.1" y="613" width="0.4" height="15.0" fill="rgb(226,17,29)" rx="2" ry="2" />
<text  x="187.09" y="623.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (9 samples, 0.28%)</title><rect x="1144.0" y="613" width="3.3" height="15.0" fill="rgb(211,83,8)" rx="2" ry="2" />
<text  x="1146.99" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::unique_ptr (2 samples, 0.06%)</title><rect x="127.0" y="485" width="0.8" height="15.0" fill="rgb(248,14,37)" rx="2" ry="2" />
<text  x="130.04" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (48 samples, 1.50%)</title><rect x="882.7" y="501" width="17.6" height="15.0" fill="rgb(219,224,17)" rx="2" ry="2" />
<text  x="885.67" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.09%)</title><rect x="118.6" y="325" width="1.1" height="15.0" fill="rgb(236,23,48)" rx="2" ry="2" />
<text  x="121.58" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::execution_stage_manager::flush (1 samples, 0.03%)</title><rect x="1152.5" y="629" width="0.3" height="15.0" fill="rgb(233,72,52)" rx="2" ry="2" />
<text  x="1155.46" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%)</title><rect x="99.4" y="389" width="0.4" height="15.0" fill="rgb(243,62,44)" rx="2" ry="2" />
<text  x="102.44" y="399.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.03%)</title><rect x="792.9" y="533" width="0.3" height="15.0" fill="rgb(237,223,7)" rx="2" ry="2" />
<text  x="795.86" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="92.8" y="277" width="1.1" height="15.0" fill="rgb(250,151,20)" rx="2" ry="2" />
<text  x="95.81" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="78.1" y="373" width="0.7" height="15.0" fill="rgb(246,158,33)" rx="2" ry="2" />
<text  x="81.09" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="118.2" y="437" width="0.4" height="15.0" fill="rgb(238,36,44)" rx="2" ry="2" />
<text  x="121.21" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%)</title><rect x="549.6" y="533" width="0.3" height="15.0" fill="rgb(213,215,25)" rx="2" ry="2" />
<text  x="552.58" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="100.2" y="341" width="0.3" height="15.0" fill="rgb(209,141,4)" rx="2" ry="2" />
<text  x="103.17" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (290 samples, 9.05%)</title><rect x="741.0" y="629" width="106.7" height="15.0" fill="rgb(247,74,31)" rx="2" ry="2" />
<text  x="743.97" y="639.5" >seastar::inte..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.09%)</title><rect x="57.8" y="501" width="1.2" height="15.0" fill="rgb(212,35,37)" rx="2" ry="2" />
<text  x="60.85" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (15 samples, 0.47%)</title><rect x="676.2" y="597" width="5.5" height="15.0" fill="rgb(215,187,9)" rx="2" ry="2" />
<text  x="679.19" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (17 samples, 0.53%)</title><rect x="892.6" y="469" width="6.3" height="15.0" fill="rgb(207,217,53)" rx="2" ry="2" />
<text  x="895.61" y="479.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (29 samples, 0.90%)</title><rect x="523.8" y="549" width="10.7" height="15.0" fill="rgb(252,153,19)" rx="2" ry="2" />
<text  x="526.81" y="559.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (9 samples, 0.28%)</title><rect x="923.9" y="533" width="3.3" height="15.0" fill="rgb(251,28,10)" rx="2" ry="2" />
<text  x="926.89" y="543.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.03%)</title><rect x="380.3" y="469" width="0.3" height="15.0" fill="rgb(241,16,8)" rx="2" ry="2" />
<text  x="383.27" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%)</title><rect x="121.2" y="373" width="0.3" height="15.0" fill="rgb(252,28,53)" rx="2" ry="2" />
<text  x="124.15" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (11 samples, 0.34%)</title><rect x="32.5" y="405" width="4.0" height="15.0" fill="rgb(213,168,40)" rx="2" ry="2" />
<text  x="35.45" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.03%)</title><rect x="173.1" y="565" width="0.3" height="15.0" fill="rgb(242,11,1)" rx="2" ry="2" />
<text  x="176.05" y="575.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.03%)</title><rect x="987.6" y="421" width="0.3" height="15.0" fill="rgb(221,213,41)" rx="2" ry="2" />
<text  x="990.57" y="431.5" ></text>
</g>
<g >
<title>main (2,718 samples, 84.78%)</title><rect x="153.2" y="741" width="1000.4" height="15.0" fill="rgb(238,156,4)" rx="2" ry="2" />
<text  x="156.18" y="751.5" >main</text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="88.0" y="389" width="0.8" height="15.0" fill="rgb(218,147,25)" rx="2" ry="2" />
<text  x="91.03" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="88.0" y="373" width="0.8" height="15.0" fill="rgb(254,202,21)" rx="2" ry="2" />
<text  x="91.03" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.03%)</title><rect x="773.4" y="549" width="0.3" height="15.0" fill="rgb(239,108,46)" rx="2" ry="2" />
<text  x="776.36" y="559.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::create_clustering_ranges (1 samples, 0.03%)</title><rect x="855.1" y="517" width="0.3" height="15.0" fill="rgb(210,198,16)" rx="2" ry="2" />
<text  x="858.07" y="527.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (5 samples, 0.16%)</title><rect x="140.7" y="709" width="1.8" height="15.0" fill="rgb(242,217,36)" rx="2" ry="2" />
<text  x="143.66" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (4 samples, 0.12%)</title><rect x="500.3" y="549" width="1.4" height="15.0" fill="rgb(217,67,54)" rx="2" ry="2" />
<text  x="503.26" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="891.9" y="453" width="0.7" height="15.0" fill="rgb(246,228,20)" rx="2" ry="2" />
<text  x="894.87" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="28.0" y="437" width="0.8" height="15.0" fill="rgb(252,70,52)" rx="2" ry="2" />
<text  x="31.03" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="138.1" y="597" width="0.4" height="15.0" fill="rgb(214,80,35)" rx="2" ry="2" />
<text  x="141.08" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="88.8" y="341" width="0.3" height="15.0" fill="rgb(227,138,6)" rx="2" ry="2" />
<text  x="91.76" y="351.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (1 samples, 0.03%)</title><rect x="1044.2" y="469" width="0.4" height="15.0" fill="rgb(212,206,41)" rx="2" ry="2" />
<text  x="1047.25" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="138.8" y="453" width="0.4" height="15.0" fill="rgb(221,101,53)" rx="2" ry="2" />
<text  x="141.82" y="463.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (9 samples, 0.28%)</title><rect x="404.9" y="549" width="3.3" height="15.0" fill="rgb(225,155,43)" rx="2" ry="2" />
<text  x="407.93" y="559.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%)</title><rect x="138.8" y="677" width="0.4" height="15.0" fill="rgb(234,23,10)" rx="2" ry="2" />
<text  x="141.82" y="687.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.09%)</title><rect x="118.6" y="389" width="1.1" height="15.0" fill="rgb(214,7,54)" rx="2" ry="2" />
<text  x="121.58" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (2 samples, 0.06%)</title><rect x="108.6" y="437" width="0.8" height="15.0" fill="rgb(229,59,42)" rx="2" ry="2" />
<text  x="111.64" y="447.5" ></text>
</g>
<g >
<title>posix_memalign (2 samples, 0.06%)</title><rect x="361.9" y="373" width="0.7" height="15.0" fill="rgb(217,51,48)" rx="2" ry="2" />
<text  x="364.87" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (36 samples, 1.12%)</title><rect x="111.2" y="485" width="13.3" height="15.0" fill="rgb(205,107,31)" rx="2" ry="2" />
<text  x="114.22" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="72.9" y="325" width="0.4" height="15.0" fill="rgb(208,2,6)" rx="2" ry="2" />
<text  x="75.94" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_S_do_relocate (1 samples, 0.03%)</title><rect x="124.1" y="421" width="0.4" height="15.0" fill="rgb(225,209,7)" rx="2" ry="2" />
<text  x="127.10" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="78.1" y="293" width="0.4" height="15.0" fill="rgb(251,155,43)" rx="2" ry="2" />
<text  x="81.09" y="303.5" ></text>
</g>
<g >
<title>data_value::~data_value (1 samples, 0.03%)</title><rect x="21.4" y="469" width="0.4" height="15.0" fill="rgb(249,173,26)" rx="2" ry="2" />
<text  x="24.41" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (3 samples, 0.09%)</title><rect x="29.9" y="469" width="1.1" height="15.0" fill="rgb(227,22,6)" rx="2" ry="2" />
<text  x="32.88" y="479.5" ></text>
</g>
<g >
<title>mutation_partition::append_clustered_row (1 samples, 0.03%)</title><rect x="185.2" y="581" width="0.4" height="15.0" fill="rgb(247,152,7)" rx="2" ry="2" />
<text  x="188.20" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="19.9" y="517" width="0.4" height="15.0" fill="rgb(240,117,29)" rx="2" ry="2" />
<text  x="22.94" y="527.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.47%)</title><rect x="964.4" y="469" width="5.5" height="15.0" fill="rgb(252,196,43)" rx="2" ry="2" />
<text  x="967.38" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (13 samples, 0.41%)</title><rect x="1079.6" y="533" width="4.8" height="15.0" fill="rgb(216,170,15)" rx="2" ry="2" />
<text  x="1082.58" y="543.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1 samples, 0.03%)</title><rect x="136.6" y="565" width="0.4" height="15.0" fill="rgb(210,34,26)" rx="2" ry="2" />
<text  x="139.61" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (73 samples, 2.28%)</title><rect x="29.9" y="501" width="26.8" height="15.0" fill="rgb(244,64,28)" rx="2" ry="2" />
<text  x="32.88" y="511.5" >a..</text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (2 samples, 0.06%)</title><rect x="1021.4" y="373" width="0.8" height="15.0" fill="rgb(242,77,29)" rx="2" ry="2" />
<text  x="1024.43" y="383.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_text[abi:cxx11] (1 samples, 0.03%)</title><rect x="43.5" y="405" width="0.4" height="15.0" fill="rgb(238,33,53)" rx="2" ry="2" />
<text  x="46.49" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (10 samples, 0.31%)</title><rect x="118.6" y="453" width="3.7" height="15.0" fill="rgb(210,202,31)" rx="2" ry="2" />
<text  x="121.58" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.06%)</title><rect x="53.4" y="373" width="0.8" height="15.0" fill="rgb(225,19,32)" rx="2" ry="2" />
<text  x="56.43" y="383.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::parallel_for_each_state (1 samples, 0.03%)</title><rect x="1114.2" y="421" width="0.3" height="15.0" fill="rgb(231,192,4)" rx="2" ry="2" />
<text  x="1117.18" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::ensure_entry_if_complete (1 samples, 0.03%)</title><rect x="150.6" y="677" width="0.4" height="15.0" fill="rgb(231,115,53)" rx="2" ry="2" />
<text  x="153.60" y="687.5" ></text>
</g>
<g >
<title>database::apply (1 samples, 0.03%)</title><rect x="1114.5" y="389" width="0.4" height="15.0" fill="rgb(225,106,31)" rx="2" ry="2" />
<text  x="1117.55" y="399.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.03%)</title><rect x="1113.1" y="357" width="0.3" height="15.0" fill="rgb(241,64,31)" rx="2" ry="2" />
<text  x="1116.08" y="367.5" ></text>
</g>
<g >
<title>[unknown] (389 samples, 12.13%)</title><rect x="10.0" y="757" width="143.2" height="15.0" fill="rgb(232,224,15)" rx="2" ry="2" />
<text  x="13.00" y="767.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="378.4" y="437" width="0.4" height="15.0" fill="rgb(216,192,37)" rx="2" ry="2" />
<text  x="381.43" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (25 samples, 0.78%)</title><rect x="729.2" y="613" width="9.2" height="15.0" fill="rgb(214,74,19)" rx="2" ry="2" />
<text  x="732.19" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="920.9" y="533" width="0.4" height="15.0" fill="rgb(206,135,9)" rx="2" ry="2" />
<text  x="923.95" y="543.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::attributes::raw&gt; (1 samples, 0.03%)</title><rect x="124.8" y="501" width="0.4" height="15.0" fill="rgb(213,229,11)" rx="2" ry="2" />
<text  x="127.83" y="511.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="592.6" y="501" width="0.4" height="15.0" fill="rgb(217,2,35)" rx="2" ry="2" />
<text  x="595.64" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="92.4" y="117" width="0.4" height="15.0" fill="rgb(225,68,48)" rx="2" ry="2" />
<text  x="95.45" y="127.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="70.0" y="405" width="0.7" height="15.0" fill="rgb(239,151,25)" rx="2" ry="2" />
<text  x="72.99" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="61.5" y="357" width="0.4" height="15.0" fill="rgb(223,30,4)" rx="2" ry="2" />
<text  x="64.53" y="367.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="72.9" y="309" width="0.4" height="15.0" fill="rgb(253,137,28)" rx="2" ry="2" />
<text  x="75.94" y="319.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (10 samples, 0.31%)</title><rect x="362.6" y="373" width="3.7" height="15.0" fill="rgb(247,174,32)" rx="2" ry="2" />
<text  x="365.60" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="851.8" y="421" width="0.3" height="15.0" fill="rgb(240,179,45)" rx="2" ry="2" />
<text  x="854.75" y="431.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%)</title><rect x="138.8" y="613" width="0.4" height="15.0" fill="rgb(207,28,30)" rx="2" ry="2" />
<text  x="141.82" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;3ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="97.6" y="69" width="0.4" height="15.0" fill="rgb(235,157,8)" rx="2" ry="2" />
<text  x="100.60" y="79.5" ></text>
</g>
<g >
<title>seastar::async&lt;single_node_cql_env::do_with (1 samples, 0.03%)</title><rect x="152.4" y="709" width="0.4" height="15.0" fill="rgb(238,195,31)" rx="2" ry="2" />
<text  x="155.44" y="719.5" ></text>
</g>
<g >
<title>schema_registry::get (9 samples, 0.28%)</title><rect x="955.9" y="485" width="3.3" height="15.0" fill="rgb(219,176,0)" rx="2" ry="2" />
<text  x="958.91" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="64.5" y="373" width="0.3" height="15.0" fill="rgb(230,210,20)" rx="2" ry="2" />
<text  x="67.47" y="383.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.09%)</title><rect x="118.6" y="405" width="1.1" height="15.0" fill="rgb(227,63,0)" rx="2" ry="2" />
<text  x="121.58" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::alter_role_statement*, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt; (1 samples, 0.03%)</title><rect x="129.3" y="501" width="0.3" height="15.0" fill="rgb(213,206,38)" rx="2" ry="2" />
<text  x="132.25" y="511.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="1086.9" y="549" width="1.1" height="15.0" fill="rgb(217,45,54)" rx="2" ry="2" />
<text  x="1089.94" y="559.5" ></text>
</g>
<g >
<title>sstables::mc::make_writer (1 samples, 0.03%)</title><rect x="151.0" y="677" width="0.3" height="15.0" fill="rgb(217,175,19)" rx="2" ry="2" />
<text  x="153.97" y="687.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (6 samples, 0.19%)</title><rect x="92.1" y="325" width="2.2" height="15.0" fill="rgb(239,146,51)" rx="2" ry="2" />
<text  x="95.08" y="335.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (7 samples, 0.22%)</title><rect x="375.1" y="453" width="2.6" height="15.0" fill="rgb(250,193,40)" rx="2" ry="2" />
<text  x="378.12" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (6 samples, 0.19%)</title><rect x="85.8" y="357" width="2.2" height="15.0" fill="rgb(213,225,48)" rx="2" ry="2" />
<text  x="88.82" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%)</title><rect x="28.8" y="501" width="0.7" height="15.0" fill="rgb(220,65,42)" rx="2" ry="2" />
<text  x="31.77" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%)</title><rect x="888.6" y="421" width="1.1" height="15.0" fill="rgb(244,21,8)" rx="2" ry="2" />
<text  x="891.56" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="64.5" y="469" width="0.3" height="15.0" fill="rgb(224,150,11)" rx="2" ry="2" />
<text  x="67.47" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (2 samples, 0.06%)</title><rect x="700.1" y="613" width="0.7" height="15.0" fill="rgb(217,28,32)" rx="2" ry="2" />
<text  x="703.11" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="119.7" y="277" width="0.3" height="15.0" fill="rgb(229,71,33)" rx="2" ry="2" />
<text  x="122.68" y="287.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (326 samples, 10.17%)</title><rect x="15.9" y="597" width="120.0" height="15.0" fill="rgb(207,87,6)" rx="2" ry="2" />
<text  x="18.89" y="607.5" >cql3::query_pr..</text>
</g>
<g >
<title>service::client_state::has_column_family_access (2 samples, 0.06%)</title><rect x="136.2" y="581" width="0.8" height="15.0" fill="rgb(217,142,19)" rx="2" ry="2" />
<text  x="139.24" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="133.3" y="533" width="0.4" height="15.0" fill="rgb(216,83,35)" rx="2" ry="2" />
<text  x="136.30" y="543.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="819.4" y="501" width="0.7" height="15.0" fill="rgb(205,121,1)" rx="2" ry="2" />
<text  x="822.36" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (3 samples, 0.09%)</title><rect x="22.9" y="517" width="1.1" height="15.0" fill="rgb(212,133,32)" rx="2" ry="2" />
<text  x="25.88" y="527.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (1 samples, 0.03%)</title><rect x="1150.6" y="597" width="0.4" height="15.0" fill="rgb(244,159,30)" rx="2" ry="2" />
<text  x="1153.62" y="607.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (2 samples, 0.06%)</title><rect x="113.8" y="421" width="0.7" height="15.0" fill="rgb(218,69,35)" rx="2" ry="2" />
<text  x="116.79" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%)</title><rect x="862.1" y="597" width="0.7" height="15.0" fill="rgb(249,208,20)" rx="2" ry="2" />
<text  x="865.06" y="607.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="1135.5" y="613" width="1.1" height="15.0" fill="rgb(206,65,34)" rx="2" ry="2" />
<text  x="1138.53" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="29.1" y="421" width="0.4" height="15.0" fill="rgb(222,165,25)" rx="2" ry="2" />
<text  x="32.14" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%)</title><rect x="120.8" y="405" width="0.7" height="15.0" fill="rgb(254,172,31)" rx="2" ry="2" />
<text  x="123.79" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="70.0" y="389" width="0.7" height="15.0" fill="rgb(254,128,54)" rx="2" ry="2" />
<text  x="72.99" y="399.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (2 samples, 0.06%)</title><rect x="75.9" y="421" width="0.7" height="15.0" fill="rgb(216,129,17)" rx="2" ry="2" />
<text  x="78.88" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="641.2" y="533" width="0.8" height="15.0" fill="rgb(219,29,43)" rx="2" ry="2" />
<text  x="644.22" y="543.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (3 samples, 0.09%)</title><rect x="329.1" y="421" width="1.1" height="15.0" fill="rgb(253,63,45)" rx="2" ry="2" />
<text  x="332.11" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (2 samples, 0.06%)</title><rect x="155.0" y="645" width="0.8" height="15.0" fill="rgb(217,63,52)" rx="2" ry="2" />
<text  x="158.02" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%)</title><rect x="246.3" y="565" width="2.9" height="15.0" fill="rgb(246,0,17)" rx="2" ry="2" />
<text  x="249.29" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="748.7" y="613" width="0.4" height="15.0" fill="rgb(248,137,44)" rx="2" ry="2" />
<text  x="751.70" y="623.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.09%)</title><rect x="1091.0" y="549" width="1.1" height="15.0" fill="rgb(227,144,2)" rx="2" ry="2" />
<text  x="1093.99" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="103.9" y="357" width="0.3" height="15.0" fill="rgb(207,46,4)" rx="2" ry="2" />
<text  x="106.86" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="113.4" y="421" width="0.4" height="15.0" fill="rgb(239,21,43)" rx="2" ry="2" />
<text  x="116.42" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.06%)</title><rect x="45.0" y="325" width="0.7" height="15.0" fill="rgb(245,46,14)" rx="2" ry="2" />
<text  x="47.97" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="64.5" y="357" width="0.3" height="15.0" fill="rgb(249,16,27)" rx="2" ry="2" />
<text  x="67.47" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.12%)</title><rect x="303.3" y="405" width="1.5" height="15.0" fill="rgb(242,112,52)" rx="2" ry="2" />
<text  x="306.34" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%)</title><rect x="10.4" y="421" width="0.3" height="15.0" fill="rgb(242,194,5)" rx="2" ry="2" />
<text  x="13.37" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="64.5" y="405" width="0.3" height="15.0" fill="rgb(232,222,20)" rx="2" ry="2" />
<text  x="67.47" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="105.0" y="325" width="0.3" height="15.0" fill="rgb(235,102,1)" rx="2" ry="2" />
<text  x="107.96" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="118.9" y="277" width="0.8" height="15.0" fill="rgb(211,20,44)" rx="2" ry="2" />
<text  x="121.95" y="287.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.03%)</title><rect x="35.4" y="277" width="0.4" height="15.0" fill="rgb(212,132,22)" rx="2" ry="2" />
<text  x="38.40" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (1 samples, 0.03%)</title><rect x="1188.5" y="757" width="0.4" height="15.0" fill="rgb(244,152,52)" rx="2" ry="2" />
<text  x="1191.53" y="767.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="28.0" y="405" width="0.8" height="15.0" fill="rgb(225,181,46)" rx="2" ry="2" />
<text  x="31.03" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (1 samples, 0.03%)</title><rect x="1189.3" y="725" width="0.3" height="15.0" fill="rgb(254,142,1)" rx="2" ry="2" />
<text  x="1192.26" y="735.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%)</title><rect x="709.7" y="613" width="0.3" height="15.0" fill="rgb(244,45,20)" rx="2" ry="2" />
<text  x="712.68" y="623.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (633 samples, 19.74%)</title><rect x="864.3" y="565" width="232.9" height="15.0" fill="rgb(229,110,54)" rx="2" ry="2" />
<text  x="867.27" y="575.5" >cql3::statements::select_state..</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (2 samples, 0.06%)</title><rect x="89.1" y="389" width="0.8" height="15.0" fill="rgb(220,107,41)" rx="2" ry="2" />
<text  x="92.13" y="399.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="98.0" y="85" width="0.3" height="15.0" fill="rgb(225,109,49)" rx="2" ry="2" />
<text  x="100.97" y="95.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (14 samples, 0.44%)</title><rect x="91.3" y="389" width="5.2" height="15.0" fill="rgb(235,27,24)" rx="2" ry="2" />
<text  x="94.34" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="12.6" y="597" width="0.3" height="15.0" fill="rgb(241,55,4)" rx="2" ry="2" />
<text  x="15.58" y="607.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (641 samples, 19.99%)</title><rect x="863.2" y="581" width="235.9" height="15.0" fill="rgb(230,20,18)" rx="2" ry="2" />
<text  x="866.16" y="591.5" >seastar::noncopyable_function&lt;s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.03%)</title><rect x="34.7" y="277" width="0.3" height="15.0" fill="rgb(230,82,13)" rx="2" ry="2" />
<text  x="37.66" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="61.9" y="325" width="0.4" height="15.0" fill="rgb(213,191,47)" rx="2" ry="2" />
<text  x="64.90" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (5 samples, 0.16%)</title><rect x="40.5" y="373" width="1.9" height="15.0" fill="rgb(226,182,45)" rx="2" ry="2" />
<text  x="43.55" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.12%)</title><rect x="688.0" y="613" width="1.4" height="15.0" fill="rgb(210,212,17)" rx="2" ry="2" />
<text  x="690.97" y="623.5" ></text>
</g>
<g >
<title>__strlen_avx2 (4 samples, 0.12%)</title><rect x="1003.4" y="389" width="1.5" height="15.0" fill="rgb(244,11,16)" rx="2" ry="2" />
<text  x="1006.39" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (26 samples, 0.81%)</title><rect x="512.0" y="517" width="9.6" height="15.0" fill="rgb(224,87,18)" rx="2" ry="2" />
<text  x="515.03" y="527.5" ></text>
</g>
<g >
<title>mutation_querier::consume (77 samples, 2.40%)</title><rect x="439.9" y="517" width="28.3" height="15.0" fill="rgb(240,52,45)" rx="2" ry="2" />
<text  x="442.89" y="527.5" >mu..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="341" width="0.4" height="15.0" fill="rgb(253,153,10)" rx="2" ry="2" />
<text  x="123.42" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="898.9" y="469" width="0.3" height="15.0" fill="rgb(225,169,46)" rx="2" ry="2" />
<text  x="901.86" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.03%)</title><rect x="59.0" y="469" width="0.3" height="15.0" fill="rgb(227,218,2)" rx="2" ry="2" />
<text  x="61.95" y="479.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::impl::add_registration (1 samples, 0.03%)</title><rect x="152.4" y="453" width="0.4" height="15.0" fill="rgb(229,16,50)" rx="2" ry="2" />
<text  x="155.44" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%)</title><rect x="99.4" y="421" width="0.4" height="15.0" fill="rgb(236,29,10)" rx="2" ry="2" />
<text  x="102.44" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (3 samples, 0.09%)</title><rect x="922.8" y="533" width="1.1" height="15.0" fill="rgb(216,140,8)" rx="2" ry="2" />
<text  x="925.79" y="543.5" ></text>
</g>
<g >
<title>dht::shard_of (2 samples, 0.06%)</title><rect x="981.7" y="437" width="0.7" height="15.0" fill="rgb(242,225,6)" rx="2" ry="2" />
<text  x="984.68" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.62%)</title><rect x="990.5" y="405" width="7.4" height="15.0" fill="rgb(234,103,33)" rx="2" ry="2" />
<text  x="993.51" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.12%)</title><rect x="34.3" y="325" width="1.5" height="15.0" fill="rgb(225,165,25)" rx="2" ry="2" />
<text  x="37.29" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (4 samples, 0.12%)</title><rect x="813.5" y="469" width="1.4" height="15.0" fill="rgb(206,118,22)" rx="2" ry="2" />
<text  x="816.47" y="479.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (3 samples, 0.09%)</title><rect x="602.6" y="469" width="1.1" height="15.0" fill="rgb(237,130,32)" rx="2" ry="2" />
<text  x="605.58" y="479.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.03%)</title><rect x="1023.3" y="405" width="0.3" height="15.0" fill="rgb(226,22,9)" rx="2" ry="2" />
<text  x="1026.27" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="75.5" y="389" width="0.4" height="15.0" fill="rgb(241,78,4)" rx="2" ry="2" />
<text  x="78.51" y="399.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%)</title><rect x="104.6" y="373" width="0.7" height="15.0" fill="rgb(234,89,22)" rx="2" ry="2" />
<text  x="107.59" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (16 samples, 0.50%)</title><rect x="313.6" y="437" width="5.9" height="15.0" fill="rgb(250,154,17)" rx="2" ry="2" />
<text  x="316.65" y="447.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="10.4" y="661" width="0.3" height="15.0" fill="rgb(226,58,44)" rx="2" ry="2" />
<text  x="13.37" y="671.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.09%)</title><rect x="118.6" y="437" width="1.1" height="15.0" fill="rgb(212,16,34)" rx="2" ry="2" />
<text  x="121.58" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (2 samples, 0.06%)</title><rect x="26.2" y="565" width="0.7" height="15.0" fill="rgb(254,219,49)" rx="2" ry="2" />
<text  x="29.19" y="575.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.06%)</title><rect x="939.0" y="517" width="0.7" height="15.0" fill="rgb(209,152,48)" rx="2" ry="2" />
<text  x="941.98" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%)</title><rect x="919.1" y="517" width="1.8" height="15.0" fill="rgb(223,152,14)" rx="2" ry="2" />
<text  x="922.11" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (4 samples, 0.12%)</title><rect x="34.3" y="309" width="1.5" height="15.0" fill="rgb(244,113,52)" rx="2" ry="2" />
<text  x="37.29" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (3 samples, 0.09%)</title><rect x="122.3" y="453" width="1.1" height="15.0" fill="rgb(212,222,19)" rx="2" ry="2" />
<text  x="125.26" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.09%)</title><rect x="116.7" y="405" width="1.1" height="15.0" fill="rgb(205,39,28)" rx="2" ry="2" />
<text  x="119.74" y="415.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.09%)</title><rect x="335.7" y="389" width="1.1" height="15.0" fill="rgb(253,48,41)" rx="2" ry="2" />
<text  x="338.73" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%)</title><rect x="745.8" y="597" width="2.5" height="15.0" fill="rgb(238,180,4)" rx="2" ry="2" />
<text  x="748.75" y="607.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%)</title><rect x="67.0" y="453" width="0.8" height="15.0" fill="rgb(243,71,37)" rx="2" ry="2" />
<text  x="70.05" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="24.4" y="469" width="0.3" height="15.0" fill="rgb(227,79,40)" rx="2" ry="2" />
<text  x="27.35" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="105.0" y="341" width="0.3" height="15.0" fill="rgb(222,203,45)" rx="2" ry="2" />
<text  x="107.96" y="351.5" ></text>
</g>
<g >
<title>cache_tracker::setup_metrics (1 samples, 0.03%)</title><rect x="152.4" y="517" width="0.4" height="15.0" fill="rgb(241,102,17)" rx="2" ry="2" />
<text  x="155.44" y="527.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (1 samples, 0.03%)</title><rect x="863.9" y="565" width="0.4" height="15.0" fill="rgb(243,133,19)" rx="2" ry="2" />
<text  x="866.90" y="575.5" ></text>
</g>
<g >
<title>seastar::make_file_impl (1 samples, 0.03%)</title><rect x="701.2" y="613" width="0.4" height="15.0" fill="rgb(225,156,18)" rx="2" ry="2" />
<text  x="704.22" y="623.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.09%)</title><rect x="733.6" y="597" width="1.1" height="15.0" fill="rgb(240,12,0)" rx="2" ry="2" />
<text  x="736.61" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%)</title><rect x="71.8" y="309" width="0.8" height="15.0" fill="rgb(230,76,49)" rx="2" ry="2" />
<text  x="74.83" y="319.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.12%)</title><rect x="180.0" y="613" width="1.5" height="15.0" fill="rgb(238,187,26)" rx="2" ry="2" />
<text  x="183.04" y="623.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%)</title><rect x="138.5" y="629" width="0.3" height="15.0" fill="rgb(244,224,42)" rx="2" ry="2" />
<text  x="141.45" y="639.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.06%)</title><rect x="693.5" y="613" width="0.7" height="15.0" fill="rgb(219,47,16)" rx="2" ry="2" />
<text  x="696.49" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (3 samples, 0.09%)</title><rect x="116.7" y="373" width="1.1" height="15.0" fill="rgb(247,44,23)" rx="2" ry="2" />
<text  x="119.74" y="383.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="559.9" y="501" width="0.3" height="15.0" fill="rgb(206,43,49)" rx="2" ry="2" />
<text  x="562.88" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="172.7" y="549" width="0.4" height="15.0" fill="rgb(207,172,45)" rx="2" ry="2" />
<text  x="175.68" y="559.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (2 samples, 0.06%)</title><rect x="591.9" y="501" width="0.7" height="15.0" fill="rgb(225,57,53)" rx="2" ry="2" />
<text  x="594.90" y="511.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="58.6" y="357" width="0.4" height="15.0" fill="rgb(234,214,38)" rx="2" ry="2" />
<text  x="61.58" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="60.8" y="453" width="0.7" height="15.0" fill="rgb(228,139,15)" rx="2" ry="2" />
<text  x="63.79" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="86.6" y="197" width="0.7" height="15.0" fill="rgb(221,215,33)" rx="2" ry="2" />
<text  x="89.56" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="83.6" y="325" width="0.4" height="15.0" fill="rgb(216,108,28)" rx="2" ry="2" />
<text  x="86.61" y="335.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (33 samples, 1.03%)</title><rect x="354.1" y="389" width="12.2" height="15.0" fill="rgb(224,111,19)" rx="2" ry="2" />
<text  x="357.14" y="399.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.09%)</title><rect x="11.1" y="725" width="1.1" height="15.0" fill="rgb(232,135,41)" rx="2" ry="2" />
<text  x="14.10" y="735.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%)</title><rect x="114.5" y="437" width="0.4" height="15.0" fill="rgb(243,41,24)" rx="2" ry="2" />
<text  x="117.53" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="58.6" y="437" width="0.4" height="15.0" fill="rgb(222,42,7)" rx="2" ry="2" />
<text  x="61.58" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%)</title><rect x="1022.9" y="389" width="0.4" height="15.0" fill="rgb(245,74,34)" rx="2" ry="2" />
<text  x="1025.90" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="73.3" y="373" width="0.4" height="15.0" fill="rgb(239,172,32)" rx="2" ry="2" />
<text  x="76.31" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (5 samples, 0.16%)</title><rect x="852.5" y="517" width="1.8" height="15.0" fill="rgb(224,92,47)" rx="2" ry="2" />
<text  x="855.49" y="527.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.03%)</title><rect x="185.2" y="597" width="0.4" height="15.0" fill="rgb(235,75,33)" rx="2" ry="2" />
<text  x="188.20" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.03%)</title><rect x="107.2" y="389" width="0.3" height="15.0" fill="rgb(205,95,10)" rx="2" ry="2" />
<text  x="110.17" y="399.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="469" width="0.4" height="15.0" fill="rgb(235,139,14)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (28 samples, 0.87%)</title><rect x="283.5" y="501" width="10.3" height="15.0" fill="rgb(227,56,3)" rx="2" ry="2" />
<text  x="286.47" y="511.5" ></text>
</g>
<g >
<title>make_combined_reader (38 samples, 1.19%)</title><rect x="549.9" y="533" width="14.0" height="15.0" fill="rgb(223,81,23)" rx="2" ry="2" />
<text  x="552.94" y="543.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (284 samples, 8.86%)</title><rect x="397.2" y="565" width="104.5" height="15.0" fill="rgb(241,71,3)" rx="2" ry="2" />
<text  x="400.20" y="575.5" >query::consu..</text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="67.0" y="341" width="0.4" height="15.0" fill="rgb(218,80,43)" rx="2" ry="2" />
<text  x="70.05" y="351.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="629" width="0.4" height="15.0" fill="rgb(216,31,43)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (1 samples, 0.03%)</title><rect x="10.4" y="709" width="0.3" height="15.0" fill="rgb(217,121,31)" rx="2" ry="2" />
<text  x="13.37" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="74.4" y="373" width="0.4" height="15.0" fill="rgb(215,32,35)" rx="2" ry="2" />
<text  x="77.41" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (10 samples, 0.31%)</title><rect x="600.4" y="485" width="3.6" height="15.0" fill="rgb(218,142,35)" rx="2" ry="2" />
<text  x="603.37" y="495.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.03%)</title><rect x="404.6" y="549" width="0.3" height="15.0" fill="rgb(208,107,42)" rx="2" ry="2" />
<text  x="407.56" y="559.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (3 samples, 0.09%)</title><rect x="667.4" y="613" width="1.1" height="15.0" fill="rgb(210,68,36)" rx="2" ry="2" />
<text  x="670.35" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="642.3" y="581" width="0.4" height="15.0" fill="rgb(210,89,14)" rx="2" ry="2" />
<text  x="645.33" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (239 samples, 7.45%)</title><rect x="293.8" y="501" width="87.9" height="15.0" fill="rgb(253,157,23)" rx="2" ry="2" />
<text  x="296.77" y="511.5" >partition_..</text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%)</title><rect x="123.7" y="453" width="0.4" height="15.0" fill="rgb(220,224,42)" rx="2" ry="2" />
<text  x="126.73" y="463.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (4 samples, 0.12%)</title><rect x="1101.7" y="485" width="1.4" height="15.0" fill="rgb(239,51,9)" rx="2" ry="2" />
<text  x="1104.67" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="74.4" y="325" width="0.4" height="15.0" fill="rgb(221,85,50)" rx="2" ry="2" />
<text  x="77.41" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (2,701 samples, 84.25%)</title><rect x="158.0" y="645" width="994.1" height="15.0" fill="rgb(230,107,18)" rx="2" ry="2" />
<text  x="160.96" y="655.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="1136.3" y="597" width="0.3" height="15.0" fill="rgb(239,167,47)" rx="2" ry="2" />
<text  x="1139.26" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="71.5" y="277" width="0.3" height="15.0" fill="rgb(217,24,4)" rx="2" ry="2" />
<text  x="74.47" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (1 samples, 0.03%)</title><rect x="1189.3" y="757" width="0.3" height="15.0" fill="rgb(209,88,32)" rx="2" ry="2" />
<text  x="1192.26" y="767.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="84.3" y="277" width="0.4" height="15.0" fill="rgb(223,44,37)" rx="2" ry="2" />
<text  x="87.35" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="75.1" y="405" width="0.4" height="15.0" fill="rgb(212,44,28)" rx="2" ry="2" />
<text  x="78.15" y="415.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (2,718 samples, 84.78%)</title><rect x="153.2" y="693" width="1000.4" height="15.0" fill="rgb(217,66,43)" rx="2" ry="2" />
<text  x="156.18" y="703.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (1 samples, 0.03%)</title><rect x="23.6" y="469" width="0.4" height="15.0" fill="rgb(225,40,34)" rx="2" ry="2" />
<text  x="26.62" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.09%)</title><rect x="115.3" y="453" width="1.1" height="15.0" fill="rgb(233,64,11)" rx="2" ry="2" />
<text  x="118.27" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%)</title><rect x="121.9" y="421" width="0.4" height="15.0" fill="rgb(237,102,1)" rx="2" ry="2" />
<text  x="124.89" y="431.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.03%)</title><rect x="37.6" y="293" width="0.4" height="15.0" fill="rgb(241,97,33)" rx="2" ry="2" />
<text  x="40.60" y="303.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%)</title><rect x="1105.0" y="437" width="0.3" height="15.0" fill="rgb(208,82,7)" rx="2" ry="2" />
<text  x="1107.98" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="105.0" y="197" width="0.3" height="15.0" fill="rgb(218,98,3)" rx="2" ry="2" />
<text  x="107.96" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.19%)</title><rect x="995.7" y="389" width="2.2" height="15.0" fill="rgb(247,124,40)" rx="2" ry="2" />
<text  x="998.66" y="399.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.06%)</title><rect x="1134.4" y="597" width="0.8" height="15.0" fill="rgb(240,15,46)" rx="2" ry="2" />
<text  x="1137.42" y="607.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (64 samples, 2.00%)</title><rect x="668.5" y="629" width="23.5" height="15.0" fill="rgb(225,195,13)" rx="2" ry="2" />
<text  x="671.46" y="639.5" >s..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="897.8" y="453" width="0.3" height="15.0" fill="rgb(239,182,13)" rx="2" ry="2" />
<text  x="900.76" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (69 samples, 2.15%)</title><rect x="31.0" y="469" width="25.4" height="15.0" fill="rgb(240,192,47)" rx="2" ry="2" />
<text  x="33.98" y="479.5" >a..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="89.5" y="309" width="0.4" height="15.0" fill="rgb(214,115,8)" rx="2" ry="2" />
<text  x="92.50" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.03%)</title><rect x="149.1" y="693" width="0.4" height="15.0" fill="rgb(220,24,36)" rx="2" ry="2" />
<text  x="152.13" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="229" width="0.4" height="15.0" fill="rgb(243,26,12)" rx="2" ry="2" />
<text  x="123.42" y="239.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="534.5" y="549" width="0.7" height="15.0" fill="rgb(253,78,28)" rx="2" ry="2" />
<text  x="537.49" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="642.7" y="581" width="0.7" height="15.0" fill="rgb(236,112,20)" rx="2" ry="2" />
<text  x="645.69" y="591.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.03%)</title><rect x="151.3" y="741" width="0.4" height="15.0" fill="rgb(225,161,37)" rx="2" ry="2" />
<text  x="154.33" y="751.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (5 samples, 0.16%)</title><rect x="830.4" y="565" width="1.8" height="15.0" fill="rgb(216,47,51)" rx="2" ry="2" />
<text  x="833.41" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (8 samples, 0.25%)</title><rect x="73.7" y="469" width="2.9" height="15.0" fill="rgb(248,89,36)" rx="2" ry="2" />
<text  x="76.67" y="479.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.03%)</title><rect x="146.9" y="677" width="0.4" height="15.0" fill="rgb(223,181,47)" rx="2" ry="2" />
<text  x="149.92" y="687.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="70.4" y="325" width="0.3" height="15.0" fill="rgb(234,94,52)" rx="2" ry="2" />
<text  x="73.36" y="335.5" ></text>
</g>
<g >
<title>boost::variant&lt;ser::live_cell_view, ser::expiring_cell_view, ser::dead_cell_view, ser::counter_cell_view, ser::unknown_variant_type&gt;::apply_visitor&lt;(anonymous namespace)::read_atomic_cell (1 samples, 0.03%)</title><rect x="1103.9" y="469" width="0.3" height="15.0" fill="rgb(222,188,46)" rx="2" ry="2" />
<text  x="1106.87" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="889.7" y="437" width="0.7" height="15.0" fill="rgb(219,81,13)" rx="2" ry="2" />
<text  x="892.66" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="519.8" y="453" width="0.3" height="15.0" fill="rgb(228,108,24)" rx="2" ry="2" />
<text  x="522.76" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (4 samples, 0.12%)</title><rect x="82.9" y="437" width="1.4" height="15.0" fill="rgb(219,66,40)" rx="2" ry="2" />
<text  x="85.88" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%)</title><rect x="683.5" y="597" width="0.8" height="15.0" fill="rgb(215,18,52)" rx="2" ry="2" />
<text  x="686.55" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="1114.2" y="373" width="0.3" height="15.0" fill="rgb(240,199,50)" rx="2" ry="2" />
<text  x="1117.18" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.03%)</title><rect x="10.7" y="581" width="0.4" height="15.0" fill="rgb(234,184,17)" rx="2" ry="2" />
<text  x="13.74" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt; &gt;  (1 samples, 0.03%)</title><rect x="23.6" y="437" width="0.4" height="15.0" fill="rgb(233,153,53)" rx="2" ry="2" />
<text  x="26.62" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (4 samples, 0.12%)</title><rect x="120.8" y="437" width="1.5" height="15.0" fill="rgb(217,41,54)" rx="2" ry="2" />
<text  x="123.79" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%)</title><rect x="114.5" y="421" width="0.4" height="15.0" fill="rgb(224,179,54)" rx="2" ry="2" />
<text  x="117.53" y="431.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.03%)</title><rect x="1103.9" y="405" width="0.3" height="15.0" fill="rgb(208,206,42)" rx="2" ry="2" />
<text  x="1106.87" y="415.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.03%)</title><rect x="142.5" y="709" width="0.4" height="15.0" fill="rgb(207,69,46)" rx="2" ry="2" />
<text  x="145.50" y="719.5" ></text>
</g>
<g >
<title>cql3::prepare_context::set_bound_variables (1 samples, 0.03%)</title><rect x="57.1" y="517" width="0.4" height="15.0" fill="rgb(217,79,28)" rx="2" ry="2" />
<text  x="60.11" y="527.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (9 samples, 0.28%)</title><rect x="16.6" y="549" width="3.3" height="15.0" fill="rgb(244,223,17)" rx="2" ry="2" />
<text  x="19.63" y="559.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="370.7" y="453" width="0.4" height="15.0" fill="rgb(210,132,24)" rx="2" ry="2" />
<text  x="373.70" y="463.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (1 samples, 0.03%)</title><rect x="1099.1" y="565" width="0.4" height="15.0" fill="rgb(238,161,17)" rx="2" ry="2" />
<text  x="1102.09" y="575.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="61.2" y="341" width="0.3" height="15.0" fill="rgb(222,218,34)" rx="2" ry="2" />
<text  x="64.16" y="351.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%)</title><rect x="138.8" y="581" width="0.4" height="15.0" fill="rgb(250,20,21)" rx="2" ry="2" />
<text  x="141.82" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="117.8" y="437" width="0.4" height="15.0" fill="rgb(214,12,53)" rx="2" ry="2" />
<text  x="120.84" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="97.2" y="133" width="1.1" height="15.0" fill="rgb(240,60,32)" rx="2" ry="2" />
<text  x="100.23" y="143.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%)</title><rect x="784.8" y="549" width="0.7" height="15.0" fill="rgb(235,11,33)" rx="2" ry="2" />
<text  x="787.77" y="559.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.37%)</title><rect x="434.4" y="533" width="4.4" height="15.0" fill="rgb(244,67,49)" rx="2" ry="2" />
<text  x="437.37" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%)</title><rect x="101.3" y="341" width="0.3" height="15.0" fill="rgb(238,26,22)" rx="2" ry="2" />
<text  x="104.28" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="84.3" y="325" width="0.4" height="15.0" fill="rgb(235,142,44)" rx="2" ry="2" />
<text  x="87.35" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (3 samples, 0.09%)</title><rect x="379.2" y="469" width="1.1" height="15.0" fill="rgb(207,203,21)" rx="2" ry="2" />
<text  x="382.16" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%)</title><rect x="83.2" y="389" width="0.4" height="15.0" fill="rgb(240,179,17)" rx="2" ry="2" />
<text  x="86.24" y="399.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%)</title><rect x="103.5" y="405" width="0.7" height="15.0" fill="rgb(225,105,34)" rx="2" ry="2" />
<text  x="106.49" y="415.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (9 samples, 0.28%)</title><rect x="844.4" y="613" width="3.3" height="15.0" fill="rgb(231,93,4)" rx="2" ry="2" />
<text  x="847.39" y="623.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (2 samples, 0.06%)</title><rect x="26.2" y="549" width="0.7" height="15.0" fill="rgb(208,91,34)" rx="2" ry="2" />
<text  x="29.19" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%)</title><rect x="181.5" y="613" width="0.4" height="15.0" fill="rgb(210,143,46)" rx="2" ry="2" />
<text  x="184.52" y="623.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%)</title><rect x="401.6" y="549" width="1.9" height="15.0" fill="rgb(236,61,45)" rx="2" ry="2" />
<text  x="404.62" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="74.4" y="293" width="0.4" height="15.0" fill="rgb(249,26,0)" rx="2" ry="2" />
<text  x="77.41" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="88.8" y="357" width="0.3" height="15.0" fill="rgb(250,5,36)" rx="2" ry="2" />
<text  x="91.76" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%)</title><rect x="86.2" y="229" width="1.1" height="15.0" fill="rgb(253,127,51)" rx="2" ry="2" />
<text  x="89.19" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="68.9" y="261" width="0.4" height="15.0" fill="rgb(206,64,24)" rx="2" ry="2" />
<text  x="71.89" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="75.9" y="373" width="0.7" height="15.0" fill="rgb(205,101,12)" rx="2" ry="2" />
<text  x="78.88" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%)</title><rect x="121.2" y="389" width="0.3" height="15.0" fill="rgb(243,45,28)" rx="2" ry="2" />
<text  x="124.15" y="399.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="83.6" y="373" width="0.4" height="15.0" fill="rgb(223,60,27)" rx="2" ry="2" />
<text  x="86.61" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%)</title><rect x="73.7" y="453" width="0.3" height="15.0" fill="rgb(232,106,47)" rx="2" ry="2" />
<text  x="76.67" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_SET (1 samples, 0.03%)</title><rect x="54.5" y="421" width="0.4" height="15.0" fill="rgb(217,21,14)" rx="2" ry="2" />
<text  x="57.54" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (133 samples, 4.15%)</title><rect x="978.7" y="453" width="49.0" height="15.0" fill="rgb(208,164,20)" rx="2" ry="2" />
<text  x="981.73" y="463.5" >serv..</text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="813.1" y="469" width="0.4" height="15.0" fill="rgb(213,189,8)" rx="2" ry="2" />
<text  x="816.11" y="479.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%)</title><rect x="660.4" y="613" width="0.3" height="15.0" fill="rgb(232,93,50)" rx="2" ry="2" />
<text  x="663.36" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="95.8" y="325" width="0.3" height="15.0" fill="rgb(222,141,45)" rx="2" ry="2" />
<text  x="98.76" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (14 samples, 0.44%)</title><rect x="851.0" y="549" width="5.2" height="15.0" fill="rgb(215,31,16)" rx="2" ry="2" />
<text  x="854.02" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="103.9" y="309" width="0.3" height="15.0" fill="rgb(237,91,12)" rx="2" ry="2" />
<text  x="106.86" y="319.5" ></text>
</g>
<g >
<title>schema::get_column_definition (2 samples, 0.06%)</title><rect x="24.7" y="549" width="0.8" height="15.0" fill="rgb(234,92,5)" rx="2" ry="2" />
<text  x="27.72" y="559.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.06%)</title><rect x="641.2" y="549" width="0.8" height="15.0" fill="rgb(211,121,14)" rx="2" ry="2" />
<text  x="644.22" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%)</title><rect x="1020.7" y="357" width="0.7" height="15.0" fill="rgb(239,146,11)" rx="2" ry="2" />
<text  x="1023.69" y="367.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (4 samples, 0.12%)</title><rect x="1105.7" y="469" width="1.5" height="15.0" fill="rgb(250,123,38)" rx="2" ry="2" />
<text  x="1108.71" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="522.7" y="517" width="0.4" height="15.0" fill="rgb(228,227,36)" rx="2" ry="2" />
<text  x="525.71" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.03%)</title><rect x="24.0" y="501" width="0.4" height="15.0" fill="rgb(239,55,27)" rx="2" ry="2" />
<text  x="26.99" y="511.5" ></text>
</g>
<g >
<title>query_result_builder::consume (79 samples, 2.46%)</title><rect x="439.9" y="533" width="29.1" height="15.0" fill="rgb(235,203,0)" rx="2" ry="2" />
<text  x="442.89" y="543.5" >qu..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="92.4" y="181" width="0.4" height="15.0" fill="rgb(241,214,30)" rx="2" ry="2" />
<text  x="95.45" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="92.4" y="229" width="0.4" height="15.0" fill="rgb(221,72,46)" rx="2" ry="2" />
<text  x="95.45" y="239.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.47%)</title><rect x="140.3" y="725" width="5.5" height="15.0" fill="rgb(212,74,17)" rx="2" ry="2" />
<text  x="143.29" y="735.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="92.4" y="149" width="0.4" height="15.0" fill="rgb(253,205,52)" rx="2" ry="2" />
<text  x="95.45" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.09%)</title><rect x="194.0" y="613" width="1.1" height="15.0" fill="rgb(229,211,14)" rx="2" ry="2" />
<text  x="197.03" y="623.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="1113.4" y="421" width="0.8" height="15.0" fill="rgb(248,215,11)" rx="2" ry="2" />
<text  x="1116.44" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="71.5" y="325" width="0.3" height="15.0" fill="rgb(248,206,32)" rx="2" ry="2" />
<text  x="74.47" y="335.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.03%)</title><rect x="1096.9" y="549" width="0.3" height="15.0" fill="rgb(247,136,51)" rx="2" ry="2" />
<text  x="1099.88" y="559.5" ></text>
</g>
<g >
<title>row::compact_and_expire (39 samples, 1.22%)</title><rect x="482.2" y="533" width="14.4" height="15.0" fill="rgb(235,181,11)" rx="2" ry="2" />
<text  x="485.22" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%)</title><rect x="115.6" y="421" width="0.8" height="15.0" fill="rgb(243,229,49)" rx="2" ry="2" />
<text  x="118.63" y="431.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (48 samples, 1.50%)</title><rect x="802.8" y="517" width="17.7" height="15.0" fill="rgb(229,98,9)" rx="2" ry="2" />
<text  x="805.80" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.03%)</title><rect x="25.1" y="533" width="0.4" height="15.0" fill="rgb(235,112,42)" rx="2" ry="2" />
<text  x="28.09" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="113.1" y="421" width="0.3" height="15.0" fill="rgb(239,152,53)" rx="2" ry="2" />
<text  x="116.06" y="431.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.03%)</title><rect x="184.5" y="581" width="0.3" height="15.0" fill="rgb(208,86,46)" rx="2" ry="2" />
<text  x="187.46" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.09%)</title><rect x="102.4" y="325" width="1.1" height="15.0" fill="rgb(237,200,19)" rx="2" ry="2" />
<text  x="105.38" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_lower_bound (1 samples, 0.03%)</title><rect x="56.0" y="421" width="0.4" height="15.0" fill="rgb(214,37,38)" rx="2" ry="2" />
<text  x="59.01" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%)</title><rect x="76.3" y="245" width="0.3" height="15.0" fill="rgb(244,163,33)" rx="2" ry="2" />
<text  x="79.25" y="255.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="94.3" y="373" width="0.4" height="15.0" fill="rgb(236,211,51)" rx="2" ry="2" />
<text  x="97.29" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::select_statement, std::default_delete&lt;cql3::statements::raw::select_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::select_statement&gt;, void&gt; (1 samples, 0.03%)</title><rect x="130.7" y="517" width="0.4" height="15.0" fill="rgb(243,187,28)" rx="2" ry="2" />
<text  x="133.72" y="527.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%)</title><rect x="521.2" y="501" width="0.4" height="15.0" fill="rgb(249,92,13)" rx="2" ry="2" />
<text  x="524.24" y="511.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="378.4" y="453" width="0.4" height="15.0" fill="rgb(227,116,15)" rx="2" ry="2" />
<text  x="381.43" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="727.0" y="613" width="0.3" height="15.0" fill="rgb(216,46,35)" rx="2" ry="2" />
<text  x="729.98" y="623.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="795.1" y="533" width="1.1" height="15.0" fill="rgb(208,191,24)" rx="2" ry="2" />
<text  x="798.07" y="543.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%)</title><rect x="67.8" y="421" width="0.7" height="15.0" fill="rgb(248,75,42)" rx="2" ry="2" />
<text  x="70.79" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (2 samples, 0.06%)</title><rect x="108.6" y="373" width="0.8" height="15.0" fill="rgb(215,63,25)" rx="2" ry="2" />
<text  x="111.64" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%)</title><rect x="105.3" y="373" width="0.4" height="15.0" fill="rgb(252,207,11)" rx="2" ry="2" />
<text  x="108.33" y="383.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%)</title><rect x="14.8" y="597" width="0.4" height="15.0" fill="rgb(253,180,2)" rx="2" ry="2" />
<text  x="17.78" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="122.3" y="389" width="0.3" height="15.0" fill="rgb(231,201,32)" rx="2" ry="2" />
<text  x="125.26" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (73 samples, 2.28%)</title><rect x="1047.9" y="469" width="26.9" height="15.0" fill="rgb(239,60,51)" rx="2" ry="2" />
<text  x="1050.93" y="479.5" >s..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="64.5" y="421" width="0.3" height="15.0" fill="rgb(223,72,38)" rx="2" ry="2" />
<text  x="67.47" y="431.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.06%)</title><rect x="842.2" y="549" width="0.7" height="15.0" fill="rgb(240,97,7)" rx="2" ry="2" />
<text  x="845.18" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.12%)</title><rect x="97.2" y="277" width="1.5" height="15.0" fill="rgb(211,144,44)" rx="2" ry="2" />
<text  x="100.23" y="287.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (13 samples, 0.41%)</title><rect x="249.2" y="581" width="4.8" height="15.0" fill="rgb(210,188,51)" rx="2" ry="2" />
<text  x="252.24" y="591.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%)</title><rect x="138.5" y="725" width="0.3" height="15.0" fill="rgb(217,198,53)" rx="2" ry="2" />
<text  x="141.45" y="735.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.03%)</title><rect x="605.5" y="485" width="0.4" height="15.0" fill="rgb(244,182,45)" rx="2" ry="2" />
<text  x="608.52" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%)</title><rect x="894.8" y="437" width="0.8" height="15.0" fill="rgb(243,184,14)" rx="2" ry="2" />
<text  x="897.82" y="447.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="152.1" y="693" width="0.3" height="15.0" fill="rgb(229,126,3)" rx="2" ry="2" />
<text  x="155.07" y="703.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="59.7" y="469" width="0.4" height="15.0" fill="rgb(207,177,42)" rx="2" ry="2" />
<text  x="62.69" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.09%)</title><rect x="526.0" y="533" width="1.1" height="15.0" fill="rgb(246,93,52)" rx="2" ry="2" />
<text  x="529.02" y="543.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="188.1" y="629" width="0.4" height="15.0" fill="rgb(223,61,22)" rx="2" ry="2" />
<text  x="191.14" y="639.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="60.4" y="437" width="0.4" height="15.0" fill="rgb(226,111,20)" rx="2" ry="2" />
<text  x="63.42" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.09%)</title><rect x="68.5" y="357" width="1.1" height="15.0" fill="rgb(249,175,20)" rx="2" ry="2" />
<text  x="71.52" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (8 samples, 0.25%)</title><rect x="125.2" y="501" width="2.9" height="15.0" fill="rgb(214,117,10)" rx="2" ry="2" />
<text  x="128.20" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (13 samples, 0.41%)</title><rect x="102.0" y="421" width="4.8" height="15.0" fill="rgb(235,105,5)" rx="2" ry="2" />
<text  x="105.01" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%)</title><rect x="501.7" y="565" width="0.8" height="15.0" fill="rgb(243,110,13)" rx="2" ry="2" />
<text  x="504.73" y="575.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="96.1" y="373" width="0.4" height="15.0" fill="rgb(234,64,34)" rx="2" ry="2" />
<text  x="99.13" y="383.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.09%)</title><rect x="118.6" y="373" width="1.1" height="15.0" fill="rgb(253,46,43)" rx="2" ry="2" />
<text  x="121.58" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%)</title><rect x="103.5" y="389" width="0.4" height="15.0" fill="rgb(217,213,41)" rx="2" ry="2" />
<text  x="106.49" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (1 samples, 0.03%)</title><rect x="153.9" y="645" width="0.4" height="15.0" fill="rgb(246,146,4)" rx="2" ry="2" />
<text  x="156.91" y="655.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (2 samples, 0.06%)</title><rect x="23.3" y="501" width="0.7" height="15.0" fill="rgb(209,163,51)" rx="2" ry="2" />
<text  x="26.25" y="511.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_state (1 samples, 0.03%)</title><rect x="90.6" y="405" width="0.4" height="15.0" fill="rgb(219,173,32)" rx="2" ry="2" />
<text  x="93.61" y="415.5" ></text>
</g>
<g >
<title>database::query (61 samples, 1.90%)</title><rect x="1000.8" y="405" width="22.5" height="15.0" fill="rgb(212,97,27)" rx="2" ry="2" />
<text  x="1003.82" y="415.5" >d..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.09%)</title><rect x="811.6" y="469" width="1.1" height="15.0" fill="rgb(219,193,27)" rx="2" ry="2" />
<text  x="814.63" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.09%)</title><rect x="369.6" y="453" width="1.1" height="15.0" fill="rgb(242,197,31)" rx="2" ry="2" />
<text  x="372.59" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%)</title><rect x="56.7" y="517" width="0.4" height="15.0" fill="rgb(236,207,39)" rx="2" ry="2" />
<text  x="59.74" y="527.5" ></text>
</g>
<g >
<title>std::_Enable_default_constructor&lt;true, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt;::_Enable_default_constructor (1 samples, 0.03%)</title><rect x="89.1" y="373" width="0.4" height="15.0" fill="rgb(254,198,46)" rx="2" ry="2" />
<text  x="92.13" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%)</title><rect x="121.5" y="405" width="0.4" height="15.0" fill="rgb(210,53,5)" rx="2" ry="2" />
<text  x="124.52" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.03%)</title><rect x="855.1" y="501" width="0.3" height="15.0" fill="rgb(205,125,9)" rx="2" ry="2" />
<text  x="858.07" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%)</title><rect x="234.9" y="581" width="0.7" height="15.0" fill="rgb(240,220,33)" rx="2" ry="2" />
<text  x="237.88" y="591.5" ></text>
</g>
<g >
<title>make_combined_reader (31 samples, 0.97%)</title><rect x="551.4" y="517" width="11.4" height="15.0" fill="rgb(218,24,4)" rx="2" ry="2" />
<text  x="554.42" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="70.0" y="421" width="0.7" height="15.0" fill="rgb(228,48,28)" rx="2" ry="2" />
<text  x="72.99" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_with_triggers (1 samples, 0.03%)</title><rect x="855.8" y="533" width="0.4" height="15.0" fill="rgb(226,56,4)" rx="2" ry="2" />
<text  x="858.80" y="543.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="661.1" y="613" width="0.4" height="15.0" fill="rgb(245,118,48)" rx="2" ry="2" />
<text  x="664.10" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;cql3::expr::conjunction&gt;::_M_ptr (1 samples, 0.03%)</title><rect x="86.6" y="181" width="0.3" height="15.0" fill="rgb(250,183,2)" rx="2" ry="2" />
<text  x="89.56" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::shared_ptr (1 samples, 0.03%)</title><rect x="124.5" y="501" width="0.3" height="15.0" fill="rgb(253,183,38)" rx="2" ry="2" />
<text  x="127.47" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.03%)</title><rect x="83.6" y="389" width="0.4" height="15.0" fill="rgb(214,144,29)" rx="2" ry="2" />
<text  x="86.61" y="399.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%)</title><rect x="399.8" y="549" width="1.8" height="15.0" fill="rgb(239,78,44)" rx="2" ry="2" />
<text  x="402.78" y="559.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%)</title><rect x="10.4" y="501" width="0.3" height="15.0" fill="rgb(208,204,9)" rx="2" ry="2" />
<text  x="13.37" y="511.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (73 samples, 2.28%)</title><rect x="29.9" y="517" width="26.8" height="15.0" fill="rgb(225,119,45)" rx="2" ry="2" />
<text  x="32.88" y="527.5" >a..</text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (3 samples, 0.09%)</title><rect x="381.7" y="517" width="1.1" height="15.0" fill="rgb(239,192,25)" rx="2" ry="2" />
<text  x="384.74" y="527.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (44 samples, 1.37%)</title><rect x="1155.4" y="757" width="16.2" height="15.0" fill="rgb(236,226,33)" rx="2" ry="2" />
<text  x="1158.40" y="767.5" ></text>
</g>
<g >
<title>database::find_column_family (8 samples, 0.25%)</title><rect x="1037.3" y="469" width="2.9" height="15.0" fill="rgb(218,121,8)" rx="2" ry="2" />
<text  x="1040.26" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="421" width="0.4" height="15.0" fill="rgb(220,209,14)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%)</title><rect x="117.8" y="453" width="0.4" height="15.0" fill="rgb(244,149,34)" rx="2" ry="2" />
<text  x="120.84" y="463.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="98.3" y="229" width="0.4" height="15.0" fill="rgb(231,45,29)" rx="2" ry="2" />
<text  x="101.33" y="239.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.37%)</title><rect x="392.8" y="565" width="4.4" height="15.0" fill="rgb(233,210,53)" rx="2" ry="2" />
<text  x="395.78" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%)</title><rect x="42.0" y="341" width="0.4" height="15.0" fill="rgb(217,144,53)" rx="2" ry="2" />
<text  x="45.02" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.50%)</title><rect x="1109.0" y="565" width="5.9" height="15.0" fill="rgb(229,72,10)" rx="2" ry="2" />
<text  x="1112.03" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="581" width="0.4" height="15.0" fill="rgb(250,120,51)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;3ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="149" width="0.4" height="15.0" fill="rgb(233,161,54)" rx="2" ry="2" />
<text  x="123.42" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="757.9" y="597" width="0.4" height="15.0" fill="rgb(216,9,16)" rx="2" ry="2" />
<text  x="760.90" y="607.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.03%)</title><rect x="204.7" y="597" width="0.4" height="15.0" fill="rgb(252,85,36)" rx="2" ry="2" />
<text  x="207.70" y="607.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="519.0" y="469" width="1.1" height="15.0" fill="rgb(209,183,12)" rx="2" ry="2" />
<text  x="522.03" y="479.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (1 samples, 0.03%)</title><rect x="10.7" y="549" width="0.4" height="15.0" fill="rgb(233,34,38)" rx="2" ry="2" />
<text  x="13.74" y="559.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%)</title><rect x="313.3" y="437" width="0.3" height="15.0" fill="rgb(208,76,52)" rx="2" ry="2" />
<text  x="316.28" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="67.8" y="357" width="0.7" height="15.0" fill="rgb(206,227,38)" rx="2" ry="2" />
<text  x="70.79" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.12%)</title><rect x="34.3" y="293" width="1.5" height="15.0" fill="rgb(230,8,26)" rx="2" ry="2" />
<text  x="37.29" y="303.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%)</title><rect x="1012.2" y="373" width="2.6" height="15.0" fill="rgb(207,129,29)" rx="2" ry="2" />
<text  x="1015.23" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="437" width="0.4" height="15.0" fill="rgb(213,206,32)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (3 samples, 0.09%)</title><rect x="149.5" y="661" width="1.1" height="15.0" fill="rgb(238,16,45)" rx="2" ry="2" />
<text  x="152.49" y="671.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (3 samples, 0.09%)</title><rect x="735.4" y="597" width="1.2" height="15.0" fill="rgb(232,17,38)" rx="2" ry="2" />
<text  x="738.45" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="597" width="0.4" height="15.0" fill="rgb(240,137,20)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (343 samples, 10.70%)</title><rect x="12.2" y="709" width="126.3" height="15.0" fill="rgb(228,69,42)" rx="2" ry="2" />
<text  x="15.21" y="719.5" >seastar::thread..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="105.0" y="181" width="0.3" height="15.0" fill="rgb(246,10,10)" rx="2" ry="2" />
<text  x="107.96" y="191.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%)</title><rect x="152.4" y="629" width="0.4" height="15.0" fill="rgb(225,216,31)" rx="2" ry="2" />
<text  x="155.44" y="639.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="1102.0" y="421" width="0.4" height="15.0" fill="rgb(224,101,7)" rx="2" ry="2" />
<text  x="1105.03" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (3 samples, 0.09%)</title><rect x="59.3" y="501" width="1.1" height="15.0" fill="rgb(213,44,1)" rx="2" ry="2" />
<text  x="62.32" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt; &gt;::deallocate (1 samples, 0.03%)</title><rect x="38.0" y="341" width="0.3" height="15.0" fill="rgb(237,8,39)" rx="2" ry="2" />
<text  x="40.97" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (4 samples, 0.12%)</title><rect x="53.1" y="405" width="1.4" height="15.0" fill="rgb(231,161,52)" rx="2" ry="2" />
<text  x="56.06" y="415.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (4 samples, 0.12%)</title><rect x="1041.7" y="469" width="1.4" height="15.0" fill="rgb(245,93,33)" rx="2" ry="2" />
<text  x="1044.67" y="479.5" ></text>
</g>
<g >
<title>sstables::sstable_writer::sstable_writer (1 samples, 0.03%)</title><rect x="151.0" y="693" width="0.3" height="15.0" fill="rgb(233,45,5)" rx="2" ry="2" />
<text  x="153.97" y="703.5" ></text>
</g>
<g >
<title>cql3::cf_name::operator= (1 samples, 0.03%)</title><rect x="64.8" y="485" width="0.4" height="15.0" fill="rgb(243,91,40)" rx="2" ry="2" />
<text  x="67.84" y="495.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.03%)</title><rect x="139.9" y="725" width="0.4" height="15.0" fill="rgb(222,51,37)" rx="2" ry="2" />
<text  x="142.93" y="735.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::do_wait (1 samples, 0.03%)</title><rect x="14.0" y="629" width="0.4" height="15.0" fill="rgb(219,25,27)" rx="2" ry="2" />
<text  x="17.05" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.03%)</title><rect x="1011.5" y="309" width="0.4" height="15.0" fill="rgb(212,5,9)" rx="2" ry="2" />
<text  x="1014.49" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (6 samples, 0.19%)</title><rect x="715.2" y="613" width="2.2" height="15.0" fill="rgb(210,54,13)" rx="2" ry="2" />
<text  x="718.20" y="623.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="522.3" y="517" width="0.4" height="15.0" fill="rgb(221,80,53)" rx="2" ry="2" />
<text  x="525.34" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="72.6" y="357" width="0.7" height="15.0" fill="rgb(224,201,2)" rx="2" ry="2" />
<text  x="75.57" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="438.8" y="517" width="0.7" height="15.0" fill="rgb(218,48,45)" rx="2" ry="2" />
<text  x="441.79" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.03%)</title><rect x="1153.2" y="645" width="0.4" height="15.0" fill="rgb(233,132,20)" rx="2" ry="2" />
<text  x="1156.19" y="655.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (36 samples, 1.12%)</title><rect x="483.3" y="517" width="13.3" height="15.0" fill="rgb(213,150,35)" rx="2" ry="2" />
<text  x="486.33" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.31%)</title><rect x="973.9" y="437" width="3.7" height="15.0" fill="rgb(248,85,14)" rx="2" ry="2" />
<text  x="976.95" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="677.3" y="581" width="0.4" height="15.0" fill="rgb(243,199,40)" rx="2" ry="2" />
<text  x="680.29" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::drop_role_statement, std::default_delete&lt;cql3::statements::drop_role_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%)</title><rect x="130.4" y="501" width="0.3" height="15.0" fill="rgb(239,97,33)" rx="2" ry="2" />
<text  x="133.36" y="511.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;fragment_range&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%)</title><rect x="852.9" y="437" width="0.3" height="15.0" fill="rgb(221,190,20)" rx="2" ry="2" />
<text  x="855.86" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_service_level_statement, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::list_service_level_statement&gt;, void&gt; (1 samples, 0.03%)</title><rect x="132.6" y="533" width="0.3" height="15.0" fill="rgb(240,148,1)" rx="2" ry="2" />
<text  x="135.56" y="543.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (1 samples, 0.03%)</title><rect x="62.6" y="453" width="0.4" height="15.0" fill="rgb(217,10,2)" rx="2" ry="2" />
<text  x="65.63" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%)</title><rect x="90.2" y="437" width="0.4" height="15.0" fill="rgb(220,110,28)" rx="2" ry="2" />
<text  x="93.24" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="67.4" y="309" width="0.4" height="15.0" fill="rgb(243,0,53)" rx="2" ry="2" />
<text  x="70.42" y="319.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%)</title><rect x="918.7" y="533" width="2.2" height="15.0" fill="rgb(224,188,29)" rx="2" ry="2" />
<text  x="921.74" y="543.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (2 samples, 0.06%)</title><rect x="75.9" y="405" width="0.7" height="15.0" fill="rgb(242,48,13)" rx="2" ry="2" />
<text  x="78.88" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::~pair (1 samples, 0.03%)</title><rect x="83.6" y="293" width="0.4" height="15.0" fill="rgb(218,87,47)" rx="2" ry="2" />
<text  x="86.61" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (127 samples, 3.96%)</title><rect x="875.7" y="549" width="46.7" height="15.0" fill="rgb(247,69,26)" rx="2" ry="2" />
<text  x="878.68" y="559.5" >cql3..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="499.2" y="549" width="0.3" height="15.0" fill="rgb(241,139,32)" rx="2" ry="2" />
<text  x="502.15" y="559.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (7 samples, 0.22%)</title><rect x="96.9" y="405" width="2.5" height="15.0" fill="rgb(246,39,49)" rx="2" ry="2" />
<text  x="99.86" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="20.3" y="517" width="0.4" height="15.0" fill="rgb(252,29,26)" rx="2" ry="2" />
<text  x="23.31" y="527.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.19%)</title><rect x="71.5" y="453" width="2.2" height="15.0" fill="rgb(245,132,2)" rx="2" ry="2" />
<text  x="74.47" y="463.5" ></text>
</g>
<g >
<title>query_state::query_state (11 samples, 0.34%)</title><rect x="637.9" y="581" width="4.1" height="15.0" fill="rgb(211,2,13)" rx="2" ry="2" />
<text  x="640.91" y="591.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (6 samples, 0.19%)</title><rect x="694.2" y="613" width="2.2" height="15.0" fill="rgb(219,166,1)" rx="2" ry="2" />
<text  x="697.22" y="623.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%)</title><rect x="835.6" y="581" width="2.5" height="15.0" fill="rgb(236,222,0)" rx="2" ry="2" />
<text  x="838.56" y="591.5" ></text>
</g>
<g >
<title>seastar::posix_thread::start_routine (1 samples, 0.03%)</title><rect x="1189.6" y="741" width="0.4" height="15.0" fill="rgb(233,56,44)" rx="2" ry="2" />
<text  x="1192.63" y="751.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (3 samples, 0.09%)</title><rect x="318.4" y="421" width="1.1" height="15.0" fill="rgb(248,147,33)" rx="2" ry="2" />
<text  x="321.43" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="684.3" y="597" width="0.4" height="15.0" fill="rgb(251,5,31)" rx="2" ry="2" />
<text  x="687.29" y="607.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (186 samples, 5.80%)</title><rect x="959.6" y="485" width="68.5" height="15.0" fill="rgb(237,138,28)" rx="2" ry="2" />
<text  x="962.59" y="495.5" >service..</text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 1.37%)</title><rect x="1172.3" y="757" width="16.2" height="15.0" fill="rgb(243,215,26)" rx="2" ry="2" />
<text  x="1175.33" y="767.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="78.1" y="389" width="0.7" height="15.0" fill="rgb(227,47,16)" rx="2" ry="2" />
<text  x="81.09" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (5 samples, 0.16%)</title><rect x="96.9" y="309" width="1.8" height="15.0" fill="rgb(210,194,42)" rx="2" ry="2" />
<text  x="99.86" y="319.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%)</title><rect x="1147.3" y="613" width="0.4" height="15.0" fill="rgb(215,139,29)" rx="2" ry="2" />
<text  x="1150.31" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%)</title><rect x="90.2" y="373" width="0.4" height="15.0" fill="rgb(207,153,34)" rx="2" ry="2" />
<text  x="93.24" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%)</title><rect x="76.3" y="229" width="0.3" height="15.0" fill="rgb(250,167,35)" rx="2" ry="2" />
<text  x="79.25" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%)</title><rect x="626.5" y="501" width="0.4" height="15.0" fill="rgb(227,103,19)" rx="2" ry="2" />
<text  x="629.50" y="511.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,718 samples, 84.78%)</title><rect x="153.2" y="725" width="1000.4" height="15.0" fill="rgb(247,110,44)" rx="2" ry="2" />
<text  x="156.18" y="735.5" >seastar::app_template::run</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (90 samples, 2.81%)</title><rect x="77.0" y="469" width="33.1" height="15.0" fill="rgb(234,61,4)" rx="2" ry="2" />
<text  x="79.99" y="479.5" >cq..</text>
</g>
<g >
<title>auth::resource::parent (5 samples, 0.16%)</title><rect x="801.0" y="517" width="1.8" height="15.0" fill="rgb(250,47,16)" rx="2" ry="2" />
<text  x="803.96" y="527.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (1 samples, 0.03%)</title><rect x="899.2" y="485" width="0.4" height="15.0" fill="rgb(210,81,39)" rx="2" ry="2" />
<text  x="902.23" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="1189.3" y="741" width="0.3" height="15.0" fill="rgb(224,127,9)" rx="2" ry="2" />
<text  x="1192.26" y="751.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%)</title><rect x="113.8" y="213" width="0.4" height="15.0" fill="rgb(221,10,13)" rx="2" ry="2" />
<text  x="116.79" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="1025.8" y="405" width="0.4" height="15.0" fill="rgb(250,150,12)" rx="2" ry="2" />
<text  x="1028.85" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%)</title><rect x="67.0" y="469" width="0.8" height="15.0" fill="rgb(248,124,1)" rx="2" ry="2" />
<text  x="70.05" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="120.8" y="229" width="0.4" height="15.0" fill="rgb(250,151,12)" rx="2" ry="2" />
<text  x="123.79" y="239.5" ></text>
</g>
<g >
<title>clustering_key_prefix::clustering_key_prefix (1 samples, 0.03%)</title><rect x="1104.2" y="469" width="0.4" height="15.0" fill="rgb(208,23,44)" rx="2" ry="2" />
<text  x="1107.24" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (1 samples, 0.03%)</title><rect x="134.8" y="581" width="0.3" height="15.0" fill="rgb(212,221,17)" rx="2" ry="2" />
<text  x="137.77" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.06%)</title><rect x="102.8" y="293" width="0.7" height="15.0" fill="rgb(234,124,5)" rx="2" ry="2" />
<text  x="105.75" y="303.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.03%)</title><rect x="635.0" y="533" width="0.3" height="15.0" fill="rgb(239,10,12)" rx="2" ry="2" />
<text  x="637.97" y="543.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%)</title><rect x="36.5" y="373" width="0.7" height="15.0" fill="rgb(213,182,20)" rx="2" ry="2" />
<text  x="39.50" y="383.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%)</title><rect x="932.7" y="533" width="3.3" height="15.0" fill="rgb(228,67,31)" rx="2" ry="2" />
<text  x="935.73" y="543.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_group (1 samples, 0.03%)</title><rect x="152.4" y="485" width="0.4" height="15.0" fill="rgb(226,140,54)" rx="2" ry="2" />
<text  x="155.44" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%)</title><rect x="107.2" y="421" width="0.3" height="15.0" fill="rgb(247,95,21)" rx="2" ry="2" />
<text  x="110.17" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (1 samples, 0.03%)</title><rect x="970.6" y="469" width="0.4" height="15.0" fill="rgb(208,32,32)" rx="2" ry="2" />
<text  x="973.64" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (126 samples, 3.93%)</title><rect x="1028.4" y="485" width="46.4" height="15.0" fill="rgb(237,49,14)" rx="2" ry="2" />
<text  x="1031.42" y="495.5" >serv..</text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.03%)</title><rect x="36.1" y="309" width="0.4" height="15.0" fill="rgb(207,36,17)" rx="2" ry="2" />
<text  x="39.13" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="496.9" y="533" width="0.4" height="15.0" fill="rgb(232,149,2)" rx="2" ry="2" />
<text  x="499.94" y="543.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::prepare (1 samples, 0.03%)</title><rect x="15.9" y="565" width="0.4" height="15.0" fill="rgb(210,65,41)" rx="2" ry="2" />
<text  x="18.89" y="575.5" ></text>
</g>
<g >
<title>do_with_cql_env_thread (1 samples, 0.03%)</title><rect x="138.8" y="709" width="0.4" height="15.0" fill="rgb(242,42,8)" rx="2" ry="2" />
<text  x="141.82" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="96.1" y="325" width="0.4" height="15.0" fill="rgb(211,166,4)" rx="2" ry="2" />
<text  x="99.13" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="261" width="0.4" height="15.0" fill="rgb(239,159,16)" rx="2" ry="2" />
<text  x="123.42" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (2 samples, 0.06%)</title><rect x="674.0" y="613" width="0.7" height="15.0" fill="rgb(220,85,25)" rx="2" ry="2" />
<text  x="676.98" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="114.5" y="357" width="0.4" height="15.0" fill="rgb(217,158,37)" rx="2" ry="2" />
<text  x="117.53" y="367.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,718 samples, 84.78%)</title><rect x="153.2" y="709" width="1000.4" height="15.0" fill="rgb(252,65,26)" rx="2" ry="2" />
<text  x="156.18" y="719.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (3 samples, 0.09%)</title><rect x="94.7" y="357" width="1.1" height="15.0" fill="rgb(247,160,48)" rx="2" ry="2" />
<text  x="97.65" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="389" width="0.4" height="15.0" fill="rgb(223,87,48)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (4 samples, 0.12%)</title><rect x="1134.1" y="613" width="1.4" height="15.0" fill="rgb(214,31,37)" rx="2" ry="2" />
<text  x="1137.05" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="357" width="0.4" height="15.0" fill="rgb(251,194,43)" rx="2" ry="2" />
<text  x="123.42" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (6 samples, 0.19%)</title><rect x="78.8" y="437" width="2.2" height="15.0" fill="rgb(231,78,6)" rx="2" ry="2" />
<text  x="81.83" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::stats (3 samples, 0.09%)</title><rect x="589.0" y="501" width="1.1" height="15.0" fill="rgb(225,83,4)" rx="2" ry="2" />
<text  x="591.96" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="533.0" y="517" width="0.4" height="15.0" fill="rgb(225,56,5)" rx="2" ry="2" />
<text  x="536.01" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%)</title><rect x="560.6" y="485" width="2.2" height="15.0" fill="rgb(222,188,8)" rx="2" ry="2" />
<text  x="563.62" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (17 samples, 0.53%)</title><rect x="330.6" y="405" width="6.2" height="15.0" fill="rgb(240,135,51)" rx="2" ry="2" />
<text  x="333.58" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restriction&gt;::~shared_ptr_count_for (1 samples, 0.03%)</title><rect x="667.4" y="549" width="0.3" height="15.0" fill="rgb(250,17,42)" rx="2" ry="2" />
<text  x="670.35" y="559.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.03%)</title><rect x="10.7" y="565" width="0.4" height="15.0" fill="rgb(212,116,13)" rx="2" ry="2" />
<text  x="13.74" y="575.5" ></text>
</g>
<g >
<title>clustering_key_prefix::clustering_key_prefix (1 samples, 0.03%)</title><rect x="1105.3" y="453" width="0.4" height="15.0" fill="rgb(238,56,47)" rx="2" ry="2" />
<text  x="1108.35" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%)</title><rect x="728.5" y="613" width="0.7" height="15.0" fill="rgb(251,195,33)" rx="2" ry="2" />
<text  x="731.45" y="623.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (16 samples, 0.50%)</title><rect x="1109.0" y="485" width="5.9" height="15.0" fill="rgb(235,102,8)" rx="2" ry="2" />
<text  x="1112.03" y="495.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="151.7" y="741" width="0.4" height="15.0" fill="rgb(249,169,14)" rx="2" ry="2" />
<text  x="154.70" y="751.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (1 samples, 0.03%)</title><rect x="15.5" y="581" width="0.4" height="15.0" fill="rgb(218,35,12)" rx="2" ry="2" />
<text  x="18.52" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="549" width="0.4" height="15.0" fill="rgb(238,207,19)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (367 samples, 11.45%)</title><rect x="939.7" y="517" width="135.1" height="15.0" fill="rgb(212,37,22)" rx="2" ry="2" />
<text  x="942.72" y="527.5" >service::storage_..</text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (122 samples, 3.81%)</title><rect x="66.3" y="501" width="44.9" height="15.0" fill="rgb(250,226,29)" rx="2" ry="2" />
<text  x="69.31" y="511.5" >cql3..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="96.1" y="293" width="0.4" height="15.0" fill="rgb(251,76,15)" rx="2" ry="2" />
<text  x="99.13" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%)</title><rect x="1010.8" y="357" width="1.1" height="15.0" fill="rgb(210,112,37)" rx="2" ry="2" />
<text  x="1013.75" y="367.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="93.5" y="213" width="0.4" height="15.0" fill="rgb(251,148,35)" rx="2" ry="2" />
<text  x="96.55" y="223.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (5 samples, 0.16%)</title><rect x="207.6" y="597" width="1.9" height="15.0" fill="rgb(205,91,33)" rx="2" ry="2" />
<text  x="210.65" y="607.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (10 samples, 0.31%)</title><rect x="48.6" y="405" width="3.7" height="15.0" fill="rgb(212,30,12)" rx="2" ry="2" />
<text  x="51.65" y="415.5" ></text>
</g>
<g >
<title>database::has_keyspace (3 samples, 0.09%)</title><rect x="827.1" y="517" width="1.1" height="15.0" fill="rgb(244,0,47)" rx="2" ry="2" />
<text  x="830.09" y="527.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (5 samples, 0.16%)</title><rect x="96.9" y="373" width="1.8" height="15.0" fill="rgb(234,202,9)" rx="2" ry="2" />
<text  x="99.86" y="383.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="71.5" y="293" width="0.3" height="15.0" fill="rgb(249,196,25)" rx="2" ry="2" />
<text  x="74.47" y="303.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.06%)</title><rect x="827.5" y="501" width="0.7" height="15.0" fill="rgb(229,153,24)" rx="2" ry="2" />
<text  x="830.46" y="511.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (53 samples, 1.65%)</title><rect x="504.3" y="549" width="19.5" height="15.0" fill="rgb(232,68,43)" rx="2" ry="2" />
<text  x="507.30" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::~vector (1 samples, 0.03%)</title><rect x="127.8" y="485" width="0.3" height="15.0" fill="rgb(205,87,44)" rx="2" ry="2" />
<text  x="130.78" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%)</title><rect x="66.3" y="469" width="0.4" height="15.0" fill="rgb(210,53,25)" rx="2" ry="2" />
<text  x="69.31" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="78.1" y="421" width="0.7" height="15.0" fill="rgb(242,22,50)" rx="2" ry="2" />
<text  x="81.09" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%)</title><rect x="88.8" y="389" width="0.3" height="15.0" fill="rgb(234,119,28)" rx="2" ry="2" />
<text  x="91.76" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%)</title><rect x="119.7" y="325" width="0.3" height="15.0" fill="rgb(223,94,41)" rx="2" ry="2" />
<text  x="122.68" y="335.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="138.8" y="645" width="0.4" height="15.0" fill="rgb(237,5,53)" rx="2" ry="2" />
<text  x="141.82" y="655.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%)</title><rect x="601.5" y="469" width="1.1" height="15.0" fill="rgb(221,89,10)" rx="2" ry="2" />
<text  x="604.47" y="479.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (4 samples, 0.12%)</title><rect x="111.6" y="405" width="1.5" height="15.0" fill="rgb(214,108,23)" rx="2" ry="2" />
<text  x="114.58" y="415.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.03%)</title><rect x="1171.6" y="757" width="0.4" height="15.0" fill="rgb(232,144,31)" rx="2" ry="2" />
<text  x="1174.60" y="767.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;seastar::file_impl&gt; &gt;, seastar::reactor::open_file_dma (1 samples, 0.03%)</title><rect x="701.2" y="629" width="0.4" height="15.0" fill="rgb(251,4,4)" rx="2" ry="2" />
<text  x="704.22" y="639.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (1 samples, 0.03%)</title><rect x="739.9" y="613" width="0.3" height="15.0" fill="rgb(218,95,23)" rx="2" ry="2" />
<text  x="742.86" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (9 samples, 0.28%)</title><rect x="33.2" y="357" width="3.3" height="15.0" fill="rgb(224,141,0)" rx="2" ry="2" />
<text  x="36.19" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="121.2" y="325" width="0.3" height="15.0" fill="rgb(226,94,42)" rx="2" ry="2" />
<text  x="124.15" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="70.4" y="309" width="0.3" height="15.0" fill="rgb(213,106,50)" rx="2" ry="2" />
<text  x="73.36" y="319.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="121.2" y="213" width="0.3" height="15.0" fill="rgb(252,156,13)" rx="2" ry="2" />
<text  x="124.15" y="223.5" ></text>
</g>
<g >
<title>all (3,206 samples, 100%)</title><rect x="10.0" y="789" width="1180.0" height="15.0" fill="rgb(238,196,13)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%)</title><rect x="380.6" y="469" width="0.4" height="15.0" fill="rgb(239,213,6)" rx="2" ry="2" />
<text  x="383.64" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_M_destroy (1 samples, 0.03%)</title><rect x="123.0" y="373" width="0.4" height="15.0" fill="rgb(218,92,21)" rx="2" ry="2" />
<text  x="125.99" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (26 samples, 0.81%)</title><rect x="15.9" y="581" width="9.6" height="15.0" fill="rgb(217,111,35)" rx="2" ry="2" />
<text  x="18.89" y="591.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1 samples, 0.03%)</title><rect x="1115.3" y="613" width="0.4" height="15.0" fill="rgb(252,58,23)" rx="2" ry="2" />
<text  x="1118.28" y="623.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="88.8" y="325" width="0.3" height="15.0" fill="rgb(254,37,52)" rx="2" ry="2" />
<text  x="91.76" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="1018.5" y="341" width="0.4" height="15.0" fill="rgb(208,56,41)" rx="2" ry="2" />
<text  x="1021.48" y="351.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.03%)</title><rect x="1117.1" y="597" width="0.4" height="15.0" fill="rgb(233,109,18)" rx="2" ry="2" />
<text  x="1120.12" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%)</title><rect x="68.5" y="373" width="1.1" height="15.0" fill="rgb(239,8,53)" rx="2" ry="2" />
<text  x="71.52" y="383.5" ></text>
</g>
<g >
<title>perf_simple_que (3,205 samples, 99.97%)</title><rect x="10.0" y="773" width="1179.6" height="15.0" fill="rgb(251,117,26)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >perf_simple_que</text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="889.7" y="453" width="0.7" height="15.0" fill="rgb(206,210,26)" rx="2" ry="2" />
<text  x="892.66" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.12%)</title><rect x="111.6" y="389" width="1.5" height="15.0" fill="rgb(235,158,48)" rx="2" ry="2" />
<text  x="114.58" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::~_Optional_base (1 samples, 0.03%)</title><rect x="123.0" y="405" width="0.4" height="15.0" fill="rgb(219,226,21)" rx="2" ry="2" />
<text  x="125.99" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="306.3" y="437" width="0.7" height="15.0" fill="rgb(220,173,53)" rx="2" ry="2" />
<text  x="309.29" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="95.8" y="357" width="0.3" height="15.0" fill="rgb(208,193,0)" rx="2" ry="2" />
<text  x="98.76" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.06%)</title><rect x="41.3" y="325" width="0.7" height="15.0" fill="rgb(240,204,23)" rx="2" ry="2" />
<text  x="44.29" y="335.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (3 samples, 0.09%)</title><rect x="55.3" y="453" width="1.1" height="15.0" fill="rgb(249,106,26)" rx="2" ry="2" />
<text  x="58.27" y="463.5" ></text>
</g>
<g >
<title>reader_permit::signal (2 samples, 0.06%)</title><rect x="389.5" y="517" width="0.7" height="15.0" fill="rgb(234,18,7)" rx="2" ry="2" />
<text  x="392.47" y="527.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%)</title><rect x="711.2" y="613" width="1.8" height="15.0" fill="rgb(231,179,3)" rx="2" ry="2" />
<text  x="714.15" y="623.5" ></text>
</g>
<g >
<title>seastar::reactor::run (2,717 samples, 84.75%)</title><rect x="153.2" y="677" width="1000.0" height="15.0" fill="rgb(253,87,34)" rx="2" ry="2" />
<text  x="156.18" y="687.5" >seastar::reactor::run</text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (30 samples, 0.94%)</title><rect x="1011.9" y="389" width="11.0" height="15.0" fill="rgb(253,164,13)" rx="2" ry="2" />
<text  x="1014.86" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (73 samples, 2.28%)</title><rect x="29.9" y="485" width="26.8" height="15.0" fill="rgb(254,101,2)" rx="2" ry="2" />
<text  x="32.88" y="495.5" >a..</text>
</g>
<g >
<title>table::make_reader (1 samples, 0.03%)</title><rect x="637.5" y="565" width="0.4" height="15.0" fill="rgb(243,23,9)" rx="2" ry="2" />
<text  x="640.54" y="575.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%)</title><rect x="1074.4" y="453" width="0.4" height="15.0" fill="rgb(221,60,3)" rx="2" ry="2" />
<text  x="1077.43" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_function_statement, std::default_delete&lt;cql3::statements::drop_function_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="131.5" y="533" width="0.3" height="15.0" fill="rgb(236,77,37)" rx="2" ry="2" />
<text  x="134.46" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="592.6" y="485" width="0.4" height="15.0" fill="rgb(237,33,44)" rx="2" ry="2" />
<text  x="595.64" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (7 samples, 0.22%)</title><rect x="478.5" y="517" width="2.6" height="15.0" fill="rgb(239,219,16)" rx="2" ry="2" />
<text  x="481.54" y="527.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_keyspaces (1 samples, 0.03%)</title><rect x="183.4" y="613" width="0.3" height="15.0" fill="rgb(228,78,12)" rx="2" ry="2" />
<text  x="186.36" y="623.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (1 samples, 0.03%)</title><rect x="23.6" y="485" width="0.4" height="15.0" fill="rgb(228,202,16)" rx="2" ry="2" />
<text  x="26.62" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (4 samples, 0.12%)</title><rect x="28.0" y="533" width="1.5" height="15.0" fill="rgb(243,139,19)" rx="2" ry="2" />
<text  x="31.03" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="112.7" y="245" width="0.4" height="15.0" fill="rgb(228,2,20)" rx="2" ry="2" />
<text  x="115.69" y="255.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (4 samples, 0.12%)</title><rect x="660.7" y="629" width="1.5" height="15.0" fill="rgb(207,23,52)" rx="2" ry="2" />
<text  x="663.73" y="639.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (11 samples, 0.34%)</title><rect x="300.8" y="453" width="4.0" height="15.0" fill="rgb(251,190,17)" rx="2" ry="2" />
<text  x="303.77" y="463.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="611.0" y="501" width="0.8" height="15.0" fill="rgb(219,102,12)" rx="2" ry="2" />
<text  x="614.04" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%)</title><rect x="661.8" y="613" width="0.4" height="15.0" fill="rgb(210,221,5)" rx="2" ry="2" />
<text  x="664.83" y="623.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%)</title><rect x="184.5" y="501" width="0.3" height="15.0" fill="rgb(243,176,18)" rx="2" ry="2" />
<text  x="187.46" y="511.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.03%)</title><rect x="184.5" y="549" width="0.3" height="15.0" fill="rgb(235,34,16)" rx="2" ry="2" />
<text  x="187.46" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="84.3" y="389" width="0.4" height="15.0" fill="rgb(242,4,45)" rx="2" ry="2" />
<text  x="87.35" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="57.8" y="469" width="0.4" height="15.0" fill="rgb(227,59,39)" rx="2" ry="2" />
<text  x="60.85" y="479.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (12 samples, 0.37%)</title><rect x="1103.1" y="485" width="4.5" height="15.0" fill="rgb(223,89,35)" rx="2" ry="2" />
<text  x="1106.14" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%)</title><rect x="118.6" y="293" width="0.3" height="15.0" fill="rgb(214,14,41)" rx="2" ry="2" />
<text  x="121.58" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (6 samples, 0.19%)</title><rect x="85.8" y="341" width="2.2" height="15.0" fill="rgb(231,174,2)" rx="2" ry="2" />
<text  x="88.82" y="351.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%)</title><rect x="874.2" y="549" width="0.4" height="15.0" fill="rgb(220,227,4)" rx="2" ry="2" />
<text  x="877.20" y="559.5" ></text>
</g>
<g >
<title>database::do_apply (26 samples, 0.81%)</title><rect x="1099.5" y="565" width="9.5" height="15.0" fill="rgb(237,9,51)" rx="2" ry="2" />
<text  x="1102.46" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="67.0" y="357" width="0.4" height="15.0" fill="rgb(246,86,16)" rx="2" ry="2" />
<text  x="70.05" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%)</title><rect x="71.1" y="437" width="0.4" height="15.0" fill="rgb(242,159,22)" rx="2" ry="2" />
<text  x="74.10" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (17 samples, 0.53%)</title><rect x="662.2" y="629" width="6.3" height="15.0" fill="rgb(222,122,54)" rx="2" ry="2" />
<text  x="665.20" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="92.4" y="101" width="0.4" height="15.0" fill="rgb(242,46,29)" rx="2" ry="2" />
<text  x="95.45" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="174.2" y="597" width="0.7" height="15.0" fill="rgb(246,175,31)" rx="2" ry="2" />
<text  x="177.15" y="607.5" ></text>
</g>
<g >
<title>do_with_cql_env_thread (1 samples, 0.03%)</title><rect x="152.4" y="725" width="0.4" height="15.0" fill="rgb(215,119,8)" rx="2" ry="2" />
<text  x="155.44" y="735.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (1 samples, 0.03%)</title><rect x="667.4" y="597" width="0.3" height="15.0" fill="rgb(231,210,51)" rx="2" ry="2" />
<text  x="670.35" y="607.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::StackType (1 samples, 0.03%)</title><rect x="26.6" y="469" width="0.3" height="15.0" fill="rgb(254,43,51)" rx="2" ry="2" />
<text  x="29.56" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="686.5" y="597" width="0.4" height="15.0" fill="rgb(225,216,23)" rx="2" ry="2" />
<text  x="689.49" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="61.2" y="421" width="0.3" height="15.0" fill="rgb(213,88,7)" rx="2" ry="2" />
<text  x="64.16" y="431.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.06%)</title><rect x="675.5" y="597" width="0.7" height="15.0" fill="rgb(235,114,0)" rx="2" ry="2" />
<text  x="678.45" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="105.0" y="277" width="0.3" height="15.0" fill="rgb(220,132,16)" rx="2" ry="2" />
<text  x="107.96" y="287.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="796.2" y="533" width="0.7" height="15.0" fill="rgb(254,48,17)" rx="2" ry="2" />
<text  x="799.18" y="543.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (27 samples, 0.84%)</title><rect x="1099.1" y="581" width="9.9" height="15.0" fill="rgb(206,221,26)" rx="2" ry="2" />
<text  x="1102.09" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="75.9" y="293" width="0.7" height="15.0" fill="rgb(208,21,25)" rx="2" ry="2" />
<text  x="78.88" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%)</title><rect x="122.3" y="437" width="0.3" height="15.0" fill="rgb(206,3,36)" rx="2" ry="2" />
<text  x="125.26" y="447.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (2 samples, 0.06%)</title><rect x="475.6" y="533" width="0.7" height="15.0" fill="rgb(249,201,49)" rx="2" ry="2" />
<text  x="478.60" y="543.5" ></text>
</g>
<g >
<title>syscall-0 (1 samples, 0.03%)</title><rect x="1189.6" y="773" width="0.4" height="15.0" fill="rgb(254,188,10)" rx="2" ry="2" />
<text  x="1192.63" y="783.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%)</title><rect x="208.4" y="581" width="0.4" height="15.0" fill="rgb(240,138,20)" rx="2" ry="2" />
<text  x="211.38" y="591.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="83.6" y="341" width="0.4" height="15.0" fill="rgb(230,9,29)" rx="2" ry="2" />
<text  x="86.61" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_initialize_map (1 samples, 0.03%)</title><rect x="26.6" y="421" width="0.3" height="15.0" fill="rgb(209,21,38)" rx="2" ry="2" />
<text  x="29.56" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.09%)</title><rect x="102.4" y="357" width="1.1" height="15.0" fill="rgb(210,199,26)" rx="2" ry="2" />
<text  x="105.38" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (2 samples, 0.06%)</title><rect x="100.2" y="389" width="0.7" height="15.0" fill="rgb(234,11,24)" rx="2" ry="2" />
<text  x="103.17" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="95.8" y="341" width="0.3" height="15.0" fill="rgb(248,113,5)" rx="2" ry="2" />
<text  x="98.76" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="122.3" y="421" width="0.3" height="15.0" fill="rgb(212,66,31)" rx="2" ry="2" />
<text  x="125.26" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="60.1" y="437" width="0.3" height="15.0" fill="rgb(213,221,50)" rx="2" ry="2" />
<text  x="63.06" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="92.4" y="213" width="0.4" height="15.0" fill="rgb(216,10,15)" rx="2" ry="2" />
<text  x="95.45" y="223.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%)</title><rect x="439.5" y="533" width="0.4" height="15.0" fill="rgb(209,45,4)" rx="2" ry="2" />
<text  x="442.53" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="120.8" y="277" width="0.4" height="15.0" fill="rgb(207,92,35)" rx="2" ry="2" />
<text  x="123.79" y="287.5" ></text>
</g>
<g >
<title>handle_intel.constprop.0 (1 samples, 0.03%)</title><rect x="1172.0" y="757" width="0.3" height="15.0" fill="rgb(234,189,50)" rx="2" ry="2" />
<text  x="1174.97" y="767.5" ></text>
</g>
<g >
<title>service::storage_service::join_cluster (1 samples, 0.03%)</title><rect x="12.6" y="661" width="0.3" height="15.0" fill="rgb(232,141,9)" rx="2" ry="2" />
<text  x="15.58" y="671.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (2 samples, 0.06%)</title><rect x="26.2" y="517" width="0.7" height="15.0" fill="rgb(254,6,30)" rx="2" ry="2" />
<text  x="29.19" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (2 samples, 0.06%)</title><rect x="75.9" y="261" width="0.7" height="15.0" fill="rgb(228,132,48)" rx="2" ry="2" />
<text  x="78.88" y="271.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%)</title><rect x="79.9" y="389" width="0.8" height="15.0" fill="rgb(219,14,6)" rx="2" ry="2" />
<text  x="82.93" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.37%)</title><rect x="885.2" y="437" width="4.5" height="15.0" fill="rgb(217,121,38)" rx="2" ry="2" />
<text  x="888.25" y="447.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.03%)</title><rect x="1147.3" y="597" width="0.4" height="15.0" fill="rgb(230,4,54)" rx="2" ry="2" />
<text  x="1150.31" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="74.4" y="389" width="0.4" height="15.0" fill="rgb(247,37,3)" rx="2" ry="2" />
<text  x="77.41" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="121.5" y="325" width="0.4" height="15.0" fill="rgb(245,188,17)" rx="2" ry="2" />
<text  x="124.52" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%)</title><rect x="278.7" y="501" width="0.4" height="15.0" fill="rgb(206,135,31)" rx="2" ry="2" />
<text  x="281.68" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="96.1" y="229" width="0.4" height="15.0" fill="rgb(242,162,2)" rx="2" ry="2" />
<text  x="99.13" y="239.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (1 samples, 0.03%)</title><rect x="1117.1" y="613" width="0.4" height="15.0" fill="rgb(249,151,2)" rx="2" ry="2" />
<text  x="1120.12" y="623.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (335 samples, 10.45%)</title><rect x="14.8" y="629" width="123.3" height="15.0" fill="rgb(218,190,24)" rx="2" ry="2" />
<text  x="17.78" y="639.5" >single_node_cql..</text>
</g>
<g >
<title>unsigned_vint::serialize (1 samples, 0.03%)</title><rect x="147.7" y="581" width="0.3" height="15.0" fill="rgb(206,210,12)" rx="2" ry="2" />
<text  x="150.65" y="591.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%)</title><rect x="35.0" y="261" width="0.4" height="15.0" fill="rgb(227,137,27)" rx="2" ry="2" />
<text  x="38.03" y="271.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%)</title><rect x="298.6" y="453" width="0.3" height="15.0" fill="rgb(224,212,44)" rx="2" ry="2" />
<text  x="301.56" y="463.5" ></text>
</g>
<g >
<title>db::system_keyspace::legacy::columns (1 samples, 0.03%)</title><rect x="138.8" y="389" width="0.4" height="15.0" fill="rgb(240,8,27)" rx="2" ry="2" />
<text  x="141.82" y="399.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (6 samples, 0.19%)</title><rect x="987.9" y="421" width="2.2" height="15.0" fill="rgb(223,117,5)" rx="2" ry="2" />
<text  x="990.94" y="431.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (2 samples, 0.06%)</title><rect x="892.6" y="453" width="0.7" height="15.0" fill="rgb(211,155,5)" rx="2" ry="2" />
<text  x="895.61" y="463.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="72.6" y="277" width="0.3" height="15.0" fill="rgb(210,40,18)" rx="2" ry="2" />
<text  x="75.57" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%)</title><rect x="849.2" y="629" width="0.3" height="15.0" fill="rgb(206,28,6)" rx="2" ry="2" />
<text  x="852.18" y="639.5" ></text>
</g>
<g >
<title>database::apply_in_memory (21 samples, 0.66%)</title><rect x="1100.6" y="533" width="7.7" height="15.0" fill="rgb(247,76,26)" rx="2" ry="2" />
<text  x="1103.56" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="84.3" y="309" width="0.4" height="15.0" fill="rgb(253,50,51)" rx="2" ry="2" />
<text  x="87.35" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (8 samples, 0.25%)</title><rect x="96.5" y="421" width="2.9" height="15.0" fill="rgb(253,76,35)" rx="2" ry="2" />
<text  x="99.49" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="124.8" y="453" width="0.4" height="15.0" fill="rgb(237,52,9)" rx="2" ry="2" />
<text  x="127.83" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (1 samples, 0.03%)</title><rect x="21.4" y="485" width="0.4" height="15.0" fill="rgb(208,205,27)" rx="2" ry="2" />
<text  x="24.41" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (4 samples, 0.12%)</title><rect x="852.9" y="501" width="1.4" height="15.0" fill="rgb(237,41,28)" rx="2" ry="2" />
<text  x="855.86" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::raw::select_statement*, std::default_delete&lt;cql3::statements::raw::select_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%)</title><rect x="130.7" y="469" width="0.4" height="15.0" fill="rgb(249,229,17)" rx="2" ry="2" />
<text  x="133.72" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%)</title><rect x="120.0" y="405" width="0.4" height="15.0" fill="rgb(230,94,4)" rx="2" ry="2" />
<text  x="123.05" y="415.5" ></text>
</g>
<g >
<title>table::apply (21 samples, 0.66%)</title><rect x="1100.6" y="517" width="7.7" height="15.0" fill="rgb(238,223,13)" rx="2" ry="2" />
<text  x="1103.56" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (2 samples, 0.06%)</title><rect x="37.2" y="341" width="0.8" height="15.0" fill="rgb(228,137,38)" rx="2" ry="2" />
<text  x="40.24" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="121.2" y="277" width="0.3" height="15.0" fill="rgb(219,4,54)" rx="2" ry="2" />
<text  x="124.15" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%)</title><rect x="28.0" y="341" width="0.8" height="15.0" fill="rgb(246,119,18)" rx="2" ry="2" />
<text  x="31.03" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (2 samples, 0.06%)</title><rect x="100.9" y="373" width="0.7" height="15.0" fill="rgb(208,213,37)" rx="2" ry="2" />
<text  x="103.91" y="383.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%)</title><rect x="149.1" y="661" width="0.4" height="15.0" fill="rgb(241,177,33)" rx="2" ry="2" />
<text  x="152.13" y="671.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_c2eb3a58b89a22ac54ffafe47dd7c1e87bea2236] (1 samples, 0.03%)</title><rect x="449.1" y="501" width="0.4" height="15.0" fill="rgb(234,187,26)" rx="2" ry="2" />
<text  x="452.10" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (1 samples, 0.03%)</title><rect x="10.4" y="373" width="0.3" height="15.0" fill="rgb(244,187,25)" rx="2" ry="2" />
<text  x="13.37" y="383.5" ></text>
</g>
<g >
<title>to_hex (1 samples, 0.03%)</title><rect x="138.1" y="629" width="0.4" height="15.0" fill="rgb(221,81,5)" rx="2" ry="2" />
<text  x="141.08" y="639.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="171.6" y="581" width="0.7" height="15.0" fill="rgb(229,63,34)" rx="2" ry="2" />
<text  x="174.58" y="591.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="78.1" y="309" width="0.4" height="15.0" fill="rgb(220,219,5)" rx="2" ry="2" />
<text  x="81.09" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%)</title><rect x="1012.2" y="357" width="2.6" height="15.0" fill="rgb(247,70,18)" rx="2" ry="2" />
<text  x="1015.23" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="74.8" y="421" width="0.3" height="15.0" fill="rgb(221,174,9)" rx="2" ry="2" />
<text  x="77.78" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="612.1" y="517" width="0.4" height="15.0" fill="rgb(213,119,11)" rx="2" ry="2" />
<text  x="615.15" y="527.5" ></text>
</g>
<g >
<title>from_hex (1 samples, 0.03%)</title><rect x="22.1" y="421" width="0.4" height="15.0" fill="rgb(225,159,51)" rx="2" ry="2" />
<text  x="25.15" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.03%)</title><rect x="927.2" y="533" width="0.4" height="15.0" fill="rgb(207,202,27)" rx="2" ry="2" />
<text  x="930.21" y="543.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%)</title><rect x="745.8" y="613" width="2.5" height="15.0" fill="rgb(237,201,44)" rx="2" ry="2" />
<text  x="748.75" y="623.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (2 samples, 0.06%)</title><rect x="147.3" y="645" width="0.7" height="15.0" fill="rgb(208,12,34)" rx="2" ry="2" />
<text  x="150.29" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%)</title><rect x="87.3" y="133" width="0.4" height="15.0" fill="rgb(253,15,25)" rx="2" ry="2" />
<text  x="90.29" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="74.4" y="309" width="0.4" height="15.0" fill="rgb(253,5,49)" rx="2" ry="2" />
<text  x="77.41" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="78.5" y="293" width="0.3" height="15.0" fill="rgb(211,10,13)" rx="2" ry="2" />
<text  x="81.46" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_UPDATE (1 samples, 0.03%)</title><rect x="47.2" y="405" width="0.3" height="15.0" fill="rgb(214,226,27)" rx="2" ry="2" />
<text  x="50.17" y="415.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (8 samples, 0.25%)</title><rect x="517.2" y="485" width="2.9" height="15.0" fill="rgb(254,108,6)" rx="2" ry="2" />
<text  x="520.19" y="495.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (2 samples, 0.06%)</title><rect x="577.2" y="517" width="0.7" height="15.0" fill="rgb(252,33,19)" rx="2" ry="2" />
<text  x="580.18" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (3 samples, 0.09%)</title><rect x="118.6" y="357" width="1.1" height="15.0" fill="rgb(244,10,9)" rx="2" ry="2" />
<text  x="121.58" y="367.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (2 samples, 0.06%)</title><rect x="559.1" y="501" width="0.8" height="15.0" fill="rgb(239,86,45)" rx="2" ry="2" />
<text  x="562.15" y="511.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%)</title><rect x="76.6" y="437" width="0.4" height="15.0" fill="rgb(237,163,47)" rx="2" ry="2" />
<text  x="79.62" y="447.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::start&lt;std::reference_wrapper&lt;db::config&gt;, database_config&amp;, std::reference_wrapper&lt;seastar::sharded&lt;service::migration_notifier&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;gms::feature_service&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;locator::shared_token_metadata&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;seastar::abort_source&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt; &gt;, utils::cross_shard_barrier&gt; (1 samples, 0.03%)</title><rect x="152.4" y="613" width="0.4" height="15.0" fill="rgb(248,155,16)" rx="2" ry="2" />
<text  x="155.44" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="134.4" y="533" width="0.4" height="15.0" fill="rgb(241,219,17)" rx="2" ry="2" />
<text  x="137.40" y="543.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="59.0" y="421" width="0.3" height="15.0" fill="rgb(233,0,33)" rx="2" ry="2" />
<text  x="61.95" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%)</title><rect x="73.3" y="421" width="0.4" height="15.0" fill="rgb(210,189,53)" rx="2" ry="2" />
<text  x="76.31" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (13 samples, 0.41%)</title><rect x="851.0" y="533" width="4.8" height="15.0" fill="rgb(241,79,29)" rx="2" ry="2" />
<text  x="854.02" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (15 samples, 0.47%)</title><rect x="91.0" y="405" width="5.5" height="15.0" fill="rgb(214,19,4)" rx="2" ry="2" />
<text  x="93.97" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%)</title><rect x="740.2" y="629" width="0.8" height="15.0" fill="rgb(218,108,23)" rx="2" ry="2" />
<text  x="743.23" y="639.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (2 samples, 0.06%)</title><rect x="26.2" y="485" width="0.7" height="15.0" fill="rgb(254,134,44)" rx="2" ry="2" />
<text  x="29.19" y="495.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%)</title><rect x="681.7" y="597" width="1.8" height="15.0" fill="rgb(232,122,11)" rx="2" ry="2" />
<text  x="684.71" y="607.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (38 samples, 1.19%)</title><rect x="710.8" y="629" width="14.0" height="15.0" fill="rgb(224,139,33)" rx="2" ry="2" />
<text  x="713.79" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (4 samples, 0.12%)</title><rect x="292.3" y="485" width="1.5" height="15.0" fill="rgb(231,10,14)" rx="2" ry="2" />
<text  x="295.30" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="15.5" y="549" width="0.4" height="15.0" fill="rgb(206,94,1)" rx="2" ry="2" />
<text  x="18.52" y="559.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (16 samples, 0.50%)</title><rect x="1109.0" y="613" width="5.9" height="15.0" fill="rgb(229,137,16)" rx="2" ry="2" />
<text  x="1112.03" y="623.5" ></text>
</g>
<g >
<title>db::schema_tables::read_schema_partition_for_keyspace (1 samples, 0.03%)</title><rect x="184.1" y="597" width="0.4" height="15.0" fill="rgb(208,82,28)" rx="2" ry="2" />
<text  x="187.09" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (2 samples, 0.06%)</title><rect x="24.0" y="517" width="0.7" height="15.0" fill="rgb(217,4,43)" rx="2" ry="2" />
<text  x="26.99" y="527.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.06%)</title><rect x="1139.6" y="613" width="0.7" height="15.0" fill="rgb(227,91,22)" rx="2" ry="2" />
<text  x="1142.58" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (6 samples, 0.19%)</title><rect x="85.8" y="309" width="2.2" height="15.0" fill="rgb(233,27,47)" rx="2" ry="2" />
<text  x="88.82" y="319.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%)</title><rect x="1041.3" y="453" width="0.4" height="15.0" fill="rgb(227,86,31)" rx="2" ry="2" />
<text  x="1044.30" y="463.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (6 samples, 0.19%)</title><rect x="85.8" y="373" width="2.2" height="15.0" fill="rgb(228,101,19)" rx="2" ry="2" />
<text  x="88.82" y="383.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.03%)</title><rect x="10.0" y="341" width="0.4" height="15.0" fill="rgb(208,47,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (3 samples, 0.09%)</title><rect x="40.9" y="341" width="1.1" height="15.0" fill="rgb(205,211,40)" rx="2" ry="2" />
<text  x="43.92" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%)</title><rect x="119.7" y="293" width="0.3" height="15.0" fill="rgb(231,123,45)" rx="2" ry="2" />
<text  x="122.68" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%)</title><rect x="368.5" y="437" width="0.4" height="15.0" fill="rgb(217,207,9)" rx="2" ry="2" />
<text  x="371.49" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="112.3" y="309" width="0.8" height="15.0" fill="rgb(228,73,7)" rx="2" ry="2" />
<text  x="115.32" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%)</title><rect x="734.7" y="597" width="0.4" height="15.0" fill="rgb(215,106,17)" rx="2" ry="2" />
<text  x="737.71" y="607.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (1 samples, 0.03%)</title><rect x="37.6" y="277" width="0.4" height="15.0" fill="rgb(238,164,31)" rx="2" ry="2" />
<text  x="40.60" y="287.5" ></text>
</g>
<g >
<title>abstract_type::from_string (1 samples, 0.03%)</title><rect x="22.1" y="453" width="0.4" height="15.0" fill="rgb(207,15,20)" rx="2" ry="2" />
<text  x="25.15" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; (1 samples, 0.03%)</title><rect x="83.6" y="245" width="0.4" height="15.0" fill="rgb(233,80,53)" rx="2" ry="2" />
<text  x="86.61" y="255.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (3 samples, 0.09%)</title><rect x="776.3" y="517" width="1.1" height="15.0" fill="rgb(227,107,7)" rx="2" ry="2" />
<text  x="779.30" y="527.5" ></text>
</g>
<g >
<title>db::schema_tables::query_partition_mutation (1 samples, 0.03%)</title><rect x="185.2" y="629" width="0.4" height="15.0" fill="rgb(237,93,33)" rx="2" ry="2" />
<text  x="188.20" y="639.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.03%)</title><rect x="1151.4" y="549" width="0.3" height="15.0" fill="rgb(237,112,42)" rx="2" ry="2" />
<text  x="1154.35" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="91.7" y="341" width="0.4" height="15.0" fill="rgb(250,92,5)" rx="2" ry="2" />
<text  x="94.71" y="351.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="23.6" y="405" width="0.4" height="15.0" fill="rgb(241,147,54)" rx="2" ry="2" />
<text  x="26.62" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.06%)</title><rect x="37.2" y="373" width="0.8" height="15.0" fill="rgb(253,156,43)" rx="2" ry="2" />
<text  x="40.24" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%)</title><rect x="117.8" y="341" width="0.4" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="120.84" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (16 samples, 0.50%)</title><rect x="1109.0" y="501" width="5.9" height="15.0" fill="rgb(220,50,43)" rx="2" ry="2" />
<text  x="1112.03" y="511.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="99.4" y="325" width="0.4" height="15.0" fill="rgb(238,82,35)" rx="2" ry="2" />
<text  x="102.44" y="335.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="61.5" y="341" width="0.4" height="15.0" fill="rgb(242,179,52)" rx="2" ry="2" />
<text  x="64.53" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="31.7" y="421" width="0.4" height="15.0" fill="rgb(239,170,13)" rx="2" ry="2" />
<text  x="34.72" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="96.1" y="309" width="0.4" height="15.0" fill="rgb(224,189,5)" rx="2" ry="2" />
<text  x="99.13" y="319.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (13 samples, 0.41%)</title><rect x="838.5" y="581" width="4.8" height="15.0" fill="rgb(220,27,30)" rx="2" ry="2" />
<text  x="841.50" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="10.0" y="485" width="0.4" height="15.0" fill="rgb(206,170,50)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="95.4" y="341" width="0.4" height="15.0" fill="rgb(235,202,48)" rx="2" ry="2" />
<text  x="98.39" y="351.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%)</title><rect x="1081.1" y="517" width="2.9" height="15.0" fill="rgb(247,100,48)" rx="2" ry="2" />
<text  x="1084.05" y="527.5" ></text>
</g>
<g >
<title>canonical_mutation::to_mutation (1 samples, 0.03%)</title><rect x="186.3" y="517" width="0.4" height="15.0" fill="rgb(243,88,41)" rx="2" ry="2" />
<text  x="189.30" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.03%)</title><rect x="1153.2" y="661" width="0.4" height="15.0" fill="rgb(213,70,20)" rx="2" ry="2" />
<text  x="1156.19" y="671.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.03%)</title><rect x="138.5" y="645" width="0.3" height="15.0" fill="rgb(205,28,12)" rx="2" ry="2" />
<text  x="141.45" y="655.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%)</title><rect x="859.9" y="597" width="0.7" height="15.0" fill="rgb(212,123,4)" rx="2" ry="2" />
<text  x="862.85" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%)</title><rect x="92.1" y="293" width="0.3" height="15.0" fill="rgb(252,193,48)" rx="2" ry="2" />
<text  x="95.08" y="303.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_stream (1 samples, 0.03%)</title><rect x="403.5" y="549" width="0.3" height="15.0" fill="rgb(245,59,5)" rx="2" ry="2" />
<text  x="406.46" y="559.5" ></text>
</g>
<g >
<title>abstract_type::from_string (1 samples, 0.03%)</title><rect x="19.6" y="517" width="0.3" height="15.0" fill="rgb(215,108,29)" rx="2" ry="2" />
<text  x="22.57" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="113.8" y="309" width="0.7" height="15.0" fill="rgb(213,110,33)" rx="2" ry="2" />
<text  x="116.79" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.09%)</title><rect x="71.5" y="341" width="1.1" height="15.0" fill="rgb(221,187,48)" rx="2" ry="2" />
<text  x="74.47" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="840.0" y="565" width="0.3" height="15.0" fill="rgb(232,129,38)" rx="2" ry="2" />
<text  x="842.98" y="575.5" ></text>
</g>
<g >
<title>mutation_partition::apply_weak (1 samples, 0.03%)</title><rect x="186.3" y="485" width="0.4" height="15.0" fill="rgb(245,28,29)" rx="2" ry="2" />
<text  x="189.30" y="495.5" ></text>
</g>
<g >
<title>std::move&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%)</title><rect x="93.9" y="293" width="0.4" height="15.0" fill="rgb(208,53,9)" rx="2" ry="2" />
<text  x="96.92" y="303.5" ></text>
</g>
<g >
<title>cql3::cf_name::~cf_name (1 samples, 0.03%)</title><rect x="10.4" y="357" width="0.3" height="15.0" fill="rgb(226,180,33)" rx="2" ry="2" />
<text  x="13.37" y="367.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.03%)</title><rect x="12.6" y="549" width="0.3" height="15.0" fill="rgb(218,104,52)" rx="2" ry="2" />
<text  x="15.58" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="788.4" y="549" width="0.4" height="15.0" fill="rgb(227,108,9)" rx="2" ry="2" />
<text  x="791.45" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="117.8" y="405" width="0.4" height="15.0" fill="rgb(218,61,20)" rx="2" ry="2" />
<text  x="120.84" y="415.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="10.4" y="565" width="0.3" height="15.0" fill="rgb(235,87,8)" rx="2" ry="2" />
<text  x="13.37" y="575.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (1 samples, 0.03%)</title><rect x="176.7" y="597" width="0.4" height="15.0" fill="rgb(234,89,34)" rx="2" ry="2" />
<text  x="179.73" y="607.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (1 samples, 0.03%)</title><rect x="128.5" y="517" width="0.4" height="15.0" fill="rgb(238,199,53)" rx="2" ry="2" />
<text  x="131.52" y="527.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.50%)</title><rect x="1109.0" y="517" width="5.9" height="15.0" fill="rgb(236,4,5)" rx="2" ry="2" />
<text  x="1112.03" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier_raw, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%)</title><rect x="69.6" y="453" width="0.4" height="15.0" fill="rgb(227,173,15)" rx="2" ry="2" />
<text  x="72.63" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="1114.2" y="389" width="0.3" height="15.0" fill="rgb(237,199,11)" rx="2" ry="2" />
<text  x="1117.18" y="399.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.03%)</title><rect x="298.2" y="453" width="0.4" height="15.0" fill="rgb(235,119,0)" rx="2" ry="2" />
<text  x="301.19" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%)</title><rect x="1104.6" y="437" width="0.4" height="15.0" fill="rgb(227,186,31)" rx="2" ry="2" />
<text  x="1107.61" y="447.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.16%)</title><rect x="67.8" y="453" width="1.8" height="15.0" fill="rgb(241,201,5)" rx="2" ry="2" />
<text  x="70.79" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="61.2" y="357" width="0.3" height="15.0" fill="rgb(249,58,50)" rx="2" ry="2" />
<text  x="64.16" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="1022.2" y="373" width="0.3" height="15.0" fill="rgb(226,229,54)" rx="2" ry="2" />
<text  x="1025.16" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (15 samples, 0.47%)</title><rect x="116.7" y="469" width="5.6" height="15.0" fill="rgb(249,43,20)" rx="2" ry="2" />
<text  x="119.74" y="479.5" ></text>
</g>
<g >
<title>table::query (1,164 samples, 36.31%)</title><rect x="219.1" y="597" width="428.4" height="15.0" fill="rgb(208,86,30)" rx="2" ry="2" />
<text  x="222.06" y="607.5" >table::query</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;2ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="133" width="0.4" height="15.0" fill="rgb(228,174,48)" rx="2" ry="2" />
<text  x="123.42" y="143.5" ></text>
</g>
<g >
<title>cql3::restrictions::has_eq_null (2 samples, 0.06%)</title><rect x="851.8" y="501" width="0.7" height="15.0" fill="rgb(245,185,13)" rx="2" ry="2" />
<text  x="854.75" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="106.8" y="437" width="0.4" height="15.0" fill="rgb(221,92,49)" rx="2" ry="2" />
<text  x="109.80" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="94.3" y="357" width="0.4" height="15.0" fill="rgb(210,35,28)" rx="2" ry="2" />
<text  x="97.29" y="367.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (3 samples, 0.09%)</title><rect x="889.7" y="469" width="1.1" height="15.0" fill="rgb(212,36,4)" rx="2" ry="2" />
<text  x="892.66" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (16 samples, 0.50%)</title><rect x="1109.0" y="469" width="5.9" height="15.0" fill="rgb(252,153,3)" rx="2" ry="2" />
<text  x="1112.03" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="297.5" y="469" width="0.3" height="15.0" fill="rgb(253,145,24)" rx="2" ry="2" />
<text  x="300.45" y="479.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.03%)</title><rect x="138.8" y="469" width="0.4" height="15.0" fill="rgb(250,133,23)" rx="2" ry="2" />
<text  x="141.82" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (8 samples, 0.25%)</title><rect x="33.6" y="341" width="2.9" height="15.0" fill="rgb(233,81,38)" rx="2" ry="2" />
<text  x="36.56" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="97.2" y="165" width="1.1" height="15.0" fill="rgb(229,63,51)" rx="2" ry="2" />
<text  x="100.23" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%)</title><rect x="537.8" y="549" width="2.2" height="15.0" fill="rgb(241,15,24)" rx="2" ry="2" />
<text  x="540.80" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="81.4" y="437" width="0.4" height="15.0" fill="rgb(211,6,5)" rx="2" ry="2" />
<text  x="84.40" y="447.5" ></text>
</g>
<g >
<title>seastar::metrics::metric_groups::add_group (1 samples, 0.03%)</title><rect x="152.4" y="501" width="0.4" height="15.0" fill="rgb(227,126,5)" rx="2" ry="2" />
<text  x="155.44" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="213" width="0.4" height="15.0" fill="rgb(231,20,53)" rx="2" ry="2" />
<text  x="123.42" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="103.9" y="325" width="0.3" height="15.0" fill="rgb(248,25,18)" rx="2" ry="2" />
<text  x="106.86" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%)</title><rect x="634.2" y="517" width="0.4" height="15.0" fill="rgb(239,162,53)" rx="2" ry="2" />
<text  x="637.23" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (10 samples, 0.31%)</title><rect x="516.5" y="501" width="3.6" height="15.0" fill="rgb(230,130,20)" rx="2" ry="2" />
<text  x="519.45" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.9" y="197" width="0.4" height="15.0" fill="rgb(240,154,29)" rx="2" ry="2" />
<text  x="82.93" y="207.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%)</title><rect x="686.9" y="613" width="0.7" height="15.0" fill="rgb(248,64,49)" rx="2" ry="2" />
<text  x="689.86" y="623.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="84.3" y="421" width="0.4" height="15.0" fill="rgb(212,87,6)" rx="2" ry="2" />
<text  x="87.35" y="431.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="152.1" y="709" width="0.3" height="15.0" fill="rgb(223,166,7)" rx="2" ry="2" />
<text  x="155.07" y="719.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (4 samples, 0.12%)</title><rect x="215.4" y="565" width="1.4" height="15.0" fill="rgb(237,156,0)" rx="2" ry="2" />
<text  x="218.38" y="575.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.03%)</title><rect x="146.9" y="613" width="0.4" height="15.0" fill="rgb(252,108,7)" rx="2" ry="2" />
<text  x="149.92" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="728.1" y="613" width="0.4" height="15.0" fill="rgb(233,1,53)" rx="2" ry="2" />
<text  x="731.08" y="623.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="64.5" y="485" width="0.3" height="15.0" fill="rgb(254,45,45)" rx="2" ry="2" />
<text  x="67.47" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.06%)</title><rect x="626.9" y="501" width="0.7" height="15.0" fill="rgb(227,5,17)" rx="2" ry="2" />
<text  x="629.87" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="108.3" y="421" width="0.3" height="15.0" fill="rgb(220,183,49)" rx="2" ry="2" />
<text  x="111.27" y="431.5" ></text>
</g>
<g >
<title>difference&lt;std::map, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::lw_shared_ptr&lt;query::result_set&gt;, seastar::indirect_equal_to&lt;seastar::lw_shared_ptr&lt;query::result_set&gt;, std::equal_to&lt;query::result_set&gt; &gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::lw_shared_ptr&lt;query::result_set&gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="183.4" y="597" width="0.3" height="15.0" fill="rgb(229,12,32)" rx="2" ry="2" />
<text  x="186.36" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="88.8" y="373" width="0.3" height="15.0" fill="rgb(207,70,19)" rx="2" ry="2" />
<text  x="91.76" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="120.8" y="325" width="0.4" height="15.0" fill="rgb(218,92,47)" rx="2" ry="2" />
<text  x="123.79" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%)</title><rect x="107.2" y="405" width="0.3" height="15.0" fill="rgb(226,62,37)" rx="2" ry="2" />
<text  x="110.17" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.09%)</title><rect x="77.7" y="437" width="1.1" height="15.0" fill="rgb(209,137,11)" rx="2" ry="2" />
<text  x="80.72" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (53 samples, 1.65%)</title><rect x="881.2" y="533" width="19.5" height="15.0" fill="rgb(216,183,16)" rx="2" ry="2" />
<text  x="884.20" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::select_on_container_copy_construction (1 samples, 0.03%)</title><rect x="33.9" y="309" width="0.4" height="15.0" fill="rgb(233,89,4)" rx="2" ry="2" />
<text  x="36.92" y="319.5" ></text>
</g>
<g >
<title>database::has_keyspace (7 samples, 0.22%)</title><rect x="840.3" y="565" width="2.6" height="15.0" fill="rgb(228,86,51)" rx="2" ry="2" />
<text  x="843.34" y="575.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (76 samples, 2.37%)</title><rect x="1119.3" y="629" width="28.0" height="15.0" fill="rgb(207,35,18)" rx="2" ry="2" />
<text  x="1122.33" y="639.5" >s..</text>
</g>
<g >
<title>free (3 samples, 0.09%)</title><rect x="432.9" y="501" width="1.1" height="15.0" fill="rgb(217,127,7)" rx="2" ry="2" />
<text  x="435.90" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="890.4" y="453" width="0.4" height="15.0" fill="rgb(235,101,36)" rx="2" ry="2" />
<text  x="893.40" y="463.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (3 samples, 0.09%)</title><rect x="481.1" y="533" width="1.1" height="15.0" fill="rgb(209,178,12)" rx="2" ry="2" />
<text  x="484.12" y="543.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="632.4" y="501" width="0.4" height="15.0" fill="rgb(218,12,46)" rx="2" ry="2" />
<text  x="635.39" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="643.8" y="581" width="0.4" height="15.0" fill="rgb(222,203,38)" rx="2" ry="2" />
<text  x="646.80" y="591.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;seastar::metrics::impl::registered_metric&gt;::shared_ptr_count_for&lt;seastar::metrics::impl::metric_id const&amp;, std::function&lt;seastar::metrics::impl::metric_value  (1 samples, 0.03%)</title><rect x="152.4" y="437" width="0.4" height="15.0" fill="rgb(236,180,40)" rx="2" ry="2" />
<text  x="155.44" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (14 samples, 0.44%)</title><rect x="851.0" y="597" width="5.2" height="15.0" fill="rgb(208,178,12)" rx="2" ry="2" />
<text  x="854.02" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;1ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="120.4" y="117" width="0.4" height="15.0" fill="rgb(216,41,36)" rx="2" ry="2" />
<text  x="123.42" y="127.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%)</title><rect x="1088.0" y="549" width="3.0" height="15.0" fill="rgb(246,127,54)" rx="2" ry="2" />
<text  x="1091.05" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.03%)</title><rect x="35.8" y="325" width="0.3" height="15.0" fill="rgb(239,200,36)" rx="2" ry="2" />
<text  x="38.76" y="335.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_c2eb3a58b89a22ac54ffafe47dd7c1e87bea2236] (1 samples, 0.03%)</title><rect x="784.4" y="549" width="0.4" height="15.0" fill="rgb(237,86,47)" rx="2" ry="2" />
<text  x="787.40" y="559.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="68.5" y="309" width="0.4" height="15.0" fill="rgb(228,113,13)" rx="2" ry="2" />
<text  x="71.52" y="319.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (719 samples, 22.43%)</title><rect x="851.0" y="629" width="264.7" height="15.0" fill="rgb(219,98,20)" rx="2" ry="2" />
<text  x="854.02" y="639.5" >seastar::lambda_task&lt;seastar::execu..</text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.03%)</title><rect x="1106.8" y="453" width="0.4" height="15.0" fill="rgb(244,100,36)" rx="2" ry="2" />
<text  x="1109.82" y="463.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.03%)</title><rect x="970.3" y="469" width="0.3" height="15.0" fill="rgb(207,226,40)" rx="2" ry="2" />
<text  x="973.27" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="15.9" y="533" width="0.4" height="15.0" fill="rgb(247,4,18)" rx="2" ry="2" />
<text  x="18.89" y="543.5" ></text>
</g>
<g >
<title>seastar::reactor::smp_pollfn::try_enter_interrupt_mode (1 samples, 0.03%)</title><rect x="1152.1" y="645" width="0.4" height="15.0" fill="rgb(222,180,46)" rx="2" ry="2" />
<text  x="1155.09" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="1087.7" y="533" width="0.3" height="15.0" fill="rgb(210,77,1)" rx="2" ry="2" />
<text  x="1090.68" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="87.3" y="197" width="0.7" height="15.0" fill="rgb(219,164,44)" rx="2" ry="2" />
<text  x="90.29" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%)</title><rect x="92.8" y="229" width="1.1" height="15.0" fill="rgb(242,143,47)" rx="2" ry="2" />
<text  x="95.81" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="67.8" y="341" width="0.4" height="15.0" fill="rgb(231,77,50)" rx="2" ry="2" />
<text  x="70.79" y="351.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%)</title><rect x="137.3" y="613" width="0.4" height="15.0" fill="rgb(218,75,25)" rx="2" ry="2" />
<text  x="140.35" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (2 samples, 0.06%)</title><rect x="108.6" y="389" width="0.8" height="15.0" fill="rgb(234,208,34)" rx="2" ry="2" />
<text  x="111.64" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="816.8" y="485" width="0.4" height="15.0" fill="rgb(238,196,37)" rx="2" ry="2" />
<text  x="819.79" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%)</title><rect x="214.3" y="565" width="0.7" height="15.0" fill="rgb(233,214,40)" rx="2" ry="2" />
<text  x="217.27" y="575.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.03%)</title><rect x="634.6" y="517" width="0.4" height="15.0" fill="rgb(216,82,28)" rx="2" ry="2" />
<text  x="637.60" y="527.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;seastar::shared_ptr&lt;cql3::relation&gt;*, seastar::shared_ptr&lt;cql3::relation&gt;*, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="124.1" y="405" width="0.4" height="15.0" fill="rgb(247,125,46)" rx="2" ry="2" />
<text  x="127.10" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%)</title><rect x="173.4" y="565" width="0.8" height="15.0" fill="rgb(221,68,36)" rx="2" ry="2" />
<text  x="176.42" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="61.9" y="309" width="0.4" height="15.0" fill="rgb(214,29,10)" rx="2" ry="2" />
<text  x="64.90" y="319.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (5 samples, 0.16%)</title><rect x="43.9" y="405" width="1.8" height="15.0" fill="rgb(207,90,47)" rx="2" ry="2" />
<text  x="46.86" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%)</title><rect x="111.6" y="373" width="0.4" height="15.0" fill="rgb(240,23,20)" rx="2" ry="2" />
<text  x="114.58" y="383.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.41%)</title><rect x="244.5" y="581" width="4.7" height="15.0" fill="rgb(228,34,47)" rx="2" ry="2" />
<text  x="247.45" y="591.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (7 samples, 0.22%)</title><rect x="91.7" y="357" width="2.6" height="15.0" fill="rgb(244,106,7)" rx="2" ry="2" />
<text  x="94.71" y="367.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (3 samples, 0.09%)</title><rect x="122.3" y="469" width="1.1" height="15.0" fill="rgb(212,28,33)" rx="2" ry="2" />
<text  x="125.26" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="61.5" y="421" width="0.8" height="15.0" fill="rgb(229,42,48)" rx="2" ry="2" />
<text  x="64.53" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%)</title><rect x="932.7" y="517" width="3.3" height="15.0" fill="rgb(207,39,25)" rx="2" ry="2" />
<text  x="935.73" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="113.8" y="325" width="0.7" height="15.0" fill="rgb(243,193,6)" rx="2" ry="2" />
<text  x="116.79" y="335.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%)</title><rect x="618.4" y="533" width="1.1" height="15.0" fill="rgb(210,87,27)" rx="2" ry="2" />
<text  x="621.40" y="543.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (14 samples, 0.44%)</title><rect x="851.0" y="565" width="5.2" height="15.0" fill="rgb(248,1,31)" rx="2" ry="2" />
<text  x="854.02" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.12%)</title><rect x="174.9" y="597" width="1.5" height="15.0" fill="rgb(224,119,22)" rx="2" ry="2" />
<text  x="177.89" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="68.5" y="325" width="0.4" height="15.0" fill="rgb(232,35,36)" rx="2" ry="2" />
<text  x="71.52" y="335.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%)</title><rect x="10.4" y="453" width="0.3" height="15.0" fill="rgb(254,30,25)" rx="2" ry="2" />
<text  x="13.37" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="152.4" y="741" width="0.4" height="15.0" fill="rgb(216,2,32)" rx="2" ry="2" />
<text  x="155.44" y="751.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.03%)</title><rect x="24.4" y="501" width="0.3" height="15.0" fill="rgb(253,131,44)" rx="2" ry="2" />
<text  x="27.35" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%)</title><rect x="681.7" y="581" width="1.8" height="15.0" fill="rgb(251,221,45)" rx="2" ry="2" />
<text  x="684.71" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%)</title><rect x="107.5" y="389" width="0.4" height="15.0" fill="rgb(223,162,40)" rx="2" ry="2" />
<text  x="110.54" y="399.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.37%)</title><rect x="885.2" y="453" width="4.5" height="15.0" fill="rgb(234,34,7)" rx="2" ry="2" />
<text  x="888.25" y="463.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.03%)</title><rect x="135.9" y="581" width="0.3" height="15.0" fill="rgb(225,121,21)" rx="2" ry="2" />
<text  x="138.88" y="591.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.22%)</title><rect x="696.4" y="613" width="2.6" height="15.0" fill="rgb(213,93,23)" rx="2" ry="2" />
<text  x="699.43" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="891.1" y="453" width="0.4" height="15.0" fill="rgb(248,67,3)" rx="2" ry="2" />
<text  x="894.14" y="463.5" ></text>
</g>
</g>
</svg>
