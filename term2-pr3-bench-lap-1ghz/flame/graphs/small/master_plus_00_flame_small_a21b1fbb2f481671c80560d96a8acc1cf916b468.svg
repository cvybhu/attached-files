<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="822.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="805" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="805" > </text>
<g id="frames">
<g >
<title>cql3::expr::constant::make_bool (2 samples, 0.06%)</title><rect x="18.4" y="469" width="0.7" height="15.0" fill="rgb(229,150,45)" rx="2" ry="2" />
<text  x="21.38" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="1023.2" y="325" width="0.4" height="15.0" fill="rgb(207,21,21)" rx="2" ry="2" />
<text  x="1026.22" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (5 samples, 0.16%)</title><rect x="75.1" y="421" width="1.9" height="15.0" fill="rgb(252,40,8)" rx="2" ry="2" />
<text  x="78.11" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%)</title><rect x="113.6" y="389" width="0.3" height="15.0" fill="rgb(243,188,46)" rx="2" ry="2" />
<text  x="116.57" y="399.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%)</title><rect x="55.3" y="485" width="0.4" height="15.0" fill="rgb(210,121,14)" rx="2" ry="2" />
<text  x="58.31" y="495.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%)</title><rect x="113.2" y="389" width="0.4" height="15.0" fill="rgb(222,5,14)" rx="2" ry="2" />
<text  x="116.19" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (1 samples, 0.03%)</title><rect x="1187.7" y="741" width="0.4" height="15.0" fill="rgb(245,139,12)" rx="2" ry="2" />
<text  x="1190.72" y="751.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="59.1" y="421" width="0.4" height="15.0" fill="rgb(216,58,30)" rx="2" ry="2" />
<text  x="62.12" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (3 samples, 0.10%)</title><rect x="1094.0" y="533" width="1.2" height="15.0" fill="rgb(229,72,23)" rx="2" ry="2" />
<text  x="1097.05" y="543.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.03%)</title><rect x="136.8" y="677" width="0.4" height="15.0" fill="rgb(253,150,38)" rx="2" ry="2" />
<text  x="139.80" y="687.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS4_12restrictionsL11has_eq_nullERKNS4_13query_optionsERKNS5_10expressionEE3$_8EES8_SI_T_EUlRS7_E_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_8constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_11conjunctionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_12column_valueEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_5tokenEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13function_callEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4castEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_15field_selectionEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_4nullEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_13bind_variableEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_16untyped_constantEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_17tuple_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_22collection_constructorEE_ZNSB_ISJ_EES8_SI_SK_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSR_S6_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_S1V_SN_S1Z_S23_S27_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES2C_S2F_ (1 samples, 0.03%)</title><rect x="844.3" y="469" width="0.3" height="15.0" fill="rgb(224,29,54)" rx="2" ry="2" />
<text  x="847.26" y="479.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::to_string_impl_visitor&gt; (1 samples, 0.03%)</title><rect x="176.0" y="405" width="0.4" height="15.0" fill="rgb(240,0,53)" rx="2" ry="2" />
<text  x="179.01" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%)</title><rect x="1053.7" y="421" width="0.4" height="15.0" fill="rgb(210,15,35)" rx="2" ry="2" />
<text  x="1056.69" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (371 samples, 11.97%)</title><rect x="932.6" y="501" width="141.3" height="15.0" fill="rgb(208,36,30)" rx="2" ry="2" />
<text  x="935.60" y="511.5" >service::storage_..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="60.6" y="261" width="0.4" height="15.0" fill="rgb(210,15,15)" rx="2" ry="2" />
<text  x="63.64" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%)</title><rect x="58.7" y="437" width="0.4" height="15.0" fill="rgb(223,145,48)" rx="2" ry="2" />
<text  x="61.74" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (26 samples, 0.84%)</title><rect x="843.5" y="549" width="9.9" height="15.0" fill="rgb(231,189,42)" rx="2" ry="2" />
<text  x="846.50" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="65.2" y="309" width="0.4" height="15.0" fill="rgb(235,112,0)" rx="2" ry="2" />
<text  x="68.21" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (2,670 samples, 86.16%)</title><rect x="139.5" y="645" width="1016.6" height="15.0" fill="rgb(215,44,46)" rx="2" ry="2" />
<text  x="142.46" y="655.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (8 samples, 0.26%)</title><rect x="82.3" y="373" width="3.1" height="15.0" fill="rgb(216,26,16)" rx="2" ry="2" />
<text  x="85.35" y="383.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="1095.2" y="549" width="0.4" height="15.0" fill="rgb(252,217,10)" rx="2" ry="2" />
<text  x="1098.19" y="559.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%)</title><rect x="517.6" y="517" width="2.2" height="15.0" fill="rgb(225,153,47)" rx="2" ry="2" />
<text  x="520.56" y="527.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.03%)</title><rect x="167.6" y="565" width="0.4" height="15.0" fill="rgb(224,132,27)" rx="2" ry="2" />
<text  x="170.64" y="575.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%)</title><rect x="10.0" y="709" width="0.4" height="15.0" fill="rgb(225,166,19)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::reset&lt;cql3_parser::CqlParser&gt; (1 samples, 0.03%)</title><rect x="24.1" y="485" width="0.4" height="15.0" fill="rgb(226,158,44)" rx="2" ry="2" />
<text  x="27.09" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.03%)</title><rect x="138.3" y="693" width="0.4" height="15.0" fill="rgb(226,6,16)" rx="2" ry="2" />
<text  x="141.32" y="703.5" ></text>
</g>
<g >
<title>seastar::internal::io_pgetevents (1 samples, 0.03%)</title><rect x="1154.6" y="597" width="0.4" height="15.0" fill="rgb(206,71,7)" rx="2" ry="2" />
<text  x="1157.59" y="607.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.03%)</title><rect x="127.7" y="357" width="0.3" height="15.0" fill="rgb(253,49,22)" rx="2" ry="2" />
<text  x="130.66" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.10%)</title><rect x="200.8" y="549" width="1.1" height="15.0" fill="rgb(206,108,30)" rx="2" ry="2" />
<text  x="203.76" y="559.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%)</title><rect x="1081.1" y="501" width="1.9" height="15.0" fill="rgb(253,15,47)" rx="2" ry="2" />
<text  x="1084.10" y="511.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%)</title><rect x="109.8" y="437" width="0.3" height="15.0" fill="rgb(243,145,38)" rx="2" ry="2" />
<text  x="112.76" y="447.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_tokenStartCharIndex (1 samples, 0.03%)</title><rect x="41.2" y="389" width="0.4" height="15.0" fill="rgb(210,55,10)" rx="2" ry="2" />
<text  x="44.22" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (9 samples, 0.29%)</title><rect x="294.8" y="453" width="3.4" height="15.0" fill="rgb(254,168,46)" rx="2" ry="2" />
<text  x="297.81" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (4 samples, 0.13%)</title><rect x="99.1" y="389" width="1.5" height="15.0" fill="rgb(231,131,25)" rx="2" ry="2" />
<text  x="102.10" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="59.1" y="437" width="0.4" height="15.0" fill="rgb(246,112,13)" rx="2" ry="2" />
<text  x="62.12" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%)</title><rect x="69.4" y="373" width="0.4" height="15.0" fill="rgb(235,9,48)" rx="2" ry="2" />
<text  x="72.40" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%)</title><rect x="66.0" y="421" width="0.4" height="15.0" fill="rgb(248,210,48)" rx="2" ry="2" />
<text  x="68.97" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="20.7" y="485" width="0.3" height="15.0" fill="rgb(205,228,0)" rx="2" ry="2" />
<text  x="23.66" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (25 samples, 0.81%)</title><rect x="843.9" y="517" width="9.5" height="15.0" fill="rgb(222,184,22)" rx="2" ry="2" />
<text  x="846.88" y="527.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.06%)</title><rect x="166.9" y="613" width="0.7" height="15.0" fill="rgb(211,164,2)" rx="2" ry="2" />
<text  x="169.88" y="623.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_error (1 samples, 0.03%)</title><rect x="36.7" y="405" width="0.3" height="15.0" fill="rgb(249,28,54)" rx="2" ry="2" />
<text  x="39.65" y="415.5" ></text>
</g>
<g >
<title>db::system_distributed_keyspace::start (1 samples, 0.03%)</title><rect x="175.3" y="613" width="0.3" height="15.0" fill="rgb(253,193,28)" rx="2" ry="2" />
<text  x="178.25" y="623.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (43 samples, 1.39%)</title><rect x="498.5" y="517" width="16.4" height="15.0" fill="rgb(251,198,42)" rx="2" ry="2" />
<text  x="501.53" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.19%)</title><rect x="59.9" y="453" width="2.3" height="15.0" fill="rgb(236,192,54)" rx="2" ry="2" />
<text  x="62.88" y="463.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="112.4" y="373" width="0.4" height="15.0" fill="rgb(234,153,25)" rx="2" ry="2" />
<text  x="115.43" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="114.3" y="277" width="0.4" height="15.0" fill="rgb(220,104,44)" rx="2" ry="2" />
<text  x="117.33" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="94.1" y="213" width="0.4" height="15.0" fill="rgb(205,218,16)" rx="2" ry="2" />
<text  x="97.15" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="65.6" y="261" width="0.4" height="15.0" fill="rgb(217,144,54)" rx="2" ry="2" />
<text  x="68.59" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%)</title><rect x="79.3" y="197" width="0.8" height="15.0" fill="rgb(216,35,6)" rx="2" ry="2" />
<text  x="82.30" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="23.3" y="453" width="0.4" height="15.0" fill="rgb(212,31,38)" rx="2" ry="2" />
<text  x="26.33" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (51 samples, 1.65%)</title><rect x="1054.4" y="453" width="19.5" height="15.0" fill="rgb(232,127,5)" rx="2" ry="2" />
<text  x="1057.45" y="463.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (3 samples, 0.10%)</title><rect x="617.7" y="517" width="1.1" height="15.0" fill="rgb(242,52,37)" rx="2" ry="2" />
<text  x="620.71" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt;::base (1 samples, 0.03%)</title><rect x="74.3" y="421" width="0.4" height="15.0" fill="rgb(223,160,33)" rx="2" ry="2" />
<text  x="77.35" y="431.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (1 samples, 0.03%)</title><rect x="735.4" y="581" width="0.3" height="15.0" fill="rgb(246,149,35)" rx="2" ry="2" />
<text  x="738.36" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="66.0" y="341" width="0.4" height="15.0" fill="rgb(236,22,2)" rx="2" ry="2" />
<text  x="68.97" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (2 samples, 0.06%)</title><rect x="511.9" y="485" width="0.7" height="15.0" fill="rgb(211,85,47)" rx="2" ry="2" />
<text  x="514.85" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="920.0" y="501" width="0.4" height="15.0" fill="rgb(210,69,47)" rx="2" ry="2" />
<text  x="923.04" y="511.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.10%)</title><rect x="728.5" y="613" width="1.2" height="15.0" fill="rgb(235,161,40)" rx="2" ry="2" />
<text  x="731.51" y="623.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.03%)</title><rect x="176.0" y="501" width="0.4" height="15.0" fill="rgb(243,108,13)" rx="2" ry="2" />
<text  x="179.01" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::max_size (1 samples, 0.03%)</title><rect x="76.6" y="389" width="0.4" height="15.0" fill="rgb(231,144,48)" rx="2" ry="2" />
<text  x="79.63" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="107.9" y="293" width="0.3" height="15.0" fill="rgb(246,191,32)" rx="2" ry="2" />
<text  x="110.86" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (259 samples, 8.36%)</title><rect x="286.4" y="485" width="98.7" height="15.0" fill="rgb(248,3,19)" rx="2" ry="2" />
<text  x="289.44" y="495.5" >partition_s..</text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%)</title><rect x="89.2" y="245" width="1.5" height="15.0" fill="rgb(242,136,2)" rx="2" ry="2" />
<text  x="92.20" y="255.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="76.3" y="293" width="0.3" height="15.0" fill="rgb(208,22,20)" rx="2" ry="2" />
<text  x="79.25" y="303.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%)</title><rect x="1119.2" y="613" width="0.4" height="15.0" fill="rgb(252,8,8)" rx="2" ry="2" />
<text  x="1122.18" y="623.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (2 samples, 0.06%)</title><rect x="174.5" y="613" width="0.8" height="15.0" fill="rgb(245,39,27)" rx="2" ry="2" />
<text  x="177.49" y="623.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (9 samples, 0.29%)</title><rect x="1114.2" y="389" width="3.5" height="15.0" fill="rgb(245,159,16)" rx="2" ry="2" />
<text  x="1117.23" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (56 samples, 1.81%)</title><rect x="31.3" y="453" width="21.3" height="15.0" fill="rgb(231,193,26)" rx="2" ry="2" />
<text  x="34.32" y="463.5" >a..</text>
</g>
<g >
<title>cql3::relation::to_column_definition (1 samples, 0.03%)</title><rect x="19.1" y="469" width="0.4" height="15.0" fill="rgb(219,180,1)" rx="2" ry="2" />
<text  x="22.14" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%)</title><rect x="727.4" y="565" width="0.3" height="15.0" fill="rgb(226,189,26)" rx="2" ry="2" />
<text  x="730.37" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="84.2" y="277" width="0.4" height="15.0" fill="rgb(253,73,13)" rx="2" ry="2" />
<text  x="87.25" y="287.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (4 samples, 0.13%)</title><rect x="1102.8" y="517" width="1.5" height="15.0" fill="rgb(208,213,23)" rx="2" ry="2" />
<text  x="1105.80" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="73.2" y="357" width="0.4" height="15.0" fill="rgb(231,202,33)" rx="2" ry="2" />
<text  x="76.21" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (4 samples, 0.13%)</title><rect x="91.5" y="261" width="1.5" height="15.0" fill="rgb(243,154,44)" rx="2" ry="2" />
<text  x="94.48" y="271.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (34 samples, 1.10%)</title><rect x="1104.7" y="533" width="13.0" height="15.0" fill="rgb(212,219,43)" rx="2" ry="2" />
<text  x="1107.71" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="56.5" y="341" width="0.3" height="15.0" fill="rgb(222,114,50)" rx="2" ry="2" />
<text  x="59.45" y="351.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="64.1" y="389" width="0.3" height="15.0" fill="rgb(253,161,44)" rx="2" ry="2" />
<text  x="67.07" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (16 samples, 0.52%)</title><rect x="87.3" y="389" width="6.1" height="15.0" fill="rgb(254,185,21)" rx="2" ry="2" />
<text  x="90.30" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::list_service_level_statement, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="122.7" y="485" width="0.4" height="15.0" fill="rgb(208,112,33)" rx="2" ry="2" />
<text  x="125.71" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%)</title><rect x="106.3" y="293" width="0.4" height="15.0" fill="rgb(212,182,54)" rx="2" ry="2" />
<text  x="109.33" y="303.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.03%)</title><rect x="49.6" y="341" width="0.4" height="15.0" fill="rgb(241,77,25)" rx="2" ry="2" />
<text  x="52.60" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="115.5" y="229" width="0.4" height="15.0" fill="rgb(217,76,39)" rx="2" ry="2" />
<text  x="118.47" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.19%)</title><rect x="955.8" y="437" width="2.3" height="15.0" fill="rgb(223,227,27)" rx="2" ry="2" />
<text  x="958.83" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="72.4" y="245" width="0.4" height="15.0" fill="rgb(254,196,14)" rx="2" ry="2" />
<text  x="75.45" y="255.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%)</title><rect x="111.3" y="357" width="0.4" height="15.0" fill="rgb(252,216,49)" rx="2" ry="2" />
<text  x="114.28" y="367.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.06%)</title><rect x="391.1" y="501" width="0.8" height="15.0" fill="rgb(211,201,37)" rx="2" ry="2" />
<text  x="394.15" y="511.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;, true&gt;::_M_head (1 samples, 0.03%)</title><rect x="69.4" y="357" width="0.4" height="15.0" fill="rgb(245,160,22)" rx="2" ry="2" />
<text  x="72.40" y="367.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (4 samples, 0.13%)</title><rect x="95.3" y="357" width="1.5" height="15.0" fill="rgb(216,99,52)" rx="2" ry="2" />
<text  x="98.29" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;seastar::shared_ptr&lt;cql3::relation&gt;*, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt; &gt;::operator* (1 samples, 0.03%)</title><rect x="117.4" y="437" width="0.4" height="15.0" fill="rgb(248,208,22)" rx="2" ry="2" />
<text  x="120.38" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%)</title><rect x="94.1" y="341" width="0.8" height="15.0" fill="rgb(216,12,6)" rx="2" ry="2" />
<text  x="97.15" y="351.5" ></text>
</g>
<g >
<title>query::querier_base::close (60 samples, 1.94%)</title><rect x="497.0" y="565" width="22.8" height="15.0" fill="rgb(248,68,33)" rx="2" ry="2" />
<text  x="500.00" y="575.5" >q..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="26.0" y="389" width="0.4" height="15.0" fill="rgb(254,47,16)" rx="2" ry="2" />
<text  x="28.99" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="694.6" y="565" width="0.4" height="15.0" fill="rgb(248,223,12)" rx="2" ry="2" />
<text  x="697.62" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="66.7" y="245" width="0.4" height="15.0" fill="rgb(209,116,13)" rx="2" ry="2" />
<text  x="69.73" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (5 samples, 0.16%)</title><rect x="21.0" y="501" width="1.9" height="15.0" fill="rgb(221,151,17)" rx="2" ry="2" />
<text  x="24.04" y="511.5" ></text>
</g>
<g >
<title>db::system_distributed_keyspace::create_cdc_desc (1 samples, 0.03%)</title><rect x="167.6" y="597" width="0.4" height="15.0" fill="rgb(236,91,32)" rx="2" ry="2" />
<text  x="170.64" y="607.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (49 samples, 1.58%)</title><rect x="784.1" y="469" width="18.7" height="15.0" fill="rgb(253,2,35)" rx="2" ry="2" />
<text  x="787.10" y="479.5" ></text>
</g>
<g >
<title>schema_registry::get (12 samples, 0.39%)</title><rect x="958.1" y="469" width="4.6" height="15.0" fill="rgb(251,153,51)" rx="2" ry="2" />
<text  x="961.11" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="59.1" y="389" width="0.4" height="15.0" fill="rgb(209,66,0)" rx="2" ry="2" />
<text  x="62.12" y="399.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (1 samples, 0.03%)</title><rect x="931.8" y="501" width="0.4" height="15.0" fill="rgb(232,150,43)" rx="2" ry="2" />
<text  x="934.84" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="56.8" y="389" width="0.4" height="15.0" fill="rgb(235,164,7)" rx="2" ry="2" />
<text  x="59.83" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_check_len (1 samples, 0.03%)</title><rect x="117.8" y="421" width="0.3" height="15.0" fill="rgb(236,29,35)" rx="2" ry="2" />
<text  x="120.76" y="431.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::operator delete (1 samples, 0.03%)</title><rect x="26.8" y="517" width="0.3" height="15.0" fill="rgb(230,222,11)" rx="2" ry="2" />
<text  x="29.75" y="527.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="99.9" y="229" width="0.3" height="15.0" fill="rgb(241,229,6)" rx="2" ry="2" />
<text  x="102.86" y="239.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.06%)</title><rect x="296.7" y="437" width="0.8" height="15.0" fill="rgb(206,126,54)" rx="2" ry="2" />
<text  x="299.72" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%)</title><rect x="709.5" y="581" width="0.4" height="15.0" fill="rgb(233,211,49)" rx="2" ry="2" />
<text  x="712.47" y="591.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (11 samples, 0.35%)</title><rect x="1134.0" y="597" width="4.2" height="15.0" fill="rgb(253,69,22)" rx="2" ry="2" />
<text  x="1137.03" y="607.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (12 samples, 0.39%)</title><rect x="1113.1" y="421" width="4.6" height="15.0" fill="rgb(231,89,3)" rx="2" ry="2" />
<text  x="1116.08" y="431.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (1 samples, 0.03%)</title><rect x="1112.3" y="357" width="0.4" height="15.0" fill="rgb(234,68,41)" rx="2" ry="2" />
<text  x="1115.32" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (8 samples, 0.26%)</title><rect x="192.0" y="565" width="3.1" height="15.0" fill="rgb(209,99,1)" rx="2" ry="2" />
<text  x="195.01" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="56.8" y="309" width="0.4" height="15.0" fill="rgb(210,30,44)" rx="2" ry="2" />
<text  x="59.83" y="319.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.03%)</title><rect x="167.6" y="533" width="0.4" height="15.0" fill="rgb(230,10,35)" rx="2" ry="2" />
<text  x="170.64" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.03%)</title><rect x="173.7" y="437" width="0.4" height="15.0" fill="rgb(229,205,24)" rx="2" ry="2" />
<text  x="176.73" y="447.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.03%)</title><rect x="14.9" y="533" width="0.4" height="15.0" fill="rgb(228,40,1)" rx="2" ry="2" />
<text  x="17.95" y="543.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (311 samples, 10.04%)</title><rect x="10.4" y="677" width="118.4" height="15.0" fill="rgb(213,70,52)" rx="2" ry="2" />
<text  x="13.38" y="687.5" >seastar::nonco..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (1 samples, 0.03%)</title><rect x="421.6" y="517" width="0.4" height="15.0" fill="rgb(219,214,17)" rx="2" ry="2" />
<text  x="424.61" y="527.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.06%)</title><rect x="332.9" y="373" width="0.8" height="15.0" fill="rgb(249,216,51)" rx="2" ry="2" />
<text  x="335.89" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::untyped_constant, false&gt;::_Uninitialized&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="95.7" y="53" width="0.4" height="15.0" fill="rgb(229,142,47)" rx="2" ry="2" />
<text  x="98.67" y="63.5" ></text>
</g>
<g >
<title>make_combined_reader (48 samples, 1.55%)</title><rect x="535.1" y="517" width="18.3" height="15.0" fill="rgb(220,191,34)" rx="2" ry="2" />
<text  x="538.08" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%)</title><rect x="841.6" y="613" width="0.8" height="15.0" fill="rgb(206,10,9)" rx="2" ry="2" />
<text  x="844.60" y="623.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (4 samples, 0.13%)</title><rect x="111.3" y="405" width="1.5" height="15.0" fill="rgb(252,132,28)" rx="2" ry="2" />
<text  x="114.28" y="415.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (4 samples, 0.13%)</title><rect x="917.0" y="517" width="1.5" height="15.0" fill="rgb(205,54,36)" rx="2" ry="2" />
<text  x="919.99" y="527.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (1 samples, 0.03%)</title><rect x="502.0" y="501" width="0.3" height="15.0" fill="rgb(235,181,8)" rx="2" ry="2" />
<text  x="504.95" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (80 samples, 2.58%)</title><rect x="334.8" y="389" width="30.5" height="15.0" fill="rgb(228,182,44)" rx="2" ry="2" />
<text  x="337.80" y="399.5" >co..</text>
</g>
<g >
<title>operator new (3 samples, 0.10%)</title><rect x="601.0" y="517" width="1.1" height="15.0" fill="rgb(243,221,9)" rx="2" ry="2" />
<text  x="603.95" y="527.5" ></text>
</g>
<g >
<title>db::block_for (2 samples, 0.06%)</title><rect x="1049.5" y="437" width="0.8" height="15.0" fill="rgb(205,60,0)" rx="2" ry="2" />
<text  x="1052.50" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (27 samples, 0.87%)</title><rect x="843.5" y="581" width="10.3" height="15.0" fill="rgb(212,43,54)" rx="2" ry="2" />
<text  x="846.50" y="591.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%)</title><rect x="29.4" y="517" width="0.4" height="15.0" fill="rgb(222,22,38)" rx="2" ry="2" />
<text  x="32.42" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (7 samples, 0.23%)</title><rect x="88.4" y="325" width="2.7" height="15.0" fill="rgb(218,73,33)" rx="2" ry="2" />
<text  x="91.44" y="335.5" ></text>
</g>
<g >
<title>posix_memalign (4 samples, 0.13%)</title><rect x="363.7" y="357" width="1.6" height="15.0" fill="rgb(254,70,42)" rx="2" ry="2" />
<text  x="366.73" y="367.5" ></text>
</g>
<g >
<title>database::find_keyspace (2 samples, 0.06%)</title><rect x="1111.2" y="357" width="0.7" height="15.0" fill="rgb(210,83,41)" rx="2" ry="2" />
<text  x="1114.18" y="367.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.03%)</title><rect x="176.8" y="597" width="0.4" height="15.0" fill="rgb(239,209,9)" rx="2" ry="2" />
<text  x="179.78" y="607.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%)</title><rect x="73.6" y="437" width="0.4" height="15.0" fill="rgb(241,209,24)" rx="2" ry="2" />
<text  x="76.59" y="447.5" ></text>
</g>
<g >
<title>std::locale::_S_initialize (1 samples, 0.03%)</title><rect x="128.4" y="629" width="0.4" height="15.0" fill="rgb(220,188,40)" rx="2" ry="2" />
<text  x="131.42" y="639.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.03%)</title><rect x="1189.6" y="741" width="0.4" height="15.0" fill="rgb(238,139,50)" rx="2" ry="2" />
<text  x="1192.62" y="751.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="115.5" y="277" width="0.4" height="15.0" fill="rgb(224,63,37)" rx="2" ry="2" />
<text  x="118.47" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (24 samples, 0.77%)</title><rect x="676.0" y="613" width="9.1" height="15.0" fill="rgb(210,221,32)" rx="2" ry="2" />
<text  x="678.96" y="623.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&amp;&gt; (1 samples, 0.03%)</title><rect x="106.7" y="261" width="0.4" height="15.0" fill="rgb(239,182,33)" rx="2" ry="2" />
<text  x="109.72" y="271.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (2 samples, 0.06%)</title><rect x="1102.8" y="485" width="0.8" height="15.0" fill="rgb(223,76,19)" rx="2" ry="2" />
<text  x="1105.80" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="61.0" y="341" width="0.4" height="15.0" fill="rgb(206,27,33)" rx="2" ry="2" />
<text  x="64.02" y="351.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.06%)</title><rect x="454.0" y="485" width="0.7" height="15.0" fill="rgb(205,137,42)" rx="2" ry="2" />
<text  x="456.98" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="102.9" y="293" width="0.4" height="15.0" fill="rgb(239,138,9)" rx="2" ry="2" />
<text  x="105.91" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="137.9" y="389" width="0.4" height="15.0" fill="rgb(212,84,21)" rx="2" ry="2" />
<text  x="140.94" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="88.1" y="325" width="0.3" height="15.0" fill="rgb(249,121,49)" rx="2" ry="2" />
<text  x="91.06" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.03%)</title><rect x="20.7" y="501" width="0.3" height="15.0" fill="rgb(224,169,31)" rx="2" ry="2" />
<text  x="23.66" y="511.5" ></text>
</g>
<g >
<title>database::find_column_family (4 samples, 0.13%)</title><rect x="1045.3" y="453" width="1.5" height="15.0" fill="rgb(225,134,21)" rx="2" ry="2" />
<text  x="1048.31" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (39 samples, 1.26%)</title><rect x="36.3" y="421" width="14.8" height="15.0" fill="rgb(251,112,33)" rx="2" ry="2" />
<text  x="39.27" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~_Deque_base (2 samples, 0.06%)</title><rect x="25.6" y="469" width="0.8" height="15.0" fill="rgb(218,81,19)" rx="2" ry="2" />
<text  x="28.61" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (1 samples, 0.03%)</title><rect x="58.7" y="373" width="0.4" height="15.0" fill="rgb(222,71,21)" rx="2" ry="2" />
<text  x="61.74" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="916.6" y="517" width="0.4" height="15.0" fill="rgb(214,148,14)" rx="2" ry="2" />
<text  x="919.61" y="527.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="94.5" y="197" width="0.4" height="15.0" fill="rgb(240,225,45)" rx="2" ry="2" />
<text  x="97.53" y="207.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (13 samples, 0.42%)</title><rect x="845.0" y="453" width="5.0" height="15.0" fill="rgb(251,64,25)" rx="2" ry="2" />
<text  x="848.02" y="463.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (1 samples, 0.03%)</title><rect x="16.5" y="469" width="0.4" height="15.0" fill="rgb(245,135,49)" rx="2" ry="2" />
<text  x="19.47" y="479.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (2 samples, 0.06%)</title><rect x="13.4" y="613" width="0.8" height="15.0" fill="rgb(242,27,24)" rx="2" ry="2" />
<text  x="16.43" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (5 samples, 0.16%)</title><rect x="1150.4" y="613" width="1.9" height="15.0" fill="rgb(223,216,28)" rx="2" ry="2" />
<text  x="1153.40" y="623.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::init (1 samples, 0.03%)</title><rect x="25.2" y="533" width="0.4" height="15.0" fill="rgb(205,198,31)" rx="2" ry="2" />
<text  x="28.23" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (13 samples, 0.42%)</title><rect x="31.3" y="405" width="5.0" height="15.0" fill="rgb(217,137,34)" rx="2" ry="2" />
<text  x="34.32" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (3 samples, 0.10%)</title><rect x="59.9" y="405" width="1.1" height="15.0" fill="rgb(245,188,29)" rx="2" ry="2" />
<text  x="62.88" y="415.5" ></text>
</g>
<g >
<title>query_result_builder::consume (85 samples, 2.74%)</title><rect x="438.4" y="517" width="32.3" height="15.0" fill="rgb(232,186,47)" rx="2" ry="2" />
<text  x="441.36" y="527.5" >qu..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.10%)</title><rect x="55.7" y="357" width="1.1" height="15.0" fill="rgb(226,9,19)" rx="2" ry="2" />
<text  x="58.69" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (35 samples, 1.13%)</title><rect x="37.4" y="405" width="13.3" height="15.0" fill="rgb(235,163,9)" rx="2" ry="2" />
<text  x="40.42" y="415.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (39 samples, 1.26%)</title><rect x="152.0" y="613" width="14.9" height="15.0" fill="rgb(224,183,23)" rx="2" ry="2" />
<text  x="155.03" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.10%)</title><rect x="1018.3" y="325" width="1.1" height="15.0" fill="rgb(225,190,13)" rx="2" ry="2" />
<text  x="1021.27" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (3 samples, 0.10%)</title><rect x="95.3" y="213" width="1.1" height="15.0" fill="rgb(224,220,31)" rx="2" ry="2" />
<text  x="98.29" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.06%)</title><rect x="709.9" y="581" width="0.7" height="15.0" fill="rgb(214,14,50)" rx="2" ry="2" />
<text  x="712.85" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt; &gt;  (2 samples, 0.06%)</title><rect x="21.4" y="421" width="0.8" height="15.0" fill="rgb(224,71,46)" rx="2" ry="2" />
<text  x="24.42" y="431.5" ></text>
</g>
<g >
<title>mutation::set_cell (2 samples, 0.06%)</title><rect x="846.9" y="437" width="0.8" height="15.0" fill="rgb(212,50,44)" rx="2" ry="2" />
<text  x="849.93" y="447.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%)</title><rect x="1104.7" y="469" width="0.4" height="15.0" fill="rgb(208,222,13)" rx="2" ry="2" />
<text  x="1107.71" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (23 samples, 0.74%)</title><rect x="635.2" y="613" width="8.8" height="15.0" fill="rgb(251,227,23)" rx="2" ry="2" />
<text  x="638.22" y="623.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%)</title><rect x="648.2" y="597" width="0.3" height="15.0" fill="rgb(240,34,46)" rx="2" ry="2" />
<text  x="651.17" y="607.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (44 samples, 1.42%)</title><rect x="1056.7" y="421" width="16.8" height="15.0" fill="rgb(236,53,35)" rx="2" ry="2" />
<text  x="1059.73" y="431.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.03%)</title><rect x="137.9" y="565" width="0.4" height="15.0" fill="rgb(238,224,35)" rx="2" ry="2" />
<text  x="140.94" y="575.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.19%)</title><rect x="134.9" y="693" width="2.3" height="15.0" fill="rgb(239,12,7)" rx="2" ry="2" />
<text  x="137.89" y="703.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1,196 samples, 38.59%)</title><rect x="177.9" y="613" width="455.4" height="15.0" fill="rgb(226,191,13)" rx="2" ry="2" />
<text  x="180.92" y="623.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="68.6" y="389" width="0.4" height="15.0" fill="rgb(227,223,0)" rx="2" ry="2" />
<text  x="71.64" y="399.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (4 samples, 0.13%)</title><rect x="66.7" y="389" width="1.6" height="15.0" fill="rgb(253,51,10)" rx="2" ry="2" />
<text  x="69.73" y="399.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.03%)</title><rect x="205.3" y="501" width="0.4" height="15.0" fill="rgb(239,8,46)" rx="2" ry="2" />
<text  x="208.33" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%)</title><rect x="54.9" y="437" width="0.4" height="15.0" fill="rgb(225,130,41)" rx="2" ry="2" />
<text  x="57.93" y="447.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1 samples, 0.03%)</title><rect x="809.2" y="485" width="0.4" height="15.0" fill="rgb(230,126,17)" rx="2" ry="2" />
<text  x="812.23" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="668.0" y="549" width="0.3" height="15.0" fill="rgb(246,16,18)" rx="2" ry="2" />
<text  x="670.97" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%)</title><rect x="233.5" y="517" width="0.4" height="15.0" fill="rgb(240,151,1)" rx="2" ry="2" />
<text  x="236.51" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.7" y="181" width="0.4" height="15.0" fill="rgb(241,173,22)" rx="2" ry="2" />
<text  x="82.68" y="191.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.03%)</title><rect x="1188.5" y="709" width="0.4" height="15.0" fill="rgb(247,77,13)" rx="2" ry="2" />
<text  x="1191.48" y="719.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%)</title><rect x="113.9" y="357" width="0.8" height="15.0" fill="rgb(238,79,1)" rx="2" ry="2" />
<text  x="116.95" y="367.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;cql3::prepared_cache_key_type, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, cql3::query_processor::prepare_one&lt;cql_transport::messages::result_message::prepared::cql, cql3::prepared_cache_key_type  (1 samples, 0.03%)</title><rect x="127.7" y="517" width="0.3" height="15.0" fill="rgb(205,121,10)" rx="2" ry="2" />
<text  x="130.66" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.10%)</title><rect x="1118.0" y="613" width="1.2" height="15.0" fill="rgb(208,100,29)" rx="2" ry="2" />
<text  x="1121.03" y="623.5" ></text>
</g>
<g >
<title>seastar::reactor::io_queue_submission_pollfn::poll (1 samples, 0.03%)</title><rect x="1153.8" y="613" width="0.4" height="15.0" fill="rgb(216,225,21)" rx="2" ry="2" />
<text  x="1156.83" y="623.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (9 samples, 0.29%)</title><rect x="31.7" y="357" width="3.4" height="15.0" fill="rgb(249,91,53)" rx="2" ry="2" />
<text  x="34.70" y="367.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="647.0" y="597" width="0.8" height="15.0" fill="rgb(251,87,18)" rx="2" ry="2" />
<text  x="650.02" y="607.5" ></text>
</g>
<g >
<title>dht::shard_of (2 samples, 0.06%)</title><rect x="1116.1" y="357" width="0.8" height="15.0" fill="rgb(214,172,2)" rx="2" ry="2" />
<text  x="1119.13" y="367.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (8 samples, 0.26%)</title><rect x="1021.3" y="341" width="3.1" height="15.0" fill="rgb(248,156,43)" rx="2" ry="2" />
<text  x="1024.32" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="66.4" y="389" width="0.3" height="15.0" fill="rgb(222,74,2)" rx="2" ry="2" />
<text  x="69.35" y="399.5" ></text>
</g>
<g >
<title>table::make_reader (243 samples, 7.84%)</title><rect x="526.3" y="533" width="92.5" height="15.0" fill="rgb(208,192,20)" rx="2" ry="2" />
<text  x="529.32" y="543.5" >table::make..</text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (4 samples, 0.13%)</title><rect x="51.1" y="437" width="1.5" height="15.0" fill="rgb(213,45,19)" rx="2" ry="2" />
<text  x="54.12" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%)</title><rect x="106.3" y="357" width="0.8" height="15.0" fill="rgb(213,178,10)" rx="2" ry="2" />
<text  x="109.33" y="367.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%)</title><rect x="981.7" y="421" width="0.4" height="15.0" fill="rgb(245,178,8)" rx="2" ry="2" />
<text  x="984.72" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.03%)</title><rect x="10.8" y="565" width="0.3" height="15.0" fill="rgb(242,152,36)" rx="2" ry="2" />
<text  x="13.76" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.10%)</title><rect x="53.8" y="421" width="1.1" height="15.0" fill="rgb(249,179,48)" rx="2" ry="2" />
<text  x="56.79" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%)</title><rect x="33.6" y="245" width="0.4" height="15.0" fill="rgb(244,229,52)" rx="2" ry="2" />
<text  x="36.61" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%)</title><rect x="101.8" y="325" width="0.3" height="15.0" fill="rgb(211,56,30)" rx="2" ry="2" />
<text  x="104.77" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (2 samples, 0.06%)</title><rect x="82.7" y="357" width="0.8" height="15.0" fill="rgb(208,118,12)" rx="2" ry="2" />
<text  x="85.73" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%)</title><rect x="601.0" y="501" width="1.1" height="15.0" fill="rgb(211,217,48)" rx="2" ry="2" />
<text  x="603.95" y="511.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (10 samples, 0.32%)</title><rect x="1113.8" y="405" width="3.9" height="15.0" fill="rgb(218,19,48)" rx="2" ry="2" />
<text  x="1116.85" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.06%)</title><rect x="811.9" y="517" width="0.8" height="15.0" fill="rgb(229,135,32)" rx="2" ry="2" />
<text  x="814.90" y="527.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.10%)</title><rect x="712.9" y="597" width="1.1" height="15.0" fill="rgb(224,226,7)" rx="2" ry="2" />
<text  x="715.90" y="607.5" ></text>
</g>
<g >
<title>cql3::relation::get_operator (1 samples, 0.03%)</title><rect x="17.6" y="517" width="0.4" height="15.0" fill="rgb(208,122,3)" rx="2" ry="2" />
<text  x="20.62" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%)</title><rect x="66.0" y="405" width="0.4" height="15.0" fill="rgb(244,35,34)" rx="2" ry="2" />
<text  x="68.97" y="415.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (3 samples, 0.10%)</title><rect x="882.7" y="453" width="1.2" height="15.0" fill="rgb(213,104,1)" rx="2" ry="2" />
<text  x="885.72" y="463.5" ></text>
</g>
<g >
<title>schema::rebuild (1 samples, 0.03%)</title><rect x="176.0" y="485" width="0.4" height="15.0" fill="rgb(229,205,39)" rx="2" ry="2" />
<text  x="179.01" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="1083.0" y="517" width="0.4" height="15.0" fill="rgb(214,21,4)" rx="2" ry="2" />
<text  x="1086.00" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="61.4" y="389" width="0.8" height="15.0" fill="rgb(214,48,48)" rx="2" ry="2" />
<text  x="64.40" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="885.8" y="453" width="0.3" height="15.0" fill="rgb(207,193,40)" rx="2" ry="2" />
<text  x="888.77" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="58.0" y="325" width="0.4" height="15.0" fill="rgb(226,97,24)" rx="2" ry="2" />
<text  x="60.98" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::add_operation (1 samples, 0.03%)</title><rect x="15.7" y="549" width="0.4" height="15.0" fill="rgb(236,26,33)" rx="2" ry="2" />
<text  x="18.71" y="559.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (621 samples, 20.04%)</title><rect x="859.5" y="565" width="236.5" height="15.0" fill="rgb(206,46,11)" rx="2" ry="2" />
<text  x="862.49" y="575.5" >seastar::noncopyable_function&lt;s..</text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (29 samples, 0.94%)</title><rect x="902.5" y="501" width="11.1" height="15.0" fill="rgb(224,9,7)" rx="2" ry="2" />
<text  x="905.52" y="511.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%)</title><rect x="830.6" y="565" width="1.9" height="15.0" fill="rgb(213,15,2)" rx="2" ry="2" />
<text  x="833.56" y="575.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.10%)</title><rect x="623.8" y="533" width="1.1" height="15.0" fill="rgb(227,219,17)" rx="2" ry="2" />
<text  x="626.80" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (1 samples, 0.03%)</title><rect x="144.0" y="629" width="0.4" height="15.0" fill="rgb(251,74,53)" rx="2" ry="2" />
<text  x="147.03" y="639.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (2 samples, 0.06%)</title><rect x="1031.2" y="421" width="0.8" height="15.0" fill="rgb(251,173,50)" rx="2" ry="2" />
<text  x="1034.22" y="431.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.03%)</title><rect x="759.7" y="501" width="0.4" height="15.0" fill="rgb(213,129,20)" rx="2" ry="2" />
<text  x="762.73" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%)</title><rect x="1100.9" y="421" width="0.4" height="15.0" fill="rgb(223,23,45)" rx="2" ry="2" />
<text  x="1103.90" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%)</title><rect x="232.0" y="533" width="1.9" height="15.0" fill="rgb(212,91,21)" rx="2" ry="2" />
<text  x="234.99" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%)</title><rect x="57.2" y="437" width="0.4" height="15.0" fill="rgb(246,74,52)" rx="2" ry="2" />
<text  x="60.22" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (2 samples, 0.06%)</title><rect x="1028.9" y="389" width="0.8" height="15.0" fill="rgb(205,137,31)" rx="2" ry="2" />
<text  x="1031.94" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="107.1" y="405" width="0.4" height="15.0" fill="rgb(223,42,52)" rx="2" ry="2" />
<text  x="110.10" y="415.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.03%)</title><rect x="128.8" y="629" width="0.4" height="15.0" fill="rgb(244,92,25)" rx="2" ry="2" />
<text  x="131.80" y="639.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="61.0" y="373" width="0.4" height="15.0" fill="rgb(233,17,49)" rx="2" ry="2" />
<text  x="64.02" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (19 samples, 0.61%)</title><rect x="484.1" y="485" width="7.2" height="15.0" fill="rgb(219,51,11)" rx="2" ry="2" />
<text  x="487.06" y="495.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (2,670 samples, 86.16%)</title><rect x="139.5" y="677" width="1016.6" height="15.0" fill="rgb(253,225,8)" rx="2" ry="2" />
<text  x="142.46" y="687.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.10%)</title><rect x="102.9" y="357" width="1.1" height="15.0" fill="rgb(220,224,30)" rx="2" ry="2" />
<text  x="105.91" y="367.5" ></text>
</g>
<g >
<title>auth::operator== (2 samples, 0.06%)</title><rect x="802.0" y="437" width="0.8" height="15.0" fill="rgb(221,103,36)" rx="2" ry="2" />
<text  x="805.00" y="447.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%)</title><rect x="914.3" y="517" width="2.3" height="15.0" fill="rgb(240,192,51)" rx="2" ry="2" />
<text  x="917.32" y="527.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (201 samples, 6.49%)</title><rect x="751.7" y="565" width="76.6" height="15.0" fill="rgb(222,106,45)" rx="2" ry="2" />
<text  x="754.74" y="575.5" >cql3::qu..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="60.3" y="325" width="0.7" height="15.0" fill="rgb(243,112,17)" rx="2" ry="2" />
<text  x="63.26" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="16.9" y="517" width="0.3" height="15.0" fill="rgb(242,80,13)" rx="2" ry="2" />
<text  x="19.85" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%)</title><rect x="94.1" y="229" width="0.8" height="15.0" fill="rgb(239,223,32)" rx="2" ry="2" />
<text  x="97.15" y="239.5" ></text>
</g>
<g >
<title>perf_simple_que (3,097 samples, 99.94%)</title><rect x="10.0" y="757" width="1179.2" height="15.0" fill="rgb(212,130,43)" rx="2" ry="2" />
<text  x="13.00" y="767.5" >perf_simple_que</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (86 samples, 2.78%)</title><rect x="69.8" y="453" width="32.7" height="15.0" fill="rgb(247,24,24)" rx="2" ry="2" />
<text  x="72.78" y="463.5" >cq..</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%)</title><rect x="1025.5" y="357" width="0.4" height="15.0" fill="rgb(222,183,16)" rx="2" ry="2" />
<text  x="1028.51" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&amp;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;**&gt;::_Deque_iterator (1 samples, 0.03%)</title><rect x="26.4" y="453" width="0.4" height="15.0" fill="rgb(210,49,4)" rx="2" ry="2" />
<text  x="29.37" y="463.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (1 samples, 0.03%)</title><rect x="36.3" y="405" width="0.4" height="15.0" fill="rgb(205,28,11)" rx="2" ry="2" />
<text  x="39.27" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (3 samples, 0.10%)</title><rect x="42.0" y="357" width="1.1" height="15.0" fill="rgb(213,218,18)" rx="2" ry="2" />
<text  x="44.98" y="367.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.06%)</title><rect x="75.9" y="341" width="0.7" height="15.0" fill="rgb(225,9,26)" rx="2" ry="2" />
<text  x="78.87" y="351.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (6 samples, 0.19%)</title><rect x="1107.4" y="341" width="2.3" height="15.0" fill="rgb(242,82,18)" rx="2" ry="2" />
<text  x="1110.37" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (33 samples, 1.06%)</title><rect x="1105.1" y="469" width="12.6" height="15.0" fill="rgb(219,218,43)" rx="2" ry="2" />
<text  x="1108.09" y="479.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%)</title><rect x="232.0" y="549" width="1.9" height="15.0" fill="rgb(210,158,28)" rx="2" ry="2" />
<text  x="234.99" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="55.3" y="437" width="0.4" height="15.0" fill="rgb(216,3,38)" rx="2" ry="2" />
<text  x="58.31" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (3 samples, 0.10%)</title><rect x="95.3" y="197" width="1.1" height="15.0" fill="rgb(209,186,37)" rx="2" ry="2" />
<text  x="98.29" y="207.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (4 samples, 0.13%)</title><rect x="53.8" y="469" width="1.5" height="15.0" fill="rgb(227,30,45)" rx="2" ry="2" />
<text  x="56.79" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.03%)</title><rect x="59.5" y="453" width="0.4" height="15.0" fill="rgb(226,166,0)" rx="2" ry="2" />
<text  x="62.50" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (4 samples, 0.13%)</title><rect x="653.9" y="581" width="1.5" height="15.0" fill="rgb(241,0,33)" rx="2" ry="2" />
<text  x="656.88" y="591.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.03%)</title><rect x="1188.1" y="645" width="0.4" height="15.0" fill="rgb(206,166,39)" rx="2" ry="2" />
<text  x="1191.10" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%)</title><rect x="623.8" y="517" width="1.1" height="15.0" fill="rgb(235,108,16)" rx="2" ry="2" />
<text  x="626.80" y="527.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%)</title><rect x="1138.2" y="597" width="1.2" height="15.0" fill="rgb(223,11,32)" rx="2" ry="2" />
<text  x="1141.22" y="607.5" ></text>
</g>
<g >
<title>seastar::file_data_sink_impl::~file_data_sink_impl (1 samples, 0.03%)</title><rect x="136.8" y="645" width="0.4" height="15.0" fill="rgb(234,201,29)" rx="2" ry="2" />
<text  x="139.80" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="35.5" y="309" width="0.4" height="15.0" fill="rgb(253,99,20)" rx="2" ry="2" />
<text  x="38.51" y="319.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="920.8" y="501" width="0.4" height="15.0" fill="rgb(224,45,21)" rx="2" ry="2" />
<text  x="923.80" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%)</title><rect x="56.8" y="437" width="0.4" height="15.0" fill="rgb(211,1,0)" rx="2" ry="2" />
<text  x="59.83" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (2 samples, 0.06%)</title><rect x="848.8" y="421" width="0.8" height="15.0" fill="rgb(239,52,30)" rx="2" ry="2" />
<text  x="851.83" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.7" y="117" width="0.4" height="15.0" fill="rgb(221,210,8)" rx="2" ry="2" />
<text  x="82.68" y="127.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="114.7" y="341" width="0.8" height="15.0" fill="rgb(215,32,16)" rx="2" ry="2" />
<text  x="117.71" y="351.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::reset&lt;cql3_parser::CqlParser&gt; (1 samples, 0.03%)</title><rect x="24.5" y="501" width="0.3" height="15.0" fill="rgb(210,151,30)" rx="2" ry="2" />
<text  x="27.47" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%)</title><rect x="857.2" y="581" width="0.8" height="15.0" fill="rgb(214,180,54)" rx="2" ry="2" />
<text  x="860.21" y="591.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%)</title><rect x="925.7" y="501" width="0.4" height="15.0" fill="rgb(219,200,32)" rx="2" ry="2" />
<text  x="928.75" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (2 samples, 0.06%)</title><rect x="104.8" y="437" width="0.8" height="15.0" fill="rgb(216,177,36)" rx="2" ry="2" />
<text  x="107.81" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="21.8" y="389" width="0.4" height="15.0" fill="rgb(254,33,9)" rx="2" ry="2" />
<text  x="24.80" y="399.5" ></text>
</g>
<g >
<title>memtable::apply (16 samples, 0.52%)</title><rect x="1096.3" y="485" width="6.1" height="15.0" fill="rgb(225,11,8)" rx="2" ry="2" />
<text  x="1099.33" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (17 samples, 0.55%)</title><rect x="17.2" y="533" width="6.5" height="15.0" fill="rgb(249,120,5)" rx="2" ry="2" />
<text  x="20.23" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.06%)</title><rect x="11.5" y="581" width="0.8" height="15.0" fill="rgb(245,60,3)" rx="2" ry="2" />
<text  x="14.52" y="591.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.16%)</title><rect x="494.7" y="549" width="1.9" height="15.0" fill="rgb(243,101,20)" rx="2" ry="2" />
<text  x="497.72" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (58 samples, 1.87%)</title><rect x="30.9" y="469" width="22.1" height="15.0" fill="rgb(206,210,33)" rx="2" ry="2" />
<text  x="33.94" y="479.5" >a..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="72.8" y="389" width="0.4" height="15.0" fill="rgb(213,72,48)" rx="2" ry="2" />
<text  x="75.83" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.7" y="133" width="0.4" height="15.0" fill="rgb(250,55,19)" rx="2" ry="2" />
<text  x="82.68" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="842.7" y="613" width="0.4" height="15.0" fill="rgb(228,198,7)" rx="2" ry="2" />
<text  x="845.74" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (3 samples, 0.10%)</title><rect x="493.6" y="533" width="1.1" height="15.0" fill="rgb(233,20,45)" rx="2" ry="2" />
<text  x="496.58" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="114.7" y="325" width="0.8" height="15.0" fill="rgb(206,49,54)" rx="2" ry="2" />
<text  x="117.71" y="335.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (8 samples, 0.26%)</title><rect x="940.2" y="485" width="3.1" height="15.0" fill="rgb(244,5,16)" rx="2" ry="2" />
<text  x="943.22" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="98.3" y="389" width="0.4" height="15.0" fill="rgb(246,41,33)" rx="2" ry="2" />
<text  x="101.34" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (7 samples, 0.23%)</title><rect x="88.4" y="293" width="2.7" height="15.0" fill="rgb(241,72,40)" rx="2" ry="2" />
<text  x="91.44" y="303.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.03%)</title><rect x="1026.7" y="389" width="0.3" height="15.0" fill="rgb(210,178,9)" rx="2" ry="2" />
<text  x="1029.65" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.03%)</title><rect x="853.0" y="485" width="0.4" height="15.0" fill="rgb(254,175,34)" rx="2" ry="2" />
<text  x="856.02" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (4 samples, 0.13%)</title><rect x="102.5" y="453" width="1.5" height="15.0" fill="rgb(249,32,50)" rx="2" ry="2" />
<text  x="105.53" y="463.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%)</title><rect x="1088.0" y="533" width="2.2" height="15.0" fill="rgb(238,49,20)" rx="2" ry="2" />
<text  x="1090.95" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (2 samples, 0.06%)</title><rect x="1188.1" y="725" width="0.8" height="15.0" fill="rgb(216,99,31)" rx="2" ry="2" />
<text  x="1191.10" y="735.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.03%)</title><rect x="138.3" y="645" width="0.4" height="15.0" fill="rgb(247,76,6)" rx="2" ry="2" />
<text  x="141.32" y="655.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%)</title><rect x="113.2" y="373" width="0.4" height="15.0" fill="rgb(207,211,25)" rx="2" ry="2" />
<text  x="116.19" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_table_statement::raw_statement, std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="121.6" y="485" width="0.3" height="15.0" fill="rgb(226,30,39)" rx="2" ry="2" />
<text  x="124.57" y="495.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (19 samples, 0.61%)</title><rect x="758.2" y="533" width="7.2" height="15.0" fill="rgb(231,31,2)" rx="2" ry="2" />
<text  x="761.21" y="543.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (41 samples, 1.32%)</title><rect x="711.0" y="613" width="15.6" height="15.0" fill="rgb(226,219,32)" rx="2" ry="2" />
<text  x="713.99" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.03%)</title><rect x="728.1" y="485" width="0.4" height="15.0" fill="rgb(249,132,22)" rx="2" ry="2" />
<text  x="731.13" y="495.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (5 samples, 0.16%)</title><rect x="78.9" y="357" width="1.9" height="15.0" fill="rgb(248,128,31)" rx="2" ry="2" />
<text  x="81.92" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="55.7" y="325" width="0.4" height="15.0" fill="rgb(249,38,44)" rx="2" ry="2" />
<text  x="58.69" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="109.0" y="357" width="0.4" height="15.0" fill="rgb(212,95,46)" rx="2" ry="2" />
<text  x="112.00" y="367.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (2 samples, 0.06%)</title><rect x="800.5" y="437" width="0.7" height="15.0" fill="rgb(233,41,48)" rx="2" ry="2" />
<text  x="803.47" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_max_size (1 samples, 0.03%)</title><rect x="35.9" y="357" width="0.4" height="15.0" fill="rgb(253,14,17)" rx="2" ry="2" />
<text  x="38.89" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%)</title><rect x="61.4" y="309" width="0.8" height="15.0" fill="rgb(232,175,26)" rx="2" ry="2" />
<text  x="64.40" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (7 samples, 0.23%)</title><rect x="66.4" y="437" width="2.6" height="15.0" fill="rgb(243,225,33)" rx="2" ry="2" />
<text  x="69.35" y="447.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (3 samples, 0.10%)</title><rect x="1099.8" y="437" width="1.1" height="15.0" fill="rgb(221,200,46)" rx="2" ry="2" />
<text  x="1102.76" y="447.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%)</title><rect x="507.3" y="485" width="0.4" height="15.0" fill="rgb(221,50,38)" rx="2" ry="2" />
<text  x="510.28" y="495.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.03%)</title><rect x="1152.7" y="597" width="0.4" height="15.0" fill="rgb(216,130,33)" rx="2" ry="2" />
<text  x="1155.68" y="607.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%)</title><rect x="725.8" y="565" width="0.4" height="15.0" fill="rgb(230,89,37)" rx="2" ry="2" />
<text  x="728.84" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="98.3" y="373" width="0.4" height="15.0" fill="rgb(254,5,33)" rx="2" ry="2" />
<text  x="101.34" y="383.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_currentLine (1 samples, 0.03%)</title><rect x="38.6" y="389" width="0.3" height="15.0" fill="rgb(240,181,30)" rx="2" ry="2" />
<text  x="41.56" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="65.2" y="325" width="0.4" height="15.0" fill="rgb(228,181,24)" rx="2" ry="2" />
<text  x="68.21" y="335.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%)</title><rect x="85.4" y="389" width="0.4" height="15.0" fill="rgb(228,101,34)" rx="2" ry="2" />
<text  x="88.39" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="108.6" y="357" width="0.4" height="15.0" fill="rgb(234,189,15)" rx="2" ry="2" />
<text  x="111.62" y="367.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (2 samples, 0.06%)</title><rect x="86.2" y="405" width="0.7" height="15.0" fill="rgb(235,222,5)" rx="2" ry="2" />
<text  x="89.15" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (75 samples, 2.42%)</title><rect x="1120.3" y="613" width="28.6" height="15.0" fill="rgb(244,20,18)" rx="2" ry="2" />
<text  x="1123.32" y="623.5" >se..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="56.8" y="341" width="0.4" height="15.0" fill="rgb(244,97,10)" rx="2" ry="2" />
<text  x="59.83" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (20 samples, 0.65%)</title><rect x="195.8" y="565" width="7.6" height="15.0" fill="rgb(208,11,12)" rx="2" ry="2" />
<text  x="198.81" y="575.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%)</title><rect x="809.6" y="485" width="1.2" height="15.0" fill="rgb(249,160,32)" rx="2" ry="2" />
<text  x="812.61" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%)</title><rect x="107.5" y="341" width="0.4" height="15.0" fill="rgb(224,223,7)" rx="2" ry="2" />
<text  x="110.48" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%)</title><rect x="978.7" y="421" width="1.5" height="15.0" fill="rgb(250,35,18)" rx="2" ry="2" />
<text  x="981.67" y="431.5" ></text>
</g>
<g >
<title>logalloc::segment::occupancy (1 samples, 0.03%)</title><rect x="136.4" y="629" width="0.4" height="15.0" fill="rgb(211,189,24)" rx="2" ry="2" />
<text  x="139.41" y="639.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="115.5" y="261" width="0.4" height="15.0" fill="rgb(249,60,2)" rx="2" ry="2" />
<text  x="118.47" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%)</title><rect x="1029.7" y="389" width="0.8" height="15.0" fill="rgb(216,97,32)" rx="2" ry="2" />
<text  x="1032.70" y="399.5" ></text>
</g>
<g >
<title>row::~row (23 samples, 0.74%)</title><rect x="423.1" y="501" width="8.8" height="15.0" fill="rgb(246,1,18)" rx="2" ry="2" />
<text  x="426.13" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="129.2" y="677" width="0.4" height="15.0" fill="rgb(216,76,44)" rx="2" ry="2" />
<text  x="132.18" y="687.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="54.5" y="325" width="0.4" height="15.0" fill="rgb(214,125,47)" rx="2" ry="2" />
<text  x="57.55" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="58.0" y="373" width="0.4" height="15.0" fill="rgb(221,146,25)" rx="2" ry="2" />
<text  x="60.98" y="383.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::reset (1 samples, 0.03%)</title><rect x="24.1" y="501" width="0.4" height="15.0" fill="rgb(206,197,6)" rx="2" ry="2" />
<text  x="27.09" y="511.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%)</title><rect x="1139.4" y="597" width="2.2" height="15.0" fill="rgb(232,107,18)" rx="2" ry="2" />
<text  x="1142.36" y="607.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%)</title><rect x="549.9" y="485" width="1.6" height="15.0" fill="rgb(244,106,13)" rx="2" ry="2" />
<text  x="552.93" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="73.6" y="421" width="0.4" height="15.0" fill="rgb(244,148,10)" rx="2" ry="2" />
<text  x="76.59" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="66.7" y="69" width="0.4" height="15.0" fill="rgb(253,93,3)" rx="2" ry="2" />
<text  x="69.73" y="79.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.03%)</title><rect x="10.8" y="629" width="0.3" height="15.0" fill="rgb(225,107,42)" rx="2" ry="2" />
<text  x="13.76" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%)</title><rect x="69.4" y="405" width="0.4" height="15.0" fill="rgb(254,227,50)" rx="2" ry="2" />
<text  x="72.40" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="576.6" y="469" width="0.4" height="15.0" fill="rgb(253,75,36)" rx="2" ry="2" />
<text  x="579.58" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%)</title><rect x="842.4" y="613" width="0.3" height="15.0" fill="rgb(234,157,2)" rx="2" ry="2" />
<text  x="845.36" y="623.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (14 samples, 0.45%)</title><rect x="760.1" y="517" width="5.3" height="15.0" fill="rgb(237,135,28)" rx="2" ry="2" />
<text  x="763.11" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%)</title><rect x="108.2" y="405" width="0.4" height="15.0" fill="rgb(212,167,36)" rx="2" ry="2" />
<text  x="111.24" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%)</title><rect x="58.0" y="421" width="0.4" height="15.0" fill="rgb(233,49,43)" rx="2" ry="2" />
<text  x="60.98" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.06%)</title><rect x="69.0" y="453" width="0.8" height="15.0" fill="rgb(211,124,25)" rx="2" ry="2" />
<text  x="72.02" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.10%)</title><rect x="927.3" y="485" width="1.1" height="15.0" fill="rgb(208,159,28)" rx="2" ry="2" />
<text  x="930.27" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="94.1" y="101" width="0.4" height="15.0" fill="rgb(244,200,1)" rx="2" ry="2" />
<text  x="97.15" y="111.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="60.3" y="245" width="0.3" height="15.0" fill="rgb(236,21,22)" rx="2" ry="2" />
<text  x="63.26" y="255.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::list_directory (1 samples, 0.03%)</title><rect x="840.5" y="597" width="0.3" height="15.0" fill="rgb(234,119,4)" rx="2" ry="2" />
<text  x="843.45" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (13 samples, 0.42%)</title><rect x="31.3" y="437" width="5.0" height="15.0" fill="rgb(235,124,21)" rx="2" ry="2" />
<text  x="34.32" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.13%)</title><rect x="157.4" y="565" width="1.5" height="15.0" fill="rgb(247,77,20)" rx="2" ry="2" />
<text  x="160.36" y="575.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%)</title><rect x="700.0" y="597" width="0.7" height="15.0" fill="rgb(228,222,17)" rx="2" ry="2" />
<text  x="702.95" y="607.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.03%)</title><rect x="1100.5" y="389" width="0.4" height="15.0" fill="rgb(214,46,28)" rx="2" ry="2" />
<text  x="1103.52" y="399.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (10 samples, 0.32%)</title><rect x="1083.4" y="517" width="3.8" height="15.0" fill="rgb(210,36,48)" rx="2" ry="2" />
<text  x="1086.38" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="114.7" y="293" width="0.8" height="15.0" fill="rgb(254,55,7)" rx="2" ry="2" />
<text  x="117.71" y="303.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.03%)</title><rect x="470.0" y="501" width="0.3" height="15.0" fill="rgb(236,142,16)" rx="2" ry="2" />
<text  x="472.97" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="856.8" y="565" width="0.4" height="15.0" fill="rgb(232,70,49)" rx="2" ry="2" />
<text  x="859.83" y="575.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="56.5" y="309" width="0.3" height="15.0" fill="rgb(231,14,20)" rx="2" ry="2" />
<text  x="59.45" y="319.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="54.5" y="277" width="0.4" height="15.0" fill="rgb(212,126,13)" rx="2" ry="2" />
<text  x="57.55" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.03%)</title><rect x="726.2" y="565" width="0.4" height="15.0" fill="rgb(232,194,37)" rx="2" ry="2" />
<text  x="729.22" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%)</title><rect x="1089.9" y="501" width="0.3" height="15.0" fill="rgb(231,196,42)" rx="2" ry="2" />
<text  x="1092.86" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="113.6" y="405" width="0.3" height="15.0" fill="rgb(209,29,51)" rx="2" ry="2" />
<text  x="116.57" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.03%)</title><rect x="10.8" y="613" width="0.3" height="15.0" fill="rgb(252,128,30)" rx="2" ry="2" />
<text  x="13.76" y="623.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="68.6" y="405" width="0.4" height="15.0" fill="rgb(205,62,16)" rx="2" ry="2" />
<text  x="71.64" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.23%)</title><rect x="1016.8" y="341" width="2.6" height="15.0" fill="rgb(224,178,15)" rx="2" ry="2" />
<text  x="1019.75" y="351.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (3 samples, 0.10%)</title><rect x="1097.5" y="453" width="1.1" height="15.0" fill="rgb(226,147,15)" rx="2" ry="2" />
<text  x="1100.47" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;*&gt; (1 samples, 0.03%)</title><rect x="27.5" y="517" width="0.4" height="15.0" fill="rgb(254,205,0)" rx="2" ry="2" />
<text  x="30.52" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="112.8" y="293" width="0.4" height="15.0" fill="rgb(230,44,51)" rx="2" ry="2" />
<text  x="115.81" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (46 samples, 1.48%)</title><rect x="896.0" y="517" width="17.6" height="15.0" fill="rgb(228,57,32)" rx="2" ry="2" />
<text  x="899.05" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="110.1" y="277" width="0.4" height="15.0" fill="rgb(235,220,41)" rx="2" ry="2" />
<text  x="113.14" y="287.5" ></text>
</g>
<g >
<title>service::shared_mutation::~shared_mutation (1 samples, 0.03%)</title><rect x="696.5" y="581" width="0.4" height="15.0" fill="rgb(229,108,40)" rx="2" ry="2" />
<text  x="699.52" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%)</title><rect x="110.9" y="389" width="0.4" height="15.0" fill="rgb(231,205,51)" rx="2" ry="2" />
<text  x="113.90" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (3 samples, 0.10%)</title><rect x="285.3" y="469" width="1.1" height="15.0" fill="rgb(225,51,38)" rx="2" ry="2" />
<text  x="288.30" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (64 samples, 2.07%)</title><rect x="77.0" y="437" width="24.4" height="15.0" fill="rgb(251,180,18)" rx="2" ry="2" />
<text  x="80.02" y="447.5" >c..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%)</title><rect x="667.2" y="549" width="0.8" height="15.0" fill="rgb(239,12,10)" rx="2" ry="2" />
<text  x="670.21" y="559.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (1 samples, 0.03%)</title><rect x="449.4" y="485" width="0.4" height="15.0" fill="rgb(210,82,33)" rx="2" ry="2" />
<text  x="452.41" y="495.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%)</title><rect x="135.3" y="661" width="0.4" height="15.0" fill="rgb(251,110,36)" rx="2" ry="2" />
<text  x="138.27" y="671.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="110.1" y="421" width="0.4" height="15.0" fill="rgb(250,91,42)" rx="2" ry="2" />
<text  x="113.14" y="431.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (4 samples, 0.13%)</title><rect x="623.4" y="549" width="1.5" height="15.0" fill="rgb(225,150,19)" rx="2" ry="2" />
<text  x="626.42" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%)</title><rect x="617.3" y="501" width="0.4" height="15.0" fill="rgb(229,93,40)" rx="2" ry="2" />
<text  x="620.32" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="110.1" y="341" width="0.4" height="15.0" fill="rgb(247,139,43)" rx="2" ry="2" />
<text  x="113.14" y="351.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (1 samples, 0.03%)</title><rect x="204.2" y="581" width="0.4" height="15.0" fill="rgb(211,206,42)" rx="2" ry="2" />
<text  x="207.19" y="591.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (1 samples, 0.03%)</title><rect x="827.9" y="549" width="0.4" height="15.0" fill="rgb(207,173,53)" rx="2" ry="2" />
<text  x="830.89" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.10%)</title><rect x="55.7" y="421" width="1.1" height="15.0" fill="rgb(254,206,38)" rx="2" ry="2" />
<text  x="58.69" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (37 samples, 1.19%)</title><rect x="696.9" y="613" width="14.1" height="15.0" fill="rgb(254,68,4)" rx="2" ry="2" />
<text  x="699.91" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="59.1" y="341" width="0.4" height="15.0" fill="rgb(215,146,41)" rx="2" ry="2" />
<text  x="62.12" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.03%)</title><rect x="23.3" y="501" width="0.4" height="15.0" fill="rgb(248,173,29)" rx="2" ry="2" />
<text  x="26.33" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="111.3" y="229" width="0.4" height="15.0" fill="rgb(238,102,17)" rx="2" ry="2" />
<text  x="114.28" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="1117.7" y="597" width="0.3" height="15.0" fill="rgb(238,128,29)" rx="2" ry="2" />
<text  x="1120.65" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="137.9" y="373" width="0.4" height="15.0" fill="rgb(238,43,47)" rx="2" ry="2" />
<text  x="140.94" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="70.2" y="293" width="0.3" height="15.0" fill="rgb(224,56,15)" rx="2" ry="2" />
<text  x="73.16" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="82.7" y="341" width="0.4" height="15.0" fill="rgb(243,12,48)" rx="2" ry="2" />
<text  x="85.73" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%)</title><rect x="61.0" y="261" width="0.4" height="15.0" fill="rgb(205,35,23)" rx="2" ry="2" />
<text  x="64.02" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%)</title><rect x="94.1" y="325" width="0.8" height="15.0" fill="rgb(233,70,11)" rx="2" ry="2" />
<text  x="97.15" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (1 samples, 0.03%)</title><rect x="14.9" y="565" width="0.4" height="15.0" fill="rgb(254,96,41)" rx="2" ry="2" />
<text  x="17.95" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="99.9" y="341" width="0.3" height="15.0" fill="rgb(210,12,1)" rx="2" ry="2" />
<text  x="102.86" y="351.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="1117.3" y="357" width="0.4" height="15.0" fill="rgb(209,159,7)" rx="2" ry="2" />
<text  x="1120.27" y="367.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%)</title><rect x="742.6" y="581" width="1.9" height="15.0" fill="rgb(221,5,25)" rx="2" ry="2" />
<text  x="745.60" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::revoke_role_statement, std::default_delete&lt;cql3::statements::revoke_role_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="124.6" y="469" width="0.4" height="15.0" fill="rgb(240,160,47)" rx="2" ry="2" />
<text  x="127.61" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::advance (1 samples, 0.03%)</title><rect x="136.4" y="661" width="0.4" height="15.0" fill="rgb(227,41,36)" rx="2" ry="2" />
<text  x="139.41" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="22.2" y="421" width="0.4" height="15.0" fill="rgb(216,182,11)" rx="2" ry="2" />
<text  x="25.18" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="21.8" y="405" width="0.4" height="15.0" fill="rgb(229,70,44)" rx="2" ry="2" />
<text  x="24.80" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (3 samples, 0.10%)</title><rect x="1155.0" y="597" width="1.1" height="15.0" fill="rgb(239,110,41)" rx="2" ry="2" />
<text  x="1157.97" y="607.5" ></text>
</g>
<g >
<title>sstables::make_compaction_strategy (1 samples, 0.03%)</title><rect x="176.4" y="565" width="0.4" height="15.0" fill="rgb(210,220,53)" rx="2" ry="2" />
<text  x="179.40" y="575.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="59.1" y="357" width="0.4" height="15.0" fill="rgb(219,37,24)" rx="2" ry="2" />
<text  x="62.12" y="367.5" ></text>
</g>
<g >
<title>schema_registry::learn (2 samples, 0.06%)</title><rect x="175.6" y="581" width="0.8" height="15.0" fill="rgb(235,203,11)" rx="2" ry="2" />
<text  x="178.63" y="591.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (3 samples, 0.10%)</title><rect x="325.7" y="389" width="1.1" height="15.0" fill="rgb(205,191,23)" rx="2" ry="2" />
<text  x="328.66" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%)</title><rect x="82.3" y="325" width="0.4" height="15.0" fill="rgb(246,124,45)" rx="2" ry="2" />
<text  x="85.35" y="335.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="10.4" y="597" width="0.4" height="15.0" fill="rgb(242,211,32)" rx="2" ry="2" />
<text  x="13.38" y="607.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%)</title><rect x="1074.2" y="501" width="0.4" height="15.0" fill="rgb(254,45,40)" rx="2" ry="2" />
<text  x="1077.25" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="118.5" y="437" width="0.4" height="15.0" fill="rgb(208,24,31)" rx="2" ry="2" />
<text  x="121.52" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (133 samples, 4.29%)</title><rect x="315.0" y="421" width="50.6" height="15.0" fill="rgb(219,36,52)" rx="2" ry="2" />
<text  x="318.00" y="431.5" >parti..</text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.06%)</title><rect x="794.4" y="453" width="0.7" height="15.0" fill="rgb(244,80,31)" rx="2" ry="2" />
<text  x="797.38" y="463.5" ></text>
</g>
<g >
<title>service::write_response_handler::~write_response_handler (1 samples, 0.03%)</title><rect x="696.5" y="597" width="0.4" height="15.0" fill="rgb(233,32,15)" rx="2" ry="2" />
<text  x="699.52" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%)</title><rect x="61.4" y="325" width="0.8" height="15.0" fill="rgb(220,112,51)" rx="2" ry="2" />
<text  x="64.40" y="335.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.03%)</title><rect x="591.8" y="453" width="0.4" height="15.0" fill="rgb(241,90,18)" rx="2" ry="2" />
<text  x="594.81" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%)</title><rect x="101.4" y="421" width="0.4" height="15.0" fill="rgb(249,64,9)" rx="2" ry="2" />
<text  x="104.38" y="431.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.03%)</title><rect x="1098.6" y="453" width="0.4" height="15.0" fill="rgb(245,94,18)" rx="2" ry="2" />
<text  x="1101.62" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="65.6" y="309" width="0.4" height="15.0" fill="rgb(218,100,12)" rx="2" ry="2" />
<text  x="68.59" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%)</title><rect x="103.3" y="293" width="0.7" height="15.0" fill="rgb(224,143,29)" rx="2" ry="2" />
<text  x="106.29" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.10%)</title><rect x="66.7" y="325" width="1.2" height="15.0" fill="rgb(221,66,14)" rx="2" ry="2" />
<text  x="69.73" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="59.1" y="325" width="0.4" height="15.0" fill="rgb(206,63,42)" rx="2" ry="2" />
<text  x="62.12" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="80.1" y="261" width="0.3" height="15.0" fill="rgb(230,111,4)" rx="2" ry="2" />
<text  x="83.06" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="712.5" y="581" width="0.4" height="15.0" fill="rgb(212,105,35)" rx="2" ry="2" />
<text  x="715.52" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%)</title><rect x="205.0" y="581" width="0.3" height="15.0" fill="rgb(227,35,1)" rx="2" ry="2" />
<text  x="207.95" y="591.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (3 samples, 0.10%)</title><rect x="173.3" y="613" width="1.2" height="15.0" fill="rgb(254,65,53)" rx="2" ry="2" />
<text  x="176.35" y="623.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (7 samples, 0.23%)</title><rect x="78.2" y="373" width="2.6" height="15.0" fill="rgb(220,150,5)" rx="2" ry="2" />
<text  x="81.16" y="383.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="523.7" y="549" width="0.3" height="15.0" fill="rgb(217,101,4)" rx="2" ry="2" />
<text  x="526.66" y="559.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%)</title><rect x="108.6" y="389" width="0.4" height="15.0" fill="rgb(231,172,35)" rx="2" ry="2" />
<text  x="111.62" y="399.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="59.1" y="453" width="0.4" height="15.0" fill="rgb(229,87,3)" rx="2" ry="2" />
<text  x="62.12" y="463.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.03%)</title><rect x="137.9" y="501" width="0.4" height="15.0" fill="rgb(217,60,50)" rx="2" ry="2" />
<text  x="140.94" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (1 samples, 0.03%)</title><rect x="553.0" y="501" width="0.4" height="15.0" fill="rgb(236,179,8)" rx="2" ry="2" />
<text  x="555.98" y="511.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="1189.6" y="693" width="0.4" height="15.0" fill="rgb(206,63,25)" rx="2" ry="2" />
<text  x="1192.62" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%)</title><rect x="79.3" y="229" width="0.8" height="15.0" fill="rgb(208,137,6)" rx="2" ry="2" />
<text  x="82.30" y="239.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="383.2" y="453" width="0.3" height="15.0" fill="rgb(236,212,12)" rx="2" ry="2" />
<text  x="386.15" y="463.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.03%)</title><rect x="1067.0" y="405" width="0.4" height="15.0" fill="rgb(247,60,3)" rx="2" ry="2" />
<text  x="1070.01" y="415.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.03%)</title><rect x="1104.7" y="453" width="0.4" height="15.0" fill="rgb(205,122,13)" rx="2" ry="2" />
<text  x="1107.71" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="90.0" y="165" width="0.3" height="15.0" fill="rgb(244,32,7)" rx="2" ry="2" />
<text  x="92.96" y="175.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%)</title><rect x="205.3" y="533" width="0.4" height="15.0" fill="rgb(213,20,34)" rx="2" ry="2" />
<text  x="208.33" y="543.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.19%)</title><rect x="55.7" y="469" width="2.3" height="15.0" fill="rgb(248,146,34)" rx="2" ry="2" />
<text  x="58.69" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="65.2" y="341" width="0.8" height="15.0" fill="rgb(216,56,37)" rx="2" ry="2" />
<text  x="68.21" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="64.1" y="341" width="0.3" height="15.0" fill="rgb(244,157,4)" rx="2" ry="2" />
<text  x="67.07" y="351.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="72.4" y="261" width="0.4" height="15.0" fill="rgb(212,134,21)" rx="2" ry="2" />
<text  x="75.45" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.03%)</title><rect x="188.6" y="581" width="0.4" height="15.0" fill="rgb(237,201,32)" rx="2" ry="2" />
<text  x="191.58" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="493.2" y="533" width="0.4" height="15.0" fill="rgb(249,37,35)" rx="2" ry="2" />
<text  x="496.19" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%)</title><rect x="54.5" y="309" width="0.4" height="15.0" fill="rgb(223,91,19)" rx="2" ry="2" />
<text  x="57.55" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (4 samples, 0.13%)</title><rect x="102.5" y="437" width="1.5" height="15.0" fill="rgb(215,95,17)" rx="2" ry="2" />
<text  x="105.53" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::allocator (1 samples, 0.03%)</title><rect x="116.2" y="341" width="0.4" height="15.0" fill="rgb(238,109,42)" rx="2" ry="2" />
<text  x="119.23" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (41 samples, 1.32%)</title><rect x="85.8" y="421" width="15.6" height="15.0" fill="rgb(212,102,48)" rx="2" ry="2" />
<text  x="88.77" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%)</title><rect x="29.4" y="501" width="0.4" height="15.0" fill="rgb(215,229,38)" rx="2" ry="2" />
<text  x="32.42" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="113.2" y="357" width="0.4" height="15.0" fill="rgb(229,81,13)" rx="2" ry="2" />
<text  x="116.19" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (306 samples, 9.87%)</title><rect x="268.5" y="501" width="116.6" height="15.0" fill="rgb(241,186,2)" rx="2" ry="2" />
<text  x="271.54" y="511.5" >mutation_reade..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (3 samples, 0.10%)</title><rect x="55.7" y="453" width="1.1" height="15.0" fill="rgb(211,21,12)" rx="2" ry="2" />
<text  x="58.69" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="1103.9" y="469" width="0.4" height="15.0" fill="rgb(237,2,35)" rx="2" ry="2" />
<text  x="1106.95" y="479.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1 samples, 0.03%)</title><rect x="40.1" y="245" width="0.4" height="15.0" fill="rgb(235,5,31)" rx="2" ry="2" />
<text  x="43.08" y="255.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (11 samples, 0.35%)</title><rect x="1166.4" y="725" width="4.2" height="15.0" fill="rgb(246,209,20)" rx="2" ry="2" />
<text  x="1169.39" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::allocate (1 samples, 0.03%)</title><rect x="35.5" y="341" width="0.4" height="15.0" fill="rgb(240,190,40)" rx="2" ry="2" />
<text  x="38.51" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.06%)</title><rect x="35.5" y="389" width="0.8" height="15.0" fill="rgb(230,80,0)" rx="2" ry="2" />
<text  x="38.51" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%)</title><rect x="82.0" y="405" width="0.3" height="15.0" fill="rgb(238,169,28)" rx="2" ry="2" />
<text  x="84.97" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~_Vector_base (1 samples, 0.03%)</title><rect x="105.2" y="405" width="0.4" height="15.0" fill="rgb(253,12,41)" rx="2" ry="2" />
<text  x="108.19" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%)</title><rect x="108.6" y="421" width="0.8" height="15.0" fill="rgb(235,40,47)" rx="2" ry="2" />
<text  x="111.62" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%)</title><rect x="743.4" y="565" width="1.1" height="15.0" fill="rgb(245,81,19)" rx="2" ry="2" />
<text  x="746.36" y="575.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%)</title><rect x="695.0" y="581" width="0.4" height="15.0" fill="rgb(217,14,9)" rx="2" ry="2" />
<text  x="698.00" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%)</title><rect x="72.1" y="325" width="0.7" height="15.0" fill="rgb(249,156,5)" rx="2" ry="2" />
<text  x="75.07" y="335.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.03%)</title><rect x="728.1" y="565" width="0.4" height="15.0" fill="rgb(225,36,22)" rx="2" ry="2" />
<text  x="731.13" y="575.5" ></text>
</g>
<g >
<title>db::system_keyspace::query_mutations (1 samples, 0.03%)</title><rect x="174.5" y="549" width="0.4" height="15.0" fill="rgb(245,147,48)" rx="2" ry="2" />
<text  x="177.49" y="559.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%)</title><rect x="55.3" y="469" width="0.4" height="15.0" fill="rgb(215,13,15)" rx="2" ry="2" />
<text  x="58.31" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="94.1" y="85" width="0.4" height="15.0" fill="rgb(224,155,45)" rx="2" ry="2" />
<text  x="97.15" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.03%)</title><rect x="957.7" y="405" width="0.4" height="15.0" fill="rgb(208,73,53)" rx="2" ry="2" />
<text  x="960.73" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.10%)</title><rect x="93.8" y="373" width="1.1" height="15.0" fill="rgb(205,95,4)" rx="2" ry="2" />
<text  x="96.77" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="73.6" y="357" width="0.4" height="15.0" fill="rgb(230,161,36)" rx="2" ry="2" />
<text  x="76.59" y="367.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (267 samples, 8.62%)</title><rect x="735.4" y="597" width="101.6" height="15.0" fill="rgb(235,196,8)" rx="2" ry="2" />
<text  x="738.36" y="607.5" >single_node_..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="980.2" y="437" width="0.4" height="15.0" fill="rgb(213,157,46)" rx="2" ry="2" />
<text  x="983.20" y="447.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.03%)</title><rect x="844.3" y="437" width="0.3" height="15.0" fill="rgb(229,66,40)" rx="2" ry="2" />
<text  x="847.26" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (3 samples, 0.10%)</title><rect x="84.2" y="325" width="1.2" height="15.0" fill="rgb(208,139,24)" rx="2" ry="2" />
<text  x="87.25" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (1 samples, 0.03%)</title><rect x="30.9" y="453" width="0.4" height="15.0" fill="rgb(218,166,50)" rx="2" ry="2" />
<text  x="33.94" y="463.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="92.6" y="213" width="0.4" height="15.0" fill="rgb(229,41,49)" rx="2" ry="2" />
<text  x="95.63" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="102.1" y="405" width="0.4" height="15.0" fill="rgb(228,6,37)" rx="2" ry="2" />
<text  x="105.15" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%)</title><rect x="664.5" y="581" width="0.4" height="15.0" fill="rgb(241,123,25)" rx="2" ry="2" />
<text  x="667.54" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="66.7" y="181" width="0.4" height="15.0" fill="rgb(241,210,15)" rx="2" ry="2" />
<text  x="69.73" y="191.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="115.5" y="325" width="0.4" height="15.0" fill="rgb(206,152,15)" rx="2" ry="2" />
<text  x="118.47" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="68.6" y="277" width="0.4" height="15.0" fill="rgb(205,26,20)" rx="2" ry="2" />
<text  x="71.64" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="72.1" y="261" width="0.3" height="15.0" fill="rgb(207,43,52)" rx="2" ry="2" />
<text  x="75.07" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%)</title><rect x="684.0" y="597" width="0.3" height="15.0" fill="rgb(245,184,34)" rx="2" ry="2" />
<text  x="686.96" y="607.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="137.9" y="677" width="0.4" height="15.0" fill="rgb(225,221,34)" rx="2" ry="2" />
<text  x="140.94" y="687.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::statements::raw::use_statement&gt;, true&gt;::_Head_base (1 samples, 0.03%)</title><rect x="124.2" y="421" width="0.4" height="15.0" fill="rgb(248,76,36)" rx="2" ry="2" />
<text  x="127.23" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.10%)</title><rect x="1108.1" y="309" width="1.2" height="15.0" fill="rgb(232,206,4)" rx="2" ry="2" />
<text  x="1111.13" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (2,647 samples, 85.41%)</title><rect x="145.2" y="629" width="1007.9" height="15.0" fill="rgb(229,37,15)" rx="2" ry="2" />
<text  x="148.17" y="639.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.10%)</title><rect x="70.2" y="341" width="1.1" height="15.0" fill="rgb(212,192,44)" rx="2" ry="2" />
<text  x="73.16" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="655.0" y="517" width="0.4" height="15.0" fill="rgb(229,160,23)" rx="2" ry="2" />
<text  x="658.02" y="527.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (2 samples, 0.06%)</title><rect x="586.1" y="469" width="0.8" height="15.0" fill="rgb(209,87,47)" rx="2" ry="2" />
<text  x="589.10" y="479.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (44 samples, 1.42%)</title><rect x="498.5" y="533" width="16.8" height="15.0" fill="rgb(247,209,13)" rx="2" ry="2" />
<text  x="501.53" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="684.7" y="565" width="0.4" height="15.0" fill="rgb(218,128,8)" rx="2" ry="2" />
<text  x="687.72" y="575.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (19 samples, 0.61%)</title><rect x="648.5" y="613" width="7.3" height="15.0" fill="rgb(229,5,19)" rx="2" ry="2" />
<text  x="651.55" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%)</title><rect x="101.0" y="389" width="0.4" height="15.0" fill="rgb(235,117,17)" rx="2" ry="2" />
<text  x="104.00" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.19%)</title><rect x="971.1" y="421" width="2.2" height="15.0" fill="rgb(227,162,31)" rx="2" ry="2" />
<text  x="974.06" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%)</title><rect x="29.0" y="517" width="0.4" height="15.0" fill="rgb(233,104,10)" rx="2" ry="2" />
<text  x="32.04" y="527.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%)</title><rect x="58.0" y="437" width="0.4" height="15.0" fill="rgb(235,161,47)" rx="2" ry="2" />
<text  x="60.98" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="108.6" y="309" width="0.4" height="15.0" fill="rgb(243,225,16)" rx="2" ry="2" />
<text  x="111.62" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%)</title><rect x="100.2" y="357" width="0.4" height="15.0" fill="rgb(211,113,39)" rx="2" ry="2" />
<text  x="103.24" y="367.5" ></text>
</g>
<g >
<title>reader_permit::mark_used (1 samples, 0.03%)</title><rect x="203.8" y="581" width="0.4" height="15.0" fill="rgb(251,167,2)" rx="2" ry="2" />
<text  x="206.81" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="77.0" y="357" width="0.4" height="15.0" fill="rgb(251,109,28)" rx="2" ry="2" />
<text  x="80.02" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (1 samples, 0.03%)</title><rect x="1109.7" y="341" width="0.3" height="15.0" fill="rgb(240,141,16)" rx="2" ry="2" />
<text  x="1112.66" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="1117.3" y="341" width="0.4" height="15.0" fill="rgb(240,112,15)" rx="2" ry="2" />
<text  x="1120.27" y="351.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.03%)</title><rect x="52.6" y="453" width="0.4" height="15.0" fill="rgb(251,91,22)" rx="2" ry="2" />
<text  x="55.65" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="655.0" y="533" width="0.4" height="15.0" fill="rgb(245,222,51)" rx="2" ry="2" />
<text  x="658.02" y="543.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%)</title><rect x="799.7" y="437" width="0.8" height="15.0" fill="rgb(230,9,7)" rx="2" ry="2" />
<text  x="802.71" y="447.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%)</title><rect x="108.6" y="405" width="0.4" height="15.0" fill="rgb(223,62,43)" rx="2" ry="2" />
<text  x="111.62" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="174.5" y="453" width="0.4" height="15.0" fill="rgb(215,67,13)" rx="2" ry="2" />
<text  x="177.49" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="99.1" y="309" width="0.8" height="15.0" fill="rgb(242,71,9)" rx="2" ry="2" />
<text  x="102.10" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%)</title><rect x="525.2" y="533" width="0.4" height="15.0" fill="rgb(227,137,3)" rx="2" ry="2" />
<text  x="528.18" y="543.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="967.3" y="453" width="0.3" height="15.0" fill="rgb(221,26,18)" rx="2" ry="2" />
<text  x="970.25" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="107.9" y="341" width="0.3" height="15.0" fill="rgb(238,139,8)" rx="2" ry="2" />
<text  x="110.86" y="351.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_List::_Impl::copy (1 samples, 0.03%)</title><rect x="129.2" y="709" width="0.4" height="15.0" fill="rgb(244,113,45)" rx="2" ry="2" />
<text  x="132.18" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%)</title><rect x="68.6" y="229" width="0.4" height="15.0" fill="rgb(241,178,2)" rx="2" ry="2" />
<text  x="71.64" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="73.2" y="341" width="0.4" height="15.0" fill="rgb(214,69,0)" rx="2" ry="2" />
<text  x="76.21" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_role_statement, std::default_delete&lt;cql3::statements::revoke_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::revoke_role_statement&gt;, void&gt; (1 samples, 0.03%)</title><rect x="124.6" y="501" width="0.4" height="15.0" fill="rgb(243,224,19)" rx="2" ry="2" />
<text  x="127.61" y="511.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (1 samples, 0.03%)</title><rect x="751.4" y="565" width="0.3" height="15.0" fill="rgb(249,50,12)" rx="2" ry="2" />
<text  x="754.36" y="575.5" ></text>
</g>
<g >
<title>main (2,670 samples, 86.16%)</title><rect x="139.5" y="725" width="1016.6" height="15.0" fill="rgb(253,121,21)" rx="2" ry="2" />
<text  x="142.46" y="735.5" >main</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="72.4" y="197" width="0.4" height="15.0" fill="rgb(244,196,18)" rx="2" ry="2" />
<text  x="75.45" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="94.1" y="181" width="0.4" height="15.0" fill="rgb(244,35,38)" rx="2" ry="2" />
<text  x="97.15" y="191.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="83.1" y="341" width="0.4" height="15.0" fill="rgb(254,148,13)" rx="2" ry="2" />
<text  x="86.11" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.03%)</title><rect x="402.6" y="533" width="0.4" height="15.0" fill="rgb(215,0,54)" rx="2" ry="2" />
<text  x="405.57" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (2 samples, 0.06%)</title><rect x="1108.5" y="293" width="0.8" height="15.0" fill="rgb(234,151,33)" rx="2" ry="2" />
<text  x="1111.52" y="303.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.03%)</title><rect x="904.4" y="485" width="0.4" height="15.0" fill="rgb(220,8,21)" rx="2" ry="2" />
<text  x="907.42" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.7" y="53" width="0.4" height="15.0" fill="rgb(211,128,22)" rx="2" ry="2" />
<text  x="82.68" y="63.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (1 samples, 0.03%)</title><rect x="837.0" y="597" width="0.4" height="15.0" fill="rgb(222,157,41)" rx="2" ry="2" />
<text  x="840.03" y="607.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_token_present (1 samples, 0.03%)</title><rect x="43.1" y="389" width="0.4" height="15.0" fill="rgb(210,204,2)" rx="2" ry="2" />
<text  x="46.13" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::raw::parsed_statement*, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt; (1 samples, 0.03%)</title><rect x="123.5" y="437" width="0.3" height="15.0" fill="rgb(225,35,43)" rx="2" ry="2" />
<text  x="126.47" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (3 samples, 0.10%)</title><rect x="101.4" y="437" width="1.1" height="15.0" fill="rgb(209,74,1)" rx="2" ry="2" />
<text  x="104.38" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="72.1" y="293" width="0.7" height="15.0" fill="rgb(253,130,36)" rx="2" ry="2" />
<text  x="75.07" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.10%)</title><rect x="32.8" y="261" width="1.2" height="15.0" fill="rgb(210,127,25)" rx="2" ry="2" />
<text  x="35.85" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (29 samples, 0.94%)</title><rect x="1015.2" y="373" width="11.1" height="15.0" fill="rgb(246,155,8)" rx="2" ry="2" />
<text  x="1018.23" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.10%)</title><rect x="70.2" y="373" width="1.1" height="15.0" fill="rgb(234,52,18)" rx="2" ry="2" />
<text  x="73.16" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%)</title><rect x="938.3" y="469" width="1.9" height="15.0" fill="rgb(213,50,39)" rx="2" ry="2" />
<text  x="941.31" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%)</title><rect x="111.3" y="373" width="0.4" height="15.0" fill="rgb(248,9,6)" rx="2" ry="2" />
<text  x="114.28" y="383.5" ></text>
</g>
<g >
<title>intrusive_b::node&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.03%)</title><rect x="173.7" y="469" width="0.4" height="15.0" fill="rgb(209,9,54)" rx="2" ry="2" />
<text  x="176.73" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.7" y="85" width="0.4" height="15.0" fill="rgb(247,187,41)" rx="2" ry="2" />
<text  x="82.68" y="95.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (1 samples, 0.03%)</title><rect x="16.5" y="501" width="0.4" height="15.0" fill="rgb(211,54,46)" rx="2" ry="2" />
<text  x="19.47" y="511.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (4 samples, 0.13%)</title><rect x="1092.5" y="533" width="1.5" height="15.0" fill="rgb(206,10,51)" rx="2" ry="2" />
<text  x="1095.52" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (4 samples, 0.13%)</title><rect x="79.3" y="309" width="1.5" height="15.0" fill="rgb(228,186,24)" rx="2" ry="2" />
<text  x="82.30" y="319.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="65.6" y="245" width="0.4" height="15.0" fill="rgb(241,219,29)" rx="2" ry="2" />
<text  x="68.59" y="255.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%)</title><rect x="602.1" y="517" width="0.8" height="15.0" fill="rgb(226,59,14)" rx="2" ry="2" />
<text  x="605.09" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%)</title><rect x="106.3" y="373" width="0.8" height="15.0" fill="rgb(209,52,24)" rx="2" ry="2" />
<text  x="109.33" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (5 samples, 0.16%)</title><rect x="71.7" y="421" width="1.9" height="15.0" fill="rgb(229,173,38)" rx="2" ry="2" />
<text  x="74.68" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="108.6" y="341" width="0.4" height="15.0" fill="rgb(234,115,33)" rx="2" ry="2" />
<text  x="111.62" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 1.10%)</title><rect x="1104.7" y="565" width="13.0" height="15.0" fill="rgb(239,211,42)" rx="2" ry="2" />
<text  x="1107.71" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="1108.9" y="245" width="0.4" height="15.0" fill="rgb(224,68,52)" rx="2" ry="2" />
<text  x="1111.90" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (5 samples, 0.16%)</title><rect x="1154.2" y="613" width="1.9" height="15.0" fill="rgb(240,227,14)" rx="2" ry="2" />
<text  x="1157.21" y="623.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (297 samples, 9.58%)</title><rect x="14.2" y="613" width="113.1" height="15.0" fill="rgb(229,51,33)" rx="2" ry="2" />
<text  x="17.19" y="623.5" >single_node_c..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.06%)</title><rect x="39.7" y="325" width="0.8" height="15.0" fill="rgb(229,182,31)" rx="2" ry="2" />
<text  x="42.70" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%)</title><rect x="735.0" y="565" width="0.4" height="15.0" fill="rgb(216,128,50)" rx="2" ry="2" />
<text  x="737.98" y="575.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (2 samples, 0.06%)</title><rect x="577.0" y="485" width="0.7" height="15.0" fill="rgb(246,207,45)" rx="2" ry="2" />
<text  x="579.96" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="80.1" y="277" width="0.3" height="15.0" fill="rgb(245,115,15)" rx="2" ry="2" />
<text  x="83.06" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="77.0" y="325" width="0.4" height="15.0" fill="rgb(251,197,44)" rx="2" ry="2" />
<text  x="80.02" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="108.2" y="437" width="0.4" height="15.0" fill="rgb(209,61,40)" rx="2" ry="2" />
<text  x="111.24" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="853.4" y="549" width="0.4" height="15.0" fill="rgb(250,195,25)" rx="2" ry="2" />
<text  x="856.40" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned int&gt;::_Rb_tree_const_iterator (1 samples, 0.03%)</title><rect x="52.3" y="421" width="0.3" height="15.0" fill="rgb(206,112,10)" rx="2" ry="2" />
<text  x="55.27" y="431.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (3 samples, 0.10%)</title><rect x="1097.5" y="469" width="1.1" height="15.0" fill="rgb(249,92,39)" rx="2" ry="2" />
<text  x="1100.47" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="85.4" y="405" width="0.4" height="15.0" fill="rgb(241,98,13)" rx="2" ry="2" />
<text  x="88.39" y="415.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (1 samples, 0.03%)</title><rect x="24.8" y="469" width="0.4" height="15.0" fill="rgb(246,50,30)" rx="2" ry="2" />
<text  x="27.85" y="479.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="109.0" y="229" width="0.4" height="15.0" fill="rgb(217,145,43)" rx="2" ry="2" />
<text  x="112.00" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="123.5" y="453" width="0.3" height="15.0" fill="rgb(227,126,17)" rx="2" ry="2" />
<text  x="126.47" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="94.1" y="165" width="0.4" height="15.0" fill="rgb(212,173,13)" rx="2" ry="2" />
<text  x="97.15" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="244.6" y="533" width="0.3" height="15.0" fill="rgb(245,11,45)" rx="2" ry="2" />
<text  x="247.55" y="543.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (18 samples, 0.58%)</title><rect x="735.7" y="581" width="6.9" height="15.0" fill="rgb(232,85,34)" rx="2" ry="2" />
<text  x="738.74" y="591.5" ></text>
</g>
<g >
<title>db::schema_tables::make_table_mutations (1 samples, 0.03%)</title><rect x="174.1" y="485" width="0.4" height="15.0" fill="rgb(232,117,42)" rx="2" ry="2" />
<text  x="177.11" y="495.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%)</title><rect x="613.1" y="453" width="0.4" height="15.0" fill="rgb(233,16,52)" rx="2" ry="2" />
<text  x="616.14" y="463.5" ></text>
</g>
<g >
<title>auth::resource::parent (1 samples, 0.03%)</title><rect x="774.2" y="517" width="0.4" height="15.0" fill="rgb(251,56,13)" rx="2" ry="2" />
<text  x="777.20" y="527.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (3 samples, 0.10%)</title><rect x="366.4" y="421" width="1.1" height="15.0" fill="rgb(230,10,32)" rx="2" ry="2" />
<text  x="369.40" y="431.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="89.6" y="197" width="0.7" height="15.0" fill="rgb(231,122,37)" rx="2" ry="2" />
<text  x="92.58" y="207.5" ></text>
</g>
<g >
<title>row::~row (3 samples, 0.10%)</title><rect x="383.5" y="453" width="1.2" height="15.0" fill="rgb(215,60,5)" rx="2" ry="2" />
<text  x="386.53" y="463.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="684.3" y="581" width="0.8" height="15.0" fill="rgb(234,67,2)" rx="2" ry="2" />
<text  x="687.34" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="109.4" y="421" width="0.4" height="15.0" fill="rgb(217,217,1)" rx="2" ry="2" />
<text  x="112.38" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (3 samples, 0.10%)</title><rect x="202.3" y="533" width="1.1" height="15.0" fill="rgb(224,96,24)" rx="2" ry="2" />
<text  x="205.29" y="543.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="1110.0" y="357" width="0.4" height="15.0" fill="rgb(249,201,28)" rx="2" ry="2" />
<text  x="1113.04" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (249 samples, 8.03%)</title><rect x="524.0" y="549" width="94.8" height="15.0" fill="rgb(254,165,42)" rx="2" ry="2" />
<text  x="527.04" y="559.5" >std::_Funct..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="111.7" y="357" width="0.3" height="15.0" fill="rgb(247,10,6)" rx="2" ry="2" />
<text  x="114.67" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="87.7" y="341" width="0.4" height="15.0" fill="rgb(247,229,45)" rx="2" ry="2" />
<text  x="90.68" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="109.0" y="325" width="0.4" height="15.0" fill="rgb(224,129,40)" rx="2" ry="2" />
<text  x="112.00" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="65.2" y="373" width="0.8" height="15.0" fill="rgb(220,192,10)" rx="2" ry="2" />
<text  x="68.21" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.06%)</title><rect x="586.9" y="469" width="0.7" height="15.0" fill="rgb(234,44,5)" rx="2" ry="2" />
<text  x="589.86" y="479.5" ></text>
</g>
<g >
<title>db::schema_tables::compact_for_schema_digest (1 samples, 0.03%)</title><rect x="173.7" y="533" width="0.4" height="15.0" fill="rgb(237,141,33)" rx="2" ry="2" />
<text  x="176.73" y="543.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="55.7" y="309" width="0.4" height="15.0" fill="rgb(237,88,9)" rx="2" ry="2" />
<text  x="58.69" y="319.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (1 samples, 0.03%)</title><rect x="135.7" y="661" width="0.3" height="15.0" fill="rgb(234,200,48)" rx="2" ry="2" />
<text  x="138.65" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%)</title><rect x="1027.4" y="373" width="1.5" height="15.0" fill="rgb(248,126,33)" rx="2" ry="2" />
<text  x="1030.41" y="383.5" ></text>
</g>
<g >
<title>__strdup (1 samples, 0.03%)</title><rect x="137.2" y="725" width="0.4" height="15.0" fill="rgb(241,73,38)" rx="2" ry="2" />
<text  x="140.18" y="735.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%)</title><rect x="116.2" y="421" width="0.4" height="15.0" fill="rgb(227,166,9)" rx="2" ry="2" />
<text  x="119.23" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (6 samples, 0.19%)</title><rect x="106.0" y="421" width="2.2" height="15.0" fill="rgb(234,175,25)" rx="2" ry="2" />
<text  x="108.95" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.03%)</title><rect x="58.7" y="453" width="0.4" height="15.0" fill="rgb(253,1,35)" rx="2" ry="2" />
<text  x="61.74" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="29.4" y="485" width="0.4" height="15.0" fill="rgb(230,23,37)" rx="2" ry="2" />
<text  x="32.42" y="495.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="128.8" y="677" width="0.4" height="15.0" fill="rgb(216,28,25)" rx="2" ry="2" />
<text  x="131.80" y="687.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.03%)</title><rect x="142.5" y="629" width="0.4" height="15.0" fill="rgb(213,145,0)" rx="2" ry="2" />
<text  x="145.51" y="639.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (1 samples, 0.03%)</title><rect x="1119.6" y="613" width="0.3" height="15.0" fill="rgb(220,151,23)" rx="2" ry="2" />
<text  x="1122.56" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;, std::allocator&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt; &gt; &gt;::~vector (1 samples, 0.03%)</title><rect x="27.9" y="533" width="0.4" height="15.0" fill="rgb(227,9,38)" rx="2" ry="2" />
<text  x="30.90" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%)</title><rect x="625.7" y="565" width="0.4" height="15.0" fill="rgb(230,92,41)" rx="2" ry="2" />
<text  x="628.70" y="575.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%)</title><rect x="116.2" y="405" width="0.4" height="15.0" fill="rgb(223,51,47)" rx="2" ry="2" />
<text  x="119.23" y="415.5" ></text>
</g>
<g >
<title>schema_registry_entry::is_synced (1 samples, 0.03%)</title><rect x="1104.3" y="549" width="0.4" height="15.0" fill="rgb(238,17,36)" rx="2" ry="2" />
<text  x="1107.33" y="559.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%)</title><rect x="82.3" y="309" width="0.4" height="15.0" fill="rgb(218,101,32)" rx="2" ry="2" />
<text  x="85.35" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="96.8" y="357" width="0.4" height="15.0" fill="rgb(223,93,42)" rx="2" ry="2" />
<text  x="99.82" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.10%)</title><rect x="53.8" y="437" width="1.1" height="15.0" fill="rgb(219,128,31)" rx="2" ry="2" />
<text  x="56.79" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="244.6" y="549" width="0.3" height="15.0" fill="rgb(231,198,16)" rx="2" ry="2" />
<text  x="247.55" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.03%)</title><rect x="850.7" y="421" width="0.4" height="15.0" fill="rgb(230,156,29)" rx="2" ry="2" />
<text  x="853.74" y="431.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (2 samples, 0.06%)</title><rect x="86.2" y="389" width="0.7" height="15.0" fill="rgb(225,84,45)" rx="2" ry="2" />
<text  x="89.15" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.03%)</title><rect x="182.9" y="597" width="0.3" height="15.0" fill="rgb(243,222,43)" rx="2" ry="2" />
<text  x="185.87" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="108.6" y="325" width="0.4" height="15.0" fill="rgb(228,53,1)" rx="2" ry="2" />
<text  x="111.62" y="335.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.03%)</title><rect x="1116.9" y="357" width="0.4" height="15.0" fill="rgb(237,26,7)" rx="2" ry="2" />
<text  x="1119.89" y="367.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (45 samples, 1.45%)</title><rect x="1056.4" y="437" width="17.1" height="15.0" fill="rgb(252,24,22)" rx="2" ry="2" />
<text  x="1059.35" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="19.9" y="453" width="0.4" height="15.0" fill="rgb(209,96,54)" rx="2" ry="2" />
<text  x="22.90" y="463.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="108.6" y="261" width="0.4" height="15.0" fill="rgb(250,47,1)" rx="2" ry="2" />
<text  x="111.62" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (21 samples, 0.68%)</title><rect x="16.1" y="549" width="8.0" height="15.0" fill="rgb(221,198,8)" rx="2" ry="2" />
<text  x="19.09" y="559.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_M_append (1 samples, 0.03%)</title><rect x="138.3" y="725" width="0.4" height="15.0" fill="rgb(224,175,27)" rx="2" ry="2" />
<text  x="141.32" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%)</title><rect x="40.1" y="277" width="0.4" height="15.0" fill="rgb(222,124,28)" rx="2" ry="2" />
<text  x="43.08" y="287.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::explode (1 samples, 0.03%)</title><rect x="1109.3" y="309" width="0.4" height="15.0" fill="rgb(205,162,18)" rx="2" ry="2" />
<text  x="1112.28" y="319.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.26%)</title><rect x="503.1" y="501" width="3.0" height="15.0" fill="rgb(245,109,45)" rx="2" ry="2" />
<text  x="506.09" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (4 samples, 0.13%)</title><rect x="24.1" y="549" width="1.5" height="15.0" fill="rgb(221,145,16)" rx="2" ry="2" />
<text  x="27.09" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::drop_service_level_statement*, std::default_delete&lt;cql3::statements::drop_service_level_statement&gt; &gt; (1 samples, 0.03%)</title><rect x="122.3" y="469" width="0.4" height="15.0" fill="rgb(234,54,48)" rx="2" ry="2" />
<text  x="125.33" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="109.0" y="293" width="0.4" height="15.0" fill="rgb(217,159,29)" rx="2" ry="2" />
<text  x="112.00" y="303.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="1044.9" y="453" width="0.4" height="15.0" fill="rgb(233,191,3)" rx="2" ry="2" />
<text  x="1047.93" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%)</title><rect x="34.4" y="309" width="0.3" height="15.0" fill="rgb(216,53,6)" rx="2" ry="2" />
<text  x="37.37" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;3ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="94.1" y="53" width="0.4" height="15.0" fill="rgb(244,205,11)" rx="2" ry="2" />
<text  x="97.15" y="63.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%)</title><rect x="127.7" y="613" width="0.3" height="15.0" fill="rgb(216,202,18)" rx="2" ry="2" />
<text  x="130.66" y="623.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%)</title><rect x="1050.3" y="453" width="0.3" height="15.0" fill="rgb(214,29,34)" rx="2" ry="2" />
<text  x="1053.26" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="308.1" y="437" width="0.4" height="15.0" fill="rgb(209,156,42)" rx="2" ry="2" />
<text  x="311.14" y="447.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (3 samples, 0.10%)</title><rect x="722.8" y="581" width="1.1" height="15.0" fill="rgb(210,2,11)" rx="2" ry="2" />
<text  x="725.80" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%)</title><rect x="73.2" y="213" width="0.4" height="15.0" fill="rgb(253,47,1)" rx="2" ry="2" />
<text  x="76.21" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%)</title><rect x="79.3" y="245" width="0.8" height="15.0" fill="rgb(223,33,24)" rx="2" ry="2" />
<text  x="82.30" y="255.5" ></text>
</g>
<g >
<title>fmt::v7::detail::value&lt;fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt;::format_custom_arg&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, fmt::v7::detail::fallback_formatter&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, char, void&gt; &gt; (1 samples, 0.03%)</title><rect x="13.8" y="597" width="0.4" height="15.0" fill="rgb(242,219,8)" rx="2" ry="2" />
<text  x="16.81" y="607.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%)</title><rect x="711.4" y="597" width="1.5" height="15.0" fill="rgb(221,73,47)" rx="2" ry="2" />
<text  x="714.37" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="66.7" y="117" width="0.4" height="15.0" fill="rgb(239,13,43)" rx="2" ry="2" />
<text  x="69.73" y="127.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%)</title><rect x="127.7" y="469" width="0.3" height="15.0" fill="rgb(220,0,51)" rx="2" ry="2" />
<text  x="130.66" y="479.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (1 samples, 0.03%)</title><rect x="128.0" y="629" width="0.4" height="15.0" fill="rgb(228,28,14)" rx="2" ry="2" />
<text  x="131.04" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="94.1" y="117" width="0.4" height="15.0" fill="rgb(221,68,21)" rx="2" ry="2" />
<text  x="97.15" y="127.5" ></text>
</g>
<g >
<title>cdc::do_update_streams_description (1 samples, 0.03%)</title><rect x="167.6" y="613" width="0.4" height="15.0" fill="rgb(217,178,3)" rx="2" ry="2" />
<text  x="170.64" y="623.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="65.2" y="277" width="0.4" height="15.0" fill="rgb(237,158,45)" rx="2" ry="2" />
<text  x="68.21" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.06%)</title><rect x="153.9" y="597" width="0.8" height="15.0" fill="rgb(227,168,7)" rx="2" ry="2" />
<text  x="156.93" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.68%)</title><rect x="990.1" y="389" width="8.0" height="15.0" fill="rgb(241,66,13)" rx="2" ry="2" />
<text  x="993.10" y="399.5" ></text>
</g>
<g >
<title>free (6 samples, 0.19%)</title><rect x="427.3" y="469" width="2.3" height="15.0" fill="rgb(237,168,32)" rx="2" ry="2" />
<text  x="430.32" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (4 samples, 0.13%)</title><rect x="66.7" y="357" width="1.6" height="15.0" fill="rgb(221,117,35)" rx="2" ry="2" />
<text  x="69.73" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;cql3::expr::expression&gt;::optional (1 samples, 0.03%)</title><rect x="116.6" y="421" width="0.4" height="15.0" fill="rgb(217,0,8)" rx="2" ry="2" />
<text  x="119.62" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (1 samples, 0.03%)</title><rect x="126.9" y="581" width="0.4" height="15.0" fill="rgb(245,118,27)" rx="2" ry="2" />
<text  x="129.90" y="591.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="107.9" y="389" width="0.3" height="15.0" fill="rgb(252,36,13)" rx="2" ry="2" />
<text  x="110.86" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (17 samples, 0.55%)</title><rect x="86.9" y="405" width="6.5" height="15.0" fill="rgb(221,117,22)" rx="2" ry="2" />
<text  x="89.92" y="415.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="182.1" y="597" width="0.8" height="15.0" fill="rgb(236,152,45)" rx="2" ry="2" />
<text  x="185.11" y="607.5" ></text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (1 samples, 0.03%)</title><rect x="174.1" y="501" width="0.4" height="15.0" fill="rgb(212,229,35)" rx="2" ry="2" />
<text  x="177.11" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.03%)</title><rect x="138.3" y="629" width="0.4" height="15.0" fill="rgb(249,163,4)" rx="2" ry="2" />
<text  x="141.32" y="639.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.03%)</title><rect x="846.2" y="421" width="0.3" height="15.0" fill="rgb(243,97,53)" rx="2" ry="2" />
<text  x="849.17" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="123.1" y="469" width="0.4" height="15.0" fill="rgb(236,226,26)" rx="2" ry="2" />
<text  x="126.09" y="479.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="60.3" y="277" width="0.3" height="15.0" fill="rgb(220,220,39)" rx="2" ry="2" />
<text  x="63.26" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.03%)</title><rect x="138.3" y="661" width="0.4" height="15.0" fill="rgb(215,59,9)" rx="2" ry="2" />
<text  x="141.32" y="671.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="114.3" y="309" width="0.4" height="15.0" fill="rgb(221,2,8)" rx="2" ry="2" />
<text  x="117.33" y="319.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%)</title><rect x="137.9" y="661" width="0.4" height="15.0" fill="rgb(230,81,7)" rx="2" ry="2" />
<text  x="140.94" y="671.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (4 samples, 0.13%)</title><rect x="881.2" y="453" width="1.5" height="15.0" fill="rgb(244,87,40)" rx="2" ry="2" />
<text  x="884.20" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="94.9" y="357" width="0.4" height="15.0" fill="rgb(217,104,48)" rx="2" ry="2" />
<text  x="97.91" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::selectStatement (1 samples, 0.03%)</title><rect x="137.9" y="421" width="0.4" height="15.0" fill="rgb(228,192,42)" rx="2" ry="2" />
<text  x="140.94" y="431.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (2 samples, 0.06%)</title><rect x="1155.4" y="581" width="0.7" height="15.0" fill="rgb(217,116,34)" rx="2" ry="2" />
<text  x="1158.35" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%)</title><rect x="733.8" y="581" width="1.6" height="15.0" fill="rgb(223,69,35)" rx="2" ry="2" />
<text  x="736.84" y="591.5" ></text>
</g>
<g >
<title>visit&lt;abstract_type::get_string (1 samples, 0.03%)</title><rect x="176.0" y="421" width="0.4" height="15.0" fill="rgb(249,163,41)" rx="2" ry="2" />
<text  x="179.01" y="431.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="86.5" y="325" width="0.4" height="15.0" fill="rgb(220,20,24)" rx="2" ry="2" />
<text  x="89.53" y="335.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%)</title><rect x="327.2" y="405" width="0.4" height="15.0" fill="rgb(218,135,48)" rx="2" ry="2" />
<text  x="330.18" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="114.7" y="309" width="0.8" height="15.0" fill="rgb(221,167,24)" rx="2" ry="2" />
<text  x="117.71" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%)</title><rect x="384.7" y="453" width="0.4" height="15.0" fill="rgb(229,150,32)" rx="2" ry="2" />
<text  x="387.68" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::add_operation (1 samples, 0.03%)</title><rect x="16.9" y="533" width="0.3" height="15.0" fill="rgb(208,118,39)" rx="2" ry="2" />
<text  x="19.85" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="68.6" y="357" width="0.4" height="15.0" fill="rgb(234,190,25)" rx="2" ry="2" />
<text  x="71.64" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.06%)</title><rect x="287.2" y="469" width="0.8" height="15.0" fill="rgb(230,200,39)" rx="2" ry="2" />
<text  x="290.20" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%)</title><rect x="77.8" y="421" width="0.4" height="15.0" fill="rgb(214,165,6)" rx="2" ry="2" />
<text  x="80.78" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.10%)</title><rect x="642.8" y="597" width="1.2" height="15.0" fill="rgb(221,131,24)" rx="2" ry="2" />
<text  x="645.84" y="607.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%)</title><rect x="137.9" y="725" width="0.4" height="15.0" fill="rgb(236,39,34)" rx="2" ry="2" />
<text  x="140.94" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="436.8" y="501" width="0.8" height="15.0" fill="rgb(225,32,41)" rx="2" ry="2" />
<text  x="439.84" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.03%)</title><rect x="1100.9" y="437" width="0.4" height="15.0" fill="rgb(222,38,52)" rx="2" ry="2" />
<text  x="1103.90" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%)</title><rect x="677.1" y="597" width="0.4" height="15.0" fill="rgb(217,111,41)" rx="2" ry="2" />
<text  x="680.11" y="607.5" ></text>
</g>
<g >
<title>seastar::posix_thread::start_routine (1 samples, 0.03%)</title><rect x="1189.6" y="725" width="0.4" height="15.0" fill="rgb(211,105,17)" rx="2" ry="2" />
<text  x="1192.62" y="735.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%)</title><rect x="10.4" y="629" width="0.4" height="15.0" fill="rgb(239,165,32)" rx="2" ry="2" />
<text  x="13.38" y="639.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%)</title><rect x="606.3" y="501" width="0.4" height="15.0" fill="rgb(245,204,35)" rx="2" ry="2" />
<text  x="609.28" y="511.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="840.5" y="581" width="0.3" height="15.0" fill="rgb(250,9,28)" rx="2" ry="2" />
<text  x="843.45" y="591.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (7 samples, 0.23%)</title><rect x="1080.3" y="517" width="2.7" height="15.0" fill="rgb(231,226,18)" rx="2" ry="2" />
<text  x="1083.34" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (8 samples, 0.26%)</title><rect x="31.7" y="341" width="3.0" height="15.0" fill="rgb(211,158,43)" rx="2" ry="2" />
<text  x="34.70" y="351.5" ></text>
</g>
<g >
<title>_setjmp (1 samples, 0.03%)</title><rect x="633.3" y="597" width="0.4" height="15.0" fill="rgb(229,201,8)" rx="2" ry="2" />
<text  x="636.32" y="607.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (2 samples, 0.06%)</title><rect x="173.7" y="597" width="0.8" height="15.0" fill="rgb(233,13,10)" rx="2" ry="2" />
<text  x="176.73" y="607.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (636 samples, 20.52%)</title><rect x="853.8" y="597" width="242.2" height="15.0" fill="rgb(218,172,38)" rx="2" ry="2" />
<text  x="856.78" y="607.5" >seastar::concrete_execution_stag..</text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.26%)</title><rect x="824.8" y="533" width="3.1" height="15.0" fill="rgb(253,85,22)" rx="2" ry="2" />
<text  x="827.84" y="543.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.06%)</title><rect x="829.8" y="549" width="0.8" height="15.0" fill="rgb(215,93,13)" rx="2" ry="2" />
<text  x="832.79" y="559.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%)</title><rect x="89.6" y="229" width="1.1" height="15.0" fill="rgb(245,95,53)" rx="2" ry="2" />
<text  x="92.58" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="99.1" y="261" width="0.8" height="15.0" fill="rgb(207,159,7)" rx="2" ry="2" />
<text  x="102.10" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (19 samples, 0.61%)</title><rect x="423.5" y="485" width="7.2" height="15.0" fill="rgb(230,108,41)" rx="2" ry="2" />
<text  x="426.51" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="776.5" y="501" width="0.7" height="15.0" fill="rgb(216,46,34)" rx="2" ry="2" />
<text  x="779.49" y="511.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::setTokenStream (2 samples, 0.06%)</title><rect x="24.1" y="517" width="0.7" height="15.0" fill="rgb(244,8,10)" rx="2" ry="2" />
<text  x="27.09" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_Head_base (1 samples, 0.03%)</title><rect x="107.5" y="325" width="0.4" height="15.0" fill="rgb(227,81,19)" rx="2" ry="2" />
<text  x="110.48" y="335.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (44 samples, 1.42%)</title><rect x="878.9" y="485" width="16.8" height="15.0" fill="rgb(212,8,32)" rx="2" ry="2" />
<text  x="881.91" y="495.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="35.1" y="373" width="0.4" height="15.0" fill="rgb(231,145,29)" rx="2" ry="2" />
<text  x="38.13" y="383.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (40 samples, 1.29%)</title><rect x="454.7" y="485" width="15.3" height="15.0" fill="rgb(227,87,42)" rx="2" ry="2" />
<text  x="457.74" y="495.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%)</title><rect x="551.5" y="485" width="0.7" height="15.0" fill="rgb(250,40,7)" rx="2" ry="2" />
<text  x="554.45" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%)</title><rect x="101.8" y="405" width="0.3" height="15.0" fill="rgb(226,88,38)" rx="2" ry="2" />
<text  x="104.77" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;, std::allocator&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt; &gt; &gt;::~vector (1 samples, 0.03%)</title><rect x="126.1" y="549" width="0.4" height="15.0" fill="rgb(214,75,48)" rx="2" ry="2" />
<text  x="129.13" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.03%)</title><rect x="850.7" y="469" width="0.4" height="15.0" fill="rgb(217,158,24)" rx="2" ry="2" />
<text  x="853.74" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%)</title><rect x="13.0" y="629" width="0.4" height="15.0" fill="rgb(213,173,42)" rx="2" ry="2" />
<text  x="16.05" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::get (1 samples, 0.03%)</title><rect x="123.1" y="485" width="0.4" height="15.0" fill="rgb(233,8,10)" rx="2" ry="2" />
<text  x="126.09" y="495.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;seastar::file_data_sink_impl::put (1 samples, 0.03%)</title><rect x="695.8" y="613" width="0.3" height="15.0" fill="rgb(253,155,9)" rx="2" ry="2" />
<text  x="698.76" y="623.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (10 samples, 0.32%)</title><rect x="588.8" y="469" width="3.8" height="15.0" fill="rgb(247,119,22)" rx="2" ry="2" />
<text  x="591.77" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%)</title><rect x="112.8" y="325" width="0.4" height="15.0" fill="rgb(252,143,36)" rx="2" ry="2" />
<text  x="115.81" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%)</title><rect x="30.6" y="469" width="0.3" height="15.0" fill="rgb(208,35,33)" rx="2" ry="2" />
<text  x="33.56" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="114.3" y="341" width="0.4" height="15.0" fill="rgb(237,58,52)" rx="2" ry="2" />
<text  x="117.33" y="351.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="680.2" y="581" width="0.7" height="15.0" fill="rgb(213,75,0)" rx="2" ry="2" />
<text  x="683.15" y="591.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (27 samples, 0.87%)</title><rect x="607.0" y="501" width="10.3" height="15.0" fill="rgb(254,145,5)" rx="2" ry="2" />
<text  x="610.04" y="511.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.10%)</title><rect x="721.3" y="581" width="1.1" height="15.0" fill="rgb(222,85,44)" rx="2" ry="2" />
<text  x="724.27" y="591.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (14 samples, 0.45%)</title><rect x="845.0" y="469" width="5.4" height="15.0" fill="rgb(248,32,12)" rx="2" ry="2" />
<text  x="848.02" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.03%)</title><rect x="138.3" y="677" width="0.4" height="15.0" fill="rgb(212,92,45)" rx="2" ry="2" />
<text  x="141.32" y="687.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (1 samples, 0.03%)</title><rect x="894.9" y="437" width="0.4" height="15.0" fill="rgb(237,76,24)" rx="2" ry="2" />
<text  x="897.90" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (5 samples, 0.16%)</title><rect x="91.5" y="357" width="1.9" height="15.0" fill="rgb(254,211,48)" rx="2" ry="2" />
<text  x="94.48" y="367.5" ></text>
</g>
<g >
<title>row::row (84 samples, 2.71%)</title><rect x="333.7" y="405" width="31.9" height="15.0" fill="rgb(232,33,48)" rx="2" ry="2" />
<text  x="336.65" y="415.5" >ro..</text>
</g>
<g >
<title>malloc (1 samples, 0.03%)</title><rect x="137.2" y="709" width="0.4" height="15.0" fill="rgb(240,221,40)" rx="2" ry="2" />
<text  x="140.18" y="719.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (58 samples, 1.87%)</title><rect x="573.5" y="501" width="22.1" height="15.0" fill="rgb(211,159,17)" rx="2" ry="2" />
<text  x="576.54" y="511.5" >m..</text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true&gt;::_Head_base (1 samples, 0.03%)</title><rect x="118.5" y="389" width="0.4" height="15.0" fill="rgb(246,113,46)" rx="2" ry="2" />
<text  x="121.52" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (3 samples, 0.10%)</title><rect x="75.5" y="389" width="1.1" height="15.0" fill="rgb(245,167,40)" rx="2" ry="2" />
<text  x="78.49" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="99.9" y="325" width="0.3" height="15.0" fill="rgb(223,108,33)" rx="2" ry="2" />
<text  x="102.86" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="63.3" y="421" width="0.8" height="15.0" fill="rgb(229,123,2)" rx="2" ry="2" />
<text  x="66.31" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="94.1" y="261" width="0.8" height="15.0" fill="rgb(228,105,17)" rx="2" ry="2" />
<text  x="97.15" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.29%)</title><rect x="346.6" y="373" width="3.4" height="15.0" fill="rgb(228,92,22)" rx="2" ry="2" />
<text  x="349.60" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="58.0" y="277" width="0.4" height="15.0" fill="rgb(252,69,44)" rx="2" ry="2" />
<text  x="60.98" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.06%)</title><rect x="39.7" y="357" width="0.8" height="15.0" fill="rgb(211,107,8)" rx="2" ry="2" />
<text  x="42.70" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="61.0" y="357" width="0.4" height="15.0" fill="rgb(220,148,45)" rx="2" ry="2" />
<text  x="64.02" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%)</title><rect x="822.6" y="533" width="0.3" height="15.0" fill="rgb(215,199,0)" rx="2" ry="2" />
<text  x="825.56" y="543.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%)</title><rect x="1073.5" y="437" width="0.4" height="15.0" fill="rgb(233,121,50)" rx="2" ry="2" />
<text  x="1076.48" y="447.5" ></text>
</g>
<g >
<title>dht::minimum_token (1 samples, 0.03%)</title><rect x="533.6" y="517" width="0.3" height="15.0" fill="rgb(220,20,26)" rx="2" ry="2" />
<text  x="536.56" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.03%)</title><rect x="162.7" y="533" width="0.4" height="15.0" fill="rgb(229,64,10)" rx="2" ry="2" />
<text  x="165.69" y="543.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::storage_proxy::send_to_live_endpoints (2 samples, 0.06%)</title><rect x="696.1" y="613" width="0.8" height="15.0" fill="rgb(243,32,2)" rx="2" ry="2" />
<text  x="699.14" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="20.3" y="453" width="0.4" height="15.0" fill="rgb(213,191,47)" rx="2" ry="2" />
<text  x="23.28" y="463.5" ></text>
</g>
<g >
<title>db::get_cdc_streams_descriptions_v2_mutation (1 samples, 0.03%)</title><rect x="167.6" y="581" width="0.4" height="15.0" fill="rgb(254,34,36)" rx="2" ry="2" />
<text  x="170.64" y="591.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%)</title><rect x="883.9" y="453" width="1.1" height="15.0" fill="rgb(240,137,11)" rx="2" ry="2" />
<text  x="886.86" y="463.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (14 samples, 0.45%)</title><rect x="737.3" y="565" width="5.3" height="15.0" fill="rgb(217,20,26)" rx="2" ry="2" />
<text  x="740.27" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_service_level_statement, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::list_service_level_statement&gt;, void&gt; (1 samples, 0.03%)</title><rect x="122.7" y="501" width="0.4" height="15.0" fill="rgb(206,217,38)" rx="2" ry="2" />
<text  x="125.71" y="511.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (292 samples, 9.42%)</title><rect x="15.3" y="581" width="111.2" height="15.0" fill="rgb(250,145,50)" rx="2" ry="2" />
<text  x="18.33" y="591.5" >cql3::query_p..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%)</title><rect x="79.3" y="341" width="1.5" height="15.0" fill="rgb(230,152,40)" rx="2" ry="2" />
<text  x="82.30" y="351.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.06%)</title><rect x="1007.2" y="373" width="0.8" height="15.0" fill="rgb(223,162,20)" rx="2" ry="2" />
<text  x="1010.23" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="102.9" y="325" width="0.4" height="15.0" fill="rgb(238,9,18)" rx="2" ry="2" />
<text  x="105.91" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="65.2" y="357" width="0.8" height="15.0" fill="rgb(228,141,26)" rx="2" ry="2" />
<text  x="68.21" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="97.2" y="325" width="0.4" height="15.0" fill="rgb(246,201,10)" rx="2" ry="2" />
<text  x="100.20" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%)</title><rect x="571.3" y="501" width="0.3" height="15.0" fill="rgb(254,32,8)" rx="2" ry="2" />
<text  x="574.25" y="511.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%)</title><rect x="137.9" y="517" width="0.4" height="15.0" fill="rgb(227,99,16)" rx="2" ry="2" />
<text  x="140.94" y="527.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (4 samples, 0.13%)</title><rect x="11.5" y="645" width="1.5" height="15.0" fill="rgb(215,178,9)" rx="2" ry="2" />
<text  x="14.52" y="655.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="90.3" y="197" width="0.4" height="15.0" fill="rgb(225,229,41)" rx="2" ry="2" />
<text  x="93.34" y="207.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="19.9" y="469" width="0.4" height="15.0" fill="rgb(211,229,34)" rx="2" ry="2" />
<text  x="22.90" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.03%)</title><rect x="845.8" y="373" width="0.4" height="15.0" fill="rgb(245,33,19)" rx="2" ry="2" />
<text  x="848.79" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="107.5" y="389" width="0.4" height="15.0" fill="rgb(238,195,18)" rx="2" ry="2" />
<text  x="110.48" y="399.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%)</title><rect x="1097.1" y="453" width="0.4" height="15.0" fill="rgb(246,109,17)" rx="2" ry="2" />
<text  x="1100.09" y="463.5" ></text>
</g>
<g >
<title>row::append_cell (1 samples, 0.03%)</title><rect x="1100.9" y="453" width="0.4" height="15.0" fill="rgb(223,102,41)" rx="2" ry="2" />
<text  x="1103.90" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="138.7" y="709" width="0.4" height="15.0" fill="rgb(252,14,22)" rx="2" ry="2" />
<text  x="141.70" y="719.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%)</title><rect x="103.3" y="277" width="0.7" height="15.0" fill="rgb(232,227,38)" rx="2" ry="2" />
<text  x="106.29" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.03%)</title><rect x="101.8" y="341" width="0.3" height="15.0" fill="rgb(235,2,23)" rx="2" ry="2" />
<text  x="104.77" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%)</title><rect x="137.2" y="693" width="0.4" height="15.0" fill="rgb(249,80,39)" rx="2" ry="2" />
<text  x="140.18" y="703.5" ></text>
</g>
<g >
<title>mutation_partition_view::from_view (1 samples, 0.03%)</title><rect x="1096.3" y="453" width="0.4" height="15.0" fill="rgb(251,144,15)" rx="2" ry="2" />
<text  x="1099.33" y="463.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (8 samples, 0.26%)</title><rect x="374.8" y="437" width="3.0" height="15.0" fill="rgb(238,137,46)" rx="2" ry="2" />
<text  x="377.78" y="447.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%)</title><rect x="1155.7" y="549" width="0.4" height="15.0" fill="rgb(213,78,7)" rx="2" ry="2" />
<text  x="1158.73" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="73.2" y="293" width="0.4" height="15.0" fill="rgb(233,156,2)" rx="2" ry="2" />
<text  x="76.21" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.10%)</title><rect x="70.2" y="437" width="1.1" height="15.0" fill="rgb(216,172,43)" rx="2" ry="2" />
<text  x="73.16" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="66.0" y="373" width="0.4" height="15.0" fill="rgb(218,87,5)" rx="2" ry="2" />
<text  x="68.97" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="492.1" y="517" width="0.3" height="15.0" fill="rgb(233,177,15)" rx="2" ry="2" />
<text  x="495.05" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.03%)</title><rect x="40.1" y="309" width="0.4" height="15.0" fill="rgb(243,156,7)" rx="2" ry="2" />
<text  x="43.08" y="319.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (7 samples, 0.23%)</title><rect x="1107.4" y="357" width="2.6" height="15.0" fill="rgb(243,194,18)" rx="2" ry="2" />
<text  x="1110.37" y="367.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (23 samples, 0.74%)</title><rect x="1096.0" y="597" width="8.7" height="15.0" fill="rgb(253,106,46)" rx="2" ry="2" />
<text  x="1098.95" y="607.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (22 samples, 0.71%)</title><rect x="15.7" y="565" width="8.4" height="15.0" fill="rgb(243,4,45)" rx="2" ry="2" />
<text  x="18.71" y="575.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%)</title><rect x="127.7" y="437" width="0.3" height="15.0" fill="rgb(209,173,51)" rx="2" ry="2" />
<text  x="130.66" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.03%)</title><rect x="871.7" y="533" width="0.4" height="15.0" fill="rgb(208,226,48)" rx="2" ry="2" />
<text  x="874.68" y="543.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (1 samples, 0.03%)</title><rect x="142.9" y="629" width="0.4" height="15.0" fill="rgb(214,6,0)" rx="2" ry="2" />
<text  x="145.89" y="639.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%)</title><rect x="1025.1" y="357" width="0.4" height="15.0" fill="rgb(249,175,20)" rx="2" ry="2" />
<text  x="1028.13" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="59.1" y="405" width="0.4" height="15.0" fill="rgb(234,128,18)" rx="2" ry="2" />
<text  x="62.12" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="920.4" y="501" width="0.4" height="15.0" fill="rgb(225,162,8)" rx="2" ry="2" />
<text  x="923.42" y="511.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.03%)</title><rect x="845.8" y="405" width="0.4" height="15.0" fill="rgb(227,160,6)" rx="2" ry="2" />
<text  x="848.79" y="415.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%)</title><rect x="496.6" y="549" width="0.4" height="15.0" fill="rgb(212,95,46)" rx="2" ry="2" />
<text  x="499.62" y="559.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.03%)</title><rect x="75.1" y="389" width="0.4" height="15.0" fill="rgb(231,141,10)" rx="2" ry="2" />
<text  x="78.11" y="399.5" ></text>
</g>
<g >
<title>gms::gossiper::run (1 samples, 0.03%)</title><rect x="1153.4" y="597" width="0.4" height="15.0" fill="rgb(208,153,13)" rx="2" ry="2" />
<text  x="1156.45" y="607.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%)</title><rect x="513.8" y="485" width="0.7" height="15.0" fill="rgb(221,114,6)" rx="2" ry="2" />
<text  x="516.76" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%)</title><rect x="137.9" y="437" width="0.4" height="15.0" fill="rgb(243,224,14)" rx="2" ry="2" />
<text  x="140.94" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="29.0" y="453" width="0.4" height="15.0" fill="rgb(250,212,49)" rx="2" ry="2" />
<text  x="32.04" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (5 samples, 0.16%)</title><rect x="702.6" y="597" width="1.9" height="15.0" fill="rgb(235,213,34)" rx="2" ry="2" />
<text  x="705.62" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="112.8" y="277" width="0.4" height="15.0" fill="rgb(251,219,37)" rx="2" ry="2" />
<text  x="115.81" y="287.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="307.8" y="437" width="0.3" height="15.0" fill="rgb(230,183,27)" rx="2" ry="2" />
<text  x="310.76" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%)</title><rect x="103.3" y="325" width="0.7" height="15.0" fill="rgb(205,183,8)" rx="2" ry="2" />
<text  x="106.29" y="335.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="56.1" y="325" width="0.4" height="15.0" fill="rgb(251,62,47)" rx="2" ry="2" />
<text  x="59.07" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_service_level_statement, std::default_delete&lt;cql3::statements::drop_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="122.3" y="501" width="0.4" height="15.0" fill="rgb(214,22,23)" rx="2" ry="2" />
<text  x="125.33" y="511.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%)</title><rect x="1108.9" y="261" width="0.4" height="15.0" fill="rgb(219,87,32)" rx="2" ry="2" />
<text  x="1111.90" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%)</title><rect x="382.8" y="453" width="0.4" height="15.0" fill="rgb(251,161,41)" rx="2" ry="2" />
<text  x="385.77" y="463.5" ></text>
</g>
<g >
<title>seastar::aio_storage_context::reap_completions (1 samples, 0.03%)</title><rect x="1154.2" y="597" width="0.4" height="15.0" fill="rgb(246,209,13)" rx="2" ry="2" />
<text  x="1157.21" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%)</title><rect x="29.0" y="485" width="0.4" height="15.0" fill="rgb(214,110,13)" rx="2" ry="2" />
<text  x="32.04" y="495.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="624.9" y="565" width="0.4" height="15.0" fill="rgb(216,18,53)" rx="2" ry="2" />
<text  x="627.94" y="575.5" ></text>
</g>
<g >
<title>service::migration_manager::announce_column_family_update (1 samples, 0.03%)</title><rect x="175.3" y="597" width="0.3" height="15.0" fill="rgb(217,150,20)" rx="2" ry="2" />
<text  x="178.25" y="607.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%)</title><rect x="1051.8" y="437" width="0.4" height="15.0" fill="rgb(214,62,11)" rx="2" ry="2" />
<text  x="1054.78" y="447.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.03%)</title><rect x="570.9" y="469" width="0.4" height="15.0" fill="rgb(248,191,51)" rx="2" ry="2" />
<text  x="573.87" y="479.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="112.8" y="245" width="0.4" height="15.0" fill="rgb(212,18,0)" rx="2" ry="2" />
<text  x="115.81" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.10%)</title><rect x="70.2" y="405" width="1.1" height="15.0" fill="rgb(224,216,15)" rx="2" ry="2" />
<text  x="73.16" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::constant::constant (1 samples, 0.03%)</title><rect x="846.2" y="405" width="0.3" height="15.0" fill="rgb(215,95,28)" rx="2" ry="2" />
<text  x="849.17" y="415.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.03%)</title><rect x="175.6" y="517" width="0.4" height="15.0" fill="rgb(229,191,0)" rx="2" ry="2" />
<text  x="178.63" y="527.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="1103.9" y="485" width="0.4" height="15.0" fill="rgb(235,124,33)" rx="2" ry="2" />
<text  x="1106.95" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="66.0" y="309" width="0.4" height="15.0" fill="rgb(218,127,32)" rx="2" ry="2" />
<text  x="68.97" y="319.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (1 samples, 0.03%)</title><rect x="548.0" y="485" width="0.4" height="15.0" fill="rgb(243,201,44)" rx="2" ry="2" />
<text  x="551.03" y="495.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (3 samples, 0.10%)</title><rect x="42.0" y="389" width="1.1" height="15.0" fill="rgb(208,83,24)" rx="2" ry="2" />
<text  x="44.98" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.03%)</title><rect x="73.2" y="181" width="0.4" height="15.0" fill="rgb(227,9,20)" rx="2" ry="2" />
<text  x="76.21" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.26%)</title><rect x="386.6" y="485" width="3.0" height="15.0" fill="rgb(210,85,24)" rx="2" ry="2" />
<text  x="389.58" y="495.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::native_value_clone_visitor&gt; (1 samples, 0.03%)</title><rect x="18.8" y="437" width="0.3" height="15.0" fill="rgb(207,110,33)" rx="2" ry="2" />
<text  x="21.76" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="35.5" y="325" width="0.4" height="15.0" fill="rgb(235,207,16)" rx="2" ry="2" />
<text  x="38.51" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (366 samples, 11.81%)</title><rect x="253.3" y="549" width="139.4" height="15.0" fill="rgb(230,114,28)" rx="2" ry="2" />
<text  x="256.31" y="559.5" >flat_mutation_rea..</text>
</g>
<g >
<title>single_node_cql_env::local_qp (2 samples, 0.06%)</title><rect x="836.3" y="565" width="0.7" height="15.0" fill="rgb(225,128,54)" rx="2" ry="2" />
<text  x="839.27" y="575.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (2 samples, 0.06%)</title><rect x="723.2" y="565" width="0.7" height="15.0" fill="rgb(240,102,17)" rx="2" ry="2" />
<text  x="726.18" y="575.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.03%)</title><rect x="822.9" y="533" width="0.4" height="15.0" fill="rgb(244,23,17)" rx="2" ry="2" />
<text  x="825.94" y="543.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="113.6" y="373" width="0.3" height="15.0" fill="rgb(208,86,50)" rx="2" ry="2" />
<text  x="116.57" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_lineStart (1 samples, 0.03%)</title><rect x="38.2" y="389" width="0.4" height="15.0" fill="rgb(253,135,25)" rx="2" ry="2" />
<text  x="41.18" y="399.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.03%)</title><rect x="727.4" y="581" width="0.3" height="15.0" fill="rgb(218,187,48)" rx="2" ry="2" />
<text  x="730.37" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="508.4" y="469" width="0.4" height="15.0" fill="rgb(207,205,51)" rx="2" ry="2" />
<text  x="511.43" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%)</title><rect x="1088.0" y="517" width="2.2" height="15.0" fill="rgb(221,141,6)" rx="2" ry="2" />
<text  x="1090.95" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="101.4" y="389" width="0.4" height="15.0" fill="rgb(206,11,18)" rx="2" ry="2" />
<text  x="104.38" y="399.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="111.3" y="245" width="0.4" height="15.0" fill="rgb(219,182,9)" rx="2" ry="2" />
<text  x="114.28" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.16%)</title><rect x="305.5" y="389" width="1.9" height="15.0" fill="rgb(252,105,52)" rx="2" ry="2" />
<text  x="308.48" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="138.3" y="613" width="0.4" height="15.0" fill="rgb(219,226,45)" rx="2" ry="2" />
<text  x="141.32" y="623.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (22 samples, 0.71%)</title><rect x="506.1" y="501" width="8.4" height="15.0" fill="rgb(248,80,1)" rx="2" ry="2" />
<text  x="509.14" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (4 samples, 0.13%)</title><rect x="973.7" y="453" width="1.5" height="15.0" fill="rgb(216,185,31)" rx="2" ry="2" />
<text  x="976.72" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="111.3" y="325" width="0.4" height="15.0" fill="rgb(235,48,11)" rx="2" ry="2" />
<text  x="114.28" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (4 samples, 0.13%)</title><rect x="850.4" y="485" width="1.5" height="15.0" fill="rgb(219,14,46)" rx="2" ry="2" />
<text  x="853.35" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="73.2" y="309" width="0.4" height="15.0" fill="rgb(251,32,53)" rx="2" ry="2" />
<text  x="76.21" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.06%)</title><rect x="720.5" y="581" width="0.8" height="15.0" fill="rgb(229,143,2)" rx="2" ry="2" />
<text  x="723.51" y="591.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (9 samples, 0.29%)</title><rect x="281.9" y="469" width="3.4" height="15.0" fill="rgb(240,80,39)" rx="2" ry="2" />
<text  x="284.87" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (2 samples, 0.06%)</title><rect x="104.8" y="421" width="0.8" height="15.0" fill="rgb(224,142,12)" rx="2" ry="2" />
<text  x="107.81" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="93.0" y="261" width="0.4" height="15.0" fill="rgb(232,156,1)" rx="2" ry="2" />
<text  x="96.01" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::process_element_func (1 samples, 0.03%)</title><rect x="843.1" y="613" width="0.4" height="15.0" fill="rgb(212,211,46)" rx="2" ry="2" />
<text  x="846.12" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%)</title><rect x="288.3" y="453" width="0.8" height="15.0" fill="rgb(247,90,54)" rx="2" ry="2" />
<text  x="291.34" y="463.5" ></text>
</g>
<g >
<title>mutation_querier::consume (82 samples, 2.65%)</title><rect x="438.7" y="501" width="31.3" height="15.0" fill="rgb(226,38,9)" rx="2" ry="2" />
<text  x="441.74" y="511.5" >mu..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="61.0" y="309" width="0.4" height="15.0" fill="rgb(249,140,11)" rx="2" ry="2" />
<text  x="64.02" y="319.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.29%)</title><rect x="954.7" y="469" width="3.4" height="15.0" fill="rgb(250,175,7)" rx="2" ry="2" />
<text  x="957.69" y="479.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="22.9" y="501" width="0.4" height="15.0" fill="rgb(233,129,42)" rx="2" ry="2" />
<text  x="25.95" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="100.2" y="325" width="0.4" height="15.0" fill="rgb(245,93,25)" rx="2" ry="2" />
<text  x="103.24" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (1 samples, 0.03%)</title><rect x="58.0" y="485" width="0.4" height="15.0" fill="rgb(214,160,5)" rx="2" ry="2" />
<text  x="60.98" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (17 samples, 0.55%)</title><rect x="1106.2" y="437" width="6.5" height="15.0" fill="rgb(227,155,32)" rx="2" ry="2" />
<text  x="1109.23" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="101.8" y="357" width="0.3" height="15.0" fill="rgb(252,26,39)" rx="2" ry="2" />
<text  x="104.77" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%)</title><rect x="604.8" y="501" width="0.3" height="15.0" fill="rgb(248,193,42)" rx="2" ry="2" />
<text  x="607.76" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.10%)</title><rect x="832.5" y="565" width="1.1" height="15.0" fill="rgb(213,62,38)" rx="2" ry="2" />
<text  x="835.46" y="575.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1 samples, 0.03%)</title><rect x="144.8" y="629" width="0.4" height="15.0" fill="rgb(229,181,45)" rx="2" ry="2" />
<text  x="147.79" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.03%)</title><rect x="23.7" y="517" width="0.4" height="15.0" fill="rgb(238,2,34)" rx="2" ry="2" />
<text  x="26.71" y="527.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%)</title><rect x="307.4" y="421" width="0.4" height="15.0" fill="rgb(250,95,19)" rx="2" ry="2" />
<text  x="310.38" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%)</title><rect x="703.4" y="581" width="0.4" height="15.0" fill="rgb(212,52,8)" rx="2" ry="2" />
<text  x="706.38" y="591.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (3 samples, 0.10%)</title><rect x="693.9" y="613" width="1.1" height="15.0" fill="rgb(218,190,1)" rx="2" ry="2" />
<text  x="696.86" y="623.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;clustering_key_prefix&gt;::empty (1 samples, 0.03%)</title><rect x="18.0" y="517" width="0.4" height="15.0" fill="rgb(231,161,15)" rx="2" ry="2" />
<text  x="21.00" y="527.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.10%)</title><rect x="480.2" y="501" width="1.2" height="15.0" fill="rgb(224,188,13)" rx="2" ry="2" />
<text  x="483.25" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="112.8" y="341" width="0.4" height="15.0" fill="rgb(242,146,0)" rx="2" ry="2" />
<text  x="115.81" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (2 samples, 0.06%)</title><rect x="55.7" y="341" width="0.8" height="15.0" fill="rgb(233,116,24)" rx="2" ry="2" />
<text  x="58.69" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="744.5" y="581" width="0.4" height="15.0" fill="rgb(208,190,51)" rx="2" ry="2" />
<text  x="747.50" y="591.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%)</title><rect x="727.0" y="581" width="0.4" height="15.0" fill="rgb(247,201,8)" rx="2" ry="2" />
<text  x="729.99" y="591.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%)</title><rect x="103.3" y="261" width="0.7" height="15.0" fill="rgb(227,97,42)" rx="2" ry="2" />
<text  x="106.29" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (152 samples, 4.90%)</title><rect x="765.4" y="549" width="57.9" height="15.0" fill="rgb(233,99,50)" rx="2" ry="2" />
<text  x="768.44" y="559.5" >cql3::..</text>
</g>
<g >
<title>all (3,099 samples, 100%)</title><rect x="10.0" y="773" width="1180.0" height="15.0" fill="rgb(232,13,16)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="108.2" y="389" width="0.4" height="15.0" fill="rgb(241,80,0)" rx="2" ry="2" />
<text  x="111.24" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%)</title><rect x="106.3" y="341" width="0.8" height="15.0" fill="rgb(234,179,23)" rx="2" ry="2" />
<text  x="109.33" y="351.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%)</title><rect x="926.1" y="517" width="2.3" height="15.0" fill="rgb(242,108,43)" rx="2" ry="2" />
<text  x="929.13" y="527.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="1095.6" y="549" width="0.4" height="15.0" fill="rgb(240,57,47)" rx="2" ry="2" />
<text  x="1098.57" y="559.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="514.9" y="517" width="0.4" height="15.0" fill="rgb(205,115,20)" rx="2" ry="2" />
<text  x="517.90" y="527.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.06%)</title><rect x="694.2" y="581" width="0.8" height="15.0" fill="rgb(232,162,47)" rx="2" ry="2" />
<text  x="697.24" y="591.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (1 samples, 0.03%)</title><rect x="695.0" y="613" width="0.4" height="15.0" fill="rgb(237,133,13)" rx="2" ry="2" />
<text  x="698.00" y="623.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;double&gt; (1 samples, 0.03%)</title><rect x="138.7" y="693" width="0.4" height="15.0" fill="rgb(216,196,36)" rx="2" ry="2" />
<text  x="141.70" y="703.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%)</title><rect x="14.9" y="581" width="0.4" height="15.0" fill="rgb(225,32,47)" rx="2" ry="2" />
<text  x="17.95" y="591.5" ></text>
</g>
<g >
<title>partition_entry::read (1 samples, 0.03%)</title><rect x="596.4" y="501" width="0.4" height="15.0" fill="rgb(207,73,20)" rx="2" ry="2" />
<text  x="599.38" y="511.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (4 samples, 0.13%)</title><rect x="95.3" y="373" width="1.5" height="15.0" fill="rgb(216,94,2)" rx="2" ry="2" />
<text  x="98.29" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base (1 samples, 0.03%)</title><rect x="118.1" y="453" width="0.4" height="15.0" fill="rgb(228,84,51)" rx="2" ry="2" />
<text  x="121.14" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="61.8" y="261" width="0.4" height="15.0" fill="rgb(224,125,12)" rx="2" ry="2" />
<text  x="64.78" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::get_deleter (1 samples, 0.03%)</title><rect x="108.2" y="421" width="0.4" height="15.0" fill="rgb(216,101,29)" rx="2" ry="2" />
<text  x="111.24" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~deque (3 samples, 0.10%)</title><rect x="25.6" y="485" width="1.2" height="15.0" fill="rgb(237,99,44)" rx="2" ry="2" />
<text  x="28.61" y="495.5" ></text>
</g>
<g >
<title>database::find_keyspace (1 samples, 0.03%)</title><rect x="175.3" y="581" width="0.3" height="15.0" fill="rgb(240,101,14)" rx="2" ry="2" />
<text  x="178.25" y="591.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%)</title><rect x="521.8" y="549" width="1.9" height="15.0" fill="rgb(211,8,4)" rx="2" ry="2" />
<text  x="524.75" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (2 samples, 0.06%)</title><rect x="79.3" y="261" width="0.8" height="15.0" fill="rgb(212,39,33)" rx="2" ry="2" />
<text  x="82.30" y="271.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.39%)</title><rect x="302.8" y="421" width="4.6" height="15.0" fill="rgb(251,136,22)" rx="2" ry="2" />
<text  x="305.81" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%)</title><rect x="741.5" y="533" width="1.1" height="15.0" fill="rgb(216,106,37)" rx="2" ry="2" />
<text  x="744.46" y="543.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (26 samples, 0.84%)</title><rect x="843.5" y="533" width="9.9" height="15.0" fill="rgb(245,51,16)" rx="2" ry="2" />
<text  x="846.50" y="543.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.03%)</title><rect x="167.6" y="549" width="0.4" height="15.0" fill="rgb(241,167,35)" rx="2" ry="2" />
<text  x="170.64" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="58.0" y="309" width="0.4" height="15.0" fill="rgb(223,189,4)" rx="2" ry="2" />
<text  x="60.98" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.03%)</title><rect x="665.3" y="581" width="0.4" height="15.0" fill="rgb(247,140,39)" rx="2" ry="2" />
<text  x="668.30" y="591.5" ></text>
</g>
<g >
<title>serialize (1 samples, 0.03%)</title><rect x="18.4" y="437" width="0.4" height="15.0" fill="rgb(220,61,8)" rx="2" ry="2" />
<text  x="21.38" y="447.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="94.1" y="37" width="0.4" height="15.0" fill="rgb(247,220,50)" rx="2" ry="2" />
<text  x="97.15" y="47.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (9 samples, 0.29%)</title><rect x="241.5" y="565" width="3.4" height="15.0" fill="rgb(210,157,45)" rx="2" ry="2" />
<text  x="244.51" y="575.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (8 samples, 0.26%)</title><rect x="1114.6" y="373" width="3.1" height="15.0" fill="rgb(251,48,41)" rx="2" ry="2" />
<text  x="1117.61" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (2 samples, 0.06%)</title><rect x="843.9" y="501" width="0.7" height="15.0" fill="rgb(235,131,34)" rx="2" ry="2" />
<text  x="846.88" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1107.4" y="325" width="0.4" height="15.0" fill="rgb(248,191,50)" rx="2" ry="2" />
<text  x="1110.37" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::run (2,670 samples, 86.16%)</title><rect x="139.5" y="661" width="1016.6" height="15.0" fill="rgb(209,87,8)" rx="2" ry="2" />
<text  x="142.46" y="671.5" >seastar::reactor::run</text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%)</title><rect x="781.1" y="501" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="784.06" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%)</title><rect x="588.0" y="453" width="0.8" height="15.0" fill="rgb(206,225,49)" rx="2" ry="2" />
<text  x="591.01" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.10%)</title><rect x="59.9" y="389" width="1.1" height="15.0" fill="rgb(216,112,52)" rx="2" ry="2" />
<text  x="62.88" y="399.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (1 samples, 0.03%)</title><rect x="127.7" y="501" width="0.3" height="15.0" fill="rgb(211,118,1)" rx="2" ry="2" />
<text  x="130.66" y="511.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (360 samples, 11.62%)</title><rect x="255.6" y="533" width="137.1" height="15.0" fill="rgb(216,202,5)" rx="2" ry="2" />
<text  x="258.60" y="543.5" >merging_reader&lt;mu..</text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (615 samples, 19.85%)</title><rect x="861.0" y="549" width="234.2" height="15.0" fill="rgb(231,198,20)" rx="2" ry="2" />
<text  x="864.02" y="559.5" >cql3::statements::select_statem..</text>
</g>
<g >
<title>std::__relocate_a_1&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;*, seastar::shared_ptr&lt;cql3::column_identifier&gt;*, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="127.7" y="229" width="0.3" height="15.0" fill="rgb(236,146,33)" rx="2" ry="2" />
<text  x="130.66" y="239.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (8 samples, 0.26%)</title><rect x="1143.5" y="581" width="3.1" height="15.0" fill="rgb(237,73,33)" rx="2" ry="2" />
<text  x="1146.55" y="591.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (1 samples, 0.03%)</title><rect x="127.7" y="341" width="0.3" height="15.0" fill="rgb(245,203,10)" rx="2" ry="2" />
<text  x="130.66" y="351.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="655.4" y="581" width="0.4" height="15.0" fill="rgb(215,78,52)" rx="2" ry="2" />
<text  x="658.40" y="591.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_token (1 samples, 0.03%)</title><rect x="40.8" y="389" width="0.4" height="15.0" fill="rgb(248,179,27)" rx="2" ry="2" />
<text  x="43.84" y="399.5" ></text>
</g>
<g >
<title>std::operator- (2 samples, 0.06%)</title><rect x="53.8" y="341" width="0.7" height="15.0" fill="rgb(225,72,32)" rx="2" ry="2" />
<text  x="56.79" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (32 samples, 1.03%)</title><rect x="154.7" y="597" width="12.2" height="15.0" fill="rgb(254,216,45)" rx="2" ry="2" />
<text  x="157.69" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="107.9" y="373" width="0.3" height="15.0" fill="rgb(219,121,50)" rx="2" ry="2" />
<text  x="110.86" y="383.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (3 samples, 0.10%)</title><rect x="202.3" y="549" width="1.1" height="15.0" fill="rgb(238,119,0)" rx="2" ry="2" />
<text  x="205.29" y="559.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::~num_put (1 samples, 0.03%)</title><rect x="138.7" y="725" width="0.4" height="15.0" fill="rgb(210,116,27)" rx="2" ry="2" />
<text  x="141.70" y="735.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="593.0" y="469" width="0.3" height="15.0" fill="rgb(220,49,27)" rx="2" ry="2" />
<text  x="595.96" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%)</title><rect x="58.0" y="453" width="0.4" height="15.0" fill="rgb(230,127,18)" rx="2" ry="2" />
<text  x="60.98" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="67.5" y="293" width="0.4" height="15.0" fill="rgb(241,199,54)" rx="2" ry="2" />
<text  x="70.50" y="303.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (14 samples, 0.45%)</title><rect x="129.6" y="725" width="5.3" height="15.0" fill="rgb(219,129,1)" rx="2" ry="2" />
<text  x="132.56" y="735.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%)</title><rect x="695.0" y="565" width="0.4" height="15.0" fill="rgb(254,154,20)" rx="2" ry="2" />
<text  x="698.00" y="575.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (5 samples, 0.16%)</title><rect x="292.5" y="453" width="1.9" height="15.0" fill="rgb(233,140,19)" rx="2" ry="2" />
<text  x="295.53" y="463.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="21.4" y="405" width="0.4" height="15.0" fill="rgb(244,215,40)" rx="2" ry="2" />
<text  x="24.42" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%)</title><rect x="1026.3" y="373" width="0.4" height="15.0" fill="rgb(217,65,24)" rx="2" ry="2" />
<text  x="1029.27" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="99.9" y="277" width="0.3" height="15.0" fill="rgb(251,154,32)" rx="2" ry="2" />
<text  x="102.86" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::end (1 samples, 0.03%)</title><rect x="24.1" y="453" width="0.4" height="15.0" fill="rgb(240,169,46)" rx="2" ry="2" />
<text  x="27.09" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (14 samples, 0.45%)</title><rect x="845.0" y="485" width="5.4" height="15.0" fill="rgb(251,81,33)" rx="2" ry="2" />
<text  x="848.02" y="495.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.03%)</title><rect x="1170.6" y="741" width="0.4" height="15.0" fill="rgb(216,93,54)" rx="2" ry="2" />
<text  x="1173.58" y="751.5" ></text>
</g>
<g >
<title>database::apply (1 samples, 0.03%)</title><rect x="1114.2" y="373" width="0.4" height="15.0" fill="rgb(213,212,0)" rx="2" ry="2" />
<text  x="1117.23" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="78.5" y="357" width="0.4" height="15.0" fill="rgb(249,179,5)" rx="2" ry="2" />
<text  x="81.54" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (4 samples, 0.13%)</title><rect x="823.3" y="549" width="1.5" height="15.0" fill="rgb(215,216,51)" rx="2" ry="2" />
<text  x="826.32" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="111.7" y="373" width="0.3" height="15.0" fill="rgb(239,146,14)" rx="2" ry="2" />
<text  x="114.67" y="383.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::drop_service_level_statement*, false&gt;::_M_head (1 samples, 0.03%)</title><rect x="122.3" y="437" width="0.4" height="15.0" fill="rgb(210,225,35)" rx="2" ry="2" />
<text  x="125.33" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="66.7" y="229" width="0.4" height="15.0" fill="rgb(227,47,36)" rx="2" ry="2" />
<text  x="69.73" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (7 samples, 0.23%)</title><rect x="88.4" y="309" width="2.7" height="15.0" fill="rgb(236,111,36)" rx="2" ry="2" />
<text  x="91.44" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%)</title><rect x="58.7" y="389" width="0.4" height="15.0" fill="rgb(229,203,0)" rx="2" ry="2" />
<text  x="61.74" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (6 samples, 0.19%)</title><rect x="379.3" y="437" width="2.3" height="15.0" fill="rgb(237,25,3)" rx="2" ry="2" />
<text  x="382.34" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::release (1 samples, 0.03%)</title><rect x="123.8" y="501" width="0.4" height="15.0" fill="rgb(252,89,22)" rx="2" ry="2" />
<text  x="126.85" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="201.9" y="549" width="0.4" height="15.0" fill="rgb(254,140,6)" rx="2" ry="2" />
<text  x="204.91" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.10%)</title><rect x="70.2" y="389" width="1.1" height="15.0" fill="rgb(209,193,31)" rx="2" ry="2" />
<text  x="73.16" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="56.8" y="421" width="0.4" height="15.0" fill="rgb(229,193,49)" rx="2" ry="2" />
<text  x="59.83" y="431.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="61.0" y="293" width="0.4" height="15.0" fill="rgb(244,32,3)" rx="2" ry="2" />
<text  x="64.02" y="303.5" ></text>
</g>
<g >
<title>partition_entry::apply (1 samples, 0.03%)</title><rect x="1102.4" y="485" width="0.4" height="15.0" fill="rgb(232,32,24)" rx="2" ry="2" />
<text  x="1105.42" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;sstables::sstable::update_info_for_opened_data (1 samples, 0.03%)</title><rect x="729.7" y="597" width="0.3" height="15.0" fill="rgb(238,169,15)" rx="2" ry="2" />
<text  x="732.65" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (2 samples, 0.06%)</title><rect x="84.2" y="293" width="0.8" height="15.0" fill="rgb(216,66,9)" rx="2" ry="2" />
<text  x="87.25" y="303.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.03%)</title><rect x="774.6" y="517" width="0.4" height="15.0" fill="rgb(211,5,1)" rx="2" ry="2" />
<text  x="777.58" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.03%)</title><rect x="19.1" y="437" width="0.4" height="15.0" fill="rgb(207,81,37)" rx="2" ry="2" />
<text  x="22.14" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23 samples, 0.74%)</title><rect x="1096.0" y="565" width="8.7" height="15.0" fill="rgb(235,146,16)" rx="2" ry="2" />
<text  x="1098.95" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%)</title><rect x="184.4" y="597" width="0.8" height="15.0" fill="rgb(239,44,21)" rx="2" ry="2" />
<text  x="187.39" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::_S_do_relocate (1 samples, 0.03%)</title><rect x="127.7" y="261" width="0.3" height="15.0" fill="rgb(246,123,26)" rx="2" ry="2" />
<text  x="130.66" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (33 samples, 1.06%)</title><rect x="1074.6" y="533" width="12.6" height="15.0" fill="rgb(226,4,54)" rx="2" ry="2" />
<text  x="1077.63" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%)</title><rect x="96.8" y="373" width="0.4" height="15.0" fill="rgb(250,107,13)" rx="2" ry="2" />
<text  x="99.82" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="519.5" y="501" width="0.3" height="15.0" fill="rgb(247,122,10)" rx="2" ry="2" />
<text  x="522.47" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.10%)</title><rect x="102.9" y="373" width="1.1" height="15.0" fill="rgb(243,175,22)" rx="2" ry="2" />
<text  x="105.91" y="383.5" ></text>
</g>
<g >
<title>table::make_reader (1 samples, 0.03%)</title><rect x="618.8" y="549" width="0.4" height="15.0" fill="rgb(247,150,50)" rx="2" ry="2" />
<text  x="621.85" y="559.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (1 samples, 0.03%)</title><rect x="720.1" y="581" width="0.4" height="15.0" fill="rgb(221,16,1)" rx="2" ry="2" />
<text  x="723.13" y="591.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%)</title><rect x="430.7" y="485" width="0.4" height="15.0" fill="rgb(246,94,24)" rx="2" ry="2" />
<text  x="433.75" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (7 samples, 0.23%)</title><rect x="66.4" y="453" width="2.6" height="15.0" fill="rgb(243,10,9)" rx="2" ry="2" />
<text  x="69.35" y="463.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%)</title><rect x="112.8" y="373" width="0.4" height="15.0" fill="rgb(245,151,10)" rx="2" ry="2" />
<text  x="115.81" y="383.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="60.6" y="229" width="0.4" height="15.0" fill="rgb(235,134,40)" rx="2" ry="2" />
<text  x="63.64" y="239.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%)</title><rect x="63.3" y="437" width="0.8" height="15.0" fill="rgb(214,41,14)" rx="2" ry="2" />
<text  x="66.31" y="447.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (2 samples, 0.06%)</title><rect x="10.4" y="661" width="0.7" height="15.0" fill="rgb(237,117,15)" rx="2" ry="2" />
<text  x="13.38" y="671.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (6 samples, 0.19%)</title><rect x="1110.4" y="373" width="2.3" height="15.0" fill="rgb(209,176,6)" rx="2" ry="2" />
<text  x="1113.42" y="383.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.06%)</title><rect x="75.9" y="325" width="0.7" height="15.0" fill="rgb(225,181,6)" rx="2" ry="2" />
<text  x="78.87" y="335.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="58.0" y="245" width="0.4" height="15.0" fill="rgb(205,182,12)" rx="2" ry="2" />
<text  x="60.98" y="255.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::raw (1 samples, 0.03%)</title><rect x="118.1" y="469" width="0.4" height="15.0" fill="rgb(212,64,37)" rx="2" ry="2" />
<text  x="121.14" y="479.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="75.9" y="293" width="0.4" height="15.0" fill="rgb(241,192,14)" rx="2" ry="2" />
<text  x="78.87" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%)</title><rect x="837.4" y="597" width="0.8" height="15.0" fill="rgb(218,136,19)" rx="2" ry="2" />
<text  x="840.41" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::create_table_statement::raw_statement*, std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt; &gt; (1 samples, 0.03%)</title><rect x="121.6" y="469" width="0.3" height="15.0" fill="rgb(215,49,37)" rx="2" ry="2" />
<text  x="124.57" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.10%)</title><rect x="672.9" y="597" width="1.2" height="15.0" fill="rgb(242,147,32)" rx="2" ry="2" />
<text  x="675.92" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="55.3" y="421" width="0.4" height="15.0" fill="rgb(254,105,46)" rx="2" ry="2" />
<text  x="58.31" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (5 samples, 0.16%)</title><rect x="46.6" y="389" width="1.9" height="15.0" fill="rgb(240,102,0)" rx="2" ry="2" />
<text  x="49.55" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::file&gt;, seastar::with_file_close_on_failure&lt;sstables::sstable::new_sstable_component_file (1 samples, 0.03%)</title><rect x="634.8" y="613" width="0.4" height="15.0" fill="rgb(231,50,35)" rx="2" ry="2" />
<text  x="637.84" y="623.5" ></text>
</g>
<g >
<title>do_cql_test (304 samples, 9.81%)</title><rect x="13.0" y="645" width="115.8" height="15.0" fill="rgb(210,39,4)" rx="2" ry="2" />
<text  x="16.05" y="655.5" >do_cql_test</text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="844.3" y="421" width="0.3" height="15.0" fill="rgb(235,71,5)" rx="2" ry="2" />
<text  x="847.26" y="431.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.26%)</title><rect x="386.6" y="501" width="3.0" height="15.0" fill="rgb(224,35,25)" rx="2" ry="2" />
<text  x="389.58" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.03%)</title><rect x="34.0" y="245" width="0.4" height="15.0" fill="rgb(234,195,26)" rx="2" ry="2" />
<text  x="36.99" y="255.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::raw::parsed_statement*, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt; (1 samples, 0.03%)</title><rect x="123.1" y="453" width="0.4" height="15.0" fill="rgb(235,151,38)" rx="2" ry="2" />
<text  x="126.09" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="173.0" y="597" width="0.3" height="15.0" fill="rgb(205,164,40)" rx="2" ry="2" />
<text  x="175.97" y="607.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.03%)</title><rect x="1188.1" y="661" width="0.4" height="15.0" fill="rgb(230,5,41)" rx="2" ry="2" />
<text  x="1191.10" y="671.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%)</title><rect x="741.5" y="549" width="1.1" height="15.0" fill="rgb(237,95,31)" rx="2" ry="2" />
<text  x="744.46" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="20.3" y="469" width="0.4" height="15.0" fill="rgb(243,222,31)" rx="2" ry="2" />
<text  x="23.28" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%)</title><rect x="1189.6" y="709" width="0.4" height="15.0" fill="rgb(226,104,40)" rx="2" ry="2" />
<text  x="1192.62" y="719.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (1 samples, 0.03%)</title><rect x="904.8" y="485" width="0.4" height="15.0" fill="rgb(205,37,0)" rx="2" ry="2" />
<text  x="907.80" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%)</title><rect x="49.6" y="373" width="0.4" height="15.0" fill="rgb(225,112,43)" rx="2" ry="2" />
<text  x="52.60" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="694.6" y="549" width="0.4" height="15.0" fill="rgb(228,123,39)" rx="2" ry="2" />
<text  x="697.62" y="559.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (625 samples, 20.17%)</title><rect x="858.0" y="581" width="238.0" height="15.0" fill="rgb(220,194,11)" rx="2" ry="2" />
<text  x="860.97" y="591.5" >seastar::noncopyable_function&lt;s..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="114.3" y="197" width="0.4" height="15.0" fill="rgb(211,149,4)" rx="2" ry="2" />
<text  x="117.33" y="207.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="65.2" y="405" width="0.8" height="15.0" fill="rgb(227,5,2)" rx="2" ry="2" />
<text  x="68.21" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%)</title><rect x="73.2" y="197" width="0.4" height="15.0" fill="rgb(229,198,28)" rx="2" ry="2" />
<text  x="76.21" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%)</title><rect x="95.7" y="181" width="0.7" height="15.0" fill="rgb(248,218,4)" rx="2" ry="2" />
<text  x="98.67" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%)</title><rect x="670.3" y="581" width="0.3" height="15.0" fill="rgb(231,43,48)" rx="2" ry="2" />
<text  x="673.25" y="591.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.29%)</title><rect x="393.1" y="549" width="3.4" height="15.0" fill="rgb(218,144,28)" rx="2" ry="2" />
<text  x="396.05" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (17 samples, 0.55%)</title><rect x="109.8" y="453" width="6.4" height="15.0" fill="rgb(245,9,32)" rx="2" ry="2" />
<text  x="112.76" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%)</title><rect x="371.3" y="437" width="0.4" height="15.0" fill="rgb(248,72,48)" rx="2" ry="2" />
<text  x="374.35" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="94.1" y="197" width="0.4" height="15.0" fill="rgb(241,32,32)" rx="2" ry="2" />
<text  x="97.15" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="75.9" y="309" width="0.4" height="15.0" fill="rgb(231,185,33)" rx="2" ry="2" />
<text  x="78.87" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="401.4" y="517" width="0.8" height="15.0" fill="rgb(210,69,3)" rx="2" ry="2" />
<text  x="404.43" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (8 samples, 0.26%)</title><rect x="323.8" y="405" width="3.0" height="15.0" fill="rgb(205,11,6)" rx="2" ry="2" />
<text  x="326.75" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%)</title><rect x="96.8" y="405" width="0.4" height="15.0" fill="rgb(231,121,48)" rx="2" ry="2" />
<text  x="99.82" y="415.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.03%)</title><rect x="175.6" y="501" width="0.4" height="15.0" fill="rgb(225,132,23)" rx="2" ry="2" />
<text  x="178.63" y="511.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.13%)</title><rect x="594.1" y="485" width="1.5" height="15.0" fill="rgb(226,137,26)" rx="2" ry="2" />
<text  x="597.10" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="109.0" y="405" width="0.4" height="15.0" fill="rgb(232,194,35)" rx="2" ry="2" />
<text  x="112.00" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="25.6" y="389" width="0.4" height="15.0" fill="rgb(227,12,47)" rx="2" ry="2" />
<text  x="28.61" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (3 samples, 0.10%)</title><rect x="845.4" y="437" width="1.1" height="15.0" fill="rgb(205,112,45)" rx="2" ry="2" />
<text  x="848.40" y="447.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.03%)</title><rect x="1101.3" y="453" width="0.4" height="15.0" fill="rgb(212,128,19)" rx="2" ry="2" />
<text  x="1104.28" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (304 samples, 9.81%)</title><rect x="13.0" y="661" width="115.8" height="15.0" fill="rgb(223,133,22)" rx="2" ry="2" />
<text  x="16.05" y="671.5" >std::_Function..</text>
</g>
<g >
<title>service::storage_proxy::query_result_local (129 samples, 4.16%)</title><rect x="982.1" y="421" width="49.1" height="15.0" fill="rgb(218,135,43)" rx="2" ry="2" />
<text  x="985.10" y="431.5" >serv..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%)</title><rect x="32.5" y="293" width="0.3" height="15.0" fill="rgb(235,200,21)" rx="2" ry="2" />
<text  x="35.47" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%)</title><rect x="578.1" y="469" width="1.9" height="15.0" fill="rgb(252,228,49)" rx="2" ry="2" />
<text  x="581.11" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%)</title><rect x="127.7" y="421" width="0.3" height="15.0" fill="rgb(235,86,8)" rx="2" ry="2" />
<text  x="130.66" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="61.4" y="357" width="0.8" height="15.0" fill="rgb(243,91,1)" rx="2" ry="2" />
<text  x="64.40" y="367.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%)</title><rect x="99.1" y="165" width="0.8" height="15.0" fill="rgb(234,59,45)" rx="2" ry="2" />
<text  x="102.10" y="175.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::operator (2 samples, 0.06%)</title><rect x="1115.4" y="341" width="0.7" height="15.0" fill="rgb(207,133,41)" rx="2" ry="2" />
<text  x="1118.37" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%)</title><rect x="694.6" y="533" width="0.4" height="15.0" fill="rgb(243,13,23)" rx="2" ry="2" />
<text  x="697.62" y="543.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%)</title><rect x="698.4" y="597" width="1.6" height="15.0" fill="rgb(221,209,26)" rx="2" ry="2" />
<text  x="701.43" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.10%)</title><rect x="102.9" y="405" width="1.1" height="15.0" fill="rgb(229,3,26)" rx="2" ry="2" />
<text  x="105.91" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.7" y="69" width="0.4" height="15.0" fill="rgb(213,152,33)" rx="2" ry="2" />
<text  x="82.68" y="79.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (5 samples, 0.16%)</title><rect x="1107.8" y="325" width="1.9" height="15.0" fill="rgb(250,132,20)" rx="2" ry="2" />
<text  x="1110.75" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="77.0" y="389" width="0.4" height="15.0" fill="rgb(243,72,48)" rx="2" ry="2" />
<text  x="80.02" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, query::querier&lt; (1 samples, 0.03%)</title><rect x="695.4" y="613" width="0.4" height="15.0" fill="rgb(227,147,46)" rx="2" ry="2" />
<text  x="698.38" y="623.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (2 samples, 0.06%)</title><rect x="116.2" y="437" width="0.8" height="15.0" fill="rgb(244,168,12)" rx="2" ry="2" />
<text  x="119.23" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::revoke_role_statement*, std::default_delete&lt;cql3::statements::revoke_role_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%)</title><rect x="124.6" y="437" width="0.4" height="15.0" fill="rgb(219,212,46)" rx="2" ry="2" />
<text  x="127.61" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%)</title><rect x="1140.9" y="565" width="0.7" height="15.0" fill="rgb(224,23,14)" rx="2" ry="2" />
<text  x="1143.88" y="575.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (3 samples, 0.10%)</title><rect x="135.7" y="677" width="1.1" height="15.0" fill="rgb(212,92,46)" rx="2" ry="2" />
<text  x="138.65" y="687.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (193 samples, 6.23%)</title><rect x="298.2" y="453" width="73.5" height="15.0" fill="rgb(217,65,18)" rx="2" ry="2" />
<text  x="301.24" y="463.5" >partitio..</text>
</g>
<g >
<title>seastar::thread_context::main (311 samples, 10.04%)</title><rect x="10.4" y="693" width="118.4" height="15.0" fill="rgb(205,104,22)" rx="2" ry="2" />
<text  x="13.38" y="703.5" >seastar::threa..</text>
</g>
<g >
<title>cql3::expr::expression::operator= (8 samples, 0.26%)</title><rect x="82.3" y="421" width="3.1" height="15.0" fill="rgb(236,26,34)" rx="2" ry="2" />
<text  x="85.35" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%)</title><rect x="114.7" y="277" width="0.8" height="15.0" fill="rgb(249,70,33)" rx="2" ry="2" />
<text  x="117.71" y="287.5" ></text>
</g>
<g >
<title>std::__variant_cast&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%)</title><rect x="85.0" y="293" width="0.4" height="15.0" fill="rgb(246,144,2)" rx="2" ry="2" />
<text  x="88.01" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="883.5" y="437" width="0.4" height="15.0" fill="rgb(225,27,38)" rx="2" ry="2" />
<text  x="886.48" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="56.5" y="293" width="0.3" height="15.0" fill="rgb(239,103,15)" rx="2" ry="2" />
<text  x="59.45" y="303.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%)</title><rect x="590.7" y="453" width="1.1" height="15.0" fill="rgb(239,176,23)" rx="2" ry="2" />
<text  x="593.67" y="463.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_input (1 samples, 0.03%)</title><rect x="40.5" y="389" width="0.3" height="15.0" fill="rgb(219,226,44)" rx="2" ry="2" />
<text  x="43.46" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.03%)</title><rect x="138.3" y="709" width="0.4" height="15.0" fill="rgb(242,189,25)" rx="2" ry="2" />
<text  x="141.32" y="719.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%)</title><rect x="110.1" y="229" width="0.4" height="15.0" fill="rgb(228,220,40)" rx="2" ry="2" />
<text  x="113.14" y="239.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::raw::use_statement*, std::default_delete&lt;cql3::statements::raw::use_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%)</title><rect x="124.2" y="437" width="0.4" height="15.0" fill="rgb(212,151,40)" rx="2" ry="2" />
<text  x="127.23" y="447.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%)</title><rect x="113.9" y="373" width="0.8" height="15.0" fill="rgb(244,20,17)" rx="2" ry="2" />
<text  x="116.95" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="127.7" y="581" width="0.3" height="15.0" fill="rgb(236,145,27)" rx="2" ry="2" />
<text  x="130.66" y="591.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%)</title><rect x="507.7" y="485" width="1.1" height="15.0" fill="rgb(239,92,24)" rx="2" ry="2" />
<text  x="510.66" y="495.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="614.7" y="469" width="0.3" height="15.0" fill="rgb(251,4,1)" rx="2" ry="2" />
<text  x="617.66" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (5 samples, 0.16%)</title><rect x="91.5" y="309" width="1.9" height="15.0" fill="rgb(253,145,28)" rx="2" ry="2" />
<text  x="94.48" y="319.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%)</title><rect x="322.2" y="405" width="1.2" height="15.0" fill="rgb(233,27,34)" rx="2" ry="2" />
<text  x="325.23" y="415.5" ></text>
</g>
<g >
<title>v3_columns::from_v2_schema (1 samples, 0.03%)</title><rect x="176.0" y="469" width="0.4" height="15.0" fill="rgb(208,40,8)" rx="2" ry="2" />
<text  x="179.01" y="479.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%)</title><rect x="938.3" y="485" width="1.9" height="15.0" fill="rgb(221,35,15)" rx="2" ry="2" />
<text  x="941.31" y="495.5" ></text>
</g>
<g >
<title>std::move&lt;std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;&amp;&gt; (1 samples, 0.03%)</title><rect x="120.8" y="501" width="0.4" height="15.0" fill="rgb(239,32,48)" rx="2" ry="2" />
<text  x="123.80" y="511.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (3 samples, 0.10%)</title><rect x="25.6" y="517" width="1.2" height="15.0" fill="rgb(246,210,45)" rx="2" ry="2" />
<text  x="28.61" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.03%)</title><rect x="92.2" y="133" width="0.4" height="15.0" fill="rgb(223,107,26)" rx="2" ry="2" />
<text  x="95.25" y="143.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (9 samples, 0.29%)</title><rect x="93.4" y="389" width="3.4" height="15.0" fill="rgb(235,40,5)" rx="2" ry="2" />
<text  x="96.39" y="399.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="77.0" y="277" width="0.4" height="15.0" fill="rgb(241,119,54)" rx="2" ry="2" />
<text  x="80.02" y="287.5" ></text>
</g>
<g >
<title>mutation_partition::mutation_partition (1 samples, 0.03%)</title><rect x="173.7" y="485" width="0.4" height="15.0" fill="rgb(217,26,24)" rx="2" ry="2" />
<text  x="176.73" y="495.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%)</title><rect x="64.1" y="421" width="0.7" height="15.0" fill="rgb(212,192,52)" rx="2" ry="2" />
<text  x="67.07" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="110.1" y="309" width="0.4" height="15.0" fill="rgb(253,32,32)" rx="2" ry="2" />
<text  x="113.14" y="319.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%)</title><rect x="70.5" y="293" width="0.8" height="15.0" fill="rgb(232,175,22)" rx="2" ry="2" />
<text  x="73.54" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.35%)</title><rect x="303.2" y="405" width="4.2" height="15.0" fill="rgb(214,97,47)" rx="2" ry="2" />
<text  x="306.19" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="107.9" y="325" width="0.3" height="15.0" fill="rgb(212,37,5)" rx="2" ry="2" />
<text  x="110.86" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (59 samples, 1.90%)</title><rect x="30.6" y="485" width="22.4" height="15.0" fill="rgb(213,35,48)" rx="2" ry="2" />
<text  x="33.56" y="495.5" >a..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="99.1" y="277" width="0.8" height="15.0" fill="rgb(218,3,35)" rx="2" ry="2" />
<text  x="102.10" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="63.7" y="389" width="0.4" height="15.0" fill="rgb(206,205,16)" rx="2" ry="2" />
<text  x="66.69" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.03%)</title><rect x="597.5" y="501" width="0.4" height="15.0" fill="rgb(221,126,37)" rx="2" ry="2" />
<text  x="600.53" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="115.5" y="293" width="0.4" height="15.0" fill="rgb(232,136,43)" rx="2" ry="2" />
<text  x="118.47" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.10%)</title><rect x="89.6" y="213" width="1.1" height="15.0" fill="rgb(237,83,33)" rx="2" ry="2" />
<text  x="92.58" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_view_statement, std::default_delete&lt;cql3::statements::alter_view_statement&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="119.7" y="501" width="0.3" height="15.0" fill="rgb(222,151,21)" rx="2" ry="2" />
<text  x="122.66" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.10%)</title><rect x="70.2" y="325" width="1.1" height="15.0" fill="rgb(227,128,11)" rx="2" ry="2" />
<text  x="73.16" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%)</title><rect x="58.4" y="469" width="0.3" height="15.0" fill="rgb(234,119,19)" rx="2" ry="2" />
<text  x="61.36" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="61.4" y="373" width="0.8" height="15.0" fill="rgb(248,187,40)" rx="2" ry="2" />
<text  x="64.40" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (3 samples, 0.10%)</title><rect x="364.1" y="341" width="1.2" height="15.0" fill="rgb(250,93,13)" rx="2" ry="2" />
<text  x="367.11" y="351.5" ></text>
</g>
<g >
<title>seastar::with_file_close_on_failure&lt;sstables::sstable::new_sstable_component_file (1 samples, 0.03%)</title><rect x="634.8" y="597" width="0.4" height="15.0" fill="rgb(244,186,36)" rx="2" ry="2" />
<text  x="637.84" y="607.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (27 samples, 0.87%)</title><rect x="843.5" y="597" width="10.3" height="15.0" fill="rgb(224,45,33)" rx="2" ry="2" />
<text  x="846.50" y="607.5" ></text>
</g>
<g >
<title>sstables::metadata_collector::update_min_max_components (1 samples, 0.03%)</title><rect x="12.3" y="597" width="0.4" height="15.0" fill="rgb(209,192,18)" rx="2" ry="2" />
<text  x="15.28" y="607.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (1 samples, 0.03%)</title><rect x="24.8" y="485" width="0.4" height="15.0" fill="rgb(223,103,13)" rx="2" ry="2" />
<text  x="27.85" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="77.0" y="309" width="0.4" height="15.0" fill="rgb(231,213,31)" rx="2" ry="2" />
<text  x="80.02" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3 samples, 0.10%)</title><rect x="42.0" y="373" width="1.1" height="15.0" fill="rgb(242,159,45)" rx="2" ry="2" />
<text  x="44.98" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (4 samples, 0.13%)</title><rect x="25.6" y="533" width="1.5" height="15.0" fill="rgb(208,223,0)" rx="2" ry="2" />
<text  x="28.61" y="543.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::run_and_dispose (1 samples, 0.03%)</title><rect x="144.4" y="629" width="0.4" height="15.0" fill="rgb(245,125,18)" rx="2" ry="2" />
<text  x="147.41" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="107.1" y="357" width="0.4" height="15.0" fill="rgb(249,56,29)" rx="2" ry="2" />
<text  x="110.10" y="367.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="115.1" y="197" width="0.4" height="15.0" fill="rgb(216,105,35)" rx="2" ry="2" />
<text  x="118.09" y="207.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="885.0" y="453" width="0.8" height="15.0" fill="rgb(213,119,0)" rx="2" ry="2" />
<text  x="888.00" y="463.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.03%)</title><rect x="134.9" y="661" width="0.4" height="15.0" fill="rgb(239,61,27)" rx="2" ry="2" />
<text  x="137.89" y="671.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="396.5" y="549" width="0.4" height="15.0" fill="rgb(222,110,2)" rx="2" ry="2" />
<text  x="399.48" y="559.5" ></text>
</g>
<g >
<title>service::client_state::has_access (90 samples, 2.90%)</title><rect x="777.6" y="517" width="34.3" height="15.0" fill="rgb(248,188,36)" rx="2" ry="2" />
<text  x="780.63" y="527.5" >se..</text>
</g>
<g >
<title>data_value::data_value (1 samples, 0.03%)</title><rect x="19.5" y="469" width="0.4" height="15.0" fill="rgb(233,205,22)" rx="2" ry="2" />
<text  x="22.52" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="54.5" y="357" width="0.4" height="15.0" fill="rgb(215,176,23)" rx="2" ry="2" />
<text  x="57.55" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (1 samples, 0.03%)</title><rect x="22.6" y="485" width="0.3" height="15.0" fill="rgb(216,31,24)" rx="2" ry="2" />
<text  x="25.57" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="792.9" y="437" width="0.7" height="15.0" fill="rgb(245,2,16)" rx="2" ry="2" />
<text  x="795.86" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="58.0" y="357" width="0.4" height="15.0" fill="rgb(227,119,37)" rx="2" ry="2" />
<text  x="60.98" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (4 samples, 0.13%)</title><rect x="389.6" y="501" width="1.5" height="15.0" fill="rgb(236,138,11)" rx="2" ry="2" />
<text  x="392.63" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_channel (1 samples, 0.03%)</title><rect x="37.8" y="389" width="0.4" height="15.0" fill="rgb(253,193,18)" rx="2" ry="2" />
<text  x="40.80" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.03%)</title><rect x="1188.1" y="709" width="0.4" height="15.0" fill="rgb(250,129,16)" rx="2" ry="2" />
<text  x="1191.10" y="719.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%)</title><rect x="110.1" y="197" width="0.4" height="15.0" fill="rgb(239,112,40)" rx="2" ry="2" />
<text  x="113.14" y="207.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (184 samples, 5.94%)</title><rect x="962.7" y="469" width="70.0" height="15.0" fill="rgb(229,171,34)" rx="2" ry="2" />
<text  x="965.68" y="479.5" >service..</text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%)</title><rect x="116.2" y="373" width="0.4" height="15.0" fill="rgb(250,73,3)" rx="2" ry="2" />
<text  x="119.23" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="102.1" y="421" width="0.4" height="15.0" fill="rgb(249,174,49)" rx="2" ry="2" />
<text  x="105.15" y="431.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (5 samples, 0.16%)</title><rect x="1048.4" y="453" width="1.9" height="15.0" fill="rgb(250,94,39)" rx="2" ry="2" />
<text  x="1051.35" y="463.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (2 samples, 0.06%)</title><rect x="852.3" y="453" width="0.7" height="15.0" fill="rgb(218,119,39)" rx="2" ry="2" />
<text  x="855.26" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%)</title><rect x="849.6" y="421" width="0.4" height="15.0" fill="rgb(226,19,11)" rx="2" ry="2" />
<text  x="852.59" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%)</title><rect x="57.6" y="437" width="0.4" height="15.0" fill="rgb(211,6,14)" rx="2" ry="2" />
<text  x="60.60" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;5ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%)</title><rect x="95.7" y="149" width="0.7" height="15.0" fill="rgb(229,170,21)" rx="2" ry="2" />
<text  x="98.67" y="159.5" ></text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.03%)</title><rect x="23.7" y="533" width="0.4" height="15.0" fill="rgb(230,125,46)" rx="2" ry="2" />
<text  x="26.71" y="543.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="115.5" y="245" width="0.4" height="15.0" fill="rgb(234,70,42)" rx="2" ry="2" />
<text  x="118.47" y="255.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (2 samples, 0.06%)</title><rect x="112.8" y="405" width="0.8" height="15.0" fill="rgb(226,164,9)" rx="2" ry="2" />
<text  x="115.81" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (2 samples, 0.06%)</title><rect x="97.2" y="373" width="0.8" height="15.0" fill="rgb(217,156,8)" rx="2" ry="2" />
<text  x="100.20" y="383.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="137.9" y="613" width="0.4" height="15.0" fill="rgb(244,143,48)" rx="2" ry="2" />
<text  x="140.94" y="623.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (1 samples, 0.03%)</title><rect x="491.7" y="517" width="0.4" height="15.0" fill="rgb(254,134,23)" rx="2" ry="2" />
<text  x="494.67" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%)</title><rect x="53.8" y="325" width="0.7" height="15.0" fill="rgb(216,140,19)" rx="2" ry="2" />
<text  x="56.79" y="335.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%)</title><rect x="91.1" y="357" width="0.4" height="15.0" fill="rgb(250,11,9)" rx="2" ry="2" />
<text  x="94.10" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%)</title><rect x="73.2" y="229" width="0.4" height="15.0" fill="rgb(249,59,37)" rx="2" ry="2" />
<text  x="76.21" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;3ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="95.7" y="117" width="0.4" height="15.0" fill="rgb(242,188,1)" rx="2" ry="2" />
<text  x="98.67" y="127.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="68.3" y="389" width="0.3" height="15.0" fill="rgb(221,15,12)" rx="2" ry="2" />
<text  x="71.26" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (16 samples, 0.52%)</title><rect x="1106.6" y="421" width="6.1" height="15.0" fill="rgb(235,21,19)" rx="2" ry="2" />
<text  x="1109.61" y="431.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (2 samples, 0.06%)</title><rect x="382.0" y="453" width="0.8" height="15.0" fill="rgb(245,156,33)" rx="2" ry="2" />
<text  x="385.01" y="463.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="378.6" y="437" width="0.7" height="15.0" fill="rgb(248,148,31)" rx="2" ry="2" />
<text  x="381.58" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (9 samples, 0.29%)</title><rect x="629.9" y="597" width="3.4" height="15.0" fill="rgb(240,208,19)" rx="2" ry="2" />
<text  x="632.89" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.03%)</title><rect x="42.7" y="325" width="0.4" height="15.0" fill="rgb(206,51,50)" rx="2" ry="2" />
<text  x="45.75" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.03%)</title><rect x="1188.1" y="693" width="0.4" height="15.0" fill="rgb(223,217,34)" rx="2" ry="2" />
<text  x="1191.10" y="703.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (6 samples, 0.19%)</title><rect x="163.4" y="581" width="2.3" height="15.0" fill="rgb(254,90,48)" rx="2" ry="2" />
<text  x="166.45" y="591.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="127.7" y="597" width="0.3" height="15.0" fill="rgb(221,170,24)" rx="2" ry="2" />
<text  x="130.66" y="607.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (125 samples, 4.03%)</title><rect x="553.4" y="517" width="47.6" height="15.0" fill="rgb(235,143,9)" rx="2" ry="2" />
<text  x="556.36" y="527.5" >memt..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%)</title><rect x="114.7" y="261" width="0.8" height="15.0" fill="rgb(243,51,17)" rx="2" ry="2" />
<text  x="117.71" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.03%)</title><rect x="24.8" y="453" width="0.4" height="15.0" fill="rgb(238,20,24)" rx="2" ry="2" />
<text  x="27.85" y="463.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%)</title><rect x="62.2" y="437" width="0.3" height="15.0" fill="rgb(224,195,18)" rx="2" ry="2" />
<text  x="65.17" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="576.6" y="453" width="0.4" height="15.0" fill="rgb(217,219,2)" rx="2" ry="2" />
<text  x="579.58" y="463.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (2 samples, 0.06%)</title><rect x="1030.5" y="405" width="0.7" height="15.0" fill="rgb(243,37,52)" rx="2" ry="2" />
<text  x="1033.46" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (2 samples, 0.06%)</title><rect x="925.4" y="517" width="0.7" height="15.0" fill="rgb(234,186,35)" rx="2" ry="2" />
<text  x="928.37" y="527.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.03%)</title><rect x="158.9" y="581" width="0.4" height="15.0" fill="rgb(237,209,35)" rx="2" ry="2" />
<text  x="161.88" y="591.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="63.7" y="309" width="0.4" height="15.0" fill="rgb(242,134,2)" rx="2" ry="2" />
<text  x="66.69" y="319.5" ></text>
</g>
<g >
<title>make_combined_reader (35 samples, 1.13%)</title><rect x="538.9" y="501" width="13.3" height="15.0" fill="rgb(215,98,45)" rx="2" ry="2" />
<text  x="541.89" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="68.6" y="373" width="0.4" height="15.0" fill="rgb(252,92,44)" rx="2" ry="2" />
<text  x="71.64" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (14 samples, 0.45%)</title><rect x="328.3" y="389" width="5.4" height="15.0" fill="rgb(252,27,12)" rx="2" ry="2" />
<text  x="331.32" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%)</title><rect x="101.8" y="373" width="0.3" height="15.0" fill="rgb(228,135,3)" rx="2" ry="2" />
<text  x="104.77" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%)</title><rect x="102.5" y="421" width="0.4" height="15.0" fill="rgb(241,21,53)" rx="2" ry="2" />
<text  x="105.53" y="431.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%)</title><rect x="639.8" y="597" width="1.9" height="15.0" fill="rgb(210,26,8)" rx="2" ry="2" />
<text  x="642.79" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="110.1" y="325" width="0.4" height="15.0" fill="rgb(249,221,37)" rx="2" ry="2" />
<text  x="113.14" y="335.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (33 samples, 1.06%)</title><rect x="1158.0" y="741" width="12.6" height="15.0" fill="rgb(214,74,24)" rx="2" ry="2" />
<text  x="1161.02" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (6 samples, 0.19%)</title><rect x="48.5" y="389" width="2.2" height="15.0" fill="rgb(227,124,4)" rx="2" ry="2" />
<text  x="51.46" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::update_statement&gt;, void&gt; (1 samples, 0.03%)</title><rect x="118.5" y="469" width="0.4" height="15.0" fill="rgb(212,194,40)" rx="2" ry="2" />
<text  x="121.52" y="479.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.03%)</title><rect x="846.5" y="437" width="0.4" height="15.0" fill="rgb(233,29,29)" rx="2" ry="2" />
<text  x="849.55" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="65.6" y="325" width="0.4" height="15.0" fill="rgb(254,13,20)" rx="2" ry="2" />
<text  x="68.59" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%)</title><rect x="183.6" y="597" width="0.4" height="15.0" fill="rgb(246,189,48)" rx="2" ry="2" />
<text  x="186.63" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (4 samples, 0.13%)</title><rect x="1148.9" y="613" width="1.5" height="15.0" fill="rgb(210,204,8)" rx="2" ry="2" />
<text  x="1151.88" y="623.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.03%)</title><rect x="477.6" y="517" width="0.4" height="15.0" fill="rgb(206,25,0)" rx="2" ry="2" />
<text  x="480.58" y="527.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (32 samples, 1.03%)</title><rect x="1105.5" y="453" width="12.2" height="15.0" fill="rgb(241,218,21)" rx="2" ry="2" />
<text  x="1108.47" y="463.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="110.1" y="373" width="0.4" height="15.0" fill="rgb(222,8,22)" rx="2" ry="2" />
<text  x="113.14" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="634.8" y="533" width="0.4" height="15.0" fill="rgb(222,36,48)" rx="2" ry="2" />
<text  x="637.84" y="543.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.03%)</title><rect x="759.7" y="517" width="0.4" height="15.0" fill="rgb(209,92,26)" rx="2" ry="2" />
<text  x="762.73" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="94.1" y="277" width="0.8" height="15.0" fill="rgb(250,198,22)" rx="2" ry="2" />
<text  x="97.15" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%)</title><rect x="668.7" y="565" width="1.6" height="15.0" fill="rgb(232,201,48)" rx="2" ry="2" />
<text  x="671.73" y="575.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.16%)</title><rect x="611.6" y="485" width="1.9" height="15.0" fill="rgb(221,34,0)" rx="2" ry="2" />
<text  x="614.61" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="78.9" y="341" width="0.4" height="15.0" fill="rgb(238,71,32)" rx="2" ry="2" />
<text  x="81.92" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (32 samples, 1.03%)</title><rect x="714.4" y="597" width="12.2" height="15.0" fill="rgb(215,116,28)" rx="2" ry="2" />
<text  x="717.42" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="64.1" y="293" width="0.3" height="15.0" fill="rgb(237,147,51)" rx="2" ry="2" />
<text  x="67.07" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.16%)</title><rect x="32.5" y="309" width="1.9" height="15.0" fill="rgb(237,198,10)" rx="2" ry="2" />
<text  x="35.47" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%)</title><rect x="68.6" y="245" width="0.4" height="15.0" fill="rgb(236,178,9)" rx="2" ry="2" />
<text  x="71.64" y="255.5" ></text>
</g>
<g >
<title>database::find_keyspace (4 samples, 0.13%)</title><rect x="1046.8" y="453" width="1.6" height="15.0" fill="rgb(249,113,26)" rx="2" ry="2" />
<text  x="1049.83" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="60.6" y="293" width="0.4" height="15.0" fill="rgb(245,125,42)" rx="2" ry="2" />
<text  x="63.64" y="303.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%)</title><rect x="680.9" y="597" width="1.9" height="15.0" fill="rgb(241,171,29)" rx="2" ry="2" />
<text  x="683.91" y="607.5" ></text>
</g>
<g >
<title>seastar::with_semaphore&lt;seastar::semaphore_default_exception_factory, gms::gossiper::run (1 samples, 0.03%)</title><rect x="1153.4" y="581" width="0.4" height="15.0" fill="rgb(234,78,32)" rx="2" ry="2" />
<text  x="1156.45" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="492.8" y="517" width="0.4" height="15.0" fill="rgb(233,67,4)" rx="2" ry="2" />
<text  x="495.81" y="527.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (2 samples, 0.06%)</title><rect x="931.1" y="501" width="0.7" height="15.0" fill="rgb(252,37,35)" rx="2" ry="2" />
<text  x="934.08" y="511.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%)</title><rect x="592.2" y="453" width="0.4" height="15.0" fill="rgb(235,45,39)" rx="2" ry="2" />
<text  x="595.19" y="463.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%)</title><rect x="548.4" y="485" width="1.5" height="15.0" fill="rgb(219,183,42)" rx="2" ry="2" />
<text  x="551.41" y="495.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%)</title><rect x="61.4" y="293" width="0.8" height="15.0" fill="rgb(233,168,32)" rx="2" ry="2" />
<text  x="64.40" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.16%)</title><rect x="113.9" y="405" width="2.0" height="15.0" fill="rgb(254,50,13)" rx="2" ry="2" />
<text  x="116.95" y="415.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (2 samples, 0.06%)</title><rect x="233.9" y="549" width="0.8" height="15.0" fill="rgb(216,117,24)" rx="2" ry="2" />
<text  x="236.89" y="559.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (139 samples, 4.49%)</title><rect x="769.6" y="533" width="53.0" height="15.0" fill="rgb(209,151,28)" rx="2" ry="2" />
<text  x="772.63" y="543.5" >servi..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%)</title><rect x="691.6" y="597" width="0.4" height="15.0" fill="rgb(237,50,51)" rx="2" ry="2" />
<text  x="694.57" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="66.7" y="133" width="0.4" height="15.0" fill="rgb(236,224,5)" rx="2" ry="2" />
<text  x="69.73" y="143.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="56.8" y="405" width="0.4" height="15.0" fill="rgb(231,151,37)" rx="2" ry="2" />
<text  x="59.83" y="415.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%)</title><rect x="72.1" y="373" width="0.7" height="15.0" fill="rgb(251,181,53)" rx="2" ry="2" />
<text  x="75.07" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%)</title><rect x="808.1" y="437" width="0.8" height="15.0" fill="rgb(248,222,49)" rx="2" ry="2" />
<text  x="811.09" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (16 samples, 0.52%)</title><rect x="87.3" y="373" width="6.1" height="15.0" fill="rgb(242,30,42)" rx="2" ry="2" />
<text  x="90.30" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%)</title><rect x="830.6" y="549" width="1.9" height="15.0" fill="rgb(241,181,54)" rx="2" ry="2" />
<text  x="833.56" y="559.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (1 samples, 0.03%)</title><rect x="695.0" y="597" width="0.4" height="15.0" fill="rgb(236,96,25)" rx="2" ry="2" />
<text  x="698.00" y="607.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (1 samples, 0.03%)</title><rect x="139.1" y="725" width="0.4" height="15.0" fill="rgb(216,97,14)" rx="2" ry="2" />
<text  x="142.08" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%)</title><rect x="926.1" y="501" width="2.3" height="15.0" fill="rgb(206,171,12)" rx="2" ry="2" />
<text  x="929.13" y="511.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%)</title><rect x="131.8" y="693" width="0.4" height="15.0" fill="rgb(247,220,7)" rx="2" ry="2" />
<text  x="134.85" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (2 samples, 0.06%)</title><rect x="1188.1" y="741" width="0.8" height="15.0" fill="rgb(231,76,33)" rx="2" ry="2" />
<text  x="1191.10" y="751.5" ></text>
</g>
<g >
<title>intel_check_word.constprop.0 (1 samples, 0.03%)</title><rect x="137.6" y="725" width="0.3" height="15.0" fill="rgb(208,199,48)" rx="2" ry="2" />
<text  x="140.56" y="735.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.03%)</title><rect x="131.5" y="693" width="0.3" height="15.0" fill="rgb(210,132,31)" rx="2" ry="2" />
<text  x="134.46" y="703.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1 samples, 0.03%)</title><rect x="1073.9" y="501" width="0.3" height="15.0" fill="rgb(250,200,6)" rx="2" ry="2" />
<text  x="1076.87" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (5 samples, 0.16%)</title><rect x="66.4" y="405" width="1.9" height="15.0" fill="rgb(252,43,4)" rx="2" ry="2" />
<text  x="69.35" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::prepare (1 samples, 0.03%)</title><rect x="127.7" y="629" width="0.3" height="15.0" fill="rgb(244,204,1)" rx="2" ry="2" />
<text  x="130.66" y="639.5" ></text>
</g>
<g >
<title>__start_context (6 samples, 0.19%)</title><rect x="134.9" y="725" width="2.3" height="15.0" fill="rgb(213,201,38)" rx="2" ry="2" />
<text  x="137.89" y="735.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 1.10%)</title><rect x="1104.7" y="549" width="13.0" height="15.0" fill="rgb(226,178,47)" rx="2" ry="2" />
<text  x="1107.71" y="559.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.03%)</title><rect x="135.7" y="629" width="0.3" height="15.0" fill="rgb(205,140,22)" rx="2" ry="2" />
<text  x="138.65" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.13%)</title><rect x="32.8" y="277" width="1.6" height="15.0" fill="rgb(212,183,39)" rx="2" ry="2" />
<text  x="35.85" y="287.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (59 samples, 1.90%)</title><rect x="30.6" y="501" width="22.4" height="15.0" fill="rgb(233,198,52)" rx="2" ry="2" />
<text  x="33.56" y="511.5" >a..</text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%)</title><rect x="114.7" y="245" width="0.8" height="15.0" fill="rgb(240,194,1)" rx="2" ry="2" />
<text  x="117.71" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (1 samples, 0.03%)</title><rect x="16.5" y="517" width="0.4" height="15.0" fill="rgb(245,14,12)" rx="2" ry="2" />
<text  x="19.47" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.03%)</title><rect x="957.7" y="389" width="0.4" height="15.0" fill="rgb(228,67,46)" rx="2" ry="2" />
<text  x="960.73" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (14 samples, 0.45%)</title><rect x="18.4" y="517" width="5.3" height="15.0" fill="rgb(218,167,53)" rx="2" ry="2" />
<text  x="21.38" y="527.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::~single_column_relation (1 samples, 0.03%)</title><rect x="15.3" y="565" width="0.4" height="15.0" fill="rgb(250,34,4)" rx="2" ry="2" />
<text  x="18.33" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.03%)</title><rect x="39.3" y="357" width="0.4" height="15.0" fill="rgb(253,148,15)" rx="2" ry="2" />
<text  x="42.32" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (2 samples, 0.06%)</title><rect x="51.5" y="421" width="0.8" height="15.0" fill="rgb(207,146,17)" rx="2" ry="2" />
<text  x="54.50" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="114.7" y="357" width="0.8" height="15.0" fill="rgb(247,178,23)" rx="2" ry="2" />
<text  x="117.71" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="492.4" y="517" width="0.4" height="15.0" fill="rgb(232,58,48)" rx="2" ry="2" />
<text  x="495.43" y="527.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (34 samples, 1.10%)</title><rect x="1104.7" y="597" width="13.0" height="15.0" fill="rgb(223,124,19)" rx="2" ry="2" />
<text  x="1107.71" y="607.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.03%)</title><rect x="808.9" y="469" width="0.3" height="15.0" fill="rgb(254,216,41)" rx="2" ry="2" />
<text  x="811.85" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (2 samples, 0.06%)</title><rect x="112.8" y="421" width="0.8" height="15.0" fill="rgb(242,133,14)" rx="2" ry="2" />
<text  x="115.81" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (2 samples, 0.06%)</title><rect x="966.5" y="453" width="0.8" height="15.0" fill="rgb(209,170,12)" rx="2" ry="2" />
<text  x="969.49" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%)</title><rect x="114.7" y="229" width="0.8" height="15.0" fill="rgb(205,137,29)" rx="2" ry="2" />
<text  x="117.71" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="777.2" y="517" width="0.4" height="15.0" fill="rgb(221,175,49)" rx="2" ry="2" />
<text  x="780.25" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.03%)</title><rect x="58.7" y="405" width="0.4" height="15.0" fill="rgb(249,119,5)" rx="2" ry="2" />
<text  x="61.74" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (173 samples, 5.58%)</title><rect x="53.0" y="501" width="65.9" height="15.0" fill="rgb(234,84,14)" rx="2" ry="2" />
<text  x="56.03" y="511.5" >cql3_pa..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="64.1" y="373" width="0.3" height="15.0" fill="rgb(220,20,26)" rx="2" ry="2" />
<text  x="67.07" y="383.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="59.1" y="309" width="0.4" height="15.0" fill="rgb(232,99,14)" rx="2" ry="2" />
<text  x="62.12" y="319.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="73.2" y="389" width="0.4" height="15.0" fill="rgb(233,177,21)" rx="2" ry="2" />
<text  x="76.21" y="399.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (3 samples, 0.10%)</title><rect x="953.2" y="469" width="1.1" height="15.0" fill="rgb(207,59,34)" rx="2" ry="2" />
<text  x="956.16" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="68.6" y="309" width="0.4" height="15.0" fill="rgb(233,95,39)" rx="2" ry="2" />
<text  x="71.64" y="319.5" ></text>
</g>
<g >
<title>table::query (1 samples, 0.03%)</title><rect x="1152.7" y="613" width="0.4" height="15.0" fill="rgb(219,170,7)" rx="2" ry="2" />
<text  x="1155.68" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (5 samples, 0.16%)</title><rect x="75.1" y="405" width="1.9" height="15.0" fill="rgb(228,117,25)" rx="2" ry="2" />
<text  x="78.11" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%)</title><rect x="72.1" y="357" width="0.7" height="15.0" fill="rgb(245,110,21)" rx="2" ry="2" />
<text  x="75.07" y="367.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (1 samples, 0.03%)</title><rect x="634.1" y="613" width="0.4" height="15.0" fill="rgb(237,89,11)" rx="2" ry="2" />
<text  x="637.08" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned int&gt;::_Rb_tree_iterator (1 samples, 0.03%)</title><rect x="51.9" y="405" width="0.4" height="15.0" fill="rgb(230,103,52)" rx="2" ry="2" />
<text  x="54.88" y="415.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (7 samples, 0.23%)</title><rect x="509.2" y="469" width="2.7" height="15.0" fill="rgb(242,85,8)" rx="2" ry="2" />
<text  x="512.19" y="479.5" ></text>
</g>
<g >
<title>auth::get_permissions (68 samples, 2.19%)</title><rect x="783.3" y="485" width="25.9" height="15.0" fill="rgb(237,100,22)" rx="2" ry="2" />
<text  x="786.34" y="495.5" >a..</text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%)</title><rect x="516.4" y="517" width="0.4" height="15.0" fill="rgb(247,144,24)" rx="2" ry="2" />
<text  x="519.42" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (2 samples, 0.06%)</title><rect x="1023.6" y="325" width="0.8" height="15.0" fill="rgb(235,70,31)" rx="2" ry="2" />
<text  x="1026.60" y="335.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::index (1 samples, 0.03%)</title><rect x="67.5" y="277" width="0.4" height="15.0" fill="rgb(227,119,28)" rx="2" ry="2" />
<text  x="70.50" y="287.5" ></text>
</g>
<g >
<title>unsigned_vint::serialize (1 samples, 0.03%)</title><rect x="12.7" y="597" width="0.3" height="15.0" fill="rgb(227,196,31)" rx="2" ry="2" />
<text  x="15.67" y="607.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.03%)</title><rect x="850.7" y="453" width="0.4" height="15.0" fill="rgb(224,77,4)" rx="2" ry="2" />
<text  x="853.74" y="463.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (4 samples, 0.13%)</title><rect x="613.5" y="485" width="1.5" height="15.0" fill="rgb(208,229,4)" rx="2" ry="2" />
<text  x="616.52" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="626.1" y="565" width="0.4" height="15.0" fill="rgb(233,14,21)" rx="2" ry="2" />
<text  x="629.08" y="575.5" ></text>
</g>
<g >
<title>schema::column_at (4 samples, 0.13%)</title><rect x="362.2" y="373" width="1.5" height="15.0" fill="rgb(238,155,40)" rx="2" ry="2" />
<text  x="365.21" y="383.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (3 samples, 0.10%)</title><rect x="175.6" y="613" width="1.2" height="15.0" fill="rgb(219,137,5)" rx="2" ry="2" />
<text  x="178.63" y="623.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (5 samples, 0.16%)</title><rect x="110.9" y="421" width="1.9" height="15.0" fill="rgb(247,48,23)" rx="2" ry="2" />
<text  x="113.90" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="811.1" y="469" width="0.8" height="15.0" fill="rgb(206,27,19)" rx="2" ry="2" />
<text  x="814.14" y="479.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.03%)</title><rect x="850.0" y="453" width="0.4" height="15.0" fill="rgb(220,40,44)" rx="2" ry="2" />
<text  x="852.97" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (121 samples, 3.90%)</title><rect x="872.4" y="533" width="46.1" height="15.0" fill="rgb(228,72,44)" rx="2" ry="2" />
<text  x="875.44" y="543.5" >cql3..</text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (14 samples, 0.45%)</title><rect x="1107.4" y="389" width="5.3" height="15.0" fill="rgb(228,116,12)" rx="2" ry="2" />
<text  x="1110.37" y="399.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.03%)</title><rect x="10.8" y="645" width="0.3" height="15.0" fill="rgb(213,175,39)" rx="2" ry="2" />
<text  x="13.76" y="655.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (3 samples, 0.10%)</title><rect x="59.9" y="421" width="1.1" height="15.0" fill="rgb(228,72,3)" rx="2" ry="2" />
<text  x="62.88" y="431.5" ></text>
</g>
<g >
<title>sstables::sstable::component_basename (1 samples, 0.03%)</title><rect x="729.7" y="581" width="0.3" height="15.0" fill="rgb(232,132,10)" rx="2" ry="2" />
<text  x="732.65" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%)</title><rect x="103.3" y="341" width="0.7" height="15.0" fill="rgb(212,197,10)" rx="2" ry="2" />
<text  x="106.29" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (5 samples, 0.16%)</title><rect x="91.5" y="325" width="1.9" height="15.0" fill="rgb(231,64,13)" rx="2" ry="2" />
<text  x="94.48" y="335.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%)</title><rect x="94.1" y="357" width="0.8" height="15.0" fill="rgb(211,49,51)" rx="2" ry="2" />
<text  x="97.15" y="367.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (3 samples, 0.10%)</title><rect x="988.2" y="405" width="1.1" height="15.0" fill="rgb(210,178,54)" rx="2" ry="2" />
<text  x="991.19" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%)</title><rect x="85.4" y="421" width="0.4" height="15.0" fill="rgb(211,34,45)" rx="2" ry="2" />
<text  x="88.39" y="431.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="61.0" y="229" width="0.4" height="15.0" fill="rgb(235,207,16)" rx="2" ry="2" />
<text  x="64.02" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="61.0" y="245" width="0.4" height="15.0" fill="rgb(230,194,12)" rx="2" ry="2" />
<text  x="64.02" y="255.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (6 samples, 0.19%)</title><rect x="892.6" y="421" width="2.3" height="15.0" fill="rgb(209,191,27)" rx="2" ry="2" />
<text  x="895.62" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="63.7" y="357" width="0.4" height="15.0" fill="rgb(216,169,23)" rx="2" ry="2" />
<text  x="66.69" y="367.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="77.0" y="229" width="0.4" height="15.0" fill="rgb(224,103,15)" rx="2" ry="2" />
<text  x="80.02" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (4 samples, 0.13%)</title><rect x="95.3" y="277" width="1.5" height="15.0" fill="rgb(207,87,47)" rx="2" ry="2" />
<text  x="98.29" y="287.5" ></text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.03%)</title><rect x="174.1" y="453" width="0.4" height="15.0" fill="rgb(248,23,28)" rx="2" ry="2" />
<text  x="177.11" y="463.5" ></text>
</g>
<g >
<title>database::has_keyspace (6 samples, 0.19%)</title><rect x="828.3" y="565" width="2.3" height="15.0" fill="rgb(217,34,50)" rx="2" ry="2" />
<text  x="831.27" y="575.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="112.8" y="261" width="0.4" height="15.0" fill="rgb(212,203,18)" rx="2" ry="2" />
<text  x="115.81" y="271.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (2 samples, 0.06%)</title><rect x="175.6" y="549" width="0.8" height="15.0" fill="rgb(245,215,5)" rx="2" ry="2" />
<text  x="178.63" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="77.0" y="293" width="0.4" height="15.0" fill="rgb(245,124,41)" rx="2" ry="2" />
<text  x="80.02" y="303.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="137.9" y="597" width="0.4" height="15.0" fill="rgb(219,43,14)" rx="2" ry="2" />
<text  x="140.94" y="607.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="99.1" y="325" width="0.8" height="15.0" fill="rgb(229,79,22)" rx="2" ry="2" />
<text  x="102.10" y="335.5" ></text>
</g>
<g >
<title>db::filter_for_query (4 samples, 0.13%)</title><rect x="1050.6" y="453" width="1.6" height="15.0" fill="rgb(244,92,5)" rx="2" ry="2" />
<text  x="1053.64" y="463.5" ></text>
</g>
<g >
<title>seastar::rename_file (1 samples, 0.03%)</title><rect x="634.8" y="581" width="0.4" height="15.0" fill="rgb(234,134,14)" rx="2" ry="2" />
<text  x="637.84" y="591.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (5 samples, 0.16%)</title><rect x="113.9" y="421" width="2.0" height="15.0" fill="rgb(220,199,43)" rx="2" ry="2" />
<text  x="116.95" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%)</title><rect x="112.8" y="389" width="0.4" height="15.0" fill="rgb(245,172,13)" rx="2" ry="2" />
<text  x="115.81" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="68.3" y="357" width="0.3" height="15.0" fill="rgb(235,42,43)" rx="2" ry="2" />
<text  x="71.26" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (5 samples, 0.16%)</title><rect x="71.7" y="405" width="1.9" height="15.0" fill="rgb(235,127,35)" rx="2" ry="2" />
<text  x="74.68" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="97.2" y="293" width="0.4" height="15.0" fill="rgb(228,90,39)" rx="2" ry="2" />
<text  x="100.20" y="303.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="1103.6" y="485" width="0.3" height="15.0" fill="rgb(247,209,26)" rx="2" ry="2" />
<text  x="1106.57" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%)</title><rect x="881.6" y="421" width="1.1" height="15.0" fill="rgb(240,224,44)" rx="2" ry="2" />
<text  x="884.58" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.10%)</title><rect x="55.7" y="389" width="1.1" height="15.0" fill="rgb(231,190,35)" rx="2" ry="2" />
<text  x="58.69" y="399.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%)</title><rect x="288.7" y="437" width="0.4" height="15.0" fill="rgb(215,28,54)" rx="2" ry="2" />
<text  x="291.72" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%)</title><rect x="72.1" y="341" width="0.7" height="15.0" fill="rgb(253,106,24)" rx="2" ry="2" />
<text  x="75.07" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="64.1" y="357" width="0.3" height="15.0" fill="rgb(242,168,42)" rx="2" ry="2" />
<text  x="67.07" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (5 samples, 0.16%)</title><rect x="71.7" y="437" width="1.9" height="15.0" fill="rgb(224,2,4)" rx="2" ry="2" />
<text  x="74.68" y="447.5" ></text>
</g>
<g >
<title>data_value::data_value (1 samples, 0.03%)</title><rect x="18.8" y="453" width="0.3" height="15.0" fill="rgb(248,18,45)" rx="2" ry="2" />
<text  x="21.76" y="463.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.03%)</title><rect x="134.9" y="677" width="0.4" height="15.0" fill="rgb(212,222,27)" rx="2" ry="2" />
<text  x="137.89" y="687.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (1 samples, 0.03%)</title><rect x="127.7" y="389" width="0.3" height="15.0" fill="rgb(223,121,5)" rx="2" ry="2" />
<text  x="130.66" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.58%)</title><rect x="1008.4" y="357" width="6.8" height="15.0" fill="rgb(227,31,36)" rx="2" ry="2" />
<text  x="1011.37" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (25 samples, 0.81%)</title><rect x="886.1" y="453" width="9.6" height="15.0" fill="rgb(219,107,28)" rx="2" ry="2" />
<text  x="889.15" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (2 samples, 0.06%)</title><rect x="53.8" y="373" width="0.7" height="15.0" fill="rgb(216,181,35)" rx="2" ry="2" />
<text  x="56.79" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%)</title><rect x="748.7" y="565" width="0.8" height="15.0" fill="rgb(247,154,49)" rx="2" ry="2" />
<text  x="751.69" y="575.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (1 samples, 0.03%)</title><rect x="791.0" y="453" width="0.3" height="15.0" fill="rgb(210,136,41)" rx="2" ry="2" />
<text  x="793.96" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="682.4" y="581" width="0.4" height="15.0" fill="rgb(234,24,21)" rx="2" ry="2" />
<text  x="685.44" y="591.5" ></text>
</g>
<g >
<title>cql3::column_identifier::column_identifier (1 samples, 0.03%)</title><rect x="176.0" y="453" width="0.4" height="15.0" fill="rgb(229,14,18)" rx="2" ry="2" />
<text  x="179.01" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%)</title><rect x="914.3" y="501" width="2.3" height="15.0" fill="rgb(209,102,12)" rx="2" ry="2" />
<text  x="917.32" y="511.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="204.6" y="581" width="0.4" height="15.0" fill="rgb(251,79,32)" rx="2" ry="2" />
<text  x="207.57" y="591.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (2 samples, 0.06%)</title><rect x="174.5" y="581" width="0.8" height="15.0" fill="rgb(229,181,14)" rx="2" ry="2" />
<text  x="177.49" y="591.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (4 samples, 0.13%)</title><rect x="11.5" y="613" width="1.5" height="15.0" fill="rgb(253,6,39)" rx="2" ry="2" />
<text  x="14.52" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (1 samples, 0.03%)</title><rect x="856.8" y="581" width="0.4" height="15.0" fill="rgb(224,0,6)" rx="2" ry="2" />
<text  x="859.83" y="591.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="748.3" y="565" width="0.4" height="15.0" fill="rgb(225,106,22)" rx="2" ry="2" />
<text  x="751.31" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::untyped_constant (1 samples, 0.03%)</title><rect x="98.0" y="405" width="0.3" height="15.0" fill="rgb(211,174,3)" rx="2" ry="2" />
<text  x="100.96" y="415.5" ></text>
</g>
<g >
<title>create_partitions (300 samples, 9.68%)</title><rect x="13.4" y="629" width="114.3" height="15.0" fill="rgb(234,24,45)" rx="2" ry="2" />
<text  x="16.43" y="639.5" >create_partiti..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="77.0" y="373" width="0.4" height="15.0" fill="rgb(228,51,7)" rx="2" ry="2" />
<text  x="80.02" y="383.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (3 samples, 0.10%)</title><rect x="39.3" y="389" width="1.2" height="15.0" fill="rgb(221,52,42)" rx="2" ry="2" />
<text  x="42.32" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.13%)</title><rect x="428.1" y="453" width="1.5" height="15.0" fill="rgb(249,79,28)" rx="2" ry="2" />
<text  x="431.08" y="463.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="593.7" y="469" width="0.4" height="15.0" fill="rgb(243,64,10)" rx="2" ry="2" />
<text  x="596.72" y="479.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.13%)</title><rect x="99.1" y="373" width="1.5" height="15.0" fill="rgb(237,85,50)" rx="2" ry="2" />
<text  x="102.10" y="383.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (7 samples, 0.23%)</title><rect x="833.6" y="565" width="2.7" height="15.0" fill="rgb(212,88,9)" rx="2" ry="2" />
<text  x="836.60" y="575.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.03%)</title><rect x="481.4" y="517" width="0.4" height="15.0" fill="rgb(254,114,40)" rx="2" ry="2" />
<text  x="484.39" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (10 samples, 0.32%)</title><rect x="31.3" y="373" width="3.8" height="15.0" fill="rgb(238,77,49)" rx="2" ry="2" />
<text  x="34.32" y="383.5" ></text>
</g>
<g >
<title>__libc_start_main (2,670 samples, 86.16%)</title><rect x="139.5" y="741" width="1016.6" height="15.0" fill="rgb(207,179,16)" rx="2" ry="2" />
<text  x="142.46" y="751.5" >__libc_start_main</text>
</g>
<g >
<title>reader_permit::signal (2 samples, 0.06%)</title><rect x="391.9" y="501" width="0.8" height="15.0" fill="rgb(217,17,29)" rx="2" ry="2" />
<text  x="394.91" y="511.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%)</title><rect x="239.6" y="565" width="1.9" height="15.0" fill="rgb(245,210,27)" rx="2" ry="2" />
<text  x="242.60" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (9 samples, 0.29%)</title><rect x="358.8" y="325" width="3.4" height="15.0" fill="rgb(253,71,23)" rx="2" ry="2" />
<text  x="361.78" y="335.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="107.1" y="373" width="0.4" height="15.0" fill="rgb(213,119,39)" rx="2" ry="2" />
<text  x="110.10" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%)</title><rect x="27.1" y="533" width="0.4" height="15.0" fill="rgb(236,223,36)" rx="2" ry="2" />
<text  x="30.13" y="543.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (41 samples, 1.32%)</title><rect x="102.5" y="485" width="15.6" height="15.0" fill="rgb(207,191,34)" rx="2" ry="2" />
<text  x="105.53" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1099.8" y="421" width="0.3" height="15.0" fill="rgb(239,13,31)" rx="2" ry="2" />
<text  x="1102.76" y="431.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.03%)</title><rect x="176.0" y="517" width="0.4" height="15.0" fill="rgb(206,13,20)" rx="2" ry="2" />
<text  x="179.01" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%)</title><rect x="72.1" y="309" width="0.7" height="15.0" fill="rgb(226,217,24)" rx="2" ry="2" />
<text  x="75.07" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.06%)</title><rect x="69.0" y="437" width="0.8" height="15.0" fill="rgb(220,183,19)" rx="2" ry="2" />
<text  x="72.02" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="932.2" y="501" width="0.4" height="15.0" fill="rgb(254,60,42)" rx="2" ry="2" />
<text  x="935.22" y="511.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (53 samples, 1.71%)</title><rect x="655.8" y="613" width="20.2" height="15.0" fill="rgb(229,56,44)" rx="2" ry="2" />
<text  x="658.78" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="114.3" y="245" width="0.4" height="15.0" fill="rgb(220,5,50)" rx="2" ry="2" />
<text  x="117.33" y="255.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (2 samples, 0.06%)</title><rect x="11.5" y="565" width="0.8" height="15.0" fill="rgb(226,209,9)" rx="2" ry="2" />
<text  x="14.52" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="83.9" y="325" width="0.3" height="15.0" fill="rgb(229,156,35)" rx="2" ry="2" />
<text  x="86.87" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (2 samples, 0.06%)</title><rect x="117.4" y="453" width="0.7" height="15.0" fill="rgb(205,106,16)" rx="2" ry="2" />
<text  x="120.38" y="463.5" ></text>
</g>
<g >
<title>database::apply (3 samples, 0.10%)</title><rect x="1115.0" y="357" width="1.1" height="15.0" fill="rgb(244,41,45)" rx="2" ry="2" />
<text  x="1117.99" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="82.3" y="341" width="0.4" height="15.0" fill="rgb(211,56,49)" rx="2" ry="2" />
<text  x="85.35" y="351.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%)</title><rect x="115.5" y="373" width="0.4" height="15.0" fill="rgb(223,211,53)" rx="2" ry="2" />
<text  x="118.47" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%)</title><rect x="100.2" y="341" width="0.4" height="15.0" fill="rgb(239,68,32)" rx="2" ry="2" />
<text  x="103.24" y="351.5" ></text>
</g>
<g >
<title>table::mutation_query (1 samples, 0.03%)</title><rect x="205.3" y="581" width="0.4" height="15.0" fill="rgb(235,196,9)" rx="2" ry="2" />
<text  x="208.33" y="591.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.45%)</title><rect x="129.6" y="709" width="5.3" height="15.0" fill="rgb(234,167,33)" rx="2" ry="2" />
<text  x="132.56" y="719.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.10%)</title><rect x="193.9" y="549" width="1.2" height="15.0" fill="rgb(226,41,10)" rx="2" ry="2" />
<text  x="196.91" y="559.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="102.9" y="309" width="0.4" height="15.0" fill="rgb(206,46,28)" rx="2" ry="2" />
<text  x="105.91" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%)</title><rect x="957.7" y="421" width="0.4" height="15.0" fill="rgb(228,227,22)" rx="2" ry="2" />
<text  x="960.73" y="431.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (6 samples, 0.19%)</title><rect x="18.4" y="485" width="2.3" height="15.0" fill="rgb(224,203,46)" rx="2" ry="2" />
<text  x="21.38" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%)</title><rect x="703.8" y="581" width="0.7" height="15.0" fill="rgb(228,69,53)" rx="2" ry="2" />
<text  x="706.76" y="591.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="111.3" y="213" width="0.4" height="15.0" fill="rgb(219,16,7)" rx="2" ry="2" />
<text  x="114.28" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::max_size (1 samples, 0.03%)</title><rect x="35.9" y="373" width="0.4" height="15.0" fill="rgb(222,180,34)" rx="2" ry="2" />
<text  x="38.89" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="16.9" y="501" width="0.3" height="15.0" fill="rgb(249,186,28)" rx="2" ry="2" />
<text  x="19.85" y="511.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (2 samples, 0.06%)</title><rect x="324.9" y="389" width="0.8" height="15.0" fill="rgb(247,71,0)" rx="2" ry="2" />
<text  x="327.90" y="399.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.61%)</title><rect x="1008.0" y="373" width="7.2" height="15.0" fill="rgb(223,201,30)" rx="2" ry="2" />
<text  x="1010.99" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.10%)</title><rect x="53.8" y="405" width="1.1" height="15.0" fill="rgb(226,118,19)" rx="2" ry="2" />
<text  x="56.79" y="415.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%)</title><rect x="491.3" y="485" width="0.4" height="15.0" fill="rgb(220,5,45)" rx="2" ry="2" />
<text  x="494.29" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (3 samples, 0.10%)</title><rect x="84.2" y="309" width="1.2" height="15.0" fill="rgb(254,162,12)" rx="2" ry="2" />
<text  x="87.25" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="66.7" y="85" width="0.4" height="15.0" fill="rgb(233,75,5)" rx="2" ry="2" />
<text  x="69.73" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%)</title><rect x="597.1" y="501" width="0.4" height="15.0" fill="rgb(212,121,17)" rx="2" ry="2" />
<text  x="600.14" y="511.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (2 samples, 0.06%)</title><rect x="166.1" y="581" width="0.8" height="15.0" fill="rgb(240,193,12)" rx="2" ry="2" />
<text  x="169.11" y="591.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%)</title><rect x="1027.0" y="389" width="1.9" height="15.0" fill="rgb(249,100,43)" rx="2" ry="2" />
<text  x="1030.03" y="399.5" ></text>
</g>
<g >
<title>schema_registry::get_or_load (1 samples, 0.03%)</title><rect x="174.1" y="549" width="0.4" height="15.0" fill="rgb(238,152,30)" rx="2" ry="2" />
<text  x="177.11" y="559.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.03%)</title><rect x="876.6" y="517" width="0.4" height="15.0" fill="rgb(241,95,1)" rx="2" ry="2" />
<text  x="879.63" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%)</title><rect x="94.1" y="293" width="0.8" height="15.0" fill="rgb(218,160,20)" rx="2" ry="2" />
<text  x="97.15" y="303.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="188.2" y="581" width="0.4" height="15.0" fill="rgb(236,97,9)" rx="2" ry="2" />
<text  x="191.20" y="591.5" ></text>
</g>
<g >
<title>table::set_hit_rate (7 samples, 0.23%)</title><rect x="723.9" y="581" width="2.7" height="15.0" fill="rgb(219,66,27)" rx="2" ry="2" />
<text  x="726.94" y="591.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.03%)</title><rect x="1155.4" y="565" width="0.3" height="15.0" fill="rgb(214,200,28)" rx="2" ry="2" />
<text  x="1158.35" y="575.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="102.9" y="277" width="0.4" height="15.0" fill="rgb(235,181,36)" rx="2" ry="2" />
<text  x="105.91" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%)</title><rect x="55.3" y="453" width="0.4" height="15.0" fill="rgb(241,182,7)" rx="2" ry="2" />
<text  x="58.31" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%)</title><rect x="69.0" y="421" width="0.4" height="15.0" fill="rgb(249,130,28)" rx="2" ry="2" />
<text  x="72.02" y="431.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.03%)</title><rect x="987.8" y="405" width="0.4" height="15.0" fill="rgb(248,226,46)" rx="2" ry="2" />
<text  x="990.81" y="415.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.03%)</title><rect x="40.1" y="261" width="0.4" height="15.0" fill="rgb(209,201,42)" rx="2" ry="2" />
<text  x="43.08" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator bool (1 samples, 0.03%)</title><rect x="123.1" y="501" width="0.4" height="15.0" fill="rgb(226,123,42)" rx="2" ry="2" />
<text  x="126.09" y="511.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (1 samples, 0.03%)</title><rect x="174.5" y="517" width="0.4" height="15.0" fill="rgb(210,92,33)" rx="2" ry="2" />
<text  x="177.49" y="527.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (1 samples, 0.03%)</title><rect x="538.5" y="501" width="0.4" height="15.0" fill="rgb(222,213,49)" rx="2" ry="2" />
<text  x="541.51" y="511.5" ></text>
</g>
<g >
<title>libat_store_16_i1 (1 samples, 0.03%)</title><rect x="726.6" y="597" width="0.4" height="15.0" fill="rgb(206,198,32)" rx="2" ry="2" />
<text  x="729.61" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (9 samples, 0.29%)</title><rect x="994.7" y="373" width="3.4" height="15.0" fill="rgb(220,167,53)" rx="2" ry="2" />
<text  x="997.67" y="383.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="106.7" y="277" width="0.4" height="15.0" fill="rgb(221,183,42)" rx="2" ry="2" />
<text  x="109.72" y="287.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.74%)</title><rect x="989.3" y="405" width="8.8" height="15.0" fill="rgb(206,13,26)" rx="2" ry="2" />
<text  x="992.34" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="114.3" y="213" width="0.4" height="15.0" fill="rgb(210,121,29)" rx="2" ry="2" />
<text  x="117.33" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (7 samples, 0.23%)</title><rect x="850.4" y="501" width="2.6" height="15.0" fill="rgb(211,91,39)" rx="2" ry="2" />
<text  x="853.35" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.7" y="101" width="0.4" height="15.0" fill="rgb(247,23,17)" rx="2" ry="2" />
<text  x="82.68" y="111.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.32%)</title><rect x="159.3" y="581" width="3.8" height="15.0" fill="rgb(224,112,4)" rx="2" ry="2" />
<text  x="162.26" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="72.8" y="373" width="0.4" height="15.0" fill="rgb(239,215,24)" rx="2" ry="2" />
<text  x="75.83" y="383.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (2 samples, 0.06%)</title><rect x="478.0" y="517" width="0.7" height="15.0" fill="rgb(236,34,38)" rx="2" ry="2" />
<text  x="480.96" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="93.8" y="357" width="0.3" height="15.0" fill="rgb(243,45,28)" rx="2" ry="2" />
<text  x="96.77" y="367.5" ></text>
</g>
<g >
<title>mutation::mutation (1 samples, 0.03%)</title><rect x="173.7" y="517" width="0.4" height="15.0" fill="rgb(242,36,48)" rx="2" ry="2" />
<text  x="176.73" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (4 samples, 0.13%)</title><rect x="21.0" y="437" width="1.6" height="15.0" fill="rgb(211,167,52)" rx="2" ry="2" />
<text  x="24.04" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="1189.2" y="725" width="0.4" height="15.0" fill="rgb(217,62,33)" rx="2" ry="2" />
<text  x="1192.24" y="735.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%)</title><rect x="674.1" y="597" width="0.7" height="15.0" fill="rgb(246,69,43)" rx="2" ry="2" />
<text  x="677.06" y="607.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%)</title><rect x="810.8" y="485" width="1.1" height="15.0" fill="rgb(216,63,53)" rx="2" ry="2" />
<text  x="813.76" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="99.9" y="213" width="0.3" height="15.0" fill="rgb(212,17,12)" rx="2" ry="2" />
<text  x="102.86" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (7 samples, 0.23%)</title><rect x="105.6" y="437" width="2.6" height="15.0" fill="rgb(240,45,24)" rx="2" ry="2" />
<text  x="108.57" y="447.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,670 samples, 86.16%)</title><rect x="139.5" y="709" width="1016.6" height="15.0" fill="rgb(248,215,48)" rx="2" ry="2" />
<text  x="142.46" y="719.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%)</title><rect x="53.8" y="309" width="0.7" height="15.0" fill="rgb(225,32,9)" rx="2" ry="2" />
<text  x="56.79" y="319.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (3 samples, 0.10%)</title><rect x="25.6" y="501" width="1.2" height="15.0" fill="rgb(212,175,23)" rx="2" ry="2" />
<text  x="28.61" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="108.6" y="277" width="0.4" height="15.0" fill="rgb(209,226,5)" rx="2" ry="2" />
<text  x="111.62" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.10%)</title><rect x="55.7" y="373" width="1.1" height="15.0" fill="rgb(232,40,39)" rx="2" ry="2" />
<text  x="58.69" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (34 samples, 1.10%)</title><rect x="1104.7" y="485" width="13.0" height="15.0" fill="rgb(250,118,1)" rx="2" ry="2" />
<text  x="1107.71" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%)</title><rect x="71.3" y="437" width="0.4" height="15.0" fill="rgb(223,59,51)" rx="2" ry="2" />
<text  x="74.30" y="447.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_tokenStartLine (1 samples, 0.03%)</title><rect x="41.6" y="389" width="0.4" height="15.0" fill="rgb(223,172,29)" rx="2" ry="2" />
<text  x="44.60" y="399.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%)</title><rect x="978.7" y="437" width="1.5" height="15.0" fill="rgb(238,34,43)" rx="2" ry="2" />
<text  x="981.67" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (12 samples, 0.39%)</title><rect x="644.0" y="613" width="4.5" height="15.0" fill="rgb(232,62,46)" rx="2" ry="2" />
<text  x="646.98" y="623.5" ></text>
</g>
<g >
<title>abstract_type::get_string (1 samples, 0.03%)</title><rect x="176.0" y="437" width="0.4" height="15.0" fill="rgb(243,152,50)" rx="2" ry="2" />
<text  x="179.01" y="447.5" ></text>
</g>
<g >
<title>table::table (1 samples, 0.03%)</title><rect x="176.4" y="581" width="0.4" height="15.0" fill="rgb(235,41,31)" rx="2" ry="2" />
<text  x="179.40" y="591.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.03%)</title><rect x="175.6" y="485" width="0.4" height="15.0" fill="rgb(213,217,35)" rx="2" ry="2" />
<text  x="178.63" y="495.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%)</title><rect x="127.3" y="597" width="0.4" height="15.0" fill="rgb(254,16,43)" rx="2" ry="2" />
<text  x="130.28" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="107.5" y="373" width="0.4" height="15.0" fill="rgb(230,116,10)" rx="2" ry="2" />
<text  x="110.48" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.13%)</title><rect x="891.1" y="421" width="1.5" height="15.0" fill="rgb(249,3,0)" rx="2" ry="2" />
<text  x="894.10" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="64.1" y="309" width="0.3" height="15.0" fill="rgb(205,66,5)" rx="2" ry="2" />
<text  x="67.07" y="319.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%)</title><rect x="670.6" y="597" width="2.3" height="15.0" fill="rgb(226,173,47)" rx="2" ry="2" />
<text  x="673.63" y="607.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (26 samples, 0.84%)</title><rect x="371.7" y="453" width="9.9" height="15.0" fill="rgb(246,123,10)" rx="2" ry="2" />
<text  x="374.73" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%)</title><rect x="39.7" y="309" width="0.4" height="15.0" fill="rgb(210,204,27)" rx="2" ry="2" />
<text  x="42.70" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (8 samples, 0.26%)</title><rect x="508.8" y="485" width="3.1" height="15.0" fill="rgb(244,159,2)" rx="2" ry="2" />
<text  x="511.81" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (13 samples, 0.42%)</title><rect x="31.3" y="421" width="5.0" height="15.0" fill="rgb(227,81,15)" rx="2" ry="2" />
<text  x="34.32" y="431.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (1 samples, 0.03%)</title><rect x="174.1" y="517" width="0.4" height="15.0" fill="rgb(239,94,50)" rx="2" ry="2" />
<text  x="177.11" y="527.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 1.42%)</title><rect x="1171.0" y="741" width="16.7" height="15.0" fill="rgb(233,35,3)" rx="2" ry="2" />
<text  x="1173.96" y="751.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (11 samples, 0.35%)</title><rect x="78.2" y="421" width="4.1" height="15.0" fill="rgb(221,9,45)" rx="2" ry="2" />
<text  x="81.16" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (4 samples, 0.13%)</title><rect x="111.3" y="389" width="1.5" height="15.0" fill="rgb(211,227,18)" rx="2" ry="2" />
<text  x="114.28" y="399.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.03%)</title><rect x="14.9" y="549" width="0.4" height="15.0" fill="rgb(213,215,15)" rx="2" ry="2" />
<text  x="17.95" y="559.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%)</title><rect x="137.9" y="533" width="0.4" height="15.0" fill="rgb(245,42,40)" rx="2" ry="2" />
<text  x="140.94" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.10%)</title><rect x="652.0" y="597" width="1.1" height="15.0" fill="rgb(247,78,18)" rx="2" ry="2" />
<text  x="654.97" y="607.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.03%)</title><rect x="12.3" y="581" width="0.4" height="15.0" fill="rgb(243,117,4)" rx="2" ry="2" />
<text  x="15.28" y="591.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::raw::use_statement*, std::default_delete&lt;cql3::statements::raw::use_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%)</title><rect x="124.2" y="453" width="0.4" height="15.0" fill="rgb(249,61,47)" rx="2" ry="2" />
<text  x="127.23" y="463.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="54.5" y="341" width="0.4" height="15.0" fill="rgb(254,71,49)" rx="2" ry="2" />
<text  x="57.55" y="351.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (8 samples, 0.26%)</title><rect x="597.9" y="501" width="3.1" height="15.0" fill="rgb(218,108,21)" rx="2" ry="2" />
<text  x="600.91" y="511.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%)</title><rect x="313.5" y="405" width="0.4" height="15.0" fill="rgb(211,68,1)" rx="2" ry="2" />
<text  x="316.47" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%)</title><rect x="615.0" y="485" width="0.8" height="15.0" fill="rgb(230,93,9)" rx="2" ry="2" />
<text  x="618.04" y="495.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.19%)</title><rect x="64.1" y="437" width="2.3" height="15.0" fill="rgb(223,94,11)" rx="2" ry="2" />
<text  x="67.07" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::use_statement, std::default_delete&lt;cql3::statements::raw::use_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::use_statement&gt;, void&gt; (1 samples, 0.03%)</title><rect x="124.2" y="501" width="0.4" height="15.0" fill="rgb(206,160,8)" rx="2" ry="2" />
<text  x="127.23" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (4 samples, 0.13%)</title><rect x="919.7" y="517" width="1.5" height="15.0" fill="rgb(236,180,26)" rx="2" ry="2" />
<text  x="922.65" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="58.0" y="341" width="0.4" height="15.0" fill="rgb(218,228,50)" rx="2" ry="2" />
<text  x="60.98" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (6 samples, 0.19%)</title><rect x="795.1" y="453" width="2.3" height="15.0" fill="rgb(245,35,5)" rx="2" ry="2" />
<text  x="798.14" y="463.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%)</title><rect x="64.1" y="405" width="0.7" height="15.0" fill="rgb(218,168,30)" rx="2" ry="2" />
<text  x="67.07" y="415.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="60.6" y="277" width="0.4" height="15.0" fill="rgb(215,126,32)" rx="2" ry="2" />
<text  x="63.64" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="66.0" y="389" width="0.4" height="15.0" fill="rgb(224,112,13)" rx="2" ry="2" />
<text  x="68.97" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="58.0" y="389" width="0.4" height="15.0" fill="rgb(207,128,29)" rx="2" ry="2" />
<text  x="60.98" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="72.4" y="213" width="0.4" height="15.0" fill="rgb(244,86,0)" rx="2" ry="2" />
<text  x="75.45" y="223.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::revoke_role_statement*, std::default_delete&lt;cql3::statements::revoke_role_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%)</title><rect x="124.6" y="453" width="0.4" height="15.0" fill="rgb(211,171,32)" rx="2" ry="2" />
<text  x="127.61" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (5 samples, 0.16%)</title><rect x="666.8" y="565" width="1.9" height="15.0" fill="rgb(215,109,49)" rx="2" ry="2" />
<text  x="669.82" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="77.0" y="405" width="0.4" height="15.0" fill="rgb(242,64,36)" rx="2" ry="2" />
<text  x="80.02" y="415.5" ></text>
</g>
<g >
<title>row::compact_and_expire (26 samples, 0.84%)</title><rect x="481.8" y="517" width="9.9" height="15.0" fill="rgb(222,86,5)" rx="2" ry="2" />
<text  x="484.77" y="527.5" ></text>
</g>
<g >
<title>database::has_keyspace (6 samples, 0.19%)</title><rect x="818.8" y="501" width="2.2" height="15.0" fill="rgb(244,11,8)" rx="2" ry="2" />
<text  x="821.75" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="625.3" y="565" width="0.4" height="15.0" fill="rgb(251,147,15)" rx="2" ry="2" />
<text  x="628.32" y="575.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (155 samples, 5.00%)</title><rect x="308.5" y="437" width="59.0" height="15.0" fill="rgb(235,38,21)" rx="2" ry="2" />
<text  x="311.52" y="447.5" >partit..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.19%)</title><rect x="55.7" y="485" width="2.3" height="15.0" fill="rgb(242,210,19)" rx="2" ry="2" />
<text  x="58.69" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="1142.4" y="597" width="0.4" height="15.0" fill="rgb(251,186,44)" rx="2" ry="2" />
<text  x="1145.40" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (4 samples, 0.13%)</title><rect x="95.3" y="309" width="1.5" height="15.0" fill="rgb(228,12,5)" rx="2" ry="2" />
<text  x="98.29" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_service_level_statement, std::default_delete&lt;cql3::statements::drop_service_level_statement&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="122.3" y="485" width="0.4" height="15.0" fill="rgb(250,160,45)" rx="2" ry="2" />
<text  x="125.33" y="495.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="160.0" y="565" width="0.8" height="15.0" fill="rgb(244,109,29)" rx="2" ry="2" />
<text  x="163.02" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="163.1" y="581" width="0.3" height="15.0" fill="rgb(211,35,4)" rx="2" ry="2" />
<text  x="166.07" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (3 samples, 0.10%)</title><rect x="75.5" y="373" width="1.1" height="15.0" fill="rgb(253,156,36)" rx="2" ry="2" />
<text  x="78.49" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.19%)</title><rect x="64.1" y="453" width="2.3" height="15.0" fill="rgb(228,222,12)" rx="2" ry="2" />
<text  x="67.07" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (1 samples, 0.03%)</title><rect x="58.0" y="469" width="0.4" height="15.0" fill="rgb(232,182,34)" rx="2" ry="2" />
<text  x="60.98" y="479.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (240 samples, 7.74%)</title><rect x="745.6" y="581" width="91.4" height="15.0" fill="rgb(222,163,38)" rx="2" ry="2" />
<text  x="748.64" y="591.5" >single_nod..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.10%)</title><rect x="70.2" y="309" width="1.1" height="15.0" fill="rgb(209,129,43)" rx="2" ry="2" />
<text  x="73.16" y="319.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%)</title><rect x="103.3" y="309" width="0.7" height="15.0" fill="rgb(208,136,49)" rx="2" ry="2" />
<text  x="106.29" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (5 samples, 0.16%)</title><rect x="11.1" y="661" width="1.9" height="15.0" fill="rgb(249,40,53)" rx="2" ry="2" />
<text  x="14.14" y="671.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.03%)</title><rect x="576.6" y="485" width="0.4" height="15.0" fill="rgb(228,97,17)" rx="2" ry="2" />
<text  x="579.58" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;(anonymous namespace)::mutation_query_result_builder  (1 samples, 0.03%)</title><rect x="174.5" y="469" width="0.4" height="15.0" fill="rgb(233,204,24)" rx="2" ry="2" />
<text  x="177.49" y="479.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.23%)</title><rect x="1016.8" y="357" width="2.6" height="15.0" fill="rgb(239,67,32)" rx="2" ry="2" />
<text  x="1019.75" y="367.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (6 samples, 0.19%)</title><rect x="18.4" y="501" width="2.3" height="15.0" fill="rgb(226,124,52)" rx="2" ry="2" />
<text  x="21.38" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.7" y="37" width="0.4" height="15.0" fill="rgb(242,209,28)" rx="2" ry="2" />
<text  x="82.68" y="47.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="640.9" y="581" width="0.8" height="15.0" fill="rgb(250,149,5)" rx="2" ry="2" />
<text  x="643.93" y="591.5" ></text>
</g>
<g >
<title>table::add_sstable (1 samples, 0.03%)</title><rect x="728.1" y="533" width="0.4" height="15.0" fill="rgb(206,107,5)" rx="2" ry="2" />
<text  x="731.13" y="543.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (4 samples, 0.13%)</title><rect x="11.5" y="629" width="1.5" height="15.0" fill="rgb(219,73,13)" rx="2" ry="2" />
<text  x="14.52" y="639.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%)</title><rect x="802.8" y="469" width="2.2" height="15.0" fill="rgb(247,169,15)" rx="2" ry="2" />
<text  x="805.76" y="479.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="110.1" y="389" width="0.4" height="15.0" fill="rgb(209,36,40)" rx="2" ry="2" />
<text  x="113.14" y="399.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%)</title><rect x="136.4" y="645" width="0.4" height="15.0" fill="rgb(251,18,9)" rx="2" ry="2" />
<text  x="139.41" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="60.6" y="309" width="0.4" height="15.0" fill="rgb(232,215,39)" rx="2" ry="2" />
<text  x="63.64" y="319.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="72.4" y="229" width="0.4" height="15.0" fill="rgb(205,89,41)" rx="2" ry="2" />
<text  x="75.45" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="112.8" y="357" width="0.4" height="15.0" fill="rgb(218,198,4)" rx="2" ry="2" />
<text  x="115.81" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.16%)</title><rect x="89.2" y="261" width="1.9" height="15.0" fill="rgb(244,157,37)" rx="2" ry="2" />
<text  x="92.20" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%)</title><rect x="714.0" y="597" width="0.4" height="15.0" fill="rgb(222,149,54)" rx="2" ry="2" />
<text  x="717.04" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%)</title><rect x="61.4" y="277" width="0.8" height="15.0" fill="rgb(246,130,4)" rx="2" ry="2" />
<text  x="64.40" y="287.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%)</title><rect x="99.1" y="341" width="0.8" height="15.0" fill="rgb(234,64,37)" rx="2" ry="2" />
<text  x="102.10" y="351.5" ></text>
</g>
<g >
<title>to_hex (1 samples, 0.03%)</title><rect x="127.3" y="613" width="0.4" height="15.0" fill="rgb(209,2,40)" rx="2" ry="2" />
<text  x="130.28" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="744.9" y="581" width="0.7" height="15.0" fill="rgb(241,147,38)" rx="2" ry="2" />
<text  x="747.88" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%)</title><rect x="66.7" y="373" width="1.6" height="15.0" fill="rgb(230,36,15)" rx="2" ry="2" />
<text  x="69.73" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 1.10%)</title><rect x="1104.7" y="581" width="13.0" height="15.0" fill="rgb(222,134,17)" rx="2" ry="2" />
<text  x="1107.71" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.06%)</title><rect x="48.5" y="373" width="0.7" height="15.0" fill="rgb(231,56,7)" rx="2" ry="2" />
<text  x="51.46" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.06%)</title><rect x="79.3" y="277" width="0.8" height="15.0" fill="rgb(234,226,14)" rx="2" ry="2" />
<text  x="82.30" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="66.0" y="357" width="0.4" height="15.0" fill="rgb(246,110,9)" rx="2" ry="2" />
<text  x="68.97" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (31 samples, 1.00%)</title><rect x="274.6" y="485" width="11.8" height="15.0" fill="rgb(207,0,33)" rx="2" ry="2" />
<text  x="277.63" y="495.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%)</title><rect x="137.9" y="629" width="0.4" height="15.0" fill="rgb(231,18,43)" rx="2" ry="2" />
<text  x="140.94" y="639.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%)</title><rect x="733.1" y="597" width="2.3" height="15.0" fill="rgb(238,12,44)" rx="2" ry="2" />
<text  x="736.08" y="607.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%)</title><rect x="792.5" y="453" width="0.4" height="15.0" fill="rgb(253,171,54)" rx="2" ry="2" />
<text  x="795.48" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="82.7" y="325" width="0.4" height="15.0" fill="rgb(209,188,15)" rx="2" ry="2" />
<text  x="85.73" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::selectStatement (1 samples, 0.03%)</title><rect x="127.7" y="405" width="0.3" height="15.0" fill="rgb(236,118,24)" rx="2" ry="2" />
<text  x="130.66" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (149 samples, 4.81%)</title><rect x="975.2" y="453" width="56.8" height="15.0" fill="rgb(210,53,33)" rx="2" ry="2" />
<text  x="978.25" y="463.5" >servic..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="83.9" y="341" width="0.3" height="15.0" fill="rgb(229,102,25)" rx="2" ry="2" />
<text  x="86.87" y="351.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.29%)</title><rect x="155.5" y="581" width="3.4" height="15.0" fill="rgb(250,51,34)" rx="2" ry="2" />
<text  x="158.45" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="885.4" y="437" width="0.4" height="15.0" fill="rgb(223,118,33)" rx="2" ry="2" />
<text  x="888.39" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="96.8" y="389" width="0.4" height="15.0" fill="rgb(241,31,14)" rx="2" ry="2" />
<text  x="99.82" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (2 samples, 0.06%)</title><rect x="86.2" y="373" width="0.7" height="15.0" fill="rgb(225,17,9)" rx="2" ry="2" />
<text  x="89.15" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="125.8" y="517" width="0.3" height="15.0" fill="rgb(218,148,31)" rx="2" ry="2" />
<text  x="128.75" y="527.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (8 samples, 0.26%)</title><rect x="367.5" y="437" width="3.1" height="15.0" fill="rgb(248,80,20)" rx="2" ry="2" />
<text  x="370.54" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="109.0" y="245" width="0.4" height="15.0" fill="rgb(245,162,45)" rx="2" ry="2" />
<text  x="112.00" y="255.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_super (1 samples, 0.03%)</title><rect x="29.4" y="469" width="0.4" height="15.0" fill="rgb(219,150,6)" rx="2" ry="2" />
<text  x="32.42" y="479.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (237 samples, 7.65%)</title><rect x="403.0" y="533" width="90.2" height="15.0" fill="rgb(208,133,26)" rx="2" ry="2" />
<text  x="405.95" y="543.5" >seastar::d..</text>
</g>
<g >
<title>db::commitlog::add_entry (1 samples, 0.03%)</title><rect x="1103.2" y="469" width="0.4" height="15.0" fill="rgb(229,169,19)" rx="2" ry="2" />
<text  x="1106.18" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="128.8" y="661" width="0.4" height="15.0" fill="rgb(209,61,18)" rx="2" ry="2" />
<text  x="131.80" y="671.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator= (1 samples, 0.03%)</title><rect x="100.6" y="389" width="0.4" height="15.0" fill="rgb(218,176,38)" rx="2" ry="2" />
<text  x="103.62" y="399.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (2 samples, 0.06%)</title><rect x="174.5" y="597" width="0.8" height="15.0" fill="rgb(220,42,44)" rx="2" ry="2" />
<text  x="177.49" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="114.3" y="293" width="0.4" height="15.0" fill="rgb(235,200,30)" rx="2" ry="2" />
<text  x="117.33" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%)</title><rect x="110.1" y="213" width="0.4" height="15.0" fill="rgb(213,84,33)" rx="2" ry="2" />
<text  x="113.14" y="223.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.10%)</title><rect x="70.2" y="421" width="1.1" height="15.0" fill="rgb(214,108,44)" rx="2" ry="2" />
<text  x="73.16" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (2 samples, 0.06%)</title><rect x="53.8" y="357" width="0.7" height="15.0" fill="rgb(230,111,48)" rx="2" ry="2" />
<text  x="56.79" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.06%)</title><rect x="521.0" y="549" width="0.8" height="15.0" fill="rgb(233,108,0)" rx="2" ry="2" />
<text  x="523.99" y="559.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="172.6" y="597" width="0.4" height="15.0" fill="rgb(208,136,50)" rx="2" ry="2" />
<text  x="175.59" y="607.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="728.1" y="549" width="0.4" height="15.0" fill="rgb(215,59,9)" rx="2" ry="2" />
<text  x="731.13" y="559.5" ></text>
</g>
<g >
<title>dht::tri_compare (7 samples, 0.23%)</title><rect x="1070.8" y="389" width="2.7" height="15.0" fill="rgb(245,226,41)" rx="2" ry="2" />
<text  x="1073.82" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%)</title><rect x="64.4" y="389" width="0.4" height="15.0" fill="rgb(242,192,7)" rx="2" ry="2" />
<text  x="67.45" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.13%)</title><rect x="772.7" y="517" width="1.5" height="15.0" fill="rgb(247,195,2)" rx="2" ry="2" />
<text  x="775.68" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (105 samples, 3.39%)</title><rect x="62.5" y="469" width="40.0" height="15.0" fill="rgb(208,178,10)" rx="2" ry="2" />
<text  x="65.55" y="479.5" >cql..</text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.03%)</title><rect x="244.9" y="565" width="0.4" height="15.0" fill="rgb(215,184,0)" rx="2" ry="2" />
<text  x="247.93" y="575.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="29.0" y="437" width="0.4" height="15.0" fill="rgb(205,227,49)" rx="2" ry="2" />
<text  x="32.04" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (4 samples, 0.13%)</title><rect x="91.5" y="245" width="1.5" height="15.0" fill="rgb(220,124,52)" rx="2" ry="2" />
<text  x="94.48" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.7" y="165" width="0.4" height="15.0" fill="rgb(242,61,34)" rx="2" ry="2" />
<text  x="82.68" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (11 samples, 0.35%)</title><rect x="31.3" y="389" width="4.2" height="15.0" fill="rgb(222,3,36)" rx="2" ry="2" />
<text  x="34.32" y="399.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%)</title><rect x="400.3" y="533" width="1.1" height="15.0" fill="rgb(234,82,54)" rx="2" ry="2" />
<text  x="403.29" y="543.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (4 samples, 0.13%)</title><rect x="821.0" y="501" width="1.6" height="15.0" fill="rgb(205,26,6)" rx="2" ry="2" />
<text  x="824.04" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%)</title><rect x="112.8" y="309" width="0.4" height="15.0" fill="rgb(226,82,26)" rx="2" ry="2" />
<text  x="115.81" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_WHERE (1 samples, 0.03%)</title><rect x="50.7" y="405" width="0.4" height="15.0" fill="rgb(224,77,27)" rx="2" ry="2" />
<text  x="53.74" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::~vector (1 samples, 0.03%)</title><rect x="27.5" y="533" width="0.4" height="15.0" fill="rgb(211,160,7)" rx="2" ry="2" />
<text  x="30.52" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="655.0" y="549" width="0.4" height="15.0" fill="rgb(208,50,9)" rx="2" ry="2" />
<text  x="658.02" y="559.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="110.5" y="421" width="0.4" height="15.0" fill="rgb(213,17,6)" rx="2" ry="2" />
<text  x="113.52" y="431.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%)</title><rect x="127.7" y="485" width="0.3" height="15.0" fill="rgb(242,109,8)" rx="2" ry="2" />
<text  x="130.66" y="495.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.06%)</title><rect x="1032.0" y="453" width="0.7" height="15.0" fill="rgb(222,37,15)" rx="2" ry="2" />
<text  x="1034.98" y="463.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.03%)</title><rect x="1189.2" y="709" width="0.4" height="15.0" fill="rgb(247,65,46)" rx="2" ry="2" />
<text  x="1192.24" y="719.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.10%)</title><rect x="64.8" y="421" width="1.2" height="15.0" fill="rgb(207,4,47)" rx="2" ry="2" />
<text  x="67.83" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%)</title><rect x="552.2" y="501" width="0.8" height="15.0" fill="rgb(219,146,4)" rx="2" ry="2" />
<text  x="555.21" y="511.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (1 samples, 0.03%)</title><rect x="633.7" y="613" width="0.4" height="15.0" fill="rgb(220,33,54)" rx="2" ry="2" />
<text  x="636.70" y="623.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.13%)</title><rect x="692.3" y="597" width="1.6" height="15.0" fill="rgb(230,37,11)" rx="2" ry="2" />
<text  x="695.34" y="607.5" ></text>
</g>
<g >
<title>row_cache::update (1 samples, 0.03%)</title><rect x="728.1" y="581" width="0.4" height="15.0" fill="rgb(228,86,46)" rx="2" ry="2" />
<text  x="731.13" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="680.5" y="565" width="0.4" height="15.0" fill="rgb(221,96,33)" rx="2" ry="2" />
<text  x="683.53" y="575.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (4 samples, 0.13%)</title><rect x="21.0" y="485" width="1.6" height="15.0" fill="rgb(234,131,45)" rx="2" ry="2" />
<text  x="24.04" y="495.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="61.8" y="245" width="0.4" height="15.0" fill="rgb(232,23,51)" rx="2" ry="2" />
<text  x="64.78" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="110.1" y="261" width="0.4" height="15.0" fill="rgb(221,185,45)" rx="2" ry="2" />
<text  x="113.14" y="271.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 10.97%)</title><rect x="10.0" y="741" width="129.5" height="15.0" fill="rgb(224,175,18)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="107.9" y="357" width="0.3" height="15.0" fill="rgb(241,168,44)" rx="2" ry="2" />
<text  x="110.86" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (290 samples, 9.36%)</title><rect x="730.0" y="613" width="110.5" height="15.0" fill="rgb(232,193,19)" rx="2" ry="2" />
<text  x="733.03" y="623.5" >seastar::inte..</text>
</g>
<g >
<title>from_hex (1 samples, 0.03%)</title><rect x="16.5" y="453" width="0.4" height="15.0" fill="rgb(215,10,45)" rx="2" ry="2" />
<text  x="19.47" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%)</title><rect x="665.7" y="581" width="0.4" height="15.0" fill="rgb(239,30,37)" rx="2" ry="2" />
<text  x="668.68" y="591.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_float&lt;double&gt; (1 samples, 0.03%)</title><rect x="138.7" y="677" width="0.4" height="15.0" fill="rgb(240,123,47)" rx="2" ry="2" />
<text  x="141.70" y="687.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%)</title><rect x="66.7" y="293" width="0.4" height="15.0" fill="rgb(241,172,20)" rx="2" ry="2" />
<text  x="69.73" y="303.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (295 samples, 9.52%)</title><rect x="14.9" y="597" width="112.4" height="15.0" fill="rgb(252,102,49)" rx="2" ry="2" />
<text  x="17.95" y="607.5" >cql3::query_p..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%)</title><rect x="153.2" y="597" width="0.7" height="15.0" fill="rgb(205,30,9)" rx="2" ry="2" />
<text  x="156.17" y="607.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (1 samples, 0.03%)</title><rect x="626.5" y="565" width="0.3" height="15.0" fill="rgb(245,22,53)" rx="2" ry="2" />
<text  x="629.46" y="575.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (3 samples, 0.10%)</title><rect x="55.7" y="437" width="1.1" height="15.0" fill="rgb(219,147,47)" rx="2" ry="2" />
<text  x="58.69" y="447.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.03%)</title><rect x="34.4" y="293" width="0.3" height="15.0" fill="rgb(210,215,44)" rx="2" ry="2" />
<text  x="37.37" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.10%)</title><rect x="674.8" y="597" width="1.2" height="15.0" fill="rgb(236,64,6)" rx="2" ry="2" />
<text  x="677.82" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="73.2" y="261" width="0.4" height="15.0" fill="rgb(213,39,15)" rx="2" ry="2" />
<text  x="76.21" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%)</title><rect x="882.3" y="405" width="0.4" height="15.0" fill="rgb(221,53,9)" rx="2" ry="2" />
<text  x="885.34" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%)</title><rect x="58.0" y="405" width="0.4" height="15.0" fill="rgb(247,19,3)" rx="2" ry="2" />
<text  x="60.98" y="415.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (23 samples, 0.74%)</title><rect x="195.1" y="581" width="8.7" height="15.0" fill="rgb(247,22,9)" rx="2" ry="2" />
<text  x="198.05" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%)</title><rect x="832.1" y="533" width="0.4" height="15.0" fill="rgb(208,89,38)" rx="2" ry="2" />
<text  x="835.08" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="308.1" y="421" width="0.4" height="15.0" fill="rgb(230,162,3)" rx="2" ry="2" />
<text  x="311.14" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="60.3" y="309" width="0.3" height="15.0" fill="rgb(242,139,37)" rx="2" ry="2" />
<text  x="63.26" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (3 samples, 0.10%)</title><rect x="45.4" y="389" width="1.2" height="15.0" fill="rgb(244,5,41)" rx="2" ry="2" />
<text  x="48.41" y="399.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (6 samples, 0.19%)</title><rect x="1146.6" y="597" width="2.3" height="15.0" fill="rgb(205,47,47)" rx="2" ry="2" />
<text  x="1149.59" y="607.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (3 samples, 0.10%)</title><rect x="605.1" y="501" width="1.2" height="15.0" fill="rgb(205,185,24)" rx="2" ry="2" />
<text  x="608.14" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.06%)</title><rect x="97.2" y="405" width="0.8" height="15.0" fill="rgb(235,121,44)" rx="2" ry="2" />
<text  x="100.20" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="596.0" y="485" width="0.4" height="15.0" fill="rgb(221,64,0)" rx="2" ry="2" />
<text  x="599.00" y="495.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="690.8" y="597" width="0.8" height="15.0" fill="rgb(217,58,0)" rx="2" ry="2" />
<text  x="693.81" y="607.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1 samples, 0.03%)</title><rect x="1153.1" y="629" width="0.3" height="15.0" fill="rgb(248,5,42)" rx="2" ry="2" />
<text  x="1156.07" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="1139.0" y="581" width="0.4" height="15.0" fill="rgb(251,58,48)" rx="2" ry="2" />
<text  x="1141.98" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (8 samples, 0.26%)</title><rect x="82.3" y="389" width="3.1" height="15.0" fill="rgb(217,102,18)" rx="2" ry="2" />
<text  x="85.35" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::create_clustering_ranges (1 samples, 0.03%)</title><rect x="853.0" y="501" width="0.4" height="15.0" fill="rgb(253,185,46)" rx="2" ry="2" />
<text  x="856.02" y="511.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="183.2" y="597" width="0.4" height="15.0" fill="rgb(250,175,26)" rx="2" ry="2" />
<text  x="186.25" y="607.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (1 samples, 0.03%)</title><rect x="118.5" y="485" width="0.4" height="15.0" fill="rgb(238,172,31)" rx="2" ry="2" />
<text  x="121.52" y="495.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%)</title><rect x="980.6" y="437" width="0.4" height="15.0" fill="rgb(211,135,40)" rx="2" ry="2" />
<text  x="983.58" y="447.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%)</title><rect x="176.8" y="613" width="0.4" height="15.0" fill="rgb(240,118,29)" rx="2" ry="2" />
<text  x="179.78" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%)</title><rect x="73.6" y="373" width="0.4" height="15.0" fill="rgb(213,97,48)" rx="2" ry="2" />
<text  x="76.59" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.16%)</title><rect x="571.6" y="501" width="1.9" height="15.0" fill="rgb(239,103,50)" rx="2" ry="2" />
<text  x="574.63" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="804.3" y="453" width="0.7" height="15.0" fill="rgb(230,36,52)" rx="2" ry="2" />
<text  x="807.28" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="66.0" y="325" width="0.4" height="15.0" fill="rgb(243,71,53)" rx="2" ry="2" />
<text  x="68.97" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="23.3" y="469" width="0.4" height="15.0" fill="rgb(232,10,8)" rx="2" ry="2" />
<text  x="26.33" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="97.2" y="341" width="0.4" height="15.0" fill="rgb(236,206,2)" rx="2" ry="2" />
<text  x="100.20" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="94.9" y="373" width="0.4" height="15.0" fill="rgb(222,102,12)" rx="2" ry="2" />
<text  x="97.91" y="383.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (4 samples, 0.13%)</title><rect x="615.8" y="485" width="1.5" height="15.0" fill="rgb(217,10,19)" rx="2" ry="2" />
<text  x="618.80" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%)</title><rect x="82.3" y="357" width="0.4" height="15.0" fill="rgb(229,3,32)" rx="2" ry="2" />
<text  x="85.35" y="367.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (18 samples, 0.58%)</title><rect x="470.7" y="517" width="6.9" height="15.0" fill="rgb(208,183,6)" rx="2" ry="2" />
<text  x="473.73" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="112.4" y="293" width="0.4" height="15.0" fill="rgb(227,22,38)" rx="2" ry="2" />
<text  x="115.43" y="303.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%)</title><rect x="205.3" y="517" width="0.4" height="15.0" fill="rgb(205,23,22)" rx="2" ry="2" />
<text  x="208.33" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::_M_ptr (2 samples, 0.06%)</title><rect x="120.0" y="501" width="0.8" height="15.0" fill="rgb(246,152,51)" rx="2" ry="2" />
<text  x="123.04" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.48%)</title><rect x="967.6" y="437" width="5.7" height="15.0" fill="rgb(231,226,14)" rx="2" ry="2" />
<text  x="970.63" y="447.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::size (1 samples, 0.03%)</title><rect x="847.3" y="405" width="0.4" height="15.0" fill="rgb(254,149,17)" rx="2" ry="2" />
<text  x="850.31" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%)</title><rect x="525.6" y="533" width="0.7" height="15.0" fill="rgb(210,122,0)" rx="2" ry="2" />
<text  x="528.56" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (6 samples, 0.19%)</title><rect x="88.8" y="277" width="2.3" height="15.0" fill="rgb(212,86,16)" rx="2" ry="2" />
<text  x="91.82" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (4 samples, 0.13%)</title><rect x="95.3" y="229" width="1.5" height="15.0" fill="rgb(247,147,16)" rx="2" ry="2" />
<text  x="98.29" y="239.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (2 samples, 0.06%)</title><rect x="502.3" y="501" width="0.8" height="15.0" fill="rgb(220,84,39)" rx="2" ry="2" />
<text  x="505.33" y="511.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%)</title><rect x="565.2" y="501" width="0.3" height="15.0" fill="rgb(207,34,30)" rx="2" ry="2" />
<text  x="568.16" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%)</title><rect x="110.1" y="181" width="0.4" height="15.0" fill="rgb(234,142,54)" rx="2" ry="2" />
<text  x="113.14" y="191.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="101.4" y="405" width="0.4" height="15.0" fill="rgb(229,108,53)" rx="2" ry="2" />
<text  x="104.38" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="68.6" y="261" width="0.4" height="15.0" fill="rgb(245,62,6)" rx="2" ry="2" />
<text  x="71.64" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::do_for_each_state&lt;std::__detail::_Node_iterator&lt;sstables::component_type, true, true&gt;, sstables::sstable::update_info_for_opened_data (1 samples, 0.03%)</title><rect x="729.7" y="613" width="0.3" height="15.0" fill="rgb(227,37,1)" rx="2" ry="2" />
<text  x="732.65" y="623.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (13 samples, 0.42%)</title><rect x="229.7" y="565" width="5.0" height="15.0" fill="rgb(239,98,11)" rx="2" ry="2" />
<text  x="232.70" y="575.5" ></text>
</g>
<g >
<title>query::querier&lt; (3 samples, 0.10%)</title><rect x="189.0" y="581" width="1.1" height="15.0" fill="rgb(216,200,35)" rx="2" ry="2" />
<text  x="191.96" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (59 samples, 1.90%)</title><rect x="497.4" y="549" width="22.4" height="15.0" fill="rgb(253,75,4)" rx="2" ry="2" />
<text  x="500.38" y="559.5" >s..</text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%)</title><rect x="68.6" y="213" width="0.4" height="15.0" fill="rgb(240,45,27)" rx="2" ry="2" />
<text  x="71.64" y="223.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (13 samples, 0.42%)</title><rect x="190.1" y="581" width="5.0" height="15.0" fill="rgb(212,91,51)" rx="2" ry="2" />
<text  x="193.10" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.10%)</title><rect x="102.9" y="389" width="1.1" height="15.0" fill="rgb(225,67,29)" rx="2" ry="2" />
<text  x="105.91" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.03%)</title><rect x="34.0" y="261" width="0.4" height="15.0" fill="rgb(247,220,15)" rx="2" ry="2" />
<text  x="36.99" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (4 samples, 0.13%)</title><rect x="21.0" y="469" width="1.6" height="15.0" fill="rgb(251,113,2)" rx="2" ry="2" />
<text  x="24.04" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (4 samples, 0.13%)</title><rect x="79.3" y="293" width="1.5" height="15.0" fill="rgb(214,100,18)" rx="2" ry="2" />
<text  x="82.30" y="303.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (1 samples, 0.03%)</title><rect x="634.5" y="613" width="0.3" height="15.0" fill="rgb(225,31,6)" rx="2" ry="2" />
<text  x="637.46" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="73.2" y="277" width="0.4" height="15.0" fill="rgb(224,20,11)" rx="2" ry="2" />
<text  x="76.21" y="287.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (22 samples, 0.71%)</title><rect x="1096.0" y="533" width="8.3" height="15.0" fill="rgb(217,206,43)" rx="2" ry="2" />
<text  x="1098.95" y="543.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (6 samples, 0.19%)</title><rect x="134.9" y="709" width="2.3" height="15.0" fill="rgb(230,80,44)" rx="2" ry="2" />
<text  x="137.89" y="719.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%)</title><rect x="1024.4" y="341" width="0.3" height="15.0" fill="rgb(237,56,7)" rx="2" ry="2" />
<text  x="1027.37" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (9 samples, 0.29%)</title><rect x="87.7" y="357" width="3.4" height="15.0" fill="rgb(214,51,44)" rx="2" ry="2" />
<text  x="90.68" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%)</title><rect x="137.9" y="453" width="0.4" height="15.0" fill="rgb(230,219,11)" rx="2" ry="2" />
<text  x="140.94" y="463.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="85.4" y="373" width="0.4" height="15.0" fill="rgb(237,191,11)" rx="2" ry="2" />
<text  x="88.39" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="99.9" y="293" width="0.3" height="15.0" fill="rgb(251,99,53)" rx="2" ry="2" />
<text  x="102.86" y="303.5" ></text>
</g>
<g >
<title>table::update_cache (1 samples, 0.03%)</title><rect x="728.1" y="597" width="0.4" height="15.0" fill="rgb(245,17,40)" rx="2" ry="2" />
<text  x="731.13" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (5 samples, 0.16%)</title><rect x="91.5" y="277" width="1.9" height="15.0" fill="rgb(227,120,24)" rx="2" ry="2" />
<text  x="94.48" y="287.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="65.2" y="261" width="0.4" height="15.0" fill="rgb(221,107,43)" rx="2" ry="2" />
<text  x="68.21" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="127.3" y="581" width="0.4" height="15.0" fill="rgb(213,134,19)" rx="2" ry="2" />
<text  x="130.28" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%)</title><rect x="108.2" y="453" width="0.4" height="15.0" fill="rgb(254,122,36)" rx="2" ry="2" />
<text  x="111.24" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="1025.9" y="357" width="0.4" height="15.0" fill="rgb(206,163,15)" rx="2" ry="2" />
<text  x="1028.89" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%)</title><rect x="61.4" y="421" width="0.8" height="15.0" fill="rgb(226,182,1)" rx="2" ry="2" />
<text  x="64.40" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::new_bind_variables (1 samples, 0.03%)</title><rect x="127.7" y="325" width="0.3" height="15.0" fill="rgb(225,106,34)" rx="2" ry="2" />
<text  x="130.66" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.06%)</title><rect x="97.2" y="389" width="0.8" height="15.0" fill="rgb(233,139,39)" rx="2" ry="2" />
<text  x="100.20" y="399.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (1 samples, 0.03%)</title><rect x="101.8" y="421" width="0.3" height="15.0" fill="rgb(245,44,50)" rx="2" ry="2" />
<text  x="104.77" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;seastar::posix_file_impl::list_directory (1 samples, 0.03%)</title><rect x="840.5" y="613" width="0.3" height="15.0" fill="rgb(208,205,35)" rx="2" ry="2" />
<text  x="843.45" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator=&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.03%)</title><rect x="123.5" y="501" width="0.3" height="15.0" fill="rgb(236,98,36)" rx="2" ry="2" />
<text  x="126.47" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="68.6" y="341" width="0.4" height="15.0" fill="rgb(250,36,16)" rx="2" ry="2" />
<text  x="71.64" y="351.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%)</title><rect x="477.2" y="501" width="0.4" height="15.0" fill="rgb(214,140,16)" rx="2" ry="2" />
<text  x="480.20" y="511.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.03%)</title><rect x="49.6" y="357" width="0.4" height="15.0" fill="rgb(238,93,7)" rx="2" ry="2" />
<text  x="52.60" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (4 samples, 0.13%)</title><rect x="95.3" y="325" width="1.5" height="15.0" fill="rgb(207,96,22)" rx="2" ry="2" />
<text  x="98.29" y="335.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (2 samples, 0.06%)</title><rect x="334.0" y="389" width="0.8" height="15.0" fill="rgb(254,229,6)" rx="2" ry="2" />
<text  x="337.03" y="399.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::attributes::raw&gt; (1 samples, 0.03%)</title><rect x="118.1" y="485" width="0.4" height="15.0" fill="rgb(217,186,16)" rx="2" ry="2" />
<text  x="121.14" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%)</title><rect x="82.7" y="309" width="0.4" height="15.0" fill="rgb(221,94,51)" rx="2" ry="2" />
<text  x="85.73" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.10%)</title><rect x="435.3" y="501" width="1.2" height="15.0" fill="rgb(233,195,14)" rx="2" ry="2" />
<text  x="438.32" y="511.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%)</title><rect x="1098.6" y="469" width="0.4" height="15.0" fill="rgb(226,111,52)" rx="2" ry="2" />
<text  x="1101.62" y="479.5" ></text>
</g>
<g >
<title>validation::validate_column_family (26 samples, 0.84%)</title><rect x="812.7" y="517" width="9.9" height="15.0" fill="rgb(227,53,8)" rx="2" ry="2" />
<text  x="815.66" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%)</title><rect x="683.2" y="597" width="0.8" height="15.0" fill="rgb(241,46,36)" rx="2" ry="2" />
<text  x="686.20" y="607.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.06%)</title><rect x="1137.1" y="581" width="0.7" height="15.0" fill="rgb(224,150,14)" rx="2" ry="2" />
<text  x="1140.07" y="591.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (1 samples, 0.03%)</title><rect x="174.5" y="501" width="0.4" height="15.0" fill="rgb(218,48,4)" rx="2" ry="2" />
<text  x="177.49" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="884.6" y="437" width="0.4" height="15.0" fill="rgb(223,25,6)" rx="2" ry="2" />
<text  x="887.62" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="60.3" y="341" width="0.7" height="15.0" fill="rgb(209,177,10)" rx="2" ry="2" />
<text  x="63.26" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (1 samples, 0.03%)</title><rect x="710.6" y="597" width="0.4" height="15.0" fill="rgb(221,188,20)" rx="2" ry="2" />
<text  x="713.61" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%)</title><rect x="24.8" y="437" width="0.4" height="15.0" fill="rgb(213,147,18)" rx="2" ry="2" />
<text  x="27.85" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%)</title><rect x="106.3" y="389" width="0.8" height="15.0" fill="rgb(238,7,51)" rx="2" ry="2" />
<text  x="109.33" y="399.5" ></text>
</g>
<g >
<title>db::schema_tables::diff_table_or_view (2 samples, 0.06%)</title><rect x="173.7" y="581" width="0.8" height="15.0" fill="rgb(229,97,12)" rx="2" ry="2" />
<text  x="176.73" y="591.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (2 samples, 0.06%)</title><rect x="313.9" y="405" width="0.7" height="15.0" fill="rgb(211,83,51)" rx="2" ry="2" />
<text  x="316.85" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="113.2" y="341" width="0.4" height="15.0" fill="rgb(219,206,25)" rx="2" ry="2" />
<text  x="116.19" y="351.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (7 samples, 0.23%)</title><rect x="627.2" y="565" width="2.7" height="15.0" fill="rgb(246,115,27)" rx="2" ry="2" />
<text  x="630.22" y="575.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (4 samples, 0.13%)</title><rect x="21.0" y="453" width="1.6" height="15.0" fill="rgb(254,27,44)" rx="2" ry="2" />
<text  x="24.04" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%)</title><rect x="106.3" y="325" width="0.8" height="15.0" fill="rgb(238,218,20)" rx="2" ry="2" />
<text  x="109.33" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="846.2" y="389" width="0.3" height="15.0" fill="rgb(218,32,34)" rx="2" ry="2" />
<text  x="849.17" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="110.1" y="293" width="0.4" height="15.0" fill="rgb(252,152,2)" rx="2" ry="2" />
<text  x="113.14" y="303.5" ></text>
</g>
<g >
<title>unsigned_vint::serialize (1 samples, 0.03%)</title><rect x="11.9" y="549" width="0.4" height="15.0" fill="rgb(235,11,37)" rx="2" ry="2" />
<text  x="14.90" y="559.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="840.5" y="549" width="0.3" height="15.0" fill="rgb(235,173,15)" rx="2" ry="2" />
<text  x="843.45" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%)</title><rect x="99.1" y="197" width="0.8" height="15.0" fill="rgb(253,42,25)" rx="2" ry="2" />
<text  x="102.10" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (10 samples, 0.32%)</title><rect x="58.7" y="469" width="3.8" height="15.0" fill="rgb(246,93,1)" rx="2" ry="2" />
<text  x="61.74" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="127.7" y="293" width="0.3" height="15.0" fill="rgb(250,62,25)" rx="2" ry="2" />
<text  x="130.66" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (401 samples, 12.94%)</title><rect x="921.9" y="533" width="152.7" height="15.0" fill="rgb(242,105,14)" rx="2" ry="2" />
<text  x="924.94" y="543.5" >cql3::statements::s..</text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="595.6" y="501" width="0.8" height="15.0" fill="rgb(229,206,9)" rx="2" ry="2" />
<text  x="598.62" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="66.7" y="165" width="0.4" height="15.0" fill="rgb(243,136,30)" rx="2" ry="2" />
<text  x="69.73" y="175.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.10%)</title><rect x="102.9" y="421" width="1.1" height="15.0" fill="rgb(218,190,39)" rx="2" ry="2" />
<text  x="105.91" y="431.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (4 samples, 0.13%)</title><rect x="1102.8" y="501" width="1.5" height="15.0" fill="rgb(245,35,38)" rx="2" ry="2" />
<text  x="1105.80" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="99.9" y="261" width="0.3" height="15.0" fill="rgb(225,185,47)" rx="2" ry="2" />
<text  x="102.86" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="76.3" y="309" width="0.3" height="15.0" fill="rgb(211,25,24)" rx="2" ry="2" />
<text  x="79.25" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%)</title><rect x="99.1" y="245" width="0.8" height="15.0" fill="rgb(205,136,1)" rx="2" ry="2" />
<text  x="102.10" y="255.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%)</title><rect x="654.6" y="565" width="0.4" height="15.0" fill="rgb(245,64,43)" rx="2" ry="2" />
<text  x="657.64" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="129.2" y="693" width="0.4" height="15.0" fill="rgb(207,137,43)" rx="2" ry="2" />
<text  x="132.18" y="703.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="54.5" y="373" width="0.4" height="15.0" fill="rgb(220,35,5)" rx="2" ry="2" />
<text  x="57.55" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (16 samples, 0.52%)</title><rect x="704.5" y="597" width="6.1" height="15.0" fill="rgb(242,216,23)" rx="2" ry="2" />
<text  x="707.52" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="91.9" y="213" width="0.7" height="15.0" fill="rgb(221,92,43)" rx="2" ry="2" />
<text  x="94.87" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="109.0" y="309" width="0.4" height="15.0" fill="rgb(237,168,16)" rx="2" ry="2" />
<text  x="112.00" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23 samples, 0.74%)</title><rect x="1096.0" y="581" width="8.7" height="15.0" fill="rgb(229,25,26)" rx="2" ry="2" />
<text  x="1098.95" y="591.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (14 samples, 0.45%)</title><rect x="797.4" y="453" width="5.4" height="15.0" fill="rgb(249,93,45)" rx="2" ry="2" />
<text  x="800.43" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::destroy&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="86.5" y="357" width="0.4" height="15.0" fill="rgb(238,0,22)" rx="2" ry="2" />
<text  x="89.53" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="106.7" y="309" width="0.4" height="15.0" fill="rgb(239,132,16)" rx="2" ry="2" />
<text  x="109.72" y="319.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="175.6" y="453" width="0.4" height="15.0" fill="rgb(227,19,27)" rx="2" ry="2" />
<text  x="178.63" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="111.3" y="341" width="0.4" height="15.0" fill="rgb(210,190,14)" rx="2" ry="2" />
<text  x="114.28" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (5 samples, 0.16%)</title><rect x="91.5" y="293" width="1.9" height="15.0" fill="rgb(227,39,30)" rx="2" ry="2" />
<text  x="94.48" y="303.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.03%)</title><rect x="205.3" y="565" width="0.4" height="15.0" fill="rgb(219,198,1)" rx="2" ry="2" />
<text  x="208.33" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (4 samples, 0.13%)</title><rect x="95.3" y="261" width="1.5" height="15.0" fill="rgb(211,27,11)" rx="2" ry="2" />
<text  x="98.29" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="1024.7" y="341" width="0.4" height="15.0" fill="rgb(221,125,11)" rx="2" ry="2" />
<text  x="1027.75" y="351.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%)</title><rect x="137.9" y="485" width="0.4" height="15.0" fill="rgb(213,56,42)" rx="2" ry="2" />
<text  x="140.94" y="495.5" ></text>
</g>
<g >
<title>schema_mutations::operator== (1 samples, 0.03%)</title><rect x="173.7" y="549" width="0.4" height="15.0" fill="rgb(214,6,15)" rx="2" ry="2" />
<text  x="176.73" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="109.0" y="341" width="0.4" height="15.0" fill="rgb(236,127,46)" rx="2" ry="2" />
<text  x="112.00" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.06%)</title><rect x="840.8" y="613" width="0.8" height="15.0" fill="rgb(222,179,21)" rx="2" ry="2" />
<text  x="843.84" y="623.5" ></text>
</g>
<g >
<title>auth::resource::parent (1 samples, 0.03%)</title><rect x="781.8" y="501" width="0.4" height="15.0" fill="rgb(224,81,10)" rx="2" ry="2" />
<text  x="784.82" y="511.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (32 samples, 1.03%)</title><rect x="350.0" y="373" width="12.2" height="15.0" fill="rgb(215,46,40)" rx="2" ry="2" />
<text  x="353.03" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (3 samples, 0.10%)</title><rect x="56.8" y="453" width="1.2" height="15.0" fill="rgb(217,183,39)" rx="2" ry="2" />
<text  x="59.83" y="463.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (2 samples, 0.06%)</title><rect x="437.6" y="517" width="0.8" height="15.0" fill="rgb(246,130,33)" rx="2" ry="2" />
<text  x="440.60" y="527.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 1.10%)</title><rect x="1104.7" y="501" width="13.0" height="15.0" fill="rgb(244,92,16)" rx="2" ry="2" />
<text  x="1107.71" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="67.1" y="309" width="0.8" height="15.0" fill="rgb(221,164,54)" rx="2" ry="2" />
<text  x="70.12" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%)</title><rect x="95.7" y="165" width="0.7" height="15.0" fill="rgb(211,146,43)" rx="2" ry="2" />
<text  x="98.67" y="175.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (3 samples, 0.10%)</title><rect x="116.2" y="453" width="1.2" height="15.0" fill="rgb(234,113,39)" rx="2" ry="2" />
<text  x="119.23" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="370.6" y="437" width="0.4" height="15.0" fill="rgb(230,47,27)" rx="2" ry="2" />
<text  x="373.59" y="447.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureISt5tupleIJEEE14discard_resultEvEUlDpOT_E_ZNS7_14then_impl_nrvoISB_NS4_IvEEEET0_OT_EUlOS3_RSB_ONS_12future_stateIS6_EEE_S6_E15run_and_disposeEv (1 samples, 0.03%)</title><rect x="141.0" y="629" width="0.4" height="15.0" fill="rgb(240,109,0)" rx="2" ry="2" />
<text  x="143.98" y="639.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (1 samples, 0.03%)</title><rect x="48.8" y="357" width="0.4" height="15.0" fill="rgb(228,117,21)" rx="2" ry="2" />
<text  x="51.84" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="59.1" y="373" width="0.4" height="15.0" fill="rgb(221,114,34)" rx="2" ry="2" />
<text  x="62.12" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;2ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="95.7" y="101" width="0.4" height="15.0" fill="rgb(218,199,51)" rx="2" ry="2" />
<text  x="98.67" y="111.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="592.6" y="469" width="0.4" height="15.0" fill="rgb(211,61,4)" rx="2" ry="2" />
<text  x="595.58" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (27 samples, 0.87%)</title><rect x="843.5" y="565" width="10.3" height="15.0" fill="rgb(232,0,38)" rx="2" ry="2" />
<text  x="846.50" y="575.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="90.0" y="181" width="0.3" height="15.0" fill="rgb(232,115,12)" rx="2" ry="2" />
<text  x="92.96" y="191.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (2 samples, 0.06%)</title><rect x="516.8" y="517" width="0.8" height="15.0" fill="rgb(251,227,29)" rx="2" ry="2" />
<text  x="519.80" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="73.2" y="245" width="0.4" height="15.0" fill="rgb(233,36,46)" rx="2" ry="2" />
<text  x="76.21" y="255.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%)</title><rect x="668.7" y="581" width="1.6" height="15.0" fill="rgb(226,30,1)" rx="2" ry="2" />
<text  x="671.73" y="591.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.03%)</title><rect x="205.3" y="549" width="0.4" height="15.0" fill="rgb(223,121,45)" rx="2" ry="2" />
<text  x="208.33" y="559.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.19%)</title><rect x="59.9" y="437" width="2.3" height="15.0" fill="rgb(231,183,19)" rx="2" ry="2" />
<text  x="62.88" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.06%)</title><rect x="547.3" y="485" width="0.7" height="15.0" fill="rgb(235,145,16)" rx="2" ry="2" />
<text  x="550.26" y="495.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.03%)</title><rect x="24.8" y="501" width="0.4" height="15.0" fill="rgb(229,93,28)" rx="2" ry="2" />
<text  x="27.85" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%)</title><rect x="682.8" y="597" width="0.4" height="15.0" fill="rgb(238,174,24)" rx="2" ry="2" />
<text  x="685.82" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="95.3" y="181" width="0.4" height="15.0" fill="rgb(227,197,8)" rx="2" ry="2" />
<text  x="98.29" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%)</title><rect x="1081.1" y="485" width="1.9" height="15.0" fill="rgb(244,136,36)" rx="2" ry="2" />
<text  x="1084.10" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="840.5" y="565" width="0.3" height="15.0" fill="rgb(221,18,33)" rx="2" ry="2" />
<text  x="843.45" y="575.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="97.6" y="357" width="0.4" height="15.0" fill="rgb(235,50,35)" rx="2" ry="2" />
<text  x="100.58" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%)</title><rect x="107.5" y="357" width="0.4" height="15.0" fill="rgb(249,222,45)" rx="2" ry="2" />
<text  x="110.48" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="118.5" y="453" width="0.4" height="15.0" fill="rgb(240,104,32)" rx="2" ry="2" />
<text  x="121.52" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (7 samples, 0.23%)</title><rect x="25.6" y="549" width="2.7" height="15.0" fill="rgb(250,119,5)" rx="2" ry="2" />
<text  x="28.61" y="559.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.06%)</title><rect x="610.9" y="485" width="0.7" height="15.0" fill="rgb(240,221,9)" rx="2" ry="2" />
<text  x="613.85" y="495.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (1 samples, 0.03%)</title><rect x="142.1" y="629" width="0.4" height="15.0" fill="rgb(243,20,18)" rx="2" ry="2" />
<text  x="145.13" y="639.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="114.3" y="325" width="0.4" height="15.0" fill="rgb(225,59,35)" rx="2" ry="2" />
<text  x="117.33" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="71.7" y="373" width="0.4" height="15.0" fill="rgb(251,129,37)" rx="2" ry="2" />
<text  x="74.68" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.19%)</title><rect x="1012.9" y="341" width="2.3" height="15.0" fill="rgb(223,199,49)" rx="2" ry="2" />
<text  x="1015.94" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%)</title><rect x="371.0" y="437" width="0.3" height="15.0" fill="rgb(228,156,44)" rx="2" ry="2" />
<text  x="373.97" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="106.0" y="389" width="0.3" height="15.0" fill="rgb(253,142,34)" rx="2" ry="2" />
<text  x="108.95" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="137.9" y="469" width="0.4" height="15.0" fill="rgb(241,50,7)" rx="2" ry="2" />
<text  x="140.94" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (108 samples, 3.48%)</title><rect x="1032.7" y="469" width="41.2" height="15.0" fill="rgb(206,79,1)" rx="2" ry="2" />
<text  x="1035.74" y="479.5" >ser..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%)</title><rect x="111.3" y="309" width="0.4" height="15.0" fill="rgb(221,81,4)" rx="2" ry="2" />
<text  x="114.28" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%)</title><rect x="928.4" y="517" width="0.8" height="15.0" fill="rgb(246,207,30)" rx="2" ry="2" />
<text  x="931.41" y="527.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::shadowable_deleted_at (1 samples, 0.03%)</title><rect x="1102.0" y="469" width="0.4" height="15.0" fill="rgb(219,223,14)" rx="2" ry="2" />
<text  x="1105.04" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="115.1" y="213" width="0.4" height="15.0" fill="rgb(254,156,22)" rx="2" ry="2" />
<text  x="118.09" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.10%)</title><rect x="161.9" y="549" width="1.2" height="15.0" fill="rgb(225,157,5)" rx="2" ry="2" />
<text  x="164.93" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (15 samples, 0.48%)</title><rect x="110.5" y="437" width="5.7" height="15.0" fill="rgb(217,189,35)" rx="2" ry="2" />
<text  x="113.52" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (1 samples, 0.03%)</title><rect x="135.7" y="645" width="0.3" height="15.0" fill="rgb(216,77,31)" rx="2" ry="2" />
<text  x="138.65" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="66.7" y="197" width="0.4" height="15.0" fill="rgb(232,141,18)" rx="2" ry="2" />
<text  x="69.73" y="207.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (24 samples, 0.77%)</title><rect x="756.3" y="549" width="9.1" height="15.0" fill="rgb(213,105,44)" rx="2" ry="2" />
<text  x="759.31" y="559.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.03%)</title><rect x="174.1" y="469" width="0.4" height="15.0" fill="rgb(217,213,40)" rx="2" ry="2" />
<text  x="177.11" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.7" y="149" width="0.4" height="15.0" fill="rgb(220,37,48)" rx="2" ry="2" />
<text  x="82.68" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (4 samples, 0.13%)</title><rect x="66.7" y="341" width="1.6" height="15.0" fill="rgb(254,9,7)" rx="2" ry="2" />
<text  x="69.73" y="351.5" ></text>
</g>
<g >
<title>database::add_column_family (3 samples, 0.10%)</title><rect x="175.6" y="597" width="1.2" height="15.0" fill="rgb(214,179,35)" rx="2" ry="2" />
<text  x="178.63" y="607.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="17.2" y="517" width="0.4" height="15.0" fill="rgb(231,133,5)" rx="2" ry="2" />
<text  x="20.23" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;1ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="95.7" y="85" width="0.4" height="15.0" fill="rgb(235,137,49)" rx="2" ry="2" />
<text  x="98.67" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.03%)</title><rect x="117.8" y="437" width="0.3" height="15.0" fill="rgb(230,108,49)" rx="2" ry="2" />
<text  x="120.76" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (382 samples, 12.33%)</title><rect x="929.2" y="517" width="145.4" height="15.0" fill="rgb(212,217,9)" rx="2" ry="2" />
<text  x="932.17" y="527.5" >service::storage_p..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="112.4" y="325" width="0.4" height="15.0" fill="rgb(205,79,25)" rx="2" ry="2" />
<text  x="115.43" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_recognizer (1 samples, 0.03%)</title><rect x="98.7" y="373" width="0.4" height="15.0" fill="rgb(226,49,30)" rx="2" ry="2" />
<text  x="101.72" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%)</title><rect x="392.7" y="549" width="0.4" height="15.0" fill="rgb(249,206,27)" rx="2" ry="2" />
<text  x="395.67" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::alter_view_statement, std::default_delete&lt;cql3::statements::alter_view_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%)</title><rect x="121.2" y="485" width="0.4" height="15.0" fill="rgb(228,81,1)" rx="2" ry="2" />
<text  x="124.18" y="495.5" ></text>
</g>
<g >
<title>sstables::file_writer::~file_writer (1 samples, 0.03%)</title><rect x="136.8" y="661" width="0.4" height="15.0" fill="rgb(251,192,39)" rx="2" ry="2" />
<text  x="139.80" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_permissions_statement, std::default_delete&lt;cql3::statements::list_permissions_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="125.4" y="517" width="0.4" height="15.0" fill="rgb(213,1,9)" rx="2" ry="2" />
<text  x="128.37" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="107.9" y="309" width="0.3" height="15.0" fill="rgb(205,229,0)" rx="2" ry="2" />
<text  x="110.86" y="319.5" ></text>
</g>
<g >
<title>std::__variant_cast&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="80.4" y="277" width="0.4" height="15.0" fill="rgb(239,53,28)" rx="2" ry="2" />
<text  x="83.44" y="287.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="110.5" y="405" width="0.4" height="15.0" fill="rgb(237,65,51)" rx="2" ry="2" />
<text  x="113.52" y="415.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.03%)</title><rect x="845.8" y="389" width="0.4" height="15.0" fill="rgb(242,17,25)" rx="2" ry="2" />
<text  x="848.79" y="399.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%)</title><rect x="99.1" y="213" width="0.8" height="15.0" fill="rgb(251,148,30)" rx="2" ry="2" />
<text  x="102.10" y="223.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="107.9" y="405" width="0.3" height="15.0" fill="rgb(248,46,1)" rx="2" ry="2" />
<text  x="110.86" y="415.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (4 samples, 0.13%)</title><rect x="823.3" y="533" width="1.5" height="15.0" fill="rgb(233,31,28)" rx="2" ry="2" />
<text  x="826.32" y="543.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.03%)</title><rect x="847.3" y="421" width="0.4" height="15.0" fill="rgb(247,184,45)" rx="2" ry="2" />
<text  x="850.31" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="63.7" y="373" width="0.4" height="15.0" fill="rgb(223,88,11)" rx="2" ry="2" />
<text  x="66.69" y="383.5" ></text>
</g>
<g >
<title>validation::validate_cql_key (3 samples, 0.10%)</title><rect x="851.9" y="485" width="1.1" height="15.0" fill="rgb(236,77,3)" rx="2" ry="2" />
<text  x="854.88" y="495.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (7 samples, 0.23%)</title><rect x="478.7" y="517" width="2.7" height="15.0" fill="rgb(205,78,1)" rx="2" ry="2" />
<text  x="481.73" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (252 samples, 8.13%)</title><rect x="289.1" y="469" width="96.0" height="15.0" fill="rgb(244,45,42)" rx="2" ry="2" />
<text  x="292.10" y="479.5" >partition_s..</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::drop_type_statement, std::default_delete&lt;cql3::statements::drop_type_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%)</title><rect x="118.9" y="501" width="0.4" height="15.0" fill="rgb(239,64,22)" rx="2" ry="2" />
<text  x="121.90" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (4 samples, 0.13%)</title><rect x="32.8" y="293" width="1.6" height="15.0" fill="rgb(239,211,46)" rx="2" ry="2" />
<text  x="35.85" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="60.3" y="261" width="0.3" height="15.0" fill="rgb(239,78,1)" rx="2" ry="2" />
<text  x="63.26" y="271.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.03%)</title><rect x="1100.5" y="405" width="0.4" height="15.0" fill="rgb(250,131,7)" rx="2" ry="2" />
<text  x="1103.52" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (7 samples, 0.23%)</title><rect x="666.1" y="581" width="2.6" height="15.0" fill="rgb(240,40,12)" rx="2" ry="2" />
<text  x="669.06" y="591.5" ></text>
</g>
<g >
<title>query::querier&lt; (661 samples, 21.33%)</title><rect x="245.3" y="565" width="251.7" height="15.0" fill="rgb(231,196,2)" rx="2" ry="2" />
<text  x="248.31" y="575.5" >query::querier&lt;</text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::raw::update_statement*, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%)</title><rect x="118.5" y="421" width="0.4" height="15.0" fill="rgb(244,191,8)" rx="2" ry="2" />
<text  x="121.52" y="431.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.32%)</title><rect x="805.0" y="469" width="3.9" height="15.0" fill="rgb(217,16,14)" rx="2" ry="2" />
<text  x="808.04" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%)</title><rect x="596.8" y="501" width="0.3" height="15.0" fill="rgb(212,140,26)" rx="2" ry="2" />
<text  x="599.76" y="511.5" ></text>
</g>
<g >
<title>sstables::compaction_strategy_impl::get_value (1 samples, 0.03%)</title><rect x="176.4" y="533" width="0.4" height="15.0" fill="rgb(207,182,10)" rx="2" ry="2" />
<text  x="179.40" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%)</title><rect x="128.8" y="613" width="0.4" height="15.0" fill="rgb(245,164,19)" rx="2" ry="2" />
<text  x="131.80" y="623.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (3 samples, 0.10%)</title><rect x="859.9" y="549" width="1.1" height="15.0" fill="rgb(221,172,32)" rx="2" ry="2" />
<text  x="862.87" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="63.7" y="405" width="0.4" height="15.0" fill="rgb(227,15,6)" rx="2" ry="2" />
<text  x="66.69" y="415.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (2 samples, 0.06%)</title><rect x="431.1" y="485" width="0.8" height="15.0" fill="rgb(208,191,19)" rx="2" ry="2" />
<text  x="434.13" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%)</title><rect x="869.0" y="533" width="0.8" height="15.0" fill="rgb(245,103,51)" rx="2" ry="2" />
<text  x="872.01" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%)</title><rect x="1142.8" y="597" width="0.7" height="15.0" fill="rgb(251,58,26)" rx="2" ry="2" />
<text  x="1145.78" y="607.5" ></text>
</g>
<g >
<title>seastar::reactor::do_expire_lowres_timers (1 samples, 0.03%)</title><rect x="1153.4" y="613" width="0.4" height="15.0" fill="rgb(217,99,49)" rx="2" ry="2" />
<text  x="1156.45" y="623.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="1087.2" y="533" width="0.8" height="15.0" fill="rgb(217,109,21)" rx="2" ry="2" />
<text  x="1090.19" y="543.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.06%)</title><rect x="820.3" y="485" width="0.7" height="15.0" fill="rgb(246,99,40)" rx="2" ry="2" />
<text  x="823.27" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (25 samples, 0.81%)</title><rect x="661.1" y="597" width="9.5" height="15.0" fill="rgb(248,76,30)" rx="2" ry="2" />
<text  x="664.11" y="607.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%)</title><rect x="577.7" y="485" width="2.3" height="15.0" fill="rgb(215,137,38)" rx="2" ry="2" />
<text  x="580.73" y="495.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (3 samples, 0.10%)</title><rect x="693.9" y="597" width="1.1" height="15.0" fill="rgb(233,22,10)" rx="2" ry="2" />
<text  x="696.86" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="59.1" y="293" width="0.4" height="15.0" fill="rgb(221,201,33)" rx="2" ry="2" />
<text  x="62.12" y="303.5" ></text>
</g>
<g >
<title>freeze (8 samples, 0.26%)</title><rect x="1107.4" y="373" width="3.0" height="15.0" fill="rgb(244,14,54)" rx="2" ry="2" />
<text  x="1110.37" y="383.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.48%)</title><rect x="967.6" y="453" width="5.7" height="15.0" fill="rgb(208,76,22)" rx="2" ry="2" />
<text  x="970.63" y="463.5" ></text>
</g>
<g >
<title>_ZN7seastar8futurizeINS_6futureIvEEE22satisfy_with_result_ofIZZNS2_17then_wrapped_nrvoIS2_NS2_12finally_bodyIZZNS_19file_data_sink_impl3putENS_16temporary_bufferIcEEENUlvE_clEvEUlvE_Lb0EEEEENS0_IT_E4typeEOT0_ENKUlONS_8internal22promise_base_with_typeIvEERSC_ONS_12future_stateINSI_9monostateEEEE_clESL_SM_SQ_EUlvE_EEvSL_OSD_ (1 samples, 0.03%)</title><rect x="695.8" y="597" width="0.3" height="15.0" fill="rgb(213,174,15)" rx="2" ry="2" />
<text  x="698.76" y="607.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="570.5" y="469" width="0.4" height="15.0" fill="rgb(227,162,5)" rx="2" ry="2" />
<text  x="573.49" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.03%)</title><rect x="895.7" y="485" width="0.3" height="15.0" fill="rgb(226,13,46)" rx="2" ry="2" />
<text  x="898.67" y="495.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%)</title><rect x="128.8" y="645" width="0.4" height="15.0" fill="rgb(232,161,19)" rx="2" ry="2" />
<text  x="131.80" y="655.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (26 samples, 0.84%)</title><rect x="422.0" y="517" width="9.9" height="15.0" fill="rgb(232,25,12)" rx="2" ry="2" />
<text  x="424.99" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="60.6" y="245" width="0.4" height="15.0" fill="rgb(251,115,33)" rx="2" ry="2" />
<text  x="63.64" y="255.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.03%)</title><rect x="324.5" y="389" width="0.4" height="15.0" fill="rgb(217,211,2)" rx="2" ry="2" />
<text  x="327.51" y="399.5" ></text>
</g>
<g >
<title>cql3::column_identifier_raw::operator== (1 samples, 0.03%)</title><rect x="74.7" y="421" width="0.4" height="15.0" fill="rgb(243,103,43)" rx="2" ry="2" />
<text  x="77.73" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%)</title><rect x="695.8" y="581" width="0.3" height="15.0" fill="rgb(220,137,0)" rx="2" ry="2" />
<text  x="698.76" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.10%)</title><rect x="826.7" y="517" width="1.2" height="15.0" fill="rgb(242,19,41)" rx="2" ry="2" />
<text  x="829.75" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="68.6" y="325" width="0.4" height="15.0" fill="rgb(222,222,29)" rx="2" ry="2" />
<text  x="71.64" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.10%)</title><rect x="762.0" y="501" width="1.2" height="15.0" fill="rgb(218,20,26)" rx="2" ry="2" />
<text  x="765.02" y="511.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="792.9" y="453" width="0.7" height="15.0" fill="rgb(247,154,25)" rx="2" ry="2" />
<text  x="795.86" y="463.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="876.2" y="517" width="0.4" height="15.0" fill="rgb(240,149,4)" rx="2" ry="2" />
<text  x="879.25" y="527.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (16 samples, 0.52%)</title><rect x="1067.4" y="405" width="6.1" height="15.0" fill="rgb(238,167,50)" rx="2" ry="2" />
<text  x="1070.39" y="415.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%)</title><rect x="513.4" y="485" width="0.4" height="15.0" fill="rgb(236,10,40)" rx="2" ry="2" />
<text  x="516.38" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 1.10%)</title><rect x="1104.7" y="517" width="13.0" height="15.0" fill="rgb(207,222,8)" rx="2" ry="2" />
<text  x="1107.71" y="527.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.03%)</title><rect x="1108.9" y="277" width="0.4" height="15.0" fill="rgb(249,159,20)" rx="2" ry="2" />
<text  x="1111.90" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="72.1" y="277" width="0.7" height="15.0" fill="rgb(230,119,39)" rx="2" ry="2" />
<text  x="75.07" y="287.5" ></text>
</g>
<g >
<title>sstables::size_tiered_compaction_strategy_options::size_tiered_compaction_strategy_options (1 samples, 0.03%)</title><rect x="176.4" y="549" width="0.4" height="15.0" fill="rgb(230,153,21)" rx="2" ry="2" />
<text  x="179.40" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.03%)</title><rect x="35.5" y="373" width="0.4" height="15.0" fill="rgb(227,195,27)" rx="2" ry="2" />
<text  x="38.51" y="383.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::select_statement, cql3::cf_name, seastar::lw_shared_ptr&lt;cql3::statements::raw::select_statement::parameters&gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::selection::raw_selector&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::selection::raw_selector&gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::optional&lt;cql3::expr::expression&gt;, std::optional&lt;cql3::expr::expression&gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt; &gt;, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="137.9" y="405" width="0.4" height="15.0" fill="rgb(206,89,27)" rx="2" ry="2" />
<text  x="140.94" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%)</title><rect x="234.7" y="565" width="0.3" height="15.0" fill="rgb(209,107,38)" rx="2" ry="2" />
<text  x="237.65" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="61.0" y="405" width="0.4" height="15.0" fill="rgb(253,43,44)" rx="2" ry="2" />
<text  x="64.02" y="415.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, utils::small_vector&lt;gms::inet_address, 1ul&gt; &gt; (1 samples, 0.03%)</title><rect x="1111.9" y="357" width="0.4" height="15.0" fill="rgb(206,113,35)" rx="2" ry="2" />
<text  x="1114.94" y="367.5" ></text>
</g>
<g >
<title>schema::get_column_mapping (1 samples, 0.03%)</title><rect x="1101.7" y="469" width="0.3" height="15.0" fill="rgb(240,209,28)" rx="2" ry="2" />
<text  x="1104.66" y="479.5" ></text>
</g>
<g >
<title>database::query (14 samples, 0.45%)</title><rect x="168.0" y="613" width="5.3" height="15.0" fill="rgb(208,13,2)" rx="2" ry="2" />
<text  x="171.02" y="623.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (11 samples, 0.35%)</title><rect x="449.8" y="485" width="4.2" height="15.0" fill="rgb(217,211,31)" rx="2" ry="2" />
<text  x="452.79" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (2 samples, 0.06%)</title><rect x="684.3" y="597" width="0.8" height="15.0" fill="rgb(226,44,20)" rx="2" ry="2" />
<text  x="687.34" y="607.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (2 samples, 0.06%)</title><rect x="11.5" y="597" width="0.8" height="15.0" fill="rgb(208,145,34)" rx="2" ry="2" />
<text  x="14.52" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="895.3" y="437" width="0.4" height="15.0" fill="rgb(233,112,13)" rx="2" ry="2" />
<text  x="898.29" y="447.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (1 samples, 0.03%)</title><rect x="533.9" y="517" width="0.4" height="15.0" fill="rgb(220,200,2)" rx="2" ry="2" />
<text  x="536.94" y="527.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%)</title><rect x="660.7" y="597" width="0.4" height="15.0" fill="rgb(226,121,13)" rx="2" ry="2" />
<text  x="663.73" y="607.5" ></text>
</g>
<g >
<title>local_schema_registry (1 samples, 0.03%)</title><rect x="954.3" y="469" width="0.4" height="15.0" fill="rgb(242,70,48)" rx="2" ry="2" />
<text  x="957.30" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="63.7" y="341" width="0.4" height="15.0" fill="rgb(215,163,53)" rx="2" ry="2" />
<text  x="66.69" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (37 samples, 1.19%)</title><rect x="580.0" y="485" width="14.1" height="15.0" fill="rgb(246,45,2)" rx="2" ry="2" />
<text  x="583.01" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_destroy&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="86.5" y="341" width="0.4" height="15.0" fill="rgb(205,138,28)" rx="2" ry="2" />
<text  x="89.53" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%)</title><rect x="322.2" y="389" width="1.2" height="15.0" fill="rgb(236,227,26)" rx="2" ry="2" />
<text  x="325.23" y="399.5" ></text>
</g>
<g >
<title>[unknown] (314 samples, 10.13%)</title><rect x="10.0" y="725" width="119.6" height="15.0" fill="rgb(214,175,51)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >[unknown]</text>
</g>
<g >
<title>cql3::query_options::~query_options (9 samples, 0.29%)</title><rect x="677.5" y="597" width="3.4" height="15.0" fill="rgb(207,25,14)" rx="2" ry="2" />
<text  x="680.49" y="607.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (4 samples, 0.13%)</title><rect x="363.7" y="373" width="1.6" height="15.0" fill="rgb(250,57,33)" rx="2" ry="2" />
<text  x="366.73" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (3 samples, 0.10%)</title><rect x="24.1" y="533" width="1.1" height="15.0" fill="rgb(234,115,23)" rx="2" ry="2" />
<text  x="27.09" y="543.5" ></text>
</g>
<g >
<title>auth::get_permissions (1 samples, 0.03%)</title><rect x="781.4" y="501" width="0.4" height="15.0" fill="rgb(235,55,23)" rx="2" ry="2" />
<text  x="784.44" y="511.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (13 samples, 0.42%)</title><rect x="1112.7" y="437" width="5.0" height="15.0" fill="rgb(253,26,22)" rx="2" ry="2" />
<text  x="1115.70" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%)</title><rect x="107.5" y="405" width="0.4" height="15.0" fill="rgb(231,148,21)" rx="2" ry="2" />
<text  x="110.48" y="415.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.03%)</title><rect x="1097.5" y="437" width="0.4" height="15.0" fill="rgb(229,127,9)" rx="2" ry="2" />
<text  x="1100.47" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (2 samples, 0.06%)</title><rect x="39.7" y="341" width="0.8" height="15.0" fill="rgb(234,123,18)" rx="2" ry="2" />
<text  x="42.70" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::reset (1 samples, 0.03%)</title><rect x="123.5" y="469" width="0.3" height="15.0" fill="rgb(241,90,48)" rx="2" ry="2" />
<text  x="126.47" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="184.0" y="597" width="0.4" height="15.0" fill="rgb(253,122,11)" rx="2" ry="2" />
<text  x="187.01" y="607.5" ></text>
</g>
<g >
<title>row_cache::make_reader (39 samples, 1.26%)</title><rect x="602.9" y="517" width="14.8" height="15.0" fill="rgb(234,65,34)" rx="2" ry="2" />
<text  x="605.86" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (42 samples, 1.36%)</title><rect x="879.7" y="469" width="16.0" height="15.0" fill="rgb(215,145,38)" rx="2" ry="2" />
<text  x="882.67" y="479.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%)</title><rect x="1054.1" y="453" width="0.3" height="15.0" fill="rgb(245,4,0)" rx="2" ry="2" />
<text  x="1057.07" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.03%)</title><rect x="381.6" y="453" width="0.4" height="15.0" fill="rgb(239,139,8)" rx="2" ry="2" />
<text  x="384.63" y="463.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (2 samples, 0.06%)</title><rect x="852.3" y="437" width="0.7" height="15.0" fill="rgb(219,229,38)" rx="2" ry="2" />
<text  x="855.26" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%)</title><rect x="110.1" y="437" width="0.4" height="15.0" fill="rgb(241,145,2)" rx="2" ry="2" />
<text  x="113.14" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (8 samples, 0.26%)</title><rect x="82.3" y="405" width="3.1" height="15.0" fill="rgb(244,126,46)" rx="2" ry="2" />
<text  x="85.35" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%)</title><rect x="203.4" y="565" width="0.4" height="15.0" fill="rgb(242,136,18)" rx="2" ry="2" />
<text  x="206.43" y="575.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.06%)</title><rect x="512.6" y="485" width="0.8" height="15.0" fill="rgb(246,44,47)" rx="2" ry="2" />
<text  x="515.61" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%)</title><rect x="92.2" y="149" width="0.4" height="15.0" fill="rgb(214,141,18)" rx="2" ry="2" />
<text  x="95.25" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="66.7" y="213" width="0.4" height="15.0" fill="rgb(242,120,0)" rx="2" ry="2" />
<text  x="69.73" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="66.0" y="277" width="0.4" height="15.0" fill="rgb(246,124,43)" rx="2" ry="2" />
<text  x="68.97" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%)</title><rect x="1139.4" y="581" width="2.2" height="15.0" fill="rgb(222,2,41)" rx="2" ry="2" />
<text  x="1142.36" y="591.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (14 samples, 0.45%)</title><rect x="356.9" y="357" width="5.3" height="15.0" fill="rgb(211,150,29)" rx="2" ry="2" />
<text  x="359.88" y="367.5" ></text>
</g>
<g >
<title>database::find_schema (11 samples, 0.35%)</title><rect x="765.4" y="533" width="4.2" height="15.0" fill="rgb(216,165,32)" rx="2" ry="2" />
<text  x="768.44" y="543.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.03%)</title><rect x="314.6" y="421" width="0.4" height="15.0" fill="rgb(227,18,25)" rx="2" ry="2" />
<text  x="317.61" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;4ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="94.1" y="69" width="0.4" height="15.0" fill="rgb(232,165,0)" rx="2" ry="2" />
<text  x="97.15" y="79.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="65.2" y="293" width="0.4" height="15.0" fill="rgb(223,118,29)" rx="2" ry="2" />
<text  x="68.21" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="114.3" y="261" width="0.4" height="15.0" fill="rgb(240,106,37)" rx="2" ry="2" />
<text  x="117.33" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (6 samples, 0.19%)</title><rect x="763.2" y="501" width="2.2" height="15.0" fill="rgb(222,112,46)" rx="2" ry="2" />
<text  x="766.16" y="511.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="97.2" y="309" width="0.4" height="15.0" fill="rgb(237,142,2)" rx="2" ry="2" />
<text  x="100.20" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%)</title><rect x="92.2" y="165" width="0.4" height="15.0" fill="rgb(253,41,10)" rx="2" ry="2" />
<text  x="95.25" y="175.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.03%)</title><rect x="606.7" y="501" width="0.3" height="15.0" fill="rgb(254,139,54)" rx="2" ry="2" />
<text  x="609.66" y="511.5" ></text>
</g>
<g >
<title>database::do_apply (22 samples, 0.71%)</title><rect x="1096.0" y="549" width="8.3" height="15.0" fill="rgb(211,0,17)" rx="2" ry="2" />
<text  x="1098.95" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="72.8" y="341" width="0.4" height="15.0" fill="rgb(213,72,0)" rx="2" ry="2" />
<text  x="75.83" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="77.0" y="261" width="0.4" height="15.0" fill="rgb(221,19,34)" rx="2" ry="2" />
<text  x="80.02" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (3 samples, 0.10%)</title><rect x="39.3" y="373" width="1.2" height="15.0" fill="rgb(237,63,6)" rx="2" ry="2" />
<text  x="42.32" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (1 samples, 0.03%)</title><rect x="10.8" y="581" width="0.3" height="15.0" fill="rgb(208,101,38)" rx="2" ry="2" />
<text  x="13.76" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (11 samples, 0.35%)</title><rect x="104.0" y="453" width="4.2" height="15.0" fill="rgb(245,180,19)" rx="2" ry="2" />
<text  x="107.05" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="63.7" y="325" width="0.4" height="15.0" fill="rgb(220,221,18)" rx="2" ry="2" />
<text  x="66.69" y="335.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (1 samples, 0.03%)</title><rect x="845.0" y="437" width="0.4" height="15.0" fill="rgb(252,61,18)" rx="2" ry="2" />
<text  x="848.02" y="447.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (261 samples, 8.42%)</title><rect x="519.8" y="565" width="99.4" height="15.0" fill="rgb(224,214,27)" rx="2" ry="2" />
<text  x="522.85" y="575.5" >query::queri..</text>
</g>
<g >
<title>__strcmp_avx2 (7 samples, 0.23%)</title><rect x="132.2" y="693" width="2.7" height="15.0" fill="rgb(235,134,13)" rx="2" ry="2" />
<text  x="135.23" y="703.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%)</title><rect x="743.7" y="549" width="0.8" height="15.0" fill="rgb(241,54,2)" rx="2" ry="2" />
<text  x="746.74" y="559.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::create_table_statement::raw_statement*, std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt; &gt; (1 samples, 0.03%)</title><rect x="121.6" y="453" width="0.3" height="15.0" fill="rgb(206,6,34)" rx="2" ry="2" />
<text  x="124.57" y="463.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%)</title><rect x="1153.4" y="549" width="0.4" height="15.0" fill="rgb(221,4,41)" rx="2" ry="2" />
<text  x="1156.45" y="559.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.03%)</title><rect x="1097.1" y="469" width="0.4" height="15.0" fill="rgb(252,71,8)" rx="2" ry="2" />
<text  x="1100.09" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="115.5" y="341" width="0.4" height="15.0" fill="rgb(232,190,3)" rx="2" ry="2" />
<text  x="118.47" y="351.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (1 samples, 0.03%)</title><rect x="136.0" y="661" width="0.4" height="15.0" fill="rgb(205,4,10)" rx="2" ry="2" />
<text  x="139.03" y="671.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="80.1" y="245" width="0.3" height="15.0" fill="rgb(240,22,49)" rx="2" ry="2" />
<text  x="83.06" y="255.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.03%)</title><rect x="137.9" y="645" width="0.4" height="15.0" fill="rgb(248,31,44)" rx="2" ry="2" />
<text  x="140.94" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="69.4" y="389" width="0.4" height="15.0" fill="rgb(228,162,17)" rx="2" ry="2" />
<text  x="72.40" y="399.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="913.6" y="517" width="0.7" height="15.0" fill="rgb(241,138,46)" rx="2" ry="2" />
<text  x="916.56" y="527.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.39%)</title><rect x="431.9" y="517" width="4.6" height="15.0" fill="rgb(214,133,52)" rx="2" ry="2" />
<text  x="434.89" y="527.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%)</title><rect x="161.5" y="549" width="0.4" height="15.0" fill="rgb(245,40,41)" rx="2" ry="2" />
<text  x="164.55" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="111.3" y="261" width="0.4" height="15.0" fill="rgb(223,225,42)" rx="2" ry="2" />
<text  x="114.28" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1,168 samples, 37.69%)</title><rect x="185.2" y="597" width="444.7" height="15.0" fill="rgb(251,199,26)" rx="2" ry="2" />
<text  x="188.15" y="607.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~RuleReturnValue (1 samples, 0.03%)</title><rect x="77.4" y="421" width="0.4" height="15.0" fill="rgb(242,108,6)" rx="2" ry="2" />
<text  x="80.40" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="29.0" y="469" width="0.4" height="15.0" fill="rgb(218,10,40)" rx="2" ry="2" />
<text  x="32.04" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%)</title><rect x="92.2" y="181" width="0.4" height="15.0" fill="rgb(235,209,22)" rx="2" ry="2" />
<text  x="95.25" y="191.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (2 samples, 0.06%)</title><rect x="175.6" y="565" width="0.8" height="15.0" fill="rgb(219,68,46)" rx="2" ry="2" />
<text  x="178.63" y="575.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (3 samples, 0.10%)</title><rect x="587.6" y="469" width="1.2" height="15.0" fill="rgb(225,90,54)" rx="2" ry="2" />
<text  x="590.63" y="479.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_data (1 samples, 0.03%)</title><rect x="38.9" y="389" width="0.4" height="15.0" fill="rgb(210,36,21)" rx="2" ry="2" />
<text  x="41.94" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="99.1" y="293" width="0.8" height="15.0" fill="rgb(234,224,9)" rx="2" ry="2" />
<text  x="102.10" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%)</title><rect x="113.9" y="341" width="0.4" height="15.0" fill="rgb(211,149,27)" rx="2" ry="2" />
<text  x="116.95" y="351.5" ></text>
</g>
<g >
<title>query_state::query_state (15 samples, 0.48%)</title><rect x="619.2" y="565" width="5.7" height="15.0" fill="rgb(217,135,35)" rx="2" ry="2" />
<text  x="622.23" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="106.7" y="293" width="0.4" height="15.0" fill="rgb(230,39,51)" rx="2" ry="2" />
<text  x="109.72" y="303.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="128.8" y="693" width="0.4" height="15.0" fill="rgb(224,71,35)" rx="2" ry="2" />
<text  x="131.80" y="703.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (85 samples, 2.74%)</title><rect x="998.1" y="405" width="32.4" height="15.0" fill="rgb(224,62,18)" rx="2" ry="2" />
<text  x="1001.09" y="415.5" >se..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%)</title><rect x="61.4" y="405" width="0.8" height="15.0" fill="rgb(206,154,43)" rx="2" ry="2" />
<text  x="64.40" y="415.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (1 samples, 0.03%)</title><rect x="843.9" y="485" width="0.4" height="15.0" fill="rgb(208,10,29)" rx="2" ry="2" />
<text  x="846.88" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1108.1" y="293" width="0.4" height="15.0" fill="rgb(214,110,28)" rx="2" ry="2" />
<text  x="1111.13" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%)</title><rect x="1188.1" y="677" width="0.4" height="15.0" fill="rgb(231,199,1)" rx="2" ry="2" />
<text  x="1191.10" y="687.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (1 samples, 0.03%)</title><rect x="1119.9" y="613" width="0.4" height="15.0" fill="rgb(244,172,49)" rx="2" ry="2" />
<text  x="1122.94" y="623.5" ></text>
</g>
<g >
<title>table::apply (18 samples, 0.58%)</title><rect x="1096.0" y="501" width="6.8" height="15.0" fill="rgb(205,35,7)" rx="2" ry="2" />
<text  x="1098.95" y="511.5" ></text>
</g>
<g >
<title>database::apply_in_memory (18 samples, 0.58%)</title><rect x="1096.0" y="517" width="6.8" height="15.0" fill="rgb(244,159,51)" rx="2" ry="2" />
<text  x="1098.95" y="527.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (5 samples, 0.16%)</title><rect x="129.6" y="693" width="1.9" height="15.0" fill="rgb(247,154,25)" rx="2" ry="2" />
<text  x="132.56" y="703.5" ></text>
</g>
<g >
<title>allocation_strategy::construct&lt;rows_entry, schema const&amp;, rows_entry const&amp;&gt; (1 samples, 0.03%)</title><rect x="173.7" y="453" width="0.4" height="15.0" fill="rgb(248,144,45)" rx="2" ry="2" />
<text  x="176.73" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="112.4" y="341" width="0.4" height="15.0" fill="rgb(232,115,25)" rx="2" ry="2" />
<text  x="115.43" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::push_back (1 samples, 0.03%)</title><rect x="127.7" y="309" width="0.3" height="15.0" fill="rgb(221,129,25)" rx="2" ry="2" />
<text  x="130.66" y="319.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::entry, std::function&lt;void  (1 samples, 0.03%)</title><rect x="136.8" y="629" width="0.4" height="15.0" fill="rgb(247,105,7)" rx="2" ry="2" />
<text  x="139.80" y="639.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::delay&lt;service::abstract_write_response_handler::signal (1 samples, 0.03%)</title><rect x="727.7" y="581" width="0.4" height="15.0" fill="rgb(235,60,25)" rx="2" ry="2" />
<text  x="730.75" y="591.5" ></text>
</g>
<g >
<title>posix_memalign (12 samples, 0.39%)</title><rect x="357.6" y="341" width="4.6" height="15.0" fill="rgb(229,117,21)" rx="2" ry="2" />
<text  x="360.64" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.03%)</title><rect x="402.2" y="533" width="0.4" height="15.0" fill="rgb(251,218,54)" rx="2" ry="2" />
<text  x="405.19" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%)</title><rect x="114.7" y="373" width="0.8" height="15.0" fill="rgb(236,224,31)" rx="2" ry="2" />
<text  x="117.71" y="383.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="401.4" y="533" width="0.8" height="15.0" fill="rgb(206,47,21)" rx="2" ry="2" />
<text  x="404.43" y="543.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::expression&gt; (1 samples, 0.03%)</title><rect x="117.0" y="437" width="0.4" height="15.0" fill="rgb(213,76,28)" rx="2" ry="2" />
<text  x="120.00" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="99.9" y="309" width="0.3" height="15.0" fill="rgb(206,12,12)" rx="2" ry="2" />
<text  x="102.86" y="319.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (46 samples, 1.48%)</title><rect x="878.5" y="501" width="17.5" height="15.0" fill="rgb(205,65,36)" rx="2" ry="2" />
<text  x="881.53" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (5 samples, 0.16%)</title><rect x="83.5" y="357" width="1.9" height="15.0" fill="rgb(228,198,3)" rx="2" ry="2" />
<text  x="86.49" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="61.0" y="277" width="0.4" height="15.0" fill="rgb(231,200,6)" rx="2" ry="2" />
<text  x="64.02" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (10 samples, 0.32%)</title><rect x="78.2" y="405" width="3.8" height="15.0" fill="rgb(231,181,39)" rx="2" ry="2" />
<text  x="81.16" y="415.5" ></text>
</g>
<g >
<title>difference&lt;std::map, utils::UUID, schema_mutations, std::equal_to&lt;schema_mutations&gt;, std::less&lt;utils::UUID&gt;, std::allocator&lt;std::pair&lt;utils::UUID const, schema_mutations&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="173.7" y="565" width="0.4" height="15.0" fill="rgb(221,93,0)" rx="2" ry="2" />
<text  x="176.73" y="575.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (1 samples, 0.03%)</title><rect x="143.3" y="629" width="0.3" height="15.0" fill="rgb(215,33,17)" rx="2" ry="2" />
<text  x="146.27" y="639.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%)</title><rect x="98.3" y="357" width="0.4" height="15.0" fill="rgb(254,204,28)" rx="2" ry="2" />
<text  x="101.34" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="692.0" y="597" width="0.3" height="15.0" fill="rgb(208,212,24)" rx="2" ry="2" />
<text  x="694.96" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="68.6" y="293" width="0.4" height="15.0" fill="rgb(236,35,41)" rx="2" ry="2" />
<text  x="71.64" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (1 samples, 0.03%)</title><rect x="50.0" y="373" width="0.4" height="15.0" fill="rgb(237,180,38)" rx="2" ry="2" />
<text  x="52.98" y="383.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_endpoint (1 samples, 0.03%)</title><rect x="176.8" y="581" width="0.4" height="15.0" fill="rgb(253,76,19)" rx="2" ry="2" />
<text  x="179.78" y="591.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (8 samples, 0.26%)</title><rect x="1143.5" y="597" width="3.1" height="15.0" fill="rgb(244,210,9)" rx="2" ry="2" />
<text  x="1146.55" y="607.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (4 samples, 0.13%)</title><rect x="43.5" y="389" width="1.5" height="15.0" fill="rgb(205,109,31)" rx="2" ry="2" />
<text  x="46.51" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::deallocate (2 samples, 0.06%)</title><rect x="25.6" y="421" width="0.8" height="15.0" fill="rgb(230,183,38)" rx="2" ry="2" />
<text  x="28.61" y="431.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%)</title><rect x="327.9" y="389" width="0.4" height="15.0" fill="rgb(221,43,0)" rx="2" ry="2" />
<text  x="330.94" y="399.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="136.0" y="645" width="0.4" height="15.0" fill="rgb(248,115,44)" rx="2" ry="2" />
<text  x="139.03" y="655.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (2 samples, 0.06%)</title><rect x="175.6" y="533" width="0.8" height="15.0" fill="rgb(216,61,40)" rx="2" ry="2" />
<text  x="178.63" y="543.5" ></text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.03%)</title><rect x="19.1" y="453" width="0.4" height="15.0" fill="rgb(215,209,0)" rx="2" ry="2" />
<text  x="22.14" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (1 samples, 0.03%)</title><rect x="126.5" y="581" width="0.4" height="15.0" fill="rgb(251,139,16)" rx="2" ry="2" />
<text  x="129.52" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="61.4" y="341" width="0.8" height="15.0" fill="rgb(249,51,27)" rx="2" ry="2" />
<text  x="64.40" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (10 samples, 0.32%)</title><rect x="270.8" y="485" width="3.8" height="15.0" fill="rgb(209,189,29)" rx="2" ry="2" />
<text  x="273.83" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (255 samples, 8.23%)</title><rect x="29.0" y="533" width="97.1" height="15.0" fill="rgb(221,139,30)" rx="2" ry="2" />
<text  x="32.04" y="543.5" >cql3_parser..</text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (17 samples, 0.55%)</title><rect x="301.3" y="437" width="6.5" height="15.0" fill="rgb(220,113,41)" rx="2" ry="2" />
<text  x="304.29" y="447.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (2 samples, 0.06%)</title><rect x="801.2" y="437" width="0.8" height="15.0" fill="rgb(223,168,17)" rx="2" ry="2" />
<text  x="804.24" y="447.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="28.3" y="549" width="0.7" height="15.0" fill="rgb(227,194,44)" rx="2" ry="2" />
<text  x="31.28" y="559.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (7 samples, 0.23%)</title><rect x="1099.0" y="469" width="2.7" height="15.0" fill="rgb(214,55,47)" rx="2" ry="2" />
<text  x="1102.00" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="66.7" y="149" width="0.4" height="15.0" fill="rgb(239,185,13)" rx="2" ry="2" />
<text  x="69.73" y="159.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (1 samples, 0.03%)</title><rect x="10.4" y="613" width="0.4" height="15.0" fill="rgb(251,79,5)" rx="2" ry="2" />
<text  x="13.38" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%)</title><rect x="94.1" y="309" width="0.8" height="15.0" fill="rgb(233,92,19)" rx="2" ry="2" />
<text  x="97.15" y="319.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="651.6" y="597" width="0.4" height="15.0" fill="rgb(235,90,2)" rx="2" ry="2" />
<text  x="654.59" y="607.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (5 samples, 0.16%)</title><rect x="91.5" y="341" width="1.9" height="15.0" fill="rgb(243,24,36)" rx="2" ry="2" />
<text  x="94.48" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.03%)</title><rect x="851.1" y="469" width="0.4" height="15.0" fill="rgb(208,69,34)" rx="2" ry="2" />
<text  x="854.12" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (1 samples, 0.03%)</title><rect x="115.9" y="421" width="0.3" height="15.0" fill="rgb(239,84,54)" rx="2" ry="2" />
<text  x="118.85" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%)</title><rect x="549.9" y="469" width="1.6" height="15.0" fill="rgb(240,50,19)" rx="2" ry="2" />
<text  x="552.93" y="479.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="776.5" y="517" width="0.7" height="15.0" fill="rgb(211,145,39)" rx="2" ry="2" />
<text  x="779.49" y="527.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%)</title><rect x="99.1" y="357" width="0.8" height="15.0" fill="rgb(238,210,46)" rx="2" ry="2" />
<text  x="102.10" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="699.6" y="581" width="0.4" height="15.0" fill="rgb(235,174,15)" rx="2" ry="2" />
<text  x="702.57" y="591.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (3 samples, 0.10%)</title><rect x="288.0" y="469" width="1.1" height="15.0" fill="rgb(208,110,38)" rx="2" ry="2" />
<text  x="290.96" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.06%)</title><rect x="42.4" y="341" width="0.7" height="15.0" fill="rgb(207,134,3)" rx="2" ry="2" />
<text  x="45.37" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.03%)</title><rect x="40.1" y="293" width="0.4" height="15.0" fill="rgb(254,216,43)" rx="2" ry="2" />
<text  x="43.08" y="303.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%)</title><rect x="174.5" y="485" width="0.4" height="15.0" fill="rgb(218,88,16)" rx="2" ry="2" />
<text  x="177.49" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="238.8" y="549" width="0.8" height="15.0" fill="rgb(224,179,43)" rx="2" ry="2" />
<text  x="241.84" y="559.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="115.5" y="213" width="0.4" height="15.0" fill="rgb(206,222,6)" rx="2" ry="2" />
<text  x="118.47" y="223.5" ></text>
</g>
<g >
<title>seastar::thread_context::~thread_context (1 samples, 0.03%)</title><rect x="1153.4" y="565" width="0.4" height="15.0" fill="rgb(206,173,13)" rx="2" ry="2" />
<text  x="1156.45" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.16%)</title><rect x="394.6" y="533" width="1.9" height="15.0" fill="rgb(211,209,12)" rx="2" ry="2" />
<text  x="397.58" y="543.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.10%)</title><rect x="641.7" y="597" width="1.1" height="15.0" fill="rgb(242,87,44)" rx="2" ry="2" />
<text  x="644.69" y="607.5" ></text>
</g>
<g >
<title>row::append_cell (1 samples, 0.03%)</title><rect x="174.9" y="517" width="0.4" height="15.0" fill="rgb(237,142,1)" rx="2" ry="2" />
<text  x="177.87" y="527.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (3 samples, 0.10%)</title><rect x="380.5" y="421" width="1.1" height="15.0" fill="rgb(227,180,9)" rx="2" ry="2" />
<text  x="383.49" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="102.9" y="341" width="0.4" height="15.0" fill="rgb(216,89,12)" rx="2" ry="2" />
<text  x="105.91" y="351.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (3 samples, 0.10%)</title><rect x="570.1" y="485" width="1.2" height="15.0" fill="rgb(246,165,27)" rx="2" ry="2" />
<text  x="573.11" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.03%)</title><rect x="101.8" y="389" width="0.3" height="15.0" fill="rgb(216,29,40)" rx="2" ry="2" />
<text  x="104.77" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="66.7" y="277" width="0.4" height="15.0" fill="rgb(249,227,49)" rx="2" ry="2" />
<text  x="69.73" y="287.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (2 samples, 0.06%)</title><rect x="377.8" y="437" width="0.8" height="15.0" fill="rgb(243,122,36)" rx="2" ry="2" />
<text  x="380.82" y="447.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%)</title><rect x="775.0" y="517" width="1.5" height="15.0" fill="rgb(237,11,21)" rx="2" ry="2" />
<text  x="777.96" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::revoke_role_statement, std::default_delete&lt;cql3::statements::revoke_role_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%)</title><rect x="124.6" y="485" width="0.4" height="15.0" fill="rgb(207,152,11)" rx="2" ry="2" />
<text  x="127.61" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="77.0" y="245" width="0.4" height="15.0" fill="rgb(251,212,17)" rx="2" ry="2" />
<text  x="80.02" y="255.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare (1 samples, 0.03%)</title><rect x="127.7" y="533" width="0.3" height="15.0" fill="rgb(220,51,29)" rx="2" ry="2" />
<text  x="130.66" y="543.5" ></text>
</g>
<g >
<title>db::system_keyspace::load_host_ids (1 samples, 0.03%)</title><rect x="137.9" y="549" width="0.4" height="15.0" fill="rgb(243,164,13)" rx="2" ry="2" />
<text  x="140.94" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="68.3" y="405" width="0.3" height="15.0" fill="rgb(222,84,50)" rx="2" ry="2" />
<text  x="71.26" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (3 samples, 0.10%)</title><rect x="108.6" y="453" width="1.2" height="15.0" fill="rgb(214,219,7)" rx="2" ry="2" />
<text  x="111.62" y="463.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="114.3" y="229" width="0.4" height="15.0" fill="rgb(237,151,48)" rx="2" ry="2" />
<text  x="117.33" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (1 samples, 0.03%)</title><rect x="1155.7" y="565" width="0.4" height="15.0" fill="rgb(226,218,37)" rx="2" ry="2" />
<text  x="1158.73" y="575.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="511.1" y="453" width="0.8" height="15.0" fill="rgb(253,93,49)" rx="2" ry="2" />
<text  x="514.09" y="463.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="96.1" y="133" width="0.3" height="15.0" fill="rgb(233,214,25)" rx="2" ry="2" />
<text  x="99.05" y="143.5" ></text>
</g>
<g >
<title>row::external_memory_usage (16 samples, 0.52%)</title><rect x="327.6" y="405" width="6.1" height="15.0" fill="rgb(234,194,52)" rx="2" ry="2" />
<text  x="330.56" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="58.0" y="261" width="0.4" height="15.0" fill="rgb(229,119,37)" rx="2" ry="2" />
<text  x="60.98" y="271.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="84.6" y="277" width="0.4" height="15.0" fill="rgb(240,156,30)" rx="2" ry="2" />
<text  x="87.63" y="287.5" ></text>
</g>
<g >
<title>std::move&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%)</title><rect x="67.9" y="325" width="0.4" height="15.0" fill="rgb(237,118,15)" rx="2" ry="2" />
<text  x="70.88" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.03%)</title><rect x="593.3" y="469" width="0.4" height="15.0" fill="rgb(217,22,34)" rx="2" ry="2" />
<text  x="596.34" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="1189.2" y="741" width="0.4" height="15.0" fill="rgb(217,170,8)" rx="2" ry="2" />
<text  x="1192.24" y="751.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (3 samples, 0.10%)</title><rect x="75.5" y="357" width="1.1" height="15.0" fill="rgb(221,81,28)" rx="2" ry="2" />
<text  x="78.49" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="77.0" y="341" width="0.4" height="15.0" fill="rgb(235,85,12)" rx="2" ry="2" />
<text  x="80.02" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="111.3" y="277" width="0.4" height="15.0" fill="rgb(232,229,45)" rx="2" ry="2" />
<text  x="114.28" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="1152.3" y="613" width="0.4" height="15.0" fill="rgb(232,221,23)" rx="2" ry="2" />
<text  x="1155.30" y="623.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.03%)</title><rect x="668.3" y="549" width="0.4" height="15.0" fill="rgb(207,113,7)" rx="2" ry="2" />
<text  x="671.35" y="559.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (4 samples, 0.13%)</title><rect x="500.4" y="501" width="1.6" height="15.0" fill="rgb(229,39,35)" rx="2" ry="2" />
<text  x="503.43" y="511.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (2 samples, 0.06%)</title><rect x="16.1" y="533" width="0.8" height="15.0" fill="rgb(227,183,45)" rx="2" ry="2" />
<text  x="19.09" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (20 samples, 0.65%)</title><rect x="887.3" y="437" width="7.6" height="15.0" fill="rgb(228,47,34)" rx="2" ry="2" />
<text  x="890.29" y="447.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.26%)</title><rect x="824.8" y="549" width="3.1" height="15.0" fill="rgb(253,226,3)" rx="2" ry="2" />
<text  x="827.84" y="559.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (5 samples, 0.16%)</title><rect x="53.4" y="485" width="1.9" height="15.0" fill="rgb(213,168,13)" rx="2" ry="2" />
<text  x="56.41" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (4 samples, 0.13%)</title><rect x="95.3" y="341" width="1.5" height="15.0" fill="rgb(211,51,34)" rx="2" ry="2" />
<text  x="98.29" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (15 samples, 0.48%)</title><rect x="844.6" y="501" width="5.8" height="15.0" fill="rgb(226,36,12)" rx="2" ry="2" />
<text  x="847.64" y="511.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="174.1" y="437" width="0.4" height="15.0" fill="rgb(229,107,20)" rx="2" ry="2" />
<text  x="177.11" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (5 samples, 0.16%)</title><rect x="653.9" y="597" width="1.9" height="15.0" fill="rgb(239,5,8)" rx="2" ry="2" />
<text  x="656.88" y="607.5" ></text>
</g>
<g >
<title>seastar::(anonymous namespace)::thread_wake_task::run_and_dispose (1 samples, 0.03%)</title><rect x="633.3" y="613" width="0.4" height="15.0" fill="rgb(246,29,43)" rx="2" ry="2" />
<text  x="636.32" y="623.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.03%)</title><rect x="10.8" y="597" width="0.3" height="15.0" fill="rgb(240,227,3)" rx="2" ry="2" />
<text  x="13.76" y="607.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.06%)</title><rect x="534.3" y="517" width="0.8" height="15.0" fill="rgb(223,45,6)" rx="2" ry="2" />
<text  x="537.32" y="527.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="793.6" y="453" width="0.8" height="15.0" fill="rgb(253,120,45)" rx="2" ry="2" />
<text  x="796.62" y="463.5" ></text>
</g>
<g >
<title>frozen_mutation::unfreeze (1 samples, 0.03%)</title><rect x="174.9" y="549" width="0.4" height="15.0" fill="rgb(219,38,18)" rx="2" ry="2" />
<text  x="177.87" y="559.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%)</title><rect x="365.6" y="421" width="0.4" height="15.0" fill="rgb(214,164,44)" rx="2" ry="2" />
<text  x="368.64" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (8 samples, 0.26%)</title><rect x="74.0" y="437" width="3.0" height="15.0" fill="rgb(231,74,1)" rx="2" ry="2" />
<text  x="76.97" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (3 samples, 0.10%)</title><rect x="84.2" y="341" width="1.2" height="15.0" fill="rgb(228,88,19)" rx="2" ry="2" />
<text  x="87.25" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="64.1" y="325" width="0.3" height="15.0" fill="rgb(233,208,9)" rx="2" ry="2" />
<text  x="67.07" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%)</title><rect x="722.4" y="581" width="0.4" height="15.0" fill="rgb(214,206,22)" rx="2" ry="2" />
<text  x="725.42" y="591.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="56.8" y="325" width="0.4" height="15.0" fill="rgb(249,60,4)" rx="2" ry="2" />
<text  x="59.83" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%)</title><rect x="34.7" y="341" width="0.4" height="15.0" fill="rgb(205,132,37)" rx="2" ry="2" />
<text  x="37.75" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="109.0" y="373" width="0.4" height="15.0" fill="rgb(235,153,27)" rx="2" ry="2" />
<text  x="112.00" y="383.5" ></text>
</g>
<g >
<title>[[vdso]] (21 samples, 0.68%)</title><rect x="1158.4" y="725" width="8.0" height="15.0" fill="rgb(215,9,26)" rx="2" ry="2" />
<text  x="1161.40" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::use_statement, std::default_delete&lt;cql3::statements::raw::use_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="124.2" y="469" width="0.4" height="15.0" fill="rgb(225,122,0)" rx="2" ry="2" />
<text  x="127.23" y="479.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%)</title><rect x="128.8" y="709" width="0.4" height="15.0" fill="rgb(211,108,27)" rx="2" ry="2" />
<text  x="131.80" y="719.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="115.5" y="309" width="0.4" height="15.0" fill="rgb(212,26,53)" rx="2" ry="2" />
<text  x="118.47" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::get_deleter (1 samples, 0.03%)</title><rect x="69.4" y="421" width="0.4" height="15.0" fill="rgb(214,17,34)" rx="2" ry="2" />
<text  x="72.40" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%)</title><rect x="135.7" y="597" width="0.3" height="15.0" fill="rgb(215,200,4)" rx="2" ry="2" />
<text  x="138.65" y="607.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%)</title><rect x="48.5" y="341" width="0.3" height="15.0" fill="rgb(209,192,25)" rx="2" ry="2" />
<text  x="51.46" y="351.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%)</title><rect x="109.4" y="437" width="0.4" height="15.0" fill="rgb(211,84,21)" rx="2" ry="2" />
<text  x="112.38" y="447.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (6 samples, 0.19%)</title><rect x="838.2" y="597" width="2.3" height="15.0" fill="rgb(243,147,13)" rx="2" ry="2" />
<text  x="841.17" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="56.8" y="373" width="0.4" height="15.0" fill="rgb(225,109,16)" rx="2" ry="2" />
<text  x="59.83" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (15 samples, 0.48%)</title><rect x="1019.4" y="357" width="5.7" height="15.0" fill="rgb(224,39,39)" rx="2" ry="2" />
<text  x="1022.42" y="367.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="72.8" y="357" width="0.4" height="15.0" fill="rgb(240,27,12)" rx="2" ry="2" />
<text  x="75.83" y="367.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.03%)</title><rect x="135.3" y="629" width="0.4" height="15.0" fill="rgb(216,178,14)" rx="2" ry="2" />
<text  x="138.27" y="639.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (255 samples, 8.23%)</title><rect x="29.0" y="549" width="97.1" height="15.0" fill="rgb(211,137,14)" rx="2" ry="2" />
<text  x="32.04" y="559.5" >seastar::no..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%)</title><rect x="58.7" y="421" width="0.4" height="15.0" fill="rgb(215,48,10)" rx="2" ry="2" />
<text  x="61.74" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.16%)</title><rect x="700.7" y="597" width="1.9" height="15.0" fill="rgb(206,170,31)" rx="2" ry="2" />
<text  x="703.71" y="607.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.10%)</title><rect x="71.7" y="389" width="1.1" height="15.0" fill="rgb(239,5,32)" rx="2" ry="2" />
<text  x="74.68" y="399.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="137.9" y="709" width="0.4" height="15.0" fill="rgb(239,187,38)" rx="2" ry="2" />
<text  x="140.94" y="719.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%)</title><rect x="70.5" y="277" width="0.8" height="15.0" fill="rgb(214,135,41)" rx="2" ry="2" />
<text  x="73.54" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (5 samples, 0.16%)</title><rect x="749.5" y="565" width="1.9" height="15.0" fill="rgb(253,193,45)" rx="2" ry="2" />
<text  x="752.45" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (39 samples, 1.26%)</title><rect x="36.3" y="437" width="14.8" height="15.0" fill="rgb(222,140,37)" rx="2" ry="2" />
<text  x="39.27" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="60.3" y="373" width="0.7" height="15.0" fill="rgb(212,131,8)" rx="2" ry="2" />
<text  x="63.26" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="108.6" y="245" width="0.4" height="15.0" fill="rgb(238,42,7)" rx="2" ry="2" />
<text  x="111.62" y="255.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_state (1 samples, 0.03%)</title><rect x="25.2" y="517" width="0.4" height="15.0" fill="rgb(207,89,0)" rx="2" ry="2" />
<text  x="28.23" y="527.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="851.5" y="469" width="0.4" height="15.0" fill="rgb(242,26,18)" rx="2" ry="2" />
<text  x="854.50" y="479.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.13%)</title><rect x="1156.5" y="741" width="1.5" height="15.0" fill="rgb(254,193,52)" rx="2" ry="2" />
<text  x="1159.49" y="751.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="61.0" y="389" width="0.4" height="15.0" fill="rgb(242,124,0)" rx="2" ry="2" />
<text  x="64.02" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (6 samples, 0.19%)</title><rect x="312.3" y="421" width="2.3" height="15.0" fill="rgb(224,193,50)" rx="2" ry="2" />
<text  x="315.33" y="431.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (8 samples, 0.26%)</title><rect x="88.1" y="341" width="3.0" height="15.0" fill="rgb(234,214,19)" rx="2" ry="2" />
<text  x="91.06" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.06%)</title><rect x="1141.6" y="597" width="0.8" height="15.0" fill="rgb(211,50,51)" rx="2" ry="2" />
<text  x="1144.64" y="607.5" ></text>
</g>
<g >
<title>database::has_keyspace (4 samples, 0.13%)</title><rect x="834.7" y="549" width="1.6" height="15.0" fill="rgb(223,23,39)" rx="2" ry="2" />
<text  x="837.74" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%)</title><rect x="240.0" y="549" width="1.5" height="15.0" fill="rgb(229,81,26)" rx="2" ry="2" />
<text  x="242.98" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.29%)</title><rect x="954.7" y="453" width="3.4" height="15.0" fill="rgb(250,47,3)" rx="2" ry="2" />
<text  x="957.69" y="463.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;ser::buffer_view&lt;bytes_ostream::fragment_iterator&gt; &gt; (2 samples, 0.06%)</title><rect x="1100.1" y="421" width="0.8" height="15.0" fill="rgb(213,189,1)" rx="2" ry="2" />
<text  x="1103.14" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="112.0" y="373" width="0.4" height="15.0" fill="rgb(244,159,45)" rx="2" ry="2" />
<text  x="115.05" y="383.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (1 samples, 0.03%)</title><rect x="655.0" y="565" width="0.4" height="15.0" fill="rgb(227,179,45)" rx="2" ry="2" />
<text  x="658.02" y="575.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="152.8" y="597" width="0.4" height="15.0" fill="rgb(216,138,40)" rx="2" ry="2" />
<text  x="155.79" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="65.2" y="389" width="0.8" height="15.0" fill="rgb(247,110,54)" rx="2" ry="2" />
<text  x="68.21" y="399.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="66.0" y="293" width="0.4" height="15.0" fill="rgb(220,36,11)" rx="2" ry="2" />
<text  x="68.97" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%)</title><rect x="98.7" y="389" width="0.4" height="15.0" fill="rgb(226,190,20)" rx="2" ry="2" />
<text  x="101.72" y="399.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (1 samples, 0.03%)</title><rect x="497.0" y="549" width="0.4" height="15.0" fill="rgb(230,42,23)" rx="2" ry="2" />
<text  x="500.00" y="559.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (1 samples, 0.03%)</title><rect x="165.7" y="581" width="0.4" height="15.0" fill="rgb(244,142,42)" rx="2" ry="2" />
<text  x="168.73" y="591.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.10%)</title><rect x="791.3" y="453" width="1.2" height="15.0" fill="rgb(246,142,25)" rx="2" ry="2" />
<text  x="794.34" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (4 samples, 0.13%)</title><rect x="95.3" y="245" width="1.5" height="15.0" fill="rgb(253,173,12)" rx="2" ry="2" />
<text  x="98.29" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%)</title><rect x="62.2" y="453" width="0.3" height="15.0" fill="rgb(233,148,42)" rx="2" ry="2" />
<text  x="65.17" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="61.0" y="421" width="0.4" height="15.0" fill="rgb(237,26,30)" rx="2" ry="2" />
<text  x="64.02" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%)</title><rect x="97.2" y="357" width="0.4" height="15.0" fill="rgb(241,68,24)" rx="2" ry="2" />
<text  x="100.20" y="367.5" ></text>
</g>
<g >
<title>database::find_schema (13 samples, 0.42%)</title><rect x="813.8" y="501" width="5.0" height="15.0" fill="rgb(253,17,32)" rx="2" ry="2" />
<text  x="816.80" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_deallocate_node (2 samples, 0.06%)</title><rect x="25.6" y="437" width="0.8" height="15.0" fill="rgb(213,79,42)" rx="2" ry="2" />
<text  x="28.61" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (1 samples, 0.03%)</title><rect x="850.7" y="405" width="0.4" height="15.0" fill="rgb(233,42,27)" rx="2" ry="2" />
<text  x="853.74" y="415.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="1154.2" y="581" width="0.4" height="15.0" fill="rgb(220,100,48)" rx="2" ry="2" />
<text  x="1157.21" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="95.7" y="133" width="0.4" height="15.0" fill="rgb(246,54,44)" rx="2" ry="2" />
<text  x="98.67" y="143.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%)</title><rect x="470.3" y="501" width="0.4" height="15.0" fill="rgb(249,62,11)" rx="2" ry="2" />
<text  x="473.35" y="511.5" ></text>
</g>
<g >
<title>mutation::data::data (1 samples, 0.03%)</title><rect x="173.7" y="501" width="0.4" height="15.0" fill="rgb(214,148,48)" rx="2" ry="2" />
<text  x="176.73" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor::rename_file (1 samples, 0.03%)</title><rect x="634.8" y="565" width="0.4" height="15.0" fill="rgb(231,25,14)" rx="2" ry="2" />
<text  x="637.84" y="575.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (2 samples, 0.06%)</title><rect x="1094.4" y="517" width="0.8" height="15.0" fill="rgb(209,217,30)" rx="2" ry="2" />
<text  x="1097.43" y="527.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="68.3" y="373" width="0.3" height="15.0" fill="rgb(239,70,41)" rx="2" ry="2" />
<text  x="71.26" y="383.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.03%)</title><rect x="174.1" y="565" width="0.4" height="15.0" fill="rgb(226,45,27)" rx="2" ry="2" />
<text  x="177.11" y="575.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (116 samples, 3.74%)</title><rect x="58.4" y="485" width="44.1" height="15.0" fill="rgb(249,28,34)" rx="2" ry="2" />
<text  x="61.36" y="495.5" >cql3..</text>
</g>
<g >
<title>operator new (3 samples, 0.10%)</title><rect x="80.8" y="373" width="1.2" height="15.0" fill="rgb(226,30,5)" rx="2" ry="2" />
<text  x="83.82" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (8 samples, 0.26%)</title><rect x="98.3" y="405" width="3.1" height="15.0" fill="rgb(228,121,18)" rx="2" ry="2" />
<text  x="101.34" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_table_statement::raw_statement, std::default_delete&lt;cql3::statements::create_table_statement::raw_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="121.6" y="501" width="0.3" height="15.0" fill="rgb(251,162,20)" rx="2" ry="2" />
<text  x="124.57" y="511.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (4 samples, 0.13%)</title><rect x="331.4" y="373" width="1.5" height="15.0" fill="rgb(215,37,39)" rx="2" ry="2" />
<text  x="334.37" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="66.7" y="101" width="0.4" height="15.0" fill="rgb(224,78,52)" rx="2" ry="2" />
<text  x="69.73" y="111.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="294.4" y="453" width="0.4" height="15.0" fill="rgb(240,106,7)" rx="2" ry="2" />
<text  x="297.43" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="96.4" y="213" width="0.4" height="15.0" fill="rgb(212,97,9)" rx="2" ry="2" />
<text  x="99.43" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%)</title><rect x="572.8" y="485" width="0.7" height="15.0" fill="rgb(208,25,23)" rx="2" ry="2" />
<text  x="575.78" y="495.5" ></text>
</g>
<g >
<title>table::do_add_sstable (1 samples, 0.03%)</title><rect x="728.1" y="517" width="0.4" height="15.0" fill="rgb(213,76,45)" rx="2" ry="2" />
<text  x="731.13" y="527.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (2 samples, 0.06%)</title><rect x="174.5" y="565" width="0.8" height="15.0" fill="rgb(240,21,21)" rx="2" ry="2" />
<text  x="177.49" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%)</title><rect x="99.1" y="181" width="0.8" height="15.0" fill="rgb(221,152,22)" rx="2" ry="2" />
<text  x="102.10" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::reset (1 samples, 0.03%)</title><rect x="123.5" y="485" width="0.3" height="15.0" fill="rgb(251,207,2)" rx="2" ry="2" />
<text  x="126.47" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::clear (1 samples, 0.03%)</title><rect x="24.1" y="469" width="0.4" height="15.0" fill="rgb(238,47,54)" rx="2" ry="2" />
<text  x="27.09" y="479.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="112.4" y="357" width="0.4" height="15.0" fill="rgb(227,20,43)" rx="2" ry="2" />
<text  x="115.43" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair (1 samples, 0.03%)</title><rect x="75.9" y="277" width="0.4" height="15.0" fill="rgb(240,65,49)" rx="2" ry="2" />
<text  x="78.87" y="287.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1 samples, 0.03%)</title><rect x="141.7" y="629" width="0.4" height="15.0" fill="rgb(221,219,17)" rx="2" ry="2" />
<text  x="144.75" y="639.5" ></text>
</g>
<g >
<title>syscall-0 (2 samples, 0.06%)</title><rect x="1189.2" y="757" width="0.8" height="15.0" fill="rgb(221,133,40)" rx="2" ry="2" />
<text  x="1192.24" y="767.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%)</title><rect x="73.6" y="405" width="0.4" height="15.0" fill="rgb(213,29,23)" rx="2" ry="2" />
<text  x="76.59" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%)</title><rect x="99.1" y="229" width="0.8" height="15.0" fill="rgb(231,226,47)" rx="2" ry="2" />
<text  x="102.10" y="239.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_super (1 samples, 0.03%)</title><rect x="37.0" y="405" width="0.4" height="15.0" fill="rgb(210,113,39)" rx="2" ry="2" />
<text  x="40.03" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::has_eq_null (1 samples, 0.03%)</title><rect x="844.3" y="485" width="0.3" height="15.0" fill="rgb(211,87,22)" rx="2" ry="2" />
<text  x="847.26" y="495.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%)</title><rect x="135.3" y="645" width="0.4" height="15.0" fill="rgb(220,136,7)" rx="2" ry="2" />
<text  x="138.27" y="655.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="73.2" y="373" width="0.4" height="15.0" fill="rgb(225,158,9)" rx="2" ry="2" />
<text  x="76.21" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="94.1" y="149" width="0.4" height="15.0" fill="rgb(217,94,35)" rx="2" ry="2" />
<text  x="97.15" y="159.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (1 samples, 0.03%)</title><rect x="24.8" y="517" width="0.4" height="15.0" fill="rgb(231,28,44)" rx="2" ry="2" />
<text  x="27.85" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (1 samples, 0.03%)</title><rect x="143.6" y="629" width="0.4" height="15.0" fill="rgb(238,162,50)" rx="2" ry="2" />
<text  x="146.65" y="639.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.03%)</title><rect x="50.4" y="373" width="0.3" height="15.0" fill="rgb(223,211,37)" rx="2" ry="2" />
<text  x="53.36" y="383.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="94.1" y="245" width="0.8" height="15.0" fill="rgb(209,155,8)" rx="2" ry="2" />
<text  x="97.15" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="99.9" y="357" width="0.3" height="15.0" fill="rgb(209,119,53)" rx="2" ry="2" />
<text  x="102.86" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.03%)</title><rect x="1137.8" y="581" width="0.4" height="15.0" fill="rgb(229,119,20)" rx="2" ry="2" />
<text  x="1140.83" y="591.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%)</title><rect x="108.6" y="437" width="0.8" height="15.0" fill="rgb(249,39,1)" rx="2" ry="2" />
<text  x="111.62" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%)</title><rect x="116.2" y="357" width="0.4" height="15.0" fill="rgb(205,97,26)" rx="2" ry="2" />
<text  x="119.23" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (2 samples, 0.06%)</title><rect x="921.2" y="517" width="0.7" height="15.0" fill="rgb(232,151,49)" rx="2" ry="2" />
<text  x="924.18" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="108.6" y="293" width="0.4" height="15.0" fill="rgb(207,31,43)" rx="2" ry="2" />
<text  x="111.62" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (1 samples, 0.03%)</title><rect x="844.3" y="453" width="0.3" height="15.0" fill="rgb(211,206,36)" rx="2" ry="2" />
<text  x="847.26" y="463.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="109.0" y="277" width="0.4" height="15.0" fill="rgb(242,220,16)" rx="2" ry="2" />
<text  x="112.00" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (23 samples, 0.74%)</title><rect x="685.1" y="613" width="8.8" height="15.0" fill="rgb(215,174,2)" rx="2" ry="2" />
<text  x="688.10" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%)</title><rect x="66.7" y="309" width="0.4" height="15.0" fill="rgb(224,160,34)" rx="2" ry="2" />
<text  x="69.73" y="319.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.10%)</title><rect x="62.9" y="453" width="1.2" height="15.0" fill="rgb(238,65,9)" rx="2" ry="2" />
<text  x="65.93" y="463.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.16%)</title><rect x="113.9" y="389" width="2.0" height="15.0" fill="rgb(211,189,1)" rx="2" ry="2" />
<text  x="116.95" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="95.7" y="69" width="0.4" height="15.0" fill="rgb(236,102,41)" rx="2" ry="2" />
<text  x="98.67" y="79.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.29%)</title><rect x="805.4" y="453" width="3.5" height="15.0" fill="rgb(252,144,24)" rx="2" ry="2" />
<text  x="808.42" y="463.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.03%)</title><rect x="1104.7" y="437" width="0.4" height="15.0" fill="rgb(214,96,54)" rx="2" ry="2" />
<text  x="1107.71" y="447.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.03%)</title><rect x="1056.4" y="421" width="0.3" height="15.0" fill="rgb(247,217,6)" rx="2" ry="2" />
<text  x="1059.35" y="431.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%)</title><rect x="116.2" y="389" width="0.4" height="15.0" fill="rgb(247,54,27)" rx="2" ry="2" />
<text  x="119.23" y="399.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (1 samples, 0.03%)</title><rect x="845.8" y="421" width="0.4" height="15.0" fill="rgb(236,107,32)" rx="2" ry="2" />
<text  x="848.79" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%)</title><rect x="113.6" y="421" width="0.3" height="15.0" fill="rgb(216,30,27)" rx="2" ry="2" />
<text  x="116.57" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="514.5" y="501" width="0.4" height="15.0" fill="rgb(230,206,45)" rx="2" ry="2" />
<text  x="517.52" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="125.0" y="517" width="0.4" height="15.0" fill="rgb(208,41,35)" rx="2" ry="2" />
<text  x="127.99" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.03%)</title><rect x="174.9" y="501" width="0.4" height="15.0" fill="rgb(244,208,43)" rx="2" ry="2" />
<text  x="177.87" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="794.0" y="437" width="0.4" height="15.0" fill="rgb(250,30,9)" rx="2" ry="2" />
<text  x="797.00" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="60.3" y="357" width="0.7" height="15.0" fill="rgb(232,201,49)" rx="2" ry="2" />
<text  x="63.26" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (4 samples, 0.13%)</title><rect x="53.8" y="453" width="1.5" height="15.0" fill="rgb(230,214,17)" rx="2" ry="2" />
<text  x="56.79" y="463.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%)</title><rect x="1052.2" y="453" width="1.9" height="15.0" fill="rgb(210,48,25)" rx="2" ry="2" />
<text  x="1055.16" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="127.7" y="549" width="0.3" height="15.0" fill="rgb(234,62,11)" rx="2" ry="2" />
<text  x="130.66" y="559.5" ></text>
</g>
<g >
<title>table::query (1,114 samples, 35.95%)</title><rect x="205.7" y="581" width="424.2" height="15.0" fill="rgb(254,3,40)" rx="2" ry="2" />
<text  x="208.71" y="591.5" >table::query</text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="137.9" y="693" width="0.4" height="15.0" fill="rgb(232,77,50)" rx="2" ry="2" />
<text  x="140.94" y="703.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.03%)</title><rect x="10.4" y="645" width="0.4" height="15.0" fill="rgb(211,228,22)" rx="2" ry="2" />
<text  x="13.38" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="593.0" y="453" width="0.3" height="15.0" fill="rgb(246,84,54)" rx="2" ry="2" />
<text  x="595.96" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (6 samples, 0.19%)</title><rect x="160.8" y="565" width="2.3" height="15.0" fill="rgb(215,204,24)" rx="2" ry="2" />
<text  x="163.78" y="575.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="177.2" y="613" width="0.7" height="15.0" fill="rgb(211,72,20)" rx="2" ry="2" />
<text  x="180.16" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="121.9" y="501" width="0.4" height="15.0" fill="rgb(241,85,20)" rx="2" ry="2" />
<text  x="124.95" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.03%)</title><rect x="323.4" y="405" width="0.4" height="15.0" fill="rgb(252,57,36)" rx="2" ry="2" />
<text  x="326.37" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="112.4" y="309" width="0.4" height="15.0" fill="rgb(216,199,5)" rx="2" ry="2" />
<text  x="115.43" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (9 samples, 0.29%)</title><rect x="93.4" y="405" width="3.4" height="15.0" fill="rgb(222,228,0)" rx="2" ry="2" />
<text  x="96.39" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="60.3" y="293" width="0.3" height="15.0" fill="rgb(218,1,31)" rx="2" ry="2" />
<text  x="63.26" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%)</title><rect x="106.3" y="309" width="0.4" height="15.0" fill="rgb(234,141,0)" rx="2" ry="2" />
<text  x="109.33" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%)</title><rect x="94.5" y="181" width="0.4" height="15.0" fill="rgb(205,157,18)" rx="2" ry="2" />
<text  x="97.53" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="110.1" y="357" width="0.4" height="15.0" fill="rgb(254,49,51)" rx="2" ry="2" />
<text  x="113.14" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (250 samples, 8.07%)</title><rect x="29.8" y="517" width="95.2" height="15.0" fill="rgb(252,173,40)" rx="2" ry="2" />
<text  x="32.80" y="527.5" >cql3_parser..</text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::invoke_on_all (1 samples, 0.03%)</title><rect x="127.7" y="565" width="0.3" height="15.0" fill="rgb(222,100,9)" rx="2" ry="2" />
<text  x="130.66" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="54.5" y="293" width="0.4" height="15.0" fill="rgb(220,208,2)" rx="2" ry="2" />
<text  x="57.55" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="110.1" y="245" width="0.4" height="15.0" fill="rgb(224,7,28)" rx="2" ry="2" />
<text  x="113.14" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.03%)</title><rect x="23.3" y="485" width="0.4" height="15.0" fill="rgb(217,165,21)" rx="2" ry="2" />
<text  x="26.33" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::use_statement, std::default_delete&lt;cql3::statements::raw::use_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%)</title><rect x="124.2" y="485" width="0.4" height="15.0" fill="rgb(240,1,42)" rx="2" ry="2" />
<text  x="127.23" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_destroy_nodes (2 samples, 0.06%)</title><rect x="25.6" y="453" width="0.8" height="15.0" fill="rgb(254,155,21)" rx="2" ry="2" />
<text  x="28.61" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="99.9" y="245" width="0.3" height="15.0" fill="rgb(225,71,2)" rx="2" ry="2" />
<text  x="102.86" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.10%)</title><rect x="70.2" y="357" width="1.1" height="15.0" fill="rgb(249,111,3)" rx="2" ry="2" />
<text  x="73.16" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="108.6" y="373" width="0.4" height="15.0" fill="rgb(208,60,43)" rx="2" ry="2" />
<text  x="111.62" y="383.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (7 samples, 0.23%)</title><rect x="66.4" y="421" width="2.6" height="15.0" fill="rgb(213,169,13)" rx="2" ry="2" />
<text  x="69.35" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, table::try_flush_memtable_to_sstable (1 samples, 0.03%)</title><rect x="728.1" y="613" width="0.4" height="15.0" fill="rgb(226,128,8)" rx="2" ry="2" />
<text  x="731.13" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="90.0" y="149" width="0.3" height="15.0" fill="rgb(214,210,27)" rx="2" ry="2" />
<text  x="92.96" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.03%)</title><rect x="626.8" y="565" width="0.4" height="15.0" fill="rgb(237,91,33)" rx="2" ry="2" />
<text  x="629.84" y="575.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (7 samples, 0.23%)</title><rect x="1153.4" y="629" width="2.7" height="15.0" fill="rgb(244,170,6)" rx="2" ry="2" />
<text  x="1156.45" y="639.5" ></text>
</g>
<g >
<title>sstables::sstable_set::insert (1 samples, 0.03%)</title><rect x="728.1" y="501" width="0.4" height="15.0" fill="rgb(230,224,21)" rx="2" ry="2" />
<text  x="731.13" y="511.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (2 samples, 0.06%)</title><rect x="1097.9" y="437" width="0.7" height="15.0" fill="rgb(248,218,31)" rx="2" ry="2" />
<text  x="1100.85" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%)</title><rect x="647.8" y="597" width="0.4" height="15.0" fill="rgb(236,92,9)" rx="2" ry="2" />
<text  x="650.79" y="607.5" ></text>
</g>
<g >
<title>abstract_type::decompose (1 samples, 0.03%)</title><rect x="18.4" y="453" width="0.4" height="15.0" fill="rgb(243,72,12)" rx="2" ry="2" />
<text  x="21.38" y="463.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%)</title><rect x="436.5" y="517" width="1.1" height="15.0" fill="rgb(245,220,0)" rx="2" ry="2" />
<text  x="439.46" y="527.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (721 samples, 23.27%)</title><rect x="843.5" y="613" width="274.5" height="15.0" fill="rgb(250,175,22)" rx="2" ry="2" />
<text  x="846.50" y="623.5" >seastar::lambda_task&lt;seastar::execut..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::raw::update_statement*, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%)</title><rect x="118.5" y="405" width="0.4" height="15.0" fill="rgb(239,105,33)" rx="2" ry="2" />
<text  x="121.52" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.10%)</title><rect x="55.7" y="405" width="1.1" height="15.0" fill="rgb(207,36,19)" rx="2" ry="2" />
<text  x="58.69" y="415.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.03%)</title><rect x="780.7" y="501" width="0.4" height="15.0" fill="rgb(248,8,42)" rx="2" ry="2" />
<text  x="783.67" y="511.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%)</title><rect x="634.8" y="549" width="0.4" height="15.0" fill="rgb(246,8,46)" rx="2" ry="2" />
<text  x="637.84" y="559.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.03%)</title><rect x="174.5" y="533" width="0.4" height="15.0" fill="rgb(212,31,48)" rx="2" ry="2" />
<text  x="177.49" y="543.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mIDENT (1 samples, 0.03%)</title><rect x="45.0" y="389" width="0.4" height="15.0" fill="rgb(210,195,4)" rx="2" ry="2" />
<text  x="48.03" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (1 samples, 0.03%)</title><rect x="127.7" y="373" width="0.3" height="15.0" fill="rgb(244,164,12)" rx="2" ry="2" />
<text  x="130.66" y="383.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.39%)</title><rect x="235.0" y="565" width="4.6" height="15.0" fill="rgb(222,26,7)" rx="2" ry="2" />
<text  x="238.03" y="575.5" ></text>
</g>
<g >
<title>database::query (69 samples, 2.23%)</title><rect x="1000.4" y="389" width="26.3" height="15.0" fill="rgb(237,159,8)" rx="2" ry="2" />
<text  x="1003.38" y="399.5" >d..</text>
</g>
<g >
<title>compound_type&lt; (3 samples, 0.10%)</title><rect x="851.9" y="469" width="1.1" height="15.0" fill="rgb(245,46,22)" rx="2" ry="2" />
<text  x="854.88" y="479.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (3 samples, 0.10%)</title><rect x="47.3" y="373" width="1.2" height="15.0" fill="rgb(252,13,14)" rx="2" ry="2" />
<text  x="50.32" y="383.5" ></text>
</g>
<g >
<title>__start_context (311 samples, 10.04%)</title><rect x="10.4" y="709" width="118.4" height="15.0" fill="rgb(219,101,14)" rx="2" ry="2" />
<text  x="13.38" y="719.5" >__start_context</text>
</g>
<g >
<title>operator delete (4 samples, 0.13%)</title><rect x="385.1" y="501" width="1.5" height="15.0" fill="rgb(244,165,21)" rx="2" ry="2" />
<text  x="388.06" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (41 samples, 1.32%)</title><rect x="102.5" y="469" width="15.6" height="15.0" fill="rgb(206,74,15)" rx="2" ry="2" />
<text  x="105.53" y="479.5" ></text>
</g>
<g >
<title>row::~row (2 samples, 0.06%)</title><rect x="297.5" y="437" width="0.7" height="15.0" fill="rgb(245,50,31)" rx="2" ry="2" />
<text  x="300.48" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="883.1" y="421" width="0.4" height="15.0" fill="rgb(251,106,47)" rx="2" ry="2" />
<text  x="886.10" y="431.5" ></text>
</g>
<g >
<title>boost::variant&lt;ser::live_cell_view, ser::expiring_cell_view, ser::dead_cell_view, ser::counter_cell_view, ser::unknown_variant_type&gt;::apply_visitor&lt;(anonymous namespace)::read_atomic_cell (3 samples, 0.10%)</title><rect x="1099.8" y="453" width="1.1" height="15.0" fill="rgb(225,123,46)" rx="2" ry="2" />
<text  x="1102.76" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%)</title><rect x="872.1" y="533" width="0.3" height="15.0" fill="rgb(232,59,43)" rx="2" ry="2" />
<text  x="875.06" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%)</title><rect x="1052.2" y="437" width="1.9" height="15.0" fill="rgb(237,17,6)" rx="2" ry="2" />
<text  x="1055.16" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (24 samples, 0.77%)</title><rect x="482.5" y="501" width="9.2" height="15.0" fill="rgb(248,42,18)" rx="2" ry="2" />
<text  x="485.53" y="511.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.16%)</title><rect x="869.8" y="533" width="1.9" height="15.0" fill="rgb(233,111,30)" rx="2" ry="2" />
<text  x="872.77" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="973.3" y="453" width="0.4" height="15.0" fill="rgb(233,129,0)" rx="2" ry="2" />
<text  x="976.34" y="463.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (352 samples, 11.36%)</title><rect x="258.6" y="517" width="134.1" height="15.0" fill="rgb(226,83,40)" rx="2" ry="2" />
<text  x="261.64" y="527.5" >merging_reader&lt;m..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="56.8" y="357" width="0.4" height="15.0" fill="rgb(246,44,13)" rx="2" ry="2" />
<text  x="59.83" y="367.5" ></text>
</g>
<g >
<title>abstract_type::from_string (1 samples, 0.03%)</title><rect x="16.5" y="485" width="0.4" height="15.0" fill="rgb(242,57,15)" rx="2" ry="2" />
<text  x="19.47" y="495.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;*, seastar::shared_ptr&lt;cql3::column_identifier&gt;*, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="127.7" y="245" width="0.3" height="15.0" fill="rgb(212,40,48)" rx="2" ry="2" />
<text  x="130.66" y="255.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="666.4" y="565" width="0.4" height="15.0" fill="rgb(241,167,6)" rx="2" ry="2" />
<text  x="669.44" y="575.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="65.6" y="293" width="0.4" height="15.0" fill="rgb(222,106,29)" rx="2" ry="2" />
<text  x="68.59" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (4 samples, 0.13%)</title><rect x="79.3" y="325" width="1.5" height="15.0" fill="rgb(247,39,0)" rx="2" ry="2" />
<text  x="82.30" y="335.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (22 samples, 0.71%)</title><rect x="905.2" y="485" width="8.4" height="15.0" fill="rgb(252,177,39)" rx="2" ry="2" />
<text  x="908.19" y="495.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (269 samples, 8.68%)</title><rect x="24.1" y="565" width="102.4" height="15.0" fill="rgb(216,97,41)" rx="2" ry="2" />
<text  x="27.09" y="575.5" >cql3::util::..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::deallocate (2 samples, 0.06%)</title><rect x="25.6" y="405" width="0.8" height="15.0" fill="rgb(227,26,17)" rx="2" ry="2" />
<text  x="28.61" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::begin (1 samples, 0.03%)</title><rect x="26.4" y="469" width="0.4" height="15.0" fill="rgb(246,173,36)" rx="2" ry="2" />
<text  x="29.37" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::expr::expression&gt;::new_allocator (1 samples, 0.03%)</title><rect x="110.1" y="165" width="0.4" height="15.0" fill="rgb(234,212,27)" rx="2" ry="2" />
<text  x="113.14" y="175.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,670 samples, 86.16%)</title><rect x="139.5" y="693" width="1016.6" height="15.0" fill="rgb(246,113,47)" rx="2" ry="2" />
<text  x="142.46" y="703.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="58.0" y="293" width="0.4" height="15.0" fill="rgb(217,145,3)" rx="2" ry="2" />
<text  x="60.98" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="844.3" y="405" width="0.3" height="15.0" fill="rgb(208,22,9)" rx="2" ry="2" />
<text  x="847.26" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="505.8" y="485" width="0.3" height="15.0" fill="rgb(234,73,44)" rx="2" ry="2" />
<text  x="508.76" y="495.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (10 samples, 0.32%)</title><rect x="78.2" y="389" width="3.8" height="15.0" fill="rgb(246,224,21)" rx="2" ry="2" />
<text  x="81.16" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.03%)</title><rect x="49.2" y="373" width="0.4" height="15.0" fill="rgb(224,165,24)" rx="2" ry="2" />
<text  x="52.22" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;frozen_schema  (1 samples, 0.03%)</title><rect x="174.1" y="533" width="0.4" height="15.0" fill="rgb(240,87,17)" rx="2" ry="2" />
<text  x="177.11" y="543.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%)</title><rect x="365.3" y="389" width="0.3" height="15.0" fill="rgb(251,92,8)" rx="2" ry="2" />
<text  x="368.26" y="399.5" ></text>
</g>
<g >
<title>frozen_mutation::partition (1 samples, 0.03%)</title><rect x="1096.3" y="469" width="0.4" height="15.0" fill="rgb(237,130,29)" rx="2" ry="2" />
<text  x="1099.33" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (6 samples, 0.19%)</title><rect x="32.5" y="325" width="2.2" height="15.0" fill="rgb(207,144,18)" rx="2" ry="2" />
<text  x="35.47" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="56.5" y="325" width="0.3" height="15.0" fill="rgb(221,152,41)" rx="2" ry="2" />
<text  x="59.45" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%)</title><rect x="88.4" y="277" width="0.4" height="15.0" fill="rgb(209,121,0)" rx="2" ry="2" />
<text  x="91.44" y="287.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%)</title><rect x="29.0" y="501" width="0.4" height="15.0" fill="rgb(252,225,15)" rx="2" ry="2" />
<text  x="32.04" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="107.1" y="389" width="0.4" height="15.0" fill="rgb(225,37,15)" rx="2" ry="2" />
<text  x="110.10" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="109.0" y="389" width="0.4" height="15.0" fill="rgb(228,2,20)" rx="2" ry="2" />
<text  x="112.00" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%)</title><rect x="80.8" y="357" width="1.2" height="15.0" fill="rgb(226,107,37)" rx="2" ry="2" />
<text  x="83.82" y="367.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.03%)</title><rect x="366.0" y="421" width="0.4" height="15.0" fill="rgb(249,90,39)" rx="2" ry="2" />
<text  x="369.02" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.03%)</title><rect x="135.7" y="613" width="0.3" height="15.0" fill="rgb(219,62,22)" rx="2" ry="2" />
<text  x="138.65" y="623.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::~shared_ptr (1 samples, 0.03%)</title><rect x="76.3" y="277" width="0.3" height="15.0" fill="rgb(224,23,6)" rx="2" ry="2" />
<text  x="79.25" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%)</title><rect x="653.1" y="597" width="0.8" height="15.0" fill="rgb(214,19,52)" rx="2" ry="2" />
<text  x="656.12" y="607.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="77.0" y="421" width="0.4" height="15.0" fill="rgb(238,43,40)" rx="2" ry="2" />
<text  x="80.02" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="66.7" y="261" width="0.4" height="15.0" fill="rgb(237,1,9)" rx="2" ry="2" />
<text  x="69.73" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%)</title><rect x="79.3" y="213" width="0.8" height="15.0" fill="rgb(248,53,10)" rx="2" ry="2" />
<text  x="82.30" y="223.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="110.1" y="405" width="0.4" height="15.0" fill="rgb(240,21,10)" rx="2" ry="2" />
<text  x="113.14" y="415.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (1 samples, 0.03%)</title><rect x="34.4" y="277" width="0.3" height="15.0" fill="rgb(251,43,26)" rx="2" ry="2" />
<text  x="37.37" y="287.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="883.1" y="437" width="0.4" height="15.0" fill="rgb(220,174,19)" rx="2" ry="2" />
<text  x="886.10" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (134 samples, 4.32%)</title><rect x="981.0" y="437" width="51.0" height="15.0" fill="rgb(240,84,38)" rx="2" ry="2" />
<text  x="983.96" y="447.5" >servi..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="61.0" y="325" width="0.4" height="15.0" fill="rgb(253,104,32)" rx="2" ry="2" />
<text  x="64.02" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="851.5" y="453" width="0.4" height="15.0" fill="rgb(225,12,16)" rx="2" ry="2" />
<text  x="854.50" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="79.3" y="181" width="0.4" height="15.0" fill="rgb(235,188,24)" rx="2" ry="2" />
<text  x="82.30" y="191.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (6 samples, 0.19%)</title><rect x="1090.2" y="533" width="2.3" height="15.0" fill="rgb(213,158,29)" rx="2" ry="2" />
<text  x="1093.24" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::drop_service_level_statement*, std::default_delete&lt;cql3::statements::drop_service_level_statement&gt; &gt; (1 samples, 0.03%)</title><rect x="122.3" y="453" width="0.4" height="15.0" fill="rgb(245,139,35)" rx="2" ry="2" />
<text  x="125.33" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="73.2" y="325" width="0.4" height="15.0" fill="rgb(239,58,31)" rx="2" ry="2" />
<text  x="76.21" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%)</title><rect x="110.9" y="405" width="0.4" height="15.0" fill="rgb(245,59,21)" rx="2" ry="2" />
<text  x="113.90" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="137.9" y="581" width="0.4" height="15.0" fill="rgb(239,140,5)" rx="2" ry="2" />
<text  x="140.94" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%)</title><rect x="115.5" y="357" width="0.4" height="15.0" fill="rgb(222,144,27)" rx="2" ry="2" />
<text  x="118.47" y="367.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%)</title><rect x="664.9" y="581" width="0.4" height="15.0" fill="rgb(229,201,39)" rx="2" ry="2" />
<text  x="667.92" y="591.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="65.6" y="277" width="0.4" height="15.0" fill="rgb(214,1,25)" rx="2" ry="2" />
<text  x="68.59" y="287.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%)</title><rect x="881.6" y="437" width="1.1" height="15.0" fill="rgb(208,51,0)" rx="2" ry="2" />
<text  x="884.58" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%)</title><rect x="64.8" y="405" width="0.4" height="15.0" fill="rgb(205,180,21)" rx="2" ry="2" />
<text  x="67.83" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_state (1 samples, 0.03%)</title><rect x="71.3" y="421" width="0.4" height="15.0" fill="rgb(245,154,6)" rx="2" ry="2" />
<text  x="74.30" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%)</title><rect x="94.9" y="341" width="0.4" height="15.0" fill="rgb(221,206,14)" rx="2" ry="2" />
<text  x="97.91" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="591.1" y="437" width="0.7" height="15.0" fill="rgb(227,20,37)" rx="2" ry="2" />
<text  x="594.05" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_keyspace_statement, std::default_delete&lt;cql3::statements::alter_keyspace_statement&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="119.3" y="501" width="0.4" height="15.0" fill="rgb(223,41,37)" rx="2" ry="2" />
<text  x="122.28" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (50 samples, 1.61%)</title><rect x="877.0" y="517" width="19.0" height="15.0" fill="rgb(224,214,45)" rx="2" ry="2" />
<text  x="880.01" y="527.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.03%)</title><rect x="850.7" y="437" width="0.4" height="15.0" fill="rgb(215,210,16)" rx="2" ry="2" />
<text  x="853.74" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.10%)</title><rect x="429.6" y="469" width="1.1" height="15.0" fill="rgb(217,38,17)" rx="2" ry="2" />
<text  x="432.61" y="479.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.03%)</title><rect x="1188.9" y="741" width="0.3" height="15.0" fill="rgb(217,143,27)" rx="2" ry="2" />
<text  x="1191.86" y="751.5" ></text>
</g>
<g >
<title>row::apply_monotonically (6 samples, 0.19%)</title><rect x="847.7" y="437" width="2.3" height="15.0" fill="rgb(230,24,3)" rx="2" ry="2" />
<text  x="850.69" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="66.7" y="53" width="0.4" height="15.0" fill="rgb(253,71,19)" rx="2" ry="2" />
<text  x="69.73" y="63.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="141.4" y="629" width="0.3" height="15.0" fill="rgb(247,186,27)" rx="2" ry="2" />
<text  x="144.36" y="639.5" ></text>
</g>
<g >
<title>memtable::evict_entry (1 samples, 0.03%)</title><rect x="135.3" y="677" width="0.4" height="15.0" fill="rgb(231,95,39)" rx="2" ry="2" />
<text  x="138.27" y="687.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (4 samples, 0.13%)</title><rect x="95.3" y="293" width="1.5" height="15.0" fill="rgb(252,92,23)" rx="2" ry="2" />
<text  x="98.29" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="90.7" y="245" width="0.4" height="15.0" fill="rgb(231,210,28)" rx="2" ry="2" />
<text  x="93.72" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::_S_relocate (1 samples, 0.03%)</title><rect x="127.7" y="277" width="0.3" height="15.0" fill="rgb(230,152,54)" rx="2" ry="2" />
<text  x="130.66" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_view_statement, std::default_delete&lt;cql3::statements::alter_view_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_view_statement&gt;, void&gt; (1 samples, 0.03%)</title><rect x="121.2" y="501" width="0.4" height="15.0" fill="rgb(249,52,47)" rx="2" ry="2" />
<text  x="124.18" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%)</title><rect x="92.2" y="197" width="0.4" height="15.0" fill="rgb(207,23,38)" rx="2" ry="2" />
<text  x="95.25" y="207.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (12 samples, 0.39%)</title><rect x="515.3" y="533" width="4.5" height="15.0" fill="rgb(221,208,16)" rx="2" ry="2" />
<text  x="518.28" y="543.5" ></text>
</g>
<g >
<title>std::__addressof&lt;__gnu_cxx::__aligned_membuf&lt;cql3::expr::untyped_constant&gt; &gt; (1 samples, 0.03%)</title><rect x="95.7" y="37" width="0.4" height="15.0" fill="rgb(233,220,12)" rx="2" ry="2" />
<text  x="98.67" y="47.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="94.5" y="213" width="0.4" height="15.0" fill="rgb(227,33,43)" rx="2" ry="2" />
<text  x="97.53" y="223.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::create_table_statement::raw_statement*, false&gt;::_M_head (1 samples, 0.03%)</title><rect x="121.6" y="437" width="0.3" height="15.0" fill="rgb(248,110,5)" rx="2" ry="2" />
<text  x="124.57" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="109.0" y="261" width="0.4" height="15.0" fill="rgb(247,51,52)" rx="2" ry="2" />
<text  x="112.00" y="271.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="69.0" y="405" width="0.4" height="15.0" fill="rgb(206,211,20)" rx="2" ry="2" />
<text  x="72.02" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (3 samples, 0.10%)</title><rect x="727.0" y="597" width="1.1" height="15.0" fill="rgb(224,85,14)" rx="2" ry="2" />
<text  x="729.99" y="607.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (257 samples, 8.29%)</title><rect x="396.9" y="549" width="97.8" height="15.0" fill="rgb(227,221,40)" rx="2" ry="2" />
<text  x="399.86" y="559.5" >query::cons..</text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%)</title><rect x="521.8" y="533" width="1.9" height="15.0" fill="rgb(214,51,17)" rx="2" ry="2" />
<text  x="524.75" y="543.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (78 samples, 2.52%)</title><rect x="782.2" y="501" width="29.7" height="15.0" fill="rgb(230,196,25)" rx="2" ry="2" />
<text  x="785.20" y="511.5" >se..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.10%)</title><rect x="53.8" y="389" width="1.1" height="15.0" fill="rgb(208,42,10)" rx="2" ry="2" />
<text  x="56.79" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (14 samples, 0.45%)</title><rect x="1107.4" y="405" width="5.3" height="15.0" fill="rgb(244,22,16)" rx="2" ry="2" />
<text  x="1110.37" y="415.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="1156.1" y="741" width="0.4" height="15.0" fill="rgb(220,84,10)" rx="2" ry="2" />
<text  x="1159.11" y="751.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%)</title><rect x="111.3" y="293" width="0.4" height="15.0" fill="rgb(248,223,24)" rx="2" ry="2" />
<text  x="114.28" y="303.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (2 samples, 0.06%)</title><rect x="321.5" y="405" width="0.7" height="15.0" fill="rgb(243,173,8)" rx="2" ry="2" />
<text  x="324.47" y="415.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (15 samples, 0.48%)</title><rect x="565.5" y="501" width="5.8" height="15.0" fill="rgb(213,137,15)" rx="2" ry="2" />
<text  x="568.54" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="73.6" y="389" width="0.4" height="15.0" fill="rgb(244,46,44)" rx="2" ry="2" />
<text  x="76.59" y="399.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%)</title><rect x="175.3" y="565" width="0.3" height="15.0" fill="rgb(217,207,52)" rx="2" ry="2" />
<text  x="178.25" y="575.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (343 samples, 11.07%)</title><rect x="943.3" y="485" width="130.6" height="15.0" fill="rgb(206,116,7)" rx="2" ry="2" />
<text  x="946.26" y="495.5" >service::storage..</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.10%)</title><rect x="106.0" y="405" width="1.1" height="15.0" fill="rgb(221,184,51)" rx="2" ry="2" />
<text  x="108.95" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.03%)</title><rect x="326.8" y="405" width="0.4" height="15.0" fill="rgb(214,166,27)" rx="2" ry="2" />
<text  x="329.80" y="415.5" ></text>
</g>
<g >
<title>std::addressof&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="72.4" y="181" width="0.4" height="15.0" fill="rgb(244,172,35)" rx="2" ry="2" />
<text  x="75.45" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="127.7" y="453" width="0.3" height="15.0" fill="rgb(231,21,37)" rx="2" ry="2" />
<text  x="130.66" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%)</title><rect x="1096.7" y="469" width="0.4" height="15.0" fill="rgb(227,47,5)" rx="2" ry="2" />
<text  x="1099.71" y="479.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (1 samples, 0.03%)</title><rect x="174.9" y="533" width="0.4" height="15.0" fill="rgb(253,192,35)" rx="2" ry="2" />
<text  x="177.87" y="543.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (4 samples, 0.13%)</title><rect x="726.6" y="613" width="1.5" height="15.0" fill="rgb(209,24,14)" rx="2" ry="2" />
<text  x="729.61" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%)</title><rect x="48.5" y="357" width="0.3" height="15.0" fill="rgb(229,97,36)" rx="2" ry="2" />
<text  x="51.46" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%)</title><rect x="35.5" y="357" width="0.4" height="15.0" fill="rgb(254,224,43)" rx="2" ry="2" />
<text  x="38.51" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="94.1" y="133" width="0.4" height="15.0" fill="rgb(246,29,39)" rx="2" ry="2" />
<text  x="97.15" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;query::result_set_row, std::allocator&lt;query::result_set_row&gt; &gt;::emplace_back&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, std::unordered_map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, query::non_null_data_value, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="175.6" y="469" width="0.4" height="15.0" fill="rgb(220,22,43)" rx="2" ry="2" />
<text  x="178.63" y="479.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.03%)</title><rect x="134.9" y="645" width="0.4" height="15.0" fill="rgb(205,136,38)" rx="2" ry="2" />
<text  x="137.89" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%)</title><rect x="83.9" y="309" width="0.3" height="15.0" fill="rgb(220,159,20)" rx="2" ry="2" />
<text  x="86.87" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (3 samples, 0.10%)</title><rect x="91.9" y="229" width="1.1" height="15.0" fill="rgb(249,132,34)" rx="2" ry="2" />
<text  x="94.87" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%)</title><rect x="1082.2" y="469" width="0.8" height="15.0" fill="rgb(217,127,3)" rx="2" ry="2" />
<text  x="1085.24" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.13%)</title><rect x="612.0" y="469" width="1.5" height="15.0" fill="rgb(231,196,22)" rx="2" ry="2" />
<text  x="614.99" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (9 samples, 0.29%)</title><rect x="918.5" y="533" width="3.4" height="15.0" fill="rgb(219,116,28)" rx="2" ry="2" />
<text  x="921.51" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="175.6" y="437" width="0.4" height="15.0" fill="rgb(223,91,32)" rx="2" ry="2" />
<text  x="178.63" y="447.5" ></text>
</g>
<g >
<title>dht::tri_compare (12 samples, 0.39%)</title><rect x="565.5" y="485" width="4.6" height="15.0" fill="rgb(252,194,35)" rx="2" ry="2" />
<text  x="568.54" y="495.5" ></text>
</g>
</g>
</svg>
