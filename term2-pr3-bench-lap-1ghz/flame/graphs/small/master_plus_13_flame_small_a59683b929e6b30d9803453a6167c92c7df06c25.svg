<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1974" onload="init(evt)" viewBox="0 0 1200 1974" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1974.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1957" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1957" > </text>
<g id="frames">
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="52.8" y="357" width="0.7" height="15.0" fill="rgb(250,1,43)" rx="2" ry="2" />
<text  x="55.80" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%)</title><rect x="67.6" y="405" width="0.3" height="15.0" fill="rgb(240,139,3)" rx="2" ry="2" />
<text  x="70.56" y="415.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (379 samples, 11.85%)</title><rect x="273.5" y="1685" width="139.8" height="15.0" fill="rgb(221,119,49)" rx="2" ry="2" />
<text  x="276.45" y="1695.5" >merging_reader&lt;mu..</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%)</title><rect x="73.8" y="357" width="0.4" height="15.0" fill="rgb(227,60,19)" rx="2" ry="2" />
<text  x="76.83" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%)</title><rect x="24.4" y="341" width="0.4" height="15.0" fill="rgb(226,75,9)" rx="2" ry="2" />
<text  x="27.39" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%)</title><rect x="87.9" y="501" width="0.3" height="15.0" fill="rgb(223,165,33)" rx="2" ry="2" />
<text  x="90.85" y="511.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%)</title><rect x="45.4" y="309" width="0.4" height="15.0" fill="rgb(251,47,54)" rx="2" ry="2" />
<text  x="48.42" y="319.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, column_definition const*, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="141.0" y="1445" width="0.4" height="15.0" fill="rgb(207,180,46)" rx="2" ry="2" />
<text  x="143.99" y="1455.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.03%)</title><rect x="44.3" y="373" width="0.4" height="15.0" fill="rgb(212,14,40)" rx="2" ry="2" />
<text  x="47.32" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="73.5" y="133" width="0.3" height="15.0" fill="rgb(244,52,33)" rx="2" ry="2" />
<text  x="76.46" y="143.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="74.9" y="437" width="0.4" height="15.0" fill="rgb(228,147,21)" rx="2" ry="2" />
<text  x="77.94" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="96.3" y="405" width="0.4" height="15.0" fill="rgb(223,169,39)" rx="2" ry="2" />
<text  x="99.34" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.03%)</title><rect x="184.5" y="1621" width="0.4" height="15.0" fill="rgb(240,87,15)" rx="2" ry="2" />
<text  x="187.53" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.03%)</title><rect x="249.8" y="1621" width="0.4" height="15.0" fill="rgb(212,80,24)" rx="2" ry="2" />
<text  x="252.84" y="1631.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (7 samples, 0.22%)</title><rect x="101.1" y="1637" width="2.6" height="15.0" fill="rgb(253,140,34)" rx="2" ry="2" />
<text  x="104.14" y="1647.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (1 samples, 0.03%)</title><rect x="20.3" y="165" width="0.4" height="15.0" fill="rgb(240,130,37)" rx="2" ry="2" />
<text  x="23.33" y="175.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (64 samples, 2.00%)</title><rect x="17.0" y="373" width="23.6" height="15.0" fill="rgb(236,154,47)" rx="2" ry="2" />
<text  x="20.01" y="383.5" >a..</text>
</g>
<g >
<title>operator new (9 samples, 0.28%)</title><rect x="756.1" y="1733" width="3.3" height="15.0" fill="rgb(217,219,23)" rx="2" ry="2" />
<text  x="759.08" y="1743.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="573.1" y="1653" width="0.3" height="15.0" fill="rgb(234,145,16)" rx="2" ry="2" />
<text  x="576.06" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="87.9" y="357" width="0.3" height="15.0" fill="rgb(210,140,13)" rx="2" ry="2" />
<text  x="90.85" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%)</title><rect x="98.9" y="741" width="0.4" height="15.0" fill="rgb(222,44,46)" rx="2" ry="2" />
<text  x="101.92" y="751.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%)</title><rect x="753.9" y="1685" width="1.1" height="15.0" fill="rgb(231,168,8)" rx="2" ry="2" />
<text  x="756.86" y="1695.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%)</title><rect x="56.1" y="405" width="0.4" height="15.0" fill="rgb(241,204,19)" rx="2" ry="2" />
<text  x="59.12" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (308 samples, 9.63%)</title><rect x="291.5" y="1653" width="113.7" height="15.0" fill="rgb(235,0,35)" rx="2" ry="2" />
<text  x="294.53" y="1663.5" >mutation_reade..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="99.3" y="757" width="0.4" height="15.0" fill="rgb(211,113,11)" rx="2" ry="2" />
<text  x="102.29" y="767.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="73.8" y="261" width="0.4" height="15.0" fill="rgb(207,176,20)" rx="2" ry="2" />
<text  x="76.83" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="60.2" y="229" width="0.4" height="15.0" fill="rgb(243,148,20)" rx="2" ry="2" />
<text  x="63.18" y="239.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (5 samples, 0.16%)</title><rect x="77.5" y="421" width="1.9" height="15.0" fill="rgb(211,61,5)" rx="2" ry="2" />
<text  x="80.52" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%)</title><rect x="98.9" y="757" width="0.4" height="15.0" fill="rgb(209,96,8)" rx="2" ry="2" />
<text  x="101.92" y="767.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%)</title><rect x="399.6" y="1573" width="1.2" height="15.0" fill="rgb(254,56,48)" rx="2" ry="2" />
<text  x="402.64" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (160 samples, 5.00%)</title><rect x="11.1" y="693" width="59.0" height="15.0" fill="rgb(235,130,45)" rx="2" ry="2" />
<text  x="14.11" y="703.5" >[unkno..</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%)</title><rect x="96.7" y="485" width="0.4" height="15.0" fill="rgb(253,26,51)" rx="2" ry="2" />
<text  x="99.71" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.03%)</title><rect x="63.1" y="325" width="0.4" height="15.0" fill="rgb(228,26,28)" rx="2" ry="2" />
<text  x="66.13" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="73.8" y="277" width="0.4" height="15.0" fill="rgb(243,50,41)" rx="2" ry="2" />
<text  x="76.83" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%)</title><rect x="714.8" y="1749" width="0.7" height="15.0" fill="rgb(215,212,52)" rx="2" ry="2" />
<text  x="717.75" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="74.9" y="389" width="0.4" height="15.0" fill="rgb(253,63,11)" rx="2" ry="2" />
<text  x="77.94" y="399.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.03%)</title><rect x="207.4" y="1733" width="0.4" height="15.0" fill="rgb(205,211,1)" rx="2" ry="2" />
<text  x="210.40" y="1743.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="111.8" y="1397" width="0.4" height="15.0" fill="rgb(230,120,32)" rx="2" ry="2" />
<text  x="114.84" y="1407.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="138.0" y="1461" width="0.4" height="15.0" fill="rgb(216,216,7)" rx="2" ry="2" />
<text  x="141.04" y="1471.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="44.7" y="213" width="0.4" height="15.0" fill="rgb(248,72,8)" rx="2" ry="2" />
<text  x="47.68" y="223.5" ></text>
</g>
<g >
<title>do_cql_test (2 samples, 0.06%)</title><rect x="96.3" y="725" width="0.8" height="15.0" fill="rgb(217,41,41)" rx="2" ry="2" />
<text  x="99.34" y="735.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%)</title><rect x="134.3" y="1429" width="0.4" height="15.0" fill="rgb(210,207,27)" rx="2" ry="2" />
<text  x="137.35" y="1439.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="141.0" y="1589" width="0.4" height="15.0" fill="rgb(206,117,25)" rx="2" ry="2" />
<text  x="143.99" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_S_relocate (1 samples, 0.03%)</title><rect x="139.9" y="1573" width="0.4" height="15.0" fill="rgb(247,204,25)" rx="2" ry="2" />
<text  x="142.88" y="1583.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 1.38%)</title><rect x="1172.7" y="1893" width="16.2" height="15.0" fill="rgb(232,145,36)" rx="2" ry="2" />
<text  x="1175.66" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="70.9" y="325" width="0.4" height="15.0" fill="rgb(245,168,54)" rx="2" ry="2" />
<text  x="73.88" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%)</title><rect x="96.7" y="533" width="0.4" height="15.0" fill="rgb(235,122,33)" rx="2" ry="2" />
<text  x="99.71" y="543.5" ></text>
</g>
<g >
<title>row_cache::make_reader (36 samples, 1.13%)</title><rect x="632.8" y="1669" width="13.3" height="15.0" fill="rgb(211,78,14)" rx="2" ry="2" />
<text  x="635.84" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::max_size (1 samples, 0.03%)</title><rect x="24.0" y="293" width="0.4" height="15.0" fill="rgb(220,102,12)" rx="2" ry="2" />
<text  x="27.02" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="66.8" y="325" width="0.4" height="15.0" fill="rgb(205,172,23)" rx="2" ry="2" />
<text  x="69.82" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (12 samples, 0.38%)</title><rect x="81.6" y="581" width="4.4" height="15.0" fill="rgb(243,214,32)" rx="2" ry="2" />
<text  x="84.58" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (2 samples, 0.06%)</title><rect x="121.1" y="1493" width="0.7" height="15.0" fill="rgb(242,205,26)" rx="2" ry="2" />
<text  x="124.06" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%)</title><rect x="96.3" y="565" width="0.4" height="15.0" fill="rgb(230,213,45)" rx="2" ry="2" />
<text  x="99.34" y="575.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="153.2" y="1717" width="0.3" height="15.0" fill="rgb(243,152,6)" rx="2" ry="2" />
<text  x="156.16" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="71.3" y="277" width="0.3" height="15.0" fill="rgb(213,99,18)" rx="2" ry="2" />
<text  x="74.25" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="137.3" y="1445" width="0.4" height="15.0" fill="rgb(212,77,20)" rx="2" ry="2" />
<text  x="140.30" y="1455.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (10 samples, 0.31%)</title><rect x="208.1" y="1733" width="3.7" height="15.0" fill="rgb(232,93,0)" rx="2" ry="2" />
<text  x="211.14" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="118.5" y="1413" width="0.3" height="15.0" fill="rgb(216,183,45)" rx="2" ry="2" />
<text  x="121.48" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.03%)</title><rect x="55.8" y="325" width="0.3" height="15.0" fill="rgb(245,33,44)" rx="2" ry="2" />
<text  x="58.75" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="59.1" y="261" width="0.3" height="15.0" fill="rgb(221,53,43)" rx="2" ry="2" />
<text  x="62.07" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="71.3" y="309" width="0.3" height="15.0" fill="rgb(219,21,16)" rx="2" ry="2" />
<text  x="74.25" y="319.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="105.2" y="1829" width="0.4" height="15.0" fill="rgb(233,65,49)" rx="2" ry="2" />
<text  x="108.20" y="1839.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="706.3" y="1733" width="0.7" height="15.0" fill="rgb(215,54,47)" rx="2" ry="2" />
<text  x="709.27" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="1020.6" y="1493" width="0.4" height="15.0" fill="rgb(250,0,19)" rx="2" ry="2" />
<text  x="1023.64" y="1503.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%)</title><rect x="595.6" y="1637" width="0.3" height="15.0" fill="rgb(244,208,15)" rx="2" ry="2" />
<text  x="598.57" y="1647.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (5 samples, 0.16%)</title><rect x="27.3" y="309" width="1.9" height="15.0" fill="rgb(213,69,52)" rx="2" ry="2" />
<text  x="30.34" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="109.6" y="1525" width="0.4" height="15.0" fill="rgb(210,64,48)" rx="2" ry="2" />
<text  x="112.62" y="1535.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%)</title><rect x="745.7" y="1749" width="0.4" height="15.0" fill="rgb(229,14,9)" rx="2" ry="2" />
<text  x="748.75" y="1759.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (17 samples, 0.53%)</title><rect x="1104.8" y="1605" width="6.2" height="15.0" fill="rgb(220,176,12)" rx="2" ry="2" />
<text  x="1107.77" y="1615.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="76.8" y="405" width="0.4" height="15.0" fill="rgb(215,35,47)" rx="2" ry="2" />
<text  x="79.79" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="541.3" y="1669" width="0.8" height="15.0" fill="rgb(234,50,6)" rx="2" ry="2" />
<text  x="544.33" y="1679.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.09%)</title><rect x="620.3" y="1637" width="1.1" height="15.0" fill="rgb(236,94,9)" rx="2" ry="2" />
<text  x="623.29" y="1647.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="105.9" y="1845" width="0.4" height="15.0" fill="rgb(234,57,30)" rx="2" ry="2" />
<text  x="108.93" y="1855.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="72.4" y="293" width="0.3" height="15.0" fill="rgb(249,160,37)" rx="2" ry="2" />
<text  x="75.36" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="45.1" y="197" width="0.3" height="15.0" fill="rgb(210,173,31)" rx="2" ry="2" />
<text  x="48.05" y="207.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1509" width="88.6" height="15.0" fill="rgb(252,206,34)" rx="2" ry="2" />
<text  x="14.11" y="1519.5" >[unknown]</text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="114.8" y="1477" width="0.4" height="15.0" fill="rgb(228,44,3)" rx="2" ry="2" />
<text  x="117.79" y="1487.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="74.9" y="517" width="0.4" height="15.0" fill="rgb(244,3,36)" rx="2" ry="2" />
<text  x="77.94" y="527.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (97 samples, 3.03%)</title><rect x="14.8" y="501" width="35.8" height="15.0" fill="rgb(215,87,12)" rx="2" ry="2" />
<text  x="17.80" y="511.5" >cql..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::maybe_reclaim (1 samples, 0.03%)</title><rect x="250.2" y="1621" width="0.4" height="15.0" fill="rgb(241,157,42)" rx="2" ry="2" />
<text  x="253.21" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (4 samples, 0.13%)</title><rect x="27.7" y="277" width="1.5" height="15.0" fill="rgb(245,102,53)" rx="2" ry="2" />
<text  x="30.71" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (2 samples, 0.06%)</title><rect x="133.2" y="1605" width="0.8" height="15.0" fill="rgb(249,68,52)" rx="2" ry="2" />
<text  x="136.24" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.41%)</title><rect x="70.1" y="677" width="4.8" height="15.0" fill="rgb(240,101,46)" rx="2" ry="2" />
<text  x="73.14" y="687.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="115.2" y="1525" width="0.3" height="15.0" fill="rgb(233,87,18)" rx="2" ry="2" />
<text  x="118.16" y="1535.5" ></text>
</g>
<g >
<title>do_cql_test (21 samples, 0.66%)</title><rect x="62.4" y="613" width="7.7" height="15.0" fill="rgb(251,206,36)" rx="2" ry="2" />
<text  x="65.40" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="57.2" y="309" width="0.8" height="15.0" fill="rgb(245,194,22)" rx="2" ry="2" />
<text  x="60.23" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="124.0" y="1317" width="0.4" height="15.0" fill="rgb(231,1,26)" rx="2" ry="2" />
<text  x="127.02" y="1327.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1 samples, 0.03%)</title><rect x="30.7" y="181" width="0.3" height="15.0" fill="rgb(250,14,18)" rx="2" ry="2" />
<text  x="33.66" y="191.5" ></text>
</g>
<g >
<title>__start_context (13 samples, 0.41%)</title><rect x="70.1" y="709" width="4.8" height="15.0" fill="rgb(224,176,24)" rx="2" ry="2" />
<text  x="73.14" y="719.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (84 samples, 2.63%)</title><rect x="109.3" y="1765" width="31.0" height="15.0" fill="rgb(223,97,48)" rx="2" ry="2" />
<text  x="112.26" y="1775.5" >si..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.03%)</title><rect x="155.0" y="1781" width="0.4" height="15.0" fill="rgb(217,143,47)" rx="2" ry="2" />
<text  x="158.01" y="1791.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%)</title><rect x="42.5" y="389" width="0.7" height="15.0" fill="rgb(240,207,33)" rx="2" ry="2" />
<text  x="45.47" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="105.2" y="1509" width="0.4" height="15.0" fill="rgb(229,184,46)" rx="2" ry="2" />
<text  x="108.20" y="1519.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1 samples, 0.03%)</title><rect x="154.3" y="1781" width="0.3" height="15.0" fill="rgb(239,161,37)" rx="2" ry="2" />
<text  x="157.27" y="1791.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::~pair (1 samples, 0.03%)</title><rect x="75.3" y="309" width="0.4" height="15.0" fill="rgb(248,26,24)" rx="2" ry="2" />
<text  x="78.31" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="113.7" y="1477" width="0.4" height="15.0" fill="rgb(242,61,21)" rx="2" ry="2" />
<text  x="116.68" y="1487.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%)</title><rect x="691.1" y="1733" width="0.4" height="15.0" fill="rgb(251,111,29)" rx="2" ry="2" />
<text  x="694.14" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (6 samples, 0.19%)</title><rect x="67.9" y="421" width="2.2" height="15.0" fill="rgb(226,56,27)" rx="2" ry="2" />
<text  x="70.93" y="431.5" ></text>
</g>
<g >
<title>database::has_keyspace (4 samples, 0.13%)</title><rect x="848.3" y="1701" width="1.5" height="15.0" fill="rgb(217,102,19)" rx="2" ry="2" />
<text  x="851.32" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (4 samples, 0.13%)</title><rect x="97.1" y="757" width="1.5" height="15.0" fill="rgb(235,186,28)" rx="2" ry="2" />
<text  x="100.08" y="767.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="877.1" y="1685" width="0.4" height="15.0" fill="rgb(224,221,34)" rx="2" ry="2" />
<text  x="880.10" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="63.9" y="373" width="0.3" height="15.0" fill="rgb(252,219,14)" rx="2" ry="2" />
<text  x="66.87" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (90 samples, 2.81%)</title><rect x="16.6" y="437" width="33.2" height="15.0" fill="rgb(253,56,36)" rx="2" ry="2" />
<text  x="19.64" y="447.5" >cq..</text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (20 samples, 0.63%)</title><rect x="87.9" y="565" width="7.3" height="15.0" fill="rgb(205,2,9)" rx="2" ry="2" />
<text  x="90.85" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="125.9" y="1477" width="0.3" height="15.0" fill="rgb(250,108,24)" rx="2" ry="2" />
<text  x="128.86" y="1487.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (5 samples, 0.16%)</title><rect x="528.0" y="1637" width="1.9" height="15.0" fill="rgb(208,148,37)" rx="2" ry="2" />
<text  x="531.05" y="1647.5" ></text>
</g>
<g >
<title>timerfd_settime (1 samples, 0.03%)</title><rect x="1155.3" y="1701" width="0.4" height="15.0" fill="rgb(243,129,50)" rx="2" ry="2" />
<text  x="1158.32" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (4 samples, 0.13%)</title><rect x="21.8" y="197" width="1.5" height="15.0" fill="rgb(211,101,44)" rx="2" ry="2" />
<text  x="24.81" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%)</title><rect x="618.4" y="1621" width="0.4" height="15.0" fill="rgb(212,6,39)" rx="2" ry="2" />
<text  x="621.45" y="1631.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="151.3" y="1749" width="0.4" height="15.0" fill="rgb(230,125,35)" rx="2" ry="2" />
<text  x="154.32" y="1759.5" ></text>
</g>
<g >
<title>make_flat_multi_range_reader (1 samples, 0.03%)</title><rect x="182.3" y="1621" width="0.4" height="15.0" fill="rgb(233,163,52)" rx="2" ry="2" />
<text  x="185.31" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (13 samples, 0.41%)</title><rect x="52.1" y="437" width="4.8" height="15.0" fill="rgb(248,136,40)" rx="2" ry="2" />
<text  x="55.06" y="447.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (2 samples, 0.06%)</title><rect x="104.5" y="1621" width="0.7" height="15.0" fill="rgb(252,119,47)" rx="2" ry="2" />
<text  x="107.46" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%)</title><rect x="73.8" y="421" width="0.4" height="15.0" fill="rgb(250,20,29)" rx="2" ry="2" />
<text  x="76.83" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="120.7" y="1493" width="0.4" height="15.0" fill="rgb(233,169,10)" rx="2" ry="2" />
<text  x="123.69" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1045" width="88.6" height="15.0" fill="rgb(226,68,4)" rx="2" ry="2" />
<text  x="14.11" y="1055.5" >[unknown]</text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%)</title><rect x="70.1" y="485" width="0.4" height="15.0" fill="rgb(210,7,39)" rx="2" ry="2" />
<text  x="73.14" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="55.0" y="309" width="0.4" height="15.0" fill="rgb(242,131,26)" rx="2" ry="2" />
<text  x="58.02" y="319.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (1 samples, 0.03%)</title><rect x="185.6" y="1765" width="0.4" height="15.0" fill="rgb(231,81,46)" rx="2" ry="2" />
<text  x="188.63" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_S_do_relocate (1 samples, 0.03%)</title><rect x="139.9" y="1557" width="0.4" height="15.0" fill="rgb(229,37,17)" rx="2" ry="2" />
<text  x="142.88" y="1567.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="151.3" y="1541" width="0.4" height="15.0" fill="rgb(248,126,38)" rx="2" ry="2" />
<text  x="154.32" y="1551.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%)</title><rect x="207.8" y="1733" width="0.3" height="15.0" fill="rgb(253,187,5)" rx="2" ry="2" />
<text  x="210.77" y="1743.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (1 samples, 0.03%)</title><rect x="926.2" y="1669" width="0.3" height="15.0" fill="rgb(208,184,33)" rx="2" ry="2" />
<text  x="929.18" y="1679.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (14 samples, 0.44%)</title><rect x="626.2" y="1653" width="5.2" height="15.0" fill="rgb(253,210,53)" rx="2" ry="2" />
<text  x="629.20" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (3 samples, 0.09%)</title><rect x="97.4" y="645" width="1.2" height="15.0" fill="rgb(253,141,38)" rx="2" ry="2" />
<text  x="100.45" y="655.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (8 samples, 0.25%)</title><rect x="1094.1" y="1685" width="2.9" height="15.0" fill="rgb(241,146,43)" rx="2" ry="2" />
<text  x="1097.07" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.41%)</title><rect x="52.1" y="485" width="4.8" height="15.0" fill="rgb(224,129,32)" rx="2" ry="2" />
<text  x="55.06" y="495.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.03%)</title><rect x="183.4" y="1637" width="0.4" height="15.0" fill="rgb(216,225,3)" rx="2" ry="2" />
<text  x="186.42" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (21 samples, 0.66%)</title><rect x="350.6" y="1541" width="7.7" height="15.0" fill="rgb(220,114,12)" rx="2" ry="2" />
<text  x="353.57" y="1551.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (3 samples, 0.09%)</title><rect x="977.1" y="1573" width="1.1" height="15.0" fill="rgb(215,105,8)" rx="2" ry="2" />
<text  x="980.10" y="1583.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_state (1 samples, 0.03%)</title><rect x="86.7" y="581" width="0.4" height="15.0" fill="rgb(225,153,12)" rx="2" ry="2" />
<text  x="89.75" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%)</title><rect x="947.6" y="1605" width="2.6" height="15.0" fill="rgb(235,177,33)" rx="2" ry="2" />
<text  x="950.58" y="1615.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="686.0" y="1717" width="0.3" height="15.0" fill="rgb(247,124,49)" rx="2" ry="2" />
<text  x="688.97" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (61 samples, 1.91%)</title><rect x="109.6" y="1605" width="22.5" height="15.0" fill="rgb(249,32,12)" rx="2" ry="2" />
<text  x="112.62" y="1615.5" >c..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.03%)</title><rect x="105.2" y="1621" width="0.4" height="15.0" fill="rgb(231,21,5)" rx="2" ry="2" />
<text  x="108.20" y="1631.5" ></text>
</g>
<g >
<title>row::compact_and_expire (38 samples, 1.19%)</title><rect x="497.8" y="1669" width="14.0" height="15.0" fill="rgb(248,79,18)" rx="2" ry="2" />
<text  x="500.79" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="72.0" y="325" width="0.4" height="15.0" fill="rgb(248,54,28)" rx="2" ry="2" />
<text  x="74.99" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="65.0" y="277" width="0.3" height="15.0" fill="rgb(244,175,49)" rx="2" ry="2" />
<text  x="67.98" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::to_expression (1 samples, 0.03%)</title><rect x="85.3" y="501" width="0.3" height="15.0" fill="rgb(223,115,32)" rx="2" ry="2" />
<text  x="88.27" y="511.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="151.3" y="1397" width="0.4" height="15.0" fill="rgb(234,106,21)" rx="2" ry="2" />
<text  x="154.32" y="1407.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="52.1" y="373" width="0.3" height="15.0" fill="rgb(215,100,16)" rx="2" ry="2" />
<text  x="55.06" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (5 samples, 0.16%)</title><rect x="29.6" y="277" width="1.8" height="15.0" fill="rgb(233,64,7)" rx="2" ry="2" />
<text  x="32.56" y="287.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="631.4" y="1669" width="0.3" height="15.0" fill="rgb(249,211,36)" rx="2" ry="2" />
<text  x="634.36" y="1679.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (3 samples, 0.09%)</title><rect x="84.5" y="549" width="1.1" height="15.0" fill="rgb(233,84,38)" rx="2" ry="2" />
<text  x="87.53" y="559.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (44 samples, 1.38%)</title><rect x="80.1" y="645" width="16.2" height="15.0" fill="rgb(242,45,32)" rx="2" ry="2" />
<text  x="83.11" y="655.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.03%)</title><rect x="1085.2" y="1669" width="0.4" height="15.0" fill="rgb(217,0,46)" rx="2" ry="2" />
<text  x="1088.21" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.06%)</title><rect x="77.5" y="357" width="0.8" height="15.0" fill="rgb(221,83,32)" rx="2" ry="2" />
<text  x="80.52" y="367.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="112.2" y="1525" width="0.4" height="15.0" fill="rgb(249,201,9)" rx="2" ry="2" />
<text  x="115.21" y="1535.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%)</title><rect x="69.4" y="293" width="0.4" height="15.0" fill="rgb(217,215,5)" rx="2" ry="2" />
<text  x="72.41" y="303.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%)</title><rect x="99.3" y="885" width="0.4" height="15.0" fill="rgb(249,46,13)" rx="2" ry="2" />
<text  x="102.29" y="895.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%)</title><rect x="86.4" y="597" width="0.3" height="15.0" fill="rgb(219,18,4)" rx="2" ry="2" />
<text  x="89.38" y="607.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="52.1" y="405" width="0.3" height="15.0" fill="rgb(215,145,16)" rx="2" ry="2" />
<text  x="55.06" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (5 samples, 0.16%)</title><rect x="45.4" y="341" width="1.9" height="15.0" fill="rgb(224,54,38)" rx="2" ry="2" />
<text  x="48.42" y="351.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="66.8" y="277" width="0.4" height="15.0" fill="rgb(239,99,16)" rx="2" ry="2" />
<text  x="69.82" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="60.6" y="293" width="0.3" height="15.0" fill="rgb(241,43,20)" rx="2" ry="2" />
<text  x="63.55" y="303.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%)</title><rect x="98.6" y="725" width="0.3" height="15.0" fill="rgb(219,139,5)" rx="2" ry="2" />
<text  x="101.56" y="735.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (21 samples, 0.66%)</title><rect x="62.4" y="581" width="7.7" height="15.0" fill="rgb(205,147,18)" rx="2" ry="2" />
<text  x="65.40" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4 samples, 0.13%)</title><rect x="409.6" y="1653" width="1.5" height="15.0" fill="rgb(247,135,31)" rx="2" ry="2" />
<text  x="412.61" y="1663.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="85.6" y="565" width="0.4" height="15.0" fill="rgb(230,4,19)" rx="2" ry="2" />
<text  x="88.64" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (143 samples, 4.47%)</title><rect x="784.5" y="1701" width="52.8" height="15.0" fill="rgb(222,38,2)" rx="2" ry="2" />
<text  x="787.49" y="1711.5" >cql3:..</text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (3 samples, 0.09%)</title><rect x="496.7" y="1669" width="1.1" height="15.0" fill="rgb(242,223,9)" rx="2" ry="2" />
<text  x="499.69" y="1679.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (18 samples, 0.56%)</title><rect x="1104.8" y="1637" width="6.6" height="15.0" fill="rgb(230,87,16)" rx="2" ry="2" />
<text  x="1107.77" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%)</title><rect x="60.2" y="373" width="0.4" height="15.0" fill="rgb(243,194,14)" rx="2" ry="2" />
<text  x="63.18" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.03%)</title><rect x="107.4" y="1717" width="0.4" height="15.0" fill="rgb(239,36,9)" rx="2" ry="2" />
<text  x="110.41" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_roles_statement, std::default_delete&lt;cql3::statements::list_roles_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="93.8" y="549" width="0.3" height="15.0" fill="rgb(238,75,30)" rx="2" ry="2" />
<text  x="96.76" y="559.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (4 samples, 0.13%)</title><rect x="601.5" y="1637" width="1.5" height="15.0" fill="rgb(230,228,19)" rx="2" ry="2" />
<text  x="604.48" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::~shared_ptr (1 samples, 0.03%)</title><rect x="139.1" y="1605" width="0.4" height="15.0" fill="rgb(239,173,12)" rx="2" ry="2" />
<text  x="142.14" y="1615.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (2 samples, 0.06%)</title><rect x="107.8" y="1781" width="0.7" height="15.0" fill="rgb(227,130,14)" rx="2" ry="2" />
<text  x="110.78" y="1791.5" ></text>
</g>
<g >
<title>abstract_type::from_string (3 samples, 0.09%)</title><rect x="82.7" y="517" width="1.1" height="15.0" fill="rgb(224,62,29)" rx="2" ry="2" />
<text  x="85.69" y="527.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="121.8" y="1509" width="0.4" height="15.0" fill="rgb(229,62,4)" rx="2" ry="2" />
<text  x="124.80" y="1519.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%)</title><rect x="1084.8" y="1653" width="0.4" height="15.0" fill="rgb(252,155,33)" rx="2" ry="2" />
<text  x="1087.84" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%)</title><rect x="1138.0" y="1717" width="0.7" height="15.0" fill="rgb(209,146,25)" rx="2" ry="2" />
<text  x="1140.97" y="1727.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="55.8" y="293" width="0.3" height="15.0" fill="rgb(207,78,21)" rx="2" ry="2" />
<text  x="58.75" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="67.9" y="341" width="0.4" height="15.0" fill="rgb(212,0,35)" rx="2" ry="2" />
<text  x="70.93" y="351.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (47 samples, 1.47%)</title><rect x="515.9" y="1685" width="17.3" height="15.0" fill="rgb(210,116,53)" rx="2" ry="2" />
<text  x="518.87" y="1695.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;unsigned int&gt;::_Rb_tree_const_iterator (1 samples, 0.03%)</title><rect x="40.3" y="341" width="0.3" height="15.0" fill="rgb(234,45,27)" rx="2" ry="2" />
<text  x="43.26" y="351.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (2 samples, 0.06%)</title><rect x="838.7" y="1669" width="0.8" height="15.0" fill="rgb(226,139,21)" rx="2" ry="2" />
<text  x="841.73" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1653" width="88.6" height="15.0" fill="rgb(250,125,54)" rx="2" ry="2" />
<text  x="14.11" y="1663.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="71.6" y="389" width="0.4" height="15.0" fill="rgb(213,166,12)" rx="2" ry="2" />
<text  x="74.62" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="42.8" y="341" width="0.4" height="15.0" fill="rgb(225,110,11)" rx="2" ry="2" />
<text  x="45.84" y="351.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="344.7" y="1557" width="0.7" height="15.0" fill="rgb(235,118,10)" rx="2" ry="2" />
<text  x="347.67" y="1567.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.03%)</title><rect x="1085.6" y="1669" width="0.3" height="15.0" fill="rgb(246,153,21)" rx="2" ry="2" />
<text  x="1088.58" y="1679.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (7 samples, 0.22%)</title><rect x="894.4" y="1573" width="2.6" height="15.0" fill="rgb(234,67,29)" rx="2" ry="2" />
<text  x="897.45" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%)</title><rect x="123.6" y="1413" width="1.5" height="15.0" fill="rgb(216,149,18)" rx="2" ry="2" />
<text  x="126.65" y="1423.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (19 samples, 0.59%)</title><rect x="17.4" y="325" width="7.0" height="15.0" fill="rgb(209,217,16)" rx="2" ry="2" />
<text  x="20.38" y="335.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%)</title><rect x="141.0" y="1749" width="0.4" height="15.0" fill="rgb(254,40,30)" rx="2" ry="2" />
<text  x="143.99" y="1759.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%)</title><rect x="797.8" y="1669" width="2.2" height="15.0" fill="rgb(240,82,2)" rx="2" ry="2" />
<text  x="800.77" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="151.3" y="1637" width="0.4" height="15.0" fill="rgb(236,203,16)" rx="2" ry="2" />
<text  x="154.32" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (15 samples, 0.47%)</title><rect x="56.9" y="485" width="5.5" height="15.0" fill="rgb(230,1,44)" rx="2" ry="2" />
<text  x="59.86" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%)</title><rect x="667.9" y="1749" width="1.1" height="15.0" fill="rgb(248,156,52)" rx="2" ry="2" />
<text  x="670.89" y="1759.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="65.3" y="421" width="0.4" height="15.0" fill="rgb(218,63,17)" rx="2" ry="2" />
<text  x="68.35" y="431.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (2 samples, 0.06%)</title><rect x="96.3" y="661" width="0.8" height="15.0" fill="rgb(250,39,33)" rx="2" ry="2" />
<text  x="99.34" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (6 samples, 0.19%)</title><rect x="122.9" y="1461" width="2.2" height="15.0" fill="rgb(213,39,11)" rx="2" ry="2" />
<text  x="125.91" y="1471.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (4 samples, 0.13%)</title><rect x="15.2" y="421" width="1.4" height="15.0" fill="rgb(205,84,42)" rx="2" ry="2" />
<text  x="18.17" y="431.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (4 samples, 0.13%)</title><rect x="775.6" y="1653" width="1.5" height="15.0" fill="rgb(229,198,47)" rx="2" ry="2" />
<text  x="778.63" y="1663.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="914.4" y="1653" width="0.3" height="15.0" fill="rgb(221,206,53)" rx="2" ry="2" />
<text  x="917.37" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="111.8" y="1365" width="0.4" height="15.0" fill="rgb(249,62,16)" rx="2" ry="2" />
<text  x="114.84" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="124.0" y="1365" width="0.4" height="15.0" fill="rgb(225,27,20)" rx="2" ry="2" />
<text  x="127.02" y="1375.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%)</title><rect x="99.3" y="725" width="0.4" height="15.0" fill="rgb(224,59,53)" rx="2" ry="2" />
<text  x="102.29" y="735.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%)</title><rect x="128.4" y="1541" width="0.8" height="15.0" fill="rgb(246,197,51)" rx="2" ry="2" />
<text  x="131.44" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.03%)</title><rect x="68.3" y="405" width="0.4" height="15.0" fill="rgb(235,149,53)" rx="2" ry="2" />
<text  x="71.30" y="415.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (1 samples, 0.03%)</title><rect x="661.3" y="1765" width="0.3" height="15.0" fill="rgb(235,16,38)" rx="2" ry="2" />
<text  x="664.25" y="1775.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (1 samples, 0.03%)</title><rect x="633.9" y="1653" width="0.4" height="15.0" fill="rgb(208,212,4)" rx="2" ry="2" />
<text  x="636.95" y="1663.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="132.9" y="1381" width="0.3" height="15.0" fill="rgb(213,9,14)" rx="2" ry="2" />
<text  x="135.87" y="1391.5" ></text>
</g>
<g >
<title>__start_context (91 samples, 2.85%)</title><rect x="106.7" y="1861" width="33.6" height="15.0" fill="rgb(213,193,35)" rx="2" ry="2" />
<text  x="109.67" y="1871.5" >__..</text>
</g>
<g >
<title>schema::column_at (9 samples, 0.28%)</title><rect x="508.1" y="1621" width="3.3" height="15.0" fill="rgb(238,214,23)" rx="2" ry="2" />
<text  x="511.12" y="1631.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%)</title><rect x="72.0" y="437" width="0.4" height="15.0" fill="rgb(246,48,21)" rx="2" ry="2" />
<text  x="74.99" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::parsed_statement&gt;, void&gt; (1 samples, 0.03%)</title><rect x="50.2" y="437" width="0.4" height="15.0" fill="rgb(253,156,47)" rx="2" ry="2" />
<text  x="53.22" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (14 samples, 0.44%)</title><rect x="74.9" y="549" width="5.2" height="15.0" fill="rgb(247,24,53)" rx="2" ry="2" />
<text  x="77.94" y="559.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%)</title><rect x="389.7" y="1541" width="0.4" height="15.0" fill="rgb(219,178,23)" rx="2" ry="2" />
<text  x="392.68" y="1551.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%)</title><rect x="843.2" y="1701" width="0.3" height="15.0" fill="rgb(251,171,43)" rx="2" ry="2" />
<text  x="846.16" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.03%)</title><rect x="48.0" y="357" width="0.4" height="15.0" fill="rgb(216,77,12)" rx="2" ry="2" />
<text  x="51.01" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (15 samples, 0.47%)</title><rect x="99.7" y="1749" width="5.5" height="15.0" fill="rgb(219,185,8)" rx="2" ry="2" />
<text  x="102.66" y="1759.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%)</title><rect x="149.5" y="1829" width="0.3" height="15.0" fill="rgb(215,196,39)" rx="2" ry="2" />
<text  x="152.47" y="1839.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_Head_base&lt;cql3::expr::expression::impl*&gt; (1 samples, 0.03%)</title><rect x="61.3" y="261" width="0.4" height="15.0" fill="rgb(250,8,10)" rx="2" ry="2" />
<text  x="64.29" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="111.8" y="1381" width="0.4" height="15.0" fill="rgb(241,13,19)" rx="2" ry="2" />
<text  x="114.84" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="121.1" y="1461" width="0.3" height="15.0" fill="rgb(211,39,26)" rx="2" ry="2" />
<text  x="124.06" y="1471.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%)</title><rect x="76.4" y="357" width="0.4" height="15.0" fill="rgb(224,119,30)" rx="2" ry="2" />
<text  x="79.42" y="367.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1429" width="88.6" height="15.0" fill="rgb(226,201,36)" rx="2" ry="2" />
<text  x="14.11" y="1439.5" >[unknown]</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%)</title><rect x="113.3" y="1493" width="0.4" height="15.0" fill="rgb(210,21,8)" rx="2" ry="2" />
<text  x="116.31" y="1503.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (20 samples, 0.63%)</title><rect x="142.1" y="1877" width="7.4" height="15.0" fill="rgb(205,205,31)" rx="2" ry="2" />
<text  x="145.10" y="1887.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (9 samples, 0.28%)</title><rect x="128.4" y="1557" width="3.4" height="15.0" fill="rgb(214,11,16)" rx="2" ry="2" />
<text  x="131.44" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;4ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="137.3" y="1237" width="0.4" height="15.0" fill="rgb(245,83,20)" rx="2" ry="2" />
<text  x="140.30" y="1247.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%)</title><rect x="129.2" y="1477" width="0.3" height="15.0" fill="rgb(230,154,32)" rx="2" ry="2" />
<text  x="132.18" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (238 samples, 7.44%)</title><rect x="11.1" y="949" width="87.8" height="15.0" fill="rgb(237,208,27)" rx="2" ry="2" />
<text  x="14.11" y="959.5" >[unknown]</text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.06%)</title><rect x="96.3" y="677" width="0.8" height="15.0" fill="rgb(229,219,33)" rx="2" ry="2" />
<text  x="99.34" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.53%)</title><rect x="1001.8" y="1509" width="6.3" height="15.0" fill="rgb(215,119,0)" rx="2" ry="2" />
<text  x="1004.82" y="1519.5" ></text>
</g>
<g >
<title>cql3::attributes::raw::prepare (1 samples, 0.03%)</title><rect x="80.1" y="597" width="0.4" height="15.0" fill="rgb(208,161,21)" rx="2" ry="2" />
<text  x="83.11" y="607.5" ></text>
</g>
<g >
<title>query::querier&lt; (676 samples, 21.14%)</title><rect x="265.3" y="1717" width="249.5" height="15.0" fill="rgb(227,149,14)" rx="2" ry="2" />
<text  x="268.33" y="1727.5" >query::querier&lt;</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="53.5" y="245" width="0.4" height="15.0" fill="rgb(228,60,40)" rx="2" ry="2" />
<text  x="56.54" y="255.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%)</title><rect x="98.9" y="901" width="0.4" height="15.0" fill="rgb(239,65,0)" rx="2" ry="2" />
<text  x="101.92" y="911.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a59683b929e6b30d9803453a6167c92c7df06c25] (1 samples, 0.03%)</title><rect x="558.7" y="1653" width="0.3" height="15.0" fill="rgb(254,144,27)" rx="2" ry="2" />
<text  x="561.67" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="66.1" y="325" width="0.4" height="15.0" fill="rgb(209,35,37)" rx="2" ry="2" />
<text  x="69.09" y="335.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.03%)</title><rect x="152.4" y="1877" width="0.4" height="15.0" fill="rgb(231,213,18)" rx="2" ry="2" />
<text  x="155.43" y="1887.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%)</title><rect x="72.0" y="421" width="0.4" height="15.0" fill="rgb(231,92,17)" rx="2" ry="2" />
<text  x="74.99" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%)</title><rect x="67.2" y="421" width="0.7" height="15.0" fill="rgb(210,136,8)" rx="2" ry="2" />
<text  x="70.19" y="431.5" ></text>
</g>
<g >
<title>db::validate_for_read (1 samples, 0.03%)</title><rect x="1097.4" y="1701" width="0.4" height="15.0" fill="rgb(237,141,16)" rx="2" ry="2" />
<text  x="1100.39" y="1711.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.03%)</title><rect x="92.7" y="549" width="0.3" height="15.0" fill="rgb(221,70,17)" rx="2" ry="2" />
<text  x="95.65" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (2 samples, 0.06%)</title><rect x="125.1" y="1493" width="0.8" height="15.0" fill="rgb(253,131,10)" rx="2" ry="2" />
<text  x="128.12" y="1503.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.06%)</title><rect x="438.8" y="1653" width="0.7" height="15.0" fill="rgb(240,169,38)" rx="2" ry="2" />
<text  x="441.76" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%)</title><rect x="48.7" y="421" width="0.4" height="15.0" fill="rgb(251,37,35)" rx="2" ry="2" />
<text  x="51.74" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="64.6" y="309" width="0.4" height="15.0" fill="rgb(225,64,43)" rx="2" ry="2" />
<text  x="67.61" y="319.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.06%)</title><rect x="849.1" y="1685" width="0.7" height="15.0" fill="rgb(245,210,46)" rx="2" ry="2" />
<text  x="852.06" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::constant::make_bool (1 samples, 0.03%)</title><rect x="84.9" y="501" width="0.4" height="15.0" fill="rgb(228,80,21)" rx="2" ry="2" />
<text  x="87.90" y="511.5" ></text>
</g>
<g >
<title>std::optional&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="43.2" y="357" width="0.4" height="15.0" fill="rgb(209,113,22)" rx="2" ry="2" />
<text  x="46.21" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (13 samples, 0.41%)</title><rect x="52.1" y="453" width="4.8" height="15.0" fill="rgb(237,59,50)" rx="2" ry="2" />
<text  x="55.06" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="137.3" y="1333" width="0.4" height="15.0" fill="rgb(240,224,4)" rx="2" ry="2" />
<text  x="140.30" y="1343.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="571.6" y="1637" width="0.4" height="15.0" fill="rgb(221,140,41)" rx="2" ry="2" />
<text  x="574.59" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="152.8" y="1829" width="0.4" height="15.0" fill="rgb(232,155,46)" rx="2" ry="2" />
<text  x="155.80" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%)</title><rect x="68.7" y="261" width="0.3" height="15.0" fill="rgb(226,46,1)" rx="2" ry="2" />
<text  x="71.67" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (3 samples, 0.09%)</title><rect x="861.6" y="1573" width="1.1" height="15.0" fill="rgb(249,105,17)" rx="2" ry="2" />
<text  x="864.61" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="96.3" y="485" width="0.4" height="15.0" fill="rgb(209,79,21)" rx="2" ry="2" />
<text  x="99.34" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="58.0" y="245" width="0.3" height="15.0" fill="rgb(227,32,3)" rx="2" ry="2" />
<text  x="60.97" y="255.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1173" width="88.6" height="15.0" fill="rgb(218,219,22)" rx="2" ry="2" />
<text  x="14.11" y="1183.5" >[unknown]</text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (5 samples, 0.16%)</title><rect x="261.6" y="1701" width="1.9" height="15.0" fill="rgb(225,144,20)" rx="2" ry="2" />
<text  x="264.64" y="1711.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%)</title><rect x="54.3" y="341" width="0.3" height="15.0" fill="rgb(221,200,45)" rx="2" ry="2" />
<text  x="57.28" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="138.0" y="1429" width="0.4" height="15.0" fill="rgb(214,193,29)" rx="2" ry="2" />
<text  x="141.04" y="1439.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="88.2" y="421" width="0.8" height="15.0" fill="rgb(213,229,53)" rx="2" ry="2" />
<text  x="91.22" y="431.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (627 samples, 19.61%)</title><rect x="866.4" y="1749" width="231.4" height="15.0" fill="rgb(225,121,25)" rx="2" ry="2" />
<text  x="869.40" y="1759.5" >seastar::concrete_execution_st..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="53.5" y="309" width="0.4" height="15.0" fill="rgb(226,0,23)" rx="2" ry="2" />
<text  x="56.54" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.06%)</title><rect x="20.0" y="229" width="0.7" height="15.0" fill="rgb(247,163,44)" rx="2" ry="2" />
<text  x="22.96" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%)</title><rect x="52.8" y="293" width="0.7" height="15.0" fill="rgb(254,46,27)" rx="2" ry="2" />
<text  x="55.80" y="303.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%)</title><rect x="140.6" y="1797" width="0.4" height="15.0" fill="rgb(239,181,17)" rx="2" ry="2" />
<text  x="143.62" y="1807.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (6 samples, 0.19%)</title><rect x="1090.7" y="1685" width="2.3" height="15.0" fill="rgb(222,49,13)" rx="2" ry="2" />
<text  x="1093.74" y="1695.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="140.6" y="1845" width="0.4" height="15.0" fill="rgb(228,118,29)" rx="2" ry="2" />
<text  x="143.62" y="1855.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.03%)</title><rect x="185.3" y="1749" width="0.3" height="15.0" fill="rgb(213,228,40)" rx="2" ry="2" />
<text  x="188.27" y="1759.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (2 samples, 0.06%)</title><rect x="96.3" y="693" width="0.8" height="15.0" fill="rgb(248,40,11)" rx="2" ry="2" />
<text  x="99.34" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (4 samples, 0.13%)</title><rect x="27.7" y="245" width="1.5" height="15.0" fill="rgb(227,152,7)" rx="2" ry="2" />
<text  x="30.71" y="255.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="112.2" y="1509" width="0.4" height="15.0" fill="rgb(214,130,22)" rx="2" ry="2" />
<text  x="115.21" y="1519.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%)</title><rect x="843.5" y="1717" width="3.3" height="15.0" fill="rgb(205,94,53)" rx="2" ry="2" />
<text  x="846.53" y="1727.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a59683b929e6b30d9803453a6167c92c7df06c25] (1 samples, 0.03%)</title><rect x="828.4" y="1653" width="0.4" height="15.0" fill="rgb(213,84,53)" rx="2" ry="2" />
<text  x="831.40" y="1663.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%)</title><rect x="833.9" y="1637" width="0.4" height="15.0" fill="rgb(210,96,25)" rx="2" ry="2" />
<text  x="836.93" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (15 samples, 0.47%)</title><rect x="99.7" y="1781" width="5.5" height="15.0" fill="rgb(237,226,41)" rx="2" ry="2" />
<text  x="102.66" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="68.3" y="373" width="0.4" height="15.0" fill="rgb(212,196,26)" rx="2" ry="2" />
<text  x="71.30" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="129.9" y="1349" width="0.4" height="15.0" fill="rgb(207,32,45)" rx="2" ry="2" />
<text  x="132.92" y="1359.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (1 samples, 0.03%)</title><rect x="437.3" y="1669" width="0.3" height="15.0" fill="rgb(208,122,8)" rx="2" ry="2" />
<text  x="440.28" y="1679.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (6 samples, 0.19%)</title><rect x="1100.3" y="1621" width="2.3" height="15.0" fill="rgb(235,127,52)" rx="2" ry="2" />
<text  x="1103.34" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (5 samples, 0.16%)</title><rect x="29.6" y="261" width="1.8" height="15.0" fill="rgb(229,108,25)" rx="2" ry="2" />
<text  x="32.56" y="271.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;seastar::file_impl&gt; &gt;, seastar::make_file_impl (1 samples, 0.03%)</title><rect x="707.0" y="1765" width="0.4" height="15.0" fill="rgb(229,196,24)" rx="2" ry="2" />
<text  x="710.00" y="1775.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%)</title><rect x="138.8" y="1573" width="0.3" height="15.0" fill="rgb(245,119,46)" rx="2" ry="2" />
<text  x="141.77" y="1583.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (2 samples, 0.06%)</title><rect x="61.3" y="389" width="0.7" height="15.0" fill="rgb(244,213,49)" rx="2" ry="2" />
<text  x="64.29" y="399.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%)</title><rect x="254.6" y="1717" width="3.0" height="15.0" fill="rgb(211,197,23)" rx="2" ry="2" />
<text  x="257.63" y="1727.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.13%)</title><rect x="1156.1" y="1893" width="1.4" height="15.0" fill="rgb(230,196,20)" rx="2" ry="2" />
<text  x="1159.05" y="1903.5" ></text>
</g>
<g >
<title>posix_memalign (2 samples, 0.06%)</title><rect x="388.9" y="1509" width="0.8" height="15.0" fill="rgb(225,190,38)" rx="2" ry="2" />
<text  x="391.94" y="1519.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%)</title><rect x="701.8" y="1733" width="1.9" height="15.0" fill="rgb(224,200,54)" rx="2" ry="2" />
<text  x="704.84" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="111.8" y="1317" width="0.4" height="15.0" fill="rgb(220,21,31)" rx="2" ry="2" />
<text  x="114.84" y="1327.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (13 samples, 0.41%)</title><rect x="70.1" y="581" width="4.8" height="15.0" fill="rgb(221,97,44)" rx="2" ry="2" />
<text  x="73.14" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (2 samples, 0.06%)</title><rect x="46.5" y="165" width="0.8" height="15.0" fill="rgb(216,81,28)" rx="2" ry="2" />
<text  x="49.53" y="175.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="88.2" y="373" width="0.4" height="15.0" fill="rgb(239,70,31)" rx="2" ry="2" />
<text  x="91.22" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="68.7" y="245" width="0.3" height="15.0" fill="rgb(209,46,3)" rx="2" ry="2" />
<text  x="71.67" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="70.9" y="421" width="0.4" height="15.0" fill="rgb(239,25,7)" rx="2" ry="2" />
<text  x="73.88" y="431.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%)</title><rect x="151.3" y="1701" width="0.4" height="15.0" fill="rgb(209,57,28)" rx="2" ry="2" />
<text  x="154.32" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (44 samples, 1.38%)</title><rect x="80.1" y="741" width="16.2" height="15.0" fill="rgb(241,62,54)" rx="2" ry="2" />
<text  x="83.11" y="751.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (35 samples, 1.09%)</title><rect x="885.2" y="1637" width="12.9" height="15.0" fill="rgb(219,46,53)" rx="2" ry="2" />
<text  x="888.22" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%)</title><rect x="99.3" y="805" width="0.4" height="15.0" fill="rgb(243,39,20)" rx="2" ry="2" />
<text  x="102.29" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (1 samples, 0.03%)</title><rect x="1188.9" y="1893" width="0.4" height="15.0" fill="rgb(234,145,36)" rx="2" ry="2" />
<text  x="1191.89" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (2 samples, 0.06%)</title><rect x="155.4" y="1781" width="0.7" height="15.0" fill="rgb(228,225,46)" rx="2" ry="2" />
<text  x="158.38" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%)</title><rect x="153.2" y="1829" width="0.3" height="15.0" fill="rgb(237,224,14)" rx="2" ry="2" />
<text  x="156.16" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="73.5" y="117" width="0.3" height="15.0" fill="rgb(228,56,20)" rx="2" ry="2" />
<text  x="76.46" y="127.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (61 samples, 1.91%)</title><rect x="109.6" y="1637" width="22.5" height="15.0" fill="rgb(219,97,46)" rx="2" ry="2" />
<text  x="112.62" y="1647.5" >c..</text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (23 samples, 0.72%)</title><rect x="166.4" y="1749" width="8.5" height="15.0" fill="rgb(213,81,25)" rx="2" ry="2" />
<text  x="169.45" y="1759.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::create_clustering_ranges (1 samples, 0.03%)</title><rect x="865.3" y="1653" width="0.4" height="15.0" fill="rgb(205,117,30)" rx="2" ry="2" />
<text  x="868.30" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="67.9" y="373" width="0.4" height="15.0" fill="rgb(239,98,5)" rx="2" ry="2" />
<text  x="70.93" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%)</title><rect x="151.3" y="1573" width="0.4" height="15.0" fill="rgb(253,41,20)" rx="2" ry="2" />
<text  x="154.32" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%)</title><rect x="99.3" y="821" width="0.4" height="15.0" fill="rgb(207,80,4)" rx="2" ry="2" />
<text  x="102.29" y="831.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="121.8" y="1429" width="0.4" height="15.0" fill="rgb(252,57,54)" rx="2" ry="2" />
<text  x="124.80" y="1439.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (400 samples, 12.51%)</title><rect x="929.9" y="1653" width="147.6" height="15.0" fill="rgb(238,218,20)" rx="2" ry="2" />
<text  x="932.87" y="1663.5" >service::storage_p..</text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%)</title><rect x="111.8" y="1301" width="0.4" height="15.0" fill="rgb(250,122,41)" rx="2" ry="2" />
<text  x="114.84" y="1311.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a59683b929e6b30d9803453a6167c92c7df06c25] (2 samples, 0.06%)</title><rect x="460.5" y="1637" width="0.8" height="15.0" fill="rgb(232,148,30)" rx="2" ry="2" />
<text  x="463.53" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="45.1" y="261" width="0.3" height="15.0" fill="rgb(241,225,44)" rx="2" ry="2" />
<text  x="48.05" y="271.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%)</title><rect x="565.7" y="1637" width="1.5" height="15.0" fill="rgb(221,49,20)" rx="2" ry="2" />
<text  x="568.68" y="1647.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.03%)</title><rect x="532.1" y="1653" width="0.4" height="15.0" fill="rgb(244,175,4)" rx="2" ry="2" />
<text  x="535.11" y="1663.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (13 samples, 0.41%)</title><rect x="52.1" y="501" width="4.8" height="15.0" fill="rgb(250,166,41)" rx="2" ry="2" />
<text  x="55.06" y="511.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.09%)</title><rect x="54.3" y="373" width="1.1" height="15.0" fill="rgb(227,47,38)" rx="2" ry="2" />
<text  x="57.28" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="66.1" y="293" width="0.4" height="15.0" fill="rgb(244,203,2)" rx="2" ry="2" />
<text  x="69.09" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.09%)</title><rect x="54.3" y="389" width="1.1" height="15.0" fill="rgb(210,134,2)" rx="2" ry="2" />
<text  x="57.28" y="399.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (5 samples, 0.16%)</title><rect x="753.1" y="1717" width="1.9" height="15.0" fill="rgb(246,161,30)" rx="2" ry="2" />
<text  x="756.13" y="1727.5" ></text>
</g>
<g >
<title>__libc_siglongjmp (1 samples, 0.03%)</title><rect x="99.7" y="1685" width="0.3" height="15.0" fill="rgb(226,132,48)" rx="2" ry="2" />
<text  x="102.66" y="1695.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (2 samples, 0.06%)</title><rect x="388.9" y="1525" width="0.8" height="15.0" fill="rgb(233,217,25)" rx="2" ry="2" />
<text  x="391.94" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="58.0" y="277" width="0.3" height="15.0" fill="rgb(236,16,6)" rx="2" ry="2" />
<text  x="60.97" y="287.5" ></text>
</g>
<g >
<title>memtable::evict_entry (1 samples, 0.03%)</title><rect x="1112.9" y="1621" width="0.4" height="15.0" fill="rgb(248,19,25)" rx="2" ry="2" />
<text  x="1115.88" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (6 samples, 0.19%)</title><rect x="53.9" y="405" width="2.2" height="15.0" fill="rgb(238,116,0)" rx="2" ry="2" />
<text  x="56.91" y="415.5" ></text>
</g>
<g >
<title>query::querier_base::close (2 samples, 0.06%)</title><rect x="1153.1" y="1749" width="0.7" height="15.0" fill="rgb(239,152,28)" rx="2" ry="2" />
<text  x="1156.10" y="1759.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="129.5" y="1333" width="0.4" height="15.0" fill="rgb(221,7,46)" rx="2" ry="2" />
<text  x="132.55" y="1343.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (12 samples, 0.38%)</title><rect x="1105.1" y="1541" width="4.5" height="15.0" fill="rgb(229,161,37)" rx="2" ry="2" />
<text  x="1108.13" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="137.3" y="1429" width="0.4" height="15.0" fill="rgb(226,125,25)" rx="2" ry="2" />
<text  x="140.30" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.06%)</title><rect x="75.3" y="453" width="0.7" height="15.0" fill="rgb(251,104,28)" rx="2" ry="2" />
<text  x="78.31" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%)</title><rect x="54.3" y="181" width="0.3" height="15.0" fill="rgb(254,194,29)" rx="2" ry="2" />
<text  x="57.28" y="191.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%)</title><rect x="132.1" y="1589" width="0.4" height="15.0" fill="rgb(225,186,35)" rx="2" ry="2" />
<text  x="135.13" y="1599.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="70.9" y="309" width="0.4" height="15.0" fill="rgb(244,154,40)" rx="2" ry="2" />
<text  x="73.88" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="104.8" y="1589" width="0.4" height="15.0" fill="rgb(228,124,40)" rx="2" ry="2" />
<text  x="107.83" y="1599.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (20 samples, 0.63%)</title><rect x="396.0" y="1605" width="7.3" height="15.0" fill="rgb(251,101,4)" rx="2" ry="2" />
<text  x="398.95" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (2 samples, 0.06%)</title><rect x="68.7" y="405" width="0.7" height="15.0" fill="rgb(226,25,41)" rx="2" ry="2" />
<text  x="71.67" y="415.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.50%)</title><rect x="987.1" y="1557" width="5.9" height="15.0" fill="rgb(209,62,27)" rx="2" ry="2" />
<text  x="990.06" y="1567.5" ></text>
</g>
<g >
<title>dht::sharder::shard_of (4 samples, 0.13%)</title><rect x="974.9" y="1573" width="1.5" height="15.0" fill="rgb(217,88,41)" rx="2" ry="2" />
<text  x="977.88" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%)</title><rect x="88.2" y="501" width="0.8" height="15.0" fill="rgb(230,0,45)" rx="2" ry="2" />
<text  x="91.22" y="511.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="98.6" y="853" width="0.3" height="15.0" fill="rgb(241,53,48)" rx="2" ry="2" />
<text  x="101.56" y="863.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.03%)</title><rect x="684.9" y="1733" width="0.3" height="15.0" fill="rgb(239,135,8)" rx="2" ry="2" />
<text  x="687.87" y="1743.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="76.4" y="293" width="0.4" height="15.0" fill="rgb(237,112,14)" rx="2" ry="2" />
<text  x="79.42" y="303.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1093" width="88.6" height="15.0" fill="rgb(239,167,2)" rx="2" ry="2" />
<text  x="14.11" y="1103.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="115.2" y="1493" width="0.3" height="15.0" fill="rgb(217,137,54)" rx="2" ry="2" />
<text  x="118.16" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (5 samples, 0.16%)</title><rect x="1151.3" y="1765" width="1.8" height="15.0" fill="rgb(237,182,39)" rx="2" ry="2" />
<text  x="1154.26" y="1775.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (4 samples, 0.13%)</title><rect x="15.2" y="437" width="1.4" height="15.0" fill="rgb(205,210,18)" rx="2" ry="2" />
<text  x="18.17" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="71.3" y="421" width="0.3" height="15.0" fill="rgb(245,166,13)" rx="2" ry="2" />
<text  x="74.25" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (6 samples, 0.19%)</title><rect x="863.1" y="1653" width="2.2" height="15.0" fill="rgb(223,81,39)" rx="2" ry="2" />
<text  x="866.08" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%)</title><rect x="76.8" y="453" width="0.4" height="15.0" fill="rgb(254,45,16)" rx="2" ry="2" />
<text  x="79.79" y="463.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%)</title><rect x="99.3" y="853" width="0.4" height="15.0" fill="rgb(206,56,10)" rx="2" ry="2" />
<text  x="102.29" y="863.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="137.3" y="1509" width="0.4" height="15.0" fill="rgb(229,58,53)" rx="2" ry="2" />
<text  x="140.30" y="1519.5" ></text>
</g>
<g >
<title>__start_context (4 samples, 0.13%)</title><rect x="97.1" y="805" width="1.5" height="15.0" fill="rgb(236,221,19)" rx="2" ry="2" />
<text  x="100.08" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1 samples, 0.03%)</title><rect x="1189.3" y="1893" width="0.3" height="15.0" fill="rgb(254,27,24)" rx="2" ry="2" />
<text  x="1192.26" y="1903.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (3 samples, 0.09%)</title><rect x="97.4" y="709" width="1.2" height="15.0" fill="rgb(233,166,11)" rx="2" ry="2" />
<text  x="100.45" y="719.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (3 samples, 0.09%)</title><rect x="965.3" y="1605" width="1.1" height="15.0" fill="rgb(239,4,1)" rx="2" ry="2" />
<text  x="968.29" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::deque (3 samples, 0.09%)</title><rect x="15.5" y="357" width="1.1" height="15.0" fill="rgb(221,155,54)" rx="2" ry="2" />
<text  x="18.53" y="367.5" ></text>
</g>
<g >
<title>[unknown] (238 samples, 7.44%)</title><rect x="11.1" y="885" width="87.8" height="15.0" fill="rgb(210,205,2)" rx="2" ry="2" />
<text  x="14.11" y="895.5" >[unknown]</text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (152 samples, 4.75%)</title><rect x="973.0" y="1589" width="56.1" height="15.0" fill="rgb(219,2,32)" rx="2" ry="2" />
<text  x="976.04" y="1599.5" >servi..</text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (8 samples, 0.25%)</title><rect x="686.3" y="1717" width="3.0" height="15.0" fill="rgb(248,128,25)" rx="2" ry="2" />
<text  x="689.34" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="78.6" y="261" width="0.4" height="15.0" fill="rgb(252,198,21)" rx="2" ry="2" />
<text  x="81.63" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="127.0" y="1477" width="0.3" height="15.0" fill="rgb(212,141,1)" rx="2" ry="2" />
<text  x="129.97" y="1487.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (6 samples, 0.19%)</title><rect x="77.5" y="485" width="2.2" height="15.0" fill="rgb(247,221,2)" rx="2" ry="2" />
<text  x="80.52" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%)</title><rect x="109.6" y="1541" width="0.4" height="15.0" fill="rgb(220,18,6)" rx="2" ry="2" />
<text  x="112.62" y="1551.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (17 samples, 0.53%)</title><rect x="903.7" y="1653" width="6.2" height="15.0" fill="rgb(249,13,49)" rx="2" ry="2" />
<text  x="906.67" y="1663.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.03%)</title><rect x="105.2" y="1669" width="0.4" height="15.0" fill="rgb(231,38,31)" rx="2" ry="2" />
<text  x="108.20" y="1679.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (3 samples, 0.09%)</title><rect x="114.1" y="1493" width="1.1" height="15.0" fill="rgb(227,78,44)" rx="2" ry="2" />
<text  x="117.05" y="1503.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.03%)</title><rect x="14.8" y="437" width="0.4" height="15.0" fill="rgb(230,223,47)" rx="2" ry="2" />
<text  x="17.80" y="447.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (3 samples, 0.09%)</title><rect x="624.4" y="1653" width="1.1" height="15.0" fill="rgb(254,16,49)" rx="2" ry="2" />
<text  x="627.35" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="98.9" y="917" width="0.4" height="15.0" fill="rgb(225,19,2)" rx="2" ry="2" />
<text  x="101.92" y="927.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.03%)</title><rect x="150.6" y="1797" width="0.4" height="15.0" fill="rgb(215,178,50)" rx="2" ry="2" />
<text  x="153.58" y="1807.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%)</title><rect x="41.0" y="405" width="0.4" height="15.0" fill="rgb(222,217,23)" rx="2" ry="2" />
<text  x="43.99" y="415.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.03%)</title><rect x="140.3" y="1861" width="0.3" height="15.0" fill="rgb(225,143,36)" rx="2" ry="2" />
<text  x="143.25" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (3 samples, 0.09%)</title><rect x="31.4" y="309" width="1.1" height="15.0" fill="rgb(249,205,4)" rx="2" ry="2" />
<text  x="34.40" y="319.5" ></text>
</g>
<g >
<title>database::query (73 samples, 2.28%)</title><rect x="996.7" y="1541" width="26.9" height="15.0" fill="rgb(242,208,27)" rx="2" ry="2" />
<text  x="999.65" y="1551.5" >d..</text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.31%)</title><rect x="1081.2" y="1637" width="3.6" height="15.0" fill="rgb(209,105,47)" rx="2" ry="2" />
<text  x="1084.15" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (4 samples, 0.13%)</title><rect x="134.3" y="1445" width="1.5" height="15.0" fill="rgb(224,145,54)" rx="2" ry="2" />
<text  x="137.35" y="1455.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.03%)</title><rect x="1023.6" y="1541" width="0.4" height="15.0" fill="rgb(240,85,3)" rx="2" ry="2" />
<text  x="1026.59" y="1551.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%)</title><rect x="61.3" y="325" width="0.4" height="15.0" fill="rgb(229,202,50)" rx="2" ry="2" />
<text  x="64.29" y="335.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.06%)</title><rect x="96.3" y="773" width="0.8" height="15.0" fill="rgb(233,126,13)" rx="2" ry="2" />
<text  x="99.34" y="783.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%)</title><rect x="248.0" y="1685" width="2.6" height="15.0" fill="rgb(230,219,2)" rx="2" ry="2" />
<text  x="250.99" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="54.6" y="357" width="0.4" height="15.0" fill="rgb(242,164,21)" rx="2" ry="2" />
<text  x="57.65" y="367.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="1085.9" y="1685" width="0.8" height="15.0" fill="rgb(209,112,30)" rx="2" ry="2" />
<text  x="1088.95" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (4 samples, 0.13%)</title><rect x="134.3" y="1525" width="1.5" height="15.0" fill="rgb(232,70,32)" rx="2" ry="2" />
<text  x="137.35" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1701" width="88.6" height="15.0" fill="rgb(237,117,2)" rx="2" ry="2" />
<text  x="14.11" y="1711.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="63.1" y="341" width="0.4" height="15.0" fill="rgb(232,207,47)" rx="2" ry="2" />
<text  x="66.13" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="897.4" y="1589" width="0.4" height="15.0" fill="rgb(251,61,30)" rx="2" ry="2" />
<text  x="900.40" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (12 samples, 0.38%)</title><rect x="70.5" y="485" width="4.4" height="15.0" fill="rgb(228,14,50)" rx="2" ry="2" />
<text  x="73.51" y="495.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (2 samples, 0.06%)</title><rect x="745.7" y="1765" width="0.8" height="15.0" fill="rgb(221,131,41)" rx="2" ry="2" />
<text  x="748.75" y="1775.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (16 samples, 0.50%)</title><rect x="257.6" y="1717" width="5.9" height="15.0" fill="rgb(207,1,23)" rx="2" ry="2" />
<text  x="260.59" y="1727.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.03%)</title><rect x="28.8" y="197" width="0.4" height="15.0" fill="rgb(212,168,31)" rx="2" ry="2" />
<text  x="31.82" y="207.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="625.5" y="1653" width="0.3" height="15.0" fill="rgb(238,225,48)" rx="2" ry="2" />
<text  x="628.46" y="1663.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (20 samples, 0.63%)</title><rect x="777.1" y="1669" width="7.4" height="15.0" fill="rgb(238,103,40)" rx="2" ry="2" />
<text  x="780.11" y="1679.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (4 samples, 0.13%)</title><rect x="134.3" y="1509" width="1.5" height="15.0" fill="rgb(253,11,7)" rx="2" ry="2" />
<text  x="137.35" y="1519.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="72.4" y="405" width="0.3" height="15.0" fill="rgb(240,10,9)" rx="2" ry="2" />
<text  x="75.36" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14 samples, 0.44%)</title><rect x="74.9" y="693" width="5.2" height="15.0" fill="rgb(248,159,30)" rx="2" ry="2" />
<text  x="77.94" y="703.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="55.0" y="213" width="0.4" height="15.0" fill="rgb(216,66,22)" rx="2" ry="2" />
<text  x="58.02" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="113.7" y="1461" width="0.4" height="15.0" fill="rgb(217,75,38)" rx="2" ry="2" />
<text  x="116.68" y="1471.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (22 samples, 0.69%)</title><rect x="132.1" y="1637" width="8.2" height="15.0" fill="rgb(244,161,19)" rx="2" ry="2" />
<text  x="135.13" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="42.8" y="325" width="0.4" height="15.0" fill="rgb(253,109,1)" rx="2" ry="2" />
<text  x="45.84" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (11 samples, 0.34%)</title><rect x="170.1" y="1733" width="4.1" height="15.0" fill="rgb(225,101,21)" rx="2" ry="2" />
<text  x="173.14" y="1743.5" ></text>
</g>
<g >
<title>free (2 samples, 0.06%)</title><rect x="447.2" y="1637" width="0.8" height="15.0" fill="rgb(248,197,42)" rx="2" ry="2" />
<text  x="450.24" y="1647.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare_conditions (1 samples, 0.03%)</title><rect x="81.2" y="581" width="0.4" height="15.0" fill="rgb(242,17,48)" rx="2" ry="2" />
<text  x="84.21" y="591.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%)</title><rect x="97.4" y="613" width="0.4" height="15.0" fill="rgb(252,148,14)" rx="2" ry="2" />
<text  x="100.45" y="623.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.03%)</title><rect x="448.0" y="1637" width="0.3" height="15.0" fill="rgb(252,21,36)" rx="2" ry="2" />
<text  x="450.98" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1221" width="88.6" height="15.0" fill="rgb(217,58,54)" rx="2" ry="2" />
<text  x="14.11" y="1231.5" >[unknown]</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::vector (1 samples, 0.03%)</title><rect x="49.5" y="421" width="0.3" height="15.0" fill="rgb(250,119,13)" rx="2" ry="2" />
<text  x="52.48" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="54.3" y="197" width="0.3" height="15.0" fill="rgb(240,192,37)" rx="2" ry="2" />
<text  x="57.28" y="207.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="642.1" y="1621" width="0.3" height="15.0" fill="rgb(249,173,20)" rx="2" ry="2" />
<text  x="645.06" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%)</title><rect x="758.3" y="1701" width="1.1" height="15.0" fill="rgb(211,85,25)" rx="2" ry="2" />
<text  x="761.29" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="55.0" y="325" width="0.4" height="15.0" fill="rgb(223,149,40)" rx="2" ry="2" />
<text  x="58.02" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%)</title><rect x="98.6" y="677" width="0.3" height="15.0" fill="rgb(212,197,1)" rx="2" ry="2" />
<text  x="101.56" y="687.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="108.5" y="1813" width="0.4" height="15.0" fill="rgb(234,92,43)" rx="2" ry="2" />
<text  x="111.52" y="1823.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (13 samples, 0.41%)</title><rect x="70.1" y="613" width="4.8" height="15.0" fill="rgb(213,50,8)" rx="2" ry="2" />
<text  x="73.14" y="623.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (4 samples, 0.13%)</title><rect x="180.8" y="1749" width="1.5" height="15.0" fill="rgb(205,163,10)" rx="2" ry="2" />
<text  x="183.84" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (20 samples, 0.63%)</title><rect x="17.4" y="357" width="7.4" height="15.0" fill="rgb(247,53,22)" rx="2" ry="2" />
<text  x="20.38" y="367.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.06%)</title><rect x="322.9" y="1573" width="0.7" height="15.0" fill="rgb(210,130,51)" rx="2" ry="2" />
<text  x="325.90" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="130.7" y="1413" width="0.3" height="15.0" fill="rgb(245,148,44)" rx="2" ry="2" />
<text  x="133.66" y="1423.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.53%)</title><rect x="1001.8" y="1525" width="6.3" height="15.0" fill="rgb(246,71,27)" rx="2" ry="2" />
<text  x="1004.82" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1365" width="88.6" height="15.0" fill="rgb(216,94,50)" rx="2" ry="2" />
<text  x="14.11" y="1375.5" >[unknown]</text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (2 samples, 0.06%)</title><rect x="1108.5" y="1509" width="0.7" height="15.0" fill="rgb(206,3,22)" rx="2" ry="2" />
<text  x="1111.46" y="1519.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.34%)</title><rect x="567.2" y="1637" width="4.0" height="15.0" fill="rgb(253,53,37)" rx="2" ry="2" />
<text  x="570.16" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (91 samples, 2.85%)</title><rect x="106.7" y="1845" width="33.6" height="15.0" fill="rgb(235,19,10)" rx="2" ry="2" />
<text  x="109.67" y="1855.5" >se..</text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.09%)</title><rect x="836.1" y="1685" width="1.2" height="15.0" fill="rgb(218,15,26)" rx="2" ry="2" />
<text  x="839.15" y="1695.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (4 samples, 0.13%)</title><rect x="182.7" y="1765" width="1.5" height="15.0" fill="rgb(234,62,27)" rx="2" ry="2" />
<text  x="185.68" y="1775.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.19%)</title><rect x="18.5" y="277" width="2.2" height="15.0" fill="rgb(242,105,17)" rx="2" ry="2" />
<text  x="21.49" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.03%)</title><rect x="73.8" y="437" width="0.4" height="15.0" fill="rgb(247,75,49)" rx="2" ry="2" />
<text  x="76.83" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (4 samples, 0.13%)</title><rect x="730.3" y="1733" width="1.4" height="15.0" fill="rgb(226,7,2)" rx="2" ry="2" />
<text  x="733.25" y="1743.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (183 samples, 5.72%)</title><rect x="325.5" y="1589" width="67.5" height="15.0" fill="rgb(246,138,35)" rx="2" ry="2" />
<text  x="328.48" y="1599.5" >partiti..</text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="119.2" y="1349" width="0.4" height="15.0" fill="rgb(208,14,25)" rx="2" ry="2" />
<text  x="122.22" y="1359.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="55.8" y="245" width="0.3" height="15.0" fill="rgb(243,69,48)" rx="2" ry="2" />
<text  x="58.75" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (14 samples, 0.44%)</title><rect x="74.9" y="565" width="5.2" height="15.0" fill="rgb(243,199,15)" rx="2" ry="2" />
<text  x="77.94" y="575.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%)</title><rect x="105.2" y="1717" width="0.4" height="15.0" fill="rgb(217,14,11)" rx="2" ry="2" />
<text  x="108.20" y="1727.5" ></text>
</g>
<g >
<title>validation::validate_column_family (21 samples, 0.66%)</title><rect x="828.4" y="1669" width="7.7" height="15.0" fill="rgb(211,168,37)" rx="2" ry="2" />
<text  x="831.40" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (2 samples, 0.06%)</title><rect x="47.3" y="357" width="0.7" height="15.0" fill="rgb(230,22,43)" rx="2" ry="2" />
<text  x="50.27" y="367.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="65.0" y="293" width="0.3" height="15.0" fill="rgb(218,37,53)" rx="2" ry="2" />
<text  x="67.98" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%)</title><rect x="135.1" y="1253" width="0.4" height="15.0" fill="rgb(227,139,7)" rx="2" ry="2" />
<text  x="138.08" y="1263.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%)</title><rect x="99.3" y="869" width="0.4" height="15.0" fill="rgb(221,24,41)" rx="2" ry="2" />
<text  x="102.29" y="879.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.25%)</title><rect x="818.8" y="1605" width="3.0" height="15.0" fill="rgb(222,78,43)" rx="2" ry="2" />
<text  x="821.81" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (1 samples, 0.03%)</title><rect x="16.6" y="373" width="0.4" height="15.0" fill="rgb(215,148,38)" rx="2" ry="2" />
<text  x="19.64" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%)</title><rect x="89.7" y="501" width="0.4" height="15.0" fill="rgb(211,178,41)" rx="2" ry="2" />
<text  x="92.70" y="511.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (1 samples, 0.03%)</title><rect x="1154.9" y="1701" width="0.4" height="15.0" fill="rgb(240,168,38)" rx="2" ry="2" />
<text  x="1157.95" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="59.1" y="293" width="0.7" height="15.0" fill="rgb(221,40,23)" rx="2" ry="2" />
<text  x="62.07" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="64.6" y="357" width="0.4" height="15.0" fill="rgb(245,46,1)" rx="2" ry="2" />
<text  x="67.61" y="367.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%)</title><rect x="526.2" y="1605" width="1.8" height="15.0" fill="rgb(238,88,44)" rx="2" ry="2" />
<text  x="529.20" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_channel (1 samples, 0.03%)</title><rect x="25.5" y="309" width="0.4" height="15.0" fill="rgb(213,222,15)" rx="2" ry="2" />
<text  x="28.50" y="319.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.09%)</title><rect x="174.9" y="1765" width="1.1" height="15.0" fill="rgb(240,101,21)" rx="2" ry="2" />
<text  x="177.93" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="133.6" y="1525" width="0.4" height="15.0" fill="rgb(238,50,39)" rx="2" ry="2" />
<text  x="136.61" y="1535.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%)</title><rect x="69.4" y="373" width="0.4" height="15.0" fill="rgb(205,25,9)" rx="2" ry="2" />
<text  x="72.41" y="383.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.31%)</title><rect x="1081.2" y="1653" width="3.6" height="15.0" fill="rgb(216,84,37)" rx="2" ry="2" />
<text  x="1084.15" y="1663.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (1 samples, 0.03%)</title><rect x="105.2" y="1605" width="0.4" height="15.0" fill="rgb(241,60,4)" rx="2" ry="2" />
<text  x="108.20" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%)</title><rect x="878.6" y="1685" width="0.3" height="15.0" fill="rgb(230,64,13)" rx="2" ry="2" />
<text  x="881.58" y="1695.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (3 samples, 0.09%)</title><rect x="863.1" y="1637" width="1.1" height="15.0" fill="rgb(222,166,25)" rx="2" ry="2" />
<text  x="866.08" y="1647.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%)</title><rect x="733.2" y="1749" width="0.7" height="15.0" fill="rgb(252,134,37)" rx="2" ry="2" />
<text  x="736.20" y="1759.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.03%)</title><rect x="149.8" y="1829" width="0.4" height="15.0" fill="rgb(207,0,47)" rx="2" ry="2" />
<text  x="152.84" y="1839.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="98.6" y="869" width="0.3" height="15.0" fill="rgb(213,166,20)" rx="2" ry="2" />
<text  x="101.56" y="879.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (2 samples, 0.06%)</title><rect x="272.7" y="1685" width="0.8" height="15.0" fill="rgb(222,224,26)" rx="2" ry="2" />
<text  x="275.71" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%)</title><rect x="61.3" y="357" width="0.4" height="15.0" fill="rgb(211,52,53)" rx="2" ry="2" />
<text  x="64.29" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="67.2" y="373" width="0.4" height="15.0" fill="rgb(215,214,45)" rx="2" ry="2" />
<text  x="70.19" y="383.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (13 samples, 0.41%)</title><rect x="52.1" y="549" width="4.8" height="15.0" fill="rgb(206,202,25)" rx="2" ry="2" />
<text  x="55.06" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="631.4" y="1653" width="0.3" height="15.0" fill="rgb(223,126,31)" rx="2" ry="2" />
<text  x="634.36" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="1025.1" y="1541" width="0.3" height="15.0" fill="rgb(253,182,21)" rx="2" ry="2" />
<text  x="1028.07" y="1551.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_M_head (1 samples, 0.03%)</title><rect x="113.7" y="1445" width="0.4" height="15.0" fill="rgb(230,59,17)" rx="2" ry="2" />
<text  x="116.68" y="1455.5" ></text>
</g>
<g >
<title>create_partitions (84 samples, 2.63%)</title><rect x="109.3" y="1781" width="31.0" height="15.0" fill="rgb(217,227,46)" rx="2" ry="2" />
<text  x="112.26" y="1791.5" >cr..</text>
</g>
<g >
<title>service::client_state::set_keyspace (6 samples, 0.19%)</title><rect x="847.6" y="1717" width="2.2" height="15.0" fill="rgb(211,95,18)" rx="2" ry="2" />
<text  x="850.59" y="1727.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (30 samples, 0.94%)</title><rect x="898.9" y="1669" width="11.0" height="15.0" fill="rgb(210,57,34)" rx="2" ry="2" />
<text  x="901.87" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="111.5" y="1349" width="0.3" height="15.0" fill="rgb(206,69,31)" rx="2" ry="2" />
<text  x="114.47" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%)</title><rect x="30.7" y="213" width="0.3" height="15.0" fill="rgb(245,182,48)" rx="2" ry="2" />
<text  x="33.66" y="223.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="71.6" y="437" width="0.4" height="15.0" fill="rgb(245,20,7)" rx="2" ry="2" />
<text  x="74.62" y="447.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%)</title><rect x="132.1" y="1605" width="0.4" height="15.0" fill="rgb(238,35,16)" rx="2" ry="2" />
<text  x="135.13" y="1615.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (4 samples, 0.13%)</title><rect x="422.9" y="1685" width="1.5" height="15.0" fill="rgb(211,100,11)" rx="2" ry="2" />
<text  x="425.89" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%)</title><rect x="151.3" y="1445" width="0.4" height="15.0" fill="rgb(213,198,16)" rx="2" ry="2" />
<text  x="154.32" y="1455.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (2 samples, 0.06%)</title><rect x="184.2" y="1717" width="0.7" height="15.0" fill="rgb(214,132,28)" rx="2" ry="2" />
<text  x="187.16" y="1727.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;multishard_combining_reader, dht::sharder const&amp;, seastar::shared_ptr&lt;reader_lifecycle_policy&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, nonwrapping_interval&lt;dht::ring_position&gt; const&amp;, query::partition_slice const&amp;, seastar::io_priority_class const&amp;, tracing::trace_state_ptr, seastar::bool_class&lt;flat_mutation_reader::partition_range_forwarding_tag&gt;&amp;&gt; (1 samples, 0.03%)</title><rect x="182.3" y="1557" width="0.4" height="15.0" fill="rgb(226,122,42)" rx="2" ry="2" />
<text  x="185.31" y="1567.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="66.1" y="229" width="0.4" height="15.0" fill="rgb(239,91,39)" rx="2" ry="2" />
<text  x="69.09" y="239.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1557" width="88.6" height="15.0" fill="rgb(232,182,41)" rx="2" ry="2" />
<text  x="14.11" y="1567.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%)</title><rect x="98.9" y="773" width="0.4" height="15.0" fill="rgb(248,5,36)" rx="2" ry="2" />
<text  x="101.92" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%)</title><rect x="62.4" y="293" width="0.4" height="15.0" fill="rgb(237,36,43)" rx="2" ry="2" />
<text  x="65.40" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (34 samples, 1.06%)</title><rect x="24.8" y="325" width="12.5" height="15.0" fill="rgb(240,61,33)" rx="2" ry="2" />
<text  x="27.76" y="335.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%)</title><rect x="684.5" y="1733" width="0.4" height="15.0" fill="rgb(237,180,4)" rx="2" ry="2" />
<text  x="687.50" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="137.7" y="1557" width="0.3" height="15.0" fill="rgb(236,74,48)" rx="2" ry="2" />
<text  x="140.67" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%)</title><rect x="544.7" y="1685" width="1.1" height="15.0" fill="rgb(245,75,16)" rx="2" ry="2" />
<text  x="547.65" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="130.3" y="1397" width="0.4" height="15.0" fill="rgb(230,61,13)" rx="2" ry="2" />
<text  x="133.29" y="1407.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="64.6" y="325" width="0.4" height="15.0" fill="rgb(243,43,50)" rx="2" ry="2" />
<text  x="67.61" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="58.0" y="341" width="0.3" height="15.0" fill="rgb(207,32,28)" rx="2" ry="2" />
<text  x="60.97" y="351.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::raw::modification_statement*, false&gt;::_M_head (1 samples, 0.03%)</title><rect x="94.5" y="485" width="0.4" height="15.0" fill="rgb(211,2,52)" rx="2" ry="2" />
<text  x="97.50" y="495.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="71.3" y="293" width="0.3" height="15.0" fill="rgb(227,151,16)" rx="2" ry="2" />
<text  x="74.25" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%)</title><rect x="637.6" y="1637" width="0.4" height="15.0" fill="rgb(239,201,6)" rx="2" ry="2" />
<text  x="640.64" y="1647.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (3 samples, 0.09%)</title><rect x="102.2" y="1589" width="1.2" height="15.0" fill="rgb(243,150,47)" rx="2" ry="2" />
<text  x="105.25" y="1599.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (44 samples, 1.38%)</title><rect x="80.1" y="629" width="16.2" height="15.0" fill="rgb(229,198,47)" rx="2" ry="2" />
<text  x="83.11" y="639.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="642.4" y="1621" width="0.4" height="15.0" fill="rgb(236,64,35)" rx="2" ry="2" />
<text  x="645.43" y="1631.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="62.4" y="341" width="0.4" height="15.0" fill="rgb(247,203,41)" rx="2" ry="2" />
<text  x="65.40" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_users_statement, std::default_delete&lt;cql3::statements::list_users_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::list_users_statement&gt;, void&gt; (1 samples, 0.03%)</title><rect x="49.8" y="437" width="0.4" height="15.0" fill="rgb(213,96,52)" rx="2" ry="2" />
<text  x="52.85" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="67.9" y="325" width="0.4" height="15.0" fill="rgb(248,165,49)" rx="2" ry="2" />
<text  x="70.93" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (2 samples, 0.06%)</title><rect x="20.0" y="213" width="0.7" height="15.0" fill="rgb(229,90,41)" rx="2" ry="2" />
<text  x="22.96" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%)</title><rect x="60.6" y="341" width="0.3" height="15.0" fill="rgb(233,181,30)" rx="2" ry="2" />
<text  x="63.55" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="67.9" y="277" width="0.4" height="15.0" fill="rgb(242,92,31)" rx="2" ry="2" />
<text  x="70.93" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (1 samples, 0.03%)</title><rect x="105.2" y="1541" width="0.4" height="15.0" fill="rgb(225,103,4)" rx="2" ry="2" />
<text  x="108.20" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.03%)</title><rect x="63.1" y="277" width="0.4" height="15.0" fill="rgb(239,115,4)" rx="2" ry="2" />
<text  x="66.13" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.03%)</title><rect x="28.8" y="213" width="0.4" height="15.0" fill="rgb(252,55,52)" rx="2" ry="2" />
<text  x="31.82" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="650.2" y="1685" width="0.4" height="15.0" fill="rgb(225,40,23)" rx="2" ry="2" />
<text  x="653.18" y="1695.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="815.1" y="1605" width="0.8" height="15.0" fill="rgb(212,98,44)" rx="2" ry="2" />
<text  x="818.12" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (2 samples, 0.06%)</title><rect x="75.3" y="469" width="0.7" height="15.0" fill="rgb(232,135,23)" rx="2" ry="2" />
<text  x="78.31" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.03%)</title><rect x="1155.7" y="1797" width="0.4" height="15.0" fill="rgb(223,58,54)" rx="2" ry="2" />
<text  x="1158.68" y="1807.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.03%)</title><rect x="150.6" y="1781" width="0.4" height="15.0" fill="rgb(228,226,17)" rx="2" ry="2" />
<text  x="153.58" y="1791.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="571.2" y="1637" width="0.4" height="15.0" fill="rgb(208,48,44)" rx="2" ry="2" />
<text  x="574.22" y="1647.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%)</title><rect x="1010.3" y="1509" width="3.0" height="15.0" fill="rgb(207,24,41)" rx="2" ry="2" />
<text  x="1013.31" y="1519.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%)</title><rect x="314.8" y="1589" width="0.3" height="15.0" fill="rgb(218,17,47)" rx="2" ry="2" />
<text  x="317.78" y="1599.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%)</title><rect x="48.0" y="277" width="0.4" height="15.0" fill="rgb(231,156,53)" rx="2" ry="2" />
<text  x="51.01" y="287.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%)</title><rect x="182.3" y="1653" width="0.4" height="15.0" fill="rgb(237,149,39)" rx="2" ry="2" />
<text  x="185.31" y="1663.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%)</title><rect x="969.3" y="1589" width="3.4" height="15.0" fill="rgb(241,146,8)" rx="2" ry="2" />
<text  x="972.35" y="1599.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (4 samples, 0.13%)</title><rect x="482.7" y="1653" width="1.4" height="15.0" fill="rgb(240,205,15)" rx="2" ry="2" />
<text  x="485.66" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (6 samples, 0.19%)</title><rect x="75.3" y="485" width="2.2" height="15.0" fill="rgb(209,138,54)" rx="2" ry="2" />
<text  x="78.31" y="495.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.03%)</title><rect x="516.2" y="1669" width="0.4" height="15.0" fill="rgb(220,152,53)" rx="2" ry="2" />
<text  x="519.24" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="137.3" y="1301" width="0.4" height="15.0" fill="rgb(208,89,19)" rx="2" ry="2" />
<text  x="140.30" y="1311.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (1 samples, 0.03%)</title><rect x="191.2" y="1749" width="0.3" height="15.0" fill="rgb(236,97,37)" rx="2" ry="2" />
<text  x="194.17" y="1759.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (16 samples, 0.50%)</title><rect x="246.1" y="1717" width="6.0" height="15.0" fill="rgb(245,145,54)" rx="2" ry="2" />
<text  x="249.15" y="1727.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="130.3" y="1333" width="0.4" height="15.0" fill="rgb(236,130,46)" rx="2" ry="2" />
<text  x="133.29" y="1343.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="75.3" y="325" width="0.4" height="15.0" fill="rgb(229,34,6)" rx="2" ry="2" />
<text  x="78.31" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (128 samples, 4.00%)</title><rect x="1030.2" y="1621" width="47.3" height="15.0" fill="rgb(243,38,48)" rx="2" ry="2" />
<text  x="1033.23" y="1631.5" >serv..</text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.03%)</title><rect x="421.4" y="1685" width="0.4" height="15.0" fill="rgb(207,208,19)" rx="2" ry="2" />
<text  x="424.41" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.03%)</title><rect x="222.5" y="1733" width="0.4" height="15.0" fill="rgb(252,94,50)" rx="2" ry="2" />
<text  x="225.53" y="1743.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%)</title><rect x="99.3" y="949" width="0.4" height="15.0" fill="rgb(249,200,47)" rx="2" ry="2" />
<text  x="102.29" y="959.5" ></text>
</g>
<g >
<title>create_partitions (15 samples, 0.47%)</title><rect x="99.7" y="1717" width="5.5" height="15.0" fill="rgb(249,131,39)" rx="2" ry="2" />
<text  x="102.66" y="1727.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="419.9" y="1685" width="1.1" height="15.0" fill="rgb(251,81,52)" rx="2" ry="2" />
<text  x="422.94" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%)</title><rect x="344.3" y="1557" width="0.4" height="15.0" fill="rgb(233,74,52)" rx="2" ry="2" />
<text  x="347.30" y="1567.5" ></text>
</g>
<g >
<title>std::optional&lt;cql3::expr::expression&gt;::optional (1 samples, 0.03%)</title><rect x="138.8" y="1541" width="0.3" height="15.0" fill="rgb(251,109,13)" rx="2" ry="2" />
<text  x="141.77" y="1551.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (3 samples, 0.09%)</title><rect x="82.7" y="501" width="1.1" height="15.0" fill="rgb(221,170,29)" rx="2" ry="2" />
<text  x="85.69" y="511.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="54.6" y="229" width="0.4" height="15.0" fill="rgb(238,95,1)" rx="2" ry="2" />
<text  x="57.65" y="239.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="120.7" y="1509" width="0.4" height="15.0" fill="rgb(246,100,13)" rx="2" ry="2" />
<text  x="123.69" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="137.3" y="1317" width="0.4" height="15.0" fill="rgb(239,102,29)" rx="2" ry="2" />
<text  x="140.30" y="1327.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%)</title><rect x="60.6" y="309" width="0.3" height="15.0" fill="rgb(234,175,48)" rx="2" ry="2" />
<text  x="63.55" y="319.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.06%)</title><rect x="1001.1" y="1525" width="0.7" height="15.0" fill="rgb(214,178,32)" rx="2" ry="2" />
<text  x="1004.08" y="1535.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.03%)</title><rect x="98.6" y="581" width="0.3" height="15.0" fill="rgb(231,216,39)" rx="2" ry="2" />
<text  x="101.56" y="591.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="132.1" y="1525" width="0.4" height="15.0" fill="rgb(249,191,35)" rx="2" ry="2" />
<text  x="135.13" y="1535.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.03%)</title><rect x="141.0" y="1493" width="0.4" height="15.0" fill="rgb(235,134,28)" rx="2" ry="2" />
<text  x="143.99" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="111.8" y="1413" width="0.4" height="15.0" fill="rgb(228,201,51)" rx="2" ry="2" />
<text  x="114.84" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%)</title><rect x="1051.3" y="1557" width="0.3" height="15.0" fill="rgb(247,134,31)" rx="2" ry="2" />
<text  x="1054.26" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.03%)</title><rect x="36.2" y="277" width="0.4" height="15.0" fill="rgb(246,123,23)" rx="2" ry="2" />
<text  x="39.20" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="114.4" y="1445" width="0.4" height="15.0" fill="rgb(241,119,23)" rx="2" ry="2" />
<text  x="117.42" y="1455.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%)</title><rect x="1019.9" y="1493" width="0.4" height="15.0" fill="rgb(243,67,24)" rx="2" ry="2" />
<text  x="1022.90" y="1503.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.06%)</title><rect x="529.9" y="1637" width="0.7" height="15.0" fill="rgb(220,148,19)" rx="2" ry="2" />
<text  x="532.89" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_table_statement, std::default_delete&lt;cql3::statements::alter_table_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="95.2" y="565" width="0.4" height="15.0" fill="rgb(224,85,37)" rx="2" ry="2" />
<text  x="98.23" y="575.5" ></text>
</g>
<g >
<title>db::system_keyspace::make (1 samples, 0.03%)</title><rect x="141.0" y="1573" width="0.4" height="15.0" fill="rgb(226,9,13)" rx="2" ry="2" />
<text  x="143.99" y="1583.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (2 samples, 0.06%)</title><rect x="47.3" y="325" width="0.7" height="15.0" fill="rgb(212,132,46)" rx="2" ry="2" />
<text  x="50.27" y="335.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.03%)</title><rect x="793.7" y="1669" width="0.4" height="15.0" fill="rgb(239,48,16)" rx="2" ry="2" />
<text  x="796.71" y="1679.5" ></text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::allocator (1 samples, 0.03%)</title><rect x="46.9" y="117" width="0.4" height="15.0" fill="rgb(224,115,9)" rx="2" ry="2" />
<text  x="49.90" y="127.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (1 samples, 0.03%)</title><rect x="661.6" y="1765" width="0.4" height="15.0" fill="rgb(228,40,11)" rx="2" ry="2" />
<text  x="664.62" y="1775.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.03%)</title><rect x="945.7" y="1621" width="0.4" height="15.0" fill="rgb(220,47,11)" rx="2" ry="2" />
<text  x="948.73" y="1631.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%)</title><rect x="109.6" y="1573" width="0.4" height="15.0" fill="rgb(254,225,1)" rx="2" ry="2" />
<text  x="112.62" y="1583.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="75.3" y="277" width="0.4" height="15.0" fill="rgb(248,169,43)" rx="2" ry="2" />
<text  x="78.31" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="78.3" y="309" width="0.3" height="15.0" fill="rgb(226,6,22)" rx="2" ry="2" />
<text  x="81.26" y="319.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1413" width="88.6" height="15.0" fill="rgb(217,191,53)" rx="2" ry="2" />
<text  x="14.11" y="1423.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="56.9" y="357" width="0.3" height="15.0" fill="rgb(241,100,42)" rx="2" ry="2" />
<text  x="59.86" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%)</title><rect x="747.2" y="1733" width="0.4" height="15.0" fill="rgb(229,136,52)" rx="2" ry="2" />
<text  x="750.22" y="1743.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%)</title><rect x="98.6" y="805" width="0.3" height="15.0" fill="rgb(239,83,26)" rx="2" ry="2" />
<text  x="101.56" y="815.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.03%)</title><rect x="182.7" y="1557" width="0.4" height="15.0" fill="rgb(253,198,9)" rx="2" ry="2" />
<text  x="185.68" y="1567.5" ></text>
</g>
<g >
<title>create_partitions (14 samples, 0.44%)</title><rect x="74.9" y="661" width="5.2" height="15.0" fill="rgb(240,140,38)" rx="2" ry="2" />
<text  x="77.94" y="671.5" ></text>
</g>
<g >
<title>dht::tri_compare (14 samples, 0.44%)</title><rect x="1071.9" y="1541" width="5.2" height="15.0" fill="rgb(248,206,30)" rx="2" ry="2" />
<text  x="1074.93" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (238 samples, 7.44%)</title><rect x="11.1" y="933" width="87.8" height="15.0" fill="rgb(244,228,20)" rx="2" ry="2" />
<text  x="14.11" y="943.5" >[unknown]</text>
</g>
<g >
<title>row::external_memory_usage (22 samples, 0.69%)</title><rect x="350.2" y="1557" width="8.1" height="15.0" fill="rgb(205,55,53)" rx="2" ry="2" />
<text  x="353.20" y="1567.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%)</title><rect x="153.2" y="1765" width="0.3" height="15.0" fill="rgb(252,195,31)" rx="2" ry="2" />
<text  x="156.16" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%)</title><rect x="111.5" y="1413" width="0.3" height="15.0" fill="rgb(213,187,3)" rx="2" ry="2" />
<text  x="114.47" y="1423.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%)</title><rect x="141.0" y="1653" width="0.4" height="15.0" fill="rgb(210,149,51)" rx="2" ry="2" />
<text  x="143.99" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="112.2" y="1493" width="0.4" height="15.0" fill="rgb(244,186,22)" rx="2" ry="2" />
<text  x="115.21" y="1503.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (12 samples, 0.38%)</title><rect x="492.3" y="1653" width="4.4" height="15.0" fill="rgb(230,118,24)" rx="2" ry="2" />
<text  x="495.26" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (7 samples, 0.22%)</title><rect x="45.4" y="373" width="2.6" height="15.0" fill="rgb(207,67,14)" rx="2" ry="2" />
<text  x="48.42" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="70.9" y="341" width="0.4" height="15.0" fill="rgb(250,209,38)" rx="2" ry="2" />
<text  x="73.88" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%)</title><rect x="593.4" y="1653" width="0.3" height="15.0" fill="rgb(234,214,30)" rx="2" ry="2" />
<text  x="596.36" y="1663.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="42.1" y="245" width="0.4" height="15.0" fill="rgb(209,38,45)" rx="2" ry="2" />
<text  x="45.10" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="45.8" y="309" width="0.4" height="15.0" fill="rgb(209,59,53)" rx="2" ry="2" />
<text  x="48.79" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.03%)</title><rect x="37.3" y="325" width="0.4" height="15.0" fill="rgb(206,53,40)" rx="2" ry="2" />
<text  x="40.30" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;frozen_schema  (1 samples, 0.03%)</title><rect x="183.8" y="1685" width="0.4" height="15.0" fill="rgb(252,211,19)" rx="2" ry="2" />
<text  x="186.79" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="68.7" y="197" width="0.3" height="15.0" fill="rgb(223,204,17)" rx="2" ry="2" />
<text  x="71.67" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::modification_statement, std::default_delete&lt;cql3::statements::raw::modification_statement&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="94.5" y="533" width="0.4" height="15.0" fill="rgb(241,94,27)" rx="2" ry="2" />
<text  x="97.50" y="543.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.56%)</title><rect x="1104.8" y="1701" width="6.6" height="15.0" fill="rgb(242,189,32)" rx="2" ry="2" />
<text  x="1107.77" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (256 samples, 8.01%)</title><rect x="11.1" y="1845" width="94.5" height="15.0" fill="rgb(242,168,40)" rx="2" ry="2" />
<text  x="14.11" y="1855.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="54.3" y="309" width="0.3" height="15.0" fill="rgb(211,13,25)" rx="2" ry="2" />
<text  x="57.28" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="822.5" y="1605" width="0.7" height="15.0" fill="rgb(250,62,14)" rx="2" ry="2" />
<text  x="825.50" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="73.5" y="245" width="0.3" height="15.0" fill="rgb(248,185,24)" rx="2" ry="2" />
<text  x="76.46" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_UPDATE (2 samples, 0.06%)</title><rect x="32.5" y="309" width="0.7" height="15.0" fill="rgb(219,47,13)" rx="2" ry="2" />
<text  x="35.51" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="98.6" y="629" width="0.3" height="15.0" fill="rgb(210,13,35)" rx="2" ry="2" />
<text  x="101.56" y="639.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false&gt;::operator= (1 samples, 0.03%)</title><rect x="43.2" y="341" width="0.4" height="15.0" fill="rgb(207,34,34)" rx="2" ry="2" />
<text  x="46.21" y="351.5" ></text>
</g>
<g >
<title>database::has_keyspace (5 samples, 0.16%)</title><rect x="832.5" y="1653" width="1.8" height="15.0" fill="rgb(254,136,29)" rx="2" ry="2" />
<text  x="835.46" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="42.1" y="277" width="0.4" height="15.0" fill="rgb(222,97,18)" rx="2" ry="2" />
<text  x="45.10" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (3 samples, 0.09%)</title><rect x="70.5" y="469" width="1.1" height="15.0" fill="rgb(232,24,24)" rx="2" ry="2" />
<text  x="73.51" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="130.3" y="1413" width="0.4" height="15.0" fill="rgb(227,14,45)" rx="2" ry="2" />
<text  x="133.29" y="1423.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%)</title><rect x="151.3" y="1653" width="0.4" height="15.0" fill="rgb(253,30,26)" rx="2" ry="2" />
<text  x="154.32" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (3 samples, 0.09%)</title><rect x="62.8" y="373" width="1.1" height="15.0" fill="rgb(249,43,48)" rx="2" ry="2" />
<text  x="65.76" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::untyped_constant, false&gt;::_M_get (1 samples, 0.03%)</title><rect x="137.3" y="1173" width="0.4" height="15.0" fill="rgb(230,147,47)" rx="2" ry="2" />
<text  x="140.30" y="1183.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%)</title><rect x="112.9" y="1493" width="0.4" height="15.0" fill="rgb(252,72,13)" rx="2" ry="2" />
<text  x="115.95" y="1503.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="68.7" y="213" width="0.3" height="15.0" fill="rgb(237,158,42)" rx="2" ry="2" />
<text  x="71.67" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.03%)</title><rect x="389.3" y="1493" width="0.4" height="15.0" fill="rgb(247,54,30)" rx="2" ry="2" />
<text  x="392.31" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="846.8" y="1717" width="0.4" height="15.0" fill="rgb(205,183,33)" rx="2" ry="2" />
<text  x="849.85" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.09%)</title><rect x="193.4" y="1749" width="1.1" height="15.0" fill="rgb(233,26,41)" rx="2" ry="2" />
<text  x="196.38" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="66.8" y="373" width="0.4" height="15.0" fill="rgb(239,156,53)" rx="2" ry="2" />
<text  x="69.82" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (21 samples, 0.66%)</title><rect x="62.4" y="485" width="7.7" height="15.0" fill="rgb(218,166,26)" rx="2" ry="2" />
<text  x="65.40" y="495.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1317" width="88.6" height="15.0" fill="rgb(240,46,3)" rx="2" ry="2" />
<text  x="14.11" y="1327.5" >[unknown]</text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="141.0" y="1797" width="0.4" height="15.0" fill="rgb(232,199,15)" rx="2" ry="2" />
<text  x="143.99" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.03%)</title><rect x="863.5" y="1621" width="0.3" height="15.0" fill="rgb(228,113,20)" rx="2" ry="2" />
<text  x="866.45" y="1631.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (111 samples, 3.47%)</title><rect x="11.1" y="597" width="41.0" height="15.0" fill="rgb(233,128,22)" rx="2" ry="2" />
<text  x="14.11" y="607.5" >sea..</text>
</g>
<g >
<title>mutation_reader_merger::close (1 samples, 0.03%)</title><rect x="542.1" y="1685" width="0.3" height="15.0" fill="rgb(234,74,24)" rx="2" ry="2" />
<text  x="545.07" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="115.2" y="1509" width="0.3" height="15.0" fill="rgb(211,194,28)" rx="2" ry="2" />
<text  x="118.16" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.03%)</title><rect x="1153.5" y="1733" width="0.3" height="15.0" fill="rgb(208,195,7)" rx="2" ry="2" />
<text  x="1156.47" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::get_deleter (1 samples, 0.03%)</title><rect x="128.1" y="1525" width="0.3" height="15.0" fill="rgb(231,183,49)" rx="2" ry="2" />
<text  x="131.07" y="1535.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%)</title><rect x="556.5" y="1669" width="0.3" height="15.0" fill="rgb(217,195,3)" rx="2" ry="2" />
<text  x="559.46" y="1679.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (19 samples, 0.59%)</title><rect x="489.7" y="1669" width="7.0" height="15.0" fill="rgb(254,55,43)" rx="2" ry="2" />
<text  x="492.67" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1301" width="88.6" height="15.0" fill="rgb(208,104,5)" rx="2" ry="2" />
<text  x="14.11" y="1311.5" >[unknown]</text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::add_restriction (1 samples, 0.03%)</title><rect x="109.3" y="1573" width="0.3" height="15.0" fill="rgb(205,13,50)" rx="2" ry="2" />
<text  x="112.26" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="128.4" y="1461" width="0.8" height="15.0" fill="rgb(207,50,15)" rx="2" ry="2" />
<text  x="131.44" y="1471.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="99.3" y="997" width="0.4" height="15.0" fill="rgb(227,183,0)" rx="2" ry="2" />
<text  x="102.29" y="1007.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%)</title><rect x="55.4" y="373" width="0.4" height="15.0" fill="rgb(226,187,7)" rx="2" ry="2" />
<text  x="58.38" y="383.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (59 samples, 1.84%)</title><rect x="1055.7" y="1589" width="21.8" height="15.0" fill="rgb(242,112,48)" rx="2" ry="2" />
<text  x="1058.69" y="1599.5" >l..</text>
</g>
<g >
<title>__libc_start_main (2,717 samples, 84.96%)</title><rect x="153.5" y="1893" width="1002.6" height="15.0" fill="rgb(251,120,54)" rx="2" ry="2" />
<text  x="156.53" y="1903.5" >__libc_start_main</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="152.8" y="1813" width="0.4" height="15.0" fill="rgb(225,117,8)" rx="2" ry="2" />
<text  x="155.80" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%)</title><rect x="74.6" y="421" width="0.3" height="15.0" fill="rgb(209,221,21)" rx="2" ry="2" />
<text  x="77.57" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="96.7" y="501" width="0.4" height="15.0" fill="rgb(235,209,49)" rx="2" ry="2" />
<text  x="99.71" y="511.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (10 samples, 0.31%)</title><rect x="859.0" y="1605" width="3.7" height="15.0" fill="rgb(226,178,53)" rx="2" ry="2" />
<text  x="862.02" y="1615.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%)</title><rect x="152.8" y="1749" width="0.4" height="15.0" fill="rgb(237,109,43)" rx="2" ry="2" />
<text  x="155.80" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="141.0" y="1765" width="0.4" height="15.0" fill="rgb(213,184,10)" rx="2" ry="2" />
<text  x="143.99" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.06%)</title><rect x="96.3" y="741" width="0.8" height="15.0" fill="rgb(223,5,45)" rx="2" ry="2" />
<text  x="99.34" y="751.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="96.3" y="453" width="0.4" height="15.0" fill="rgb(231,180,14)" rx="2" ry="2" />
<text  x="99.34" y="463.5" ></text>
</g>
<g >
<title>database::find_column_family (1 samples, 0.03%)</title><rect x="103.4" y="1589" width="0.3" height="15.0" fill="rgb(206,175,26)" rx="2" ry="2" />
<text  x="106.35" y="1599.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (2 samples, 0.06%)</title><rect x="107.8" y="1797" width="0.7" height="15.0" fill="rgb(236,21,44)" rx="2" ry="2" />
<text  x="110.78" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="134.0" y="1525" width="0.3" height="15.0" fill="rgb(236,74,33)" rx="2" ry="2" />
<text  x="136.98" y="1535.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (3 samples, 0.09%)</title><rect x="1099.2" y="1621" width="1.1" height="15.0" fill="rgb(233,166,15)" rx="2" ry="2" />
<text  x="1102.23" y="1631.5" ></text>
</g>
<g >
<title>database::find_keyspace (8 samples, 0.25%)</title><rect x="1042.0" y="1605" width="3.0" height="15.0" fill="rgb(213,213,37)" rx="2" ry="2" />
<text  x="1045.04" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%)</title><rect x="57.2" y="357" width="0.8" height="15.0" fill="rgb(247,219,10)" rx="2" ry="2" />
<text  x="60.23" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="137.3" y="1397" width="0.4" height="15.0" fill="rgb(244,47,49)" rx="2" ry="2" />
<text  x="140.30" y="1407.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.16%)</title><rect x="834.3" y="1653" width="1.8" height="15.0" fill="rgb(225,193,35)" rx="2" ry="2" />
<text  x="837.30" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="897.0" y="1573" width="0.4" height="15.0" fill="rgb(219,52,1)" rx="2" ry="2" />
<text  x="900.03" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="115.2" y="1461" width="0.3" height="15.0" fill="rgb(248,175,47)" rx="2" ry="2" />
<text  x="118.16" y="1471.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%)</title><rect x="886.3" y="1605" width="2.2" height="15.0" fill="rgb(233,115,52)" rx="2" ry="2" />
<text  x="889.33" y="1615.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (3 samples, 0.09%)</title><rect x="127.0" y="1525" width="1.1" height="15.0" fill="rgb(221,172,4)" rx="2" ry="2" />
<text  x="129.97" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="128.4" y="1493" width="0.8" height="15.0" fill="rgb(228,179,50)" rx="2" ry="2" />
<text  x="131.44" y="1503.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.56%)</title><rect x="1104.8" y="1669" width="6.6" height="15.0" fill="rgb(222,52,28)" rx="2" ry="2" />
<text  x="1107.77" y="1679.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%)</title><rect x="138.0" y="1525" width="0.4" height="15.0" fill="rgb(243,138,44)" rx="2" ry="2" />
<text  x="141.04" y="1535.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (7 samples, 0.22%)</title><rect x="640.6" y="1637" width="2.6" height="15.0" fill="rgb(211,107,19)" rx="2" ry="2" />
<text  x="643.59" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (9 samples, 0.28%)</title><rect x="53.5" y="421" width="3.4" height="15.0" fill="rgb(209,118,23)" rx="2" ry="2" />
<text  x="56.54" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%)</title><rect x="126.2" y="1493" width="0.4" height="15.0" fill="rgb(243,180,42)" rx="2" ry="2" />
<text  x="129.23" y="1503.5" ></text>
</g>
<g >
<title>create_partitions (4 samples, 0.13%)</title><rect x="97.1" y="725" width="1.5" height="15.0" fill="rgb(206,53,45)" rx="2" ry="2" />
<text  x="100.08" y="735.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="70.9" y="405" width="0.4" height="15.0" fill="rgb(251,16,42)" rx="2" ry="2" />
<text  x="73.88" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%)</title><rect x="73.5" y="325" width="0.3" height="15.0" fill="rgb(226,91,6)" rx="2" ry="2" />
<text  x="76.46" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.03%)</title><rect x="319.2" y="1589" width="0.4" height="15.0" fill="rgb(216,216,41)" rx="2" ry="2" />
<text  x="322.21" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="66.1" y="405" width="0.4" height="15.0" fill="rgb(252,137,18)" rx="2" ry="2" />
<text  x="69.09" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (3 samples, 0.09%)</title><rect x="60.2" y="389" width="1.1" height="15.0" fill="rgb(218,156,42)" rx="2" ry="2" />
<text  x="63.18" y="399.5" ></text>
</g>
<g >
<title>db::schema_tables::store_map&lt;clustering_key_prefix, std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="183.8" y="1605" width="0.4" height="15.0" fill="rgb(237,77,27)" rx="2" ry="2" />
<text  x="186.79" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="132.9" y="1413" width="0.3" height="15.0" fill="rgb(228,68,9)" rx="2" ry="2" />
<text  x="135.87" y="1423.5" ></text>
</g>
<g >
<title>make_shared_schema (1 samples, 0.03%)</title><rect x="141.0" y="1509" width="0.4" height="15.0" fill="rgb(238,119,33)" rx="2" ry="2" />
<text  x="143.99" y="1519.5" ></text>
</g>
<g >
<title>do_cql_test (4 samples, 0.13%)</title><rect x="97.1" y="741" width="1.5" height="15.0" fill="rgb(238,161,53)" rx="2" ry="2" />
<text  x="100.08" y="751.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="48.0" y="325" width="0.4" height="15.0" fill="rgb(211,109,42)" rx="2" ry="2" />
<text  x="51.01" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.09%)</title><rect x="41.4" y="405" width="1.1" height="15.0" fill="rgb(254,112,7)" rx="2" ry="2" />
<text  x="44.36" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (4 samples, 0.13%)</title><rect x="134.3" y="1461" width="1.5" height="15.0" fill="rgb(241,24,4)" rx="2" ry="2" />
<text  x="137.35" y="1471.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.09%)</title><rect x="551.3" y="1685" width="1.1" height="15.0" fill="rgb(214,56,5)" rx="2" ry="2" />
<text  x="554.29" y="1695.5" ></text>
</g>
<g >
<title>utils::chunked_vector&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, atomic_cell&gt;, 131072ul&gt;::do_reserve_for_push_back (1 samples, 0.03%)</title><rect x="862.7" y="1573" width="0.4" height="15.0" fill="rgb(223,160,13)" rx="2" ry="2" />
<text  x="865.71" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="129.5" y="1397" width="0.4" height="15.0" fill="rgb(231,198,32)" rx="2" ry="2" />
<text  x="132.55" y="1407.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (26 samples, 0.81%)</title><rect x="86.7" y="613" width="9.6" height="15.0" fill="rgb(216,60,21)" rx="2" ry="2" />
<text  x="89.75" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="136.6" y="1525" width="0.3" height="15.0" fill="rgb(237,170,17)" rx="2" ry="2" />
<text  x="139.56" y="1535.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (7 samples, 0.22%)</title><rect x="851.3" y="1749" width="2.6" height="15.0" fill="rgb(242,27,25)" rx="2" ry="2" />
<text  x="854.28" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="141.0" y="1621" width="0.4" height="15.0" fill="rgb(226,146,3)" rx="2" ry="2" />
<text  x="143.99" y="1631.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.03%)</title><rect x="138.8" y="1605" width="0.3" height="15.0" fill="rgb(243,161,24)" rx="2" ry="2" />
<text  x="141.77" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%)</title><rect x="48.4" y="405" width="0.3" height="15.0" fill="rgb(208,63,22)" rx="2" ry="2" />
<text  x="51.37" y="415.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.03%)</title><rect x="85.3" y="485" width="0.3" height="15.0" fill="rgb(250,155,25)" rx="2" ry="2" />
<text  x="88.27" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%)</title><rect x="933.6" y="1621" width="2.9" height="15.0" fill="rgb(249,220,45)" rx="2" ry="2" />
<text  x="936.56" y="1631.5" ></text>
</g>
<g >
<title>distributed_loader::init_system_keyspace (1 samples, 0.03%)</title><rect x="141.0" y="1733" width="0.4" height="15.0" fill="rgb(206,146,14)" rx="2" ry="2" />
<text  x="143.99" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="68.7" y="373" width="0.7" height="15.0" fill="rgb(248,167,49)" rx="2" ry="2" />
<text  x="71.67" y="383.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.03%)</title><rect x="152.1" y="1877" width="0.3" height="15.0" fill="rgb(228,35,31)" rx="2" ry="2" />
<text  x="155.06" y="1887.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (2 samples, 0.06%)</title><rect x="46.5" y="325" width="0.8" height="15.0" fill="rgb(245,86,48)" rx="2" ry="2" />
<text  x="49.53" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="134.7" y="1429" width="1.1" height="15.0" fill="rgb(251,59,47)" rx="2" ry="2" />
<text  x="137.72" y="1439.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="130.7" y="1477" width="0.3" height="15.0" fill="rgb(215,187,8)" rx="2" ry="2" />
<text  x="133.66" y="1487.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::index (1 samples, 0.03%)</title><rect x="67.2" y="341" width="0.4" height="15.0" fill="rgb(222,100,50)" rx="2" ry="2" />
<text  x="70.19" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%)</title><rect x="1020.3" y="1493" width="0.3" height="15.0" fill="rgb(253,60,47)" rx="2" ry="2" />
<text  x="1023.27" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="78.3" y="341" width="1.1" height="15.0" fill="rgb(254,203,37)" rx="2" ry="2" />
<text  x="81.26" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (1 samples, 0.03%)</title><rect x="109.3" y="1557" width="0.3" height="15.0" fill="rgb(254,212,21)" rx="2" ry="2" />
<text  x="112.26" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (21 samples, 0.66%)</title><rect x="62.4" y="501" width="7.7" height="15.0" fill="rgb(240,12,28)" rx="2" ry="2" />
<text  x="65.40" y="511.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%)</title><rect x="141.0" y="1717" width="0.4" height="15.0" fill="rgb(248,211,16)" rx="2" ry="2" />
<text  x="143.99" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (1 samples, 0.03%)</title><rect x="99.3" y="677" width="0.4" height="15.0" fill="rgb(243,99,12)" rx="2" ry="2" />
<text  x="102.29" y="687.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (5 samples, 0.16%)</title><rect x="14.8" y="453" width="1.8" height="15.0" fill="rgb(237,118,41)" rx="2" ry="2" />
<text  x="17.80" y="463.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="62.4" y="325" width="0.4" height="15.0" fill="rgb(236,18,4)" rx="2" ry="2" />
<text  x="65.40" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (6 samples, 0.19%)</title><rect x="112.9" y="1541" width="2.3" height="15.0" fill="rgb(224,66,40)" rx="2" ry="2" />
<text  x="115.95" y="1551.5" ></text>
</g>
<g >
<title>db::schema_tables::add_table_params_to_mutations (2 samples, 0.06%)</title><rect x="184.2" y="1669" width="0.7" height="15.0" fill="rgb(241,34,15)" rx="2" ry="2" />
<text  x="187.16" y="1679.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (8 samples, 0.25%)</title><rect x="1132.1" y="1749" width="2.9" height="15.0" fill="rgb(252,62,12)" rx="2" ry="2" />
<text  x="1135.07" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (7 samples, 0.22%)</title><rect x="149.5" y="1845" width="2.6" height="15.0" fill="rgb(210,124,0)" rx="2" ry="2" />
<text  x="152.47" y="1855.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (3 samples, 0.09%)</title><rect x="184.2" y="1765" width="1.1" height="15.0" fill="rgb(243,149,46)" rx="2" ry="2" />
<text  x="187.16" y="1775.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.03%)</title><rect x="773.4" y="1685" width="0.4" height="15.0" fill="rgb(235,39,31)" rx="2" ry="2" />
<text  x="776.42" y="1695.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::~_Tuple_impl (2 samples, 0.06%)</title><rect x="1112.1" y="1749" width="0.8" height="15.0" fill="rgb(227,74,15)" rx="2" ry="2" />
<text  x="1115.15" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="1112.9" y="1701" width="0.4" height="15.0" fill="rgb(246,116,18)" rx="2" ry="2" />
<text  x="1115.88" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="55.4" y="357" width="0.4" height="15.0" fill="rgb(253,20,35)" rx="2" ry="2" />
<text  x="58.38" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="113.7" y="1493" width="0.4" height="15.0" fill="rgb(253,173,31)" rx="2" ry="2" />
<text  x="116.68" y="1503.5" ></text>
</g>
<g >
<title>db::schema_tables::prepare_builder_from_table_row (1 samples, 0.03%)</title><rect x="183.1" y="1637" width="0.3" height="15.0" fill="rgb(230,196,25)" rx="2" ry="2" />
<text  x="186.05" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="704.4" y="1733" width="0.4" height="15.0" fill="rgb(229,87,42)" rx="2" ry="2" />
<text  x="707.42" y="1743.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.03%)</title><rect x="141.7" y="1861" width="0.4" height="15.0" fill="rgb(245,27,0)" rx="2" ry="2" />
<text  x="144.73" y="1871.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::start&lt;std::reference_wrapper&lt;db::config&gt;, database_config&amp;, std::reference_wrapper&lt;seastar::sharded&lt;service::migration_notifier&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;gms::feature_service&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;locator::shared_token_metadata&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;seastar::abort_source&gt; &gt;, std::reference_wrapper&lt;seastar::sharded&lt;seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt; &gt;, utils::cross_shard_barrier&gt; (1 samples, 0.03%)</title><rect x="153.2" y="1749" width="0.3" height="15.0" fill="rgb(213,24,40)" rx="2" ry="2" />
<text  x="156.16" y="1759.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%)</title><rect x="909.9" y="1669" width="1.9" height="15.0" fill="rgb(235,148,47)" rx="2" ry="2" />
<text  x="912.94" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="99.3" y="837" width="0.4" height="15.0" fill="rgb(239,72,45)" rx="2" ry="2" />
<text  x="102.29" y="847.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="129.5" y="1477" width="0.8" height="15.0" fill="rgb(248,178,29)" rx="2" ry="2" />
<text  x="132.55" y="1487.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="137.7" y="1525" width="0.3" height="15.0" fill="rgb(216,100,4)" rx="2" ry="2" />
<text  x="140.67" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="84.2" y="533" width="0.3" height="15.0" fill="rgb(251,173,33)" rx="2" ry="2" />
<text  x="87.17" y="543.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%)</title><rect x="691.9" y="1749" width="2.2" height="15.0" fill="rgb(228,145,34)" rx="2" ry="2" />
<text  x="694.88" y="1759.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.09%)</title><rect x="1089.6" y="1685" width="1.1" height="15.0" fill="rgb(254,52,21)" rx="2" ry="2" />
<text  x="1092.64" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (2 samples, 0.06%)</title><rect x="138.0" y="1573" width="0.8" height="15.0" fill="rgb(217,206,42)" rx="2" ry="2" />
<text  x="141.04" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%)</title><rect x="52.8" y="373" width="0.7" height="15.0" fill="rgb(210,79,21)" rx="2" ry="2" />
<text  x="55.80" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%)</title><rect x="117.0" y="1477" width="0.7" height="15.0" fill="rgb(250,65,44)" rx="2" ry="2" />
<text  x="120.00" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%)</title><rect x="118.8" y="1397" width="1.5" height="15.0" fill="rgb(252,94,26)" rx="2" ry="2" />
<text  x="121.85" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1109" width="88.6" height="15.0" fill="rgb(213,89,8)" rx="2" ry="2" />
<text  x="14.11" y="1119.5" >[unknown]</text>
</g>
<g >
<title>posix_memalign (1 samples, 0.03%)</title><rect x="380.5" y="1509" width="0.3" height="15.0" fill="rgb(235,76,41)" rx="2" ry="2" />
<text  x="383.46" y="1519.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_group (1 samples, 0.03%)</title><rect x="153.2" y="1637" width="0.3" height="15.0" fill="rgb(233,226,52)" rx="2" ry="2" />
<text  x="156.16" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%)</title><rect x="971.2" y="1557" width="1.5" height="15.0" fill="rgb(205,97,33)" rx="2" ry="2" />
<text  x="974.19" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (6 samples, 0.19%)</title><rect x="75.3" y="501" width="2.2" height="15.0" fill="rgb(237,200,11)" rx="2" ry="2" />
<text  x="78.31" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="42.1" y="229" width="0.4" height="15.0" fill="rgb(218,140,16)" rx="2" ry="2" />
<text  x="45.10" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.03%)</title><rect x="107.4" y="1781" width="0.4" height="15.0" fill="rgb(237,186,19)" rx="2" ry="2" />
<text  x="110.41" y="1791.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%)</title><rect x="79.7" y="453" width="0.4" height="15.0" fill="rgb(253,104,33)" rx="2" ry="2" />
<text  x="82.74" y="463.5" ></text>
</g>
<g >
<title>[unknown] (239 samples, 7.47%)</title><rect x="11.1" y="997" width="88.2" height="15.0" fill="rgb(229,114,40)" rx="2" ry="2" />
<text  x="14.11" y="1007.5" >[unknown]</text>
</g>
<g >
<title>service::client_state::has_column_family_access (3 samples, 0.09%)</title><rect x="104.1" y="1653" width="1.1" height="15.0" fill="rgb(245,78,19)" rx="2" ry="2" />
<text  x="107.09" y="1663.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%)</title><rect x="205.6" y="1733" width="1.8" height="15.0" fill="rgb(254,92,1)" rx="2" ry="2" />
<text  x="208.56" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (15 samples, 0.47%)</title><rect x="116.6" y="1541" width="5.6" height="15.0" fill="rgb(205,181,2)" rx="2" ry="2" />
<text  x="119.64" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (1 samples, 0.03%)</title><rect x="897.8" y="1621" width="0.3" height="15.0" fill="rgb(213,177,38)" rx="2" ry="2" />
<text  x="900.77" y="1631.5" ></text>
</g>
<g >
<title>row::~row (24 samples, 0.75%)</title><rect x="439.5" y="1653" width="8.8" height="15.0" fill="rgb(207,218,31)" rx="2" ry="2" />
<text  x="442.49" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%)</title><rect x="98.6" y="693" width="0.3" height="15.0" fill="rgb(226,0,34)" rx="2" ry="2" />
<text  x="101.56" y="703.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%)</title><rect x="544.7" y="1701" width="1.1" height="15.0" fill="rgb(241,123,26)" rx="2" ry="2" />
<text  x="547.65" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="826.6" y="1621" width="0.3" height="15.0" fill="rgb(224,189,1)" rx="2" ry="2" />
<text  x="829.55" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="59.1" y="325" width="0.7" height="15.0" fill="rgb(254,157,29)" rx="2" ry="2" />
<text  x="62.07" y="335.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="141.0" y="1637" width="0.4" height="15.0" fill="rgb(252,160,21)" rx="2" ry="2" />
<text  x="143.99" y="1647.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::create_type_statement*, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt; (1 samples, 0.03%)</title><rect x="93.4" y="517" width="0.4" height="15.0" fill="rgb(225,23,12)" rx="2" ry="2" />
<text  x="96.39" y="527.5" ></text>
</g>
<g >
<title>row_cache::make_reader (1 samples, 0.03%)</title><rect x="552.4" y="1685" width="0.4" height="15.0" fill="rgb(216,48,40)" rx="2" ry="2" />
<text  x="555.40" y="1695.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="56.9" y="293" width="0.3" height="15.0" fill="rgb(231,81,23)" rx="2" ry="2" />
<text  x="59.86" y="303.5" ></text>
</g>
<g >
<title>db::schema_tables::make_table_mutations (2 samples, 0.06%)</title><rect x="184.2" y="1685" width="0.7" height="15.0" fill="rgb(212,11,42)" rx="2" ry="2" />
<text  x="187.16" y="1695.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (21 samples, 0.66%)</title><rect x="62.4" y="533" width="7.7" height="15.0" fill="rgb(230,157,21)" rx="2" ry="2" />
<text  x="65.40" y="543.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="128.8" y="1429" width="0.4" height="15.0" fill="rgb(227,133,1)" rx="2" ry="2" />
<text  x="131.81" y="1439.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.09%)</title><rect x="41.4" y="389" width="1.1" height="15.0" fill="rgb(238,215,39)" rx="2" ry="2" />
<text  x="44.36" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="42.1" y="341" width="0.4" height="15.0" fill="rgb(230,42,49)" rx="2" ry="2" />
<text  x="45.10" y="351.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%)</title><rect x="140.6" y="1781" width="0.4" height="15.0" fill="rgb(219,151,37)" rx="2" ry="2" />
<text  x="143.62" y="1791.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator= (1 samples, 0.03%)</title><rect x="131.0" y="1525" width="0.4" height="15.0" fill="rgb(225,96,44)" rx="2" ry="2" />
<text  x="134.03" y="1535.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="67.2" y="389" width="0.4" height="15.0" fill="rgb(229,19,11)" rx="2" ry="2" />
<text  x="70.19" y="399.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (8 samples, 0.25%)</title><rect x="134.3" y="1541" width="3.0" height="15.0" fill="rgb(230,159,16)" rx="2" ry="2" />
<text  x="137.35" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="69.0" y="229" width="0.4" height="15.0" fill="rgb(231,50,7)" rx="2" ry="2" />
<text  x="72.04" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.09%)</title><rect x="792.6" y="1669" width="1.1" height="15.0" fill="rgb(209,168,35)" rx="2" ry="2" />
<text  x="795.61" y="1679.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="99.3" y="981" width="0.4" height="15.0" fill="rgb(246,125,11)" rx="2" ry="2" />
<text  x="102.29" y="991.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="72.4" y="341" width="0.3" height="15.0" fill="rgb(226,197,45)" rx="2" ry="2" />
<text  x="75.36" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::file&gt;, seastar::future&lt;seastar::file&gt; &gt;::run_and_dispose (1 samples, 0.03%)</title><rect x="853.9" y="1765" width="0.3" height="15.0" fill="rgb(230,147,39)" rx="2" ry="2" />
<text  x="856.86" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.38%)</title><rect x="921.4" y="1653" width="4.4" height="15.0" fill="rgb(206,216,53)" rx="2" ry="2" />
<text  x="924.38" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%)</title><rect x="1145.7" y="1717" width="0.8" height="15.0" fill="rgb(243,114,4)" rx="2" ry="2" />
<text  x="1148.72" y="1727.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%)</title><rect x="137.7" y="1493" width="0.3" height="15.0" fill="rgb(247,99,54)" rx="2" ry="2" />
<text  x="140.67" y="1503.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (436 samples, 13.63%)</title><rect x="916.6" y="1685" width="160.9" height="15.0" fill="rgb(210,178,46)" rx="2" ry="2" />
<text  x="919.59" y="1695.5" >cql3::statements::se..</text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (1 samples, 0.03%)</title><rect x="109.3" y="1685" width="0.3" height="15.0" fill="rgb(226,18,23)" rx="2" ry="2" />
<text  x="112.26" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (15 samples, 0.47%)</title><rect x="99.7" y="1765" width="5.5" height="15.0" fill="rgb(214,27,15)" rx="2" ry="2" />
<text  x="102.66" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="42.1" y="325" width="0.4" height="15.0" fill="rgb(243,221,7)" rx="2" ry="2" />
<text  x="45.10" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="44.7" y="357" width="0.4" height="15.0" fill="rgb(232,49,42)" rx="2" ry="2" />
<text  x="47.68" y="367.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (14 samples, 0.44%)</title><rect x="100.0" y="1685" width="5.2" height="15.0" fill="rgb(235,103,21)" rx="2" ry="2" />
<text  x="103.03" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="52.8" y="309" width="0.7" height="15.0" fill="rgb(210,224,44)" rx="2" ry="2" />
<text  x="55.80" y="319.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.41%)</title><rect x="959.0" y="1605" width="4.8" height="15.0" fill="rgb(209,75,14)" rx="2" ry="2" />
<text  x="962.02" y="1615.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (7 samples, 0.22%)</title><rect x="638.0" y="1637" width="2.6" height="15.0" fill="rgb(244,144,3)" rx="2" ry="2" />
<text  x="641.01" y="1647.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%)</title><rect x="20.0" y="165" width="0.3" height="15.0" fill="rgb(251,3,46)" rx="2" ry="2" />
<text  x="22.96" y="175.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="130.7" y="1461" width="0.3" height="15.0" fill="rgb(236,19,15)" rx="2" ry="2" />
<text  x="133.66" y="1471.5" ></text>
</g>
<g >
<title>schema_registry::get_or_load (3 samples, 0.09%)</title><rect x="183.1" y="1701" width="1.1" height="15.0" fill="rgb(226,47,17)" rx="2" ry="2" />
<text  x="186.05" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="88.2" y="437" width="0.8" height="15.0" fill="rgb(235,12,16)" rx="2" ry="2" />
<text  x="91.22" y="447.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (8 samples, 0.25%)</title><rect x="1094.1" y="1669" width="2.9" height="15.0" fill="rgb(219,96,22)" rx="2" ry="2" />
<text  x="1097.07" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%)</title><rect x="134.3" y="1493" width="1.5" height="15.0" fill="rgb(241,33,6)" rx="2" ry="2" />
<text  x="137.35" y="1503.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="134.0" y="1557" width="0.3" height="15.0" fill="rgb(216,216,51)" rx="2" ry="2" />
<text  x="136.98" y="1567.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (203 samples, 6.35%)</title><rect x="767.5" y="1717" width="74.9" height="15.0" fill="rgb(212,68,6)" rx="2" ry="2" />
<text  x="770.52" y="1727.5" >cql3::qu..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1 samples, 0.03%)</title><rect x="1111.8" y="1749" width="0.3" height="15.0" fill="rgb(209,67,21)" rx="2" ry="2" />
<text  x="1114.78" y="1759.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%)</title><rect x="182.3" y="1637" width="0.4" height="15.0" fill="rgb(220,166,5)" rx="2" ry="2" />
<text  x="185.31" y="1647.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.06%)</title><rect x="481.9" y="1653" width="0.8" height="15.0" fill="rgb(230,21,22)" rx="2" ry="2" />
<text  x="484.93" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="124.0" y="1301" width="0.4" height="15.0" fill="rgb(231,69,31)" rx="2" ry="2" />
<text  x="127.02" y="1311.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="111.8" y="1349" width="0.4" height="15.0" fill="rgb(245,36,54)" rx="2" ry="2" />
<text  x="114.84" y="1359.5" ></text>
</g>
<g >
<title>compound_type&lt; (2 samples, 0.06%)</title><rect x="864.6" y="1621" width="0.7" height="15.0" fill="rgb(240,84,7)" rx="2" ry="2" />
<text  x="867.56" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (1 samples, 0.03%)</title><rect x="174.6" y="1733" width="0.3" height="15.0" fill="rgb(247,25,11)" rx="2" ry="2" />
<text  x="177.57" y="1743.5" ></text>
</g>
<g >
<title>to_hex (2 samples, 0.06%)</title><rect x="51.0" y="533" width="0.7" height="15.0" fill="rgb(220,12,47)" rx="2" ry="2" />
<text  x="53.96" y="543.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%)</title><rect x="717.3" y="1685" width="0.4" height="15.0" fill="rgb(244,205,28)" rx="2" ry="2" />
<text  x="720.34" y="1695.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%)</title><rect x="60.2" y="309" width="0.4" height="15.0" fill="rgb(229,161,43)" rx="2" ry="2" />
<text  x="63.18" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="130.3" y="1509" width="0.4" height="15.0" fill="rgb(242,38,45)" rx="2" ry="2" />
<text  x="133.29" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%)</title><rect x="1011.8" y="1477" width="1.5" height="15.0" fill="rgb(215,5,27)" rx="2" ry="2" />
<text  x="1014.78" y="1487.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (2 samples, 0.06%)</title><rect x="677.1" y="1733" width="0.8" height="15.0" fill="rgb(221,207,41)" rx="2" ry="2" />
<text  x="680.12" y="1743.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1 samples, 0.03%)</title><rect x="575.6" y="1669" width="0.4" height="15.0" fill="rgb(221,193,33)" rx="2" ry="2" />
<text  x="578.65" y="1679.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="54.3" y="213" width="0.3" height="15.0" fill="rgb(220,2,53)" rx="2" ry="2" />
<text  x="57.28" y="223.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%)</title><rect x="1048.3" y="1605" width="3.3" height="15.0" fill="rgb(223,52,16)" rx="2" ry="2" />
<text  x="1051.31" y="1615.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (1 samples, 0.03%)</title><rect x="390.1" y="1573" width="0.3" height="15.0" fill="rgb(233,161,49)" rx="2" ry="2" />
<text  x="393.05" y="1583.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="1153.5" y="1685" width="0.3" height="15.0" fill="rgb(220,25,49)" rx="2" ry="2" />
<text  x="1156.47" y="1695.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (26 samples, 0.81%)</title><rect x="707.4" y="1765" width="9.6" height="15.0" fill="rgb(243,60,6)" rx="2" ry="2" />
<text  x="710.37" y="1775.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.03%)</title><rect x="334.3" y="1557" width="0.4" height="15.0" fill="rgb(206,62,36)" rx="2" ry="2" />
<text  x="337.33" y="1567.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%)</title><rect x="69.8" y="373" width="0.3" height="15.0" fill="rgb(214,182,32)" rx="2" ry="2" />
<text  x="72.77" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (5 samples, 0.16%)</title><rect x="110.7" y="1557" width="1.9" height="15.0" fill="rgb(211,158,45)" rx="2" ry="2" />
<text  x="113.73" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%)</title><rect x="134.0" y="1589" width="0.3" height="15.0" fill="rgb(236,197,1)" rx="2" ry="2" />
<text  x="136.98" y="1599.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.03%)</title><rect x="803.7" y="1653" width="0.3" height="15.0" fill="rgb(251,143,28)" rx="2" ry="2" />
<text  x="806.68" y="1663.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (2 samples, 0.06%)</title><rect x="1102.9" y="1621" width="0.8" height="15.0" fill="rgb(221,202,11)" rx="2" ry="2" />
<text  x="1105.92" y="1631.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.03%)</title><rect x="863.5" y="1589" width="0.3" height="15.0" fill="rgb(206,53,16)" rx="2" ry="2" />
<text  x="866.45" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (173 samples, 5.41%)</title><rect x="11.1" y="741" width="63.8" height="15.0" fill="rgb(213,220,12)" rx="2" ry="2" />
<text  x="14.11" y="751.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1189" width="88.6" height="15.0" fill="rgb(252,141,51)" rx="2" ry="2" />
<text  x="14.11" y="1199.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (6 samples, 0.19%)</title><rect x="573.4" y="1653" width="2.2" height="15.0" fill="rgb(251,37,39)" rx="2" ry="2" />
<text  x="576.43" y="1663.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="51.7" y="549" width="0.4" height="15.0" fill="rgb(219,185,51)" rx="2" ry="2" />
<text  x="54.69" y="559.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (3 samples, 0.09%)</title><rect x="646.5" y="1669" width="1.1" height="15.0" fill="rgb(207,81,50)" rx="2" ry="2" />
<text  x="649.49" y="1679.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.56%)</title><rect x="1104.8" y="1733" width="6.6" height="15.0" fill="rgb(240,84,1)" rx="2" ry="2" />
<text  x="1107.77" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="118.8" y="1333" width="0.4" height="15.0" fill="rgb(211,190,14)" rx="2" ry="2" />
<text  x="121.85" y="1343.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.16%)</title><rect x="263.5" y="1717" width="1.8" height="15.0" fill="rgb(221,107,35)" rx="2" ry="2" />
<text  x="266.49" y="1727.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="52.1" y="229" width="0.3" height="15.0" fill="rgb(215,162,30)" rx="2" ry="2" />
<text  x="55.06" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (7 samples, 0.22%)</title><rect x="59.8" y="405" width="2.6" height="15.0" fill="rgb(231,153,53)" rx="2" ry="2" />
<text  x="62.81" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="222.2" y="1733" width="0.3" height="15.0" fill="rgb(222,42,43)" rx="2" ry="2" />
<text  x="225.16" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="42.1" y="261" width="0.4" height="15.0" fill="rgb(249,127,32)" rx="2" ry="2" />
<text  x="45.10" y="271.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (2 samples, 0.06%)</title><rect x="1108.5" y="1493" width="0.7" height="15.0" fill="rgb(220,226,15)" rx="2" ry="2" />
<text  x="1111.46" y="1503.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.03%)</title><rect x="107.4" y="1749" width="0.4" height="15.0" fill="rgb(247,122,20)" rx="2" ry="2" />
<text  x="110.41" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (2 samples, 0.06%)</title><rect x="115.9" y="1525" width="0.7" height="15.0" fill="rgb(212,73,49)" rx="2" ry="2" />
<text  x="118.90" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="911.8" y="1653" width="0.7" height="15.0" fill="rgb(219,42,51)" rx="2" ry="2" />
<text  x="914.79" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="74.2" y="405" width="0.4" height="15.0" fill="rgb(232,53,48)" rx="2" ry="2" />
<text  x="77.20" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="96.3" y="373" width="0.4" height="15.0" fill="rgb(210,161,23)" rx="2" ry="2" />
<text  x="99.34" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (1 samples, 0.03%)</title><rect x="96.7" y="549" width="0.4" height="15.0" fill="rgb(225,207,11)" rx="2" ry="2" />
<text  x="99.71" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="52.8" y="325" width="0.7" height="15.0" fill="rgb(232,10,7)" rx="2" ry="2" />
<text  x="55.80" y="335.5" ></text>
</g>
<g >
<title>database::add_column_family (3 samples, 0.09%)</title><rect x="184.2" y="1749" width="1.1" height="15.0" fill="rgb(212,155,5)" rx="2" ry="2" />
<text  x="187.16" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%)</title><rect x="840.2" y="1669" width="1.5" height="15.0" fill="rgb(221,136,50)" rx="2" ry="2" />
<text  x="843.21" y="1679.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (202 samples, 6.32%)</title><rect x="955.3" y="1621" width="74.6" height="15.0" fill="rgb(232,197,41)" rx="2" ry="2" />
<text  x="958.33" y="1631.5" >service:..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.09%)</title><rect x="452.0" y="1653" width="1.1" height="15.0" fill="rgb(246,146,24)" rx="2" ry="2" />
<text  x="455.04" y="1663.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (29 samples, 0.91%)</title><rect x="1066.4" y="1557" width="10.7" height="15.0" fill="rgb(239,214,27)" rx="2" ry="2" />
<text  x="1069.39" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (7 samples, 0.22%)</title><rect x="209.2" y="1717" width="2.6" height="15.0" fill="rgb(247,159,18)" rx="2" ry="2" />
<text  x="212.25" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="132.9" y="1461" width="0.3" height="15.0" fill="rgb(230,189,53)" rx="2" ry="2" />
<text  x="135.87" y="1471.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="1017.3" y="1477" width="0.4" height="15.0" fill="rgb(222,27,32)" rx="2" ry="2" />
<text  x="1020.32" y="1487.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (3 samples, 0.09%)</title><rect x="129.2" y="1493" width="1.1" height="15.0" fill="rgb(252,120,36)" rx="2" ry="2" />
<text  x="132.18" y="1503.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::release (1 samples, 0.03%)</title><rect x="98.9" y="661" width="0.4" height="15.0" fill="rgb(205,126,27)" rx="2" ry="2" />
<text  x="101.92" y="671.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.03%)</title><rect x="55.8" y="373" width="0.3" height="15.0" fill="rgb(207,61,26)" rx="2" ry="2" />
<text  x="58.75" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (35 samples, 1.09%)</title><rect x="24.8" y="341" width="12.9" height="15.0" fill="rgb(215,146,28)" rx="2" ry="2" />
<text  x="27.76" y="351.5" ></text>
</g>
<g >
<title>cql3::cf_name::operator= (1 samples, 0.03%)</title><rect x="43.2" y="389" width="0.4" height="15.0" fill="rgb(211,9,8)" rx="2" ry="2" />
<text  x="46.21" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="129.5" y="1349" width="0.4" height="15.0" fill="rgb(230,90,24)" rx="2" ry="2" />
<text  x="132.55" y="1359.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="75.3" y="293" width="0.4" height="15.0" fill="rgb(227,130,36)" rx="2" ry="2" />
<text  x="78.31" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="667.5" y="1749" width="0.4" height="15.0" fill="rgb(239,0,3)" rx="2" ry="2" />
<text  x="670.52" y="1759.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="1113.6" y="1733" width="0.4" height="15.0" fill="rgb(222,113,41)" rx="2" ry="2" />
<text  x="1116.62" y="1743.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::operation::raw_update*&amp;&gt; (1 samples, 0.03%)</title><rect x="74.6" y="341" width="0.3" height="15.0" fill="rgb(246,199,52)" rx="2" ry="2" />
<text  x="77.57" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="96.7" y="453" width="0.4" height="15.0" fill="rgb(239,141,6)" rx="2" ry="2" />
<text  x="99.71" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="169.8" y="1717" width="0.3" height="15.0" fill="rgb(206,64,17)" rx="2" ry="2" />
<text  x="172.77" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%)</title><rect x="137.7" y="1541" width="0.3" height="15.0" fill="rgb(221,115,48)" rx="2" ry="2" />
<text  x="140.67" y="1551.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (2 samples, 0.06%)</title><rect x="184.2" y="1653" width="0.7" height="15.0" fill="rgb(211,1,17)" rx="2" ry="2" />
<text  x="187.16" y="1663.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (21 samples, 0.66%)</title><rect x="62.4" y="629" width="7.7" height="15.0" fill="rgb(253,156,30)" rx="2" ry="2" />
<text  x="65.40" y="639.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%)</title><rect x="411.8" y="1653" width="0.4" height="15.0" fill="rgb(243,60,28)" rx="2" ry="2" />
<text  x="414.82" y="1663.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="137.3" y="1413" width="0.4" height="15.0" fill="rgb(223,31,45)" rx="2" ry="2" />
<text  x="140.30" y="1423.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (23 samples, 0.72%)</title><rect x="211.8" y="1733" width="8.5" height="15.0" fill="rgb(231,194,38)" rx="2" ry="2" />
<text  x="214.83" y="1743.5" ></text>
</g>
<g >
<title>auth::resource::resource (4 samples, 0.13%)</title><rect x="794.1" y="1669" width="1.5" height="15.0" fill="rgb(217,211,27)" rx="2" ry="2" />
<text  x="797.08" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="73.5" y="37" width="0.3" height="15.0" fill="rgb(238,154,35)" rx="2" ry="2" />
<text  x="76.46" y="47.5" ></text>
</g>
<g >
<title>partition_entry::apply (1 samples, 0.03%)</title><rect x="1102.6" y="1621" width="0.3" height="15.0" fill="rgb(209,85,33)" rx="2" ry="2" />
<text  x="1105.55" y="1631.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%)</title><rect x="137.3" y="1525" width="0.4" height="15.0" fill="rgb(219,9,37)" rx="2" ry="2" />
<text  x="140.30" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="622.5" y="1637" width="0.4" height="15.0" fill="rgb(235,124,1)" rx="2" ry="2" />
<text  x="625.51" y="1647.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%)</title><rect x="53.5" y="389" width="0.4" height="15.0" fill="rgb(234,162,15)" rx="2" ry="2" />
<text  x="56.54" y="399.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (57 samples, 1.78%)</title><rect x="1056.1" y="1573" width="21.0" height="15.0" fill="rgb(223,135,27)" rx="2" ry="2" />
<text  x="1059.06" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%)</title><rect x="750.5" y="1717" width="1.2" height="15.0" fill="rgb(207,37,8)" rx="2" ry="2" />
<text  x="753.54" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="141.0" y="1781" width="0.4" height="15.0" fill="rgb(229,118,22)" rx="2" ry="2" />
<text  x="143.99" y="1791.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (20 samples, 0.63%)</title><rect x="699.6" y="1765" width="7.4" height="15.0" fill="rgb(251,98,16)" rx="2" ry="2" />
<text  x="702.62" y="1775.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (5 samples, 0.16%)</title><rect x="765.7" y="1717" width="1.8" height="15.0" fill="rgb(246,156,0)" rx="2" ry="2" />
<text  x="768.67" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%)</title><rect x="65.0" y="421" width="0.3" height="15.0" fill="rgb(237,93,42)" rx="2" ry="2" />
<text  x="67.98" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="45.1" y="181" width="0.3" height="15.0" fill="rgb(221,66,52)" rx="2" ry="2" />
<text  x="48.05" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (19 samples, 0.59%)</title><rect x="1097.8" y="1717" width="7.0" height="15.0" fill="rgb(242,130,50)" rx="2" ry="2" />
<text  x="1100.75" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="74.9" y="405" width="0.4" height="15.0" fill="rgb(238,29,24)" rx="2" ry="2" />
<text  x="77.94" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::operator= (1 samples, 0.03%)</title><rect x="131.0" y="1541" width="0.4" height="15.0" fill="rgb(244,75,53)" rx="2" ry="2" />
<text  x="134.03" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%)</title><rect x="45.4" y="245" width="0.4" height="15.0" fill="rgb(218,208,9)" rx="2" ry="2" />
<text  x="48.42" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="71.3" y="373" width="0.3" height="15.0" fill="rgb(215,139,52)" rx="2" ry="2" />
<text  x="74.25" y="383.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (1 samples, 0.03%)</title><rect x="150.2" y="1813" width="0.4" height="15.0" fill="rgb(231,145,22)" rx="2" ry="2" />
<text  x="153.21" y="1823.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,717 samples, 84.96%)</title><rect x="153.5" y="1845" width="1002.6" height="15.0" fill="rgb(250,153,25)" rx="2" ry="2" />
<text  x="156.53" y="1855.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%)</title><rect x="78.6" y="309" width="0.8" height="15.0" fill="rgb(235,201,41)" rx="2" ry="2" />
<text  x="81.63" y="319.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%)</title><rect x="1086.7" y="1685" width="2.9" height="15.0" fill="rgb(222,171,44)" rx="2" ry="2" />
<text  x="1089.69" y="1695.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (3 samples, 0.09%)</title><rect x="849.8" y="1717" width="1.1" height="15.0" fill="rgb(227,162,45)" rx="2" ry="2" />
<text  x="852.80" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (1 samples, 0.03%)</title><rect x="22.2" y="165" width="0.3" height="15.0" fill="rgb(253,149,17)" rx="2" ry="2" />
<text  x="25.18" y="175.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (6 samples, 0.19%)</title><rect x="1105.9" y="1477" width="2.2" height="15.0" fill="rgb(252,141,38)" rx="2" ry="2" />
<text  x="1108.87" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1669" width="88.6" height="15.0" fill="rgb(237,161,15)" rx="2" ry="2" />
<text  x="14.11" y="1679.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="68.7" y="133" width="0.3" height="15.0" fill="rgb(238,204,32)" rx="2" ry="2" />
<text  x="71.67" y="143.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%)</title><rect x="151.3" y="1525" width="0.4" height="15.0" fill="rgb(209,114,8)" rx="2" ry="2" />
<text  x="154.32" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (239 samples, 7.47%)</title><rect x="11.1" y="981" width="88.2" height="15.0" fill="rgb(239,225,25)" rx="2" ry="2" />
<text  x="14.11" y="991.5" >[unknown]</text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%)</title><rect x="99.3" y="917" width="0.4" height="15.0" fill="rgb(210,136,10)" rx="2" ry="2" />
<text  x="102.29" y="927.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (17 samples, 0.53%)</title><rect x="1104.8" y="1621" width="6.2" height="15.0" fill="rgb(218,197,30)" rx="2" ry="2" />
<text  x="1107.77" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="133.6" y="1493" width="0.4" height="15.0" fill="rgb(237,20,44)" rx="2" ry="2" />
<text  x="136.61" y="1503.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="135.1" y="1349" width="0.4" height="15.0" fill="rgb(253,25,53)" rx="2" ry="2" />
<text  x="138.08" y="1359.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="87.9" y="373" width="0.3" height="15.0" fill="rgb(238,84,30)" rx="2" ry="2" />
<text  x="90.85" y="383.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%)</title><rect x="140.6" y="1861" width="0.4" height="15.0" fill="rgb(222,157,19)" rx="2" ry="2" />
<text  x="143.62" y="1871.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (1 samples, 0.03%)</title><rect x="1114.0" y="1765" width="0.4" height="15.0" fill="rgb(219,200,13)" rx="2" ry="2" />
<text  x="1116.99" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (387 samples, 12.10%)</title><rect x="10.7" y="1893" width="142.8" height="15.0" fill="rgb(216,227,35)" rx="2" ry="2" />
<text  x="13.74" y="1903.5" >[unknown]</text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%)</title><rect x="603.0" y="1637" width="0.3" height="15.0" fill="rgb(210,101,1)" rx="2" ry="2" />
<text  x="605.95" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (12 samples, 0.38%)</title><rect x="1105.1" y="1557" width="4.5" height="15.0" fill="rgb(238,122,30)" rx="2" ry="2" />
<text  x="1108.13" y="1567.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="44.7" y="373" width="0.4" height="15.0" fill="rgb(249,183,30)" rx="2" ry="2" />
<text  x="47.68" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="115.2" y="1397" width="0.3" height="15.0" fill="rgb(253,205,24)" rx="2" ry="2" />
<text  x="118.16" y="1407.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_initialize_map (3 samples, 0.09%)</title><rect x="15.5" y="325" width="1.1" height="15.0" fill="rgb(207,175,11)" rx="2" ry="2" />
<text  x="18.53" y="335.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (4 samples, 0.13%)</title><rect x="644.6" y="1637" width="1.5" height="15.0" fill="rgb(243,74,31)" rx="2" ry="2" />
<text  x="647.65" y="1647.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="825.1" y="1637" width="1.1" height="15.0" fill="rgb(210,98,47)" rx="2" ry="2" />
<text  x="828.08" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (13 samples, 0.41%)</title><rect x="70.1" y="661" width="4.8" height="15.0" fill="rgb(236,62,20)" rx="2" ry="2" />
<text  x="73.14" y="671.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%)</title><rect x="105.6" y="1861" width="0.3" height="15.0" fill="rgb(206,210,30)" rx="2" ry="2" />
<text  x="108.57" y="1871.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="603.3" y="1637" width="0.4" height="15.0" fill="rgb(234,23,28)" rx="2" ry="2" />
<text  x="606.32" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (66 samples, 2.06%)</title><rect x="16.6" y="389" width="24.4" height="15.0" fill="rgb(229,149,37)" rx="2" ry="2" />
<text  x="19.64" y="399.5" >a..</text>
</g>
<g >
<title>table::update_cache (1 samples, 0.03%)</title><rect x="1112.9" y="1749" width="0.4" height="15.0" fill="rgb(253,190,2)" rx="2" ry="2" />
<text  x="1115.88" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="1112.9" y="1653" width="0.4" height="15.0" fill="rgb(237,152,46)" rx="2" ry="2" />
<text  x="1115.88" y="1663.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%)</title><rect x="31.0" y="245" width="0.4" height="15.0" fill="rgb(253,100,42)" rx="2" ry="2" />
<text  x="34.03" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (91 samples, 2.85%)</title><rect x="106.7" y="1829" width="33.6" height="15.0" fill="rgb(216,122,16)" rx="2" ry="2" />
<text  x="109.67" y="1839.5" >se..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="972.7" y="1589" width="0.3" height="15.0" fill="rgb(227,17,26)" rx="2" ry="2" />
<text  x="975.67" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%)</title><rect x="60.2" y="325" width="0.4" height="15.0" fill="rgb(220,229,27)" rx="2" ry="2" />
<text  x="63.18" y="335.5" ></text>
</g>
<g >
<title>std::move&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;&amp;&gt; (1 samples, 0.03%)</title><rect x="77.2" y="469" width="0.3" height="15.0" fill="rgb(251,38,5)" rx="2" ry="2" />
<text  x="80.15" y="479.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (7 samples, 0.22%)</title><rect x="1105.5" y="1493" width="2.6" height="15.0" fill="rgb(229,61,52)" rx="2" ry="2" />
<text  x="1108.50" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%)</title><rect x="639.8" y="1621" width="0.8" height="15.0" fill="rgb(209,79,29)" rx="2" ry="2" />
<text  x="642.85" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_role_statement, std::default_delete&lt;cql3::statements::create_role_statement&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="90.8" y="549" width="0.4" height="15.0" fill="rgb(252,168,27)" rx="2" ry="2" />
<text  x="93.81" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="130.3" y="1365" width="0.4" height="15.0" fill="rgb(223,62,23)" rx="2" ry="2" />
<text  x="133.29" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="111.5" y="1397" width="0.3" height="15.0" fill="rgb(228,47,9)" rx="2" ry="2" />
<text  x="114.47" y="1407.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.06%)</title><rect x="55.4" y="389" width="0.7" height="15.0" fill="rgb(232,158,5)" rx="2" ry="2" />
<text  x="58.38" y="399.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%)</title><rect x="97.1" y="709" width="0.3" height="15.0" fill="rgb(251,202,7)" rx="2" ry="2" />
<text  x="100.08" y="719.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%)</title><rect x="854.6" y="1765" width="0.7" height="15.0" fill="rgb(220,48,50)" rx="2" ry="2" />
<text  x="857.60" y="1775.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.03%)</title><rect x="182.3" y="1765" width="0.4" height="15.0" fill="rgb(254,10,47)" rx="2" ry="2" />
<text  x="185.31" y="1775.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="55.8" y="261" width="0.3" height="15.0" fill="rgb(223,104,19)" rx="2" ry="2" />
<text  x="58.75" y="271.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="717.7" y="1749" width="0.4" height="15.0" fill="rgb(224,221,14)" rx="2" ry="2" />
<text  x="720.70" y="1759.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.09%)</title><rect x="58.7" y="389" width="1.1" height="15.0" fill="rgb(233,1,43)" rx="2" ry="2" />
<text  x="61.71" y="399.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::key (1 samples, 0.03%)</title><rect x="1102.2" y="1605" width="0.4" height="15.0" fill="rgb(211,206,26)" rx="2" ry="2" />
<text  x="1105.18" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="632.1" y="1669" width="0.4" height="15.0" fill="rgb(239,9,45)" rx="2" ry="2" />
<text  x="635.10" y="1679.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (81 samples, 2.53%)</title><rect x="359.8" y="1541" width="29.9" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="362.79" y="1551.5" >co..</text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="182.7" y="1669" width="0.4" height="15.0" fill="rgb(253,119,39)" rx="2" ry="2" />
<text  x="185.68" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%)</title><rect x="69.8" y="389" width="0.3" height="15.0" fill="rgb(231,180,32)" rx="2" ry="2" />
<text  x="72.77" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (2 samples, 0.06%)</title><rect x="1110.3" y="1525" width="0.7" height="15.0" fill="rgb(236,136,31)" rx="2" ry="2" />
<text  x="1113.30" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.03%)</title><rect x="53.5" y="213" width="0.4" height="15.0" fill="rgb(227,161,5)" rx="2" ry="2" />
<text  x="56.54" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="76.8" y="389" width="0.4" height="15.0" fill="rgb(218,181,29)" rx="2" ry="2" />
<text  x="79.79" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="58.0" y="357" width="0.3" height="15.0" fill="rgb(213,63,3)" rx="2" ry="2" />
<text  x="60.97" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (2 samples, 0.06%)</title><rect x="89.7" y="533" width="0.7" height="15.0" fill="rgb(215,161,2)" rx="2" ry="2" />
<text  x="92.70" y="543.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.03%)</title><rect x="685.2" y="1733" width="0.4" height="15.0" fill="rgb(232,36,35)" rx="2" ry="2" />
<text  x="688.23" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="64.6" y="341" width="0.4" height="15.0" fill="rgb(248,46,34)" rx="2" ry="2" />
<text  x="67.61" y="351.5" ></text>
</g>
<g >
<title>cql3::cql3_type::get_kind (1 samples, 0.03%)</title><rect x="83.8" y="517" width="0.4" height="15.0" fill="rgb(249,10,53)" rx="2" ry="2" />
<text  x="86.80" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="55.0" y="277" width="0.4" height="15.0" fill="rgb(235,6,12)" rx="2" ry="2" />
<text  x="58.02" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="173.1" y="1685" width="0.4" height="15.0" fill="rgb(229,81,2)" rx="2" ry="2" />
<text  x="176.09" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="512.9" y="1669" width="0.4" height="15.0" fill="rgb(224,1,0)" rx="2" ry="2" />
<text  x="515.92" y="1679.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%)</title><rect x="742.4" y="1733" width="0.4" height="15.0" fill="rgb(240,205,32)" rx="2" ry="2" />
<text  x="745.43" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="65.0" y="357" width="0.3" height="15.0" fill="rgb(243,68,15)" rx="2" ry="2" />
<text  x="67.98" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="134.7" y="1365" width="0.4" height="15.0" fill="rgb(220,202,54)" rx="2" ry="2" />
<text  x="137.72" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="111.5" y="1333" width="0.3" height="15.0" fill="rgb(247,86,2)" rx="2" ry="2" />
<text  x="114.47" y="1343.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.03%)</title><rect x="105.9" y="1781" width="0.4" height="15.0" fill="rgb(238,67,46)" rx="2" ry="2" />
<text  x="108.93" y="1791.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (2 samples, 0.06%)</title><rect x="183.1" y="1653" width="0.7" height="15.0" fill="rgb(233,7,31)" rx="2" ry="2" />
<text  x="186.05" y="1663.5" ></text>
</g>
<g >
<title>validation::validate_cql_key (3 samples, 0.09%)</title><rect x="864.2" y="1637" width="1.1" height="15.0" fill="rgb(214,137,14)" rx="2" ry="2" />
<text  x="867.19" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="57.2" y="325" width="0.8" height="15.0" fill="rgb(208,213,32)" rx="2" ry="2" />
<text  x="60.23" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.03%)</title><rect x="43.6" y="373" width="0.3" height="15.0" fill="rgb(206,72,27)" rx="2" ry="2" />
<text  x="46.58" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="67.9" y="389" width="0.4" height="15.0" fill="rgb(246,95,31)" rx="2" ry="2" />
<text  x="70.93" y="399.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="404.1" y="1605" width="0.3" height="15.0" fill="rgb(214,95,22)" rx="2" ry="2" />
<text  x="407.07" y="1615.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%)</title><rect x="173.1" y="1701" width="0.4" height="15.0" fill="rgb(237,5,29)" rx="2" ry="2" />
<text  x="176.09" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (11 samples, 0.34%)</title><rect x="44.3" y="405" width="4.1" height="15.0" fill="rgb(234,215,21)" rx="2" ry="2" />
<text  x="47.32" y="415.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="88.2" y="341" width="0.4" height="15.0" fill="rgb(234,63,52)" rx="2" ry="2" />
<text  x="91.22" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="66.1" y="261" width="0.4" height="15.0" fill="rgb(232,172,30)" rx="2" ry="2" />
<text  x="69.09" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="63.9" y="325" width="0.3" height="15.0" fill="rgb(226,111,37)" rx="2" ry="2" />
<text  x="66.87" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (15 samples, 0.47%)</title><rect x="56.9" y="469" width="5.5" height="15.0" fill="rgb(241,162,37)" rx="2" ry="2" />
<text  x="59.86" y="479.5" ></text>
</g>
<g >
<title>commitlog_entry_writer::write (1 samples, 0.03%)</title><rect x="1104.4" y="1637" width="0.4" height="15.0" fill="rgb(248,160,18)" rx="2" ry="2" />
<text  x="1107.40" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%)</title><rect x="42.5" y="373" width="0.7" height="15.0" fill="rgb(236,122,41)" rx="2" ry="2" />
<text  x="45.47" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (7 samples, 0.22%)</title><rect x="122.5" y="1525" width="2.6" height="15.0" fill="rgb(206,14,48)" rx="2" ry="2" />
<text  x="125.54" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (83 samples, 2.60%)</title><rect x="109.6" y="1685" width="30.7" height="15.0" fill="rgb(216,22,22)" rx="2" ry="2" />
<text  x="112.62" y="1695.5" >cq..</text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.03%)</title><rect x="53.5" y="405" width="0.4" height="15.0" fill="rgb(215,164,21)" rx="2" ry="2" />
<text  x="56.54" y="415.5" ></text>
</g>
<g >
<title>mutation_querier::consume (78 samples, 2.44%)</title><rect x="453.1" y="1653" width="28.8" height="15.0" fill="rgb(219,198,15)" rx="2" ry="2" />
<text  x="456.15" y="1663.5" >mu..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="74.9" y="421" width="0.4" height="15.0" fill="rgb(229,152,25)" rx="2" ry="2" />
<text  x="77.94" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%)</title><rect x="126.2" y="1477" width="0.4" height="15.0" fill="rgb(254,94,48)" rx="2" ry="2" />
<text  x="129.23" y="1487.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql3_type::raw&gt;::shared_ptr (1 samples, 0.03%)</title><rect x="131.8" y="1589" width="0.3" height="15.0" fill="rgb(233,51,5)" rx="2" ry="2" />
<text  x="134.76" y="1599.5" ></text>
</g>
<g >
<title>do_with_cql_env_thread (1 samples, 0.03%)</title><rect x="141.0" y="1845" width="0.4" height="15.0" fill="rgb(210,169,38)" rx="2" ry="2" />
<text  x="143.99" y="1855.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (18 samples, 0.56%)</title><rect x="1104.8" y="1685" width="6.6" height="15.0" fill="rgb(207,160,38)" rx="2" ry="2" />
<text  x="1107.77" y="1695.5" ></text>
</g>
<g >
<title>make_combined_reader (47 samples, 1.47%)</title><rect x="558.3" y="1669" width="17.3" height="15.0" fill="rgb(216,163,9)" rx="2" ry="2" />
<text  x="561.31" y="1679.5" ></text>
</g>
<g >
<title>row::apply_monotonically (3 samples, 0.09%)</title><rect x="861.6" y="1589" width="1.1" height="15.0" fill="rgb(250,226,18)" rx="2" ry="2" />
<text  x="864.61" y="1599.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.03%)</title><rect x="15.2" y="357" width="0.3" height="15.0" fill="rgb(241,18,4)" rx="2" ry="2" />
<text  x="18.17" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (2 samples, 0.06%)</title><rect x="617.7" y="1621" width="0.7" height="15.0" fill="rgb(224,109,25)" rx="2" ry="2" />
<text  x="620.71" y="1631.5" ></text>
</g>
<g >
<title>dht::minimum_token (1 samples, 0.03%)</title><rect x="556.8" y="1669" width="0.4" height="15.0" fill="rgb(217,216,31)" rx="2" ry="2" />
<text  x="559.83" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%)</title><rect x="137.3" y="1461" width="0.4" height="15.0" fill="rgb(223,98,19)" rx="2" ry="2" />
<text  x="140.30" y="1471.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (23 samples, 0.72%)</title><rect x="1077.5" y="1685" width="8.4" height="15.0" fill="rgb(213,7,6)" rx="2" ry="2" />
<text  x="1080.46" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="45.1" y="341" width="0.3" height="15.0" fill="rgb(236,227,38)" rx="2" ry="2" />
<text  x="48.05" y="351.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%)</title><rect x="151.3" y="1829" width="0.4" height="15.0" fill="rgb(252,192,42)" rx="2" ry="2" />
<text  x="154.32" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1125" width="88.6" height="15.0" fill="rgb(234,120,26)" rx="2" ry="2" />
<text  x="14.11" y="1135.5" >[unknown]</text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (1 samples, 0.03%)</title><rect x="138.4" y="1493" width="0.4" height="15.0" fill="rgb(237,211,15)" rx="2" ry="2" />
<text  x="141.41" y="1503.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="87.9" y="325" width="0.3" height="15.0" fill="rgb(222,24,43)" rx="2" ry="2" />
<text  x="90.85" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%)</title><rect x="53.5" y="373" width="0.4" height="15.0" fill="rgb(250,35,22)" rx="2" ry="2" />
<text  x="56.54" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="41.7" y="357" width="0.8" height="15.0" fill="rgb(218,145,17)" rx="2" ry="2" />
<text  x="44.73" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (276 samples, 8.63%)</title><rect x="545.8" y="1701" width="101.8" height="15.0" fill="rgb(222,158,43)" rx="2" ry="2" />
<text  x="548.76" y="1711.5" >std::_Functi..</text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%)</title><rect x="98.9" y="869" width="0.4" height="15.0" fill="rgb(229,22,10)" rx="2" ry="2" />
<text  x="101.92" y="879.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="65.0" y="341" width="0.3" height="15.0" fill="rgb(212,149,0)" rx="2" ry="2" />
<text  x="67.98" y="351.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.03%)</title><rect x="13.3" y="517" width="0.4" height="15.0" fill="rgb(221,206,19)" rx="2" ry="2" />
<text  x="16.32" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1 samples, 0.03%)</title><rect x="19.6" y="229" width="0.4" height="15.0" fill="rgb(239,99,3)" rx="2" ry="2" />
<text  x="22.59" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="69.0" y="277" width="0.4" height="15.0" fill="rgb(236,75,40)" rx="2" ry="2" />
<text  x="72.04" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; (1 samples, 0.03%)</title><rect x="75.3" y="261" width="0.4" height="15.0" fill="rgb(216,2,0)" rx="2" ry="2" />
<text  x="78.31" y="271.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1493" width="88.6" height="15.0" fill="rgb(228,162,23)" rx="2" ry="2" />
<text  x="14.11" y="1503.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::value (12 samples, 0.38%)</title><rect x="134.3" y="1589" width="4.5" height="15.0" fill="rgb(244,46,12)" rx="2" ry="2" />
<text  x="137.35" y="1599.5" ></text>
</g>
<g >
<title>__start_context (111 samples, 3.47%)</title><rect x="11.1" y="629" width="41.0" height="15.0" fill="rgb(239,103,31)" rx="2" ry="2" />
<text  x="14.11" y="639.5" >__s..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="688.2" y="1701" width="0.4" height="15.0" fill="rgb(222,108,53)" rx="2" ry="2" />
<text  x="691.19" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.03%)</title><rect x="107.4" y="1765" width="0.4" height="15.0" fill="rgb(209,82,35)" rx="2" ry="2" />
<text  x="110.41" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%)</title><rect x="76.0" y="405" width="0.8" height="15.0" fill="rgb(240,61,12)" rx="2" ry="2" />
<text  x="79.05" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%)</title><rect x="128.1" y="1477" width="0.3" height="15.0" fill="rgb(230,178,4)" rx="2" ry="2" />
<text  x="131.07" y="1487.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%)</title><rect x="395.2" y="1589" width="0.4" height="15.0" fill="rgb(244,51,49)" rx="2" ry="2" />
<text  x="398.22" y="1599.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (2 samples, 0.06%)</title><rect x="1099.6" y="1589" width="0.7" height="15.0" fill="rgb(220,203,16)" rx="2" ry="2" />
<text  x="1102.60" y="1599.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%)</title><rect x="132.9" y="1589" width="0.3" height="15.0" fill="rgb(238,13,53)" rx="2" ry="2" />
<text  x="135.87" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="63.9" y="389" width="0.3" height="15.0" fill="rgb(235,112,32)" rx="2" ry="2" />
<text  x="66.87" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="52.1" y="357" width="0.3" height="15.0" fill="rgb(223,120,31)" rx="2" ry="2" />
<text  x="55.06" y="367.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (3 samples, 0.09%)</title><rect x="1045.0" y="1605" width="1.1" height="15.0" fill="rgb(211,100,34)" rx="2" ry="2" />
<text  x="1047.99" y="1615.5" ></text>
</g>
<g >
<title>create_partitions (13 samples, 0.41%)</title><rect x="70.1" y="629" width="4.8" height="15.0" fill="rgb(229,63,8)" rx="2" ry="2" />
<text  x="73.14" y="639.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%)</title><rect x="749.8" y="1749" width="1.9" height="15.0" fill="rgb(240,38,6)" rx="2" ry="2" />
<text  x="752.81" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="66.1" y="357" width="0.4" height="15.0" fill="rgb(239,110,33)" rx="2" ry="2" />
<text  x="69.09" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.03%)</title><rect x="156.1" y="1781" width="0.4" height="15.0" fill="rgb(209,110,8)" rx="2" ry="2" />
<text  x="159.12" y="1791.5" ></text>
</g>
<g >
<title>create_partitions (13 samples, 0.41%)</title><rect x="52.1" y="565" width="4.8" height="15.0" fill="rgb(221,135,47)" rx="2" ry="2" />
<text  x="55.06" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="514.0" y="1685" width="0.4" height="15.0" fill="rgb(229,110,22)" rx="2" ry="2" />
<text  x="517.03" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="42.1" y="293" width="0.4" height="15.0" fill="rgb(248,138,47)" rx="2" ry="2" />
<text  x="45.10" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.41%)</title><rect x="70.1" y="549" width="4.8" height="15.0" fill="rgb(241,70,9)" rx="2" ry="2" />
<text  x="73.14" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="151.3" y="1477" width="0.4" height="15.0" fill="rgb(240,149,38)" rx="2" ry="2" />
<text  x="154.32" y="1487.5" ></text>
</g>
<g >
<title>seastar::reactor::run (2,716 samples, 84.93%)</title><rect x="153.5" y="1813" width="1002.2" height="15.0" fill="rgb(253,213,23)" rx="2" ry="2" />
<text  x="156.53" y="1823.5" >seastar::reactor::run</text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.03%)</title><rect x="151.3" y="1669" width="0.4" height="15.0" fill="rgb(223,122,12)" rx="2" ry="2" />
<text  x="154.32" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="76.4" y="341" width="0.4" height="15.0" fill="rgb(236,31,25)" rx="2" ry="2" />
<text  x="79.42" y="351.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="96.3" y="501" width="0.4" height="15.0" fill="rgb(223,151,24)" rx="2" ry="2" />
<text  x="99.34" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (4 samples, 0.13%)</title><rect x="62.4" y="437" width="1.5" height="15.0" fill="rgb(246,34,52)" rx="2" ry="2" />
<text  x="65.40" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_role_statement, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="91.2" y="549" width="0.3" height="15.0" fill="rgb(234,221,10)" rx="2" ry="2" />
<text  x="94.18" y="559.5" ></text>
</g>
<g >
<title>[unknown] (160 samples, 5.00%)</title><rect x="11.1" y="709" width="59.0" height="15.0" fill="rgb(249,205,50)" rx="2" ry="2" />
<text  x="14.11" y="719.5" >[unkno..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="66.1" y="389" width="0.4" height="15.0" fill="rgb(226,35,35)" rx="2" ry="2" />
<text  x="69.09" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="60.6" y="357" width="0.3" height="15.0" fill="rgb(246,40,16)" rx="2" ry="2" />
<text  x="63.55" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="133.6" y="1509" width="0.4" height="15.0" fill="rgb(226,117,21)" rx="2" ry="2" />
<text  x="136.61" y="1519.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (1 samples, 0.03%)</title><rect x="105.2" y="1637" width="0.4" height="15.0" fill="rgb(223,141,29)" rx="2" ry="2" />
<text  x="108.20" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="20.7" y="229" width="0.4" height="15.0" fill="rgb(205,208,18)" rx="2" ry="2" />
<text  x="23.70" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%)</title><rect x="118.8" y="1365" width="1.2" height="15.0" fill="rgb(214,151,36)" rx="2" ry="2" />
<text  x="121.85" y="1375.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="98.9" y="789" width="0.4" height="15.0" fill="rgb(215,192,7)" rx="2" ry="2" />
<text  x="101.92" y="799.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (15 samples, 0.47%)</title><rect x="56.9" y="533" width="5.5" height="15.0" fill="rgb(210,18,17)" rx="2" ry="2" />
<text  x="59.86" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;2ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="137.3" y="1205" width="0.4" height="15.0" fill="rgb(221,175,43)" rx="2" ry="2" />
<text  x="140.30" y="1215.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="63.9" y="421" width="0.3" height="15.0" fill="rgb(209,62,47)" rx="2" ry="2" />
<text  x="66.87" y="431.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="69.0" y="325" width="0.4" height="15.0" fill="rgb(245,12,21)" rx="2" ry="2" />
<text  x="72.04" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, lister::scan_dir (1 samples, 0.03%)</title><rect x="717.7" y="1765" width="0.4" height="15.0" fill="rgb(240,61,5)" rx="2" ry="2" />
<text  x="720.70" y="1775.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (4 samples, 0.13%)</title><rect x="62.4" y="469" width="1.5" height="15.0" fill="rgb(205,193,6)" rx="2" ry="2" />
<text  x="65.40" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="63.9" y="357" width="0.3" height="15.0" fill="rgb(230,159,46)" rx="2" ry="2" />
<text  x="66.87" y="367.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="98.9" y="933" width="0.4" height="15.0" fill="rgb(206,181,45)" rx="2" ry="2" />
<text  x="101.92" y="943.5" ></text>
</g>
<g >
<title>db::system_keyspace::legacy::aggregates (1 samples, 0.03%)</title><rect x="141.0" y="1525" width="0.4" height="15.0" fill="rgb(235,227,14)" rx="2" ry="2" />
<text  x="143.99" y="1535.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="99.3" y="965" width="0.4" height="15.0" fill="rgb(247,142,51)" rx="2" ry="2" />
<text  x="102.29" y="975.5" ></text>
</g>
<g >
<title>[unknown] (231 samples, 7.22%)</title><rect x="11.1" y="773" width="85.2" height="15.0" fill="rgb(246,140,36)" rx="2" ry="2" />
<text  x="14.11" y="783.5" >[unknown]</text>
</g>
<g >
<title>create_partitions (110 samples, 3.44%)</title><rect x="11.1" y="549" width="40.6" height="15.0" fill="rgb(210,160,21)" rx="2" ry="2" />
<text  x="14.11" y="559.5" >cre..</text>
</g>
<g >
<title>seastar::thread_context::main (7 samples, 0.22%)</title><rect x="149.5" y="1861" width="2.6" height="15.0" fill="rgb(237,41,36)" rx="2" ry="2" />
<text  x="152.47" y="1871.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%)</title><rect x="1029.5" y="1605" width="0.4" height="15.0" fill="rgb(245,67,21)" rx="2" ry="2" />
<text  x="1032.49" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%)</title><rect x="935.8" y="1605" width="0.7" height="15.0" fill="rgb(231,31,49)" rx="2" ry="2" />
<text  x="938.77" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="524.7" y="1621" width="0.8" height="15.0" fill="rgb(222,8,54)" rx="2" ry="2" />
<text  x="527.73" y="1631.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="136.2" y="1493" width="0.4" height="15.0" fill="rgb(245,50,53)" rx="2" ry="2" />
<text  x="139.19" y="1503.5" ></text>
</g>
<g >
<title>do_cql_test (15 samples, 0.47%)</title><rect x="99.7" y="1733" width="5.5" height="15.0" fill="rgb(209,73,34)" rx="2" ry="2" />
<text  x="102.66" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%)</title><rect x="134.7" y="1381" width="0.8" height="15.0" fill="rgb(220,123,54)" rx="2" ry="2" />
<text  x="137.72" y="1391.5" ></text>
</g>
<g >
<title>sstables::mc::writer::~writer (1 samples, 0.03%)</title><rect x="152.8" y="1765" width="0.4" height="15.0" fill="rgb(252,186,43)" rx="2" ry="2" />
<text  x="155.80" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%)</title><rect x="20.0" y="181" width="0.3" height="15.0" fill="rgb(217,149,39)" rx="2" ry="2" />
<text  x="22.96" y="191.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (4 samples, 0.13%)</title><rect x="1108.1" y="1525" width="1.5" height="15.0" fill="rgb(234,111,22)" rx="2" ry="2" />
<text  x="1111.09" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="74.9" y="469" width="0.4" height="15.0" fill="rgb(240,208,38)" rx="2" ry="2" />
<text  x="77.94" y="479.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.09%)</title><rect x="64.2" y="437" width="1.1" height="15.0" fill="rgb(209,46,28)" rx="2" ry="2" />
<text  x="67.24" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="73.8" y="341" width="0.4" height="15.0" fill="rgb(247,203,15)" rx="2" ry="2" />
<text  x="76.83" y="351.5" ></text>
</g>
<g >
<title>[unknown] (139 samples, 4.35%)</title><rect x="11.1" y="677" width="51.3" height="15.0" fill="rgb(223,42,18)" rx="2" ry="2" />
<text  x="14.11" y="687.5" >[unkn..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="55.4" y="341" width="0.4" height="15.0" fill="rgb(205,144,6)" rx="2" ry="2" />
<text  x="58.38" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.03%)</title><rect x="109.3" y="1717" width="0.3" height="15.0" fill="rgb(216,206,53)" rx="2" ry="2" />
<text  x="112.26" y="1727.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (111 samples, 3.47%)</title><rect x="11.1" y="581" width="41.0" height="15.0" fill="rgb(251,185,36)" rx="2" ry="2" />
<text  x="14.11" y="591.5" >std..</text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="124.0" y="1269" width="0.4" height="15.0" fill="rgb(250,80,35)" rx="2" ry="2" />
<text  x="127.02" y="1279.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%)</title><rect x="614.4" y="1605" width="0.7" height="15.0" fill="rgb(208,72,1)" rx="2" ry="2" />
<text  x="617.39" y="1615.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="73.8" y="197" width="0.4" height="15.0" fill="rgb(209,135,5)" rx="2" ry="2" />
<text  x="76.83" y="207.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (2 samples, 0.06%)</title><rect x="519.2" y="1653" width="0.7" height="15.0" fill="rgb(210,172,10)" rx="2" ry="2" />
<text  x="522.19" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::modification_statement, std::default_delete&lt;cql3::statements::raw::modification_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="94.5" y="549" width="0.4" height="15.0" fill="rgb(244,116,49)" rx="2" ry="2" />
<text  x="97.50" y="559.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="44.7" y="197" width="0.4" height="15.0" fill="rgb(249,166,35)" rx="2" ry="2" />
<text  x="47.68" y="207.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%)</title><rect x="511.8" y="1669" width="0.4" height="15.0" fill="rgb(209,168,22)" rx="2" ry="2" />
<text  x="514.81" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.44%)</title><rect x="74.9" y="581" width="5.2" height="15.0" fill="rgb(205,92,32)" rx="2" ry="2" />
<text  x="77.94" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%)</title><rect x="407.4" y="1637" width="2.2" height="15.0" fill="rgb(217,153,34)" rx="2" ry="2" />
<text  x="410.39" y="1647.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (10 samples, 0.31%)</title><rect x="657.6" y="1749" width="3.7" height="15.0" fill="rgb(214,44,30)" rx="2" ry="2" />
<text  x="660.56" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%)</title><rect x="137.7" y="1509" width="0.3" height="15.0" fill="rgb(221,54,52)" rx="2" ry="2" />
<text  x="140.67" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="133.2" y="1541" width="0.4" height="15.0" fill="rgb(233,4,29)" rx="2" ry="2" />
<text  x="136.24" y="1551.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (40 samples, 1.25%)</title><rect x="1157.5" y="1893" width="14.8" height="15.0" fill="rgb(210,141,16)" rx="2" ry="2" />
<text  x="1160.53" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="129.5" y="1461" width="0.8" height="15.0" fill="rgb(240,103,9)" rx="2" ry="2" />
<text  x="132.55" y="1471.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="73.8" y="389" width="0.4" height="15.0" fill="rgb(232,191,24)" rx="2" ry="2" />
<text  x="76.83" y="399.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (7 samples, 0.22%)</title><rect x="1146.5" y="1749" width="2.5" height="15.0" fill="rgb(211,71,13)" rx="2" ry="2" />
<text  x="1149.46" y="1759.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (1 samples, 0.03%)</title><rect x="109.3" y="1589" width="0.3" height="15.0" fill="rgb(224,54,45)" rx="2" ry="2" />
<text  x="112.26" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="42.8" y="309" width="0.4" height="15.0" fill="rgb(225,204,47)" rx="2" ry="2" />
<text  x="45.84" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="130.3" y="1493" width="0.4" height="15.0" fill="rgb(234,28,10)" rx="2" ry="2" />
<text  x="133.29" y="1503.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="21.1" y="277" width="0.3" height="15.0" fill="rgb(253,84,44)" rx="2" ry="2" />
<text  x="24.07" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::raw::parsed_statement*, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%)</title><rect x="50.2" y="389" width="0.4" height="15.0" fill="rgb(206,30,40)" rx="2" ry="2" />
<text  x="53.22" y="399.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%)</title><rect x="138.0" y="1557" width="0.4" height="15.0" fill="rgb(246,6,18)" rx="2" ry="2" />
<text  x="141.04" y="1567.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (3 samples, 0.09%)</title><rect x="656.5" y="1733" width="1.1" height="15.0" fill="rgb(231,67,50)" rx="2" ry="2" />
<text  x="659.45" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="138.0" y="1477" width="0.4" height="15.0" fill="rgb(245,224,1)" rx="2" ry="2" />
<text  x="141.04" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%)</title><rect x="72.0" y="405" width="0.4" height="15.0" fill="rgb(208,66,38)" rx="2" ry="2" />
<text  x="74.99" y="415.5" ></text>
</g>
<g >
<title>db::system_keyspace::query_mutations (1 samples, 0.03%)</title><rect x="182.3" y="1733" width="0.4" height="15.0" fill="rgb(249,223,49)" rx="2" ry="2" />
<text  x="185.31" y="1743.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (409 samples, 12.79%)</title><rect x="926.5" y="1669" width="151.0" height="15.0" fill="rgb(233,204,51)" rx="2" ry="2" />
<text  x="929.55" y="1679.5" >service::storage_pr..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_keyspace_statement, std::default_delete&lt;cql3::statements::alter_keyspace_statement&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="90.4" y="549" width="0.4" height="15.0" fill="rgb(218,97,28)" rx="2" ry="2" />
<text  x="93.44" y="559.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%)</title><rect x="413.3" y="1701" width="0.4" height="15.0" fill="rgb(253,188,48)" rx="2" ry="2" />
<text  x="416.30" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%)</title><rect x="949.8" y="1589" width="0.4" height="15.0" fill="rgb(226,90,12)" rx="2" ry="2" />
<text  x="952.79" y="1599.5" ></text>
</g>
<g >
<title>database::setup_metrics (1 samples, 0.03%)</title><rect x="153.2" y="1669" width="0.3" height="15.0" fill="rgb(221,133,25)" rx="2" ry="2" />
<text  x="156.16" y="1679.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="48.0" y="309" width="0.4" height="15.0" fill="rgb(230,228,51)" rx="2" ry="2" />
<text  x="51.01" y="319.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%)</title><rect x="404.4" y="1605" width="0.4" height="15.0" fill="rgb(236,61,10)" rx="2" ry="2" />
<text  x="407.44" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="88.2" y="485" width="0.8" height="15.0" fill="rgb(222,59,28)" rx="2" ry="2" />
<text  x="91.22" y="495.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;unsigned int*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.06%)</title><rect x="1107.3" y="1445" width="0.8" height="15.0" fill="rgb(232,54,36)" rx="2" ry="2" />
<text  x="1110.35" y="1455.5" ></text>
</g>
<g >
<title>do_cql_test (44 samples, 1.38%)</title><rect x="80.1" y="693" width="16.2" height="15.0" fill="rgb(239,80,13)" rx="2" ry="2" />
<text  x="83.11" y="703.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1237" width="88.6" height="15.0" fill="rgb(238,3,43)" rx="2" ry="2" />
<text  x="14.11" y="1247.5" >[unknown]</text>
</g>
<g >
<title>perf_simple_que (3,198 samples, 100.00%)</title><rect x="10.0" y="1909" width="1180.0" height="15.0" fill="rgb(245,171,2)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" >perf_simple_que</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="128.4" y="1381" width="0.4" height="15.0" fill="rgb(212,42,37)" rx="2" ry="2" />
<text  x="131.44" y="1391.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%)</title><rect x="76.4" y="389" width="0.4" height="15.0" fill="rgb(243,21,17)" rx="2" ry="2" />
<text  x="79.42" y="399.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1717" width="88.6" height="15.0" fill="rgb(218,70,13)" rx="2" ry="2" />
<text  x="14.11" y="1727.5" >[unknown]</text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="68.3" y="325" width="0.4" height="15.0" fill="rgb(235,143,14)" rx="2" ry="2" />
<text  x="71.30" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%)</title><rect x="133.6" y="1573" width="0.4" height="15.0" fill="rgb(211,163,42)" rx="2" ry="2" />
<text  x="136.61" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (237 samples, 7.41%)</title><rect x="11.1" y="821" width="87.5" height="15.0" fill="rgb(226,80,9)" rx="2" ry="2" />
<text  x="14.11" y="831.5" >[unknown]</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.03%)</title><rect x="863.5" y="1605" width="0.3" height="15.0" fill="rgb(245,35,46)" rx="2" ry="2" />
<text  x="866.45" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="72.4" y="277" width="0.3" height="15.0" fill="rgb(252,172,31)" rx="2" ry="2" />
<text  x="75.36" y="287.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (1 samples, 0.03%)</title><rect x="1149.0" y="1765" width="0.4" height="15.0" fill="rgb(208,61,8)" rx="2" ry="2" />
<text  x="1152.04" y="1775.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="666.4" y="1749" width="1.1" height="15.0" fill="rgb(225,66,24)" rx="2" ry="2" />
<text  x="669.42" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::get_deleter (1 samples, 0.03%)</title><rect x="62.0" y="373" width="0.4" height="15.0" fill="rgb(208,167,46)" rx="2" ry="2" />
<text  x="65.03" y="383.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%)</title><rect x="52.8" y="261" width="0.7" height="15.0" fill="rgb(244,108,42)" rx="2" ry="2" />
<text  x="55.80" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="128.4" y="1429" width="0.4" height="15.0" fill="rgb(226,52,40)" rx="2" ry="2" />
<text  x="131.44" y="1439.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (7 samples, 0.22%)</title><rect x="21.4" y="293" width="2.6" height="15.0" fill="rgb(250,156,17)" rx="2" ry="2" />
<text  x="24.44" y="303.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (111 samples, 3.47%)</title><rect x="11.1" y="613" width="41.0" height="15.0" fill="rgb(228,84,9)" rx="2" ry="2" />
<text  x="14.11" y="623.5" >sea..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%)</title><rect x="108.1" y="1733" width="0.4" height="15.0" fill="rgb(235,149,25)" rx="2" ry="2" />
<text  x="111.15" y="1743.5" ></text>
</g>
<g >
<title>query::querier_base::close (75 samples, 2.35%)</title><rect x="514.8" y="1717" width="27.6" height="15.0" fill="rgb(249,93,31)" rx="2" ry="2" />
<text  x="517.77" y="1727.5" >q..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="133.6" y="1445" width="0.4" height="15.0" fill="rgb(214,81,33)" rx="2" ry="2" />
<text  x="136.61" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (4 samples, 0.13%)</title><rect x="618.8" y="1637" width="1.5" height="15.0" fill="rgb(244,94,7)" rx="2" ry="2" />
<text  x="621.82" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (1 samples, 0.03%)</title><rect x="63.5" y="357" width="0.4" height="15.0" fill="rgb(208,189,44)" rx="2" ry="2" />
<text  x="66.50" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="153.2" y="1781" width="0.3" height="15.0" fill="rgb(223,204,35)" rx="2" ry="2" />
<text  x="156.16" y="1791.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="119.6" y="1349" width="0.4" height="15.0" fill="rgb(233,86,9)" rx="2" ry="2" />
<text  x="122.59" y="1359.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (2 samples, 0.06%)</title><rect x="976.4" y="1573" width="0.7" height="15.0" fill="rgb(214,219,51)" rx="2" ry="2" />
<text  x="979.36" y="1583.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a59683b929e6b30d9803453a6167c92c7df06c25] (1 samples, 0.03%)</title><rect x="369.8" y="1525" width="0.3" height="15.0" fill="rgb(241,144,30)" rx="2" ry="2" />
<text  x="372.76" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (36 samples, 1.13%)</title><rect x="605.5" y="1637" width="13.3" height="15.0" fill="rgb(235,117,48)" rx="2" ry="2" />
<text  x="608.53" y="1647.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="75.7" y="341" width="0.3" height="15.0" fill="rgb(242,172,5)" rx="2" ry="2" />
<text  x="78.68" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (616 samples, 19.26%)</title><rect x="870.1" y="1701" width="227.3" height="15.0" fill="rgb(221,217,26)" rx="2" ry="2" />
<text  x="873.09" y="1711.5" >cql3::statements::select_state..</text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="73.8" y="213" width="0.4" height="15.0" fill="rgb(211,43,6)" rx="2" ry="2" />
<text  x="76.83" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="136.2" y="1477" width="0.4" height="15.0" fill="rgb(249,195,5)" rx="2" ry="2" />
<text  x="139.19" y="1487.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.03%)</title><rect x="1097.0" y="1685" width="0.4" height="15.0" fill="rgb(235,45,32)" rx="2" ry="2" />
<text  x="1100.02" y="1695.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.03%)</title><rect x="98.6" y="597" width="0.3" height="15.0" fill="rgb(229,64,37)" rx="2" ry="2" />
<text  x="101.56" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="60.2" y="277" width="0.4" height="15.0" fill="rgb(241,150,47)" rx="2" ry="2" />
<text  x="63.18" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="137.3" y="1493" width="0.4" height="15.0" fill="rgb(245,125,42)" rx="2" ry="2" />
<text  x="140.30" y="1503.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="21.1" y="261" width="0.3" height="15.0" fill="rgb(248,23,47)" rx="2" ry="2" />
<text  x="24.07" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%)</title><rect x="57.2" y="405" width="0.8" height="15.0" fill="rgb(212,63,9)" rx="2" ry="2" />
<text  x="60.23" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%)</title><rect x="98.9" y="677" width="0.4" height="15.0" fill="rgb(243,76,53)" rx="2" ry="2" />
<text  x="101.92" y="687.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,717 samples, 84.96%)</title><rect x="153.5" y="1861" width="1002.6" height="15.0" fill="rgb(250,17,51)" rx="2" ry="2" />
<text  x="156.53" y="1871.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="36.9" y="309" width="0.4" height="15.0" fill="rgb(218,63,28)" rx="2" ry="2" />
<text  x="39.94" y="319.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (4 samples, 0.13%)</title><rect x="97.1" y="789" width="1.5" height="15.0" fill="rgb(214,116,19)" rx="2" ry="2" />
<text  x="100.08" y="799.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (9 samples, 0.28%)</title><rect x="142.5" y="1845" width="3.3" height="15.0" fill="rgb(239,41,45)" rx="2" ry="2" />
<text  x="145.46" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="54.6" y="277" width="0.4" height="15.0" fill="rgb(211,114,10)" rx="2" ry="2" />
<text  x="57.65" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.13%)</title><rect x="643.2" y="1637" width="1.4" height="15.0" fill="rgb(214,109,14)" rx="2" ry="2" />
<text  x="646.17" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (1 samples, 0.03%)</title><rect x="191.5" y="1749" width="0.4" height="15.0" fill="rgb(246,180,6)" rx="2" ry="2" />
<text  x="194.54" y="1759.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%)</title><rect x="105.2" y="1733" width="0.4" height="15.0" fill="rgb(207,93,31)" rx="2" ry="2" />
<text  x="108.20" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_p (1 samples, 0.03%)</title><rect x="41.4" y="373" width="0.3" height="15.0" fill="rgb(214,131,22)" rx="2" ry="2" />
<text  x="44.36" y="383.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (269 samples, 8.41%)</title><rect x="751.7" y="1749" width="99.2" height="15.0" fill="rgb(227,151,45)" rx="2" ry="2" />
<text  x="754.65" y="1759.5" >single_node_..</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%)</title><rect x="219.2" y="1717" width="0.4" height="15.0" fill="rgb(207,129,33)" rx="2" ry="2" />
<text  x="222.21" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::revoke_statement, std::default_delete&lt;cql3::statements::revoke_statement&gt; &gt;::_M_ptr (2 samples, 0.06%)</title><rect x="91.9" y="549" width="0.8" height="15.0" fill="rgb(246,176,3)" rx="2" ry="2" />
<text  x="94.91" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="703.3" y="1717" width="0.4" height="15.0" fill="rgb(213,31,2)" rx="2" ry="2" />
<text  x="706.31" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.03%)</title><rect x="132.5" y="1589" width="0.4" height="15.0" fill="rgb(231,75,43)" rx="2" ry="2" />
<text  x="135.50" y="1599.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.06%)</title><rect x="411.1" y="1653" width="0.7" height="15.0" fill="rgb(217,156,35)" rx="2" ry="2" />
<text  x="414.08" y="1663.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (5 samples, 0.16%)</title><rect x="615.1" y="1621" width="1.9" height="15.0" fill="rgb(229,139,47)" rx="2" ry="2" />
<text  x="618.13" y="1631.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (3 samples, 0.09%)</title><rect x="97.4" y="693" width="1.2" height="15.0" fill="rgb(229,108,45)" rx="2" ry="2" />
<text  x="100.45" y="703.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (66 samples, 2.06%)</title><rect x="16.6" y="405" width="24.4" height="15.0" fill="rgb(245,93,50)" rx="2" ry="2" />
<text  x="19.64" y="415.5" >a..</text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.06%)</title><rect x="827.7" y="1669" width="0.7" height="15.0" fill="rgb(211,202,50)" rx="2" ry="2" />
<text  x="830.66" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.16%)</title><rect x="991.1" y="1525" width="1.9" height="15.0" fill="rgb(242,197,48)" rx="2" ry="2" />
<text  x="994.12" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.03%)</title><rect x="21.4" y="229" width="0.4" height="15.0" fill="rgb(211,158,20)" rx="2" ry="2" />
<text  x="24.44" y="239.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="55.4" y="309" width="0.4" height="15.0" fill="rgb(208,114,52)" rx="2" ry="2" />
<text  x="58.38" y="319.5" ></text>
</g>
<g >
<title>clustering_key_prefix::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="858.3" y="1637" width="0.4" height="15.0" fill="rgb(226,18,47)" rx="2" ry="2" />
<text  x="861.29" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1541" width="88.6" height="15.0" fill="rgb(221,197,14)" rx="2" ry="2" />
<text  x="14.11" y="1551.5" >[unknown]</text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.03%)</title><rect x="24.0" y="277" width="0.4" height="15.0" fill="rgb(211,208,35)" rx="2" ry="2" />
<text  x="27.02" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="56.9" y="309" width="0.3" height="15.0" fill="rgb(228,20,8)" rx="2" ry="2" />
<text  x="59.86" y="319.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (3 samples, 0.09%)</title><rect x="402.2" y="1573" width="1.1" height="15.0" fill="rgb(209,105,53)" rx="2" ry="2" />
<text  x="405.23" y="1583.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="72.0" y="293" width="0.4" height="15.0" fill="rgb(232,141,11)" rx="2" ry="2" />
<text  x="74.99" y="303.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="153.2" y="1813" width="0.3" height="15.0" fill="rgb(239,73,9)" rx="2" ry="2" />
<text  x="156.16" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_type_statement, std::default_delete&lt;cql3::statements::drop_type_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="96.0" y="565" width="0.3" height="15.0" fill="rgb(241,154,18)" rx="2" ry="2" />
<text  x="98.97" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="76.8" y="421" width="0.4" height="15.0" fill="rgb(222,43,26)" rx="2" ry="2" />
<text  x="79.79" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="69.0" y="293" width="0.4" height="15.0" fill="rgb(212,183,7)" rx="2" ry="2" />
<text  x="72.04" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.03%)</title><rect x="403.3" y="1605" width="0.4" height="15.0" fill="rgb(220,203,26)" rx="2" ry="2" />
<text  x="406.33" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="56.9" y="421" width="0.3" height="15.0" fill="rgb(239,79,7)" rx="2" ry="2" />
<text  x="59.86" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%)</title><rect x="98.6" y="821" width="0.3" height="15.0" fill="rgb(229,58,3)" rx="2" ry="2" />
<text  x="101.56" y="831.5" ></text>
</g>
<g >
<title>[unknown] (237 samples, 7.41%)</title><rect x="11.1" y="837" width="87.5" height="15.0" fill="rgb(214,140,54)" rx="2" ry="2" />
<text  x="14.11" y="847.5" >[unknown]</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.09%)</title><rect x="191.9" y="1749" width="1.1" height="15.0" fill="rgb(212,127,30)" rx="2" ry="2" />
<text  x="194.91" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (6 samples, 0.19%)</title><rect x="112.9" y="1557" width="2.3" height="15.0" fill="rgb(254,168,19)" rx="2" ry="2" />
<text  x="115.95" y="1567.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (84 samples, 2.63%)</title><rect x="109.3" y="1733" width="31.0" height="15.0" fill="rgb(241,173,27)" rx="2" ry="2" />
<text  x="112.26" y="1743.5" >cq..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%)</title><rect x="48.0" y="213" width="0.4" height="15.0" fill="rgb(252,78,13)" rx="2" ry="2" />
<text  x="51.01" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (1 samples, 0.03%)</title><rect x="109.3" y="1621" width="0.3" height="15.0" fill="rgb(207,176,20)" rx="2" ry="2" />
<text  x="112.26" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="44.7" y="325" width="0.4" height="15.0" fill="rgb(210,183,14)" rx="2" ry="2" />
<text  x="47.68" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%)</title><rect x="52.8" y="405" width="0.7" height="15.0" fill="rgb(224,18,40)" rx="2" ry="2" />
<text  x="55.80" y="415.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.03%)</title><rect x="514.4" y="1701" width="0.4" height="15.0" fill="rgb(227,20,26)" rx="2" ry="2" />
<text  x="517.40" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%)</title><rect x="823.2" y="1605" width="1.1" height="15.0" fill="rgb(245,64,37)" rx="2" ry="2" />
<text  x="826.23" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%)</title><rect x="131.4" y="1541" width="0.4" height="15.0" fill="rgb(226,190,16)" rx="2" ry="2" />
<text  x="134.39" y="1551.5" ></text>
</g>
<g >
<title>seastar::reactor::open_file_dma (1 samples, 0.03%)</title><rect x="152.8" y="1861" width="0.4" height="15.0" fill="rgb(209,39,36)" rx="2" ry="2" />
<text  x="155.80" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (75 samples, 2.35%)</title><rect x="514.8" y="1701" width="27.6" height="15.0" fill="rgb(220,9,27)" rx="2" ry="2" />
<text  x="517.77" y="1711.5" >s..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="67.2" y="405" width="0.4" height="15.0" fill="rgb(209,205,0)" rx="2" ry="2" />
<text  x="70.19" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="67.9" y="293" width="0.4" height="15.0" fill="rgb(244,226,16)" rx="2" ry="2" />
<text  x="70.93" y="303.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (13 samples, 0.41%)</title><rect x="70.1" y="693" width="4.8" height="15.0" fill="rgb(218,167,15)" rx="2" ry="2" />
<text  x="73.14" y="703.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (15 samples, 0.47%)</title><rect x="56.9" y="565" width="5.5" height="15.0" fill="rgb(229,28,26)" rx="2" ry="2" />
<text  x="59.86" y="575.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (241 samples, 7.54%)</title><rect x="424.4" y="1685" width="88.9" height="15.0" fill="rgb(236,196,21)" rx="2" ry="2" />
<text  x="427.37" y="1695.5" >seastar::d..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="54.6" y="245" width="0.4" height="15.0" fill="rgb(211,112,38)" rx="2" ry="2" />
<text  x="57.65" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="764.9" y="1717" width="0.4" height="15.0" fill="rgb(207,123,38)" rx="2" ry="2" />
<text  x="767.93" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%)</title><rect x="128.4" y="1525" width="0.8" height="15.0" fill="rgb(218,93,16)" rx="2" ry="2" />
<text  x="131.44" y="1535.5" ></text>
</g>
<g >
<title>cql3::operation::requires_read (1 samples, 0.03%)</title><rect x="82.0" y="565" width="0.3" height="15.0" fill="rgb(248,214,30)" rx="2" ry="2" />
<text  x="84.95" y="575.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::do_wait (1 samples, 0.03%)</title><rect x="99.7" y="1701" width="0.3" height="15.0" fill="rgb(206,202,48)" rx="2" ry="2" />
<text  x="102.66" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (5 samples, 0.16%)</title><rect x="126.6" y="1541" width="1.8" height="15.0" fill="rgb(207,137,46)" rx="2" ry="2" />
<text  x="129.60" y="1551.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (1 samples, 0.03%)</title><rect x="141.0" y="1557" width="0.4" height="15.0" fill="rgb(227,193,36)" rx="2" ry="2" />
<text  x="143.99" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.06%)</title><rect x="536.2" y="1669" width="0.7" height="15.0" fill="rgb(249,18,38)" rx="2" ry="2" />
<text  x="539.17" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="53.5" y="325" width="0.4" height="15.0" fill="rgb(210,217,45)" rx="2" ry="2" />
<text  x="56.54" y="335.5" ></text>
</g>
<g >
<title>do_cql_test (14 samples, 0.44%)</title><rect x="74.9" y="677" width="5.2" height="15.0" fill="rgb(251,74,4)" rx="2" ry="2" />
<text  x="77.94" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (4 samples, 0.13%)</title><rect x="27.7" y="261" width="1.5" height="15.0" fill="rgb(243,228,48)" rx="2" ry="2" />
<text  x="30.71" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (3 samples, 0.09%)</title><rect x="29.9" y="245" width="1.1" height="15.0" fill="rgb(220,51,41)" rx="2" ry="2" />
<text  x="32.92" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="151.3" y="1413" width="0.4" height="15.0" fill="rgb(212,105,51)" rx="2" ry="2" />
<text  x="154.32" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="815.9" y="1605" width="0.3" height="15.0" fill="rgb(231,153,45)" rx="2" ry="2" />
<text  x="818.85" y="1615.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::release (1 samples, 0.03%)</title><rect x="98.9" y="645" width="0.4" height="15.0" fill="rgb(211,139,47)" rx="2" ry="2" />
<text  x="101.92" y="655.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (2 samples, 0.06%)</title><rect x="1104.0" y="1669" width="0.8" height="15.0" fill="rgb(233,72,42)" rx="2" ry="2" />
<text  x="1107.03" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="130.3" y="1477" width="0.4" height="15.0" fill="rgb(236,161,45)" rx="2" ry="2" />
<text  x="133.29" y="1487.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%)</title><rect x="1098.9" y="1605" width="0.3" height="15.0" fill="rgb(211,135,52)" rx="2" ry="2" />
<text  x="1101.86" y="1615.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%)</title><rect x="68.7" y="325" width="0.3" height="15.0" fill="rgb(241,42,20)" rx="2" ry="2" />
<text  x="71.67" y="335.5" ></text>
</g>
<g >
<title>seastar::async&lt;single_node_cql_env::do_with (1 samples, 0.03%)</title><rect x="153.2" y="1845" width="0.3" height="15.0" fill="rgb(205,1,11)" rx="2" ry="2" />
<text  x="156.16" y="1855.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.03%)</title><rect x="22.9" y="133" width="0.4" height="15.0" fill="rgb(211,41,0)" rx="2" ry="2" />
<text  x="25.91" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.16%)</title><rect x="695.9" y="1749" width="1.9" height="15.0" fill="rgb(254,96,38)" rx="2" ry="2" />
<text  x="698.93" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="72.4" y="421" width="0.3" height="15.0" fill="rgb(246,161,29)" rx="2" ry="2" />
<text  x="75.36" y="431.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.19%)</title><rect x="21.4" y="261" width="2.3" height="15.0" fill="rgb(222,221,47)" rx="2" ry="2" />
<text  x="24.44" y="271.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%)</title><rect x="616.2" y="1605" width="0.8" height="15.0" fill="rgb(216,179,14)" rx="2" ry="2" />
<text  x="619.24" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.03%)</title><rect x="20.7" y="293" width="0.4" height="15.0" fill="rgb(251,228,37)" rx="2" ry="2" />
<text  x="23.70" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (7 samples, 0.22%)</title><rect x="1143.9" y="1733" width="2.6" height="15.0" fill="rgb(253,28,11)" rx="2" ry="2" />
<text  x="1146.88" y="1743.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (9 samples, 0.28%)</title><rect x="751.7" y="1733" width="3.3" height="15.0" fill="rgb(227,219,28)" rx="2" ry="2" />
<text  x="754.65" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%)</title><rect x="1050.5" y="1573" width="1.1" height="15.0" fill="rgb(230,100,49)" rx="2" ry="2" />
<text  x="1053.53" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="132.9" y="1445" width="0.3" height="15.0" fill="rgb(247,33,37)" rx="2" ry="2" />
<text  x="135.87" y="1455.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="71.3" y="405" width="0.3" height="15.0" fill="rgb(243,156,5)" rx="2" ry="2" />
<text  x="74.25" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="125.5" y="1477" width="0.4" height="15.0" fill="rgb(229,182,48)" rx="2" ry="2" />
<text  x="128.49" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="73.8" y="229" width="0.4" height="15.0" fill="rgb(219,64,25)" rx="2" ry="2" />
<text  x="76.83" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (5 samples, 0.16%)</title><rect x="38.4" y="341" width="1.9" height="15.0" fill="rgb(220,108,44)" rx="2" ry="2" />
<text  x="41.41" y="351.5" ></text>
</g>
<g >
<title>schema::column_at (6 samples, 0.19%)</title><rect x="386.7" y="1525" width="2.2" height="15.0" fill="rgb(253,50,17)" rx="2" ry="2" />
<text  x="389.73" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.03%)</title><rect x="1051.3" y="1541" width="0.3" height="15.0" fill="rgb(246,129,5)" rx="2" ry="2" />
<text  x="1054.26" y="1551.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="87.9" y="453" width="0.3" height="15.0" fill="rgb(246,220,46)" rx="2" ry="2" />
<text  x="90.85" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (13 samples, 0.41%)</title><rect x="70.1" y="517" width="4.8" height="15.0" fill="rgb(231,225,31)" rx="2" ry="2" />
<text  x="73.14" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="133.2" y="1557" width="0.4" height="15.0" fill="rgb(236,65,7)" rx="2" ry="2" />
<text  x="136.24" y="1567.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a59683b929e6b30d9803453a6167c92c7df06c25] (1 samples, 0.03%)</title><rect x="764.6" y="1717" width="0.3" height="15.0" fill="rgb(224,42,34)" rx="2" ry="2" />
<text  x="767.57" y="1727.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (11 samples, 0.34%)</title><rect x="1081.2" y="1669" width="4.0" height="15.0" fill="rgb(207,164,19)" rx="2" ry="2" />
<text  x="1084.15" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="121.8" y="1461" width="0.4" height="15.0" fill="rgb(240,221,53)" rx="2" ry="2" />
<text  x="124.80" y="1471.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (10 samples, 0.31%)</title><rect x="20.7" y="309" width="3.7" height="15.0" fill="rgb(206,48,3)" rx="2" ry="2" />
<text  x="23.70" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="137.3" y="1269" width="0.4" height="15.0" fill="rgb(209,70,8)" rx="2" ry="2" />
<text  x="140.30" y="1279.5" ></text>
</g>
<g >
<title>schema::schema (1 samples, 0.03%)</title><rect x="141.0" y="1477" width="0.4" height="15.0" fill="rgb(219,180,43)" rx="2" ry="2" />
<text  x="143.99" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="69.0" y="261" width="0.4" height="15.0" fill="rgb(212,3,6)" rx="2" ry="2" />
<text  x="72.04" y="271.5" ></text>
</g>
<g >
<title>seastar::async&lt;single_node_cql_env::do_with (1 samples, 0.03%)</title><rect x="141.0" y="1829" width="0.4" height="15.0" fill="rgb(228,68,27)" rx="2" ry="2" />
<text  x="143.99" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="133.2" y="1525" width="0.4" height="15.0" fill="rgb(209,48,51)" rx="2" ry="2" />
<text  x="136.24" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="88.2" y="469" width="0.8" height="15.0" fill="rgb(244,79,47)" rx="2" ry="2" />
<text  x="91.22" y="479.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (1 samples, 0.03%)</title><rect x="632.5" y="1669" width="0.3" height="15.0" fill="rgb(226,46,29)" rx="2" ry="2" />
<text  x="635.47" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%)</title><rect x="1083.4" y="1621" width="1.4" height="15.0" fill="rgb(254,141,37)" rx="2" ry="2" />
<text  x="1086.36" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="695.6" y="1749" width="0.3" height="15.0" fill="rgb(208,66,31)" rx="2" ry="2" />
<text  x="698.57" y="1759.5" ></text>
</g>
<g >
<title>abstract_type::is_collection (1 samples, 0.03%)</title><rect x="84.5" y="501" width="0.4" height="15.0" fill="rgb(228,174,28)" rx="2" ry="2" />
<text  x="87.53" y="511.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (2 samples, 0.06%)</title><rect x="398.5" y="1589" width="0.8" height="15.0" fill="rgb(221,205,7)" rx="2" ry="2" />
<text  x="401.54" y="1599.5" ></text>
</g>
<g >
<title>row::row (86 samples, 2.69%)</title><rect x="358.3" y="1557" width="31.8" height="15.0" fill="rgb(226,70,40)" rx="2" ry="2" />
<text  x="361.32" y="1567.5" >ro..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%)</title><rect x="73.5" y="293" width="0.3" height="15.0" fill="rgb(243,218,14)" rx="2" ry="2" />
<text  x="76.46" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%)</title><rect x="182.7" y="1733" width="0.4" height="15.0" fill="rgb(230,204,36)" rx="2" ry="2" />
<text  x="185.68" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (4 samples, 0.13%)</title><rect x="62.4" y="453" width="1.5" height="15.0" fill="rgb(221,123,52)" rx="2" ry="2" />
<text  x="65.40" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%)</title><rect x="133.6" y="1541" width="0.4" height="15.0" fill="rgb(237,222,50)" rx="2" ry="2" />
<text  x="136.61" y="1551.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.41%)</title><rect x="448.3" y="1669" width="4.8" height="15.0" fill="rgb(217,224,13)" rx="2" ry="2" />
<text  x="451.35" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="74.9" y="501" width="0.4" height="15.0" fill="rgb(223,132,29)" rx="2" ry="2" />
<text  x="77.94" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="94.1" y="549" width="0.4" height="15.0" fill="rgb(244,145,26)" rx="2" ry="2" />
<text  x="97.13" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="88.2" y="405" width="0.4" height="15.0" fill="rgb(210,209,26)" rx="2" ry="2" />
<text  x="91.22" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (248 samples, 7.75%)</title><rect x="759.4" y="1733" width="91.5" height="15.0" fill="rgb(234,194,52)" rx="2" ry="2" />
<text  x="762.40" y="1743.5" >single_nod..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.03%)</title><rect x="173.8" y="1685" width="0.4" height="15.0" fill="rgb(206,42,27)" rx="2" ry="2" />
<text  x="176.83" y="1695.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1105.5" y="1477" width="0.4" height="15.0" fill="rgb(251,83,44)" rx="2" ry="2" />
<text  x="1108.50" y="1487.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="128.1" y="1493" width="0.3" height="15.0" fill="rgb(228,209,51)" rx="2" ry="2" />
<text  x="131.07" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="64.6" y="373" width="0.4" height="15.0" fill="rgb(213,81,42)" rx="2" ry="2" />
<text  x="67.61" y="383.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%)</title><rect x="96.3" y="533" width="0.4" height="15.0" fill="rgb(225,47,39)" rx="2" ry="2" />
<text  x="99.34" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%)</title><rect x="180.5" y="1749" width="0.3" height="15.0" fill="rgb(209,113,54)" rx="2" ry="2" />
<text  x="183.47" y="1759.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (6 samples, 0.19%)</title><rect x="390.8" y="1573" width="2.2" height="15.0" fill="rgb(210,85,46)" rx="2" ry="2" />
<text  x="393.79" y="1583.5" ></text>
</g>
<g >
<title>seastar::metrics::metric_groups::add_group (1 samples, 0.03%)</title><rect x="153.2" y="1653" width="0.3" height="15.0" fill="rgb(237,11,17)" rx="2" ry="2" />
<text  x="156.16" y="1663.5" ></text>
</g>
<g >
<title>db::schema_tables::add_table_params_to_mutations (1 samples, 0.03%)</title><rect x="183.8" y="1621" width="0.4" height="15.0" fill="rgb(229,14,6)" rx="2" ry="2" />
<text  x="186.79" y="1631.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (13 samples, 0.41%)</title><rect x="858.3" y="1653" width="4.8" height="15.0" fill="rgb(210,226,8)" rx="2" ry="2" />
<text  x="861.29" y="1663.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%)</title><rect x="839.5" y="1701" width="2.2" height="15.0" fill="rgb(220,194,31)" rx="2" ry="2" />
<text  x="842.47" y="1711.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (27 samples, 0.84%)</title><rect x="856.4" y="1701" width="10.0" height="15.0" fill="rgb(219,69,0)" rx="2" ry="2" />
<text  x="859.44" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="93.4" y="549" width="0.4" height="15.0" fill="rgb(205,219,47)" rx="2" ry="2" />
<text  x="96.39" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="124.0" y="1285" width="0.4" height="15.0" fill="rgb(209,75,49)" rx="2" ry="2" />
<text  x="127.02" y="1295.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%)</title><rect x="28.4" y="213" width="0.4" height="15.0" fill="rgb(211,36,23)" rx="2" ry="2" />
<text  x="31.45" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%)</title><rect x="308.9" y="1621" width="0.3" height="15.0" fill="rgb(225,198,46)" rx="2" ry="2" />
<text  x="311.87" y="1631.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%)</title><rect x="933.2" y="1637" width="3.3" height="15.0" fill="rgb(212,48,48)" rx="2" ry="2" />
<text  x="936.19" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="112.2" y="1477" width="0.4" height="15.0" fill="rgb(247,116,43)" rx="2" ry="2" />
<text  x="115.21" y="1487.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%)</title><rect x="65.7" y="405" width="0.4" height="15.0" fill="rgb(247,90,20)" rx="2" ry="2" />
<text  x="68.72" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.09%)</title><rect x="72.7" y="405" width="1.1" height="15.0" fill="rgb(223,65,3)" rx="2" ry="2" />
<text  x="75.73" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.06%)</title><rect x="1138.7" y="1749" width="0.7" height="15.0" fill="rgb(214,181,6)" rx="2" ry="2" />
<text  x="1141.71" y="1759.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (1 samples, 0.03%)</title><rect x="182.3" y="1685" width="0.4" height="15.0" fill="rgb(249,25,0)" rx="2" ry="2" />
<text  x="185.31" y="1695.5" ></text>
</g>
<g >
<title>db::filter_for_query (4 samples, 0.13%)</title><rect x="1046.8" y="1605" width="1.5" height="15.0" fill="rgb(236,68,25)" rx="2" ry="2" />
<text  x="1049.84" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (19 samples, 0.59%)</title><rect x="115.5" y="1557" width="7.0" height="15.0" fill="rgb(241,53,30)" rx="2" ry="2" />
<text  x="118.53" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (1 samples, 0.03%)</title><rect x="96.7" y="565" width="0.4" height="15.0" fill="rgb(240,228,33)" rx="2" ry="2" />
<text  x="99.71" y="575.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (18 samples, 0.56%)</title><rect x="1104.8" y="1749" width="6.6" height="15.0" fill="rgb(252,179,25)" rx="2" ry="2" />
<text  x="1107.77" y="1759.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (145 samples, 4.53%)</title><rect x="336.5" y="1573" width="53.6" height="15.0" fill="rgb(236,88,43)" rx="2" ry="2" />
<text  x="339.55" y="1583.5" >parti..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%)</title><rect x="76.0" y="389" width="0.4" height="15.0" fill="rgb(215,186,33)" rx="2" ry="2" />
<text  x="79.05" y="399.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1445" width="88.6" height="15.0" fill="rgb(247,81,11)" rx="2" ry="2" />
<text  x="14.11" y="1455.5" >[unknown]</text>
</g>
<g >
<title>service::storage_proxy::query_singular (85 samples, 2.66%)</title><rect x="1117.7" y="1765" width="31.3" height="15.0" fill="rgb(244,21,5)" rx="2" ry="2" />
<text  x="1120.68" y="1775.5" >se..</text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (24 samples, 0.75%)</title><rect x="1013.3" y="1509" width="8.8" height="15.0" fill="rgb(212,198,26)" rx="2" ry="2" />
<text  x="1016.26" y="1519.5" ></text>
</g>
<g >
<title>mutation::set_cell (3 samples, 0.09%)</title><rect x="860.5" y="1589" width="1.1" height="15.0" fill="rgb(217,9,21)" rx="2" ry="2" />
<text  x="863.50" y="1599.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (11 samples, 0.34%)</title><rect x="652.4" y="1717" width="4.1" height="15.0" fill="rgb(235,55,37)" rx="2" ry="2" />
<text  x="655.40" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="65.0" y="325" width="0.3" height="15.0" fill="rgb(233,85,33)" rx="2" ry="2" />
<text  x="67.98" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="45.1" y="309" width="0.3" height="15.0" fill="rgb(251,197,26)" rx="2" ry="2" />
<text  x="48.05" y="319.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (24 samples, 0.75%)</title><rect x="533.2" y="1685" width="8.9" height="15.0" fill="rgb(231,11,29)" rx="2" ry="2" />
<text  x="536.21" y="1695.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="56.9" y="437" width="0.3" height="15.0" fill="rgb(244,185,9)" rx="2" ry="2" />
<text  x="59.86" y="447.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (2 samples, 0.06%)</title><rect x="466.1" y="1637" width="0.7" height="15.0" fill="rgb(208,131,40)" rx="2" ry="2" />
<text  x="469.06" y="1647.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.16%)</title><rect x="613.3" y="1621" width="1.8" height="15.0" fill="rgb(254,52,49)" rx="2" ry="2" />
<text  x="616.28" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (8 samples, 0.25%)</title><rect x="134.3" y="1573" width="3.0" height="15.0" fill="rgb(247,102,29)" rx="2" ry="2" />
<text  x="137.35" y="1583.5" ></text>
</g>
<g >
<title>database::find_schema (8 samples, 0.25%)</title><rect x="829.5" y="1653" width="3.0" height="15.0" fill="rgb(206,82,14)" rx="2" ry="2" />
<text  x="832.51" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.09%)</title><rect x="1021.0" y="1493" width="1.1" height="15.0" fill="rgb(217,44,36)" rx="2" ry="2" />
<text  x="1024.01" y="1503.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%)</title><rect x="946.8" y="1621" width="3.4" height="15.0" fill="rgb(222,150,36)" rx="2" ry="2" />
<text  x="949.84" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="103.0" y="1557" width="0.4" height="15.0" fill="rgb(219,193,20)" rx="2" ry="2" />
<text  x="105.98" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (17 samples, 0.53%)</title><rect x="63.9" y="469" width="6.2" height="15.0" fill="rgb(231,12,11)" rx="2" ry="2" />
<text  x="66.87" y="479.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="68.7" y="181" width="0.3" height="15.0" fill="rgb(237,23,21)" rx="2" ry="2" />
<text  x="71.67" y="191.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (33 samples, 1.03%)</title><rect x="885.6" y="1621" width="12.2" height="15.0" fill="rgb(213,37,40)" rx="2" ry="2" />
<text  x="888.59" y="1631.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="129.9" y="1365" width="0.4" height="15.0" fill="rgb(252,32,48)" rx="2" ry="2" />
<text  x="132.92" y="1375.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (1 samples, 0.03%)</title><rect x="62.8" y="357" width="0.3" height="15.0" fill="rgb(220,213,39)" rx="2" ry="2" />
<text  x="65.76" y="367.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%)</title><rect x="877.5" y="1685" width="0.3" height="15.0" fill="rgb(242,123,18)" rx="2" ry="2" />
<text  x="880.47" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%)</title><rect x="137.3" y="1477" width="0.4" height="15.0" fill="rgb(211,229,34)" rx="2" ry="2" />
<text  x="140.30" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (2 samples, 0.06%)</title><rect x="121.1" y="1509" width="0.7" height="15.0" fill="rgb(221,62,34)" rx="2" ry="2" />
<text  x="124.06" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="133.6" y="1461" width="0.4" height="15.0" fill="rgb(250,226,22)" rx="2" ry="2" />
<text  x="136.61" y="1471.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%)</title><rect x="723.6" y="1733" width="0.7" height="15.0" fill="rgb(212,173,10)" rx="2" ry="2" />
<text  x="726.61" y="1743.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (32 samples, 1.00%)</title><rect x="634.3" y="1653" width="11.8" height="15.0" fill="rgb(229,13,16)" rx="2" ry="2" />
<text  x="637.32" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.06%)</title><rect x="75.3" y="437" width="0.7" height="15.0" fill="rgb(214,97,19)" rx="2" ry="2" />
<text  x="78.31" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%)</title><rect x="219.6" y="1717" width="0.3" height="15.0" fill="rgb(247,133,48)" rx="2" ry="2" />
<text  x="222.58" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="73.5" y="101" width="0.3" height="15.0" fill="rgb(247,13,54)" rx="2" ry="2" />
<text  x="76.46" y="111.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (3 samples, 0.09%)</title><rect x="97.4" y="629" width="1.2" height="15.0" fill="rgb(238,155,8)" rx="2" ry="2" />
<text  x="100.45" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::select_on_container_copy_construction (1 samples, 0.03%)</title><rect x="132.5" y="1541" width="0.4" height="15.0" fill="rgb(218,69,51)" rx="2" ry="2" />
<text  x="135.50" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="96.3" y="437" width="0.4" height="15.0" fill="rgb(247,20,41)" rx="2" ry="2" />
<text  x="99.34" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="151.3" y="1557" width="0.4" height="15.0" fill="rgb(250,13,43)" rx="2" ry="2" />
<text  x="154.32" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="88.6" y="357" width="0.4" height="15.0" fill="rgb(226,212,30)" rx="2" ry="2" />
<text  x="91.59" y="367.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (1 samples, 0.03%)</title><rect x="743.5" y="1733" width="0.4" height="15.0" fill="rgb(218,94,41)" rx="2" ry="2" />
<text  x="746.53" y="1743.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.03%)</title><rect x="1114.0" y="1733" width="0.4" height="15.0" fill="rgb(226,27,35)" rx="2" ry="2" />
<text  x="1116.99" y="1743.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (2 samples, 0.06%)</title><rect x="1104.0" y="1653" width="0.8" height="15.0" fill="rgb(228,145,44)" rx="2" ry="2" />
<text  x="1107.03" y="1663.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.03%)</title><rect x="955.0" y="1621" width="0.3" height="15.0" fill="rgb(234,196,10)" rx="2" ry="2" />
<text  x="957.96" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%)</title><rect x="137.7" y="1573" width="0.3" height="15.0" fill="rgb(250,136,23)" rx="2" ry="2" />
<text  x="140.67" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="96.3" y="421" width="0.4" height="15.0" fill="rgb(239,128,39)" rx="2" ry="2" />
<text  x="99.34" y="431.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="55.0" y="197" width="0.4" height="15.0" fill="rgb(246,50,47)" rx="2" ry="2" />
<text  x="58.02" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%)</title><rect x="87.1" y="581" width="0.4" height="15.0" fill="rgb(206,221,2)" rx="2" ry="2" />
<text  x="90.12" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="850.9" y="1749" width="0.4" height="15.0" fill="rgb(223,77,9)" rx="2" ry="2" />
<text  x="853.91" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::grant_statement, std::default_delete&lt;cql3::statements::grant_statement&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="91.5" y="549" width="0.4" height="15.0" fill="rgb(218,21,32)" rx="2" ry="2" />
<text  x="94.54" y="559.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="128.4" y="1509" width="0.8" height="15.0" fill="rgb(234,214,16)" rx="2" ry="2" />
<text  x="131.44" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="121.8" y="1413" width="0.4" height="15.0" fill="rgb(210,211,18)" rx="2" ry="2" />
<text  x="124.80" y="1423.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="963.8" y="1605" width="0.4" height="15.0" fill="rgb(239,183,52)" rx="2" ry="2" />
<text  x="966.81" y="1615.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%)</title><rect x="71.3" y="437" width="0.3" height="15.0" fill="rgb(205,219,10)" rx="2" ry="2" />
<text  x="74.25" y="447.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="133.2" y="1445" width="0.4" height="15.0" fill="rgb(235,99,35)" rx="2" ry="2" />
<text  x="136.24" y="1455.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%)</title><rect x="684.1" y="1733" width="0.4" height="15.0" fill="rgb(251,201,33)" rx="2" ry="2" />
<text  x="687.13" y="1743.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (36 samples, 1.13%)</title><rect x="884.9" y="1653" width="13.2" height="15.0" fill="rgb(220,21,6)" rx="2" ry="2" />
<text  x="887.85" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="129.5" y="1445" width="0.8" height="15.0" fill="rgb(234,106,9)" rx="2" ry="2" />
<text  x="132.55" y="1455.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%)</title><rect x="593.7" y="1653" width="0.4" height="15.0" fill="rgb(252,51,51)" rx="2" ry="2" />
<text  x="596.73" y="1663.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="135.8" y="1525" width="0.4" height="15.0" fill="rgb(247,32,43)" rx="2" ry="2" />
<text  x="138.82" y="1535.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="79.0" y="293" width="0.4" height="15.0" fill="rgb(242,161,10)" rx="2" ry="2" />
<text  x="82.00" y="303.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a59683b929e6b30d9803453a6167c92c7df06c25] (1 samples, 0.03%)</title><rect x="784.9" y="1685" width="0.3" height="15.0" fill="rgb(234,177,46)" rx="2" ry="2" />
<text  x="787.86" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%)</title><rect x="55.0" y="357" width="0.4" height="15.0" fill="rgb(228,48,42)" rx="2" ry="2" />
<text  x="58.02" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%)</title><rect x="128.1" y="1509" width="0.3" height="15.0" fill="rgb(234,11,28)" rx="2" ry="2" />
<text  x="131.07" y="1519.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="182.7" y="1701" width="0.4" height="15.0" fill="rgb(213,94,29)" rx="2" ry="2" />
<text  x="185.68" y="1711.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (127 samples, 3.97%)</title><rect x="789.3" y="1685" width="46.8" height="15.0" fill="rgb(231,194,27)" rx="2" ry="2" />
<text  x="792.29" y="1695.5" >serv..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.16%)</title><rect x="21.8" y="229" width="1.9" height="15.0" fill="rgb(206,197,20)" rx="2" ry="2" />
<text  x="24.81" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="133.2" y="1493" width="0.4" height="15.0" fill="rgb(226,26,50)" rx="2" ry="2" />
<text  x="136.24" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="137.3" y="1365" width="0.4" height="15.0" fill="rgb(249,158,54)" rx="2" ry="2" />
<text  x="140.30" y="1375.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (7 samples, 0.22%)</title><rect x="1143.9" y="1749" width="2.6" height="15.0" fill="rgb(233,165,17)" rx="2" ry="2" />
<text  x="1146.88" y="1759.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%)</title><rect x="688.6" y="1701" width="0.7" height="15.0" fill="rgb(224,26,10)" rx="2" ry="2" />
<text  x="691.56" y="1711.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="62.4" y="357" width="0.4" height="15.0" fill="rgb(237,28,48)" rx="2" ry="2" />
<text  x="65.40" y="367.5" ></text>
</g>
<g >
<title>do_cql_test (84 samples, 2.63%)</title><rect x="109.3" y="1797" width="31.0" height="15.0" fill="rgb(207,223,20)" rx="2" ry="2" />
<text  x="112.26" y="1807.5" >do..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="67.9" y="357" width="0.4" height="15.0" fill="rgb(241,133,14)" rx="2" ry="2" />
<text  x="70.93" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 0.41%)</title><rect x="461.3" y="1637" width="4.8" height="15.0" fill="rgb(249,206,20)" rx="2" ry="2" />
<text  x="464.26" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.50%)</title><rect x="987.1" y="1541" width="5.9" height="15.0" fill="rgb(239,67,43)" rx="2" ry="2" />
<text  x="990.06" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="45.4" y="277" width="0.4" height="15.0" fill="rgb(217,131,1)" rx="2" ry="2" />
<text  x="48.42" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="111.5" y="1381" width="0.3" height="15.0" fill="rgb(249,10,22)" rx="2" ry="2" />
<text  x="114.47" y="1391.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (1 samples, 0.03%)</title><rect x="69.4" y="389" width="0.4" height="15.0" fill="rgb(227,135,49)" rx="2" ry="2" />
<text  x="72.41" y="399.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="127.3" y="1509" width="0.8" height="15.0" fill="rgb(226,97,0)" rx="2" ry="2" />
<text  x="130.34" y="1519.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.03%)</title><rect x="141.0" y="1605" width="0.4" height="15.0" fill="rgb(251,171,44)" rx="2" ry="2" />
<text  x="143.99" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%)</title><rect x="1088.5" y="1653" width="1.1" height="15.0" fill="rgb(226,27,10)" rx="2" ry="2" />
<text  x="1091.53" y="1663.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (1 samples, 0.03%)</title><rect x="1153.5" y="1717" width="0.3" height="15.0" fill="rgb(247,101,31)" rx="2" ry="2" />
<text  x="1156.47" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="642.1" y="1605" width="0.3" height="15.0" fill="rgb(247,30,39)" rx="2" ry="2" />
<text  x="645.06" y="1615.5" ></text>
</g>
<g >
<title>__start_context (15 samples, 0.47%)</title><rect x="56.9" y="661" width="5.5" height="15.0" fill="rgb(245,172,51)" rx="2" ry="2" />
<text  x="59.86" y="671.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="133.6" y="1477" width="0.4" height="15.0" fill="rgb(220,87,7)" rx="2" ry="2" />
<text  x="136.61" y="1487.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (83 samples, 2.60%)</title><rect x="109.6" y="1717" width="30.7" height="15.0" fill="rgb(215,20,0)" rx="2" ry="2" />
<text  x="112.62" y="1727.5" >cq..</text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%)</title><rect x="60.9" y="373" width="0.4" height="15.0" fill="rgb(226,203,3)" rx="2" ry="2" />
<text  x="63.92" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="87.9" y="469" width="0.3" height="15.0" fill="rgb(236,74,3)" rx="2" ry="2" />
<text  x="90.85" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="73.5" y="165" width="0.3" height="15.0" fill="rgb(229,136,36)" rx="2" ry="2" />
<text  x="76.46" y="175.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (7 samples, 0.22%)</title><rect x="77.5" y="501" width="2.6" height="15.0" fill="rgb(236,68,34)" rx="2" ry="2" />
<text  x="80.52" y="511.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="133.2" y="1381" width="0.4" height="15.0" fill="rgb(229,127,41)" rx="2" ry="2" />
<text  x="136.24" y="1391.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="57.2" y="341" width="0.8" height="15.0" fill="rgb(253,192,49)" rx="2" ry="2" />
<text  x="60.23" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (12 samples, 0.38%)</title><rect x="319.6" y="1589" width="4.4" height="15.0" fill="rgb(225,71,54)" rx="2" ry="2" />
<text  x="322.57" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="52.1" y="389" width="0.3" height="15.0" fill="rgb(211,108,3)" rx="2" ry="2" />
<text  x="55.06" y="399.5" ></text>
</g>
<g >
<title>dht::tri_compare (7 samples, 0.22%)</title><rect x="588.9" y="1637" width="2.6" height="15.0" fill="rgb(206,37,40)" rx="2" ry="2" />
<text  x="591.93" y="1647.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (1 samples, 0.03%)</title><rect x="523.3" y="1637" width="0.3" height="15.0" fill="rgb(235,183,50)" rx="2" ry="2" />
<text  x="526.25" y="1647.5" ></text>
</g>
<g >
<title>schema::rebuild (1 samples, 0.03%)</title><rect x="141.0" y="1461" width="0.4" height="15.0" fill="rgb(243,217,21)" rx="2" ry="2" />
<text  x="143.99" y="1471.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (3 samples, 0.09%)</title><rect x="62.8" y="389" width="1.1" height="15.0" fill="rgb(247,20,52)" rx="2" ry="2" />
<text  x="65.76" y="399.5" ></text>
</g>
<g >
<title>cql3::cf_name::~cf_name (1 samples, 0.03%)</title><rect x="97.8" y="565" width="0.4" height="15.0" fill="rgb(237,144,12)" rx="2" ry="2" />
<text  x="100.82" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%)</title><rect x="133.2" y="1413" width="0.4" height="15.0" fill="rgb(251,124,45)" rx="2" ry="2" />
<text  x="136.24" y="1423.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%)</title><rect x="76.4" y="373" width="0.4" height="15.0" fill="rgb(252,144,35)" rx="2" ry="2" />
<text  x="79.42" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="121.8" y="1477" width="0.4" height="15.0" fill="rgb(252,7,18)" rx="2" ry="2" />
<text  x="124.80" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%)</title><rect x="689.7" y="1717" width="1.4" height="15.0" fill="rgb(219,148,48)" rx="2" ry="2" />
<text  x="692.66" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (12 samples, 0.38%)</title><rect x="382.3" y="1477" width="4.4" height="15.0" fill="rgb(240,192,42)" rx="2" ry="2" />
<text  x="385.30" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (23 samples, 0.72%)</title><rect x="87.9" y="581" width="8.4" height="15.0" fill="rgb(206,197,38)" rx="2" ry="2" />
<text  x="90.85" y="591.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="1024.0" y="1541" width="0.7" height="15.0" fill="rgb(242,10,4)" rx="2" ry="2" />
<text  x="1026.96" y="1551.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_service_level_statement, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::list_service_level_statement&gt;, void&gt; (1 samples, 0.03%)</title><rect x="49.1" y="421" width="0.4" height="15.0" fill="rgb(207,111,3)" rx="2" ry="2" />
<text  x="52.11" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::~vector (1 samples, 0.03%)</title><rect x="90.1" y="517" width="0.3" height="15.0" fill="rgb(240,104,20)" rx="2" ry="2" />
<text  x="93.07" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%)</title><rect x="58.3" y="405" width="0.4" height="15.0" fill="rgb(222,65,0)" rx="2" ry="2" />
<text  x="61.34" y="415.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (21 samples, 0.66%)</title><rect x="62.4" y="661" width="7.7" height="15.0" fill="rgb(233,144,26)" rx="2" ry="2" />
<text  x="65.40" y="671.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%)</title><rect x="531.7" y="1653" width="0.4" height="15.0" fill="rgb(248,4,0)" rx="2" ry="2" />
<text  x="534.74" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="44.7" y="277" width="0.4" height="15.0" fill="rgb(252,35,28)" rx="2" ry="2" />
<text  x="47.68" y="287.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%)</title><rect x="88.2" y="517" width="0.8" height="15.0" fill="rgb(228,166,44)" rx="2" ry="2" />
<text  x="91.22" y="527.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (2 samples, 0.06%)</title><rect x="717.0" y="1717" width="0.7" height="15.0" fill="rgb(226,99,18)" rx="2" ry="2" />
<text  x="719.97" y="1727.5" ></text>
</g>
<g >
<title>db::filter_for_query (2 samples, 0.06%)</title><rect x="946.1" y="1621" width="0.7" height="15.0" fill="rgb(225,137,35)" rx="2" ry="2" />
<text  x="949.10" y="1631.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (4 samples, 0.13%)</title><rect x="111.1" y="1541" width="1.5" height="15.0" fill="rgb(227,159,53)" rx="2" ry="2" />
<text  x="114.10" y="1551.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="137.3" y="1557" width="0.4" height="15.0" fill="rgb(221,78,47)" rx="2" ry="2" />
<text  x="140.30" y="1567.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::raw::modification_statement*, std::default_delete&lt;cql3::statements::raw::modification_statement&gt; &gt; (1 samples, 0.03%)</title><rect x="94.5" y="501" width="0.4" height="15.0" fill="rgb(216,14,29)" rx="2" ry="2" />
<text  x="97.50" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="133.2" y="1509" width="0.4" height="15.0" fill="rgb(249,36,1)" rx="2" ry="2" />
<text  x="136.24" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.03%)</title><rect x="28.8" y="229" width="0.4" height="15.0" fill="rgb(238,61,38)" rx="2" ry="2" />
<text  x="31.82" y="239.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%)</title><rect x="864.6" y="1589" width="0.3" height="15.0" fill="rgb(248,30,9)" rx="2" ry="2" />
<text  x="867.56" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.03%)</title><rect x="916.2" y="1685" width="0.4" height="15.0" fill="rgb(218,187,22)" rx="2" ry="2" />
<text  x="919.22" y="1695.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.03%)</title><rect x="183.4" y="1605" width="0.4" height="15.0" fill="rgb(244,151,5)" rx="2" ry="2" />
<text  x="186.42" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (231 samples, 7.22%)</title><rect x="11.1" y="789" width="85.2" height="15.0" fill="rgb(208,225,32)" rx="2" ry="2" />
<text  x="14.11" y="799.5" >[unknown]</text>
</g>
<g >
<title>reader_permit::mark_used (2 samples, 0.06%)</title><rect x="220.3" y="1733" width="0.8" height="15.0" fill="rgb(205,143,47)" rx="2" ry="2" />
<text  x="223.32" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="421.0" y="1669" width="0.4" height="15.0" fill="rgb(210,209,23)" rx="2" ry="2" />
<text  x="424.04" y="1679.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%)</title><rect x="98.9" y="853" width="0.4" height="15.0" fill="rgb(218,194,28)" rx="2" ry="2" />
<text  x="101.92" y="863.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="55.0" y="229" width="0.4" height="15.0" fill="rgb(232,151,6)" rx="2" ry="2" />
<text  x="58.02" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (11 samples, 0.34%)</title><rect x="66.1" y="437" width="4.0" height="15.0" fill="rgb(229,183,10)" rx="2" ry="2" />
<text  x="69.09" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="132.9" y="1477" width="0.3" height="15.0" fill="rgb(208,92,12)" rx="2" ry="2" />
<text  x="135.87" y="1487.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.03%)</title><rect x="1055.3" y="1589" width="0.4" height="15.0" fill="rgb(242,51,24)" rx="2" ry="2" />
<text  x="1058.32" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%)</title><rect x="118.1" y="1429" width="0.4" height="15.0" fill="rgb(248,142,46)" rx="2" ry="2" />
<text  x="121.11" y="1439.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (3 samples, 0.09%)</title><rect x="1109.9" y="1557" width="1.1" height="15.0" fill="rgb(241,117,8)" rx="2" ry="2" />
<text  x="1112.93" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="71.3" y="325" width="0.3" height="15.0" fill="rgb(216,8,23)" rx="2" ry="2" />
<text  x="74.25" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%)</title><rect x="28.4" y="229" width="0.4" height="15.0" fill="rgb(245,204,14)" rx="2" ry="2" />
<text  x="31.45" y="239.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%)</title><rect x="107.4" y="1669" width="0.4" height="15.0" fill="rgb(219,4,8)" rx="2" ry="2" />
<text  x="110.41" y="1679.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (13 samples, 0.41%)</title><rect x="779.7" y="1653" width="4.8" height="15.0" fill="rgb(245,134,43)" rx="2" ry="2" />
<text  x="782.69" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="133.2" y="1589" width="0.4" height="15.0" fill="rgb(216,2,19)" rx="2" ry="2" />
<text  x="136.24" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1461" width="88.6" height="15.0" fill="rgb(245,118,43)" rx="2" ry="2" />
<text  x="14.11" y="1471.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.13%)</title><rect x="21.8" y="181" width="1.5" height="15.0" fill="rgb(242,44,40)" rx="2" ry="2" />
<text  x="24.81" y="191.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="42.1" y="197" width="0.4" height="15.0" fill="rgb(227,61,53)" rx="2" ry="2" />
<text  x="45.10" y="207.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (7 samples, 0.22%)</title><rect x="400.8" y="1589" width="2.5" height="15.0" fill="rgb(229,68,26)" rx="2" ry="2" />
<text  x="403.75" y="1599.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.03%)</title><rect x="36.2" y="245" width="0.4" height="15.0" fill="rgb(213,6,43)" rx="2" ry="2" />
<text  x="39.20" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (1 samples, 0.03%)</title><rect x="915.8" y="1669" width="0.4" height="15.0" fill="rgb(235,219,37)" rx="2" ry="2" />
<text  x="918.85" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="58.0" y="389" width="0.3" height="15.0" fill="rgb(227,18,6)" rx="2" ry="2" />
<text  x="60.97" y="399.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%)</title><rect x="601.5" y="1621" width="1.5" height="15.0" fill="rgb(216,108,23)" rx="2" ry="2" />
<text  x="604.48" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="135.8" y="1509" width="0.4" height="15.0" fill="rgb(236,114,10)" rx="2" ry="2" />
<text  x="138.82" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (42 samples, 1.31%)</title><rect x="883.4" y="1669" width="15.5" height="15.0" fill="rgb(236,105,0)" rx="2" ry="2" />
<text  x="886.38" y="1679.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (16 samples, 0.50%)</title><rect x="587.5" y="1653" width="5.9" height="15.0" fill="rgb(223,77,22)" rx="2" ry="2" />
<text  x="590.45" y="1663.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (21 samples, 0.66%)</title><rect x="299.6" y="1637" width="7.8" height="15.0" fill="rgb(211,2,1)" rx="2" ry="2" />
<text  x="302.65" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (60 samples, 1.88%)</title><rect x="109.6" y="1589" width="22.2" height="15.0" fill="rgb(232,186,24)" rx="2" ry="2" />
<text  x="112.62" y="1599.5" >c..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="133.6" y="1413" width="0.4" height="15.0" fill="rgb(246,196,11)" rx="2" ry="2" />
<text  x="136.61" y="1423.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (1 samples, 0.03%)</title><rect x="107.4" y="1733" width="0.4" height="15.0" fill="rgb(214,86,22)" rx="2" ry="2" />
<text  x="110.41" y="1743.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (8 samples, 0.25%)</title><rect x="913.3" y="1685" width="2.9" height="15.0" fill="rgb(206,187,53)" rx="2" ry="2" />
<text  x="916.26" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt; &gt;::_M_deleter (1 samples, 0.03%)</title><rect x="62.0" y="357" width="0.4" height="15.0" fill="rgb(217,120,12)" rx="2" ry="2" />
<text  x="65.03" y="367.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.03%)</title><rect x="984.8" y="1557" width="0.4" height="15.0" fill="rgb(254,190,38)" rx="2" ry="2" />
<text  x="987.85" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%)</title><rect x="249.1" y="1669" width="1.5" height="15.0" fill="rgb(238,97,6)" rx="2" ry="2" />
<text  x="252.10" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%)</title><rect x="68.7" y="389" width="0.7" height="15.0" fill="rgb(208,71,39)" rx="2" ry="2" />
<text  x="71.67" y="399.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.03%)</title><rect x="860.1" y="1573" width="0.4" height="15.0" fill="rgb(221,112,24)" rx="2" ry="2" />
<text  x="863.13" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="57.2" y="293" width="0.8" height="15.0" fill="rgb(231,10,1)" rx="2" ry="2" />
<text  x="60.23" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%)</title><rect x="637.3" y="1637" width="0.3" height="15.0" fill="rgb(234,7,6)" rx="2" ry="2" />
<text  x="640.27" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (9 samples, 0.28%)</title><rect x="45.1" y="389" width="3.3" height="15.0" fill="rgb(234,224,32)" rx="2" ry="2" />
<text  x="48.05" y="399.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1285" width="88.6" height="15.0" fill="rgb(251,134,26)" rx="2" ry="2" />
<text  x="14.11" y="1295.5" >[unknown]</text>
</g>
<g >
<title>database::create_keyspace (1 samples, 0.03%)</title><rect x="182.7" y="1621" width="0.4" height="15.0" fill="rgb(222,49,12)" rx="2" ry="2" />
<text  x="185.68" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::_M_ptr (1 samples, 0.03%)</title><rect x="93.4" y="533" width="0.4" height="15.0" fill="rgb(211,181,39)" rx="2" ry="2" />
<text  x="96.39" y="543.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (2 samples, 0.06%)</title><rect x="107.8" y="1749" width="0.7" height="15.0" fill="rgb(248,196,2)" rx="2" ry="2" />
<text  x="110.78" y="1759.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.03%)</title><rect x="104.1" y="1637" width="0.4" height="15.0" fill="rgb(252,176,37)" rx="2" ry="2" />
<text  x="107.09" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="46.5" y="229" width="0.8" height="15.0" fill="rgb(210,87,11)" rx="2" ry="2" />
<text  x="49.53" y="239.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1765" width="88.6" height="15.0" fill="rgb(208,153,8)" rx="2" ry="2" />
<text  x="14.11" y="1775.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%)</title><rect x="87.9" y="517" width="0.3" height="15.0" fill="rgb(231,125,40)" rx="2" ry="2" />
<text  x="90.85" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.03%)</title><rect x="605.2" y="1637" width="0.3" height="15.0" fill="rgb(240,50,39)" rx="2" ry="2" />
<text  x="608.17" y="1647.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.03%)</title><rect x="223.6" y="1717" width="0.4" height="15.0" fill="rgb(210,158,42)" rx="2" ry="2" />
<text  x="226.64" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="128.4" y="1477" width="0.8" height="15.0" fill="rgb(211,217,0)" rx="2" ry="2" />
<text  x="131.44" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%)</title><rect x="69.8" y="405" width="0.3" height="15.0" fill="rgb(225,195,26)" rx="2" ry="2" />
<text  x="72.77" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (1 samples, 0.03%)</title><rect x="1116.6" y="1765" width="0.3" height="15.0" fill="rgb(241,217,53)" rx="2" ry="2" />
<text  x="1119.57" y="1775.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.03%)</title><rect x="557.9" y="1669" width="0.4" height="15.0" fill="rgb(205,95,48)" rx="2" ry="2" />
<text  x="560.94" y="1679.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="46.2" y="325" width="0.3" height="15.0" fill="rgb(228,124,49)" rx="2" ry="2" />
<text  x="49.16" y="335.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%)</title><rect x="412.2" y="1653" width="0.4" height="15.0" fill="rgb(245,135,15)" rx="2" ry="2" />
<text  x="415.19" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%)</title><rect x="45.4" y="325" width="0.4" height="15.0" fill="rgb(219,209,22)" rx="2" ry="2" />
<text  x="48.42" y="335.5" ></text>
</g>
<g >
<title>[unknown] (239 samples, 7.47%)</title><rect x="11.1" y="965" width="88.2" height="15.0" fill="rgb(238,84,18)" rx="2" ry="2" />
<text  x="14.11" y="975.5" >[unknown]</text>
</g>
<g >
<title>service::storage_proxy::query_singular (380 samples, 11.88%)</title><rect x="937.2" y="1637" width="140.3" height="15.0" fill="rgb(214,193,29)" rx="2" ry="2" />
<text  x="940.25" y="1647.5" >service::storage_..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.09%)</title><rect x="445.4" y="1605" width="1.1" height="15.0" fill="rgb(228,36,13)" rx="2" ry="2" />
<text  x="448.40" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (5 samples, 0.16%)</title><rect x="1153.8" y="1781" width="1.9" height="15.0" fill="rgb(229,164,52)" rx="2" ry="2" />
<text  x="1156.84" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (1 samples, 0.03%)</title><rect x="109.3" y="1637" width="0.3" height="15.0" fill="rgb(245,27,46)" rx="2" ry="2" />
<text  x="112.26" y="1647.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (4 samples, 0.13%)</title><rect x="482.7" y="1669" width="1.4" height="15.0" fill="rgb(208,73,9)" rx="2" ry="2" />
<text  x="485.66" y="1679.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="714.0" y="1749" width="0.4" height="15.0" fill="rgb(220,138,54)" rx="2" ry="2" />
<text  x="717.02" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (5 samples, 0.16%)</title><rect x="126.6" y="1557" width="1.8" height="15.0" fill="rgb(207,161,24)" rx="2" ry="2" />
<text  x="129.60" y="1567.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (5 samples, 0.16%)</title><rect x="697.8" y="1749" width="1.8" height="15.0" fill="rgb(234,93,31)" rx="2" ry="2" />
<text  x="700.78" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (4 samples, 0.13%)</title><rect x="33.2" y="309" width="1.5" height="15.0" fill="rgb(205,28,7)" rx="2" ry="2" />
<text  x="36.25" y="319.5" ></text>
</g>
<g >
<title>boost::variant&lt;ser::live_cell_view, ser::expiring_cell_view, ser::dead_cell_view, ser::counter_cell_view, ser::unknown_variant_type&gt;::apply_visitor&lt;(anonymous namespace)::read_atomic_cell (1 samples, 0.03%)</title><rect x="1100.7" y="1605" width="0.4" height="15.0" fill="rgb(210,175,38)" rx="2" ry="2" />
<text  x="1103.71" y="1615.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (1 samples, 0.03%)</title><rect x="61.3" y="373" width="0.4" height="15.0" fill="rgb(235,136,50)" rx="2" ry="2" />
<text  x="64.29" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="70.9" y="453" width="0.4" height="15.0" fill="rgb(250,182,15)" rx="2" ry="2" />
<text  x="73.88" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.44%)</title><rect x="74.9" y="709" width="5.2" height="15.0" fill="rgb(235,122,52)" rx="2" ry="2" />
<text  x="77.94" y="719.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="104.5" y="1605" width="0.3" height="15.0" fill="rgb(240,74,18)" rx="2" ry="2" />
<text  x="107.46" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="925.8" y="1669" width="0.4" height="15.0" fill="rgb(235,90,15)" rx="2" ry="2" />
<text  x="928.81" y="1679.5" ></text>
</g>
<g >
<title>cql3::constants::value::get (1 samples, 0.03%)</title><rect x="859.8" y="1573" width="0.3" height="15.0" fill="rgb(208,113,30)" rx="2" ry="2" />
<text  x="862.76" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.16%)</title><rect x="129.2" y="1541" width="1.8" height="15.0" fill="rgb(205,22,18)" rx="2" ry="2" />
<text  x="132.18" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.09%)</title><rect x="72.7" y="421" width="1.1" height="15.0" fill="rgb(232,196,13)" rx="2" ry="2" />
<text  x="75.73" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="335.1" y="1573" width="0.3" height="15.0" fill="rgb(249,134,38)" rx="2" ry="2" />
<text  x="338.07" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%)</title><rect x="133.6" y="1589" width="0.4" height="15.0" fill="rgb(208,53,54)" rx="2" ry="2" />
<text  x="136.61" y="1599.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (3 samples, 0.09%)</title><rect x="183.1" y="1717" width="1.1" height="15.0" fill="rgb(253,153,21)" rx="2" ry="2" />
<text  x="186.05" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="96.7" y="437" width="0.4" height="15.0" fill="rgb(222,93,46)" rx="2" ry="2" />
<text  x="99.71" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.16%)</title><rect x="123.3" y="1429" width="1.8" height="15.0" fill="rgb(229,164,48)" rx="2" ry="2" />
<text  x="126.28" y="1439.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (2 samples, 0.06%)</title><rect x="1154.9" y="1733" width="0.8" height="15.0" fill="rgb(215,132,35)" rx="2" ry="2" />
<text  x="1157.95" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="72.0" y="357" width="0.4" height="15.0" fill="rgb(253,27,16)" rx="2" ry="2" />
<text  x="74.99" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.16%)</title><rect x="891.5" y="1573" width="1.8" height="15.0" fill="rgb(205,154,53)" rx="2" ry="2" />
<text  x="894.49" y="1583.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (14 samples, 0.44%)</title><rect x="74.9" y="629" width="5.2" height="15.0" fill="rgb(244,76,46)" rx="2" ry="2" />
<text  x="77.94" y="639.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.03%)</title><rect x="863.8" y="1621" width="0.4" height="15.0" fill="rgb(213,157,49)" rx="2" ry="2" />
<text  x="866.82" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (14 samples, 0.44%)</title><rect x="74.9" y="533" width="5.2" height="15.0" fill="rgb(246,76,47)" rx="2" ry="2" />
<text  x="77.94" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="344.7" y="1541" width="0.7" height="15.0" fill="rgb(208,149,20)" rx="2" ry="2" />
<text  x="347.67" y="1551.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="914.7" y="1653" width="0.4" height="15.0" fill="rgb(253,74,48)" rx="2" ry="2" />
<text  x="917.74" y="1663.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (29 samples, 0.91%)</title><rect x="773.8" y="1685" width="10.7" height="15.0" fill="rgb(209,137,26)" rx="2" ry="2" />
<text  x="776.79" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="136.2" y="1525" width="0.4" height="15.0" fill="rgb(254,147,34)" rx="2" ry="2" />
<text  x="139.19" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="1016.9" y="1477" width="0.4" height="15.0" fill="rgb(208,40,38)" rx="2" ry="2" />
<text  x="1019.95" y="1487.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (7 samples, 0.22%)</title><rect x="525.5" y="1621" width="2.5" height="15.0" fill="rgb(244,130,26)" rx="2" ry="2" />
<text  x="528.47" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%)</title><rect x="133.6" y="1557" width="0.4" height="15.0" fill="rgb(217,47,31)" rx="2" ry="2" />
<text  x="136.61" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="115.2" y="1477" width="0.3" height="15.0" fill="rgb(210,15,47)" rx="2" ry="2" />
<text  x="118.16" y="1487.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (87 samples, 2.72%)</title><rect x="993.3" y="1557" width="32.1" height="15.0" fill="rgb(242,37,25)" rx="2" ry="2" />
<text  x="996.33" y="1567.5" >se..</text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="128.4" y="1397" width="0.4" height="15.0" fill="rgb(250,81,4)" rx="2" ry="2" />
<text  x="131.44" y="1407.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (14 samples, 0.44%)</title><rect x="74.9" y="597" width="5.2" height="15.0" fill="rgb(254,22,12)" rx="2" ry="2" />
<text  x="77.94" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="46.5" y="293" width="0.8" height="15.0" fill="rgb(238,118,2)" rx="2" ry="2" />
<text  x="49.53" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (1 samples, 0.03%)</title><rect x="109.3" y="1605" width="0.3" height="15.0" fill="rgb(239,194,44)" rx="2" ry="2" />
<text  x="112.26" y="1615.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="61.7" y="373" width="0.3" height="15.0" fill="rgb(216,46,23)" rx="2" ry="2" />
<text  x="64.66" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%)</title><rect x="1113.3" y="1765" width="0.3" height="15.0" fill="rgb(243,27,21)" rx="2" ry="2" />
<text  x="1116.25" y="1775.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="261.3" y="1701" width="0.3" height="15.0" fill="rgb(215,29,3)" rx="2" ry="2" />
<text  x="264.28" y="1711.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (150 samples, 4.69%)</title><rect x="576.0" y="1669" width="55.4" height="15.0" fill="rgb(217,137,43)" rx="2" ry="2" />
<text  x="579.02" y="1679.5" >memta..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="71.6" y="405" width="0.4" height="15.0" fill="rgb(238,194,52)" rx="2" ry="2" />
<text  x="74.62" y="415.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (9 samples, 0.28%)</title><rect x="100.8" y="1669" width="3.3" height="15.0" fill="rgb(220,61,41)" rx="2" ry="2" />
<text  x="103.77" y="1679.5" ></text>
</g>
<g >
<title>database::database (1 samples, 0.03%)</title><rect x="153.2" y="1685" width="0.3" height="15.0" fill="rgb(238,61,29)" rx="2" ry="2" />
<text  x="156.16" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (35 samples, 1.09%)</title><rect x="24.8" y="357" width="12.9" height="15.0" fill="rgb(248,222,47)" rx="2" ry="2" />
<text  x="27.76" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_startIndex (1 samples, 0.03%)</title><rect x="62.8" y="341" width="0.3" height="15.0" fill="rgb(227,20,26)" rx="2" ry="2" />
<text  x="65.76" y="351.5" ></text>
</g>
<g >
<title>sstables::sstable_writer::~sstable_writer (1 samples, 0.03%)</title><rect x="152.8" y="1797" width="0.4" height="15.0" fill="rgb(210,28,8)" rx="2" ry="2" />
<text  x="155.80" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1573" width="88.6" height="15.0" fill="rgb(229,38,11)" rx="2" ry="2" />
<text  x="14.11" y="1583.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="78.6" y="293" width="0.4" height="15.0" fill="rgb(246,82,3)" rx="2" ry="2" />
<text  x="81.63" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="63.9" y="293" width="0.3" height="15.0" fill="rgb(253,6,54)" rx="2" ry="2" />
<text  x="66.87" y="303.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%)</title><rect x="223.6" y="1685" width="0.4" height="15.0" fill="rgb(237,201,22)" rx="2" ry="2" />
<text  x="226.64" y="1695.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="73.8" y="245" width="0.4" height="15.0" fill="rgb(216,181,24)" rx="2" ry="2" />
<text  x="76.83" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%)</title><rect x="99.3" y="741" width="0.4" height="15.0" fill="rgb(212,45,39)" rx="2" ry="2" />
<text  x="102.29" y="751.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (1 samples, 0.03%)</title><rect x="62.4" y="405" width="0.4" height="15.0" fill="rgb(236,162,23)" rx="2" ry="2" />
<text  x="65.40" y="415.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="121.8" y="1493" width="0.4" height="15.0" fill="rgb(209,83,45)" rx="2" ry="2" />
<text  x="124.80" y="1503.5" ></text>
</g>
<g >
<title>db::system_keyspace::load_tokens (1 samples, 0.03%)</title><rect x="151.3" y="1717" width="0.4" height="15.0" fill="rgb(242,17,35)" rx="2" ry="2" />
<text  x="154.32" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="45.1" y="245" width="0.3" height="15.0" fill="rgb(217,218,38)" rx="2" ry="2" />
<text  x="48.05" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.03%)</title><rect x="1155.7" y="1781" width="0.4" height="15.0" fill="rgb(220,6,36)" rx="2" ry="2" />
<text  x="1158.68" y="1791.5" ></text>
</g>
<g >
<title>cql3::sets::adder::do_add (1 samples, 0.03%)</title><rect x="862.7" y="1589" width="0.4" height="15.0" fill="rgb(205,177,12)" rx="2" ry="2" />
<text  x="865.71" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="617.0" y="1605" width="0.7" height="15.0" fill="rgb(211,95,16)" rx="2" ry="2" />
<text  x="619.97" y="1615.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="102.2" y="1573" width="0.4" height="15.0" fill="rgb(237,98,32)" rx="2" ry="2" />
<text  x="105.25" y="1583.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::run_and_dispose (1 samples, 0.03%)</title><rect x="1113.6" y="1765" width="0.4" height="15.0" fill="rgb(242,181,25)" rx="2" ry="2" />
<text  x="1116.62" y="1775.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (39 samples, 1.22%)</title><rect x="1008.1" y="1525" width="14.4" height="15.0" fill="rgb(210,62,50)" rx="2" ry="2" />
<text  x="1011.09" y="1535.5" ></text>
</g>
<g >
<title>TLS wrapper function for logalloc::shard_segment_pool (1 samples, 0.03%)</title><rect x="140.6" y="1765" width="0.4" height="15.0" fill="rgb(254,8,28)" rx="2" ry="2" />
<text  x="143.62" y="1775.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (2 samples, 0.06%)</title><rect x="1110.3" y="1541" width="0.7" height="15.0" fill="rgb(217,50,32)" rx="2" ry="2" />
<text  x="1113.30" y="1551.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (3 samples, 0.09%)</title><rect x="1017.7" y="1477" width="1.1" height="15.0" fill="rgb(213,54,14)" rx="2" ry="2" />
<text  x="1020.69" y="1487.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::expr::expression&gt;::new_allocator (1 samples, 0.03%)</title><rect x="135.1" y="1237" width="0.4" height="15.0" fill="rgb(235,64,19)" rx="2" ry="2" />
<text  x="138.08" y="1247.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%)</title><rect x="138.4" y="1557" width="0.4" height="15.0" fill="rgb(223,143,34)" rx="2" ry="2" />
<text  x="141.41" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.03%)</title><rect x="35.1" y="293" width="0.4" height="15.0" fill="rgb(218,146,6)" rx="2" ry="2" />
<text  x="38.09" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="112.2" y="1461" width="0.4" height="15.0" fill="rgb(206,23,36)" rx="2" ry="2" />
<text  x="115.21" y="1471.5" ></text>
</g>
<g >
<title>std::move&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%)</title><rect x="96.7" y="405" width="0.4" height="15.0" fill="rgb(235,111,48)" rx="2" ry="2" />
<text  x="99.71" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="46.5" y="197" width="0.8" height="15.0" fill="rgb(210,193,35)" rx="2" ry="2" />
<text  x="49.53" y="207.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%)</title><rect x="52.8" y="421" width="0.7" height="15.0" fill="rgb(209,203,36)" rx="2" ry="2" />
<text  x="55.80" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (8 samples, 0.25%)</title><rect x="117.7" y="1477" width="3.0" height="15.0" fill="rgb(247,206,49)" rx="2" ry="2" />
<text  x="120.74" y="1487.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="105.9" y="1829" width="0.4" height="15.0" fill="rgb(224,178,8)" rx="2" ry="2" />
<text  x="108.93" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="132.9" y="1509" width="0.3" height="15.0" fill="rgb(217,101,29)" rx="2" ry="2" />
<text  x="135.87" y="1519.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="179.7" y="1749" width="0.8" height="15.0" fill="rgb(207,170,48)" rx="2" ry="2" />
<text  x="182.73" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (620 samples, 19.39%)</title><rect x="869.0" y="1717" width="228.8" height="15.0" fill="rgb(206,38,39)" rx="2" ry="2" />
<text  x="871.99" y="1727.5" >seastar::noncopyable_function&lt;..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%)</title><rect x="57.2" y="277" width="0.8" height="15.0" fill="rgb(237,58,14)" rx="2" ry="2" />
<text  x="60.23" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (45 samples, 1.41%)</title><rect x="516.6" y="1669" width="16.6" height="15.0" fill="rgb(208,146,33)" rx="2" ry="2" />
<text  x="519.61" y="1679.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (4 samples, 0.13%)</title><rect x="15.2" y="389" width="1.4" height="15.0" fill="rgb(213,148,22)" rx="2" ry="2" />
<text  x="18.17" y="399.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="67.9" y="261" width="0.4" height="15.0" fill="rgb(213,66,4)" rx="2" ry="2" />
<text  x="70.93" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~_Vector_base (1 samples, 0.03%)</title><rect x="89.3" y="485" width="0.4" height="15.0" fill="rgb(215,226,26)" rx="2" ry="2" />
<text  x="92.33" y="495.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="152.8" y="1845" width="0.4" height="15.0" fill="rgb(249,90,54)" rx="2" ry="2" />
<text  x="155.80" y="1855.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="53.5" y="357" width="0.4" height="15.0" fill="rgb(250,91,2)" rx="2" ry="2" />
<text  x="56.54" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (6 samples, 0.19%)</title><rect x="112.9" y="1509" width="2.3" height="15.0" fill="rgb(218,214,0)" rx="2" ry="2" />
<text  x="115.95" y="1519.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="45.8" y="325" width="0.4" height="15.0" fill="rgb(232,10,8)" rx="2" ry="2" />
<text  x="48.79" y="335.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="55.8" y="277" width="0.3" height="15.0" fill="rgb(220,156,12)" rx="2" ry="2" />
<text  x="58.75" y="287.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="74.2" y="421" width="0.4" height="15.0" fill="rgb(223,145,4)" rx="2" ry="2" />
<text  x="77.20" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.03%)</title><rect x="109.3" y="1701" width="0.3" height="15.0" fill="rgb(231,13,0)" rx="2" ry="2" />
<text  x="112.26" y="1711.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%)</title><rect x="523.6" y="1637" width="1.9" height="15.0" fill="rgb(221,63,32)" rx="2" ry="2" />
<text  x="526.62" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="44.7" y="341" width="0.4" height="15.0" fill="rgb(246,36,11)" rx="2" ry="2" />
<text  x="47.68" y="351.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (10 samples, 0.31%)</title><rect x="484.1" y="1669" width="3.7" height="15.0" fill="rgb(218,56,13)" rx="2" ry="2" />
<text  x="487.14" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="52.1" y="421" width="0.3" height="15.0" fill="rgb(224,201,47)" rx="2" ry="2" />
<text  x="55.06" y="431.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.03%)</title><rect x="151.3" y="1733" width="0.4" height="15.0" fill="rgb(251,187,23)" rx="2" ry="2" />
<text  x="154.32" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="52.1" y="293" width="0.3" height="15.0" fill="rgb(244,76,30)" rx="2" ry="2" />
<text  x="55.06" y="303.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (1 samples, 0.03%)</title><rect x="108.1" y="1717" width="0.4" height="15.0" fill="rgb(236,85,38)" rx="2" ry="2" />
<text  x="111.15" y="1727.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (10 samples, 0.31%)</title><rect x="1168.6" y="1877" width="3.7" height="15.0" fill="rgb(249,0,3)" rx="2" ry="2" />
<text  x="1171.60" y="1887.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.03%)</title><rect x="74.2" y="437" width="0.4" height="15.0" fill="rgb(223,14,50)" rx="2" ry="2" />
<text  x="77.20" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (2 samples, 0.06%)</title><rect x="75.3" y="405" width="0.7" height="15.0" fill="rgb(249,53,6)" rx="2" ry="2" />
<text  x="78.31" y="415.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1477" width="88.6" height="15.0" fill="rgb(217,10,33)" rx="2" ry="2" />
<text  x="14.11" y="1487.5" >[unknown]</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="63.9" y="453" width="0.3" height="15.0" fill="rgb(251,66,3)" rx="2" ry="2" />
<text  x="66.87" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (2 samples, 0.06%)</title><rect x="89.0" y="501" width="0.7" height="15.0" fill="rgb(239,61,4)" rx="2" ry="2" />
<text  x="91.96" y="511.5" ></text>
</g>
<g >
<title>sstables::sstable_writer::sstable_writer (1 samples, 0.03%)</title><rect x="151.7" y="1829" width="0.4" height="15.0" fill="rgb(246,69,53)" rx="2" ry="2" />
<text  x="154.69" y="1839.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (1 samples, 0.03%)</title><rect x="651.3" y="1717" width="0.4" height="15.0" fill="rgb(239,13,27)" rx="2" ry="2" />
<text  x="654.29" y="1727.5" ></text>
</g>
<g >
<title>query_result_builder::consume (80 samples, 2.50%)</title><rect x="453.1" y="1669" width="29.6" height="15.0" fill="rgb(249,157,20)" rx="2" ry="2" />
<text  x="456.15" y="1679.5" >qu..</text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (61 samples, 1.91%)</title><rect x="805.2" y="1653" width="22.5" height="15.0" fill="rgb(253,210,9)" rx="2" ry="2" />
<text  x="808.15" y="1663.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="55.8" y="341" width="0.3" height="15.0" fill="rgb(239,152,15)" rx="2" ry="2" />
<text  x="58.75" y="351.5" ></text>
</g>
<g >
<title>auth::get_permissions (50 samples, 1.56%)</title><rect x="806.6" y="1637" width="18.5" height="15.0" fill="rgb(225,22,5)" rx="2" ry="2" />
<text  x="809.63" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (2 samples, 0.06%)</title><rect x="46.5" y="149" width="0.8" height="15.0" fill="rgb(236,155,23)" rx="2" ry="2" />
<text  x="49.53" y="159.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (5 samples, 0.16%)</title><rect x="591.5" y="1637" width="1.9" height="15.0" fill="rgb(215,17,24)" rx="2" ry="2" />
<text  x="594.51" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (5 samples, 0.16%)</title><rect x="14.8" y="469" width="1.8" height="15.0" fill="rgb(219,60,45)" rx="2" ry="2" />
<text  x="17.80" y="479.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="105.2" y="1813" width="0.4" height="15.0" fill="rgb(232,56,22)" rx="2" ry="2" />
<text  x="108.20" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="42.8" y="293" width="0.4" height="15.0" fill="rgb(212,6,15)" rx="2" ry="2" />
<text  x="45.84" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="54.3" y="245" width="0.3" height="15.0" fill="rgb(245,120,15)" rx="2" ry="2" />
<text  x="57.28" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="66.1" y="245" width="0.4" height="15.0" fill="rgb(233,116,36)" rx="2" ry="2" />
<text  x="69.09" y="255.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (15 samples, 0.47%)</title><rect x="116.6" y="1525" width="5.6" height="15.0" fill="rgb(235,72,6)" rx="2" ry="2" />
<text  x="119.64" y="1535.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.03%)</title><rect x="1102.6" y="1589" width="0.3" height="15.0" fill="rgb(219,147,1)" rx="2" ry="2" />
<text  x="1105.55" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="133.2" y="1397" width="0.4" height="15.0" fill="rgb(211,109,4)" rx="2" ry="2" />
<text  x="136.24" y="1407.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.03%)</title><rect x="348.0" y="1541" width="0.4" height="15.0" fill="rgb(251,29,38)" rx="2" ry="2" />
<text  x="350.99" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%)</title><rect x="130.7" y="1493" width="0.3" height="15.0" fill="rgb(210,61,23)" rx="2" ry="2" />
<text  x="133.66" y="1503.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (6 samples, 0.19%)</title><rect x="11.5" y="533" width="2.2" height="15.0" fill="rgb(212,5,21)" rx="2" ry="2" />
<text  x="14.48" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="96.7" y="517" width="0.4" height="15.0" fill="rgb(223,183,50)" rx="2" ry="2" />
<text  x="99.71" y="527.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (7 samples, 0.22%)</title><rect x="122.5" y="1509" width="2.6" height="15.0" fill="rgb(227,207,46)" rx="2" ry="2" />
<text  x="125.54" y="1519.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%)</title><rect x="323.6" y="1573" width="0.4" height="15.0" fill="rgb(213,127,45)" rx="2" ry="2" />
<text  x="326.63" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1029" width="88.6" height="15.0" fill="rgb(250,140,53)" rx="2" ry="2" />
<text  x="14.11" y="1039.5" >[unknown]</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%)</title><rect x="62.0" y="389" width="0.4" height="15.0" fill="rgb(240,208,29)" rx="2" ry="2" />
<text  x="65.03" y="399.5" ></text>
</g>
<g >
<title>sstables::mc::make_writer (1 samples, 0.03%)</title><rect x="151.7" y="1813" width="0.4" height="15.0" fill="rgb(242,213,17)" rx="2" ry="2" />
<text  x="154.69" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (238 samples, 7.44%)</title><rect x="11.1" y="917" width="87.8" height="15.0" fill="rgb(214,217,43)" rx="2" ry="2" />
<text  x="14.11" y="927.5" >[unknown]</text>
</g>
<g >
<title>cql3::relation::to_restriction (3 samples, 0.09%)</title><rect x="84.5" y="533" width="1.1" height="15.0" fill="rgb(212,80,5)" rx="2" ry="2" />
<text  x="87.53" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (4 samples, 0.13%)</title><rect x="62.4" y="421" width="1.5" height="15.0" fill="rgb(245,138,51)" rx="2" ry="2" />
<text  x="65.40" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%)</title><rect x="174.2" y="1733" width="0.4" height="15.0" fill="rgb(241,139,2)" rx="2" ry="2" />
<text  x="177.20" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (14 samples, 0.44%)</title><rect x="57.2" y="437" width="5.2" height="15.0" fill="rgb(233,217,31)" rx="2" ry="2" />
<text  x="60.23" y="447.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (1 samples, 0.03%)</title><rect x="182.3" y="1605" width="0.4" height="15.0" fill="rgb(208,47,7)" rx="2" ry="2" />
<text  x="185.31" y="1615.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%)</title><rect x="1136.1" y="1749" width="2.6" height="15.0" fill="rgb(207,160,52)" rx="2" ry="2" />
<text  x="1139.13" y="1759.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.22%)</title><rect x="413.7" y="1701" width="2.5" height="15.0" fill="rgb(247,171,36)" rx="2" ry="2" />
<text  x="416.66" y="1711.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%)</title><rect x="732.5" y="1749" width="0.7" height="15.0" fill="rgb(249,125,21)" rx="2" ry="2" />
<text  x="735.46" y="1759.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="105.2" y="1525" width="0.4" height="15.0" fill="rgb(250,158,21)" rx="2" ry="2" />
<text  x="108.20" y="1535.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.03%)</title><rect x="183.4" y="1621" width="0.4" height="15.0" fill="rgb(223,105,42)" rx="2" ry="2" />
<text  x="186.42" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (4 samples, 0.13%)</title><rect x="88.2" y="533" width="1.5" height="15.0" fill="rgb(217,129,6)" rx="2" ry="2" />
<text  x="91.22" y="543.5" ></text>
</g>
<g >
<title>cql3::sets::setter::execute (1 samples, 0.03%)</title><rect x="862.7" y="1605" width="0.4" height="15.0" fill="rgb(251,69,28)" rx="2" ry="2" />
<text  x="865.71" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%)</title><rect x="843.5" y="1701" width="3.3" height="15.0" fill="rgb(239,211,45)" rx="2" ry="2" />
<text  x="846.53" y="1711.5" ></text>
</g>
<g >
<title>database::find_schema (10 samples, 0.31%)</title><rect x="785.6" y="1685" width="3.7" height="15.0" fill="rgb(254,125,2)" rx="2" ry="2" />
<text  x="788.60" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (5 samples, 0.16%)</title><rect x="42.5" y="405" width="1.8" height="15.0" fill="rgb(237,63,31)" rx="2" ry="2" />
<text  x="45.47" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.03%)</title><rect x="861.2" y="1525" width="0.4" height="15.0" fill="rgb(244,131,6)" rx="2" ry="2" />
<text  x="864.24" y="1535.5" ></text>
</g>
<g >
<title>free (12 samples, 0.38%)</title><rect x="442.1" y="1621" width="4.4" height="15.0" fill="rgb(243,10,51)" rx="2" ry="2" />
<text  x="445.08" y="1631.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (1 samples, 0.03%)</title><rect x="103.7" y="1653" width="0.4" height="15.0" fill="rgb(254,119,54)" rx="2" ry="2" />
<text  x="106.72" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (6 samples, 0.19%)</title><rect x="122.9" y="1477" width="2.2" height="15.0" fill="rgb(229,97,16)" rx="2" ry="2" />
<text  x="125.91" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (19 samples, 0.59%)</title><rect x="17.4" y="341" width="7.0" height="15.0" fill="rgb(228,41,8)" rx="2" ry="2" />
<text  x="20.38" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%)</title><rect x="79.7" y="485" width="0.4" height="15.0" fill="rgb(217,39,19)" rx="2" ry="2" />
<text  x="82.74" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="954.6" y="1621" width="0.4" height="15.0" fill="rgb(250,151,40)" rx="2" ry="2" />
<text  x="957.59" y="1631.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::create_type_statement*, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::_M_head (1 samples, 0.03%)</title><rect x="93.4" y="501" width="0.4" height="15.0" fill="rgb(213,132,22)" rx="2" ry="2" />
<text  x="96.39" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_type (1 samples, 0.03%)</title><rect x="26.6" y="309" width="0.4" height="15.0" fill="rgb(207,64,1)" rx="2" ry="2" />
<text  x="29.60" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;3ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="137.3" y="1221" width="0.4" height="15.0" fill="rgb(245,96,16)" rx="2" ry="2" />
<text  x="140.30" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%)</title><rect x="135.1" y="1285" width="0.4" height="15.0" fill="rgb(216,136,45)" rx="2" ry="2" />
<text  x="138.08" y="1295.5" ></text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (1 samples, 0.03%)</title><rect x="183.8" y="1653" width="0.4" height="15.0" fill="rgb(253,43,25)" rx="2" ry="2" />
<text  x="186.79" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%)</title><rect x="532.5" y="1653" width="0.7" height="15.0" fill="rgb(219,122,32)" rx="2" ry="2" />
<text  x="535.48" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (7 samples, 0.22%)</title><rect x="87.9" y="549" width="2.5" height="15.0" fill="rgb(241,155,51)" rx="2" ry="2" />
<text  x="90.85" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (284 samples, 8.88%)</title><rect x="749.1" y="1765" width="104.8" height="15.0" fill="rgb(251,192,49)" rx="2" ry="2" />
<text  x="752.07" y="1775.5" >seastar::int..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="222.9" y="1733" width="0.4" height="15.0" fill="rgb(252,9,20)" rx="2" ry="2" />
<text  x="225.90" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%)</title><rect x="153.2" y="1733" width="0.3" height="15.0" fill="rgb(249,200,54)" rx="2" ry="2" />
<text  x="156.16" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%)</title><rect x="41.7" y="373" width="0.8" height="15.0" fill="rgb(223,110,31)" rx="2" ry="2" />
<text  x="44.73" y="383.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="129.9" y="1317" width="0.4" height="15.0" fill="rgb(226,122,49)" rx="2" ry="2" />
<text  x="132.92" y="1327.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (2 samples, 0.06%)</title><rect x="107.0" y="1813" width="0.8" height="15.0" fill="rgb(226,196,40)" rx="2" ry="2" />
<text  x="110.04" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%)</title><rect x="127.0" y="1509" width="0.3" height="15.0" fill="rgb(231,145,21)" rx="2" ry="2" />
<text  x="129.97" y="1519.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (266 samples, 8.32%)</title><rect x="416.2" y="1701" width="98.2" height="15.0" fill="rgb(216,61,16)" rx="2" ry="2" />
<text  x="419.25" y="1711.5" >query::cons..</text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (68 samples, 2.13%)</title><rect x="596.3" y="1653" width="25.1" height="15.0" fill="rgb(210,136,27)" rx="2" ry="2" />
<text  x="599.31" y="1663.5" >m..</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (7 samples, 0.22%)</title><rect x="72.4" y="453" width="2.5" height="15.0" fill="rgb(244,30,17)" rx="2" ry="2" />
<text  x="75.36" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="113.3" y="1477" width="0.4" height="15.0" fill="rgb(241,161,43)" rx="2" ry="2" />
<text  x="116.31" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="1093.3" y="1685" width="0.4" height="15.0" fill="rgb(234,13,52)" rx="2" ry="2" />
<text  x="1096.33" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="45.1" y="325" width="0.3" height="15.0" fill="rgb(232,168,37)" rx="2" ry="2" />
<text  x="48.05" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%)</title><rect x="64.2" y="389" width="0.4" height="15.0" fill="rgb(238,134,26)" rx="2" ry="2" />
<text  x="67.24" y="399.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1397" width="88.6" height="15.0" fill="rgb(221,140,15)" rx="2" ry="2" />
<text  x="14.11" y="1407.5" >[unknown]</text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%)</title><rect x="557.6" y="1669" width="0.3" height="15.0" fill="rgb(206,62,5)" rx="2" ry="2" />
<text  x="560.57" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.09%)</title><rect x="58.7" y="405" width="1.1" height="15.0" fill="rgb(231,122,42)" rx="2" ry="2" />
<text  x="61.71" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%)</title><rect x="1022.5" y="1525" width="0.4" height="15.0" fill="rgb(213,65,50)" rx="2" ry="2" />
<text  x="1025.48" y="1535.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%)</title><rect x="722.1" y="1749" width="0.4" height="15.0" fill="rgb(225,6,4)" rx="2" ry="2" />
<text  x="725.13" y="1759.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="88.6" y="373" width="0.4" height="15.0" fill="rgb(215,82,33)" rx="2" ry="2" />
<text  x="91.59" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="73.8" y="405" width="0.4" height="15.0" fill="rgb(227,104,26)" rx="2" ry="2" />
<text  x="76.83" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::allocate (1 samples, 0.03%)</title><rect x="20.7" y="261" width="0.4" height="15.0" fill="rgb(222,50,12)" rx="2" ry="2" />
<text  x="23.70" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="73.5" y="69" width="0.3" height="15.0" fill="rgb(254,138,41)" rx="2" ry="2" />
<text  x="76.46" y="79.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (1 samples, 0.03%)</title><rect x="1116.2" y="1765" width="0.4" height="15.0" fill="rgb(205,119,47)" rx="2" ry="2" />
<text  x="1119.20" y="1775.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="324.0" y="1589" width="1.1" height="15.0" fill="rgb(220,134,39)" rx="2" ry="2" />
<text  x="327.00" y="1599.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="1135.0" y="1749" width="1.1" height="15.0" fill="rgb(205,81,14)" rx="2" ry="2" />
<text  x="1138.02" y="1759.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%)</title><rect x="185.3" y="1765" width="0.3" height="15.0" fill="rgb(221,128,28)" rx="2" ry="2" />
<text  x="188.27" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%)</title><rect x="62.4" y="373" width="0.4" height="15.0" fill="rgb(240,207,30)" rx="2" ry="2" />
<text  x="65.40" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="99.3" y="773" width="0.4" height="15.0" fill="rgb(243,219,20)" rx="2" ry="2" />
<text  x="102.29" y="783.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (2 samples, 0.06%)</title><rect x="651.7" y="1717" width="0.7" height="15.0" fill="rgb(250,214,43)" rx="2" ry="2" />
<text  x="654.66" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.03%)</title><rect x="36.2" y="261" width="0.4" height="15.0" fill="rgb(224,144,9)" rx="2" ry="2" />
<text  x="39.20" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (4 samples, 0.13%)</title><rect x="125.1" y="1509" width="1.5" height="15.0" fill="rgb(213,34,52)" rx="2" ry="2" />
<text  x="128.12" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="325.1" y="1573" width="0.4" height="15.0" fill="rgb(209,153,6)" rx="2" ry="2" />
<text  x="328.11" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="71.6" y="453" width="0.4" height="15.0" fill="rgb(242,59,14)" rx="2" ry="2" />
<text  x="74.62" y="463.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%)</title><rect x="540.6" y="1669" width="0.4" height="15.0" fill="rgb(235,67,39)" rx="2" ry="2" />
<text  x="543.59" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_table_statement, std::default_delete&lt;cql3::statements::drop_table_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="95.6" y="565" width="0.4" height="15.0" fill="rgb(248,96,43)" rx="2" ry="2" />
<text  x="98.60" y="575.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="869.7" y="1701" width="0.4" height="15.0" fill="rgb(235,229,17)" rx="2" ry="2" />
<text  x="872.72" y="1711.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="96.3" y="341" width="0.4" height="15.0" fill="rgb(232,115,1)" rx="2" ry="2" />
<text  x="99.34" y="351.5" ></text>
</g>
<g >
<title>keyspace::create_replication_strategy (1 samples, 0.03%)</title><rect x="182.7" y="1589" width="0.4" height="15.0" fill="rgb(221,26,18)" rx="2" ry="2" />
<text  x="185.68" y="1599.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (2 samples, 0.06%)</title><rect x="1154.9" y="1717" width="0.8" height="15.0" fill="rgb(211,29,25)" rx="2" ry="2" />
<text  x="1157.95" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 7.97%)</title><rect x="11.1" y="1813" width="94.1" height="15.0" fill="rgb(221,88,16)" rx="2" ry="2" />
<text  x="14.11" y="1823.5" >[unknown]</text>
</g>
<g >
<title>operator new (9 samples, 0.28%)</title><rect x="247.3" y="1701" width="3.3" height="15.0" fill="rgb(244,203,50)" rx="2" ry="2" />
<text  x="250.25" y="1711.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (15 samples, 0.47%)</title><rect x="56.9" y="501" width="5.5" height="15.0" fill="rgb(237,20,33)" rx="2" ry="2" />
<text  x="59.86" y="511.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="76.0" y="373" width="0.4" height="15.0" fill="rgb(232,162,29)" rx="2" ry="2" />
<text  x="79.05" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%)</title><rect x="624.0" y="1653" width="0.4" height="15.0" fill="rgb(214,64,27)" rx="2" ry="2" />
<text  x="626.98" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%)</title><rect x="76.0" y="437" width="0.8" height="15.0" fill="rgb(244,56,1)" rx="2" ry="2" />
<text  x="79.05" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%)</title><rect x="138.4" y="1541" width="0.4" height="15.0" fill="rgb(219,20,24)" rx="2" ry="2" />
<text  x="141.41" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="604.4" y="1621" width="0.8" height="15.0" fill="rgb(222,103,17)" rx="2" ry="2" />
<text  x="607.43" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="68.7" y="293" width="0.3" height="15.0" fill="rgb(234,204,42)" rx="2" ry="2" />
<text  x="71.67" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (7 samples, 0.22%)</title><rect x="122.5" y="1557" width="2.6" height="15.0" fill="rgb(218,18,22)" rx="2" ry="2" />
<text  x="125.54" y="1567.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1 samples, 0.03%)</title><rect x="132.5" y="1557" width="0.4" height="15.0" fill="rgb(225,214,20)" rx="2" ry="2" />
<text  x="135.50" y="1567.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.25%)</title><rect x="519.9" y="1653" width="3.0" height="15.0" fill="rgb(239,165,39)" rx="2" ry="2" />
<text  x="522.93" y="1663.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (3 samples, 0.09%)</title><rect x="218.1" y="1685" width="1.1" height="15.0" fill="rgb(251,145,19)" rx="2" ry="2" />
<text  x="221.11" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.34%)</title><rect x="567.2" y="1621" width="4.0" height="15.0" fill="rgb(211,157,39)" rx="2" ry="2" />
<text  x="570.16" y="1631.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (2 samples, 0.06%)</title><rect x="742.8" y="1733" width="0.7" height="15.0" fill="rgb(206,64,5)" rx="2" ry="2" />
<text  x="745.80" y="1743.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%)</title><rect x="96.7" y="469" width="0.4" height="15.0" fill="rgb(242,190,29)" rx="2" ry="2" />
<text  x="99.71" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (31 samples, 0.97%)</title><rect x="680.4" y="1749" width="11.5" height="15.0" fill="rgb(236,211,23)" rx="2" ry="2" />
<text  x="683.44" y="1759.5" ></text>
</g>
<g >
<title>cql3::column_identifier_raw::prepare_column_identifier (1 samples, 0.03%)</title><rect x="81.6" y="565" width="0.4" height="15.0" fill="rgb(219,73,40)" rx="2" ry="2" />
<text  x="84.58" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.03%)</title><rect x="67.6" y="357" width="0.3" height="15.0" fill="rgb(243,196,4)" rx="2" ry="2" />
<text  x="70.56" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.13%)</title><rect x="97.1" y="773" width="1.5" height="15.0" fill="rgb(243,2,6)" rx="2" ry="2" />
<text  x="100.08" y="783.5" ></text>
</g>
<g >
<title>std::__variant_cast&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="45.4" y="229" width="0.4" height="15.0" fill="rgb(216,98,0)" rx="2" ry="2" />
<text  x="48.42" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="71.3" y="341" width="0.3" height="15.0" fill="rgb(224,225,6)" rx="2" ry="2" />
<text  x="74.25" y="351.5" ></text>
</g>
<g >
<title>create_partitions (44 samples, 1.38%)</title><rect x="80.1" y="677" width="16.2" height="15.0" fill="rgb(245,133,34)" rx="2" ry="2" />
<text  x="83.11" y="687.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (2 samples, 0.06%)</title><rect x="249.8" y="1637" width="0.8" height="15.0" fill="rgb(248,100,28)" rx="2" ry="2" />
<text  x="252.84" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="67.9" y="309" width="0.4" height="15.0" fill="rgb(218,46,3)" rx="2" ry="2" />
<text  x="70.93" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="779.0" y="1653" width="0.3" height="15.0" fill="rgb(205,206,27)" rx="2" ry="2" />
<text  x="781.96" y="1663.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="153.2" y="1877" width="0.3" height="15.0" fill="rgb(244,48,43)" rx="2" ry="2" />
<text  x="156.16" y="1887.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%)</title><rect x="76.0" y="357" width="0.4" height="15.0" fill="rgb(221,149,54)" rx="2" ry="2" />
<text  x="79.05" y="367.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%)</title><rect x="319.9" y="1573" width="1.9" height="15.0" fill="rgb(209,174,49)" rx="2" ry="2" />
<text  x="322.94" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (66 samples, 2.06%)</title><rect x="16.6" y="421" width="24.4" height="15.0" fill="rgb(233,163,32)" rx="2" ry="2" />
<text  x="19.64" y="431.5" >a..</text>
</g>
<g >
<title>seastar::thread_context::main (13 samples, 0.41%)</title><rect x="52.1" y="629" width="4.8" height="15.0" fill="rgb(249,155,50)" rx="2" ry="2" />
<text  x="55.06" y="639.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (1 samples, 0.03%)</title><rect x="105.2" y="1557" width="0.4" height="15.0" fill="rgb(250,51,4)" rx="2" ry="2" />
<text  x="108.20" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="73.5" y="357" width="0.3" height="15.0" fill="rgb(208,206,32)" rx="2" ry="2" />
<text  x="76.46" y="367.5" ></text>
</g>
<g >
<title>schema::column_at (6 samples, 0.19%)</title><rect x="356.1" y="1525" width="2.2" height="15.0" fill="rgb(252,167,33)" rx="2" ry="2" />
<text  x="359.10" y="1535.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (30 samples, 0.94%)</title><rect x="163.9" y="1765" width="11.0" height="15.0" fill="rgb(231,78,15)" rx="2" ry="2" />
<text  x="166.86" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::do_wait (1 samples, 0.03%)</title><rect x="14.1" y="533" width="0.3" height="15.0" fill="rgb(222,125,50)" rx="2" ry="2" />
<text  x="17.06" y="543.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (2 samples, 0.06%)</title><rect x="898.1" y="1653" width="0.8" height="15.0" fill="rgb(228,227,17)" rx="2" ry="2" />
<text  x="901.14" y="1663.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (37 samples, 1.16%)</title><rect x="718.1" y="1765" width="13.6" height="15.0" fill="rgb(206,224,53)" rx="2" ry="2" />
<text  x="721.07" y="1775.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%)</title><rect x="105.9" y="1765" width="0.4" height="15.0" fill="rgb(219,37,53)" rx="2" ry="2" />
<text  x="108.93" y="1775.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_recognizer (1 samples, 0.03%)</title><rect x="66.5" y="405" width="0.3" height="15.0" fill="rgb(216,213,14)" rx="2" ry="2" />
<text  x="69.45" y="415.5" ></text>
</g>
<g >
<title>table::query (2 samples, 0.06%)</title><rect x="1153.1" y="1765" width="0.7" height="15.0" fill="rgb(244,155,8)" rx="2" ry="2" />
<text  x="1156.10" y="1775.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (25 samples, 0.78%)</title><rect x="502.2" y="1637" width="9.2" height="15.0" fill="rgb(223,97,53)" rx="2" ry="2" />
<text  x="505.22" y="1647.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.03%)</title><rect x="399.3" y="1589" width="0.3" height="15.0" fill="rgb(216,81,38)" rx="2" ry="2" />
<text  x="402.27" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%)</title><rect x="57.2" y="421" width="0.8" height="15.0" fill="rgb(230,60,47)" rx="2" ry="2" />
<text  x="60.23" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (2 samples, 0.06%)</title><rect x="89.0" y="517" width="0.7" height="15.0" fill="rgb(223,97,12)" rx="2" ry="2" />
<text  x="91.96" y="527.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (18 samples, 0.56%)</title><rect x="1098.1" y="1685" width="6.7" height="15.0" fill="rgb(250,166,32)" rx="2" ry="2" />
<text  x="1101.12" y="1695.5" ></text>
</g>
<g >
<title>create_partitions (15 samples, 0.47%)</title><rect x="56.9" y="581" width="5.5" height="15.0" fill="rgb(238,198,11)" rx="2" ry="2" />
<text  x="59.86" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (2 samples, 0.06%)</title><rect x="47.3" y="341" width="0.7" height="15.0" fill="rgb(251,198,43)" rx="2" ry="2" />
<text  x="50.27" y="351.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (3 samples, 0.09%)</title><rect x="358.7" y="1541" width="1.1" height="15.0" fill="rgb(251,62,43)" rx="2" ry="2" />
<text  x="361.69" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (5 samples, 0.16%)</title><rect x="77.5" y="437" width="1.9" height="15.0" fill="rgb(253,13,43)" rx="2" ry="2" />
<text  x="80.52" y="447.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="183.4" y="1573" width="0.4" height="15.0" fill="rgb(222,95,17)" rx="2" ry="2" />
<text  x="186.42" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="130.7" y="1445" width="0.3" height="15.0" fill="rgb(228,197,29)" rx="2" ry="2" />
<text  x="133.66" y="1455.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="54.3" y="277" width="0.3" height="15.0" fill="rgb(228,57,47)" rx="2" ry="2" />
<text  x="57.28" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="137.3" y="1381" width="0.4" height="15.0" fill="rgb(244,14,7)" rx="2" ry="2" />
<text  x="140.30" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="136.2" y="1509" width="0.4" height="15.0" fill="rgb(235,193,28)" rx="2" ry="2" />
<text  x="139.19" y="1519.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (16 samples, 0.50%)</title><rect x="380.8" y="1509" width="5.9" height="15.0" fill="rgb(249,10,51)" rx="2" ry="2" />
<text  x="383.83" y="1519.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_bound_terms (2 samples, 0.06%)</title><rect x="755.0" y="1733" width="0.7" height="15.0" fill="rgb(220,196,26)" rx="2" ry="2" />
<text  x="757.97" y="1743.5" ></text>
</g>
<g >
<title>main (2,717 samples, 84.96%)</title><rect x="153.5" y="1877" width="1002.6" height="15.0" fill="rgb(251,26,35)" rx="2" ry="2" />
<text  x="156.53" y="1887.5" >main</text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="78.3" y="325" width="1.1" height="15.0" fill="rgb(218,190,6)" rx="2" ry="2" />
<text  x="81.26" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.13%)</title><rect x="310.7" y="1605" width="1.5" height="15.0" fill="rgb(240,128,46)" rx="2" ry="2" />
<text  x="313.72" y="1615.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="68.7" y="357" width="0.7" height="15.0" fill="rgb(246,209,49)" rx="2" ry="2" />
<text  x="71.67" y="367.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%)</title><rect x="105.2" y="1749" width="0.4" height="15.0" fill="rgb(213,163,25)" rx="2" ry="2" />
<text  x="108.20" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="66.1" y="373" width="0.4" height="15.0" fill="rgb(222,71,6)" rx="2" ry="2" />
<text  x="69.09" y="383.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.03%)</title><rect x="105.9" y="1861" width="0.4" height="15.0" fill="rgb(230,24,1)" rx="2" ry="2" />
<text  x="108.93" y="1871.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, true&gt; (1 samples, 0.03%)</title><rect x="69.8" y="357" width="0.3" height="15.0" fill="rgb(230,104,23)" rx="2" ry="2" />
<text  x="72.77" y="367.5" ></text>
</g>
<g >
<title>data_value::~data_value (1 samples, 0.03%)</title><rect x="183.4" y="1589" width="0.4" height="15.0" fill="rgb(205,35,18)" rx="2" ry="2" />
<text  x="186.42" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="130.3" y="1445" width="0.4" height="15.0" fill="rgb(218,223,18)" rx="2" ry="2" />
<text  x="133.29" y="1455.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (1 samples, 0.03%)</title><rect x="183.8" y="1669" width="0.4" height="15.0" fill="rgb(254,110,15)" rx="2" ry="2" />
<text  x="186.79" y="1679.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="124.4" y="1365" width="0.4" height="15.0" fill="rgb(248,45,25)" rx="2" ry="2" />
<text  x="127.38" y="1375.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%)</title><rect x="72.0" y="453" width="0.4" height="15.0" fill="rgb(254,227,47)" rx="2" ry="2" />
<text  x="74.99" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="112.2" y="1445" width="0.4" height="15.0" fill="rgb(232,76,42)" rx="2" ry="2" />
<text  x="115.21" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%)</title><rect x="334.7" y="1557" width="0.4" height="15.0" fill="rgb(224,228,16)" rx="2" ry="2" />
<text  x="337.70" y="1567.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (15 samples, 0.47%)</title><rect x="80.5" y="597" width="5.5" height="15.0" fill="rgb(237,17,22)" rx="2" ry="2" />
<text  x="83.48" y="607.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (10 samples, 0.31%)</title><rect x="117.0" y="1493" width="3.7" height="15.0" fill="rgb(250,77,49)" rx="2" ry="2" />
<text  x="120.00" y="1503.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.03%)</title><rect x="138.8" y="1589" width="0.3" height="15.0" fill="rgb(242,65,36)" rx="2" ry="2" />
<text  x="141.77" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%)</title><rect x="1025.4" y="1557" width="0.8" height="15.0" fill="rgb(231,154,47)" rx="2" ry="2" />
<text  x="1028.43" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%)</title><rect x="118.8" y="1413" width="1.5" height="15.0" fill="rgb(219,194,52)" rx="2" ry="2" />
<text  x="121.85" y="1423.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="120.0" y="1381" width="0.3" height="15.0" fill="rgb(238,152,53)" rx="2" ry="2" />
<text  x="122.96" y="1391.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%)</title><rect x="74.6" y="373" width="0.3" height="15.0" fill="rgb(241,64,8)" rx="2" ry="2" />
<text  x="77.57" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="59.1" y="229" width="0.3" height="15.0" fill="rgb(249,11,20)" rx="2" ry="2" />
<text  x="62.07" y="239.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.03%)</title><rect x="184.5" y="1637" width="0.4" height="15.0" fill="rgb(221,114,39)" rx="2" ry="2" />
<text  x="187.53" y="1647.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (97 samples, 3.03%)</title><rect x="14.8" y="517" width="35.8" height="15.0" fill="rgb(215,113,30)" rx="2" ry="2" />
<text  x="17.80" y="527.5" >cql..</text>
</g>
<g >
<title>create_partitions (21 samples, 0.66%)</title><rect x="62.4" y="597" width="7.7" height="15.0" fill="rgb(209,93,14)" rx="2" ry="2" />
<text  x="65.40" y="607.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (2 samples, 0.06%)</title><rect x="204.8" y="1733" width="0.8" height="15.0" fill="rgb(238,56,53)" rx="2" ry="2" />
<text  x="207.82" y="1743.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (14 samples, 0.44%)</title><rect x="74.9" y="613" width="5.2" height="15.0" fill="rgb(244,108,38)" rx="2" ry="2" />
<text  x="77.94" y="623.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%)</title><rect x="44.3" y="389" width="0.8" height="15.0" fill="rgb(228,114,54)" rx="2" ry="2" />
<text  x="47.32" y="399.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1797" width="88.6" height="15.0" fill="rgb(242,223,29)" rx="2" ry="2" />
<text  x="14.11" y="1807.5" >[unknown]</text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.03%)</title><rect x="348.4" y="1541" width="0.3" height="15.0" fill="rgb(221,179,6)" rx="2" ry="2" />
<text  x="351.36" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1525" width="88.6" height="15.0" fill="rgb(208,212,14)" rx="2" ry="2" />
<text  x="14.11" y="1535.5" >[unknown]</text>
</g>
<g >
<title>frozen_schema::unfreeze (1 samples, 0.03%)</title><rect x="184.9" y="1701" width="0.4" height="15.0" fill="rgb(251,58,37)" rx="2" ry="2" />
<text  x="187.90" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (2 samples, 0.06%)</title><rect x="677.1" y="1749" width="0.8" height="15.0" fill="rgb(231,228,25)" rx="2" ry="2" />
<text  x="680.12" y="1759.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%)</title><rect x="57.2" y="389" width="0.8" height="15.0" fill="rgb(247,60,5)" rx="2" ry="2" />
<text  x="60.23" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.13%)</title><rect x="733.9" y="1749" width="1.5" height="15.0" fill="rgb(233,165,6)" rx="2" ry="2" />
<text  x="736.94" y="1759.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (97 samples, 3.03%)</title><rect x="14.8" y="485" width="35.8" height="15.0" fill="rgb(233,198,9)" rx="2" ry="2" />
<text  x="17.80" y="495.5" >cql..</text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%)</title><rect x="821.4" y="1589" width="0.4" height="15.0" fill="rgb(242,98,12)" rx="2" ry="2" />
<text  x="824.39" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%)</title><rect x="111.5" y="1429" width="0.3" height="15.0" fill="rgb(221,6,50)" rx="2" ry="2" />
<text  x="114.47" y="1439.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (2 samples, 0.06%)</title><rect x="115.9" y="1541" width="0.7" height="15.0" fill="rgb(209,169,22)" rx="2" ry="2" />
<text  x="118.90" y="1551.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (3 samples, 0.09%)</title><rect x="345.4" y="1557" width="1.1" height="15.0" fill="rgb(207,226,46)" rx="2" ry="2" />
<text  x="348.40" y="1567.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="132.9" y="1429" width="0.3" height="15.0" fill="rgb(214,169,39)" rx="2" ry="2" />
<text  x="135.87" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="46.5" y="181" width="0.8" height="15.0" fill="rgb(250,130,44)" rx="2" ry="2" />
<text  x="49.53" y="191.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (11 samples, 0.34%)</title><rect x="685.6" y="1733" width="4.1" height="15.0" fill="rgb(239,58,33)" rx="2" ry="2" />
<text  x="688.60" y="1743.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%)</title><rect x="96.3" y="629" width="0.8" height="15.0" fill="rgb(212,163,16)" rx="2" ry="2" />
<text  x="99.34" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_check_len (1 samples, 0.03%)</title><rect x="139.5" y="1573" width="0.4" height="15.0" fill="rgb(230,131,54)" rx="2" ry="2" />
<text  x="142.51" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="254.3" y="1701" width="0.3" height="15.0" fill="rgb(227,217,10)" rx="2" ry="2" />
<text  x="257.27" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (5 samples, 0.16%)</title><rect x="29.6" y="293" width="1.8" height="15.0" fill="rgb(228,97,27)" rx="2" ry="2" />
<text  x="32.56" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="115.2" y="1429" width="0.3" height="15.0" fill="rgb(247,86,42)" rx="2" ry="2" />
<text  x="118.16" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%)</title><rect x="151.3" y="1461" width="0.4" height="15.0" fill="rgb(219,166,40)" rx="2" ry="2" />
<text  x="154.32" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%)</title><rect x="173.5" y="1701" width="0.7" height="15.0" fill="rgb(205,109,24)" rx="2" ry="2" />
<text  x="176.46" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.03%)</title><rect x="98.9" y="693" width="0.4" height="15.0" fill="rgb(219,225,15)" rx="2" ry="2" />
<text  x="101.92" y="703.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.03%)</title><rect x="30.7" y="197" width="0.3" height="15.0" fill="rgb(246,224,13)" rx="2" ry="2" />
<text  x="33.66" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%)</title><rect x="52.8" y="277" width="0.7" height="15.0" fill="rgb(209,51,13)" rx="2" ry="2" />
<text  x="55.80" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="45.1" y="277" width="0.3" height="15.0" fill="rgb(227,114,17)" rx="2" ry="2" />
<text  x="48.05" y="287.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="56.9" y="405" width="0.3" height="15.0" fill="rgb(244,115,3)" rx="2" ry="2" />
<text  x="59.86" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (5 samples, 0.16%)</title><rect x="1149.4" y="1765" width="1.9" height="15.0" fill="rgb(230,65,3)" rx="2" ry="2" />
<text  x="1152.41" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%)</title><rect x="42.5" y="357" width="0.7" height="15.0" fill="rgb(226,123,2)" rx="2" ry="2" />
<text  x="45.47" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%)</title><rect x="1022.1" y="1509" width="0.4" height="15.0" fill="rgb(248,181,38)" rx="2" ry="2" />
<text  x="1025.11" y="1519.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%)</title><rect x="921.0" y="1669" width="0.4" height="15.0" fill="rgb(225,82,7)" rx="2" ry="2" />
<text  x="924.01" y="1679.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.06%)</title><rect x="745.0" y="1717" width="0.7" height="15.0" fill="rgb(208,42,12)" rx="2" ry="2" />
<text  x="748.01" y="1727.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="44.7" y="229" width="0.4" height="15.0" fill="rgb(218,100,24)" rx="2" ry="2" />
<text  x="47.68" y="239.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (4 samples, 0.13%)</title><rect x="250.6" y="1701" width="1.5" height="15.0" fill="rgb(250,193,39)" rx="2" ry="2" />
<text  x="253.58" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="128.4" y="1445" width="0.8" height="15.0" fill="rgb(213,186,48)" rx="2" ry="2" />
<text  x="131.44" y="1455.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="129.5" y="1365" width="0.4" height="15.0" fill="rgb(207,209,39)" rx="2" ry="2" />
<text  x="132.55" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="261.3" y="1685" width="0.3" height="15.0" fill="rgb(208,60,39)" rx="2" ry="2" />
<text  x="264.28" y="1695.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (19 samples, 0.59%)</title><rect x="1097.8" y="1749" width="7.0" height="15.0" fill="rgb(235,55,1)" rx="2" ry="2" />
<text  x="1100.75" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%)</title><rect x="962.7" y="1573" width="1.1" height="15.0" fill="rgb(237,3,2)" rx="2" ry="2" />
<text  x="965.71" y="1583.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (3 samples, 0.09%)</title><rect x="129.2" y="1509" width="1.1" height="15.0" fill="rgb(216,216,6)" rx="2" ry="2" />
<text  x="132.18" y="1519.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (6 samples, 0.19%)</title><rect x="77.5" y="453" width="2.2" height="15.0" fill="rgb(232,93,29)" rx="2" ry="2" />
<text  x="80.52" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="118.8" y="1317" width="0.4" height="15.0" fill="rgb(236,66,12)" rx="2" ry="2" />
<text  x="121.85" y="1327.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%)</title><rect x="87.9" y="533" width="0.3" height="15.0" fill="rgb(241,218,31)" rx="2" ry="2" />
<text  x="90.85" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="96.3" y="357" width="0.4" height="15.0" fill="rgb(235,130,24)" rx="2" ry="2" />
<text  x="99.34" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;cql3::expr::conjunction&gt;::_M_ptr (1 samples, 0.03%)</title><rect x="134.7" y="1317" width="0.4" height="15.0" fill="rgb(248,219,41)" rx="2" ry="2" />
<text  x="137.72" y="1327.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (27 samples, 0.84%)</title><rect x="856.4" y="1733" width="10.0" height="15.0" fill="rgb(221,213,17)" rx="2" ry="2" />
<text  x="859.44" y="1743.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::wait_for_one (1 samples, 0.03%)</title><rect x="1113.6" y="1749" width="0.4" height="15.0" fill="rgb(239,19,5)" rx="2" ry="2" />
<text  x="1116.62" y="1759.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_state (1 samples, 0.03%)</title><rect x="27.3" y="293" width="0.4" height="15.0" fill="rgb(242,55,21)" rx="2" ry="2" />
<text  x="30.34" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (2 samples, 0.06%)</title><rect x="1106.6" y="1445" width="0.7" height="15.0" fill="rgb(225,218,10)" rx="2" ry="2" />
<text  x="1109.61" y="1455.5" ></text>
</g>
<g >
<title>query_state::query_state (8 samples, 0.25%)</title><rect x="647.6" y="1717" width="3.0" height="15.0" fill="rgb(218,217,2)" rx="2" ry="2" />
<text  x="650.60" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="72.4" y="373" width="0.3" height="15.0" fill="rgb(223,213,32)" rx="2" ry="2" />
<text  x="75.36" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%)</title><rect x="46.5" y="117" width="0.4" height="15.0" fill="rgb(244,89,20)" rx="2" ry="2" />
<text  x="49.53" y="127.5" ></text>
</g>
<g >
<title>make_multishard_combining_reader (1 samples, 0.03%)</title><rect x="182.3" y="1573" width="0.4" height="15.0" fill="rgb(234,29,43)" rx="2" ry="2" />
<text  x="185.31" y="1583.5" ></text>
</g>
<g >
<title>do_cql_test (15 samples, 0.47%)</title><rect x="56.9" y="597" width="5.5" height="15.0" fill="rgb(241,206,36)" rx="2" ry="2" />
<text  x="59.86" y="607.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%)</title><rect x="814.4" y="1605" width="0.7" height="15.0" fill="rgb(213,175,16)" rx="2" ry="2" />
<text  x="817.38" y="1615.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%)</title><rect x="71.3" y="453" width="0.3" height="15.0" fill="rgb(214,222,6)" rx="2" ry="2" />
<text  x="74.25" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_startIndex (1 samples, 0.03%)</title><rect x="99.3" y="661" width="0.4" height="15.0" fill="rgb(236,29,11)" rx="2" ry="2" />
<text  x="102.29" y="671.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (83 samples, 2.60%)</title><rect x="109.6" y="1653" width="30.7" height="15.0" fill="rgb(207,125,38)" rx="2" ry="2" />
<text  x="112.62" y="1663.5" >cq..</text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (12 samples, 0.38%)</title><rect x="858.7" y="1637" width="4.4" height="15.0" fill="rgb(220,27,12)" rx="2" ry="2" />
<text  x="861.66" y="1647.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.03%)</title><rect x="489.3" y="1669" width="0.4" height="15.0" fill="rgb(232,155,26)" rx="2" ry="2" />
<text  x="492.31" y="1679.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::StackType (3 samples, 0.09%)</title><rect x="15.5" y="373" width="1.1" height="15.0" fill="rgb(245,112,45)" rx="2" ry="2" />
<text  x="18.53" y="383.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.06%)</title><rect x="421.8" y="1685" width="0.7" height="15.0" fill="rgb(225,103,14)" rx="2" ry="2" />
<text  x="424.78" y="1695.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="133.6" y="1429" width="0.4" height="15.0" fill="rgb(239,110,43)" rx="2" ry="2" />
<text  x="136.61" y="1439.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (21 samples, 0.66%)</title><rect x="62.4" y="549" width="7.7" height="15.0" fill="rgb(250,104,51)" rx="2" ry="2" />
<text  x="65.40" y="559.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%)</title><rect x="741.7" y="1733" width="0.7" height="15.0" fill="rgb(238,90,21)" rx="2" ry="2" />
<text  x="744.69" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (255 samples, 7.97%)</title><rect x="11.1" y="1829" width="94.1" height="15.0" fill="rgb(253,67,13)" rx="2" ry="2" />
<text  x="14.11" y="1839.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="42.8" y="261" width="0.4" height="15.0" fill="rgb(251,138,37)" rx="2" ry="2" />
<text  x="45.84" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="45.1" y="229" width="0.3" height="15.0" fill="rgb(219,57,36)" rx="2" ry="2" />
<text  x="48.05" y="239.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.03%)</title><rect x="861.2" y="1557" width="0.4" height="15.0" fill="rgb(220,27,11)" rx="2" ry="2" />
<text  x="864.24" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="46.5" y="245" width="0.8" height="15.0" fill="rgb(241,64,49)" rx="2" ry="2" />
<text  x="49.53" y="255.5" ></text>
</g>
<g >
<title>schema_registry::get (12 samples, 0.38%)</title><rect x="950.2" y="1621" width="4.4" height="15.0" fill="rgb(231,165,33)" rx="2" ry="2" />
<text  x="953.16" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="132.9" y="1397" width="0.3" height="15.0" fill="rgb(236,11,25)" rx="2" ry="2" />
<text  x="135.87" y="1407.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (4 samples, 0.13%)</title><rect x="487.8" y="1669" width="1.5" height="15.0" fill="rgb(215,100,38)" rx="2" ry="2" />
<text  x="490.83" y="1679.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.06%)</title><rect x="564.9" y="1637" width="0.8" height="15.0" fill="rgb(222,198,45)" rx="2" ry="2" />
<text  x="567.95" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (12 samples, 0.38%)</title><rect x="58.0" y="421" width="4.4" height="15.0" fill="rgb(237,174,40)" rx="2" ry="2" />
<text  x="60.97" y="431.5" ></text>
</g>
<g >
<title>partition_entry::make_evictable (1 samples, 0.03%)</title><rect x="108.9" y="1813" width="0.4" height="15.0" fill="rgb(229,17,15)" rx="2" ry="2" />
<text  x="111.89" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="69.0" y="245" width="0.4" height="15.0" fill="rgb(245,81,45)" rx="2" ry="2" />
<text  x="72.04" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="54.6" y="213" width="0.4" height="15.0" fill="rgb(219,189,25)" rx="2" ry="2" />
<text  x="57.65" y="223.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (4 samples, 0.13%)</title><rect x="1109.6" y="1589" width="1.4" height="15.0" fill="rgb(219,46,30)" rx="2" ry="2" />
<text  x="1112.56" y="1599.5" ></text>
</g>
<g >
<title>db::system_keyspace::all_tables (1 samples, 0.03%)</title><rect x="141.0" y="1541" width="0.4" height="15.0" fill="rgb(230,94,3)" rx="2" ry="2" />
<text  x="143.99" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.06%)</title><rect x="1022.9" y="1525" width="0.7" height="15.0" fill="rgb(234,212,50)" rx="2" ry="2" />
<text  x="1025.85" y="1535.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (4 samples, 0.13%)</title><rect x="125.1" y="1525" width="1.5" height="15.0" fill="rgb(221,1,1)" rx="2" ry="2" />
<text  x="128.12" y="1535.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.03%)</title><rect x="182.3" y="1749" width="0.4" height="15.0" fill="rgb(222,125,29)" rx="2" ry="2" />
<text  x="185.31" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%)</title><rect x="60.6" y="373" width="0.3" height="15.0" fill="rgb(234,62,25)" rx="2" ry="2" />
<text  x="63.55" y="383.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (21 samples, 0.66%)</title><rect x="62.4" y="565" width="7.7" height="15.0" fill="rgb(206,171,10)" rx="2" ry="2" />
<text  x="65.40" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (3 samples, 0.09%)</title><rect x="306.3" y="1621" width="1.1" height="15.0" fill="rgb(236,186,1)" rx="2" ry="2" />
<text  x="309.29" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="691.5" y="1733" width="0.4" height="15.0" fill="rgb(245,136,23)" rx="2" ry="2" />
<text  x="694.51" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="132.9" y="1557" width="0.3" height="15.0" fill="rgb(215,191,51)" rx="2" ry="2" />
<text  x="135.87" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="72.0" y="389" width="0.4" height="15.0" fill="rgb(206,63,27)" rx="2" ry="2" />
<text  x="74.99" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="112.2" y="1397" width="0.4" height="15.0" fill="rgb(254,83,20)" rx="2" ry="2" />
<text  x="115.21" y="1407.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (15 samples, 0.47%)</title><rect x="56.9" y="453" width="5.5" height="15.0" fill="rgb(235,116,8)" rx="2" ry="2" />
<text  x="59.86" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="112.2" y="1429" width="0.4" height="15.0" fill="rgb(208,28,31)" rx="2" ry="2" />
<text  x="115.21" y="1439.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (44 samples, 1.38%)</title><rect x="80.1" y="709" width="16.2" height="15.0" fill="rgb(205,126,18)" rx="2" ry="2" />
<text  x="83.11" y="719.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%)</title><rect x="109.6" y="1557" width="0.4" height="15.0" fill="rgb(218,13,9)" rx="2" ry="2" />
<text  x="112.62" y="1567.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.13%)</title><rect x="1114.4" y="1765" width="1.4" height="15.0" fill="rgb(244,5,28)" rx="2" ry="2" />
<text  x="1117.36" y="1775.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="128.4" y="1365" width="0.4" height="15.0" fill="rgb(251,35,41)" rx="2" ry="2" />
<text  x="131.44" y="1375.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.03%)</title><rect x="865.3" y="1637" width="0.4" height="15.0" fill="rgb(226,202,29)" rx="2" ry="2" />
<text  x="868.30" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="1101.8" y="1605" width="0.4" height="15.0" fill="rgb(217,104,47)" rx="2" ry="2" />
<text  x="1104.81" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="186.7" y="1749" width="0.4" height="15.0" fill="rgb(243,139,8)" rx="2" ry="2" />
<text  x="189.74" y="1759.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (7 samples, 0.22%)</title><rect x="18.1" y="309" width="2.6" height="15.0" fill="rgb(232,19,21)" rx="2" ry="2" />
<text  x="21.12" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false, false&gt;::operator= (1 samples, 0.03%)</title><rect x="43.2" y="325" width="0.4" height="15.0" fill="rgb(226,179,38)" rx="2" ry="2" />
<text  x="46.21" y="335.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="136.9" y="1509" width="0.4" height="15.0" fill="rgb(213,63,16)" rx="2" ry="2" />
<text  x="139.93" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.41%)</title><rect x="52.1" y="613" width="4.8" height="15.0" fill="rgb(241,213,6)" rx="2" ry="2" />
<text  x="55.06" y="623.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (13 samples, 0.41%)</title><rect x="70.1" y="533" width="4.8" height="15.0" fill="rgb(221,172,23)" rx="2" ry="2" />
<text  x="73.14" y="543.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (20 samples, 0.63%)</title><rect x="327.7" y="1573" width="7.4" height="15.0" fill="rgb(238,47,44)" rx="2" ry="2" />
<text  x="330.69" y="1583.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="115.2" y="1413" width="0.3" height="15.0" fill="rgb(235,188,25)" rx="2" ry="2" />
<text  x="118.16" y="1423.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%)</title><rect x="168.3" y="1733" width="1.8" height="15.0" fill="rgb(251,117,5)" rx="2" ry="2" />
<text  x="171.29" y="1743.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (1 samples, 0.03%)</title><rect x="557.2" y="1669" width="0.4" height="15.0" fill="rgb(216,95,11)" rx="2" ry="2" />
<text  x="560.20" y="1679.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="75.3" y="341" width="0.4" height="15.0" fill="rgb(242,217,36)" rx="2" ry="2" />
<text  x="78.31" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%)</title><rect x="779.3" y="1653" width="0.4" height="15.0" fill="rgb(205,106,3)" rx="2" ry="2" />
<text  x="782.32" y="1663.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (3 samples, 0.09%)</title><rect x="97.4" y="661" width="1.2" height="15.0" fill="rgb(253,161,40)" rx="2" ry="2" />
<text  x="100.45" y="671.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%)</title><rect x="864.6" y="1605" width="0.3" height="15.0" fill="rgb(239,192,2)" rx="2" ry="2" />
<text  x="867.56" y="1615.5" ></text>
</g>
<g >
<title>do_cql_test (111 samples, 3.47%)</title><rect x="11.1" y="565" width="41.0" height="15.0" fill="rgb(242,187,3)" rx="2" ry="2" />
<text  x="14.11" y="575.5" >do_..</text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="135.1" y="1365" width="0.4" height="15.0" fill="rgb(206,144,25)" rx="2" ry="2" />
<text  x="138.08" y="1375.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%)</title><rect x="914.0" y="1653" width="0.4" height="15.0" fill="rgb(230,115,8)" rx="2" ry="2" />
<text  x="917.00" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (5 samples, 0.16%)</title><rect x="77.5" y="389" width="1.9" height="15.0" fill="rgb(223,43,44)" rx="2" ry="2" />
<text  x="80.52" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="98.6" y="837" width="0.3" height="15.0" fill="rgb(234,73,15)" rx="2" ry="2" />
<text  x="101.56" y="847.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="53.5" y="293" width="0.4" height="15.0" fill="rgb(236,57,11)" rx="2" ry="2" />
<text  x="56.54" y="303.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.06%)</title><rect x="75.3" y="389" width="0.7" height="15.0" fill="rgb(244,72,12)" rx="2" ry="2" />
<text  x="78.31" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (621 samples, 19.42%)</title><rect x="868.6" y="1733" width="229.2" height="15.0" fill="rgb(252,161,1)" rx="2" ry="2" />
<text  x="871.62" y="1743.5" >seastar::noncopyable_function&lt;..</text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (22 samples, 0.69%)</title><rect x="132.1" y="1621" width="8.2" height="15.0" fill="rgb(209,97,15)" rx="2" ry="2" />
<text  x="135.13" y="1631.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (59 samples, 1.84%)</title><rect x="677.9" y="1765" width="21.7" height="15.0" fill="rgb(213,4,23)" rx="2" ry="2" />
<text  x="680.85" y="1775.5" >s..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="45.1" y="165" width="0.3" height="15.0" fill="rgb(212,128,16)" rx="2" ry="2" />
<text  x="48.05" y="175.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (2 samples, 0.06%)</title><rect x="912.5" y="1669" width="0.8" height="15.0" fill="rgb(237,83,39)" rx="2" ry="2" />
<text  x="915.53" y="1679.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%)</title><rect x="823.2" y="1621" width="1.1" height="15.0" fill="rgb(230,12,31)" rx="2" ry="2" />
<text  x="826.23" y="1631.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="1112.9" y="1669" width="0.4" height="15.0" fill="rgb(244,64,9)" rx="2" ry="2" />
<text  x="1115.88" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%)</title><rect x="797.8" y="1653" width="2.2" height="15.0" fill="rgb(207,191,24)" rx="2" ry="2" />
<text  x="800.77" y="1663.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a59683b929e6b30d9803453a6167c92c7df06c25] (1 samples, 0.03%)</title><rect x="814.0" y="1605" width="0.4" height="15.0" fill="rgb(245,133,4)" rx="2" ry="2" />
<text  x="817.01" y="1615.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.03%)</title><rect x="219.9" y="1717" width="0.4" height="15.0" fill="rgb(225,220,6)" rx="2" ry="2" />
<text  x="222.95" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="99.3" y="789" width="0.4" height="15.0" fill="rgb(221,149,53)" rx="2" ry="2" />
<text  x="102.29" y="799.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%)</title><rect x="129.5" y="1413" width="0.8" height="15.0" fill="rgb(237,59,9)" rx="2" ry="2" />
<text  x="132.55" y="1423.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%)</title><rect x="223.6" y="1653" width="0.4" height="15.0" fill="rgb(232,30,48)" rx="2" ry="2" />
<text  x="226.64" y="1663.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (27 samples, 0.84%)</title><rect x="735.8" y="1749" width="9.9" height="15.0" fill="rgb(246,45,13)" rx="2" ry="2" />
<text  x="738.78" y="1759.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (13 samples, 0.41%)</title><rect x="52.1" y="517" width="4.8" height="15.0" fill="rgb(217,87,31)" rx="2" ry="2" />
<text  x="55.06" y="527.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.03%)</title><rect x="61.3" y="293" width="0.4" height="15.0" fill="rgb(219,35,44)" rx="2" ry="2" />
<text  x="64.29" y="303.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1589" width="88.6" height="15.0" fill="rgb(214,192,51)" rx="2" ry="2" />
<text  x="14.11" y="1599.5" >[unknown]</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (2 samples, 0.06%)</title><rect x="96.3" y="645" width="0.8" height="15.0" fill="rgb(251,202,17)" rx="2" ry="2" />
<text  x="99.34" y="655.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.03%)</title><rect x="89.7" y="517" width="0.4" height="15.0" fill="rgb(231,219,26)" rx="2" ry="2" />
<text  x="92.70" y="527.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="141.0" y="1701" width="0.4" height="15.0" fill="rgb(243,59,9)" rx="2" ry="2" />
<text  x="143.99" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="54.6" y="309" width="0.4" height="15.0" fill="rgb(216,55,20)" rx="2" ry="2" />
<text  x="57.65" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%)</title><rect x="127.0" y="1493" width="0.3" height="15.0" fill="rgb(232,76,24)" rx="2" ry="2" />
<text  x="129.97" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="73.5" y="149" width="0.3" height="15.0" fill="rgb(249,2,50)" rx="2" ry="2" />
<text  x="76.46" y="159.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%)</title><rect x="105.2" y="1765" width="0.4" height="15.0" fill="rgb(218,168,41)" rx="2" ry="2" />
<text  x="108.20" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="44.7" y="245" width="0.4" height="15.0" fill="rgb(206,128,42)" rx="2" ry="2" />
<text  x="47.68" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="531.4" y="1637" width="0.3" height="15.0" fill="rgb(246,227,38)" rx="2" ry="2" />
<text  x="534.37" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.03%)</title><rect x="22.9" y="149" width="0.4" height="15.0" fill="rgb(252,133,24)" rx="2" ry="2" />
<text  x="25.91" y="159.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%)</title><rect x="48.0" y="341" width="0.4" height="15.0" fill="rgb(214,2,53)" rx="2" ry="2" />
<text  x="51.01" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="513.7" y="1685" width="0.3" height="15.0" fill="rgb(218,188,43)" rx="2" ry="2" />
<text  x="516.66" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="88.6" y="389" width="0.4" height="15.0" fill="rgb(210,154,37)" rx="2" ry="2" />
<text  x="91.59" y="399.5" ></text>
</g>
<g >
<title>handle_intel.constprop.0 (1 samples, 0.03%)</title><rect x="1172.3" y="1893" width="0.4" height="15.0" fill="rgb(251,6,35)" rx="2" ry="2" />
<text  x="1175.29" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%)</title><rect x="936.5" y="1637" width="0.7" height="15.0" fill="rgb(248,6,26)" rx="2" ry="2" />
<text  x="939.51" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%)</title><rect x="846.1" y="1685" width="0.7" height="15.0" fill="rgb(218,11,16)" rx="2" ry="2" />
<text  x="849.11" y="1695.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (10 samples, 0.31%)</title><rect x="906.3" y="1637" width="3.6" height="15.0" fill="rgb(207,118,41)" rx="2" ry="2" />
<text  x="909.25" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%)</title><rect x="111.5" y="1525" width="0.7" height="15.0" fill="rgb(249,136,37)" rx="2" ry="2" />
<text  x="114.47" y="1535.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.16%)</title><rect x="1139.4" y="1749" width="1.9" height="15.0" fill="rgb(244,209,38)" rx="2" ry="2" />
<text  x="1142.45" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%)</title><rect x="749.8" y="1733" width="1.9" height="15.0" fill="rgb(213,64,53)" rx="2" ry="2" />
<text  x="752.81" y="1743.5" ></text>
</g>
<g >
<title>schema_registry::learn (3 samples, 0.09%)</title><rect x="184.2" y="1733" width="1.1" height="15.0" fill="rgb(233,8,14)" rx="2" ry="2" />
<text  x="187.16" y="1743.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (1 samples, 0.03%)</title><rect x="97.8" y="581" width="0.4" height="15.0" fill="rgb(248,120,2)" rx="2" ry="2" />
<text  x="100.82" y="591.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (13 samples, 0.41%)</title><rect x="70.1" y="565" width="4.8" height="15.0" fill="rgb(206,157,23)" rx="2" ry="2" />
<text  x="73.14" y="575.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (3 samples, 0.09%)</title><rect x="76.0" y="469" width="1.2" height="15.0" fill="rgb(229,161,5)" rx="2" ry="2" />
<text  x="79.05" y="479.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.63%)</title><rect x="142.1" y="1861" width="7.4" height="15.0" fill="rgb(237,72,44)" rx="2" ry="2" />
<text  x="145.10" y="1871.5" ></text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.03%)</title><rect x="1155.7" y="1813" width="0.4" height="15.0" fill="rgb(247,205,25)" rx="2" ry="2" />
<text  x="1158.68" y="1823.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (40 samples, 1.25%)</title><rect x="807.0" y="1621" width="14.8" height="15.0" fill="rgb(219,221,11)" rx="2" ry="2" />
<text  x="810.00" y="1631.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (3 samples, 0.09%)</title><rect x="687.1" y="1701" width="1.1" height="15.0" fill="rgb(221,20,48)" rx="2" ry="2" />
<text  x="690.08" y="1711.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="617.0" y="1621" width="0.7" height="15.0" fill="rgb(239,140,39)" rx="2" ry="2" />
<text  x="619.97" y="1631.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (6 samples, 0.19%)</title><rect x="594.1" y="1653" width="2.2" height="15.0" fill="rgb(212,215,49)" rx="2" ry="2" />
<text  x="597.10" y="1663.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="118.8" y="1381" width="1.2" height="15.0" fill="rgb(242,25,30)" rx="2" ry="2" />
<text  x="121.85" y="1391.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (5 samples, 0.16%)</title><rect x="913.3" y="1669" width="1.8" height="15.0" fill="rgb(249,75,37)" rx="2" ry="2" />
<text  x="916.26" y="1679.5" ></text>
</g>
<g >
<title>sstables::mc::writer::~writer (1 samples, 0.03%)</title><rect x="152.8" y="1781" width="0.4" height="15.0" fill="rgb(222,210,33)" rx="2" ry="2" />
<text  x="155.80" y="1791.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%)</title><rect x="511.4" y="1637" width="0.4" height="15.0" fill="rgb(254,57,27)" rx="2" ry="2" />
<text  x="514.44" y="1647.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (2 samples, 0.06%)</title><rect x="107.8" y="1813" width="0.7" height="15.0" fill="rgb(231,13,6)" rx="2" ry="2" />
<text  x="110.78" y="1823.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (7 samples, 0.22%)</title><rect x="122.5" y="1541" width="2.6" height="15.0" fill="rgb(230,143,10)" rx="2" ry="2" />
<text  x="125.54" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::execution_stage_manager::flush (1 samples, 0.03%)</title><rect x="1154.6" y="1765" width="0.3" height="15.0" fill="rgb(242,27,16)" rx="2" ry="2" />
<text  x="1157.58" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="54.3" y="325" width="0.3" height="15.0" fill="rgb(245,68,41)" rx="2" ry="2" />
<text  x="57.28" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%)</title><rect x="98.6" y="613" width="0.3" height="15.0" fill="rgb(251,212,22)" rx="2" ry="2" />
<text  x="101.56" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%)</title><rect x="73.5" y="309" width="0.3" height="15.0" fill="rgb(206,164,50)" rx="2" ry="2" />
<text  x="76.46" y="319.5" ></text>
</g>
<g >
<title>[unknown] (187 samples, 5.85%)</title><rect x="11.1" y="757" width="69.0" height="15.0" fill="rgb(208,55,37)" rx="2" ry="2" />
<text  x="14.11" y="767.5" >[unknown]</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (84 samples, 2.63%)</title><rect x="109.3" y="1813" width="31.0" height="15.0" fill="rgb(250,74,54)" rx="2" ry="2" />
<text  x="112.26" y="1823.5" >st..</text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%)</title><rect x="865.3" y="1621" width="0.4" height="15.0" fill="rgb(222,134,53)" rx="2" ry="2" />
<text  x="868.30" y="1631.5" ></text>
</g>
<g >
<title>database::create_in_memory_keyspace (1 samples, 0.03%)</title><rect x="182.7" y="1605" width="0.4" height="15.0" fill="rgb(229,14,19)" rx="2" ry="2" />
<text  x="185.68" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%)</title><rect x="23.3" y="213" width="0.4" height="15.0" fill="rgb(223,158,51)" rx="2" ry="2" />
<text  x="26.28" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.03%)</title><rect x="625.8" y="1653" width="0.4" height="15.0" fill="rgb(238,211,31)" rx="2" ry="2" />
<text  x="628.83" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (6 samples, 0.19%)</title><rect x="34.7" y="309" width="2.2" height="15.0" fill="rgb(254,58,24)" rx="2" ry="2" />
<text  x="37.72" y="319.5" ></text>
</g>
<g >
<title>__atomic_store (1 samples, 0.03%)</title><rect x="746.5" y="1749" width="0.4" height="15.0" fill="rgb(233,19,53)" rx="2" ry="2" />
<text  x="749.49" y="1759.5" ></text>
</g>
<g >
<title>database::query (17 samples, 0.53%)</title><rect x="176.0" y="1765" width="6.3" height="15.0" fill="rgb(221,219,11)" rx="2" ry="2" />
<text  x="179.04" y="1775.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.03%)</title><rect x="312.9" y="1605" width="0.4" height="15.0" fill="rgb(219,193,49)" rx="2" ry="2" />
<text  x="315.93" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.06%)</title><rect x="76.0" y="453" width="0.8" height="15.0" fill="rgb(235,207,3)" rx="2" ry="2" />
<text  x="79.05" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%)</title><rect x="631.7" y="1669" width="0.4" height="15.0" fill="rgb(230,42,46)" rx="2" ry="2" />
<text  x="634.73" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%)</title><rect x="65.3" y="437" width="0.8" height="15.0" fill="rgb(230,150,20)" rx="2" ry="2" />
<text  x="68.35" y="447.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.03%)</title><rect x="141.4" y="1861" width="0.3" height="15.0" fill="rgb(215,80,0)" rx="2" ry="2" />
<text  x="144.36" y="1871.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%)</title><rect x="105.2" y="1781" width="0.4" height="15.0" fill="rgb(212,62,6)" rx="2" ry="2" />
<text  x="108.20" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%)</title><rect x="45.4" y="261" width="0.4" height="15.0" fill="rgb(205,35,9)" rx="2" ry="2" />
<text  x="48.42" y="271.5" ></text>
</g>
<g >
<title>__start_context (13 samples, 0.41%)</title><rect x="52.1" y="645" width="4.8" height="15.0" fill="rgb(250,175,29)" rx="2" ry="2" />
<text  x="55.06" y="655.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (251 samples, 7.85%)</title><rect x="312.6" y="1621" width="92.6" height="15.0" fill="rgb(210,214,48)" rx="2" ry="2" />
<text  x="315.56" y="1631.5" >partition_s..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (21 samples, 0.66%)</title><rect x="62.4" y="517" width="7.7" height="15.0" fill="rgb(209,79,20)" rx="2" ry="2" />
<text  x="65.40" y="527.5" ></text>
</g>
<g >
<title>secondary_index::secondary_index_manager::list_indexes (1 samples, 0.03%)</title><rect x="102.6" y="1557" width="0.4" height="15.0" fill="rgb(238,200,24)" rx="2" ry="2" />
<text  x="105.61" y="1567.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="103.0" y="1573" width="0.4" height="15.0" fill="rgb(247,66,18)" rx="2" ry="2" />
<text  x="105.98" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1,255 samples, 39.24%)</title><rect x="194.5" y="1749" width="463.1" height="15.0" fill="rgb(220,181,39)" rx="2" ry="2" />
<text  x="197.49" y="1759.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>cql3_parser::CqlParser::query (92 samples, 2.88%)</title><rect x="16.6" y="453" width="34.0" height="15.0" fill="rgb(229,139,14)" rx="2" ry="2" />
<text  x="19.64" y="463.5" >cq..</text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (2 samples, 0.06%)</title><rect x="96.3" y="597" width="0.8" height="15.0" fill="rgb(227,16,41)" rx="2" ry="2" />
<text  x="99.34" y="607.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%)</title><rect x="130.7" y="1509" width="0.3" height="15.0" fill="rgb(219,39,13)" rx="2" ry="2" />
<text  x="133.66" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (13 samples, 0.41%)</title><rect x="134.0" y="1605" width="4.8" height="15.0" fill="rgb(228,131,30)" rx="2" ry="2" />
<text  x="136.98" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.03%)</title><rect x="55.8" y="309" width="0.3" height="15.0" fill="rgb(210,6,16)" rx="2" ry="2" />
<text  x="58.75" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_type_statement, std::default_delete&lt;cql3::statements::create_type_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="98.2" y="613" width="0.4" height="15.0" fill="rgb(208,175,4)" rx="2" ry="2" />
<text  x="101.19" y="623.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%)</title><rect x="1112.9" y="1573" width="0.4" height="15.0" fill="rgb(205,167,49)" rx="2" ry="2" />
<text  x="1115.88" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (14 samples, 0.44%)</title><rect x="74.9" y="725" width="5.2" height="15.0" fill="rgb(208,173,40)" rx="2" ry="2" />
<text  x="77.94" y="735.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::selectStatement (1 samples, 0.03%)</title><rect x="151.3" y="1589" width="0.4" height="15.0" fill="rgb(238,69,51)" rx="2" ry="2" />
<text  x="154.32" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="134.3" y="1397" width="0.4" height="15.0" fill="rgb(248,182,47)" rx="2" ry="2" />
<text  x="137.35" y="1407.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="141.0" y="1861" width="0.4" height="15.0" fill="rgb(233,189,36)" rx="2" ry="2" />
<text  x="143.99" y="1871.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%)</title><rect x="79.7" y="469" width="0.4" height="15.0" fill="rgb(213,134,34)" rx="2" ry="2" />
<text  x="82.74" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%)</title><rect x="151.3" y="1621" width="0.4" height="15.0" fill="rgb(242,136,44)" rx="2" ry="2" />
<text  x="154.32" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%)</title><rect x="132.5" y="1605" width="0.7" height="15.0" fill="rgb(210,170,34)" rx="2" ry="2" />
<text  x="135.50" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.09%)</title><rect x="78.3" y="357" width="1.1" height="15.0" fill="rgb(226,33,41)" rx="2" ry="2" />
<text  x="81.26" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (7 samples, 0.22%)</title><rect x="77.5" y="517" width="2.6" height="15.0" fill="rgb(250,216,1)" rx="2" ry="2" />
<text  x="80.52" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="68.7" y="229" width="0.3" height="15.0" fill="rgb(221,218,12)" rx="2" ry="2" />
<text  x="71.67" y="239.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="325.1" y="1589" width="0.4" height="15.0" fill="rgb(211,119,28)" rx="2" ry="2" />
<text  x="328.11" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%)</title><rect x="404.8" y="1605" width="0.4" height="15.0" fill="rgb(216,221,10)" rx="2" ry="2" />
<text  x="407.81" y="1615.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="87.9" y="341" width="0.3" height="15.0" fill="rgb(238,184,4)" rx="2" ry="2" />
<text  x="90.85" y="351.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (3 samples, 0.09%)</title><rect x="145.8" y="1845" width="1.1" height="15.0" fill="rgb(227,32,1)" rx="2" ry="2" />
<text  x="148.78" y="1855.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (5 samples, 0.16%)</title><rect x="45.4" y="357" width="1.9" height="15.0" fill="rgb(246,209,54)" rx="2" ry="2" />
<text  x="48.42" y="367.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%)</title><rect x="355.7" y="1525" width="0.4" height="15.0" fill="rgb(231,196,25)" rx="2" ry="2" />
<text  x="358.73" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="70.9" y="437" width="0.4" height="15.0" fill="rgb(205,179,36)" rx="2" ry="2" />
<text  x="73.88" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.03%)</title><rect x="63.1" y="309" width="0.4" height="15.0" fill="rgb(248,93,14)" rx="2" ry="2" />
<text  x="66.13" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%)</title><rect x="59.1" y="357" width="0.7" height="15.0" fill="rgb(242,134,48)" rx="2" ry="2" />
<text  x="62.07" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%)</title><rect x="48.0" y="293" width="0.4" height="15.0" fill="rgb(243,56,28)" rx="2" ry="2" />
<text  x="51.01" y="303.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%)</title><rect x="182.3" y="1669" width="0.4" height="15.0" fill="rgb(244,50,6)" rx="2" ry="2" />
<text  x="185.31" y="1679.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (2 samples, 0.06%)</title><rect x="46.5" y="133" width="0.8" height="15.0" fill="rgb(206,90,37)" rx="2" ry="2" />
<text  x="49.53" y="143.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="66.1" y="309" width="0.4" height="15.0" fill="rgb(208,144,54)" rx="2" ry="2" />
<text  x="69.09" y="319.5" ></text>
</g>
<g >
<title>__start_context (7 samples, 0.22%)</title><rect x="149.5" y="1877" width="2.6" height="15.0" fill="rgb(254,200,43)" rx="2" ry="2" />
<text  x="152.47" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%)</title><rect x="217.0" y="1701" width="0.4" height="15.0" fill="rgb(212,91,38)" rx="2" ry="2" />
<text  x="220.00" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="864.9" y="1589" width="0.4" height="15.0" fill="rgb(250,16,16)" rx="2" ry="2" />
<text  x="867.93" y="1599.5" ></text>
</g>
<g >
<title>dht::maximum_token (1 samples, 0.03%)</title><rect x="564.6" y="1637" width="0.3" height="15.0" fill="rgb(218,135,19)" rx="2" ry="2" />
<text  x="567.58" y="1647.5" ></text>
</g>
<g >
<title>db::schema_tables::diff_table_or_view (3 samples, 0.09%)</title><rect x="183.1" y="1733" width="1.1" height="15.0" fill="rgb(221,198,11)" rx="2" ry="2" />
<text  x="186.05" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="128.4" y="1413" width="0.4" height="15.0" fill="rgb(246,31,49)" rx="2" ry="2" />
<text  x="131.44" y="1423.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.03%)</title><rect x="223.6" y="1701" width="0.4" height="15.0" fill="rgb(235,173,16)" rx="2" ry="2" />
<text  x="226.64" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%)</title><rect x="839.5" y="1685" width="2.2" height="15.0" fill="rgb(254,90,47)" rx="2" ry="2" />
<text  x="842.47" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator* (1 samples, 0.03%)</title><rect x="128.8" y="1413" width="0.4" height="15.0" fill="rgb(243,66,15)" rx="2" ry="2" />
<text  x="131.81" y="1423.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="59.1" y="245" width="0.3" height="15.0" fill="rgb(245,6,51)" rx="2" ry="2" />
<text  x="62.07" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="76.4" y="325" width="0.4" height="15.0" fill="rgb(205,41,50)" rx="2" ry="2" />
<text  x="79.42" y="335.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (3 samples, 0.09%)</title><rect x="321.8" y="1573" width="1.1" height="15.0" fill="rgb(206,202,45)" rx="2" ry="2" />
<text  x="324.79" y="1583.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::set_errorRecovery (1 samples, 0.03%)</title><rect x="97.4" y="597" width="0.4" height="15.0" fill="rgb(254,170,51)" rx="2" ry="2" />
<text  x="100.45" y="607.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (2 samples, 0.06%)</title><rect x="915.1" y="1669" width="0.7" height="15.0" fill="rgb(219,130,31)" rx="2" ry="2" />
<text  x="918.11" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%)</title><rect x="122.2" y="1541" width="0.3" height="15.0" fill="rgb(236,92,48)" rx="2" ry="2" />
<text  x="125.17" y="1551.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_keyspaces (1 samples, 0.03%)</title><rect x="182.7" y="1653" width="0.4" height="15.0" fill="rgb(208,180,45)" rx="2" ry="2" />
<text  x="185.68" y="1663.5" ></text>
</g>
<g >
<title>__pthread_once (1 samples, 0.03%)</title><rect x="183.1" y="1621" width="0.3" height="15.0" fill="rgb(245,218,45)" rx="2" ry="2" />
<text  x="186.05" y="1631.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_state (1 samples, 0.03%)</title><rect x="41.0" y="389" width="0.4" height="15.0" fill="rgb(253,42,15)" rx="2" ry="2" />
<text  x="43.99" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%)</title><rect x="111.5" y="1477" width="0.7" height="15.0" fill="rgb(248,202,11)" rx="2" ry="2" />
<text  x="114.47" y="1487.5" ></text>
</g>
<g >
<title>memtable::apply (14 samples, 0.44%)</title><rect x="1098.5" y="1637" width="5.2" height="15.0" fill="rgb(231,70,34)" rx="2" ry="2" />
<text  x="1101.49" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.03%)</title><rect x="863.5" y="1573" width="0.3" height="15.0" fill="rgb(215,108,34)" rx="2" ry="2" />
<text  x="866.45" y="1583.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%)</title><rect x="1098.9" y="1621" width="0.3" height="15.0" fill="rgb(230,1,22)" rx="2" ry="2" />
<text  x="1101.86" y="1631.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%)</title><rect x="64.2" y="405" width="0.8" height="15.0" fill="rgb(240,14,24)" rx="2" ry="2" />
<text  x="67.24" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_move_assign (1 samples, 0.03%)</title><rect x="43.2" y="309" width="0.4" height="15.0" fill="rgb(252,75,38)" rx="2" ry="2" />
<text  x="46.21" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%)</title><rect x="73.8" y="373" width="0.4" height="15.0" fill="rgb(249,190,54)" rx="2" ry="2" />
<text  x="76.83" y="383.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="52.1" y="277" width="0.3" height="15.0" fill="rgb(236,27,31)" rx="2" ry="2" />
<text  x="55.06" y="287.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%)</title><rect x="98.6" y="789" width="0.3" height="15.0" fill="rgb(242,221,0)" rx="2" ry="2" />
<text  x="101.56" y="799.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%)</title><rect x="98.9" y="805" width="0.4" height="15.0" fill="rgb(243,173,22)" rx="2" ry="2" />
<text  x="101.92" y="815.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (13 samples, 0.41%)</title><rect x="70.1" y="597" width="4.8" height="15.0" fill="rgb(221,162,44)" rx="2" ry="2" />
<text  x="73.14" y="607.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (11 samples, 0.34%)</title><rect x="859.0" y="1621" width="4.1" height="15.0" fill="rgb(248,54,6)" rx="2" ry="2" />
<text  x="862.02" y="1631.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (2 samples, 0.06%)</title><rect x="121.1" y="1477" width="0.7" height="15.0" fill="rgb(221,11,52)" rx="2" ry="2" />
<text  x="124.06" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="134.7" y="1413" width="1.1" height="15.0" fill="rgb(247,0,19)" rx="2" ry="2" />
<text  x="137.72" y="1423.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.03%)</title><rect x="69.4" y="357" width="0.4" height="15.0" fill="rgb(209,194,22)" rx="2" ry="2" />
<text  x="72.41" y="367.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="153.2" y="1797" width="0.3" height="15.0" fill="rgb(240,69,52)" rx="2" ry="2" />
<text  x="156.16" y="1807.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.13%)</title><rect x="747.6" y="1765" width="1.5" height="15.0" fill="rgb(241,28,38)" rx="2" ry="2" />
<text  x="750.59" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="847.2" y="1717" width="0.4" height="15.0" fill="rgb(208,125,16)" rx="2" ry="2" />
<text  x="850.22" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="111.8" y="1429" width="0.4" height="15.0" fill="rgb(246,183,29)" rx="2" ry="2" />
<text  x="114.84" y="1439.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (2 samples, 0.06%)</title><rect x="717.0" y="1733" width="0.7" height="15.0" fill="rgb(226,64,24)" rx="2" ry="2" />
<text  x="719.97" y="1743.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (7 samples, 0.22%)</title><rect x="101.1" y="1653" width="2.6" height="15.0" fill="rgb(205,93,9)" rx="2" ry="2" />
<text  x="104.14" y="1663.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.03%)</title><rect x="878.2" y="1685" width="0.4" height="15.0" fill="rgb(210,54,21)" rx="2" ry="2" />
<text  x="881.21" y="1695.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::operator= (1 samples, 0.03%)</title><rect x="43.2" y="373" width="0.4" height="15.0" fill="rgb(207,229,36)" rx="2" ry="2" />
<text  x="46.21" y="383.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (1 samples, 0.03%)</title><rect x="1153.1" y="1733" width="0.4" height="15.0" fill="rgb(245,190,30)" rx="2" ry="2" />
<text  x="1156.10" y="1743.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.31%)</title><rect x="536.9" y="1669" width="3.7" height="15.0" fill="rgb(248,115,30)" rx="2" ry="2" />
<text  x="539.90" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1077" width="88.6" height="15.0" fill="rgb(218,122,49)" rx="2" ry="2" />
<text  x="14.11" y="1087.5" >[unknown]</text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%)</title><rect x="74.9" y="373" width="0.4" height="15.0" fill="rgb(248,149,37)" rx="2" ry="2" />
<text  x="77.94" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.03%)</title><rect x="107.0" y="1797" width="0.4" height="15.0" fill="rgb(213,68,20)" rx="2" ry="2" />
<text  x="110.04" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (7 samples, 0.22%)</title><rect x="118.1" y="1445" width="2.6" height="15.0" fill="rgb(251,166,1)" rx="2" ry="2" />
<text  x="121.11" y="1455.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%)</title><rect x="69.4" y="277" width="0.4" height="15.0" fill="rgb(207,96,43)" rx="2" ry="2" />
<text  x="72.41" y="287.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%)</title><rect x="407.0" y="1653" width="2.6" height="15.0" fill="rgb(243,54,15)" rx="2" ry="2" />
<text  x="410.02" y="1663.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%)</title><rect x="123.6" y="1397" width="1.5" height="15.0" fill="rgb(214,177,8)" rx="2" ry="2" />
<text  x="126.65" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="78.6" y="277" width="0.4" height="15.0" fill="rgb(247,187,45)" rx="2" ry="2" />
<text  x="81.63" y="287.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%)</title><rect x="349.8" y="1557" width="0.4" height="15.0" fill="rgb(254,174,28)" rx="2" ry="2" />
<text  x="352.83" y="1567.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (15 samples, 0.47%)</title><rect x="56.9" y="629" width="5.5" height="15.0" fill="rgb(207,23,54)" rx="2" ry="2" />
<text  x="59.86" y="639.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="48.0" y="197" width="0.4" height="15.0" fill="rgb(228,151,16)" rx="2" ry="2" />
<text  x="51.01" y="207.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (7 samples, 0.22%)</title><rect x="309.6" y="1621" width="2.6" height="15.0" fill="rgb(238,10,45)" rx="2" ry="2" />
<text  x="312.61" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="151.3" y="1429" width="0.4" height="15.0" fill="rgb(229,153,20)" rx="2" ry="2" />
<text  x="154.32" y="1439.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%)</title><rect x="1141.3" y="1749" width="0.7" height="15.0" fill="rgb(230,153,31)" rx="2" ry="2" />
<text  x="1144.29" y="1759.5" ></text>
</g>
<g >
<title>[[vdso]] (26 samples, 0.81%)</title><rect x="1159.0" y="1877" width="9.6" height="15.0" fill="rgb(244,158,12)" rx="2" ry="2" />
<text  x="1162.01" y="1887.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%)</title><rect x="98.9" y="821" width="0.4" height="15.0" fill="rgb(243,5,11)" rx="2" ry="2" />
<text  x="101.92" y="831.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (6 samples, 0.19%)</title><rect x="75.3" y="517" width="2.2" height="15.0" fill="rgb(249,222,43)" rx="2" ry="2" />
<text  x="78.31" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (3 samples, 0.09%)</title><rect x="855.3" y="1765" width="1.1" height="15.0" fill="rgb(224,110,6)" rx="2" ry="2" />
<text  x="858.33" y="1775.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (2 samples, 0.06%)</title><rect x="107.8" y="1765" width="0.7" height="15.0" fill="rgb(236,176,6)" rx="2" ry="2" />
<text  x="110.78" y="1775.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (1 samples, 0.03%)</title><rect x="1029.9" y="1621" width="0.3" height="15.0" fill="rgb(242,149,52)" rx="2" ry="2" />
<text  x="1032.86" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="130.3" y="1461" width="0.4" height="15.0" fill="rgb(234,24,16)" rx="2" ry="2" />
<text  x="133.29" y="1471.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (11 samples, 0.34%)</title><rect x="116.6" y="1509" width="4.1" height="15.0" fill="rgb(213,148,44)" rx="2" ry="2" />
<text  x="119.64" y="1519.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%)</title><rect x="110.0" y="1573" width="0.4" height="15.0" fill="rgb(232,94,51)" rx="2" ry="2" />
<text  x="112.99" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="134.7" y="1349" width="0.4" height="15.0" fill="rgb(206,182,23)" rx="2" ry="2" />
<text  x="137.72" y="1359.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="186.0" y="1765" width="1.1" height="15.0" fill="rgb(217,101,35)" rx="2" ry="2" />
<text  x="189.00" y="1775.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (5 samples, 0.16%)</title><rect x="722.5" y="1749" width="1.8" height="15.0" fill="rgb(209,108,0)" rx="2" ry="2" />
<text  x="725.50" y="1759.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%)</title><rect x="101.9" y="1589" width="0.3" height="15.0" fill="rgb(249,214,45)" rx="2" ry="2" />
<text  x="104.88" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="88.2" y="453" width="0.8" height="15.0" fill="rgb(213,46,2)" rx="2" ry="2" />
<text  x="91.22" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%)</title><rect x="97.8" y="597" width="0.4" height="15.0" fill="rgb(217,22,16)" rx="2" ry="2" />
<text  x="100.82" y="607.5" ></text>
</g>
<g >
<title>[unknown] (237 samples, 7.41%)</title><rect x="11.1" y="853" width="87.5" height="15.0" fill="rgb(231,115,43)" rx="2" ry="2" />
<text  x="14.11" y="863.5" >[unknown]</text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (4 samples, 0.13%)</title><rect x="1109.6" y="1573" width="1.4" height="15.0" fill="rgb(248,107,2)" rx="2" ry="2" />
<text  x="1112.56" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.09%)</title><rect x="64.2" y="453" width="1.1" height="15.0" fill="rgb(215,42,6)" rx="2" ry="2" />
<text  x="67.24" y="463.5" ></text>
</g>
<g >
<title>[unknown] (173 samples, 5.41%)</title><rect x="11.1" y="725" width="63.8" height="15.0" fill="rgb(227,142,40)" rx="2" ry="2" />
<text  x="14.11" y="735.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (3 samples, 0.09%)</title><rect x="150.2" y="1829" width="1.1" height="15.0" fill="rgb(206,7,2)" rx="2" ry="2" />
<text  x="153.21" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="73.5" y="229" width="0.3" height="15.0" fill="rgb(246,151,0)" rx="2" ry="2" />
<text  x="76.46" y="239.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="59.1" y="213" width="0.3" height="15.0" fill="rgb(208,141,0)" rx="2" ry="2" />
<text  x="62.07" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="61.7" y="357" width="0.3" height="15.0" fill="rgb(236,191,42)" rx="2" ry="2" />
<text  x="64.66" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%)</title><rect x="48.0" y="229" width="0.4" height="15.0" fill="rgb(238,195,23)" rx="2" ry="2" />
<text  x="51.01" y="239.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%)</title><rect x="45.1" y="357" width="0.3" height="15.0" fill="rgb(205,84,50)" rx="2" ry="2" />
<text  x="48.05" y="367.5" ></text>
</g>
<g >
<title>database::apply_in_memory (15 samples, 0.47%)</title><rect x="1098.5" y="1669" width="5.5" height="15.0" fill="rgb(249,17,14)" rx="2" ry="2" />
<text  x="1101.49" y="1679.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::size (1 samples, 0.03%)</title><rect x="860.9" y="1557" width="0.3" height="15.0" fill="rgb(244,147,10)" rx="2" ry="2" />
<text  x="863.87" y="1567.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="98.6" y="645" width="0.3" height="15.0" fill="rgb(226,166,15)" rx="2" ry="2" />
<text  x="101.56" y="655.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::native_value_clone_visitor&gt; (1 samples, 0.03%)</title><rect x="183.8" y="1573" width="0.4" height="15.0" fill="rgb(253,74,5)" rx="2" ry="2" />
<text  x="186.79" y="1583.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (5 samples, 0.16%)</title><rect x="217.4" y="1701" width="1.8" height="15.0" fill="rgb(214,125,39)" rx="2" ry="2" />
<text  x="220.37" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%)</title><rect x="1136.1" y="1733" width="2.6" height="15.0" fill="rgb(254,56,32)" rx="2" ry="2" />
<text  x="1139.13" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%)</title><rect x="52.8" y="245" width="0.7" height="15.0" fill="rgb(249,188,7)" rx="2" ry="2" />
<text  x="55.80" y="255.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7 samples, 0.22%)</title><rect x="816.2" y="1605" width="2.6" height="15.0" fill="rgb(239,10,50)" rx="2" ry="2" />
<text  x="819.22" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%)</title><rect x="96.7" y="421" width="0.4" height="15.0" fill="rgb(238,173,37)" rx="2" ry="2" />
<text  x="99.71" y="431.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (37 samples, 1.16%)</title><rect x="468.3" y="1637" width="13.6" height="15.0" fill="rgb(233,68,16)" rx="2" ry="2" />
<text  x="471.27" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1349" width="88.6" height="15.0" fill="rgb(228,127,2)" rx="2" ry="2" />
<text  x="14.11" y="1359.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="132.9" y="1525" width="0.3" height="15.0" fill="rgb(206,116,43)" rx="2" ry="2" />
<text  x="135.87" y="1535.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="72.4" y="309" width="0.3" height="15.0" fill="rgb(209,194,14)" rx="2" ry="2" />
<text  x="75.36" y="319.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%)</title><rect x="151.3" y="1509" width="0.4" height="15.0" fill="rgb(240,170,53)" rx="2" ry="2" />
<text  x="154.32" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="140.6" y="1813" width="0.4" height="15.0" fill="rgb(222,208,35)" rx="2" ry="2" />
<text  x="143.62" y="1823.5" ></text>
</g>
<g >
<title>service::client_state::has_access (75 samples, 2.35%)</title><rect x="800.0" y="1669" width="27.7" height="15.0" fill="rgb(238,139,30)" rx="2" ry="2" />
<text  x="802.99" y="1679.5" >s..</text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_Deque_base (3 samples, 0.09%)</title><rect x="15.5" y="341" width="1.1" height="15.0" fill="rgb(242,182,17)" rx="2" ry="2" />
<text  x="18.53" y="351.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="132.9" y="1541" width="0.3" height="15.0" fill="rgb(218,214,48)" rx="2" ry="2" />
<text  x="135.87" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%)</title><rect x="111.5" y="1461" width="0.7" height="15.0" fill="rgb(248,97,15)" rx="2" ry="2" />
<text  x="114.47" y="1471.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (2 samples, 0.06%)</title><rect x="717.0" y="1749" width="0.7" height="15.0" fill="rgb(220,102,4)" rx="2" ry="2" />
<text  x="719.97" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%)</title><rect x="826.9" y="1637" width="0.8" height="15.0" fill="rgb(254,139,5)" rx="2" ry="2" />
<text  x="829.92" y="1647.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="135.5" y="1381" width="0.3" height="15.0" fill="rgb(224,17,50)" rx="2" ry="2" />
<text  x="138.45" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="642.8" y="1621" width="0.4" height="15.0" fill="rgb(233,173,4)" rx="2" ry="2" />
<text  x="645.80" y="1631.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (2 samples, 0.06%)</title><rect x="1054.6" y="1589" width="0.7" height="15.0" fill="rgb(239,139,48)" rx="2" ry="2" />
<text  x="1057.58" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_end (1 samples, 0.03%)</title><rect x="746.1" y="1749" width="0.4" height="15.0" fill="rgb(216,209,42)" rx="2" ry="2" />
<text  x="749.12" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (5 samples, 0.16%)</title><rect x="82.7" y="549" width="1.8" height="15.0" fill="rgb(240,180,8)" rx="2" ry="2" />
<text  x="85.69" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="71.3" y="389" width="0.3" height="15.0" fill="rgb(230,228,33)" rx="2" ry="2" />
<text  x="74.25" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (4 samples, 0.13%)</title><rect x="27.7" y="293" width="1.5" height="15.0" fill="rgb(218,114,32)" rx="2" ry="2" />
<text  x="30.71" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="50.2" y="405" width="0.4" height="15.0" fill="rgb(221,140,28)" rx="2" ry="2" />
<text  x="53.22" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="1111.0" y="1621" width="0.4" height="15.0" fill="rgb(208,188,0)" rx="2" ry="2" />
<text  x="1114.04" y="1631.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.03%)</title><rect x="1029.1" y="1589" width="0.4" height="15.0" fill="rgb(220,162,21)" rx="2" ry="2" />
<text  x="1032.12" y="1599.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%)</title><rect x="131.0" y="1509" width="0.4" height="15.0" fill="rgb(226,177,54)" rx="2" ry="2" />
<text  x="134.03" y="1519.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%)</title><rect x="541.0" y="1669" width="0.3" height="15.0" fill="rgb(253,222,24)" rx="2" ry="2" />
<text  x="543.96" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%)</title><rect x="512.2" y="1669" width="0.7" height="15.0" fill="rgb(224,149,6)" rx="2" ry="2" />
<text  x="515.18" y="1679.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%)</title><rect x="35.8" y="261" width="0.4" height="15.0" fill="rgb(239,7,12)" rx="2" ry="2" />
<text  x="38.83" y="271.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_M_head (1 samples, 0.03%)</title><rect x="60.6" y="245" width="0.3" height="15.0" fill="rgb(243,160,50)" rx="2" ry="2" />
<text  x="63.55" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="124.8" y="1365" width="0.3" height="15.0" fill="rgb(252,179,17)" rx="2" ry="2" />
<text  x="127.75" y="1375.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="44.7" y="309" width="0.4" height="15.0" fill="rgb(249,8,17)" rx="2" ry="2" />
<text  x="47.68" y="319.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (4 samples, 0.13%)</title><rect x="33.2" y="293" width="1.5" height="15.0" fill="rgb(241,176,52)" rx="2" ry="2" />
<text  x="36.25" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="85.6" y="549" width="0.4" height="15.0" fill="rgb(242,32,36)" rx="2" ry="2" />
<text  x="88.64" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="73.1" y="357" width="0.4" height="15.0" fill="rgb(233,120,35)" rx="2" ry="2" />
<text  x="76.10" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="73.5" y="341" width="0.3" height="15.0" fill="rgb(241,21,39)" rx="2" ry="2" />
<text  x="76.46" y="351.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%)</title><rect x="98.6" y="741" width="0.3" height="15.0" fill="rgb(213,74,33)" rx="2" ry="2" />
<text  x="101.56" y="751.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (1 samples, 0.03%)</title><rect x="395.6" y="1589" width="0.4" height="15.0" fill="rgb(254,141,1)" rx="2" ry="2" />
<text  x="398.58" y="1599.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (3 samples, 0.09%)</title><rect x="964.2" y="1605" width="1.1" height="15.0" fill="rgb(209,84,16)" rx="2" ry="2" />
<text  x="967.18" y="1615.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%)</title><rect x="99.3" y="933" width="0.4" height="15.0" fill="rgb(232,85,47)" rx="2" ry="2" />
<text  x="102.29" y="943.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="71.3" y="357" width="0.3" height="15.0" fill="rgb(209,70,53)" rx="2" ry="2" />
<text  x="74.25" y="367.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%)</title><rect x="795.9" y="1669" width="1.9" height="15.0" fill="rgb(238,49,53)" rx="2" ry="2" />
<text  x="798.93" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1157" width="88.6" height="15.0" fill="rgb(236,96,6)" rx="2" ry="2" />
<text  x="14.11" y="1167.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="74.9" y="453" width="0.4" height="15.0" fill="rgb(231,84,24)" rx="2" ry="2" />
<text  x="77.94" y="463.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.06%)</title><rect x="75.3" y="373" width="0.7" height="15.0" fill="rgb(231,110,3)" rx="2" ry="2" />
<text  x="78.31" y="383.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (1 samples, 0.03%)</title><rect x="857.2" y="1653" width="0.3" height="15.0" fill="rgb(215,23,2)" rx="2" ry="2" />
<text  x="860.18" y="1663.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (9 samples, 0.28%)</title><rect x="700.4" y="1749" width="3.3" height="15.0" fill="rgb(240,200,43)" rx="2" ry="2" />
<text  x="703.36" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%)</title><rect x="73.5" y="277" width="0.3" height="15.0" fill="rgb(211,87,2)" rx="2" ry="2" />
<text  x="76.46" y="287.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.03%)</title><rect x="1101.4" y="1589" width="0.4" height="15.0" fill="rgb(237,210,11)" rx="2" ry="2" />
<text  x="1104.44" y="1599.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="53.5" y="229" width="0.4" height="15.0" fill="rgb(211,164,19)" rx="2" ry="2" />
<text  x="56.54" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="721.4" y="1733" width="0.7" height="15.0" fill="rgb(248,206,29)" rx="2" ry="2" />
<text  x="724.39" y="1743.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (3 samples, 0.09%)</title><rect x="893.3" y="1573" width="1.1" height="15.0" fill="rgb(224,215,20)" rx="2" ry="2" />
<text  x="896.34" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="111.8" y="1333" width="0.4" height="15.0" fill="rgb(240,67,37)" rx="2" ry="2" />
<text  x="114.84" y="1343.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%)</title><rect x="1048.7" y="1589" width="2.9" height="15.0" fill="rgb(205,105,25)" rx="2" ry="2" />
<text  x="1051.68" y="1599.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (15 samples, 0.47%)</title><rect x="56.9" y="549" width="5.5" height="15.0" fill="rgb(245,126,13)" rx="2" ry="2" />
<text  x="59.86" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="52.1" y="325" width="0.3" height="15.0" fill="rgb(229,215,25)" rx="2" ry="2" />
<text  x="55.06" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (8 samples, 0.25%)</title><rect x="117.7" y="1461" width="3.0" height="15.0" fill="rgb(223,124,53)" rx="2" ry="2" />
<text  x="120.74" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="72.4" y="357" width="0.3" height="15.0" fill="rgb(241,22,9)" rx="2" ry="2" />
<text  x="75.36" y="367.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%)</title><rect x="111.5" y="1509" width="0.7" height="15.0" fill="rgb(207,116,4)" rx="2" ry="2" />
<text  x="114.47" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1733" width="88.6" height="15.0" fill="rgb(245,192,43)" rx="2" ry="2" />
<text  x="14.11" y="1743.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="66.8" y="389" width="0.4" height="15.0" fill="rgb(245,173,18)" rx="2" ry="2" />
<text  x="69.82" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (25 samples, 0.78%)</title><rect x="888.5" y="1605" width="9.3" height="15.0" fill="rgb(214,189,2)" rx="2" ry="2" />
<text  x="891.54" y="1615.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (3 samples, 0.09%)</title><rect x="104.1" y="1669" width="1.1" height="15.0" fill="rgb(207,101,5)" rx="2" ry="2" />
<text  x="107.09" y="1679.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="60.6" y="277" width="0.3" height="15.0" fill="rgb(228,137,37)" rx="2" ry="2" />
<text  x="63.55" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%)</title><rect x="132.5" y="1573" width="0.4" height="15.0" fill="rgb(230,108,42)" rx="2" ry="2" />
<text  x="135.50" y="1583.5" ></text>
</g>
<g >
<title>db::block_for (2 samples, 0.06%)</title><rect x="1046.1" y="1605" width="0.7" height="15.0" fill="rgb(212,219,17)" rx="2" ry="2" />
<text  x="1049.10" y="1615.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%)</title><rect x="66.8" y="421" width="0.4" height="15.0" fill="rgb(230,162,50)" rx="2" ry="2" />
<text  x="69.82" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (6 samples, 0.19%)</title><rect x="112.9" y="1525" width="2.3" height="15.0" fill="rgb(217,71,48)" rx="2" ry="2" />
<text  x="115.95" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="42.1" y="213" width="0.4" height="15.0" fill="rgb(221,59,11)" rx="2" ry="2" />
<text  x="45.10" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.03%)</title><rect x="70.5" y="453" width="0.4" height="15.0" fill="rgb(212,145,31)" rx="2" ry="2" />
<text  x="73.51" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%)</title><rect x="60.2" y="261" width="0.4" height="15.0" fill="rgb(226,61,6)" rx="2" ry="2" />
<text  x="63.18" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="153.2" y="1589" width="0.3" height="15.0" fill="rgb(227,72,39)" rx="2" ry="2" />
<text  x="156.16" y="1599.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="421.0" y="1685" width="0.4" height="15.0" fill="rgb(251,133,30)" rx="2" ry="2" />
<text  x="424.04" y="1695.5" ></text>
</g>
<g >
<title>__start_context (15 samples, 0.47%)</title><rect x="99.7" y="1797" width="5.5" height="15.0" fill="rgb(243,181,28)" rx="2" ry="2" />
<text  x="102.66" y="1807.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%)</title><rect x="10.7" y="1861" width="0.4" height="15.0" fill="rgb(240,124,14)" rx="2" ry="2" />
<text  x="13.74" y="1871.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.03%)</title><rect x="69.4" y="309" width="0.4" height="15.0" fill="rgb(208,221,39)" rx="2" ry="2" />
<text  x="72.41" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.03%)</title><rect x="182.3" y="1717" width="0.4" height="15.0" fill="rgb(225,54,42)" rx="2" ry="2" />
<text  x="185.31" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="124.0" y="1333" width="0.4" height="15.0" fill="rgb(243,223,7)" rx="2" ry="2" />
<text  x="127.02" y="1343.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="865.7" y="1653" width="0.3" height="15.0" fill="rgb(228,69,30)" rx="2" ry="2" />
<text  x="868.67" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (7 samples, 0.22%)</title><rect x="112.6" y="1573" width="2.6" height="15.0" fill="rgb(205,61,4)" rx="2" ry="2" />
<text  x="115.58" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (2 samples, 0.06%)</title><rect x="96.3" y="613" width="0.8" height="15.0" fill="rgb(240,167,36)" rx="2" ry="2" />
<text  x="99.34" y="623.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="53.5" y="341" width="0.4" height="15.0" fill="rgb(212,170,2)" rx="2" ry="2" />
<text  x="56.54" y="351.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%)</title><rect x="1100.0" y="1573" width="0.3" height="15.0" fill="rgb(245,38,35)" rx="2" ry="2" />
<text  x="1102.97" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%)</title><rect x="74.6" y="437" width="0.3" height="15.0" fill="rgb(225,57,15)" rx="2" ry="2" />
<text  x="77.57" y="447.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1253" width="88.6" height="15.0" fill="rgb(209,12,54)" rx="2" ry="2" />
<text  x="14.11" y="1263.5" >[unknown]</text>
</g>
<g >
<title>database::find_column_family (3 samples, 0.09%)</title><rect x="1040.9" y="1605" width="1.1" height="15.0" fill="rgb(251,202,50)" rx="2" ry="2" />
<text  x="1043.93" y="1615.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;**&gt;::allocate (1 samples, 0.03%)</title><rect x="15.5" y="293" width="0.4" height="15.0" fill="rgb(250,128,9)" rx="2" ry="2" />
<text  x="18.53" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%)</title><rect x="29.6" y="245" width="0.3" height="15.0" fill="rgb(244,146,14)" rx="2" ry="2" />
<text  x="32.56" y="255.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="216.6" y="1701" width="0.4" height="15.0" fill="rgb(242,119,19)" rx="2" ry="2" />
<text  x="219.63" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="66.8" y="293" width="0.4" height="15.0" fill="rgb(246,13,39)" rx="2" ry="2" />
<text  x="69.82" y="303.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (13 samples, 0.41%)</title><rect x="52.1" y="597" width="4.8" height="15.0" fill="rgb(230,7,54)" rx="2" ry="2" />
<text  x="55.06" y="607.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (4 samples, 0.13%)</title><rect x="82.7" y="533" width="1.5" height="15.0" fill="rgb(241,102,38)" rx="2" ry="2" />
<text  x="85.69" y="543.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.03%)</title><rect x="34.7" y="293" width="0.4" height="15.0" fill="rgb(230,200,52)" rx="2" ry="2" />
<text  x="37.72" y="303.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%)</title><rect x="603.7" y="1637" width="1.5" height="15.0" fill="rgb(219,88,30)" rx="2" ry="2" />
<text  x="606.69" y="1647.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%)</title><rect x="67.6" y="373" width="0.3" height="15.0" fill="rgb(206,218,26)" rx="2" ry="2" />
<text  x="70.56" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="87.9" y="437" width="0.3" height="15.0" fill="rgb(230,206,49)" rx="2" ry="2" />
<text  x="90.85" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (2 samples, 0.06%)</title><rect x="114.1" y="1461" width="0.7" height="15.0" fill="rgb(250,21,30)" rx="2" ry="2" />
<text  x="117.05" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="566.8" y="1621" width="0.4" height="15.0" fill="rgb(205,15,37)" rx="2" ry="2" />
<text  x="569.79" y="1631.5" ></text>
</g>
<g >
<title>std::set&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;::~set (1 samples, 0.03%)</title><rect x="1189.6" y="1893" width="0.4" height="15.0" fill="rgb(222,167,28)" rx="2" ry="2" />
<text  x="1192.63" y="1903.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (3 samples, 0.09%)</title><rect x="348.7" y="1541" width="1.1" height="15.0" fill="rgb(226,34,53)" rx="2" ry="2" />
<text  x="351.72" y="1551.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (14 samples, 0.44%)</title><rect x="100.0" y="1701" width="5.2" height="15.0" fill="rgb(238,4,50)" rx="2" ry="2" />
<text  x="103.03" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (5 samples, 0.16%)</title><rect x="77.5" y="373" width="1.9" height="15.0" fill="rgb(227,69,17)" rx="2" ry="2" />
<text  x="80.52" y="383.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a59683b929e6b30d9803453a6167c92c7df06c25] (1 samples, 0.03%)</title><rect x="732.1" y="1749" width="0.4" height="15.0" fill="rgb(226,228,19)" rx="2" ry="2" />
<text  x="735.10" y="1759.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%)</title><rect x="804.0" y="1653" width="0.4" height="15.0" fill="rgb(223,157,52)" rx="2" ry="2" />
<text  x="807.05" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="151.3" y="1765" width="0.4" height="15.0" fill="rgb(213,26,40)" rx="2" ry="2" />
<text  x="154.32" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1637" width="88.6" height="15.0" fill="rgb(219,165,25)" rx="2" ry="2" />
<text  x="14.11" y="1647.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="130.7" y="1429" width="0.3" height="15.0" fill="rgb(223,40,38)" rx="2" ry="2" />
<text  x="133.66" y="1439.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%)</title><rect x="135.1" y="1301" width="0.4" height="15.0" fill="rgb(244,46,18)" rx="2" ry="2" />
<text  x="138.08" y="1311.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="53.5" y="277" width="0.4" height="15.0" fill="rgb(254,97,5)" rx="2" ry="2" />
<text  x="56.54" y="287.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_metric (1 samples, 0.03%)</title><rect x="153.2" y="1621" width="0.3" height="15.0" fill="rgb(249,112,10)" rx="2" ry="2" />
<text  x="156.16" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (111 samples, 3.47%)</title><rect x="11.1" y="645" width="41.0" height="15.0" fill="rgb(206,192,35)" rx="2" ry="2" />
<text  x="14.11" y="655.5" >[un..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%)</title><rect x="125.5" y="1461" width="0.4" height="15.0" fill="rgb(226,131,7)" rx="2" ry="2" />
<text  x="128.49" y="1471.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.03%)</title><rect x="824.7" y="1621" width="0.4" height="15.0" fill="rgb(250,207,39)" rx="2" ry="2" />
<text  x="827.71" y="1631.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.03%)</title><rect x="1112.9" y="1717" width="0.4" height="15.0" fill="rgb(251,111,8)" rx="2" ry="2" />
<text  x="1115.88" y="1727.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="171.6" y="1717" width="0.4" height="15.0" fill="rgb(235,168,5)" rx="2" ry="2" />
<text  x="174.61" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (21 samples, 0.66%)</title><rect x="41.0" y="421" width="7.7" height="15.0" fill="rgb(220,67,8)" rx="2" ry="2" />
<text  x="43.99" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%)</title><rect x="57.2" y="373" width="0.8" height="15.0" fill="rgb(249,150,13)" rx="2" ry="2" />
<text  x="60.23" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="104.8" y="1605" width="0.4" height="15.0" fill="rgb(238,93,14)" rx="2" ry="2" />
<text  x="107.83" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (24 samples, 0.75%)</title><rect x="888.5" y="1589" width="8.9" height="15.0" fill="rgb(223,153,2)" rx="2" ry="2" />
<text  x="891.54" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="55.0" y="245" width="0.4" height="15.0" fill="rgb(247,201,23)" rx="2" ry="2" />
<text  x="58.02" y="255.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%)</title><rect x="96.3" y="549" width="0.4" height="15.0" fill="rgb(209,55,5)" rx="2" ry="2" />
<text  x="99.34" y="559.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_new_partition (1 samples, 0.03%)</title><rect x="149.8" y="1813" width="0.4" height="15.0" fill="rgb(238,178,54)" rx="2" ry="2" />
<text  x="152.84" y="1823.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%)</title><rect x="735.4" y="1749" width="0.4" height="15.0" fill="rgb(223,34,19)" rx="2" ry="2" />
<text  x="738.42" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (13 samples, 0.41%)</title><rect x="70.1" y="501" width="4.8" height="15.0" fill="rgb(241,161,10)" rx="2" ry="2" />
<text  x="73.14" y="511.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%)</title><rect x="45.1" y="373" width="0.3" height="15.0" fill="rgb(247,98,15)" rx="2" ry="2" />
<text  x="48.05" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (70 samples, 2.19%)</title><rect x="1051.6" y="1605" width="25.9" height="15.0" fill="rgb(239,109,28)" rx="2" ry="2" />
<text  x="1054.63" y="1615.5" >s..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="54.6" y="261" width="0.4" height="15.0" fill="rgb(229,164,37)" rx="2" ry="2" />
<text  x="57.65" y="271.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%)</title><rect x="795.6" y="1669" width="0.3" height="15.0" fill="rgb(207,102,39)" rx="2" ry="2" />
<text  x="798.56" y="1679.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%)</title><rect x="135.1" y="1269" width="0.4" height="15.0" fill="rgb(221,96,33)" rx="2" ry="2" />
<text  x="138.08" y="1279.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%)</title><rect x="131.4" y="1509" width="0.4" height="15.0" fill="rgb(229,160,29)" rx="2" ry="2" />
<text  x="134.39" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.06%)</title><rect x="30.3" y="229" width="0.7" height="15.0" fill="rgb(237,197,44)" rx="2" ry="2" />
<text  x="33.29" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%)</title><rect x="729.9" y="1733" width="0.4" height="15.0" fill="rgb(218,103,9)" rx="2" ry="2" />
<text  x="732.88" y="1743.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="141.0" y="1669" width="0.4" height="15.0" fill="rgb(207,119,10)" rx="2" ry="2" />
<text  x="143.99" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%)</title><rect x="255.0" y="1701" width="2.6" height="15.0" fill="rgb(222,181,28)" rx="2" ry="2" />
<text  x="258.00" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%)</title><rect x="52.8" y="341" width="0.7" height="15.0" fill="rgb(235,221,50)" rx="2" ry="2" />
<text  x="55.80" y="351.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1621" width="88.6" height="15.0" fill="rgb(230,132,2)" rx="2" ry="2" />
<text  x="14.11" y="1631.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="54.6" y="341" width="0.4" height="15.0" fill="rgb(218,167,27)" rx="2" ry="2" />
<text  x="57.65" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="63.9" y="405" width="0.3" height="15.0" fill="rgb(249,40,43)" rx="2" ry="2" />
<text  x="66.87" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.19%)</title><rect x="393.0" y="1589" width="2.2" height="15.0" fill="rgb(239,44,24)" rx="2" ry="2" />
<text  x="396.00" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.03%)</title><rect x="1024.7" y="1541" width="0.4" height="15.0" fill="rgb(241,195,6)" rx="2" ry="2" />
<text  x="1027.70" y="1551.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (18 samples, 0.56%)</title><rect x="212.6" y="1717" width="6.6" height="15.0" fill="rgb(217,124,9)" rx="2" ry="2" />
<text  x="215.57" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (1 samples, 0.03%)</title><rect x="1111.4" y="1749" width="0.4" height="15.0" fill="rgb(233,72,21)" rx="2" ry="2" />
<text  x="1114.41" y="1759.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (372 samples, 11.63%)</title><rect x="275.7" y="1669" width="137.2" height="15.0" fill="rgb(238,99,27)" rx="2" ry="2" />
<text  x="278.67" y="1679.5" >merging_reader&lt;mu..</text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (2,703 samples, 84.52%)</title><rect x="156.5" y="1781" width="997.3" height="15.0" fill="rgb(214,88,12)" rx="2" ry="2" />
<text  x="159.49" y="1791.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="133.2" y="1461" width="0.4" height="15.0" fill="rgb(220,4,17)" rx="2" ry="2" />
<text  x="136.24" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="46.5" y="277" width="0.8" height="15.0" fill="rgb(251,35,34)" rx="2" ry="2" />
<text  x="49.53" y="287.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.03%)</title><rect x="422.5" y="1685" width="0.4" height="15.0" fill="rgb(232,74,29)" rx="2" ry="2" />
<text  x="425.52" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="68.7" y="149" width="0.3" height="15.0" fill="rgb(249,146,25)" rx="2" ry="2" />
<text  x="71.67" y="159.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="63.9" y="437" width="0.3" height="15.0" fill="rgb(233,76,1)" rx="2" ry="2" />
<text  x="66.87" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="138.0" y="1445" width="0.4" height="15.0" fill="rgb(213,160,35)" rx="2" ry="2" />
<text  x="141.04" y="1455.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="72.4" y="437" width="0.3" height="15.0" fill="rgb(253,141,12)" rx="2" ry="2" />
<text  x="75.36" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.03%)</title><rect x="99.3" y="693" width="0.4" height="15.0" fill="rgb(227,168,14)" rx="2" ry="2" />
<text  x="102.29" y="703.5" ></text>
</g>
<g >
<title>rows_entry::memory_usage (1 samples, 0.03%)</title><rect x="151.0" y="1813" width="0.3" height="15.0" fill="rgb(221,142,50)" rx="2" ry="2" />
<text  x="153.95" y="1823.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%)</title><rect x="65.7" y="421" width="0.4" height="15.0" fill="rgb(214,170,49)" rx="2" ry="2" />
<text  x="68.72" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="64.6" y="389" width="0.4" height="15.0" fill="rgb(214,120,19)" rx="2" ry="2" />
<text  x="67.61" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (2 samples, 0.06%)</title><rect x="742.8" y="1717" width="0.7" height="15.0" fill="rgb(217,228,47)" rx="2" ry="2" />
<text  x="745.80" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="111.5" y="1365" width="0.3" height="15.0" fill="rgb(238,95,27)" rx="2" ry="2" />
<text  x="114.47" y="1375.5" ></text>
</g>
<g >
<title>make_combined_reader (35 samples, 1.09%)</title><rect x="559.0" y="1653" width="13.0" height="15.0" fill="rgb(221,96,17)" rx="2" ry="2" />
<text  x="562.04" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="68.3" y="389" width="0.4" height="15.0" fill="rgb(247,226,32)" rx="2" ry="2" />
<text  x="71.30" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator* (1 samples, 0.03%)</title><rect x="59.4" y="261" width="0.4" height="15.0" fill="rgb(252,80,0)" rx="2" ry="2" />
<text  x="62.44" y="271.5" ></text>
</g>
<g >
<title>schema::column_at (4 samples, 0.13%)</title><rect x="466.8" y="1637" width="1.5" height="15.0" fill="rgb(208,131,6)" rx="2" ry="2" />
<text  x="469.80" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (1 samples, 0.03%)</title><rect x="747.2" y="1749" width="0.4" height="15.0" fill="rgb(227,162,6)" rx="2" ry="2" />
<text  x="750.22" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%)</title><rect x="164.6" y="1749" width="1.1" height="15.0" fill="rgb(237,38,10)" rx="2" ry="2" />
<text  x="167.60" y="1759.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.03%)</title><rect x="743.9" y="1733" width="0.4" height="15.0" fill="rgb(230,102,52)" rx="2" ry="2" />
<text  x="746.90" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (6 samples, 0.19%)</title><rect x="118.5" y="1429" width="2.2" height="15.0" fill="rgb(222,97,43)" rx="2" ry="2" />
<text  x="121.48" y="1439.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="72.4" y="325" width="0.3" height="15.0" fill="rgb(238,182,24)" rx="2" ry="2" />
<text  x="75.36" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.06%)</title><rect x="20.0" y="197" width="0.7" height="15.0" fill="rgb(252,219,46)" rx="2" ry="2" />
<text  x="22.96" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (265 samples, 8.29%)</title><rect x="307.4" y="1637" width="97.8" height="15.0" fill="rgb(228,220,14)" rx="2" ry="2" />
<text  x="310.40" y="1647.5" >partition_s..</text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1013" width="88.6" height="15.0" fill="rgb(208,6,46)" rx="2" ry="2" />
<text  x="14.11" y="1023.5" >[unknown]</text>
</g>
<g >
<title>partition_snapshot::static_row (5 samples, 0.16%)</title><rect x="313.3" y="1605" width="1.8" height="15.0" fill="rgb(218,208,43)" rx="2" ry="2" />
<text  x="316.30" y="1615.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.03%)</title><rect x="1102.6" y="1605" width="0.3" height="15.0" fill="rgb(239,130,10)" rx="2" ry="2" />
<text  x="1105.55" y="1615.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (2 samples, 0.06%)</title><rect x="1116.9" y="1765" width="0.8" height="15.0" fill="rgb(238,47,2)" rx="2" ry="2" />
<text  x="1119.94" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1605" width="88.6" height="15.0" fill="rgb(237,77,34)" rx="2" ry="2" />
<text  x="14.11" y="1615.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%)</title><rect x="673.1" y="1749" width="0.3" height="15.0" fill="rgb(207,221,18)" rx="2" ry="2" />
<text  x="676.06" y="1759.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.38%)</title><rect x="921.4" y="1669" width="4.4" height="15.0" fill="rgb(219,157,12)" rx="2" ry="2" />
<text  x="924.38" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (44 samples, 1.38%)</title><rect x="80.1" y="725" width="16.2" height="15.0" fill="rgb(240,70,31)" rx="2" ry="2" />
<text  x="83.11" y="735.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="132.1" y="1541" width="0.4" height="15.0" fill="rgb(248,94,19)" rx="2" ry="2" />
<text  x="135.13" y="1551.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::ensure_entry_if_complete (1 samples, 0.03%)</title><rect x="150.6" y="1813" width="0.4" height="15.0" fill="rgb(249,157,6)" rx="2" ry="2" />
<text  x="153.58" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="72.0" y="341" width="0.4" height="15.0" fill="rgb(230,6,15)" rx="2" ry="2" />
<text  x="74.99" y="351.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%)</title><rect x="141.0" y="1813" width="0.4" height="15.0" fill="rgb(221,128,14)" rx="2" ry="2" />
<text  x="143.99" y="1823.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (7 samples, 0.22%)</title><rect x="18.1" y="293" width="2.6" height="15.0" fill="rgb(216,220,27)" rx="2" ry="2" />
<text  x="21.12" y="303.5" ></text>
</g>
<g >
<title>reconcilable_result_builder::consume (1 samples, 0.03%)</title><rect x="223.6" y="1669" width="0.4" height="15.0" fill="rgb(207,186,1)" rx="2" ry="2" />
<text  x="226.64" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="67.9" y="245" width="0.4" height="15.0" fill="rgb(238,69,23)" rx="2" ry="2" />
<text  x="70.93" y="255.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.03%)</title><rect x="105.2" y="1685" width="0.4" height="15.0" fill="rgb(227,116,1)" rx="2" ry="2" />
<text  x="108.20" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="60.2" y="357" width="0.4" height="15.0" fill="rgb(209,29,44)" rx="2" ry="2" />
<text  x="63.18" y="367.5" ></text>
</g>
<g >
<title>database::has_keyspace (2 samples, 0.06%)</title><rect x="842.8" y="1717" width="0.7" height="15.0" fill="rgb(234,70,52)" rx="2" ry="2" />
<text  x="845.79" y="1727.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (1 samples, 0.03%)</title><rect x="105.2" y="1573" width="0.4" height="15.0" fill="rgb(239,5,37)" rx="2" ry="2" />
<text  x="108.20" y="1583.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%)</title><rect x="717.3" y="1701" width="0.4" height="15.0" fill="rgb(246,228,36)" rx="2" ry="2" />
<text  x="720.34" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1141" width="88.6" height="15.0" fill="rgb(235,46,41)" rx="2" ry="2" />
<text  x="14.11" y="1151.5" >[unknown]</text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="137.7" y="1477" width="0.3" height="15.0" fill="rgb(248,23,34)" rx="2" ry="2" />
<text  x="140.67" y="1487.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="87.9" y="389" width="0.3" height="15.0" fill="rgb(254,157,36)" rx="2" ry="2" />
<text  x="90.85" y="399.5" ></text>
</g>
<g >
<title>__start_context (44 samples, 1.38%)</title><rect x="80.1" y="757" width="16.2" height="15.0" fill="rgb(219,159,52)" rx="2" ry="2" />
<text  x="83.11" y="767.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="66.8" y="341" width="0.4" height="15.0" fill="rgb(238,112,2)" rx="2" ry="2" />
<text  x="69.82" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="124.0" y="1349" width="0.4" height="15.0" fill="rgb(251,6,10)" rx="2" ry="2" />
<text  x="127.02" y="1359.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="134.0" y="1573" width="0.3" height="15.0" fill="rgb(232,62,12)" rx="2" ry="2" />
<text  x="136.98" y="1583.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::operation::raw_update*, false&gt;::_Head_base&lt;cql3::operation::raw_update*&amp;&gt; (1 samples, 0.03%)</title><rect x="74.6" y="357" width="0.3" height="15.0" fill="rgb(230,63,47)" rx="2" ry="2" />
<text  x="77.57" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::_Optional_payload_base (1 samples, 0.03%)</title><rect x="138.8" y="1525" width="0.3" height="15.0" fill="rgb(253,136,15)" rx="2" ry="2" />
<text  x="141.77" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%)</title><rect x="1010.3" y="1493" width="3.0" height="15.0" fill="rgb(211,8,13)" rx="2" ry="2" />
<text  x="1013.31" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="55.8" y="357" width="0.3" height="15.0" fill="rgb(215,226,50)" rx="2" ry="2" />
<text  x="58.75" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="55.4" y="293" width="0.4" height="15.0" fill="rgb(225,196,34)" rx="2" ry="2" />
<text  x="58.38" y="303.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_super (1 samples, 0.03%)</title><rect x="27.0" y="309" width="0.3" height="15.0" fill="rgb(244,214,23)" rx="2" ry="2" />
<text  x="29.97" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::maybe_prepare_json_cache (1 samples, 0.03%)</title><rect x="866.0" y="1669" width="0.4" height="15.0" fill="rgb(236,78,43)" rx="2" ry="2" />
<text  x="869.04" y="1679.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (3 samples, 0.09%)</title><rect x="876.0" y="1685" width="1.1" height="15.0" fill="rgb(231,179,33)" rx="2" ry="2" />
<text  x="879.00" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="54.3" y="165" width="0.3" height="15.0" fill="rgb(238,224,2)" rx="2" ry="2" />
<text  x="57.28" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.03%)</title><rect x="68.3" y="341" width="0.4" height="15.0" fill="rgb(229,137,10)" rx="2" ry="2" />
<text  x="71.30" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.56%)</title><rect x="1104.8" y="1717" width="6.6" height="15.0" fill="rgb(218,163,18)" rx="2" ry="2" />
<text  x="1107.77" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="66.8" y="357" width="0.4" height="15.0" fill="rgb(244,66,41)" rx="2" ry="2" />
<text  x="69.82" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%)</title><rect x="67.6" y="389" width="0.3" height="15.0" fill="rgb(246,192,7)" rx="2" ry="2" />
<text  x="70.56" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%)</title><rect x="309.2" y="1621" width="0.4" height="15.0" fill="rgb(232,133,0)" rx="2" ry="2" />
<text  x="312.24" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="54.6" y="293" width="0.4" height="15.0" fill="rgb(246,47,44)" rx="2" ry="2" />
<text  x="57.65" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="73.5" y="261" width="0.3" height="15.0" fill="rgb(233,100,45)" rx="2" ry="2" />
<text  x="76.46" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="137.3" y="1349" width="0.4" height="15.0" fill="rgb(205,60,27)" rx="2" ry="2" />
<text  x="140.30" y="1359.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (44 samples, 1.38%)</title><rect x="80.1" y="661" width="16.2" height="15.0" fill="rgb(244,118,37)" rx="2" ry="2" />
<text  x="83.11" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="122.5" y="1493" width="0.4" height="15.0" fill="rgb(254,159,54)" rx="2" ry="2" />
<text  x="125.54" y="1503.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="864.9" y="1605" width="0.4" height="15.0" fill="rgb(226,91,0)" rx="2" ry="2" />
<text  x="867.93" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="129.5" y="1381" width="0.4" height="15.0" fill="rgb(249,181,14)" rx="2" ry="2" />
<text  x="132.55" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="135.1" y="1317" width="0.4" height="15.0" fill="rgb(225,217,47)" rx="2" ry="2" />
<text  x="138.08" y="1327.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%)</title><rect x="50.6" y="501" width="0.4" height="15.0" fill="rgb(251,63,5)" rx="2" ry="2" />
<text  x="53.59" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%)</title><rect x="1086.7" y="1669" width="2.9" height="15.0" fill="rgb(224,163,32)" rx="2" ry="2" />
<text  x="1089.69" y="1679.5" ></text>
</g>
<g >
<title>make_map_value (1 samples, 0.03%)</title><rect x="183.8" y="1589" width="0.4" height="15.0" fill="rgb(253,52,33)" rx="2" ry="2" />
<text  x="186.79" y="1599.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%)</title><rect x="621.4" y="1653" width="1.5" height="15.0" fill="rgb(211,12,9)" rx="2" ry="2" />
<text  x="624.40" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%)</title><rect x="124.0" y="1381" width="1.1" height="15.0" fill="rgb(209,70,27)" rx="2" ry="2" />
<text  x="127.02" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="135.1" y="1333" width="0.4" height="15.0" fill="rgb(246,182,3)" rx="2" ry="2" />
<text  x="138.08" y="1343.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (219 samples, 6.85%)</title><rect x="315.1" y="1605" width="80.9" height="15.0" fill="rgb(245,179,16)" rx="2" ry="2" />
<text  x="318.15" y="1615.5" >partition..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="129.9" y="1333" width="0.4" height="15.0" fill="rgb(248,143,34)" rx="2" ry="2" />
<text  x="132.92" y="1343.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (6 samples, 0.19%)</title><rect x="29.2" y="309" width="2.2" height="15.0" fill="rgb(221,26,33)" rx="2" ry="2" />
<text  x="32.19" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="45.1" y="293" width="0.3" height="15.0" fill="rgb(242,57,21)" rx="2" ry="2" />
<text  x="48.05" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="72.0" y="373" width="0.4" height="15.0" fill="rgb(208,184,50)" rx="2" ry="2" />
<text  x="74.99" y="383.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.03%)</title><rect x="650.2" y="1701" width="0.4" height="15.0" fill="rgb(244,222,36)" rx="2" ry="2" />
<text  x="653.18" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="137.3" y="1285" width="0.4" height="15.0" fill="rgb(240,159,2)" rx="2" ry="2" />
<text  x="140.30" y="1295.5" ></text>
</g>
<g >
<title>all (3,198 samples, 100%)</title><rect x="10.0" y="1925" width="1180.0" height="15.0" fill="rgb(245,13,25)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="785.2" y="1685" width="0.4" height="15.0" fill="rgb(238,47,5)" rx="2" ry="2" />
<text  x="788.23" y="1695.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="826.2" y="1637" width="0.7" height="15.0" fill="rgb(243,183,35)" rx="2" ry="2" />
<text  x="829.19" y="1647.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%)</title><rect x="399.6" y="1589" width="1.2" height="15.0" fill="rgb(233,120,33)" rx="2" ry="2" />
<text  x="402.64" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1205" width="88.6" height="15.0" fill="rgb(245,181,45)" rx="2" ry="2" />
<text  x="14.11" y="1215.5" >[unknown]</text>
</g>
<g >
<title>operator new (3 samples, 0.09%)</title><rect x="753.9" y="1701" width="1.1" height="15.0" fill="rgb(216,83,50)" rx="2" ry="2" />
<text  x="756.86" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%)</title><rect x="151.3" y="1605" width="0.4" height="15.0" fill="rgb(250,170,17)" rx="2" ry="2" />
<text  x="154.32" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="73.5" y="181" width="0.3" height="15.0" fill="rgb(213,60,37)" rx="2" ry="2" />
<text  x="76.46" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.13%)</title><rect x="694.1" y="1749" width="1.5" height="15.0" fill="rgb(224,169,45)" rx="2" ry="2" />
<text  x="697.09" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.03%)</title><rect x="68.3" y="357" width="0.4" height="15.0" fill="rgb(223,89,51)" rx="2" ry="2" />
<text  x="71.30" y="367.5" ></text>
</g>
<g >
<title>cql3::prepare_context::get_partition_key_bind_indexes (1 samples, 0.03%)</title><rect x="100.8" y="1653" width="0.3" height="15.0" fill="rgb(232,135,15)" rx="2" ry="2" />
<text  x="103.77" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_channel (1 samples, 0.03%)</title><rect x="58.7" y="357" width="0.4" height="15.0" fill="rgb(214,57,53)" rx="2" ry="2" />
<text  x="61.71" y="367.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.03%)</title><rect x="1093.0" y="1685" width="0.3" height="15.0" fill="rgb(236,174,19)" rx="2" ry="2" />
<text  x="1095.96" y="1695.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%)</title><rect x="587.1" y="1653" width="0.4" height="15.0" fill="rgb(244,46,2)" rx="2" ry="2" />
<text  x="590.09" y="1663.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%)</title><rect x="98.6" y="773" width="0.3" height="15.0" fill="rgb(208,175,17)" rx="2" ry="2" />
<text  x="101.56" y="783.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (1 samples, 0.03%)</title><rect x="689.3" y="1717" width="0.4" height="15.0" fill="rgb(249,85,45)" rx="2" ry="2" />
<text  x="692.29" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.09%)</title><rect x="72.7" y="389" width="1.1" height="15.0" fill="rgb(227,145,11)" rx="2" ry="2" />
<text  x="75.73" y="399.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="72.0" y="261" width="0.4" height="15.0" fill="rgb(213,11,20)" rx="2" ry="2" />
<text  x="74.99" y="271.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (3 samples, 0.09%)</title><rect x="1099.2" y="1605" width="1.1" height="15.0" fill="rgb(217,107,30)" rx="2" ry="2" />
<text  x="1102.23" y="1615.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (2 samples, 0.06%)</title><rect x="405.2" y="1653" width="0.7" height="15.0" fill="rgb(211,21,4)" rx="2" ry="2" />
<text  x="408.18" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (27 samples, 0.84%)</title><rect x="856.4" y="1717" width="10.0" height="15.0" fill="rgb(233,41,31)" rx="2" ry="2" />
<text  x="859.44" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="55.0" y="293" width="0.4" height="15.0" fill="rgb(216,120,11)" rx="2" ry="2" />
<text  x="58.02" y="303.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%)</title><rect x="595.9" y="1621" width="0.4" height="15.0" fill="rgb(246,43,48)" rx="2" ry="2" />
<text  x="598.94" y="1631.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%)</title><rect x="105.2" y="1701" width="0.4" height="15.0" fill="rgb(252,134,5)" rx="2" ry="2" />
<text  x="108.20" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="672.7" y="1749" width="0.4" height="15.0" fill="rgb(243,184,36)" rx="2" ry="2" />
<text  x="675.69" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="121.8" y="1445" width="0.4" height="15.0" fill="rgb(209,178,16)" rx="2" ry="2" />
<text  x="124.80" y="1455.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%)</title><rect x="54.3" y="357" width="0.3" height="15.0" fill="rgb(248,95,4)" rx="2" ry="2" />
<text  x="57.28" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%)</title><rect x="96.3" y="757" width="0.8" height="15.0" fill="rgb(228,173,32)" rx="2" ry="2" />
<text  x="99.34" y="767.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (61 samples, 1.91%)</title><rect x="109.6" y="1621" width="22.5" height="15.0" fill="rgb(219,69,17)" rx="2" ry="2" />
<text  x="112.62" y="1631.5" >c..</text>
</g>
<g >
<title>cql3::statements::select_statement::execute (1 samples, 0.03%)</title><rect x="842.4" y="1717" width="0.4" height="15.0" fill="rgb(252,60,17)" rx="2" ry="2" />
<text  x="845.42" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1381" width="88.6" height="15.0" fill="rgb(254,87,37)" rx="2" ry="2" />
<text  x="14.11" y="1391.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (19 samples, 0.59%)</title><rect x="1097.8" y="1733" width="7.0" height="15.0" fill="rgb(222,35,15)" rx="2" ry="2" />
<text  x="1100.75" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (238 samples, 7.44%)</title><rect x="11.1" y="901" width="87.8" height="15.0" fill="rgb(238,75,46)" rx="2" ry="2" />
<text  x="14.11" y="911.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (1 samples, 0.03%)</title><rect x="43.6" y="389" width="0.3" height="15.0" fill="rgb(238,9,48)" rx="2" ry="2" />
<text  x="46.58" y="399.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%)</title><rect x="1134.7" y="1733" width="0.3" height="15.0" fill="rgb(207,160,43)" rx="2" ry="2" />
<text  x="1137.65" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="121.4" y="1461" width="0.4" height="15.0" fill="rgb(246,96,7)" rx="2" ry="2" />
<text  x="124.43" y="1471.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.03%)</title><rect x="69.4" y="405" width="0.4" height="15.0" fill="rgb(247,23,27)" rx="2" ry="2" />
<text  x="72.41" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (1 samples, 0.03%)</title><rect x="154.6" y="1781" width="0.4" height="15.0" fill="rgb(219,187,44)" rx="2" ry="2" />
<text  x="157.64" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%)</title><rect x="50.2" y="421" width="0.4" height="15.0" fill="rgb(209,171,10)" rx="2" ry="2" />
<text  x="53.22" y="431.5" ></text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (2 samples, 0.06%)</title><rect x="184.2" y="1701" width="0.7" height="15.0" fill="rgb(213,159,9)" rx="2" ry="2" />
<text  x="187.16" y="1711.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (83 samples, 2.60%)</title><rect x="109.6" y="1701" width="30.7" height="15.0" fill="rgb(230,192,46)" rx="2" ry="2" />
<text  x="112.62" y="1711.5" >se..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.03%)</title><rect x="312.2" y="1621" width="0.4" height="15.0" fill="rgb(216,86,47)" rx="2" ry="2" />
<text  x="315.20" y="1631.5" ></text>
</g>
<g >
<title>table::mutation_query (1 samples, 0.03%)</title><rect x="223.6" y="1733" width="0.4" height="15.0" fill="rgb(245,221,36)" rx="2" ry="2" />
<text  x="226.64" y="1743.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (2 samples, 0.06%)</title><rect x="841.7" y="1701" width="0.7" height="15.0" fill="rgb(238,37,17)" rx="2" ry="2" />
<text  x="844.68" y="1711.5" ></text>
</g>
<g >
<title>sstring_hash::operator (2 samples, 0.06%)</title><rect x="1044.3" y="1589" width="0.7" height="15.0" fill="rgb(243,89,45)" rx="2" ry="2" />
<text  x="1047.25" y="1599.5" ></text>
</g>
<g >
<title>__start_context (14 samples, 0.44%)</title><rect x="74.9" y="741" width="5.2" height="15.0" fill="rgb(206,202,25)" rx="2" ry="2" />
<text  x="77.94" y="751.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%)</title><rect x="911.8" y="1669" width="0.7" height="15.0" fill="rgb(235,138,15)" rx="2" ry="2" />
<text  x="914.79" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.03%)</title><rect x="182.3" y="1589" width="0.4" height="15.0" fill="rgb(215,53,19)" rx="2" ry="2" />
<text  x="185.31" y="1599.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%)</title><rect x="151.3" y="1685" width="0.4" height="15.0" fill="rgb(214,47,42)" rx="2" ry="2" />
<text  x="154.32" y="1695.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (3 samples, 0.09%)</title><rect x="893.3" y="1557" width="1.1" height="15.0" fill="rgb(209,47,1)" rx="2" ry="2" />
<text  x="896.34" y="1567.5" ></text>
</g>
<g >
<title>posix_memalign (15 samples, 0.47%)</title><rect x="381.2" y="1493" width="5.5" height="15.0" fill="rgb(213,160,37)" rx="2" ry="2" />
<text  x="384.19" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="572.7" y="1637" width="0.4" height="15.0" fill="rgb(226,16,40)" rx="2" ry="2" />
<text  x="575.70" y="1647.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="405.9" y="1653" width="1.1" height="15.0" fill="rgb(225,170,36)" rx="2" ry="2" />
<text  x="408.92" y="1663.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;*&gt; (1 samples, 0.03%)</title><rect x="139.9" y="1541" width="0.4" height="15.0" fill="rgb(207,213,28)" rx="2" ry="2" />
<text  x="142.88" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="73.8" y="325" width="0.4" height="15.0" fill="rgb(252,213,1)" rx="2" ry="2" />
<text  x="76.83" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.03%)</title><rect x="61.3" y="341" width="0.4" height="15.0" fill="rgb(229,34,31)" rx="2" ry="2" />
<text  x="64.29" y="351.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (37 samples, 1.16%)</title><rect x="373.1" y="1525" width="13.6" height="15.0" fill="rgb(220,145,23)" rx="2" ry="2" />
<text  x="376.08" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (24 samples, 0.75%)</title><rect x="522.9" y="1653" width="8.8" height="15.0" fill="rgb(239,39,31)" rx="2" ry="2" />
<text  x="525.88" y="1663.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.22%)</title><rect x="252.1" y="1717" width="2.5" height="15.0" fill="rgb(207,0,52)" rx="2" ry="2" />
<text  x="255.05" y="1727.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (1 samples, 0.03%)</title><rect x="1143.5" y="1749" width="0.4" height="15.0" fill="rgb(209,216,20)" rx="2" ry="2" />
<text  x="1146.51" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (83 samples, 2.60%)</title><rect x="109.6" y="1669" width="30.7" height="15.0" fill="rgb(225,149,26)" rx="2" ry="2" />
<text  x="112.62" y="1679.5" >cq..</text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1685" width="88.6" height="15.0" fill="rgb(218,40,3)" rx="2" ry="2" />
<text  x="14.11" y="1695.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="63.9" y="341" width="0.3" height="15.0" fill="rgb(213,192,2)" rx="2" ry="2" />
<text  x="66.87" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.03%)</title><rect x="48.0" y="373" width="0.4" height="15.0" fill="rgb(241,168,21)" rx="2" ry="2" />
<text  x="51.01" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (2 samples, 0.06%)</title><rect x="1154.9" y="1765" width="0.8" height="15.0" fill="rgb(245,42,9)" rx="2" ry="2" />
<text  x="1157.95" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%)</title><rect x="1007.0" y="1493" width="1.1" height="15.0" fill="rgb(248,68,6)" rx="2" ry="2" />
<text  x="1009.99" y="1503.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (25 samples, 0.78%)</title><rect x="856.8" y="1669" width="9.2" height="15.0" fill="rgb(242,68,41)" rx="2" ry="2" />
<text  x="859.81" y="1679.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (285 samples, 8.91%)</title><rect x="542.4" y="1717" width="105.2" height="15.0" fill="rgb(224,227,41)" rx="2" ry="2" />
<text  x="545.44" y="1727.5" >query::queri..</text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (1 samples, 0.03%)</title><rect x="138.4" y="1509" width="0.4" height="15.0" fill="rgb(249,102,3)" rx="2" ry="2" />
<text  x="141.41" y="1519.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.03%)</title><rect x="187.1" y="1765" width="0.4" height="15.0" fill="rgb(237,215,51)" rx="2" ry="2" />
<text  x="190.11" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%)</title><rect x="132.1" y="1573" width="0.4" height="15.0" fill="rgb(217,199,42)" rx="2" ry="2" />
<text  x="135.13" y="1583.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (2 samples, 0.06%)</title><rect x="717.0" y="1765" width="0.7" height="15.0" fill="rgb(235,35,36)" rx="2" ry="2" />
<text  x="719.97" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="650.6" y="1717" width="0.3" height="15.0" fill="rgb(227,112,36)" rx="2" ry="2" />
<text  x="653.55" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="44.7" y="293" width="0.4" height="15.0" fill="rgb(208,220,10)" rx="2" ry="2" />
<text  x="47.68" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="98.6" y="661" width="0.3" height="15.0" fill="rgb(232,144,9)" rx="2" ry="2" />
<text  x="101.56" y="671.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%)</title><rect x="66.5" y="421" width="0.3" height="15.0" fill="rgb(221,47,22)" rx="2" ry="2" />
<text  x="69.45" y="431.5" ></text>
</g>
<g >
<title>table::query (1,172 samples, 36.65%)</title><rect x="224.0" y="1733" width="432.5" height="15.0" fill="rgb(237,112,0)" rx="2" ry="2" />
<text  x="227.01" y="1743.5" >table::query</text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%)</title><rect x="334.0" y="1557" width="0.3" height="15.0" fill="rgb(206,178,37)" rx="2" ry="2" />
<text  x="336.96" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%)</title><rect x="134.3" y="1413" width="0.4" height="15.0" fill="rgb(229,138,43)" rx="2" ry="2" />
<text  x="137.35" y="1423.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="79.4" y="437" width="0.3" height="15.0" fill="rgb(251,223,49)" rx="2" ry="2" />
<text  x="82.37" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (6 samples, 0.19%)</title><rect x="18.5" y="261" width="2.2" height="15.0" fill="rgb(243,209,32)" rx="2" ry="2" />
<text  x="21.49" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.13%)</title><rect x="715.5" y="1749" width="1.5" height="15.0" fill="rgb(212,147,28)" rx="2" ry="2" />
<text  x="718.49" y="1759.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (3 samples, 0.09%)</title><rect x="746.5" y="1765" width="1.1" height="15.0" fill="rgb(252,5,37)" rx="2" ry="2" />
<text  x="749.49" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (8 samples, 0.25%)</title><rect x="134.3" y="1557" width="3.0" height="15.0" fill="rgb(251,60,37)" rx="2" ry="2" />
<text  x="137.35" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (15 samples, 0.47%)</title><rect x="56.9" y="645" width="5.5" height="15.0" fill="rgb(233,220,31)" rx="2" ry="2" />
<text  x="59.86" y="655.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.03%)</title><rect x="723.2" y="1733" width="0.4" height="15.0" fill="rgb(244,120,49)" rx="2" ry="2" />
<text  x="726.24" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="59.1" y="277" width="0.3" height="15.0" fill="rgb(213,94,37)" rx="2" ry="2" />
<text  x="62.07" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;1ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="137.3" y="1189" width="0.4" height="15.0" fill="rgb(228,63,25)" rx="2" ry="2" />
<text  x="140.30" y="1199.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="70.9" y="389" width="0.4" height="15.0" fill="rgb(220,153,26)" rx="2" ry="2" />
<text  x="73.88" y="399.5" ></text>
</g>
<g >
<title>[unknown] (356 samples, 11.13%)</title><rect x="10.7" y="1877" width="131.4" height="15.0" fill="rgb(218,144,43)" rx="2" ry="2" />
<text  x="13.74" y="1887.5" >[unknown]</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 0.25%)</title><rect x="370.1" y="1525" width="3.0" height="15.0" fill="rgb(253,165,38)" rx="2" ry="2" />
<text  x="373.13" y="1535.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="134.0" y="1541" width="0.3" height="15.0" fill="rgb(227,26,34)" rx="2" ry="2" />
<text  x="136.98" y="1551.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%)</title><rect x="107.4" y="1685" width="0.4" height="15.0" fill="rgb(218,26,28)" rx="2" ry="2" />
<text  x="110.41" y="1695.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="96.3" y="389" width="0.4" height="15.0" fill="rgb(247,21,36)" rx="2" ry="2" />
<text  x="99.34" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1,284 samples, 40.15%)</title><rect x="187.5" y="1765" width="473.8" height="15.0" fill="rgb(218,164,28)" rx="2" ry="2" />
<text  x="190.48" y="1775.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (1 samples, 0.03%)</title><rect x="105.2" y="1653" width="0.4" height="15.0" fill="rgb(223,169,33)" rx="2" ry="2" />
<text  x="108.20" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="53.5" y="261" width="0.4" height="15.0" fill="rgb(245,168,39)" rx="2" ry="2" />
<text  x="56.54" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="324.4" y="1573" width="0.7" height="15.0" fill="rgb(218,222,34)" rx="2" ry="2" />
<text  x="327.37" y="1583.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="106.3" y="1861" width="0.4" height="15.0" fill="rgb(212,207,42)" rx="2" ry="2" />
<text  x="109.30" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.16%)</title><rect x="924.0" y="1637" width="1.8" height="15.0" fill="rgb(224,151,38)" rx="2" ry="2" />
<text  x="926.96" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.03%)</title><rect x="62.4" y="309" width="0.4" height="15.0" fill="rgb(225,122,29)" rx="2" ry="2" />
<text  x="65.40" y="319.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%)</title><rect x="96.3" y="517" width="0.4" height="15.0" fill="rgb(226,25,54)" rx="2" ry="2" />
<text  x="99.34" y="527.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="68.7" y="165" width="0.3" height="15.0" fill="rgb(244,165,23)" rx="2" ry="2" />
<text  x="71.67" y="175.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%)</title><rect x="98.9" y="709" width="0.4" height="15.0" fill="rgb(222,193,46)" rx="2" ry="2" />
<text  x="101.92" y="719.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%)</title><rect x="755.7" y="1733" width="0.4" height="15.0" fill="rgb(235,64,50)" rx="2" ry="2" />
<text  x="758.71" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="73.5" y="197" width="0.3" height="15.0" fill="rgb(252,198,31)" rx="2" ry="2" />
<text  x="76.46" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (4 samples, 0.13%)</title><rect x="35.5" y="293" width="1.4" height="15.0" fill="rgb(254,67,13)" rx="2" ry="2" />
<text  x="38.46" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%)</title><rect x="714.4" y="1749" width="0.4" height="15.0" fill="rgb(228,204,22)" rx="2" ry="2" />
<text  x="717.38" y="1759.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%)</title><rect x="403.7" y="1605" width="0.4" height="15.0" fill="rgb(234,228,1)" rx="2" ry="2" />
<text  x="406.70" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%)</title><rect x="615.9" y="1605" width="0.3" height="15.0" fill="rgb(211,176,21)" rx="2" ry="2" />
<text  x="618.87" y="1615.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (2 samples, 0.06%)</title><rect x="37.7" y="341" width="0.7" height="15.0" fill="rgb(248,62,2)" rx="2" ry="2" />
<text  x="40.67" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6 samples, 0.19%)</title><rect x="837.3" y="1701" width="2.2" height="15.0" fill="rgb(236,162,8)" rx="2" ry="2" />
<text  x="840.25" y="1711.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (1 samples, 0.03%)</title><rect x="105.2" y="1589" width="0.4" height="15.0" fill="rgb(254,86,44)" rx="2" ry="2" />
<text  x="108.20" y="1599.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.06%)</title><rect x="165.7" y="1749" width="0.7" height="15.0" fill="rgb(236,65,9)" rx="2" ry="2" />
<text  x="168.71" y="1759.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.06%)</title><rect x="96.3" y="789" width="0.8" height="15.0" fill="rgb(226,198,38)" rx="2" ry="2" />
<text  x="99.34" y="799.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="45.4" y="293" width="0.4" height="15.0" fill="rgb(245,80,3)" rx="2" ry="2" />
<text  x="48.42" y="303.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::operation::set_value&gt;&gt; (1 samples, 0.03%)</title><rect x="62.0" y="341" width="0.4" height="15.0" fill="rgb(241,5,8)" rx="2" ry="2" />
<text  x="65.03" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (27 samples, 0.84%)</title><rect x="856.4" y="1685" width="10.0" height="15.0" fill="rgb(225,157,20)" rx="2" ry="2" />
<text  x="859.44" y="1695.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%)</title><rect x="126.2" y="1461" width="0.4" height="15.0" fill="rgb(234,78,53)" rx="2" ry="2" />
<text  x="129.23" y="1471.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.03%)</title><rect x="17.7" y="309" width="0.4" height="15.0" fill="rgb(205,169,21)" rx="2" ry="2" />
<text  x="20.75" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="56.9" y="389" width="0.3" height="15.0" fill="rgb(225,57,38)" rx="2" ry="2" />
<text  x="59.86" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (1 samples, 0.03%)</title><rect x="86.0" y="597" width="0.4" height="15.0" fill="rgb(227,158,15)" rx="2" ry="2" />
<text  x="89.01" y="607.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%)</title><rect x="857.9" y="1637" width="0.4" height="15.0" fill="rgb(211,186,45)" rx="2" ry="2" />
<text  x="860.92" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="103.7" y="1637" width="0.4" height="15.0" fill="rgb(220,99,15)" rx="2" ry="2" />
<text  x="106.72" y="1647.5" ></text>
</g>
<g >
<title>LZ4_compress_fast_extState (2 samples, 0.06%)</title><rect x="10.0" y="1893" width="0.7" height="15.0" fill="rgb(241,223,50)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::get_deleter (1 samples, 0.03%)</title><rect x="94.9" y="549" width="0.3" height="15.0" fill="rgb(210,137,46)" rx="2" ry="2" />
<text  x="97.87" y="559.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%)</title><rect x="98.9" y="837" width="0.4" height="15.0" fill="rgb(206,95,50)" rx="2" ry="2" />
<text  x="101.92" y="847.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%)</title><rect x="60.2" y="245" width="0.4" height="15.0" fill="rgb(243,105,11)" rx="2" ry="2" />
<text  x="63.18" y="255.5" ></text>
</g>
<g >
<title>service::client_state::has_access (2 samples, 0.06%)</title><rect x="104.5" y="1637" width="0.7" height="15.0" fill="rgb(207,43,32)" rx="2" ry="2" />
<text  x="107.46" y="1647.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%)</title><rect x="36.6" y="277" width="0.3" height="15.0" fill="rgb(254,210,3)" rx="2" ry="2" />
<text  x="39.57" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (1 samples, 0.03%)</title><rect x="1153.5" y="1701" width="0.3" height="15.0" fill="rgb(236,21,42)" rx="2" ry="2" />
<text  x="1156.47" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="72.0" y="309" width="0.4" height="15.0" fill="rgb(233,131,22)" rx="2" ry="2" />
<text  x="74.99" y="319.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (15 samples, 0.47%)</title><rect x="56.9" y="517" width="5.5" height="15.0" fill="rgb(223,101,36)" rx="2" ry="2" />
<text  x="59.86" y="527.5" ></text>
</g>
<g >
<title>sstables::sstable::has_component (1 samples, 0.03%)</title><rect x="151.7" y="1781" width="0.4" height="15.0" fill="rgb(253,60,36)" rx="2" ry="2" />
<text  x="154.69" y="1791.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (13 samples, 0.41%)</title><rect x="1015.1" y="1493" width="4.8" height="15.0" fill="rgb(216,25,19)" rx="2" ry="2" />
<text  x="1018.10" y="1503.5" ></text>
</g>
<g >
<title>seastar::reactor::open_file_dma (1 samples, 0.03%)</title><rect x="152.8" y="1877" width="0.4" height="15.0" fill="rgb(220,176,5)" rx="2" ry="2" />
<text  x="155.80" y="1887.5" ></text>
</g>
<g >
<title>freeze (8 samples, 0.25%)</title><rect x="1105.1" y="1525" width="3.0" height="15.0" fill="rgb(237,72,32)" rx="2" ry="2" />
<text  x="1108.13" y="1535.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (6 samples, 0.19%)</title><rect x="147.3" y="1845" width="2.2" height="15.0" fill="rgb(214,194,45)" rx="2" ry="2" />
<text  x="150.26" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="133.2" y="1429" width="0.4" height="15.0" fill="rgb(220,205,5)" rx="2" ry="2" />
<text  x="136.24" y="1439.5" ></text>
</g>
<g >
<title>create_partitions (2 samples, 0.06%)</title><rect x="96.3" y="709" width="0.8" height="15.0" fill="rgb(244,0,14)" rx="2" ry="2" />
<text  x="99.34" y="719.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%)</title><rect x="13.7" y="533" width="0.4" height="15.0" fill="rgb(245,141,3)" rx="2" ry="2" />
<text  x="16.69" y="543.5" ></text>
</g>
<g >
<title>table::apply (15 samples, 0.47%)</title><rect x="1098.5" y="1653" width="5.5" height="15.0" fill="rgb(226,142,5)" rx="2" ry="2" />
<text  x="1101.49" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%)</title><rect x="74.6" y="405" width="0.3" height="15.0" fill="rgb(232,106,30)" rx="2" ry="2" />
<text  x="77.57" y="415.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.03%)</title><rect x="446.9" y="1621" width="0.3" height="15.0" fill="rgb(229,158,15)" rx="2" ry="2" />
<text  x="449.87" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%)</title><rect x="1085.9" y="1669" width="0.8" height="15.0" fill="rgb(253,221,46)" rx="2" ry="2" />
<text  x="1088.95" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="138.0" y="1493" width="0.4" height="15.0" fill="rgb(251,24,41)" rx="2" ry="2" />
<text  x="141.04" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="132.9" y="1493" width="0.3" height="15.0" fill="rgb(209,160,1)" rx="2" ry="2" />
<text  x="135.87" y="1503.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%)</title><rect x="1103.7" y="1637" width="0.3" height="15.0" fill="rgb(241,36,31)" rx="2" ry="2" />
<text  x="1106.66" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (6 samples, 0.19%)</title><rect x="122.9" y="1445" width="2.2" height="15.0" fill="rgb(242,112,47)" rx="2" ry="2" />
<text  x="125.91" y="1455.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (1 samples, 0.03%)</title><rect x="98.6" y="565" width="0.3" height="15.0" fill="rgb(226,60,35)" rx="2" ry="2" />
<text  x="101.56" y="575.5" ></text>
</g>
<g >
<title>schema::get_sharder (1 samples, 0.03%)</title><rect x="993.0" y="1557" width="0.3" height="15.0" fill="rgb(250,81,46)" rx="2" ry="2" />
<text  x="995.96" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="73.5" y="53" width="0.3" height="15.0" fill="rgb(242,165,12)" rx="2" ry="2" />
<text  x="76.46" y="63.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (92 samples, 2.88%)</title><rect x="16.6" y="469" width="34.0" height="15.0" fill="rgb(218,62,54)" rx="2" ry="2" />
<text  x="19.64" y="479.5" >se..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (15 samples, 0.47%)</title><rect x="56.9" y="613" width="5.5" height="15.0" fill="rgb(237,195,15)" rx="2" ry="2" />
<text  x="59.86" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%)</title><rect x="824.3" y="1621" width="0.4" height="15.0" fill="rgb(232,211,20)" rx="2" ry="2" />
<text  x="827.34" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.03%)</title><rect x="595.9" y="1637" width="0.4" height="15.0" fill="rgb(206,99,1)" rx="2" ry="2" />
<text  x="598.94" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="56.9" y="325" width="0.3" height="15.0" fill="rgb(219,109,28)" rx="2" ry="2" />
<text  x="59.86" y="335.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%)</title><rect x="98.9" y="885" width="0.4" height="15.0" fill="rgb(211,38,19)" rx="2" ry="2" />
<text  x="101.92" y="895.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (5 samples, 0.16%)</title><rect x="1106.2" y="1461" width="1.9" height="15.0" fill="rgb(206,217,47)" rx="2" ry="2" />
<text  x="1109.24" y="1471.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (98 samples, 3.06%)</title><rect x="14.8" y="533" width="36.2" height="15.0" fill="rgb(240,123,36)" rx="2" ry="2" />
<text  x="17.80" y="543.5" >sin..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.06%)</title><rect x="741.0" y="1733" width="0.7" height="15.0" fill="rgb(246,161,52)" rx="2" ry="2" />
<text  x="743.95" y="1743.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="76.4" y="309" width="0.4" height="15.0" fill="rgb(213,224,3)" rx="2" ry="2" />
<text  x="79.42" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (5 samples, 0.16%)</title><rect x="77.5" y="405" width="1.9" height="15.0" fill="rgb(222,119,39)" rx="2" ry="2" />
<text  x="80.52" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (6 samples, 0.19%)</title><rect x="172.0" y="1717" width="2.2" height="15.0" fill="rgb(222,46,43)" rx="2" ry="2" />
<text  x="174.98" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_allocate_node (1 samples, 0.03%)</title><rect x="16.3" y="309" width="0.3" height="15.0" fill="rgb(232,15,26)" rx="2" ry="2" />
<text  x="19.27" y="319.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%)</title><rect x="182.7" y="1573" width="0.4" height="15.0" fill="rgb(239,72,42)" rx="2" ry="2" />
<text  x="185.68" y="1583.5" ></text>
</g>
<g >
<title>multishard_combining_reader::on_partition_range_change (1 samples, 0.03%)</title><rect x="182.3" y="1541" width="0.4" height="15.0" fill="rgb(219,59,36)" rx="2" ry="2" />
<text  x="185.31" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="56.9" y="341" width="0.3" height="15.0" fill="rgb(211,174,27)" rx="2" ry="2" />
<text  x="59.86" y="351.5" ></text>
</g>
<g >
<title>do_cql_test (13 samples, 0.41%)</title><rect x="70.1" y="645" width="4.8" height="15.0" fill="rgb(253,205,54)" rx="2" ry="2" />
<text  x="73.14" y="655.5" ></text>
</g>
<g >
<title>database::do_apply (19 samples, 0.59%)</title><rect x="1097.8" y="1701" width="7.0" height="15.0" fill="rgb(215,59,53)" rx="2" ry="2" />
<text  x="1100.75" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (124 samples, 3.88%)</title><rect x="11.1" y="661" width="45.8" height="15.0" fill="rgb(240,116,5)" rx="2" ry="2" />
<text  x="14.11" y="671.5" >[unk..</text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.03%)</title><rect x="150.2" y="1781" width="0.4" height="15.0" fill="rgb(206,188,5)" rx="2" ry="2" />
<text  x="153.21" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1333" width="88.6" height="15.0" fill="rgb(214,74,22)" rx="2" ry="2" />
<text  x="14.11" y="1343.5" >[unknown]</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%)</title><rect x="69.4" y="341" width="0.4" height="15.0" fill="rgb(206,12,15)" rx="2" ry="2" />
<text  x="72.41" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.13%)</title><rect x="21.8" y="213" width="1.5" height="15.0" fill="rgb(207,120,6)" rx="2" ry="2" />
<text  x="24.81" y="223.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.06%)</title><rect x="639.8" y="1605" width="0.8" height="15.0" fill="rgb(214,47,36)" rx="2" ry="2" />
<text  x="642.85" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="130.3" y="1349" width="0.4" height="15.0" fill="rgb(218,203,49)" rx="2" ry="2" />
<text  x="133.29" y="1359.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (9 samples, 0.28%)</title><rect x="71.6" y="469" width="3.3" height="15.0" fill="rgb(238,147,36)" rx="2" ry="2" />
<text  x="74.62" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (18 samples, 0.56%)</title><rect x="80.1" y="613" width="6.6" height="15.0" fill="rgb(205,225,14)" rx="2" ry="2" />
<text  x="83.11" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%)</title><rect x="601.5" y="1605" width="1.5" height="15.0" fill="rgb(239,56,30)" rx="2" ry="2" />
<text  x="604.48" y="1615.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%)</title><rect x="1112.9" y="1605" width="0.4" height="15.0" fill="rgb(239,191,25)" rx="2" ry="2" />
<text  x="1115.88" y="1615.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="130.3" y="1381" width="0.4" height="15.0" fill="rgb(231,39,48)" rx="2" ry="2" />
<text  x="133.29" y="1391.5" ></text>
</g>
<g >
<title>table::make_reader (257 samples, 8.04%)</title><rect x="552.8" y="1685" width="94.8" height="15.0" fill="rgb(245,93,9)" rx="2" ry="2" />
<text  x="555.77" y="1695.5" >table::make..</text>
</g>
<g >
<title>schema_registry_entry::load (2 samples, 0.06%)</title><rect x="183.1" y="1685" width="0.7" height="15.0" fill="rgb(207,191,31)" rx="2" ry="2" />
<text  x="186.05" y="1695.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%)</title><rect x="673.4" y="1749" width="0.8" height="15.0" fill="rgb(250,59,50)" rx="2" ry="2" />
<text  x="676.43" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="105.2" y="1797" width="0.4" height="15.0" fill="rgb(243,112,20)" rx="2" ry="2" />
<text  x="108.20" y="1807.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.03%)</title><rect x="107.4" y="1797" width="0.4" height="15.0" fill="rgb(228,190,51)" rx="2" ry="2" />
<text  x="110.41" y="1807.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="66.1" y="277" width="0.4" height="15.0" fill="rgb(206,161,14)" rx="2" ry="2" />
<text  x="69.09" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="130.3" y="1429" width="0.4" height="15.0" fill="rgb(217,147,4)" rx="2" ry="2" />
<text  x="133.29" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (237 samples, 7.41%)</title><rect x="11.1" y="869" width="87.5" height="15.0" fill="rgb(219,65,33)" rx="2" ry="2" />
<text  x="14.11" y="879.5" >[unknown]</text>
</g>
<g >
<title>from_hex (3 samples, 0.09%)</title><rect x="82.7" y="485" width="1.1" height="15.0" fill="rgb(220,221,30)" rx="2" ry="2" />
<text  x="85.69" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="72.7" y="373" width="0.4" height="15.0" fill="rgb(250,52,31)" rx="2" ry="2" />
<text  x="75.73" y="383.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="20.7" y="245" width="0.4" height="15.0" fill="rgb(209,14,38)" rx="2" ry="2" />
<text  x="23.70" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="58.0" y="373" width="0.3" height="15.0" fill="rgb(213,178,48)" rx="2" ry="2" />
<text  x="60.97" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%)</title><rect x="22.5" y="165" width="0.4" height="15.0" fill="rgb(244,67,27)" rx="2" ry="2" />
<text  x="25.55" y="175.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%)</title><rect x="612.9" y="1621" width="0.4" height="15.0" fill="rgb(226,183,23)" rx="2" ry="2" />
<text  x="615.91" y="1631.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="68.3" y="309" width="0.4" height="15.0" fill="rgb(242,44,8)" rx="2" ry="2" />
<text  x="71.30" y="319.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1749" width="88.6" height="15.0" fill="rgb(223,187,39)" rx="2" ry="2" />
<text  x="14.11" y="1759.5" >[unknown]</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="69.4" y="325" width="0.4" height="15.0" fill="rgb(243,177,19)" rx="2" ry="2" />
<text  x="72.41" y="335.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%)</title><rect x="138.4" y="1525" width="0.4" height="15.0" fill="rgb(248,57,47)" rx="2" ry="2" />
<text  x="141.41" y="1535.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%)</title><rect x="530.6" y="1637" width="0.8" height="15.0" fill="rgb(221,93,50)" rx="2" ry="2" />
<text  x="533.63" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (3 samples, 0.09%)</title><rect x="1028.0" y="1573" width="1.1" height="15.0" fill="rgb(244,49,15)" rx="2" ry="2" />
<text  x="1031.02" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (9 samples, 0.28%)</title><rect x="346.5" y="1557" width="3.3" height="15.0" fill="rgb(238,63,22)" rx="2" ry="2" />
<text  x="349.51" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%)</title><rect x="390.4" y="1573" width="0.4" height="15.0" fill="rgb(218,20,50)" rx="2" ry="2" />
<text  x="393.42" y="1583.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="550.9" y="1685" width="0.4" height="15.0" fill="rgb(216,182,35)" rx="2" ry="2" />
<text  x="553.93" y="1695.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (2 samples, 0.06%)</title><rect x="820.7" y="1589" width="0.7" height="15.0" fill="rgb(243,187,53)" rx="2" ry="2" />
<text  x="823.65" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="14.4" y="533" width="0.4" height="15.0" fill="rgb(252,132,17)" rx="2" ry="2" />
<text  x="17.43" y="543.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (382 samples, 11.94%)</title><rect x="272.3" y="1701" width="141.0" height="15.0" fill="rgb(232,21,0)" rx="2" ry="2" />
<text  x="275.35" y="1711.5" >flat_mutation_rea..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="54.6" y="325" width="0.4" height="15.0" fill="rgb(238,204,20)" rx="2" ry="2" />
<text  x="57.65" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%)</title><rect x="756.4" y="1717" width="3.0" height="15.0" fill="rgb(208,229,21)" rx="2" ry="2" />
<text  x="759.45" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="65.0" y="373" width="0.3" height="15.0" fill="rgb(228,96,47)" rx="2" ry="2" />
<text  x="67.98" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::modification_statement*, std::default_delete&lt;cql3::statements::raw::modification_statement&gt; &gt; (1 samples, 0.03%)</title><rect x="94.5" y="517" width="0.4" height="15.0" fill="rgb(208,13,28)" rx="2" ry="2" />
<text  x="97.50" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::max_size (1 samples, 0.03%)</title><rect x="139.5" y="1557" width="0.4" height="15.0" fill="rgb(226,93,47)" rx="2" ry="2" />
<text  x="142.51" y="1567.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_keyspaces (1 samples, 0.03%)</title><rect x="182.7" y="1749" width="0.4" height="15.0" fill="rgb(228,212,1)" rx="2" ry="2" />
<text  x="185.68" y="1759.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.03%)</title><rect x="412.9" y="1669" width="0.4" height="15.0" fill="rgb(239,171,34)" rx="2" ry="2" />
<text  x="415.93" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="52.1" y="245" width="0.3" height="15.0" fill="rgb(244,127,33)" rx="2" ry="2" />
<text  x="55.06" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="60.2" y="293" width="0.4" height="15.0" fill="rgb(239,119,15)" rx="2" ry="2" />
<text  x="63.18" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="52.1" y="341" width="0.3" height="15.0" fill="rgb(253,39,18)" rx="2" ry="2" />
<text  x="55.06" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="88.2" y="389" width="0.4" height="15.0" fill="rgb(244,216,50)" rx="2" ry="2" />
<text  x="91.22" y="399.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1781" width="88.6" height="15.0" fill="rgb(218,226,44)" rx="2" ry="2" />
<text  x="14.11" y="1791.5" >[unknown]</text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="58.0" y="261" width="0.3" height="15.0" fill="rgb(243,173,44)" rx="2" ry="2" />
<text  x="60.97" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (2 samples, 0.06%)</title><rect x="86.7" y="597" width="0.8" height="15.0" fill="rgb(250,86,41)" rx="2" ry="2" />
<text  x="89.75" y="607.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="54.3" y="149" width="0.3" height="15.0" fill="rgb(239,170,11)" rx="2" ry="2" />
<text  x="57.28" y="159.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (5 samples, 0.16%)</title><rect x="304.4" y="1621" width="1.9" height="15.0" fill="rgb(237,14,15)" rx="2" ry="2" />
<text  x="307.45" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%)</title><rect x="1112.9" y="1685" width="0.4" height="15.0" fill="rgb(224,190,33)" rx="2" ry="2" />
<text  x="1115.88" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%)</title><rect x="35.8" y="277" width="0.4" height="15.0" fill="rgb(207,180,54)" rx="2" ry="2" />
<text  x="38.83" y="287.5" ></text>
</g>
<g >
<title>auth::resource::parent (2 samples, 0.06%)</title><rect x="804.4" y="1653" width="0.8" height="15.0" fill="rgb(252,127,50)" rx="2" ry="2" />
<text  x="807.42" y="1663.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="72.4" y="261" width="0.3" height="15.0" fill="rgb(214,32,39)" rx="2" ry="2" />
<text  x="75.36" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.03%)</title><rect x="22.9" y="165" width="0.4" height="15.0" fill="rgb(211,149,27)" rx="2" ry="2" />
<text  x="25.91" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="650.9" y="1717" width="0.4" height="15.0" fill="rgb(225,57,19)" rx="2" ry="2" />
<text  x="653.92" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1269" width="88.6" height="15.0" fill="rgb(235,221,46)" rx="2" ry="2" />
<text  x="14.11" y="1279.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="115.2" y="1541" width="0.3" height="15.0" fill="rgb(242,79,5)" rx="2" ry="2" />
<text  x="118.16" y="1551.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="98.6" y="709" width="0.3" height="15.0" fill="rgb(241,20,23)" rx="2" ry="2" />
<text  x="101.56" y="719.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%)</title><rect x="99.3" y="901" width="0.4" height="15.0" fill="rgb(214,205,34)" rx="2" ry="2" />
<text  x="102.29" y="911.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%)</title><rect x="40.6" y="373" width="0.4" height="15.0" fill="rgb(215,195,35)" rx="2" ry="2" />
<text  x="43.63" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (10 samples, 0.31%)</title><rect x="674.2" y="1765" width="3.7" height="15.0" fill="rgb(232,32,41)" rx="2" ry="2" />
<text  x="677.17" y="1775.5" ></text>
</g>
<g >
<title>service::shared_mutation::release_mutation (1 samples, 0.03%)</title><rect x="746.9" y="1749" width="0.3" height="15.0" fill="rgb(239,72,14)" rx="2" ry="2" />
<text  x="749.85" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="65.0" y="309" width="0.3" height="15.0" fill="rgb(247,75,22)" rx="2" ry="2" />
<text  x="67.98" y="319.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="141.0" y="1685" width="0.4" height="15.0" fill="rgb(241,126,41)" rx="2" ry="2" />
<text  x="143.99" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.06%)</title><rect x="76.0" y="421" width="0.8" height="15.0" fill="rgb(233,94,10)" rx="2" ry="2" />
<text  x="79.05" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (12 samples, 0.38%)</title><rect x="1105.1" y="1573" width="4.5" height="15.0" fill="rgb(226,46,48)" rx="2" ry="2" />
<text  x="1108.13" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (3 samples, 0.09%)</title><rect x="335.4" y="1573" width="1.1" height="15.0" fill="rgb(208,194,33)" rx="2" ry="2" />
<text  x="338.44" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%)</title><rect x="672.0" y="1749" width="0.7" height="15.0" fill="rgb(207,34,18)" rx="2" ry="2" />
<text  x="674.95" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%)</title><rect x="68.7" y="341" width="0.3" height="15.0" fill="rgb(222,42,26)" rx="2" ry="2" />
<text  x="71.67" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%)</title><rect x="886.3" y="1589" width="2.2" height="15.0" fill="rgb(218,42,5)" rx="2" ry="2" />
<text  x="889.33" y="1599.5" ></text>
</g>
<g >
<title>do_with_cql_env_thread (1 samples, 0.03%)</title><rect x="153.2" y="1861" width="0.3" height="15.0" fill="rgb(231,138,43)" rx="2" ry="2" />
<text  x="156.16" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (13 samples, 0.41%)</title><rect x="65.3" y="453" width="4.8" height="15.0" fill="rgb(227,222,34)" rx="2" ry="2" />
<text  x="68.35" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="73.5" y="85" width="0.3" height="15.0" fill="rgb(217,174,18)" rx="2" ry="2" />
<text  x="76.46" y="95.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (6 samples, 0.19%)</title><rect x="38.4" y="357" width="2.2" height="15.0" fill="rgb(236,183,47)" rx="2" ry="2" />
<text  x="41.41" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (1 samples, 0.03%)</title><rect x="62.4" y="389" width="0.4" height="15.0" fill="rgb(252,182,17)" rx="2" ry="2" />
<text  x="65.40" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%)</title><rect x="21.1" y="293" width="0.3" height="15.0" fill="rgb(227,9,24)" rx="2" ry="2" />
<text  x="24.07" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="929.5" y="1653" width="0.4" height="15.0" fill="rgb(221,55,49)" rx="2" ry="2" />
<text  x="932.50" y="1663.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (20 samples, 0.63%)</title><rect x="439.9" y="1637" width="7.3" height="15.0" fill="rgb(225,15,8)" rx="2" ry="2" />
<text  x="442.86" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%)</title><rect x="52.1" y="261" width="0.3" height="15.0" fill="rgb(234,11,17)" rx="2" ry="2" />
<text  x="55.06" y="271.5" ></text>
</g>
<g >
<title>__start_context (21 samples, 0.66%)</title><rect x="62.4" y="677" width="7.7" height="15.0" fill="rgb(231,134,30)" rx="2" ry="2" />
<text  x="65.40" y="687.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%)</title><rect x="111.5" y="1493" width="0.7" height="15.0" fill="rgb(237,93,13)" rx="2" ry="2" />
<text  x="114.47" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.38%)</title><rect x="959.4" y="1589" width="4.4" height="15.0" fill="rgb(212,84,45)" rx="2" ry="2" />
<text  x="962.39" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (4 samples, 0.13%)</title><rect x="125.1" y="1557" width="1.5" height="15.0" fill="rgb(215,28,6)" rx="2" ry="2" />
<text  x="128.12" y="1567.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (2 samples, 0.06%)</title><rect x="183.1" y="1669" width="0.7" height="15.0" fill="rgb(229,141,9)" rx="2" ry="2" />
<text  x="186.05" y="1679.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.03%)</title><rect x="23.3" y="197" width="0.4" height="15.0" fill="rgb(231,33,53)" rx="2" ry="2" />
<text  x="26.28" y="207.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%)</title><rect x="860.1" y="1557" width="0.4" height="15.0" fill="rgb(228,12,25)" rx="2" ry="2" />
<text  x="863.13" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="446.5" y="1621" width="0.4" height="15.0" fill="rgb(231,116,16)" rx="2" ry="2" />
<text  x="449.50" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="58.0" y="293" width="0.3" height="15.0" fill="rgb(239,2,23)" rx="2" ry="2" />
<text  x="60.97" y="303.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%)</title><rect x="877.8" y="1685" width="0.4" height="15.0" fill="rgb(248,146,27)" rx="2" ry="2" />
<text  x="880.84" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (4 samples, 0.13%)</title><rect x="125.1" y="1541" width="1.5" height="15.0" fill="rgb(219,226,28)" rx="2" ry="2" />
<text  x="128.12" y="1551.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.16%)</title><rect x="129.2" y="1525" width="1.8" height="15.0" fill="rgb(237,101,29)" rx="2" ry="2" />
<text  x="132.18" y="1535.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%)</title><rect x="87.9" y="293" width="0.3" height="15.0" fill="rgb(236,186,54)" rx="2" ry="2" />
<text  x="90.85" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%)</title><rect x="131.4" y="1525" width="0.4" height="15.0" fill="rgb(205,175,50)" rx="2" ry="2" />
<text  x="134.39" y="1535.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.03%)</title><rect x="182.7" y="1685" width="0.4" height="15.0" fill="rgb(217,157,23)" rx="2" ry="2" />
<text  x="185.68" y="1695.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator= (1 samples, 0.03%)</title><rect x="43.9" y="389" width="0.4" height="15.0" fill="rgb(237,90,14)" rx="2" ry="2" />
<text  x="46.95" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%)</title><rect x="137.3" y="1573" width="0.4" height="15.0" fill="rgb(242,87,40)" rx="2" ry="2" />
<text  x="140.30" y="1583.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (6 samples, 0.19%)</title><rect x="82.3" y="565" width="2.2" height="15.0" fill="rgb(243,176,17)" rx="2" ry="2" />
<text  x="85.32" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_index_statement, std::default_delete&lt;cql3::statements::create_index_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="93.0" y="549" width="0.4" height="15.0" fill="rgb(213,13,53)" rx="2" ry="2" />
<text  x="96.02" y="559.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%)</title><rect x="138.0" y="1509" width="0.4" height="15.0" fill="rgb(243,205,32)" rx="2" ry="2" />
<text  x="141.04" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (24 samples, 0.75%)</title><rect x="87.5" y="597" width="8.8" height="15.0" fill="rgb(219,64,54)" rx="2" ry="2" />
<text  x="90.49" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="54.3" y="229" width="0.3" height="15.0" fill="rgb(247,40,51)" rx="2" ry="2" />
<text  x="57.28" y="239.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%)</title><rect x="140.6" y="1829" width="0.4" height="15.0" fill="rgb(207,203,17)" rx="2" ry="2" />
<text  x="143.62" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%)</title><rect x="969.3" y="1573" width="3.4" height="15.0" fill="rgb(223,162,25)" rx="2" ry="2" />
<text  x="972.35" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (4 samples, 0.13%)</title><rect x="134.3" y="1477" width="1.5" height="15.0" fill="rgb(238,135,10)" rx="2" ry="2" />
<text  x="137.35" y="1487.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%)</title><rect x="113.3" y="1461" width="0.4" height="15.0" fill="rgb(223,165,13)" rx="2" ry="2" />
<text  x="116.31" y="1471.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="671.6" y="1749" width="0.4" height="15.0" fill="rgb(218,227,7)" rx="2" ry="2" />
<text  x="674.58" y="1759.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%)</title><rect x="680.1" y="1749" width="0.3" height="15.0" fill="rgb(231,29,23)" rx="2" ry="2" />
<text  x="683.07" y="1759.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.25%)</title><rect x="719.2" y="1749" width="2.9" height="15.0" fill="rgb(246,179,27)" rx="2" ry="2" />
<text  x="722.18" y="1759.5" ></text>
</g>
<g >
<title>row_cache::update (1 samples, 0.03%)</title><rect x="1112.9" y="1733" width="0.4" height="15.0" fill="rgb(216,38,3)" rx="2" ry="2" />
<text  x="1115.88" y="1743.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (93 samples, 2.91%)</title><rect x="878.9" y="1685" width="34.4" height="15.0" fill="rgb(222,55,9)" rx="2" ry="2" />
<text  x="881.95" y="1695.5" >cq..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="815.5" y="1589" width="0.4" height="15.0" fill="rgb(228,27,12)" rx="2" ry="2" />
<text  x="818.48" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="71.6" y="421" width="0.4" height="15.0" fill="rgb(217,40,1)" rx="2" ry="2" />
<text  x="74.62" y="431.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="45.1" y="213" width="0.3" height="15.0" fill="rgb(217,94,10)" rx="2" ry="2" />
<text  x="48.05" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="66.8" y="309" width="0.4" height="15.0" fill="rgb(212,69,2)" rx="2" ry="2" />
<text  x="69.82" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="513.3" y="1685" width="0.4" height="15.0" fill="rgb(227,136,15)" rx="2" ry="2" />
<text  x="516.29" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="825.8" y="1621" width="0.4" height="15.0" fill="rgb(227,61,25)" rx="2" ry="2" />
<text  x="828.82" y="1631.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (3 samples, 0.09%)</title><rect x="97.4" y="677" width="1.2" height="15.0" fill="rgb(227,185,26)" rx="2" ry="2" />
<text  x="100.45" y="687.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::with_scheduling_group&lt;table::try_flush_memtable_to_sstable (1 samples, 0.03%)</title><rect x="1112.9" y="1765" width="0.4" height="15.0" fill="rgb(228,162,26)" rx="2" ry="2" />
<text  x="1115.88" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="54.3" y="261" width="0.3" height="15.0" fill="rgb(228,11,37)" rx="2" ry="2" />
<text  x="57.28" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="105.9" y="1813" width="0.4" height="15.0" fill="rgb(244,86,13)" rx="2" ry="2" />
<text  x="108.93" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="58.0" y="309" width="0.3" height="15.0" fill="rgb(213,68,18)" rx="2" ry="2" />
<text  x="60.97" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="1093.7" y="1685" width="0.4" height="15.0" fill="rgb(239,172,37)" rx="2" ry="2" />
<text  x="1096.70" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (2 samples, 0.06%)</title><rect x="139.5" y="1589" width="0.8" height="15.0" fill="rgb(246,224,44)" rx="2" ry="2" />
<text  x="142.51" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%)</title><rect x="137.3" y="1541" width="0.4" height="15.0" fill="rgb(207,140,8)" rx="2" ry="2" />
<text  x="140.30" y="1551.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (4 samples, 0.13%)</title><rect x="591.9" y="1621" width="1.5" height="15.0" fill="rgb(237,57,47)" rx="2" ry="2" />
<text  x="594.88" y="1631.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, true&gt; (1 samples, 0.03%)</title><rect x="74.6" y="389" width="0.3" height="15.0" fill="rgb(246,133,3)" rx="2" ry="2" />
<text  x="77.57" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (7 samples, 0.22%)</title><rect x="21.4" y="277" width="2.6" height="15.0" fill="rgb(226,100,44)" rx="2" ry="2" />
<text  x="24.44" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="129.5" y="1429" width="0.8" height="15.0" fill="rgb(240,200,41)" rx="2" ry="2" />
<text  x="132.55" y="1439.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.03%)</title><rect x="109.3" y="1653" width="0.3" height="15.0" fill="rgb(207,174,29)" rx="2" ry="2" />
<text  x="112.26" y="1663.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (8 samples, 0.25%)</title><rect x="1105.1" y="1509" width="3.0" height="15.0" fill="rgb(220,94,33)" rx="2" ry="2" />
<text  x="1108.13" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="59.1" y="341" width="0.7" height="15.0" fill="rgb(238,83,13)" rx="2" ry="2" />
<text  x="62.07" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="72.0" y="277" width="0.4" height="15.0" fill="rgb(243,71,11)" rx="2" ry="2" />
<text  x="74.99" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.03%)</title><rect x="56.5" y="405" width="0.4" height="15.0" fill="rgb(211,107,34)" rx="2" ry="2" />
<text  x="59.49" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.16%)</title><rect x="18.9" y="245" width="1.8" height="15.0" fill="rgb(218,218,13)" rx="2" ry="2" />
<text  x="21.86" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="58.0" y="325" width="0.3" height="15.0" fill="rgb(227,113,6)" rx="2" ry="2" />
<text  x="60.97" y="335.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="120.3" y="1413" width="0.4" height="15.0" fill="rgb(245,172,53)" rx="2" ry="2" />
<text  x="123.33" y="1423.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (5 samples, 0.16%)</title><rect x="837.6" y="1685" width="1.9" height="15.0" fill="rgb(220,41,17)" rx="2" ry="2" />
<text  x="840.62" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.56%)</title><rect x="1104.8" y="1653" width="6.6" height="15.0" fill="rgb(245,89,10)" rx="2" ry="2" />
<text  x="1107.77" y="1663.5" ></text>
</g>
<g >
<title>std::move&lt;cql3::expr::conjunction&amp;&gt; (1 samples, 0.03%)</title><rect x="118.8" y="1301" width="0.4" height="15.0" fill="rgb(247,44,26)" rx="2" ry="2" />
<text  x="121.85" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="112.2" y="1413" width="0.4" height="15.0" fill="rgb(250,103,35)" rx="2" ry="2" />
<text  x="115.21" y="1423.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (4 samples, 0.13%)</title><rect x="15.2" y="405" width="1.4" height="15.0" fill="rgb(207,157,13)" rx="2" ry="2" />
<text  x="18.17" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%)</title><rect x="854.2" y="1765" width="0.4" height="15.0" fill="rgb(215,5,26)" rx="2" ry="2" />
<text  x="857.23" y="1775.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="67.9" y="405" width="0.4" height="15.0" fill="rgb(219,219,37)" rx="2" ry="2" />
<text  x="70.93" y="415.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%)</title><rect x="1115.8" y="1765" width="0.4" height="15.0" fill="rgb(219,88,0)" rx="2" ry="2" />
<text  x="1118.83" y="1775.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="98.9" y="949" width="0.4" height="15.0" fill="rgb(229,195,2)" rx="2" ry="2" />
<text  x="101.92" y="959.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (1 samples, 0.03%)</title><rect x="153.9" y="1781" width="0.4" height="15.0" fill="rgb(235,203,45)" rx="2" ry="2" />
<text  x="156.90" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (3 samples, 0.09%)</title><rect x="58.7" y="373" width="1.1" height="15.0" fill="rgb(216,103,21)" rx="2" ry="2" />
<text  x="61.71" y="383.5" ></text>
</g>
<g >
<title>clustering_key_prefix::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="858.7" y="1621" width="0.3" height="15.0" fill="rgb(207,164,4)" rx="2" ry="2" />
<text  x="861.66" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%)</title><rect x="320.3" y="1557" width="1.5" height="15.0" fill="rgb(208,218,22)" rx="2" ry="2" />
<text  x="323.31" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.09%)</title><rect x="539.5" y="1653" width="1.1" height="15.0" fill="rgb(208,227,43)" rx="2" ry="2" />
<text  x="542.49" y="1663.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="69.0" y="341" width="0.4" height="15.0" fill="rgb(212,54,6)" rx="2" ry="2" />
<text  x="72.04" y="351.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%)</title><rect x="98.6" y="757" width="0.3" height="15.0" fill="rgb(226,20,15)" rx="2" ry="2" />
<text  x="101.56" y="767.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%)</title><rect x="60.6" y="261" width="0.3" height="15.0" fill="rgb(217,220,20)" rx="2" ry="2" />
<text  x="63.55" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1155.7" y="1765" width="0.4" height="15.0" fill="rgb(221,167,10)" rx="2" ry="2" />
<text  x="1158.68" y="1775.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.03%)</title><rect x="1112.9" y="1589" width="0.4" height="15.0" fill="rgb(235,56,49)" rx="2" ry="2" />
<text  x="1115.88" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%)</title><rect x="73.5" y="213" width="0.3" height="15.0" fill="rgb(227,121,44)" rx="2" ry="2" />
<text  x="76.46" y="223.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.03%)</title><rect x="1108.8" y="1477" width="0.4" height="15.0" fill="rgb(222,45,52)" rx="2" ry="2" />
<text  x="1111.82" y="1487.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%)</title><rect x="66.8" y="405" width="0.4" height="15.0" fill="rgb(213,204,11)" rx="2" ry="2" />
<text  x="69.82" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="1040.6" y="1605" width="0.3" height="15.0" fill="rgb(225,183,41)" rx="2" ry="2" />
<text  x="1043.56" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (256 samples, 8.01%)</title><rect x="11.1" y="1861" width="94.5" height="15.0" fill="rgb(227,185,24)" rx="2" ry="2" />
<text  x="14.11" y="1871.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="55.0" y="261" width="0.4" height="15.0" fill="rgb(254,21,10)" rx="2" ry="2" />
<text  x="58.02" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="46.5" y="261" width="0.8" height="15.0" fill="rgb(206,76,18)" rx="2" ry="2" />
<text  x="49.53" y="271.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="60.2" y="341" width="0.4" height="15.0" fill="rgb(254,214,27)" rx="2" ry="2" />
<text  x="63.18" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%)</title><rect x="55.0" y="341" width="0.4" height="15.0" fill="rgb(205,217,12)" rx="2" ry="2" />
<text  x="58.02" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (1 samples, 0.03%)</title><rect x="109.3" y="1669" width="0.3" height="15.0" fill="rgb(229,200,45)" rx="2" ry="2" />
<text  x="112.26" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="88.2" y="357" width="0.4" height="15.0" fill="rgb(235,195,20)" rx="2" ry="2" />
<text  x="91.22" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%)</title><rect x="118.8" y="1349" width="0.4" height="15.0" fill="rgb(240,44,39)" rx="2" ry="2" />
<text  x="121.85" y="1359.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%)</title><rect x="151.3" y="1781" width="0.4" height="15.0" fill="rgb(248,101,54)" rx="2" ry="2" />
<text  x="154.32" y="1791.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%)</title><rect x="689.7" y="1733" width="1.4" height="15.0" fill="rgb(220,203,20)" rx="2" ry="2" />
<text  x="692.66" y="1743.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (19 samples, 0.59%)</title><rect x="662.0" y="1765" width="7.0" height="15.0" fill="rgb(254,218,34)" rx="2" ry="2" />
<text  x="664.99" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (2 samples, 0.06%)</title><rect x="139.5" y="1605" width="0.8" height="15.0" fill="rgb(237,5,21)" rx="2" ry="2" />
<text  x="142.51" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%)</title><rect x="164.2" y="1749" width="0.4" height="15.0" fill="rgb(228,105,0)" rx="2" ry="2" />
<text  x="167.23" y="1759.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="136.9" y="1525" width="0.4" height="15.0" fill="rgb(221,199,45)" rx="2" ry="2" />
<text  x="139.93" y="1535.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (12 samples, 0.38%)</title><rect x="1105.1" y="1589" width="4.5" height="15.0" fill="rgb(233,144,34)" rx="2" ry="2" />
<text  x="1108.13" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (7 samples, 0.22%)</title><rect x="101.1" y="1621" width="2.6" height="15.0" fill="rgb(218,137,10)" rx="2" ry="2" />
<text  x="104.14" y="1631.5" ></text>
</g>
<g >
<title>database::create_keyspace (1 samples, 0.03%)</title><rect x="182.7" y="1637" width="0.4" height="15.0" fill="rgb(248,2,37)" rx="2" ry="2" />
<text  x="185.68" y="1647.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (2 samples, 0.06%)</title><rect x="46.5" y="309" width="0.8" height="15.0" fill="rgb(237,85,31)" rx="2" ry="2" />
<text  x="49.53" y="319.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (5 samples, 0.16%)</title><rect x="985.2" y="1557" width="1.9" height="15.0" fill="rgb(218,168,39)" rx="2" ry="2" />
<text  x="988.22" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%)</title><rect x="1024.0" y="1525" width="0.7" height="15.0" fill="rgb(209,97,31)" rx="2" ry="2" />
<text  x="1026.96" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_allocate_map (2 samples, 0.06%)</title><rect x="15.5" y="309" width="0.8" height="15.0" fill="rgb(250,141,31)" rx="2" ry="2" />
<text  x="18.53" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (2 samples, 0.06%)</title><rect x="114.1" y="1477" width="0.7" height="15.0" fill="rgb(229,75,46)" rx="2" ry="2" />
<text  x="117.05" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%)</title><rect x="223.3" y="1733" width="0.3" height="15.0" fill="rgb(239,223,28)" rx="2" ry="2" />
<text  x="226.27" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::list_service_level_statement, std::default_delete&lt;cql3::statements::list_service_level_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="49.1" y="405" width="0.4" height="15.0" fill="rgb(240,78,23)" rx="2" ry="2" />
<text  x="52.11" y="415.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (1 samples, 0.03%)</title><rect x="740.6" y="1733" width="0.4" height="15.0" fill="rgb(242,76,39)" rx="2" ry="2" />
<text  x="743.58" y="1743.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%)</title><rect x="55.4" y="325" width="0.4" height="15.0" fill="rgb(221,191,41)" rx="2" ry="2" />
<text  x="58.38" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%)</title><rect x="52.8" y="389" width="0.7" height="15.0" fill="rgb(211,182,15)" rx="2" ry="2" />
<text  x="55.80" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="68.7" y="309" width="0.3" height="15.0" fill="rgb(245,78,28)" rx="2" ry="2" />
<text  x="71.67" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%)</title><rect x="1142.0" y="1749" width="0.8" height="15.0" fill="rgb(228,23,50)" rx="2" ry="2" />
<text  x="1145.03" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%)</title><rect x="138.0" y="1413" width="0.4" height="15.0" fill="rgb(235,105,3)" rx="2" ry="2" />
<text  x="141.04" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="151.3" y="1493" width="0.4" height="15.0" fill="rgb(243,120,35)" rx="2" ry="2" />
<text  x="154.32" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%)</title><rect x="321.4" y="1541" width="0.4" height="15.0" fill="rgb(236,137,1)" rx="2" ry="2" />
<text  x="324.42" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%)</title><rect x="46.5" y="213" width="0.8" height="15.0" fill="rgb(208,160,9)" rx="2" ry="2" />
<text  x="49.53" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%)</title><rect x="129.9" y="1381" width="0.4" height="15.0" fill="rgb(229,190,34)" rx="2" ry="2" />
<text  x="132.92" y="1391.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%)</title><rect x="64.2" y="421" width="0.8" height="15.0" fill="rgb(250,122,3)" rx="2" ry="2" />
<text  x="67.24" y="431.5" ></text>
</g>
<g >
<title>mutation_partition::append_clustered_row (2 samples, 0.06%)</title><rect x="1101.1" y="1605" width="0.7" height="15.0" fill="rgb(206,161,13)" rx="2" ry="2" />
<text  x="1104.08" y="1615.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%)</title><rect x="929.1" y="1653" width="0.4" height="15.0" fill="rgb(227,176,32)" rx="2" ry="2" />
<text  x="932.13" y="1663.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (135 samples, 4.22%)</title><rect x="978.2" y="1573" width="49.8" height="15.0" fill="rgb(207,34,26)" rx="2" ry="2" />
<text  x="981.21" y="1583.5" >servi..</text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%)</title><rect x="138.8" y="1557" width="0.3" height="15.0" fill="rgb(237,55,36)" rx="2" ry="2" />
<text  x="141.77" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (6 samples, 0.19%)</title><rect x="110.4" y="1573" width="2.2" height="15.0" fill="rgb(251,152,39)" rx="2" ry="2" />
<text  x="113.36" y="1583.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%)</title><rect x="190.8" y="1749" width="0.4" height="15.0" fill="rgb(254,181,35)" rx="2" ry="2" />
<text  x="193.80" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (2 samples, 0.06%)</title><rect x="249.8" y="1653" width="0.8" height="15.0" fill="rgb(247,42,48)" rx="2" ry="2" />
<text  x="252.84" y="1663.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%)</title><rect x="132.9" y="1573" width="0.3" height="15.0" fill="rgb(253,22,37)" rx="2" ry="2" />
<text  x="135.87" y="1583.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (1 samples, 0.03%)</title><rect x="63.1" y="357" width="0.4" height="15.0" fill="rgb(217,57,31)" rx="2" ry="2" />
<text  x="66.13" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%)</title><rect x="59.1" y="309" width="0.7" height="15.0" fill="rgb(254,28,47)" rx="2" ry="2" />
<text  x="62.07" y="319.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%)</title><rect x="52.4" y="421" width="0.4" height="15.0" fill="rgb(251,192,49)" rx="2" ry="2" />
<text  x="55.43" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="115.2" y="1557" width="0.3" height="15.0" fill="rgb(254,75,1)" rx="2" ry="2" />
<text  x="118.16" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator* (2 samples, 0.06%)</title><rect x="57.2" y="261" width="0.8" height="15.0" fill="rgb(247,48,26)" rx="2" ry="2" />
<text  x="60.23" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (1 samples, 0.03%)</title><rect x="856.4" y="1669" width="0.4" height="15.0" fill="rgb(208,216,3)" rx="2" ry="2" />
<text  x="859.44" y="1679.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.09%)</title><rect x="245.0" y="1717" width="1.1" height="15.0" fill="rgb(244,140,39)" rx="2" ry="2" />
<text  x="248.04" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.09%)</title><rect x="72.7" y="437" width="1.1" height="15.0" fill="rgb(252,125,28)" rx="2" ry="2" />
<text  x="75.73" y="447.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (3 samples, 0.09%)</title><rect x="183.1" y="1749" width="1.1" height="15.0" fill="rgb(236,106,17)" rx="2" ry="2" />
<text  x="186.05" y="1759.5" ></text>
</g>
<g >
<title>table::set_hit_rate (4 samples, 0.13%)</title><rect x="744.3" y="1733" width="1.4" height="15.0" fill="rgb(226,179,24)" rx="2" ry="2" />
<text  x="747.27" y="1743.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (2 samples, 0.06%)</title><rect x="857.5" y="1653" width="0.8" height="15.0" fill="rgb(210,129,25)" rx="2" ry="2" />
<text  x="860.55" y="1663.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (171 samples, 5.35%)</title><rect x="966.4" y="1605" width="63.1" height="15.0" fill="rgb(236,119,45)" rx="2" ry="2" />
<text  x="969.40" y="1615.5" >servic..</text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (3 samples, 0.09%)</title><rect x="84.5" y="517" width="1.1" height="15.0" fill="rgb(207,163,23)" rx="2" ry="2" />
<text  x="87.53" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%)</title><rect x="60.6" y="325" width="0.3" height="15.0" fill="rgb(214,189,27)" rx="2" ry="2" />
<text  x="63.55" y="335.5" ></text>
</g>
<g >
<title>partition_entry::read (3 samples, 0.09%)</title><rect x="622.9" y="1653" width="1.1" height="15.0" fill="rgb(215,143,45)" rx="2" ry="2" />
<text  x="625.88" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.03%)</title><rect x="63.1" y="293" width="0.4" height="15.0" fill="rgb(210,114,13)" rx="2" ry="2" />
<text  x="66.13" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="133.2" y="1477" width="0.4" height="15.0" fill="rgb(215,17,15)" rx="2" ry="2" />
<text  x="136.24" y="1487.5" ></text>
</g>
<g >
<title>std::forward&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="23.7" y="261" width="0.3" height="15.0" fill="rgb(248,133,32)" rx="2" ry="2" />
<text  x="26.65" y="271.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (13 samples, 0.41%)</title><rect x="52.1" y="533" width="4.8" height="15.0" fill="rgb(235,190,53)" rx="2" ry="2" />
<text  x="55.06" y="543.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.03%)</title><rect x="861.2" y="1541" width="0.4" height="15.0" fill="rgb(216,44,41)" rx="2" ry="2" />
<text  x="864.24" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%)</title><rect x="97.8" y="613" width="0.4" height="15.0" fill="rgb(211,140,1)" rx="2" ry="2" />
<text  x="100.82" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned int&gt;::_Rb_tree_iterator (1 samples, 0.03%)</title><rect x="39.9" y="325" width="0.4" height="15.0" fill="rgb(222,175,20)" rx="2" ry="2" />
<text  x="42.89" y="335.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (3 samples, 0.09%)</title><rect x="1018.8" y="1477" width="1.1" height="15.0" fill="rgb(252,63,14)" rx="2" ry="2" />
<text  x="1021.79" y="1487.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%)</title><rect x="74.9" y="485" width="0.4" height="15.0" fill="rgb(252,129,43)" rx="2" ry="2" />
<text  x="77.94" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="59.4" y="277" width="0.4" height="15.0" fill="rgb(235,138,38)" rx="2" ry="2" />
<text  x="62.44" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="137.3" y="1253" width="0.4" height="15.0" fill="rgb(228,69,52)" rx="2" ry="2" />
<text  x="140.30" y="1263.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%)</title><rect x="98.9" y="725" width="0.4" height="15.0" fill="rgb(209,37,52)" rx="2" ry="2" />
<text  x="101.92" y="735.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::impl::add_registration (1 samples, 0.03%)</title><rect x="153.2" y="1605" width="0.3" height="15.0" fill="rgb(252,112,7)" rx="2" ry="2" />
<text  x="156.16" y="1615.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (1 samples, 0.03%)</title><rect x="80.8" y="581" width="0.4" height="15.0" fill="rgb(222,225,24)" rx="2" ry="2" />
<text  x="83.84" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="96.3" y="469" width="0.4" height="15.0" fill="rgb(238,220,27)" rx="2" ry="2" />
<text  x="99.34" y="479.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (84 samples, 2.63%)</title><rect x="109.3" y="1749" width="31.0" height="15.0" fill="rgb(211,30,4)" rx="2" ry="2" />
<text  x="112.26" y="1759.5" >cq..</text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~_Vector_base (1 samples, 0.03%)</title><rect x="116.3" y="1509" width="0.3" height="15.0" fill="rgb(210,137,8)" rx="2" ry="2" />
<text  x="119.27" y="1519.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%)</title><rect x="138.0" y="1541" width="0.4" height="15.0" fill="rgb(239,26,3)" rx="2" ry="2" />
<text  x="141.04" y="1551.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.09%)</title><rect x="221.1" y="1733" width="1.1" height="15.0" fill="rgb(247,37,27)" rx="2" ry="2" />
<text  x="224.06" y="1743.5" ></text>
</g>
<g >
<title>sstables::mc::writer::writer (1 samples, 0.03%)</title><rect x="151.7" y="1797" width="0.4" height="15.0" fill="rgb(209,24,20)" rx="2" ry="2" />
<text  x="154.69" y="1807.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (2 samples, 0.06%)</title><rect x="1154.9" y="1749" width="0.8" height="15.0" fill="rgb(248,186,27)" rx="2" ry="2" />
<text  x="1157.95" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (233 samples, 7.29%)</title><rect x="11.1" y="805" width="86.0" height="15.0" fill="rgb(220,70,35)" rx="2" ry="2" />
<text  x="14.11" y="815.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="412.6" y="1653" width="0.3" height="15.0" fill="rgb(246,67,30)" rx="2" ry="2" />
<text  x="415.56" y="1663.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (14 samples, 0.44%)</title><rect x="669.0" y="1765" width="5.2" height="15.0" fill="rgb(231,173,49)" rx="2" ry="2" />
<text  x="672.00" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%)</title><rect x="824.0" y="1589" width="0.3" height="15.0" fill="rgb(225,37,13)" rx="2" ry="2" />
<text  x="826.97" y="1599.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="765.3" y="1717" width="0.4" height="15.0" fill="rgb(223,167,14)" rx="2" ry="2" />
<text  x="768.30" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%)</title><rect x="61.3" y="309" width="0.4" height="15.0" fill="rgb(235,223,51)" rx="2" ry="2" />
<text  x="64.29" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="65.0" y="389" width="0.3" height="15.0" fill="rgb(234,93,30)" rx="2" ry="2" />
<text  x="67.98" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.03%)</title><rect x="15.2" y="373" width="0.3" height="15.0" fill="rgb(218,126,39)" rx="2" ry="2" />
<text  x="18.17" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%)</title><rect x="1189.3" y="1877" width="0.3" height="15.0" fill="rgb(223,151,16)" rx="2" ry="2" />
<text  x="1192.26" y="1887.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%)</title><rect x="105.9" y="1797" width="0.4" height="15.0" fill="rgb(227,128,8)" rx="2" ry="2" />
<text  x="108.93" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%)</title><rect x="48.0" y="261" width="0.4" height="15.0" fill="rgb(227,163,10)" rx="2" ry="2" />
<text  x="51.01" y="271.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%)</title><rect x="572.0" y="1653" width="1.1" height="15.0" fill="rgb(233,228,4)" rx="2" ry="2" />
<text  x="574.96" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%)</title><rect x="99.3" y="709" width="0.4" height="15.0" fill="rgb(239,103,33)" rx="2" ry="2" />
<text  x="102.29" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%)</title><rect x="67.2" y="357" width="0.4" height="15.0" fill="rgb(236,206,35)" rx="2" ry="2" />
<text  x="70.19" y="367.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (2,717 samples, 84.96%)</title><rect x="153.5" y="1829" width="1002.6" height="15.0" fill="rgb(247,217,25)" rx="2" ry="2" />
<text  x="156.53" y="1839.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>db::schema_tables::make_table_mutations (1 samples, 0.03%)</title><rect x="183.8" y="1637" width="0.4" height="15.0" fill="rgb(210,153,37)" rx="2" ry="2" />
<text  x="186.79" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (3 samples, 0.09%)</title><rect x="62.8" y="405" width="1.1" height="15.0" fill="rgb(206,168,7)" rx="2" ry="2" />
<text  x="65.76" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (2 samples, 0.06%)</title><rect x="75.3" y="421" width="0.7" height="15.0" fill="rgb(237,130,13)" rx="2" ry="2" />
<text  x="78.31" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%)</title><rect x="76.8" y="437" width="0.4" height="15.0" fill="rgb(239,5,27)" rx="2" ry="2" />
<text  x="79.79" y="447.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (32 samples, 1.00%)</title><rect x="772.7" y="1701" width="11.8" height="15.0" fill="rgb(222,36,40)" rx="2" ry="2" />
<text  x="775.68" y="1711.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (13 samples, 0.41%)</title><rect x="294.9" y="1637" width="4.7" height="15.0" fill="rgb(218,191,14)" rx="2" ry="2" />
<text  x="297.85" y="1647.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="182.7" y="1717" width="0.4" height="15.0" fill="rgb(231,217,42)" rx="2" ry="2" />
<text  x="185.68" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%)</title><rect x="133.2" y="1573" width="0.4" height="15.0" fill="rgb(241,30,26)" rx="2" ry="2" />
<text  x="136.24" y="1583.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (1 samples, 0.03%)</title><rect x="182.3" y="1701" width="0.4" height="15.0" fill="rgb(212,2,42)" rx="2" ry="2" />
<text  x="185.31" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="87.9" y="421" width="0.3" height="15.0" fill="rgb(252,102,3)" rx="2" ry="2" />
<text  x="90.85" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="52.1" y="309" width="0.3" height="15.0" fill="rgb(239,14,11)" rx="2" ry="2" />
<text  x="55.06" y="319.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (14 samples, 0.44%)</title><rect x="74.9" y="645" width="5.2" height="15.0" fill="rgb(241,137,28)" rx="2" ry="2" />
<text  x="77.94" y="655.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%)</title><rect x="704.8" y="1749" width="0.4" height="15.0" fill="rgb(246,207,44)" rx="2" ry="2" />
<text  x="707.79" y="1759.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%)</title><rect x="676.7" y="1749" width="0.4" height="15.0" fill="rgb(225,66,31)" rx="2" ry="2" />
<text  x="679.75" y="1759.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%)</title><rect x="828.8" y="1653" width="0.7" height="15.0" fill="rgb(253,112,35)" rx="2" ry="2" />
<text  x="831.77" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (6 samples, 0.19%)</title><rect x="122.9" y="1493" width="2.2" height="15.0" fill="rgb(243,209,23)" rx="2" ry="2" />
<text  x="125.91" y="1503.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.06%)</title><rect x="1142.8" y="1749" width="0.7" height="15.0" fill="rgb(239,165,7)" rx="2" ry="2" />
<text  x="1145.77" y="1759.5" ></text>
</g>
<g >
<title>dht::tri_compare (3 samples, 0.09%)</title><rect x="1065.3" y="1557" width="1.1" height="15.0" fill="rgb(205,69,7)" rx="2" ry="2" />
<text  x="1068.28" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (7 samples, 0.22%)</title><rect x="525.5" y="1637" width="2.5" height="15.0" fill="rgb(214,223,38)" rx="2" ry="2" />
<text  x="528.47" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_charPositionInLine (2 samples, 0.06%)</title><rect x="25.9" y="309" width="0.7" height="15.0" fill="rgb(252,210,42)" rx="2" ry="2" />
<text  x="28.87" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%)</title><rect x="142.1" y="1845" width="0.4" height="15.0" fill="rgb(234,135,22)" rx="2" ry="2" />
<text  x="145.10" y="1855.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (1 samples, 0.03%)</title><rect x="1077.1" y="1573" width="0.4" height="15.0" fill="rgb(218,71,34)" rx="2" ry="2" />
<text  x="1080.09" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%)</title><rect x="111.5" y="1445" width="0.7" height="15.0" fill="rgb(251,82,21)" rx="2" ry="2" />
<text  x="114.47" y="1455.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="88.6" y="405" width="0.4" height="15.0" fill="rgb(227,185,29)" rx="2" ry="2" />
<text  x="91.59" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%)</title><rect x="68.7" y="277" width="0.3" height="15.0" fill="rgb(227,204,4)" rx="2" ry="2" />
<text  x="71.67" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%)</title><rect x="15.9" y="293" width="0.4" height="15.0" fill="rgb(211,108,21)" rx="2" ry="2" />
<text  x="18.90" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (5 samples, 0.16%)</title><rect x="705.2" y="1749" width="1.8" height="15.0" fill="rgb(209,73,44)" rx="2" ry="2" />
<text  x="708.16" y="1759.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (20 samples, 0.63%)</title><rect x="724.3" y="1749" width="7.4" height="15.0" fill="rgb(216,13,43)" rx="2" ry="2" />
<text  x="727.35" y="1759.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (5 samples, 0.16%)</title><rect x="1026.2" y="1557" width="1.8" height="15.0" fill="rgb(211,58,21)" rx="2" ry="2" />
<text  x="1029.17" y="1567.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_lower_bound (2 samples, 0.06%)</title><rect x="39.1" y="325" width="0.8" height="15.0" fill="rgb(228,170,24)" rx="2" ry="2" />
<text  x="42.15" y="335.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%)</title><rect x="63.9" y="309" width="0.3" height="15.0" fill="rgb(239,138,46)" rx="2" ry="2" />
<text  x="66.87" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (1 samples, 0.03%)</title><rect x="150.2" y="1797" width="0.4" height="15.0" fill="rgb(214,202,30)" rx="2" ry="2" />
<text  x="153.21" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (2 samples, 0.06%)</title><rect x="96.3" y="581" width="0.8" height="15.0" fill="rgb(245,0,42)" rx="2" ry="2" />
<text  x="99.34" y="591.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="70.9" y="373" width="0.4" height="15.0" fill="rgb(248,111,26)" rx="2" ry="2" />
<text  x="73.88" y="383.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (27 samples, 0.84%)</title><rect x="856.4" y="1749" width="10.0" height="15.0" fill="rgb(206,204,19)" rx="2" ry="2" />
<text  x="859.44" y="1759.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%)</title><rect x="87.9" y="485" width="0.3" height="15.0" fill="rgb(210,146,42)" rx="2" ry="2" />
<text  x="90.85" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="87.9" y="405" width="0.3" height="15.0" fill="rgb(243,66,22)" rx="2" ry="2" />
<text  x="90.85" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (2,716 samples, 84.93%)</title><rect x="153.5" y="1797" width="1002.2" height="15.0" fill="rgb(252,175,46)" rx="2" ry="2" />
<text  x="156.53" y="1807.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::delete_statement*, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt; (1 samples, 0.03%)</title><rect x="94.1" y="533" width="0.4" height="15.0" fill="rgb(212,72,4)" rx="2" ry="2" />
<text  x="97.13" y="543.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%)</title><rect x="50.6" y="517" width="0.4" height="15.0" fill="rgb(205,100,15)" rx="2" ry="2" />
<text  x="53.59" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%)</title><rect x="69.0" y="309" width="0.4" height="15.0" fill="rgb(236,229,21)" rx="2" ry="2" />
<text  x="72.04" y="319.5" ></text>
</g>
<g >
<title>do_cql_test (13 samples, 0.41%)</title><rect x="52.1" y="581" width="4.8" height="15.0" fill="rgb(251,120,12)" rx="2" ry="2" />
<text  x="55.06" y="591.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%)</title><rect x="146.9" y="1845" width="0.4" height="15.0" fill="rgb(243,155,13)" rx="2" ry="2" />
<text  x="149.89" y="1855.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (3 samples, 0.09%)</title><rect x="860.5" y="1573" width="1.1" height="15.0" fill="rgb(246,210,51)" rx="2" ry="2" />
<text  x="863.50" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%)</title><rect x="860.1" y="1541" width="0.4" height="15.0" fill="rgb(213,136,25)" rx="2" ry="2" />
<text  x="863.13" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="44.7" y="261" width="0.4" height="15.0" fill="rgb(214,15,14)" rx="2" ry="2" />
<text  x="47.68" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%)</title><rect x="70.9" y="357" width="0.4" height="15.0" fill="rgb(242,161,6)" rx="2" ry="2" />
<text  x="73.88" y="367.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="66.1" y="421" width="0.4" height="15.0" fill="rgb(206,214,38)" rx="2" ry="2" />
<text  x="69.09" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="129.9" y="1397" width="0.4" height="15.0" fill="rgb(206,212,47)" rx="2" ry="2" />
<text  x="132.92" y="1407.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%)</title><rect x="821.8" y="1621" width="1.4" height="15.0" fill="rgb(245,191,49)" rx="2" ry="2" />
<text  x="824.76" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%)</title><rect x="65.0" y="405" width="0.3" height="15.0" fill="rgb(230,36,24)" rx="2" ry="2" />
<text  x="67.98" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%)</title><rect x="853.9" y="1749" width="0.3" height="15.0" fill="rgb(245,229,5)" rx="2" ry="2" />
<text  x="856.86" y="1759.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::has_supporting_index (1 samples, 0.03%)</title><rect x="102.6" y="1573" width="0.4" height="15.0" fill="rgb(251,88,42)" rx="2" ry="2" />
<text  x="105.61" y="1583.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (29 samples, 0.91%)</title><rect x="437.6" y="1669" width="10.7" height="15.0" fill="rgb(215,51,35)" rx="2" ry="2" />
<text  x="440.65" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.03%)</title><rect x="125.9" y="1493" width="0.3" height="15.0" fill="rgb(248,16,29)" rx="2" ry="2" />
<text  x="128.86" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="42.1" y="309" width="0.4" height="15.0" fill="rgb(218,87,44)" rx="2" ry="2" />
<text  x="45.10" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%)</title><rect x="134.7" y="1333" width="0.4" height="15.0" fill="rgb(245,45,11)" rx="2" ry="2" />
<text  x="137.72" y="1343.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%)</title><rect x="42.8" y="277" width="0.4" height="15.0" fill="rgb(249,30,20)" rx="2" ry="2" />
<text  x="45.84" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%)</title><rect x="73.8" y="293" width="0.4" height="15.0" fill="rgb(221,121,24)" rx="2" ry="2" />
<text  x="76.83" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (7 samples, 0.22%)</title><rect x="101.1" y="1605" width="2.6" height="15.0" fill="rgb(243,108,18)" rx="2" ry="2" />
<text  x="104.14" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="56.9" y="373" width="0.3" height="15.0" fill="rgb(211,14,37)" rx="2" ry="2" />
<text  x="59.86" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (45 samples, 1.41%)</title><rect x="115.2" y="1573" width="16.6" height="15.0" fill="rgb(228,155,22)" rx="2" ry="2" />
<text  x="118.16" y="1583.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.03%)</title><rect x="20.3" y="181" width="0.4" height="15.0" fill="rgb(226,77,52)" rx="2" ry="2" />
<text  x="23.33" y="191.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (13 samples, 0.41%)</title><rect x="52.1" y="469" width="4.8" height="15.0" fill="rgb(233,219,6)" rx="2" ry="2" />
<text  x="55.06" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%)</title><rect x="73.8" y="309" width="0.4" height="15.0" fill="rgb(221,55,16)" rx="2" ry="2" />
<text  x="76.83" y="319.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%)</title><rect x="52.4" y="405" width="0.4" height="15.0" fill="rgb(247,9,0)" rx="2" ry="2" />
<text  x="55.43" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%)</title><rect x="527.7" y="1589" width="0.3" height="15.0" fill="rgb(242,53,31)" rx="2" ry="2" />
<text  x="530.68" y="1599.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.03%)</title><rect x="184.9" y="1685" width="0.4" height="15.0" fill="rgb(249,105,22)" rx="2" ry="2" />
<text  x="187.90" y="1695.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%)</title><rect x="703.7" y="1749" width="1.1" height="15.0" fill="rgb(210,66,13)" rx="2" ry="2" />
<text  x="706.68" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%)</title><rect x="646.1" y="1669" width="0.4" height="15.0" fill="rgb(211,193,36)" rx="2" ry="2" />
<text  x="649.12" y="1679.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (4 samples, 0.13%)</title><rect x="775.6" y="1669" width="1.5" height="15.0" fill="rgb(212,94,15)" rx="2" ry="2" />
<text  x="778.63" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (21 samples, 0.66%)</title><rect x="62.4" y="645" width="7.7" height="15.0" fill="rgb(226,123,30)" rx="2" ry="2" />
<text  x="65.40" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="66.1" y="341" width="0.4" height="15.0" fill="rgb(211,217,51)" rx="2" ry="2" />
<text  x="69.09" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (1 samples, 0.03%)</title><rect x="1109.2" y="1509" width="0.4" height="15.0" fill="rgb(251,46,18)" rx="2" ry="2" />
<text  x="1112.19" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%)</title><rect x="72.4" y="389" width="0.3" height="15.0" fill="rgb(208,94,51)" rx="2" ry="2" />
<text  x="75.36" y="399.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (695 samples, 21.73%)</title><rect x="856.4" y="1765" width="256.5" height="15.0" fill="rgb(224,122,31)" rx="2" ry="2" />
<text  x="859.44" y="1775.5" >seastar::lambda_task&lt;seastar::exec..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (38 samples, 1.19%)</title><rect x="731.7" y="1765" width="14.0" height="15.0" fill="rgb(234,75,27)" rx="2" ry="2" />
<text  x="734.73" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%)</title><rect x="193.0" y="1749" width="0.4" height="15.0" fill="rgb(241,106,36)" rx="2" ry="2" />
<text  x="196.01" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (6 samples, 0.19%)</title><rect x="21.4" y="245" width="2.3" height="15.0" fill="rgb(236,205,10)" rx="2" ry="2" />
<text  x="24.44" y="255.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.06%)</title><rect x="75.3" y="357" width="0.7" height="15.0" fill="rgb(206,15,49)" rx="2" ry="2" />
<text  x="78.31" y="367.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.03%)</title><rect x="107.4" y="1701" width="0.4" height="15.0" fill="rgb(213,5,25)" rx="2" ry="2" />
<text  x="110.41" y="1711.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (2 samples, 0.06%)</title><rect x="37.7" y="357" width="0.7" height="15.0" fill="rgb(250,94,27)" rx="2" ry="2" />
<text  x="40.67" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (34 samples, 1.06%)</title><rect x="499.3" y="1653" width="12.5" height="15.0" fill="rgb(254,64,36)" rx="2" ry="2" />
<text  x="502.27" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%)</title><rect x="132.1" y="1557" width="0.4" height="15.0" fill="rgb(240,85,48)" rx="2" ry="2" />
<text  x="135.13" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (6 samples, 0.19%)</title><rect x="77.5" y="469" width="2.2" height="15.0" fill="rgb(221,228,35)" rx="2" ry="2" />
<text  x="80.52" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::expr::expression&gt;::new_allocator (1 samples, 0.03%)</title><rect x="46.5" y="101" width="0.4" height="15.0" fill="rgb(250,17,21)" rx="2" ry="2" />
<text  x="49.53" y="111.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%)</title><rect x="54.3" y="293" width="0.3" height="15.0" fill="rgb(218,97,24)" rx="2" ry="2" />
<text  x="57.28" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%)</title><rect x="58.0" y="405" width="0.3" height="15.0" fill="rgb(228,141,17)" rx="2" ry="2" />
<text  x="60.97" y="415.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.03%)</title><rect x="151.3" y="1813" width="0.4" height="15.0" fill="rgb(254,119,34)" rx="2" ry="2" />
<text  x="154.32" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (2 samples, 0.06%)</title><rect x="859.8" y="1589" width="0.7" height="15.0" fill="rgb(245,49,41)" rx="2" ry="2" />
<text  x="862.76" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (3 samples, 0.09%)</title><rect x="84.5" y="565" width="1.1" height="15.0" fill="rgb(241,213,23)" rx="2" ry="2" />
<text  x="87.53" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%)</title><rect x="48.0" y="245" width="0.4" height="15.0" fill="rgb(217,126,27)" rx="2" ry="2" />
<text  x="51.01" y="255.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (1 samples, 0.03%)</title><rect x="184.9" y="1717" width="0.4" height="15.0" fill="rgb(212,66,46)" rx="2" ry="2" />
<text  x="187.90" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%)</title><rect x="115.2" y="1445" width="0.3" height="15.0" fill="rgb(254,65,37)" rx="2" ry="2" />
<text  x="118.16" y="1455.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (1 samples, 0.03%)</title><rect x="1114.0" y="1749" width="0.4" height="15.0" fill="rgb(236,69,6)" rx="2" ry="2" />
<text  x="1116.99" y="1759.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%)</title><rect x="134.7" y="1397" width="1.1" height="15.0" fill="rgb(251,52,37)" rx="2" ry="2" />
<text  x="137.72" y="1407.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%)</title><rect x="1112.9" y="1637" width="0.4" height="15.0" fill="rgb(248,17,19)" rx="2" ry="2" />
<text  x="1115.88" y="1647.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%)</title><rect x="61.3" y="277" width="0.4" height="15.0" fill="rgb(221,83,45)" rx="2" ry="2" />
<text  x="64.29" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%)</title><rect x="20.7" y="277" width="0.4" height="15.0" fill="rgb(214,132,48)" rx="2" ry="2" />
<text  x="23.70" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%)</title><rect x="153.2" y="1701" width="0.3" height="15.0" fill="rgb(253,27,45)" rx="2" ry="2" />
<text  x="156.16" y="1711.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.03%)</title><rect x="1100.0" y="1557" width="0.3" height="15.0" fill="rgb(251,170,6)" rx="2" ry="2" />
<text  x="1102.97" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%)</title><rect x="151.3" y="1797" width="0.4" height="15.0" fill="rgb(232,220,29)" rx="2" ry="2" />
<text  x="154.32" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%)</title><rect x="87.9" y="309" width="0.3" height="15.0" fill="rgb(241,49,8)" rx="2" ry="2" />
<text  x="90.85" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.09%)</title><rect x="549.8" y="1685" width="1.1" height="15.0" fill="rgb(233,101,39)" rx="2" ry="2" />
<text  x="552.82" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (240 samples, 7.50%)</title><rect x="11.1" y="1061" width="88.6" height="15.0" fill="rgb(248,132,29)" rx="2" ry="2" />
<text  x="14.11" y="1071.5" >[unknown]</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%)</title><rect x="73.1" y="373" width="0.7" height="15.0" fill="rgb(228,62,33)" rx="2" ry="2" />
<text  x="76.10" y="383.5" ></text>
</g>
</g>
</svg>
