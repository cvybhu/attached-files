<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1974" onload="init(evt)" viewBox="0 0 1200 1974" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1974.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1957" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1957" > </text>
<g id="frames">
<g >
<title>db::block_for (1 samples, 0.03%; 0.00%)</title><rect x="1039.1" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1042.11" y="1615.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="529.6" y="1605" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="532.64" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1621" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1631.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (102 samples, 3.25%; 0.00%)</title><rect x="10.8" y="581" width="38.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="591.5" >sea..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="133.4" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.42" y="1519.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::destroy&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="65.3" y="405" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="68.31" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (4 samples, 0.13%; 0.00%)</title><rect x="42.4" y="325" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.36" y="335.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="94.7" y="1429" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="97.66" y="1439.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="789" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="799.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="137.6" y="1461" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="140.56" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="1109" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1119.5" >[unknown]</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.82" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (65 samples, 2.07%; +0.10%)</title><rect x="518.7" y="1701" width="24.5" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="521.72" y="1711.5" >s..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="61.2" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.17" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="153.7" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="156.74" y="1487.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="549" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="559.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (135 samples, 4.30%; -0.38%)</title><rect x="571.4" y="1669" width="50.8" height="15.0" fill="rgb(100,100,255)" rx="2" ry="2" />
<text  x="574.40" y="1679.5" >memta..</text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (3 samples, 0.10%; 0.00%)</title><rect x="25.8" y="277" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="28.80" y="287.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="885" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="895.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (2 samples, 0.06%; 0.00%)</title><rect x="39.7" y="213" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.73" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="872.4" y="1573" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="875.42" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (4 samples, 0.13%; 0.00%)</title><rect x="98.8" y="1381" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="1391.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (60 samples, 1.91%; +0.10%)</title><rect x="664.3" y="1765" width="22.6" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="667.34" y="1775.5" >s..</text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; +0.10%)</title><rect x="411.1" y="1685" width="1.1" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="414.11" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="112.0" y="1413" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1423.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (20 samples, 0.64%; -0.03%)</title><rect x="1095.9" y="1733" width="7.6" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1098.93" y="1743.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="54.4" y="69" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.40" y="79.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (1 samples, 0.03%; -0.10%)</title><rect x="484.9" y="1653" width="0.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="487.86" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (33 samples, 1.05%; 0.00%)</title><rect x="24.7" y="325" width="12.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.67" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="107.1" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.08" y="1375.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (1 samples, 0.03%; +0.03%)</title><rect x="155.2" y="1781" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="158.24" y="1791.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (1 samples, 0.03%; 0.00%)</title><rect x="302.0" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="304.99" y="1615.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (2 samples, 0.06%; +0.03%)</title><rect x="1106.8" y="1477" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1109.84" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="148.8" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.85" y="1423.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (22 samples, 0.70%; -0.13%)</title><rect x="240.3" y="1717" width="8.3" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="243.28" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1669" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1679.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="81.9" y="869" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="84.87" y="879.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="661" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="671.5" ></text>
</g>
<g >
<title>db::block_for (3 samples, 0.10%; +0.10%)</title><rect x="1041.0" y="1589" width="1.1" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1043.99" y="1599.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (2 samples, 0.06%; -0.03%)</title><rect x="719.3" y="1749" width="0.7" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="722.28" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="469" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="479.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.06%; +0.06%)</title><rect x="299.7" y="1605" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="302.73" y="1615.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;**, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;**&gt; (1 samples, 0.03%; 0.00%)</title><rect x="23.9" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.92" y="207.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1455.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.87" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::select_statement, std::default_delete&lt;cql3::statements::raw::select_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; +0.03%)</title><rect x="46.1" y="405" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="49.12" y="415.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1375.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (12 samples, 0.38%; 0.00%)</title><rect x="1103.8" y="1589" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.83" y="1599.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%; +0.03%)</title><rect x="709.5" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="712.50" y="1743.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.61" y="1471.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.93" y="1343.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.06%)</title><rect x="784.8" y="1669" width="1.5" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="787.75" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.03%; -0.03%)</title><rect x="300.5" y="1605" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="303.48" y="1615.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1125" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.06%; +0.06%)</title><rect x="883.3" y="1573" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="886.34" y="1583.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (34 samples, 1.08%; +0.16%)</title><rect x="696.7" y="1765" width="12.8" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="699.70" y="1775.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (16 samples, 0.51%; 0.00%)</title><rect x="58.5" y="453" width="6.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="463.5" ></text>
</g>
<g >
<title>database::query (73 samples, 2.33%; +0.03%)</title><rect x="991.0" y="1541" width="27.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="993.95" y="1551.5" >d..</text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="821" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="831.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="39.7" y="245" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.73" y="255.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="965" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="975.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::grant_role_statement*, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.9" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.88" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="144.0" y="1285" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.95" y="1295.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_view_statement, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="79.6" y="517" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="82.61" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.10%; 0.00%)</title><rect x="144.3" y="1461" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.33" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="303.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="869" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="879.5" >[unknown]</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.06%; 0.00%)</title><rect x="129.7" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.66" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="287.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (97 samples, 3.09%; 0.00%)</title><rect x="12.6" y="517" width="36.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.63" y="527.5" >sin..</text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1685" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1695.5" >[unknown]</text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="597.7" y="1637" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="600.74" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="67.6" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.57" y="223.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (1 samples, 0.03%; +0.03%)</title><rect x="618.4" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="621.44" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; +0.03%)</title><rect x="51.4" y="389" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="54.39" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.43" y="1423.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; +0.03%)</title><rect x="568.0" y="1653" width="1.9" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="571.02" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="152.6" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.61" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; 0.00%)</title><rect x="23.2" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.17" y="223.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (1 samples, 0.03%; 0.00%)</title><rect x="189.9" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.86" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="66.4" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.44" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="67.6" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.57" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (10 samples, 0.32%; -0.03%)</title><rect x="1091.8" y="1685" width="3.8" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1094.79" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; -0.03%)</title><rect x="93.9" y="1445" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="96.91" y="1455.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="144.7" y="1413" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.71" y="1423.5" ></text>
</g>
<g >
<title>table::make_reader (223 samples, 7.11%; -0.22%)</title><rect x="553.0" y="1685" width="83.9" height="15.0" fill="rgb(146,146,255)" rx="2" ry="2" />
<text  x="555.97" y="1695.5" >table::ma..</text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="102.6" y="1365" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.56" y="1375.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (251 samples, 8.00%; +0.03%)</title><rect x="738.1" y="1765" width="94.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="741.09" y="1775.5" >seastar::in..</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="69" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="79.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.29%; -0.19%)</title><rect x="243.3" y="1685" width="3.4" height="15.0" fill="rgb(155,155,255)" rx="2" ry="2" />
<text  x="246.29" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="255.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="53.6" y="341" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.65" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (4 samples, 0.13%; 0.00%)</title><rect x="94.3" y="1509" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.29" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (32 samples, 1.02%; 0.00%)</title><rect x="141.7" y="1493" width="12.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.70" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="41.6" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.61" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.10%)</title><rect x="545.8" y="1685" width="0.8" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="548.82" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.10%; -0.03%)</title><rect x="112.0" y="1509" width="1.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="114.97" y="1519.5" ></text>
</g>
<g >
<title>ser::row_view::columns (1 samples, 0.03%; 0.00%)</title><rect x="1102.0" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1104.95" y="1615.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1551.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="43.9" y="53" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="63.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="515.3" y="1669" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="518.34" y="1679.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="677" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="687.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (5 samples, 0.16%; 0.00%)</title><rect x="55.9" y="501" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="511.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1631.5" ></text>
</g>
<g >
<title>make_combined_reader (2 samples, 0.06%; +0.06%)</title><rect x="551.1" y="1685" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="554.08" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="116.9" y="1205" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="119.86" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1263.5" ></text>
</g>
<g >
<title>db::get_cdc_generation_mutations (1 samples, 0.03%; 0.00%)</title><rect x="187.6" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.60" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="917" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="927.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="24.3" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.30" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.16%; +0.13%)</title><rect x="969.9" y="1557" width="1.9" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="972.88" y="1567.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="1205" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.93" y="1215.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (12 samples, 0.38%; -0.16%)</title><rect x="255.3" y="1717" width="4.5" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="258.33" y="1727.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1263.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (6 samples, 0.19%; +0.03%)</title><rect x="121.4" y="1845" width="2.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="124.38" y="1855.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.03%; +0.03%)</title><rect x="127.8" y="1797" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="130.77" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="67.2" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.19" y="447.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="191.0" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.99" y="1759.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="151.9" y="1349" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="154.86" y="1359.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="16.4" y="309" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="19.40" y="319.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::to_internal_name (2 samples, 0.06%; +0.06%)</title><rect x="40.5" y="357" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="43.48" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="949" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="959.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="141.3" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.32" y="1439.5" ></text>
</g>
<g >
<title>service::migration_manager::announce_new_column_family (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.61" y="1455.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (1 samples, 0.03%; 0.00%)</title><rect x="85.3" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.26" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="75.5" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.47" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="74.0" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.97" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::inc_p (1 samples, 0.03%; +0.03%)</title><rect x="42.4" y="309" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="45.36" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="141.3" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.32" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (5 samples, 0.16%; +0.13%)</title><rect x="513.5" y="1669" width="1.8" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="516.46" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; 0.00%)</title><rect x="1135.4" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1138.44" y="1759.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (3 samples, 0.10%; +0.10%)</title><rect x="1071.8" y="1589" width="1.2" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1074.85" y="1599.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="43.9" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="143.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.10%; +0.03%)</title><rect x="925.5" y="1653" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="928.48" y="1663.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="50.6" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.64" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1423.5" ></text>
</g>
<g >
<title>keyspace::create_replication_strategy (1 samples, 0.03%; 0.00%)</title><rect x="188.4" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.35" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (21 samples, 0.67%; 0.00%)</title><rect x="876.2" y="1605" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="879.19" y="1615.5" ></text>
</g>
<g >
<title>create_partitions (57 samples, 1.82%; 0.00%)</title><rect x="133.0" y="1685" width="21.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1695.5" >c..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (13 samples, 0.41%; 0.00%)</title><rect x="97.3" y="1477" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.30" y="1487.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.10%; -0.06%)</title><rect x="400.2" y="1653" width="1.1" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="403.20" y="1663.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (1 samples, 0.03%; +0.03%)</title><rect x="820.1" y="1717" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="823.12" y="1727.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (17 samples, 0.54%; +0.06%)</title><rect x="534.5" y="1685" width="6.4" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="537.53" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.13%; 0.00%)</title><rect x="116.5" y="1525" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (190 samples, 6.06%; 0.00%)</title><rect x="10.8" y="1381" width="71.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1391.5" >[unknown]</text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="66.4" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.44" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%; 0.00%)</title><rect x="58.5" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="645" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="655.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.93" y="1327.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.03%; +0.03%)</title><rect x="43.1" y="181" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="46.11" y="191.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (3 samples, 0.10%; 0.00%)</title><rect x="42.7" y="309" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.74" y="319.5" ></text>
</g>
<g >
<title>do_cql_test (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="629" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="639.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="1663.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1647.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.03%; -0.03%)</title><rect x="839.3" y="1573" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="842.31" y="1583.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="155.6" y="1781" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="158.62" y="1791.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (1 samples, 0.03%; 0.00%)</title><rect x="80.4" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="112.3" y="1349" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="115.35" y="1359.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="134.2" y="1461" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.17" y="1471.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="971.8" y="1589" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="974.76" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="114.2" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="191.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.10%; +0.06%)</title><rect x="89.4" y="1861" width="1.1" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="92.39" y="1871.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.06%; +0.03%)</title><rect x="333.6" y="1557" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="336.60" y="1567.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="696.0" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="698.95" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="39.7" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.73" y="175.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1717" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1727.5" >[unknown]</text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; -0.10%)</title><rect x="187.2" y="1749" width="0.4" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="190.23" y="1759.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.03%; 0.00%)</title><rect x="187.6" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.60" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.03%; +0.03%)</title><rect x="17.9" y="213" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="20.90" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="54.0" y="181" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="191.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="75.5" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.47" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="136.8" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1439.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%; +0.03%)</title><rect x="863.8" y="1669" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="866.77" y="1679.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; +0.03%)</title><rect x="592.1" y="1637" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="595.10" y="1647.5" ></text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.03%; 0.00%)</title><rect x="189.9" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.86" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; +0.03%)</title><rect x="612.4" y="1621" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="615.42" y="1631.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1221" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1231.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="188.4" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.35" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="39.7" y="229" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.73" y="239.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1477" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1487.5" >[unknown]</text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.03%; +0.03%)</title><rect x="838.9" y="1589" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="841.93" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1455.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.03%; +0.03%)</title><rect x="533.4" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="536.40" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (58 samples, 1.85%; 0.00%)</title><rect x="15.6" y="389" width="21.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.64" y="399.5" >a..</text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.03%; 0.00%)</title><rect x="52.9" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.90" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (3 samples, 0.10%; +0.10%)</title><rect x="332.1" y="1541" width="1.1" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="335.09" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="807.3" y="1589" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="810.33" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (293 samples, 9.34%; 0.00%)</title><rect x="10.8" y="1877" width="110.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1887.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1621" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1631.5" >cq..</text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (1 samples, 0.03%; 0.00%)</title><rect x="72.1" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.09" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="144.7" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.71" y="1391.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (2 samples, 0.06%; 0.00%)</title><rect x="190.2" y="1701" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1727.5" ></text>
</g>
<g >
<title>cql3::result_generator::query_result_visitor&lt;cql3::untyped_result_set::visitor&gt;::accept_new_row (1 samples, 0.03%; 0.00%)</title><rect x="659.1" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="662.08" y="1727.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.06%; +0.03%)</title><rect x="814.5" y="1653" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="817.48" y="1663.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (1 samples, 0.03%; +0.03%)</title><rect x="1137.7" y="1749" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1140.70" y="1759.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (1 samples, 0.03%; 0.00%)</title><rect x="736.6" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="739.59" y="1759.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.13%; +0.03%)</title><rect x="879.2" y="1573" width="1.5" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="882.20" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="116.1" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.11" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="661.0" y="1749" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="663.96" y="1759.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (54 samples, 1.72%; 0.00%)</title><rect x="1051.5" y="1589" width="20.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1054.53" y="1599.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (20 samples, 0.64%; -0.06%)</title><rect x="16.8" y="309" width="7.5" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="19.77" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="754.6" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="757.65" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (2 samples, 0.06%; 0.00%)</title><rect x="55.9" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="399.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; +0.06%)</title><rect x="808.1" y="1637" width="1.1" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="811.08" y="1647.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="565" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="575.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (13 samples, 0.41%; -0.19%)</title><rect x="659.5" y="1765" width="4.8" height="15.0" fill="rgb(155,155,255)" rx="2" ry="2" />
<text  x="662.45" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.13%)</title><rect x="596.2" y="1605" width="1.5" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="599.24" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.54%; 0.00%)</title><rect x="83.0" y="1829" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="54.0" y="277" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.13%; +0.13%)</title><rect x="434.4" y="1605" width="1.5" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="437.44" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; -0.03%)</title><rect x="721.9" y="1749" width="0.8" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="724.91" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="110.5" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.47" y="1471.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="81.1" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.12" y="575.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (14 samples, 0.45%; 0.00%)</title><rect x="50.6" y="405" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.64" y="415.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (1 samples, 0.03%; +0.03%)</title><rect x="624.5" y="1669" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="627.46" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (3 samples, 0.10%; 0.00%)</title><rect x="67.2" y="469" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.19" y="479.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.13%; 0.00%)</title><rect x="1150.1" y="1893" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1153.11" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="80.0" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.99" y="463.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.03%; +0.03%)</title><rect x="913.1" y="1653" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="916.06" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="144.0" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.95" y="1359.5" ></text>
</g>
<g >
<title>db::schema_tables::make_create_table_mutations (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1599.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="144.7" y="1269" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="147.71" y="1279.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::native_type (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="67.2" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.19" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="116.5" y="1349" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="119.49" y="1359.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.03%; +0.03%)</title><rect x="837.1" y="1589" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="840.05" y="1599.5" ></text>
</g>
<g >
<title>dht::tri_compare (6 samples, 0.19%; -0.26%)</title><rect x="1069.2" y="1541" width="2.3" height="15.0" fill="rgb(136,136,255)" rx="2" ry="2" />
<text  x="1072.22" y="1551.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="143.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="39.7" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.73" y="367.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1343.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="933" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="943.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="96.2" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.17" y="1423.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="37.8" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.84" y="303.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (16 samples, 0.51%; 0.00%)</title><rect x="49.9" y="421" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.89" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (1 samples, 0.03%; 0.00%)</title><rect x="85.3" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.26" y="1535.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1301" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1311.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%; +0.03%)</title><rect x="642.1" y="1717" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="645.14" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="136.8" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1407.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.03%; +0.03%)</title><rect x="51.8" y="117" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="54.77" y="127.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%; 0.00%)</title><rect x="49.5" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (231 samples, 7.37%; +0.10%)</title><rect x="744.5" y="1749" width="86.9" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="747.49" y="1759.5" >single_nod..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.26%; +0.19%)</title><rect x="213.9" y="1701" width="3.1" height="15.0" fill="rgb(255,155,155)" rx="2" ry="2" />
<text  x="216.94" y="1711.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="1727.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%; +0.03%)</title><rect x="880.7" y="1557" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="883.70" y="1567.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (4 samples, 0.13%; 0.00%)</title><rect x="13.4" y="437" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.39" y="447.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (1 samples, 0.03%; +0.03%)</title><rect x="728.7" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="731.69" y="1743.5" ></text>
</g>
<g >
<title>abstract_type::from_string (1 samples, 0.03%; +0.03%)</title><rect x="70.6" y="485" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="73.58" y="495.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; 0.00%)</title><rect x="734.7" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="737.71" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (2 samples, 0.06%; 0.00%)</title><rect x="29.2" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.19" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.03%; -0.03%)</title><rect x="37.1" y="325" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="40.09" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="67.6" y="101" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="70.57" y="111.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="113.9" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.85" y="1471.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="517" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="527.5" ></text>
</g>
<g >
<title>std::_Enable_default_constructor&lt;true, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt;::_Enable_default_constructor (1 samples, 0.03%; +0.03%)</title><rect x="140.9" y="1429" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="143.94" y="1439.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.03%; +0.03%)</title><rect x="389.3" y="1605" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="392.29" y="1615.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="677.5" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="680.51" y="1743.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.06%)</title><rect x="922.1" y="1669" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="925.09" y="1679.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.03%; 0.00%)</title><rect x="1149.7" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.74" y="1903.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (3 samples, 0.10%; +0.03%)</title><rect x="268.9" y="1685" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="271.88" y="1695.5" ></text>
</g>
<g >
<title>mutation_querier::consume (101 samples, 3.22%; +0.06%)</title><rect x="445.7" y="1653" width="38.0" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="448.73" y="1663.5" >mut..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="37.8" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.84" y="255.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (4 samples, 0.13%; -0.10%)</title><rect x="642.5" y="1717" width="1.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="645.52" y="1727.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (2 samples, 0.06%; 0.00%)</title><rect x="128.5" y="1781" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.53" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.19%; +0.19%)</title><rect x="1014.7" y="1509" width="2.2" height="15.0" fill="rgb(255,155,155)" rx="2" ry="2" />
<text  x="1017.66" y="1519.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; +0.03%)</title><rect x="152.6" y="1413" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="155.61" y="1423.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; +0.03%)</title><rect x="45.7" y="389" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="48.75" y="399.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="239.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (138 samples, 4.40%; -0.03%)</title><rect x="856.6" y="1685" width="51.9" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="859.62" y="1695.5" >cql3:..</text>
</g>
<g >
<title>sstables::mc::writer::write_cell (2 samples, 0.06%; +0.06%)</title><rect x="128.5" y="1733" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="131.53" y="1743.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="39.7" y="149" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="42.73" y="159.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="113.5" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.48" y="1487.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (57 samples, 1.82%; 0.00%)</title><rect x="133.0" y="1653" width="21.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1663.5" >c..</text>
</g>
<g >
<title>cql3::query_processor::get_statement (32 samples, 1.02%; 0.00%)</title><rect x="68.3" y="581" width="12.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.32" y="591.5" ></text>
</g>
<g >
<title>db::schema_tables::add_table_params_to_mutations (1 samples, 0.03%; 0.00%)</title><rect x="189.9" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.86" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1653" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1663.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="141.3" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.32" y="1407.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (2 samples, 0.06%; 0.00%)</title><rect x="83.4" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1663.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (1 samples, 0.03%; 0.00%)</title><rect x="80.4" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="591.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (2 samples, 0.06%; +0.06%)</title><rect x="1102.7" y="1637" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="1105.70" y="1647.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1519.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (27 samples, 0.86%; +0.26%)</title><rect x="1061.3" y="1557" width="10.2" height="15.0" fill="rgb(255,136,136)" rx="2" ry="2" />
<text  x="1064.31" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (3 samples, 0.10%; 0.00%)</title><rect x="25.8" y="245" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="28.80" y="255.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="188.4" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.35" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.03%; 0.00%)</title><rect x="65.3" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.31" y="431.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (1 samples, 0.03%; +0.03%)</title><rect x="25.4" y="293" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="28.43" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="287.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="872.4" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="875.42" y="1599.5" ></text>
</g>
<g >
<title>service::client_state::has_access (2 samples, 0.06%; -0.03%)</title><rect x="87.1" y="1637" width="0.8" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="90.14" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (3 samples, 0.10%; -0.03%)</title><rect x="296.0" y="1621" width="1.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="298.97" y="1631.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (2 samples, 0.06%; +0.03%)</title><rect x="564.3" y="1637" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="567.25" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (12 samples, 0.38%; 0.00%)</title><rect x="127.8" y="1845" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1855.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1791.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (57 samples, 1.82%; +0.06%)</title><rect x="592.9" y="1653" width="21.4" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="595.85" y="1663.5" >m..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.19%; +0.03%)</title><rect x="106.7" y="1477" width="2.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="109.70" y="1487.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; 0.00%)</title><rect x="139.4" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.44" y="1487.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1269" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1279.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (18 samples, 0.57%; +0.03%)</title><rect x="835.9" y="1749" width="6.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="838.92" y="1759.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1 samples, 0.03%; 0.00%)</title><rect x="840.8" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="843.82" y="1599.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1295.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="58.9" y="421" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="61.92" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::do_wait (1 samples, 0.03%; +0.03%)</title><rect x="89.0" y="1717" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="92.02" y="1727.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.03%; +0.03%)</title><rect x="58.5" y="245" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="61.54" y="255.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (2 samples, 0.06%; 0.00%)</title><rect x="789.3" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="792.27" y="1663.5" ></text>
</g>
<g >
<title>db::cql_type_parser::parse (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1663.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.03%; +0.03%)</title><rect x="1106.5" y="1509" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1109.47" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="323.4" y="1557" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="326.44" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="112.0" y="1365" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1375.5" ></text>
</g>
<g >
<title>db::system_keyspace::query_mutations (1 samples, 0.03%; 0.00%)</title><rect x="188.0" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.98" y="1743.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="596.2" y="1621" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="599.24" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="837" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="847.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1439.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (2 samples, 0.06%; 0.00%)</title><rect x="128.5" y="1797" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.53" y="1807.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (2 samples, 0.06%; +0.03%)</title><rect x="830.7" y="1717" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="833.66" y="1727.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; +0.03%)</title><rect x="1098.2" y="1621" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1101.19" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="41.6" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.61" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="533" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="543.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="133.0" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="69.8" y="453" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="72.83" y="463.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (4 samples, 0.13%; +0.13%)</title><rect x="980.4" y="1557" width="1.5" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="983.41" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="853" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="863.5" >[unknown]</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt;::deallocate (1 samples, 0.03%; 0.00%)</title><rect x="61.5" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.55" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="67.6" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.57" y="207.5" ></text>
</g>
<g >
<title>evictable_reader::do_fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1359.5" ></text>
</g>
<g >
<title>reader_permit::signal (2 samples, 0.06%; +0.06%)</title><rect x="379.9" y="1589" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="382.88" y="1599.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (9 samples, 0.29%; -0.06%)</title><rect x="1138.1" y="1749" width="3.4" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="1141.07" y="1759.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.03%; +0.03%)</title><rect x="132.3" y="1877" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="135.29" y="1887.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; +0.03%)</title><rect x="322.3" y="1557" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="325.31" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.87" y="1871.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="41.6" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.61" y="335.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="1103.8" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.83" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (6 samples, 0.19%; 0.00%)</title><rect x="146.2" y="1413" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.21" y="1423.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (2,645 samples, 84.34%; 0.00%)</title><rect x="154.5" y="1829" width="995.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.49" y="1839.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="66.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.44" y="399.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (5 samples, 0.16%; 0.00%)</title><rect x="55.9" y="533" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::vector (1 samples, 0.03%; +0.03%)</title><rect x="77.0" y="485" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="79.98" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="501" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.03" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.06%; +0.03%)</title><rect x="19.0" y="165" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="22.03" y="175.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1487.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.03%; +0.03%)</title><rect x="501.8" y="1669" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="504.79" y="1679.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (89 samples, 2.84%; -0.22%)</title><rect x="781.7" y="1685" width="33.5" height="15.0" fill="rgb(146,146,255)" rx="2" ry="2" />
<text  x="784.74" y="1695.5" >se..</text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.82" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; +0.03%)</title><rect x="138.7" y="1509" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="141.69" y="1519.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;scanning_reader::consumer&gt; (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1439.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="76.6" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.60" y="415.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (8 samples, 0.26%; 0.00%)</title><rect x="97.7" y="1445" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.67" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="115.4" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.36" y="1471.5" ></text>
</g>
<g >
<title>database::apply (1 samples, 0.03%; 0.00%)</title><rect x="1109.1" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1112.10" y="1519.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="128.2" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.15" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.19%; +0.16%)</title><rect x="1010.1" y="1493" width="2.3" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="1013.14" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; +0.03%)</title><rect x="45.0" y="309" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="47.99" y="319.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (4 samples, 0.13%; 0.00%)</title><rect x="1103.8" y="1509" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.83" y="1519.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="632.7" y="1637" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="635.74" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; 0.00%)</title><rect x="256.8" y="1685" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="259.84" y="1695.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="522.5" y="1637" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="525.49" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (2 samples, 0.06%; 0.00%)</title><rect x="22.8" y="229" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.79" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (140 samples, 4.46%; -0.06%)</title><rect x="323.8" y="1573" width="52.7" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="326.81" y="1583.5" >parti..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.43" y="1407.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.93" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.06%; 0.00%)</title><rect x="206.0" y="1733" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="209.04" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1413" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1423.5" >[unknown]</text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_error (1 samples, 0.03%; +0.03%)</title><rect x="153.0" y="1445" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="155.98" y="1455.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (7 samples, 0.22%; +0.22%)</title><rect x="1048.9" y="1589" width="2.6" height="15.0" fill="rgb(255,146,146)" rx="2" ry="2" />
<text  x="1051.90" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="1091.4" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1094.42" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (4 samples, 0.13%; 0.00%)</title><rect x="33.3" y="277" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.33" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (2 samples, 0.06%; 0.00%)</title><rect x="129.7" y="1829" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.66" y="1839.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (25 samples, 0.80%; 0.00%)</title><rect x="710.6" y="1765" width="9.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="713.62" y="1775.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (13 samples, 0.41%; +0.03%)</title><rect x="16.8" y="261" width="4.9" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="19.77" y="271.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="115.7" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.73" y="1423.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1871.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (3 samples, 0.10%; 0.00%)</title><rect x="80.4" y="629" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="639.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="399.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; 0.00%)</title><rect x="930.4" y="1637" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="933.37" y="1647.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (2 samples, 0.06%; +0.03%)</title><rect x="331.3" y="1541" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="334.34" y="1551.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="24.3" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.30" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="159.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (2 samples, 0.06%; 0.00%)</title><rect x="55.9" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%; 0.00%)</title><rect x="52.9" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.90" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (2 samples, 0.06%; 0.00%)</title><rect x="105.2" y="1461" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.20" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.03%; 0.00%)</title><rect x="1149.4" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.36" y="1791.5" ></text>
</g>
<g >
<title>row_cache::make_reader (26 samples, 0.83%; -0.03%)</title><rect x="624.8" y="1669" width="9.8" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="627.83" y="1679.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (13 samples, 0.41%; 0.00%)</title><rect x="16.8" y="277" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.77" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.06%; 0.00%)</title><rect x="113.5" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.48" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="67.6" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.57" y="303.5" ></text>
</g>
<g >
<title>service::write_response_handler::write_response_handler (1 samples, 0.03%; +0.03%)</title><rect x="1107.6" y="1509" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1110.60" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.61" y="1391.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="85.6" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.63" y="1583.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="148.5" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.47" y="1423.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="152.6" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.61" y="1439.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.93" y="1519.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::column_identifier_raw&gt;::~shared_ptr_count_for (57 samples, 1.82%; 0.00%)</title><rect x="133.0" y="1877" width="21.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1887.5" >s..</text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1573" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1583.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="54.0" y="261" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="271.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="442.3" y="1669" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="445.34" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; +0.03%)</title><rect x="53.6" y="309" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="56.65" y="319.5" ></text>
</g>
<g >
<title>[unknown] (189 samples, 6.03%; 0.00%)</title><rect x="10.8" y="1237" width="71.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1247.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="118.0" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.99" y="1535.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="14.1" y="341" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="17.14" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (21 samples, 0.67%; 0.00%)</title><rect x="16.4" y="341" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.40" y="351.5" ></text>
</g>
<g >
<title>all (3,136 samples, 100%)</title><rect x="10.0" y="1925" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.10%; -0.06%)</title><rect x="378.4" y="1589" width="1.1" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="381.37" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="853" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="863.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1061" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1071.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (3 samples, 0.10%; 0.00%)</title><rect x="1098.6" y="1621" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1101.57" y="1631.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_d36847801b836ea118d696d8a8ab9431a1179ab0] (1 samples, 0.03%; +0.03%)</title><rect x="852.9" y="1685" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="855.86" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; -0.06%)</title><rect x="832.9" y="1765" width="0.4" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="835.91" y="1775.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (2 samples, 0.06%; +0.03%)</title><rect x="520.2" y="1669" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="523.23" y="1679.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="757" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="767.5" ></text>
</g>
<g >
<title>std::operator- (2 samples, 0.06%; 0.00%)</title><rect x="39.7" y="181" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.73" y="191.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.84" y="1471.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::grant_role_statement*, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="46.9" y="341" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="49.88" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; 0.00%)</title><rect x="139.4" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.44" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="133.0" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.03%; 0.00%)</title><rect x="49.9" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.89" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.03%; 0.00%)</title><rect x="188.0" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.98" y="1727.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (2 samples, 0.06%; 0.00%)</title><rect x="1102.7" y="1669" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1105.70" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.93" y="1407.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (34 samples, 1.08%; 0.00%)</title><rect x="521.4" y="1669" width="12.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="524.36" y="1679.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%; 0.00%)</title><rect x="1098.9" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1101.94" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="29.2" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.19" y="287.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 1.02%; 0.00%)</title><rect x="68.3" y="725" width="12.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.32" y="735.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (4 samples, 0.13%; +0.13%)</title><rect x="605.6" y="1621" width="1.5" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="608.64" y="1631.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (2 samples, 0.06%; 0.00%)</title><rect x="80.7" y="613" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.74" y="623.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (9 samples, 0.29%; +0.03%)</title><rect x="910.1" y="1669" width="3.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="913.05" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%; +0.03%)</title><rect x="138.3" y="1509" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="141.31" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (4 samples, 0.13%; 0.00%)</title><rect x="139.8" y="1493" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.82" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="72.5" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.46" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; +0.03%)</title><rect x="97.3" y="1445" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="100.30" y="1455.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="710.2" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="713.25" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (3 samples, 0.10%; 0.00%)</title><rect x="56.7" y="421" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.66" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1375.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (6 samples, 0.19%; 0.00%)</title><rect x="55.9" y="645" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="655.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; +0.03%)</title><rect x="50.6" y="197" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="53.64" y="207.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%; -0.06%)</title><rect x="880.7" y="1573" width="0.4" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="883.70" y="1583.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.22%; +0.03%)</title><rect x="176.7" y="1733" width="2.6" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="179.69" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (6 samples, 0.19%; 0.00%)</title><rect x="98.4" y="1429" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.42" y="1439.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.06%; +0.03%)</title><rect x="169.5" y="1749" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="172.54" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.06%)</title><rect x="817.9" y="1685" width="1.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="820.86" y="1695.5" ></text>
</g>
<g >
<title>posix_memalign (12 samples, 0.38%; +0.06%)</title><rect x="368.6" y="1493" width="4.5" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="371.59" y="1503.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::has_supporting_index (1 samples, 0.03%; 0.00%)</title><rect x="84.9" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.88" y="1583.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (8 samples, 0.26%; 0.00%)</title><rect x="958.2" y="1573" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="961.21" y="1583.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (4 samples, 0.13%; -0.10%)</title><rect x="798.7" y="1605" width="1.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="801.67" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1391.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="693" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="703.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="661" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="611.3" y="1605" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="614.29" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (189 samples, 6.03%; 0.00%)</title><rect x="10.8" y="1189" width="71.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1199.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="107.5" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1439.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="308.8" y="1573" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="311.76" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (3 samples, 0.10%; +0.06%)</title><rect x="1017.3" y="1525" width="1.1" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="1020.29" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="42.0" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.98" y="335.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="54.8" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.78" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (10 samples, 0.32%; 0.00%)</title><rect x="69.1" y="533" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.08" y="543.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1519.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1205" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1215.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1615.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.10%; +0.06%)</title><rect x="853.2" y="1685" width="1.2" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="856.23" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="67.2" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.19" y="431.5" ></text>
</g>
<g >
<title>create_partitions (102 samples, 3.25%; +0.10%)</title><rect x="10.8" y="533" width="38.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="13.75" y="543.5" >cre..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.82" y="415.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1797" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1807.5" >se..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="115.4" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.36" y="1455.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (9 samples, 0.29%; +0.03%)</title><rect x="308.0" y="1589" width="3.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="311.01" y="1599.5" ></text>
</g>
<g >
<title>query::result_set_builder::deserialize (1 samples, 0.03%; 0.00%)</title><rect x="190.6" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.61" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (3 samples, 0.10%; +0.10%)</title><rect x="515.7" y="1685" width="1.1" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="518.71" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::grant_role_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.9" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.88" y="415.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="1141" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="1151.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; -0.06%)</title><rect x="43.9" y="309" width="0.7" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="46.86" y="319.5" ></text>
</g>
<g >
<title>[unknown] (120 samples, 3.83%; 0.00%)</title><rect x="10.8" y="709" width="45.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="719.5" >[unk..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="93.9" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.91" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.10%; -0.06%)</title><rect x="179.7" y="1733" width="1.1" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="182.70" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; +0.03%)</title><rect x="47.6" y="421" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="50.63" y="431.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="86.4" y="1621" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="89.38" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="737.0" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="739.96" y="1759.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (6 samples, 0.19%; 0.00%)</title><rect x="146.2" y="1397" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.21" y="1407.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (3 samples, 0.10%; 0.00%)</title><rect x="94.3" y="1461" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.29" y="1471.5" ></text>
</g>
<g >
<title>[[vdso]] (39 samples, 1.24%; +0.73%)</title><rect x="1153.5" y="1877" width="14.7" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="1156.50" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.03%)</title><rect x="750.5" y="1685" width="2.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="753.51" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_INTO (1 samples, 0.03%; +0.03%)</title><rect x="189.5" y="1509" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="192.48" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="335.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; 0.00%)</title><rect x="436.3" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="439.32" y="1647.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="134.5" y="1333" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="137.55" y="1343.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="43.5" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.49" y="175.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="118.0" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.99" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (9 samples, 0.29%; 0.00%)</title><rect x="97.3" y="1461" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.30" y="1471.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%; +0.03%)</title><rect x="1038.7" y="1589" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1041.74" y="1599.5" ></text>
</g>
<g >
<title>do_with_cql_env_thread (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1855.5" ></text>
</g>
<g >
<title>std::copy&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;**, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;**&gt; (1 samples, 0.03%; 0.00%)</title><rect x="23.9" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.92" y="255.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="786.3" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="789.26" y="1679.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;**, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;**&gt; (1 samples, 0.03%; 0.00%)</title><rect x="23.9" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.92" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (16 samples, 0.51%; 0.00%)</title><rect x="96.5" y="1509" width="6.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.54" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (13 samples, 0.41%; -0.13%)</title><rect x="747.9" y="1717" width="4.9" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="750.88" y="1727.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.03%; +0.03%)</title><rect x="839.7" y="1621" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="842.69" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; +0.03%)</title><rect x="41.6" y="245" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="44.61" y="255.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%; +0.03%)</title><rect x="139.1" y="1493" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="142.06" y="1503.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="617.7" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="620.68" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; +0.03%)</title><rect x="63.4" y="341" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="66.43" y="351.5" ></text>
</g>
<g >
<title>[unknown] (189 samples, 6.03%; 0.00%)</title><rect x="10.8" y="1205" width="71.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1215.5" >[unknown]</text>
</g>
<g >
<title>operator delete (11 samples, 0.35%; +0.13%)</title><rect x="438.2" y="1669" width="4.1" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="441.20" y="1679.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="133.4" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.42" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="114.2" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1535.5" ></text>
</g>
<g >
<title>__start_context (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="645" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="52.5" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="59.3" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="335.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; +0.10%)</title><rect x="804.3" y="1621" width="1.9" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="807.32" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (2 samples, 0.06%; 0.00%)</title><rect x="116.5" y="1365" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1375.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (39 samples, 1.24%; 0.00%)</title><rect x="139.4" y="1509" width="14.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.44" y="1519.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1013" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1023.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="981" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="991.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.10%; 0.00%)</title><rect x="116.5" y="1461" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="52.5" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.19%; 0.00%)</title><rect x="55.9" y="629" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.19%; +0.16%)</title><rect x="1130.9" y="1717" width="2.3" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="1133.92" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; 0.00%)</title><rect x="638.8" y="1669" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="641.76" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="43.1" y="229" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.11" y="239.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; 0.00%)</title><rect x="909.3" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="912.30" y="1679.5" ></text>
</g>
<g >
<title>database::find_column_family (9 samples, 0.29%; +0.16%)</title><rect x="1031.2" y="1605" width="3.4" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="1034.21" y="1615.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (2 samples, 0.06%; +0.03%)</title><rect x="91.3" y="1525" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="94.28" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.84" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="106.3" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.33" y="1423.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="66.4" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.44" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="67.6" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.57" y="143.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt; (4 samples, 0.13%; +0.13%)</title><rect x="19.8" y="165" width="1.5" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="22.78" y="175.5" ></text>
</g>
<g >
<title>memtable::apply (17 samples, 0.54%; +0.03%)</title><rect x="1096.3" y="1637" width="6.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1099.31" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%; 0.00%)</title><rect x="945.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="948.04" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="351.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.43" y="1471.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.13%; -0.06%)</title><rect x="180.8" y="1765" width="1.5" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="183.83" y="1775.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::migration_manager::include_keyspace_and_announce (1 samples, 0.03%; 0.00%)</title><rect x="735.1" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="738.08" y="1775.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (12 samples, 0.38%; 0.00%)</title><rect x="1103.8" y="1573" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.83" y="1583.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="144.0" y="1269" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.95" y="1279.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; 0.00%)</title><rect x="53.3" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.27" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; -0.06%)</title><rect x="1044.8" y="1573" width="0.7" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="1047.76" y="1583.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (6 samples, 0.19%; 0.00%)</title><rect x="124.4" y="1845" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.39" y="1855.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.23" y="1439.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (1 samples, 0.03%; +0.03%)</title><rect x="922.8" y="1669" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="925.84" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="629" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="639.5" ></text>
</g>
<g >
<title>[unknown] (192 samples, 6.12%; 0.00%)</title><rect x="10.8" y="1845" width="72.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1855.5" >[unknown]</text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; +0.03%)</title><rect x="659.8" y="1749" width="1.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="662.83" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="115.0" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.98" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.74" y="223.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%; 0.00%)</title><rect x="90.5" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.52" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="335.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.57%; -0.03%)</title><rect x="981.9" y="1557" width="6.8" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="984.92" y="1567.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_keyspaces (1 samples, 0.03%; 0.00%)</title><rect x="188.4" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.35" y="1759.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_data_locally (1 samples, 0.03%; 0.00%)</title><rect x="932.6" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="935.63" y="1551.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (1 samples, 0.03%; +0.03%)</title><rect x="68.7" y="533" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="71.70" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_table_statement, std::default_delete&lt;cql3::statements::drop_table_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="78.5" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.48" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_deallocate (1 samples, 0.03%; 0.00%)</title><rect x="61.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.55" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="67.9" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.95" y="447.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="37.8" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.84" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="43.9" y="85" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="95.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="136.8" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1423.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (2 samples, 0.06%; +0.03%)</title><rect x="399.4" y="1653" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="402.45" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1663.5" ></text>
</g>
<g >
<title>std::addressof&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="53" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="63.5" ></text>
</g>
<g >
<title>[unknown] (189 samples, 6.03%; 0.00%)</title><rect x="10.8" y="1173" width="71.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1183.5" >[unknown]</text>
</g>
<g >
<title>__atomic_store (1 samples, 0.03%; +0.03%)</title><rect x="735.8" y="1749" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="738.84" y="1759.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="53.3" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.27" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="821" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="831.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1125" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1135.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%; +0.03%)</title><rect x="118.7" y="1541" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="121.74" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (4 samples, 0.13%; -0.19%)</title><rect x="760.7" y="1717" width="1.5" height="15.0" fill="rgb(155,155,255)" rx="2" ry="2" />
<text  x="763.67" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (2 samples, 0.06%; 0.00%)</title><rect x="302.7" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="305.74" y="1615.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; +0.03%)</title><rect x="394.2" y="1621" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="397.18" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="542.1" y="1669" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="545.05" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1631.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (51 samples, 1.63%; 0.00%)</title><rect x="865.3" y="1637" width="19.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="868.27" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (5 samples, 0.16%; 0.00%)</title><rect x="55.9" y="485" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="43.9" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="175.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="108.6" y="1301" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="111.58" y="1311.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="752.8" y="1733" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="755.77" y="1743.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="159.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="1000.7" y="1509" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1003.73" y="1519.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (32 samples, 1.02%; 0.00%)</title><rect x="68.3" y="613" width="12.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.32" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.19%; -0.10%)</title><rect x="986.4" y="1525" width="2.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="989.43" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="148.5" y="1397" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="151.47" y="1407.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (3 samples, 0.10%; +0.10%)</title><rect x="963.1" y="1605" width="1.1" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="966.11" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="54.4" y="101" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.40" y="111.5" ></text>
</g>
<g >
<title>dht::tri_compare (2 samples, 0.06%; +0.06%)</title><rect x="1051.5" y="1573" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="1054.53" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="239.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="597" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="607.5" ></text>
</g>
<g >
<title>free (2 samples, 0.06%; +0.06%)</title><rect x="129.7" y="1781" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="132.66" y="1791.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (5 samples, 0.16%; +0.10%)</title><rect x="1037.2" y="1605" width="1.9" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1040.23" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%; +0.03%)</title><rect x="75.8" y="405" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="78.85" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.10%; +0.06%)</title><rect x="1013.2" y="1493" width="1.1" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="1016.15" y="1503.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (11 samples, 0.35%; -0.22%)</title><rect x="334.7" y="1541" width="4.2" height="15.0" fill="rgb(146,146,255)" rx="2" ry="2" />
<text  x="337.73" y="1551.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.03" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_get_map_allocator (1 samples, 0.03%; +0.03%)</title><rect x="74.0" y="437" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="76.97" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.93" y="351.5" ></text>
</g>
<g >
<title>seastar::current_tasktrace (1 samples, 0.03%; 0.00%)</title><rect x="735.1" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="738.08" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="98.8" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="144.0" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.95" y="1343.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.02" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::grant_statement, std::default_delete&lt;cql3::statements::grant_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="81.1" y="549" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="84.12" y="559.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (3 samples, 0.10%; +0.10%)</title><rect x="907.4" y="1669" width="1.1" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="910.42" y="1679.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (3 samples, 0.10%; +0.10%)</title><rect x="437.1" y="1637" width="1.1" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="440.07" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.10%; 0.00%)</title><rect x="53.6" y="325" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.65" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (3 samples, 0.10%; 0.00%)</title><rect x="67.2" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.19" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="59.3" y="245" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="62.29" y="255.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (4 samples, 0.13%; 0.00%)</title><rect x="133.4" y="1541" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.42" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (189 samples, 6.03%; 0.00%)</title><rect x="10.8" y="1317" width="71.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1327.5" >[unknown]</text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (1 samples, 0.03%; +0.03%)</title><rect x="81.5" y="661" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="84.49" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%; +0.06%)</title><rect x="97.7" y="1429" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="100.67" y="1439.5" ></text>
</g>
<g >
<title>seastar::internal::execution_stage_manager::flush (1 samples, 0.03%; +0.03%)</title><rect x="1147.1" y="1765" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1150.10" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.10%)</title><rect x="921.7" y="1637" width="0.4" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="924.72" y="1647.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="23.2" y="197" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="26.17" y="207.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="188.4" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.35" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; 0.00%)</title><rect x="150.0" y="1429" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.97" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 3.25%; 0.00%)</title><rect x="10.8" y="645" width="38.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="655.5" >[un..</text>
</g>
<g >
<title>[perf_simple_query_flame_d36847801b836ea118d696d8a8ab9431a1179ab0] (1 samples, 0.03%; +0.03%)</title><rect x="1104.2" y="1477" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1107.21" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (12 samples, 0.38%; 0.00%)</title><rect x="17.1" y="245" width="4.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.15" y="255.5" ></text>
</g>
<g >
<title>db::schema_tables::make_table_mutations (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.61" y="1439.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (6 samples, 0.19%; -0.13%)</title><rect x="293.7" y="1621" width="2.3" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="296.71" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.10%; +0.03%)</title><rect x="818.6" y="1669" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="821.62" y="1679.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="54.0" y="309" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="137.2" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.18" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1829" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1839.5" >[u..</text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="720.8" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.78" y="1759.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (51 samples, 1.63%; 0.00%)</title><rect x="865.3" y="1653" width="19.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="868.27" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="786.6" y="1669" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="789.63" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="142.4" y="1381" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="145.45" y="1391.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (6 samples, 0.19%; 0.00%)</title><rect x="64.9" y="469" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.94" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="43.9" y="245" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_UPDATE (1 samples, 0.03%; +0.03%)</title><rect x="31.4" y="293" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="34.45" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="136.8" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1471.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="110.5" y="1525" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.47" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.10%; +0.03%)</title><rect x="102.6" y="1333" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="105.56" y="1343.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; 0.00%)</title><rect x="135.3" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.30" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="533" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="543.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="933" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="943.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="80.7" y="597" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.74" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="61.5" y="373" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.55" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (11 samples, 0.35%; 0.00%)</title><rect x="60.4" y="421" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.42" y="431.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (9 samples, 0.29%; -0.06%)</title><rect x="827.3" y="1717" width="3.4" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="830.27" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (4 samples, 0.13%; -0.03%)</title><rect x="102.6" y="1509" width="1.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="105.56" y="1519.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (19 samples, 0.61%; +0.26%)</title><rect x="896.9" y="1637" width="7.1" height="15.0" fill="rgb(255,136,136)" rx="2" ry="2" />
<text  x="899.88" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.10%; 0.00%)</title><rect x="112.0" y="1445" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1455.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (2,644 samples, 84.31%; +0.03%)</title><rect x="154.5" y="1797" width="994.9" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="157.49" y="1807.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.06%; +0.06%)</title><rect x="672.6" y="1733" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="675.62" y="1743.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="37.8" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.84" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.84" y="1503.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (91 samples, 2.90%; +0.03%)</title><rect x="14.9" y="453" width="34.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="17.89" y="463.5" >se..</text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="144.0" y="1237" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.95" y="1247.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (2 samples, 0.06%; +0.03%)</title><rect x="64.9" y="453" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="67.94" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; +0.03%)</title><rect x="99.6" y="1253" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="102.55" y="1263.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="144.7" y="1397" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.71" y="1407.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.03%; 0.00%)</title><rect x="919.8" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="922.83" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.82" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="67.6" y="117" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.57" y="127.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (14 samples, 0.45%; 0.00%)</title><rect x="836.3" y="1669" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.30" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.06%)</title><rect x="1020.3" y="1509" width="0.4" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="1023.30" y="1519.5" ></text>
</g>
<g >
<title>database::has_keyspace (7 samples, 0.22%; +0.13%)</title><rect x="828.0" y="1701" width="2.7" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="831.02" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="146.2" y="1381" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="149.21" y="1391.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (15 samples, 0.48%; +0.16%)</title><rect x="1079.8" y="1669" width="5.6" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="1082.75" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (7 samples, 0.22%; +0.13%)</title><rect x="775.7" y="1653" width="2.7" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="778.72" y="1663.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="1095.9" y="1637" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1098.93" y="1647.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (32 samples, 1.02%; 0.00%)</title><rect x="68.3" y="597" width="12.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.32" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="59.3" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="319.5" ></text>
</g>
<g >
<title>__start_context (102 samples, 3.25%; 0.00%)</title><rect x="10.8" y="613" width="38.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="623.5" >__s..</text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (6 samples, 0.19%; -0.03%)</title><rect x="32.6" y="293" width="2.2" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="35.58" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasReachedFillbufferTarget (1 samples, 0.03%; +0.03%)</title><rect x="16.0" y="341" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="19.02" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (4 samples, 0.13%; 0.00%)</title><rect x="75.8" y="501" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.85" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="106.3" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.33" y="1487.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.03%; +0.03%)</title><rect x="1107.2" y="1461" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1110.22" y="1471.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.10%; +0.03%)</title><rect x="1097.1" y="1621" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1100.06" y="1631.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (3 samples, 0.10%; -0.03%)</title><rect x="962.0" y="1605" width="1.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="964.98" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="59.3" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="431.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%; -0.06%)</title><rect x="583.1" y="1653" width="0.3" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="586.07" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%; +0.03%)</title><rect x="618.8" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="621.81" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="114.2" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1423.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; +0.03%)</title><rect x="96.9" y="1477" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="99.92" y="1487.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; -0.03%)</title><rect x="52.5" y="341" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="55.52" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.10%; 0.00%)</title><rect x="136.4" y="1509" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.43" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="66.4" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.44" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="113.9" y="1413" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="116.85" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.03%)</title><rect x="920.2" y="1653" width="1.9" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="923.21" y="1663.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.51%; -0.06%)</title><rect x="1127.2" y="1749" width="6.0" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="1130.16" y="1759.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (7 samples, 0.22%; 0.00%)</title><rect x="837.1" y="1621" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="840.05" y="1631.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::substr[abi:cxx11] (1 samples, 0.03%; 0.00%)</title><rect x="106.0" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.95" y="1487.5" ></text>
</g>
<g >
<title>query::querier_base::close (66 samples, 2.10%; 0.00%)</title><rect x="518.3" y="1717" width="24.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="521.35" y="1727.5" >q..</text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.06%; 0.00%)</title><rect x="22.8" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.79" y="287.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (3 samples, 0.10%; 0.00%)</title><rect x="80.4" y="741" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="751.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="147.0" y="1301" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.96" y="1311.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="118.4" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.37" y="1519.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="412.2" y="1685" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="415.24" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%; 0.00%)</title><rect x="75.8" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.85" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (15 samples, 0.48%; +0.22%)</title><rect x="281.7" y="1637" width="5.6" height="15.0" fill="rgb(255,146,146)" rx="2" ry="2" />
<text  x="284.67" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="13.4" y="341" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="16.39" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="106.0" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.95" y="1455.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (1 samples, 0.03%; 0.00%)</title><rect x="85.3" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.26" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="1157" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1167.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="101.4" y="1381" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.43" y="1391.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="75.8" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.85" y="447.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (1 samples, 0.03%; +0.03%)</title><rect x="1106.1" y="1509" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1109.09" y="1519.5" ></text>
</g>
<g >
<title>db::schema_tables::create_columns_from_column_rows (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1679.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (4 samples, 0.13%; +0.06%)</title><rect x="1021.8" y="1557" width="1.5" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="1024.80" y="1567.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (4 samples, 0.13%; 0.00%)</title><rect x="102.6" y="1493" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.56" y="1503.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (1 samples, 0.03%; -0.10%)</title><rect x="1024.1" y="1621" width="0.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="1027.06" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1391.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1391.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (27 samples, 0.86%; 0.00%)</title><rect x="502.2" y="1653" width="10.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="505.17" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1141" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1151.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.06%; 0.00%)</title><rect x="57.0" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.03" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1237" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1247.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="1016.9" y="1509" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1019.91" y="1519.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (294 samples, 9.38%; +0.16%)</title><rect x="406.2" y="1701" width="110.6" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="409.22" y="1711.5" >query::consum..</text>
</g>
<g >
<title>std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt;::allocator (1 samples, 0.03%; 0.00%)</title><rect x="67.9" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.95" y="415.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (14 samples, 0.45%; +0.16%)</title><rect x="773.1" y="1669" width="5.3" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="776.09" y="1679.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="40.1" y="165" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="43.10" y="175.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.93" y="1455.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="809.2" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.21" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; 0.00%)</title><rect x="53.3" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.27" y="351.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1541" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1551.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="663.6" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="666.59" y="1695.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (2 samples, 0.06%; 0.00%)</title><rect x="128.5" y="1765" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.53" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.74" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (1 samples, 0.03%; +0.03%)</title><rect x="817.5" y="1701" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="820.49" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="59.3" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.23" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="1105.0" y="1493" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1107.96" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="43.9" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="207.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (1 samples, 0.03%; +0.03%)</title><rect x="747.5" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="750.50" y="1743.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; 0.00%)</title><rect x="778.7" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="781.73" y="1695.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (2 samples, 0.06%; 0.00%)</title><rect x="94.3" y="1445" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.29" y="1455.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1327.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="741" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.02" y="1871.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.06%; -0.03%)</title><rect x="1085.4" y="1669" width="0.7" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1088.40" y="1679.5" ></text>
</g>
<g >
<title>row::row (9 samples, 0.29%; +0.29%)</title><rect x="390.0" y="1605" width="3.4" height="15.0" fill="rgb(255,127,127)" rx="2" ry="2" />
<text  x="393.04" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="485" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="495.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; -0.13%)</title><rect x="248.9" y="1717" width="1.2" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="251.93" y="1727.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; 0.00%)</title><rect x="630.1" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="633.10" y="1615.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="93.9" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.91" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="41.6" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.61" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; +0.03%)</title><rect x="657.9" y="1749" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="660.95" y="1759.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (5 samples, 0.16%; 0.00%)</title><rect x="246.7" y="1701" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="249.68" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (11 samples, 0.35%; 0.00%)</title><rect x="17.5" y="229" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.53" y="239.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (3 samples, 0.10%; 0.00%)</title><rect x="217.0" y="1701" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="219.95" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (7 samples, 0.22%; 0.00%)</title><rect x="39.0" y="389" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.97" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.43" y="1359.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.03%; 0.00%)</title><rect x="1149.4" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.36" y="1807.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, distributed_loader::populate_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="710.2" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="713.25" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1221" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="150.4" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.35" y="1359.5" ></text>
</g>
<g >
<title>create_partitions (32 samples, 1.02%; 0.00%)</title><rect x="68.3" y="629" width="12.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.32" y="639.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; +0.03%)</title><rect x="1108.0" y="1509" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1110.97" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (24 samples, 0.77%; 0.00%)</title><rect x="144.3" y="1477" width="9.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.33" y="1487.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::raw::batch_statement*, std::default_delete&lt;cql3::statements::raw::batch_statement&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="78.9" y="453" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="81.86" y="463.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="70.2" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.20" y="479.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="45.4" y="37" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="48.37" y="47.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.06%; +0.06%)</title><rect x="1097.4" y="1605" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="1100.44" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; +0.03%)</title><rect x="80.7" y="517" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="83.74" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; +0.03%)</title><rect x="397.2" y="1637" width="2.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="400.19" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="96.2" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.17" y="1503.5" ></text>
</g>
<g >
<title>sstables::sstable::new_sstable_component_file (1 samples, 0.03%; +0.03%)</title><rect x="131.9" y="1765" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="134.91" y="1775.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.03%; -0.03%)</title><rect x="130.8" y="1781" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="133.78" y="1791.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::StackType (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.52" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="175.5" ></text>
</g>
<g >
<title>__libc_start_main (2,645 samples, 84.34%; 0.00%)</title><rect x="154.5" y="1893" width="995.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.49" y="1903.5" >__libc_start_main</text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.03%; 0.00%)</title><rect x="80.4" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1391.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (90 samples, 2.87%; 0.00%)</title><rect x="15.3" y="437" width="33.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.27" y="447.5" >cq..</text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="335.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.03%; 0.00%)</title><rect x="188.4" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.35" y="1695.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="629" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="639.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (1 samples, 0.03%; +0.03%)</title><rect x="206.8" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="209.79" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="689.6" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="692.55" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="108.2" y="1381" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.21" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1845" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1855.5" >[u..</text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; -0.03%)</title><rect x="45.0" y="341" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="47.99" y="351.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (2 samples, 0.06%; 0.00%)</title><rect x="188.7" y="1733" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1743.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="101.4" y="1445" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.43" y="1455.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (13 samples, 0.41%; 0.00%)</title><rect x="75.5" y="533" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.47" y="543.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.93" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="55.2" y="325" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="58.15" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (2 samples, 0.06%; 0.00%)</title><rect x="1109.1" y="1525" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1112.10" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1263.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.06%; +0.03%)</title><rect x="1124.2" y="1733" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1127.15" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.10%; 0.00%)</title><rect x="102.6" y="1429" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.56" y="1439.5" ></text>
</g>
<g >
<title>database::find_schema (1 samples, 0.03%; +0.03%)</title><rect x="72.8" y="533" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="75.84" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="540.5" y="1669" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="543.55" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (3 samples, 0.10%; 0.00%)</title><rect x="116.5" y="1445" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1455.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="1839.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (8 samples, 0.26%; 0.00%)</title><rect x="837.1" y="1653" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="840.05" y="1663.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (6 samples, 0.19%; 0.00%)</title><rect x="84.1" y="1637" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.13" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="86.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.01" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="54.4" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.40" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::deallocate (1 samples, 0.03%; 0.00%)</title><rect x="23.5" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.55" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (355 samples, 11.32%; -0.10%)</title><rect x="268.5" y="1701" width="133.6" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="271.50" y="1711.5" >flat_mutation_re..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; -0.03%)</title><rect x="743.7" y="1749" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="746.74" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="874.7" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="877.68" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1317" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1327.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (3 samples, 0.10%; 0.00%)</title><rect x="56.7" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.66" y="463.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2 samples, 0.06%; 0.00%)</title><rect x="87.1" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.14" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.03%; 0.00%)</title><rect x="641.8" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="644.77" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (5 samples, 0.16%; 0.00%)</title><rect x="55.9" y="469" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="54.0" y="213" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="223.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.43" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.19%; 0.00%)</title><rect x="55.9" y="677" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="687.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (13 samples, 0.41%; +0.16%)</title><rect x="1005.2" y="1493" width="4.9" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="1008.25" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="67.6" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.57" y="271.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1285" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1295.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; -0.03%)</title><rect x="1146.4" y="1765" width="0.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1149.35" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="159.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char const*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="36.0" y="261" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="38.96" y="271.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (57 samples, 1.82%; 0.00%)</title><rect x="133.0" y="1637" width="21.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1647.5" >c..</text>
</g>
<g >
<title>cql3::operation::set_value::set_value (1 samples, 0.03%; 0.00%)</title><rect x="54.8" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.78" y="367.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (2 samples, 0.06%; +0.03%)</title><rect x="1084.6" y="1653" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1087.64" y="1663.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.26%; 0.00%)</title><rect x="823.1" y="1717" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="826.13" y="1727.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="664.0" y="1733" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="666.97" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.03" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="100.7" y="1445" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="103.68" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1407.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.86" y="1407.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (16 samples, 0.51%; -0.06%)</title><rect x="836.3" y="1701" width="6.0" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="839.30" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1391.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.82" y="271.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="60.0" y="229" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="63.04" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="393.8" y="1605" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="396.80" y="1615.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (2 samples, 0.06%; +0.03%)</title><rect x="1098.6" y="1573" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1101.57" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="103.3" y="1301" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="106.32" y="1311.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; 0.00%)</title><rect x="196.3" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="199.26" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; +0.03%)</title><rect x="146.6" y="1317" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="149.59" y="1327.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (372 samples, 11.86%; +0.16%)</title><rect x="933.0" y="1637" width="140.0" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="936.00" y="1647.5" >service::storage_..</text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_text[abi:cxx11] (1 samples, 0.03%; +0.03%)</title><rect x="28.4" y="293" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="31.44" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; +0.03%)</title><rect x="387.4" y="1573" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="390.40" y="1583.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; 0.00%)</title><rect x="39.0" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.97" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1679.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="67.2" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.19" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; 0.00%)</title><rect x="106.0" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.95" y="1407.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (3 samples, 0.10%; 0.00%)</title><rect x="530.8" y="1637" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="533.77" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="517" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="383.5" ></text>
</g>
<g >
<title>db::schema_tables::add_table_or_view_to_schema_mutation (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1583.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1157" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1167.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="37.8" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.84" y="335.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; +0.03%)</title><rect x="614.3" y="1653" width="1.9" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="617.30" y="1663.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::to_receivers (1 samples, 0.03%; +0.03%)</title><rect x="72.1" y="453" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="75.09" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (39 samples, 1.24%; +0.10%)</title><rect x="598.5" y="1637" width="14.7" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="601.49" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="319.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="133.0" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1551.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.06%)</title><rect x="680.1" y="1749" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="683.15" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="147.0" y="1205" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="149.96" y="1215.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="144.0" y="1221" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="146.95" y="1231.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_destroy_data&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="73.6" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.59" y="495.5" ></text>
</g>
<g >
<title>[libatomic.so.1.2.0] (1 samples, 0.03%; +0.03%)</title><rect x="735.5" y="1749" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="738.46" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (143 samples, 4.56%; 0.00%)</title><rect x="10.8" y="741" width="53.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="751.5" >[unkn..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="39.7" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.73" y="351.5" ></text>
</g>
<g >
<title>row::~row (2 samples, 0.06%; 0.00%)</title><rect x="129.7" y="1813" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.66" y="1823.5" ></text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (1 samples, 0.03%; 0.00%)</title><rect x="189.9" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.86" y="1711.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.03%; 0.00%)</title><rect x="80.4" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="623.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (43 samples, 1.37%; 0.00%)</title><rect x="137.9" y="1525" width="16.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.93" y="1535.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="64.2" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.18" y="399.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="431.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (2 samples, 0.06%; 0.00%)</title><rect x="1106.8" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1109.84" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.57%; 0.00%)</title><rect x="1103.5" y="1653" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.46" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.03%)</title><rect x="71.7" y="485" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="74.71" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.03%; +0.03%)</title><rect x="43.9" y="37" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="46.86" y="47.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1503.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.03%; 0.00%)</title><rect x="768.6" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="771.57" y="1695.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="110.5" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.47" y="1567.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (2,625 samples, 83.71%; +0.19%)</title><rect x="159.0" y="1781" width="987.7" height="15.0" fill="rgb(255,155,155)" rx="2" ry="2" />
<text  x="162.01" y="1791.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="437" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_role_statement, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="78.1" y="501" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="81.11" y="511.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.03%; -0.03%)</title><rect x="839.3" y="1589" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="842.31" y="1599.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="115.7" y="1397" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="118.73" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="67.2" y="309" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="70.19" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (8 samples, 0.26%; 0.00%)</title><rect x="18.7" y="197" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.65" y="207.5" ></text>
</g>
<g >
<title>do_cql_test (6 samples, 0.19%; 0.00%)</title><rect x="55.9" y="597" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="607.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="80.7" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.74" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="869" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="879.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (10 samples, 0.32%; 0.00%)</title><rect x="42.0" y="373" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.98" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.2" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.15" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_role_statement, std::default_delete&lt;cql3::statements::create_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_role_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="48.8" y="421" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="51.76" y="431.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1519.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (4 samples, 0.13%; 0.00%)</title><rect x="735.5" y="1765" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="738.46" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.32%; +0.16%)</title><rect x="867.9" y="1573" width="3.8" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="870.91" y="1583.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (2 samples, 0.06%; +0.03%)</title><rect x="1023.3" y="1573" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1026.31" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.43" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="153.7" y="1461" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="156.74" y="1471.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="133.0" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1439.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (3 samples, 0.10%; 0.00%)</title><rect x="13.8" y="373" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.76" y="383.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::operation::raw_update&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="66.8" y="245" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="69.82" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="52.5" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="255.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1535.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.03%)</title><rect x="616.2" y="1653" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="619.18" y="1663.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="115.4" y="1509" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.36" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (3 samples, 0.10%; 0.00%)</title><rect x="151.1" y="1445" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.10" y="1455.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (351 samples, 11.19%; +0.19%)</title><rect x="270.0" y="1685" width="132.1" height="15.0" fill="rgb(255,155,155)" rx="2" ry="2" />
<text  x="273.01" y="1695.5" >merging_reader&lt;m..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql3_type::raw&gt;::shared_ptr (1 samples, 0.03%; +0.03%)</title><rect x="110.1" y="1541" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="113.09" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1471.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (2 samples, 0.06%; -0.03%)</title><rect x="87.1" y="1589" width="0.8" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="90.14" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.10%; +0.03%)</title><rect x="63.1" y="389" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="66.05" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="101" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="111.5" ></text>
</g>
<g >
<title>[unknown] (185 samples, 5.90%; 0.00%)</title><rect x="10.8" y="789" width="69.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="799.5" >[unknown]</text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;*, std::unique_ptr&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, std::default_delete&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="74.3" y="533" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="77.34" y="543.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::operator (1 samples, 0.03%; -0.03%)</title><rect x="1109.1" y="1493" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1112.10" y="1503.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (6 samples, 0.19%; -0.06%)</title><rect x="881.1" y="1573" width="2.2" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="884.08" y="1583.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="98.8" y="1333" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="1343.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="43.5" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.49" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="335.5" ></text>
</g>
<g >
<title>_Unwind_IteratePhdrCallback (1 samples, 0.03%; +0.03%)</title><rect x="121.0" y="1861" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="124.00" y="1871.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (6 samples, 0.19%; -0.03%)</title><rect x="84.1" y="1653" width="2.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="87.13" y="1663.5" ></text>
</g>
<g >
<title>distributed_loader::populate_column_family (1 samples, 0.03%; 0.00%)</title><rect x="710.2" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="713.25" y="1759.5" ></text>
</g>
<g >
<title>table::set_hit_rate (7 samples, 0.22%; +0.10%)</title><rect x="732.4" y="1733" width="2.7" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="735.45" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="114.2" y="1381" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="117.23" y="1391.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.13%; 0.00%)</title><rect x="638.8" y="1685" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="641.76" y="1695.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1669" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1679.5" >cq..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1327.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (41 samples, 1.31%; -0.35%)</title><rect x="468.3" y="1637" width="15.4" height="15.0" fill="rgb(109,109,255)" rx="2" ry="2" />
<text  x="471.30" y="1647.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (8 samples, 0.26%; -0.06%)</title><rect x="608.7" y="1621" width="3.0" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="611.65" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (4 samples, 0.13%; +0.03%)</title><rect x="34.8" y="277" width="1.5" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="37.83" y="287.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.03%; 0.00%)</title><rect x="130.8" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.78" y="1775.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (1 samples, 0.03%; 0.00%)</title><rect x="730.9" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="733.94" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="96.2" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.17" y="1455.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::data_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="932.6" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="935.63" y="1503.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.22%; +0.03%)</title><rect x="354.7" y="1525" width="2.6" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="357.67" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1487.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%; +0.03%)</title><rect x="654.6" y="1749" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="657.56" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_channel (1 samples, 0.03%; +0.03%)</title><rect x="25.1" y="293" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="28.05" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="142.4" y="1397" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.45" y="1407.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="90.5" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.52" y="1839.5" ></text>
</g>
<g >
<title>auth::service::start (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.03%; +0.03%)</title><rect x="41.2" y="357" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="44.23" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="133.0" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1487.5" ></text>
</g>
<g >
<title>validation::validate_column_family (11 samples, 0.35%; 0.00%)</title><rect x="811.1" y="1669" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="814.09" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="436.7" y="1637" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="439.70" y="1647.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="116.1" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.11" y="1503.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.29%; -0.13%)</title><rect x="537.2" y="1669" width="3.3" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="540.16" y="1679.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.03%; 0.00%)</title><rect x="72.8" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.84" y="559.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.19%; 0.00%)</title><rect x="106.7" y="1493" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.70" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (3 samples, 0.10%; 0.00%)</title><rect x="152.2" y="1461" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.23" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_M_max_size (1 samples, 0.03%; +0.03%)</title><rect x="14.5" y="245" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="17.52" y="255.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; +0.06%)</title><rect x="193.6" y="1749" width="1.2" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="196.62" y="1759.5" ></text>
</g>
<g >
<title>create_partitions (6 samples, 0.19%; 0.00%)</title><rect x="55.9" y="581" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="525.9" y="1637" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="528.87" y="1647.5" ></text>
</g>
<g >
<title>cql3::cf_name::operator= (1 samples, 0.03%; +0.03%)</title><rect x="39.3" y="373" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="42.35" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="144.0" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.95" y="1407.5" ></text>
</g>
<g >
<title>do_cql_test (102 samples, 3.25%; 0.00%)</title><rect x="10.8" y="549" width="38.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="559.5" >do_..</text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.32%; -0.06%)</title><rect x="250.8" y="1701" width="3.8" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="253.82" y="1711.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (10 samples, 0.32%; +0.03%)</title><rect x="587.6" y="1637" width="3.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="590.58" y="1647.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.03%; +0.03%)</title><rect x="259.8" y="1717" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="262.85" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; 0.00%)</title><rect x="613.5" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="616.55" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (3 samples, 0.10%; -0.03%)</title><rect x="25.8" y="229" width="1.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="28.80" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (20 samples, 0.64%; +0.06%)</title><rect x="876.6" y="1589" width="7.5" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="879.56" y="1599.5" ></text>
</g>
<g >
<title>__start_context (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1813" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1823.5" >__..</text>
</g>
<g >
<title>seastar::reactor::batch_flush_pollfn::poll (1 samples, 0.03%; +0.03%)</title><rect x="158.3" y="1781" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="161.25" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (57 samples, 1.82%; 0.00%)</title><rect x="133.0" y="1557" width="21.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1567.5" >c..</text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~deque (1 samples, 0.03%; 0.00%)</title><rect x="74.0" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.97" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (14 samples, 0.45%; 0.00%)</title><rect x="59.3" y="437" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="447.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="83.8" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.75" y="1647.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="95.0" y="1445" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="98.04" y="1455.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="101.1" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.06" y="1423.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.16%; 0.00%)</title><rect x="42.0" y="341" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.98" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (6 samples, 0.19%; 0.00%)</title><rect x="84.1" y="1605" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.13" y="1615.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (3 samples, 0.10%; 0.00%)</title><rect x="150.0" y="1445" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.97" y="1455.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (3 samples, 0.10%; +0.03%)</title><rect x="107.8" y="1445" width="1.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="110.83" y="1455.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="861.9" y="1669" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="864.89" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="133.0" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1471.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::operator= (1 samples, 0.03%; 0.00%)</title><rect x="109.0" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.96" y="1503.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="75.5" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.47" y="415.5" ></text>
</g>
<g >
<title>database::do_apply (20 samples, 0.64%; -0.03%)</title><rect x="1095.9" y="1701" width="7.6" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1098.93" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="75.5" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.47" y="463.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="61.5" y="309" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="64.55" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (9 samples, 0.29%; -0.03%)</title><rect x="52.5" y="389" width="3.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="55.52" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%; 0.00%)</title><rect x="114.2" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1567.5" ></text>
</g>
<g >
<title>database::shard_of (1 samples, 0.03%; +0.03%)</title><rect x="1109.5" y="1509" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1112.48" y="1519.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="147.0" y="1237" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.96" y="1247.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_create_nodes (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.52" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_input (1 samples, 0.03%; +0.03%)</title><rect x="55.9" y="325" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="58.91" y="335.5" ></text>
</g>
<g >
<title>perf_simple_que (3,136 samples, 100.00%; 0.00%)</title><rect x="10.0" y="1909" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" >perf_simple_que</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="75.5" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.47" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="485" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="495.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.03%; +0.03%)</title><rect x="1109.1" y="1477" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1112.10" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="660.6" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="663.58" y="1743.5" ></text>
</g>
<g >
<title>row::external_memory_usage (11 samples, 0.35%; -0.13%)</title><rect x="334.7" y="1557" width="4.2" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="337.73" y="1567.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="80.4" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="559.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="517" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1269" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1279.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="1102.0" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1104.95" y="1599.5" ></text>
</g>
<g >
<title>do_cql_test (3 samples, 0.10%; 0.00%)</title><rect x="80.4" y="693" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="703.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.03%; +0.03%)</title><rect x="817.1" y="1669" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="820.11" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="134.2" y="1477" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.17" y="1487.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.10%; +0.03%)</title><rect x="653.4" y="1749" width="1.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="656.43" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="54.4" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.40" y="143.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::parse_header (1 samples, 0.03%; +0.03%)</title><rect x="12.3" y="501" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="15.26" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (1 samples, 0.03%; -0.06%)</title><rect x="32.2" y="293" width="0.4" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="35.20" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="106.3" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.33" y="1439.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::delay&lt;service::abstract_write_response_handler::signal (1 samples, 0.03%; 0.00%)</title><rect x="736.6" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="739.59" y="1743.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="54.4" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.40" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="168.4" y="1749" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="171.41" y="1759.5" ></text>
</g>
<g >
<title>local_schema_registry (2 samples, 0.06%; +0.03%)</title><rect x="941.7" y="1621" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="944.66" y="1631.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; +0.03%)</title><rect x="60.8" y="373" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="63.80" y="383.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (4 samples, 0.13%; -0.06%)</title><rect x="638.8" y="1701" width="1.5" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="641.76" y="1711.5" ></text>
</g>
<g >
<title>auth::standard_role_manager::start (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%; 0.00%)</title><rect x="75.8" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.85" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (1 samples, 0.03%; 0.00%)</title><rect x="540.9" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="543.92" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1317" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1327.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1221" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1231.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="101.1" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.06" y="1471.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="39.0" y="293" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="41.97" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="106.3" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.33" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="911.6" y="1637" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="914.56" y="1647.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; +0.03%)</title><rect x="75.1" y="533" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="78.10" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="107.1" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.08" y="1391.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="21.3" y="165" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="24.29" y="175.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (3 samples, 0.10%; -0.03%)</title><rect x="831.4" y="1749" width="1.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="834.41" y="1759.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.87" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.82" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="99.6" y="1269" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.55" y="1279.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (2 samples, 0.06%; 0.00%)</title><rect x="76.2" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.22" y="495.5" ></text>
</g>
<g >
<title>schema::column_at (9 samples, 0.29%; +0.13%)</title><rect x="373.1" y="1525" width="3.4" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="376.11" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_deallocate_map (1 samples, 0.03%; 0.00%)</title><rect x="74.0" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.97" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::max_size (1 samples, 0.03%; +0.03%)</title><rect x="62.3" y="357" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="65.30" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.03%; +0.03%)</title><rect x="85.3" y="1509" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="88.26" y="1519.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (3 samples, 0.10%; -0.03%)</title><rect x="528.9" y="1621" width="1.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="531.88" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="24.3" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.30" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="147.0" y="1317" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.96" y="1327.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.03%; 0.00%)</title><rect x="37.1" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.09" y="351.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="133.0" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.13%; +0.03%)</title><rect x="629.0" y="1621" width="1.5" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="631.97" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="142.8" y="1109" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="145.83" y="1119.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (3 samples, 0.10%; 0.00%)</title><rect x="150.0" y="1461" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.97" y="1471.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (29 samples, 0.92%; +0.03%)</title><rect x="767.4" y="1701" width="11.0" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="770.44" y="1711.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; 0.00%)</title><rect x="39.0" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.97" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.13%; +0.06%)</title><rect x="404.7" y="1685" width="1.5" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="407.71" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (2 samples, 0.06%; 0.00%)</title><rect x="157.1" y="1781" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.12" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (236 samples, 7.53%; +0.13%)</title><rect x="548.1" y="1701" width="88.8" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="551.07" y="1711.5" >std::_Func..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="693" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="102.6" y="1381" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.56" y="1391.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="144.0" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.95" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (153 samples, 4.88%; 0.00%)</title><rect x="10.8" y="757" width="57.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="767.5" >[unkno..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.10%; -0.03%)</title><rect x="693.7" y="1749" width="1.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="696.69" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="133.0" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1455.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (5 samples, 0.16%; -0.13%)</title><rect x="177.4" y="1717" width="1.9" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="180.44" y="1727.5" ></text>
</g>
<g >
<title>collection_mutation_description::serialize (1 samples, 0.03%; +0.03%)</title><rect x="1101.2" y="1605" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1104.20" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="82.6" y="1637" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="85.62" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1679.5" ></text>
</g>
<g >
<title>database::add_column_family (3 samples, 0.10%; 0.00%)</title><rect x="189.9" y="1749" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.86" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="42.0" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.98" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.03%; -0.03%)</title><rect x="106.0" y="1413" width="0.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="108.95" y="1423.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (2 samples, 0.06%; 0.00%)</title><rect x="87.1" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.14" y="1631.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="102.6" y="1349" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.56" y="1359.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; 0.00%)</title><rect x="658.7" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="661.70" y="1759.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="397.2" y="1653" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="400.19" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%; +0.03%)</title><rect x="401.7" y="1669" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="404.70" y="1679.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; +0.06%)</title><rect x="311.4" y="1589" width="1.1" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="314.40" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.03%; +0.03%)</title><rect x="1149.4" y="1717" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1152.36" y="1727.5" ></text>
</g>
<g >
<title>database::create_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="188.4" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.35" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.61%; +0.03%)</title><rect x="954.1" y="1589" width="7.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="957.08" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.10%; 0.00%)</title><rect x="80.4" y="773" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="783.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; +0.03%)</title><rect x="118.4" y="1493" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="121.37" y="1503.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="112.0" y="1525" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1535.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.84" y="1407.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="533" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="543.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (19 samples, 0.61%; +0.03%)</title><rect x="73.2" y="565" width="7.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="76.21" y="575.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.29%; -0.06%)</title><rect x="522.9" y="1653" width="3.3" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="525.86" y="1663.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (1 samples, 0.03%; 0.00%)</title><rect x="130.8" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.78" y="1807.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="248.6" y="1717" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="251.56" y="1727.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;char const*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="38.6" y="341" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="41.60" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.84" y="1423.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="696.3" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="699.33" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="133.0" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1503.5" ></text>
</g>
<g >
<title>row::compact_and_expire (27 samples, 0.86%; -0.03%)</title><rect x="502.2" y="1669" width="10.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="505.17" y="1679.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="328.3" y="1557" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="331.33" y="1567.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.03%; -0.03%)</title><rect x="729.1" y="1733" width="0.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="732.06" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="42.0" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.98" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; +0.03%)</title><rect x="736.2" y="1749" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="739.21" y="1759.5" ></text>
</g>
<g >
<title>LZ4_compress_fast_extState (1 samples, 0.03%; +0.03%)</title><rect x="10.4" y="1893" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="13.38" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; +0.03%)</title><rect x="37.5" y="405" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="40.47" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (2 samples, 0.06%; 0.00%)</title><rect x="837.4" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="840.43" y="1599.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (1 samples, 0.03%; 0.00%)</title><rect x="188.0" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.98" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.43" y="1311.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="950.3" y="1621" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="953.31" y="1631.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="840.8" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="843.82" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.10%; 0.00%)</title><rect x="102.6" y="1477" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.56" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.93" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; 0.00%)</title><rect x="721.2" y="1749" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="724.16" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="597" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="607.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.10%; 0.00%)</title><rect x="53.6" y="373" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.65" y="383.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (2 samples, 0.06%; -0.13%)</title><rect x="530.0" y="1637" width="0.8" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="533.01" y="1647.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%; 0.00%)</title><rect x="65.3" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.31" y="447.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.03%; +0.03%)</title><rect x="1101.6" y="1589" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1104.58" y="1599.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::~set_value (1 samples, 0.03%; 0.00%)</title><rect x="86.4" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.38" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; +0.03%)</title><rect x="145.1" y="1381" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="148.08" y="1391.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (6 samples, 0.19%; 0.00%)</title><rect x="84.1" y="1621" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.13" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::back (1 samples, 0.03%; +0.03%)</title><rect x="119.1" y="1557" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="122.12" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (1 samples, 0.03%; +0.03%)</title><rect x="832.5" y="1765" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="835.54" y="1775.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="741" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="751.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.02" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="689.9" y="1733" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="692.93" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="108.2" y="1397" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.21" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="188.4" y="1557" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="191.35" y="1567.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (1 samples, 0.03%; 0.00%)</title><rect x="69.5" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.45" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="613" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="623.5" ></text>
</g>
<g >
<title>database::find_keyspace (7 samples, 0.22%; -0.06%)</title><rect x="1034.6" y="1605" width="2.6" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="1037.60" y="1615.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (18 samples, 0.57%; -0.03%)</title><rect x="1103.5" y="1685" width="6.7" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1106.46" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="59.3" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="399.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="43.9" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="159.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="188.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.98" y="1663.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.43" y="1279.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1439.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;int&gt;  (1 samples, 0.03%; +0.03%)</title><rect x="737.0" y="1733" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="739.96" y="1743.5" ></text>
</g>
<g >
<title>create_partitions (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="597" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="607.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (3 samples, 0.10%; 0.00%)</title><rect x="61.5" y="405" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.55" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1343.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (25 samples, 0.80%; 0.00%)</title><rect x="686.9" y="1765" width="9.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="689.92" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1205" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1215.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="114.2" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1439.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (6 samples, 0.19%; 0.00%)</title><rect x="55.9" y="613" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="623.5" ></text>
</g>
<g >
<title>mutation::set_cell (2 samples, 0.06%; 0.00%)</title><rect x="838.2" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="841.18" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (424 samples, 13.52%; -0.16%)</title><rect x="913.8" y="1685" width="159.6" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="916.81" y="1695.5" >cql3::statements::se..</text>
</g>
<g >
<title>cql3::constants::marker::to_expression (11 samples, 0.35%; +0.03%)</title><rect x="867.5" y="1605" width="4.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="870.53" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="725" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="735.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::key (1 samples, 0.03%; +0.03%)</title><rect x="1102.3" y="1621" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1105.33" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.06%)</title><rect x="825.4" y="1685" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="828.39" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (1 samples, 0.03%; 0.00%)</title><rect x="118.4" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.37" y="1535.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.10%; -0.03%)</title><rect x="387.4" y="1589" width="1.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="390.40" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.93" y="1263.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="190.2" y="1349" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="193.24" y="1359.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (17 samples, 0.54%; 0.00%)</title><rect x="836.3" y="1733" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.30" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="1146.0" y="1765" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1148.98" y="1775.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; 0.00%)</title><rect x="541.3" y="1685" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="544.30" y="1695.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; -0.06%)</title><rect x="814.1" y="1637" width="0.4" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="817.10" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; -0.03%)</title><rect x="168.8" y="1749" width="0.7" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="171.79" y="1759.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;**, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;**&gt; (1 samples, 0.03%; 0.00%)</title><rect x="23.9" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.92" y="239.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="148.8" y="1365" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="151.85" y="1375.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="50.6" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.64" y="351.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%; -0.29%)</title><rect x="522.1" y="1653" width="0.4" height="15.0" fill="rgb(127,127,255)" rx="2" ry="2" />
<text  x="525.11" y="1663.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (129 samples, 4.11%; -0.16%)</title><rect x="1024.4" y="1621" width="48.6" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="1027.44" y="1631.5" >serv..</text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; +0.06%)</title><rect x="1125.3" y="1749" width="1.9" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="1128.28" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="85" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="95.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="927.0" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="929.98" y="1663.5" ></text>
</g>
<g >
<title>evictable_reader::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1567.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; +0.03%)</title><rect x="627.8" y="1637" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="630.84" y="1647.5" ></text>
</g>
<g >
<title>database::find_schema (5 samples, 0.16%; -0.16%)</title><rect x="811.5" y="1653" width="1.8" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="814.47" y="1663.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (1 samples, 0.03%; +0.03%)</title><rect x="740.0" y="1749" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="742.97" y="1759.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (14 samples, 0.45%; 0.00%)</title><rect x="121.4" y="1877" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.38" y="1887.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (159 samples, 5.07%; -0.13%)</title><rect x="964.2" y="1605" width="59.9" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="967.23" y="1615.5" >servic..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%; +0.03%)</title><rect x="19.4" y="149" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="22.41" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; +0.03%)</title><rect x="135.7" y="1509" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="138.68" y="1519.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="55.9" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (5 samples, 0.16%; +0.03%)</title><rect x="1108.3" y="1573" width="1.9" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1111.35" y="1583.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="116.5" y="1493" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1503.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="1013" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="1013" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1023.5" >[unknown]</text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (2 samples, 0.06%; 0.00%)</title><rect x="87.1" y="1669" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.14" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.23" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="709" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="719.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (50 samples, 1.59%; +0.03%)</title><rect x="998.5" y="1525" width="18.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1001.48" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1535.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (2 samples, 0.06%; +0.03%)</title><rect x="730.2" y="1717" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="733.19" y="1727.5" ></text>
</g>
<g >
<title>sstables::sstable::make_component_file_writer (1 samples, 0.03%; 0.00%)</title><rect x="131.9" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (3 samples, 0.10%; 0.00%)</title><rect x="56.7" y="437" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.66" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="84.5" y="1573" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="87.50" y="1583.5" ></text>
</g>
<g >
<title>db::system_keyspace::load_local_host_id (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1775.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_following (1 samples, 0.03%; +0.03%)</title><rect x="111.2" y="1557" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="114.22" y="1567.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::raw::delete_statement*, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="47.3" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.25" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="485" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="39.7" y="293" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.73" y="303.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (6 samples, 0.19%; +0.10%)</title><rect x="634.6" y="1669" width="2.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="637.62" y="1679.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="39.7" y="309" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.73" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="52.5" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.06%)</title><rect x="786.3" y="1653" width="0.3" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="789.26" y="1663.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (733 samples, 23.37%; +0.06%)</title><rect x="834.8" y="1765" width="275.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="837.80" y="1775.5" >seastar::lambda_task&lt;seastar::execut..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1359.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="805" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="815.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.03%; +0.03%)</title><rect x="839.3" y="1557" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="842.31" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.10%; +0.03%)</title><rect x="93.2" y="1509" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="96.16" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 3.25%; 0.00%)</title><rect x="10.8" y="693" width="38.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="703.5" >[un..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1423.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="141.3" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.32" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="144.0" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.95" y="1263.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="725" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="735.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.03%; -0.03%)</title><rect x="123.6" y="1845" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="126.64" y="1855.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="145.8" y="1429" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="148.84" y="1439.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="108.2" y="1413" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.21" y="1423.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="105.6" y="1413" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="108.57" y="1423.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; 0.00%)</title><rect x="69.8" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.83" y="479.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="710.2" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="713.25" y="1743.5" ></text>
</g>
<g >
<title>seastar::reactor::signal_pollfn::poll (1 samples, 0.03%; +0.03%)</title><rect x="1148.2" y="1765" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1151.23" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.01" y="431.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_channel (1 samples, 0.03%; 0.00%)</title><rect x="28.1" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="31.06" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="112.0" y="1541" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1551.5" ></text>
</g>
<g >
<title>create_partitions (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1733" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1743.5" >cr..</text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.03%; +0.03%)</title><rect x="1148.6" y="1717" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1151.61" y="1727.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (9 samples, 0.29%; +0.03%)</title><rect x="1138.1" y="1733" width="3.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1141.07" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="144.7" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.71" y="1295.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; 0.00%)</title><rect x="67.2" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.19" y="399.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="141.3" y="1365" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="144.32" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="949" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="959.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="115.4" y="1525" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.36" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; +0.03%)</title><rect x="707.2" y="1749" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="710.24" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="67.2" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.19" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="115.7" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.73" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="43.9" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="271.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="143.6" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.58" y="1407.5" ></text>
</g>
<g >
<title>std::locale::operator= (1 samples, 0.03%; +0.03%)</title><rect x="120.6" y="1861" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="123.62" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="917" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="927.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1221" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1231.5" ></text>
</g>
<g >
<title>create_partitions (3 samples, 0.10%; 0.00%)</title><rect x="80.4" y="677" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="687.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (12 samples, 0.38%; +0.06%)</title><rect x="1168.2" y="1877" width="4.5" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="1171.18" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="1045" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1055.5" >[unknown]</text>
</g>
<g >
<title>abstract_type::from_string (1 samples, 0.03%; 0.00%)</title><rect x="69.5" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.45" y="479.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (30 samples, 0.96%; +0.10%)</title><rect x="892.7" y="1653" width="11.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="895.74" y="1663.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="1133.2" y="1749" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1136.18" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="101.1" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.06" y="1439.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.03%; +0.03%)</title><rect x="384.4" y="1589" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="387.39" y="1599.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (2 samples, 0.06%; -0.03%)</title><rect x="11.9" y="517" width="0.7" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="14.88" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; 0.00%)</title><rect x="565.8" y="1621" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="568.76" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="1149.7" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.74" y="1871.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_with_triggers (1 samples, 0.03%; 0.00%)</title><rect x="841.9" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="844.95" y="1679.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.15" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.10%; 0.00%)</title><rect x="116.5" y="1429" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1439.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="901" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="911.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="153.7" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="156.74" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="972.1" y="1589" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="975.14" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; +0.03%)</title><rect x="133.8" y="1477" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="136.79" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::begin (1 samples, 0.03%; +0.03%)</title><rect x="55.5" y="373" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="58.53" y="383.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (2 samples, 0.06%; +0.06%)</title><rect x="715.1" y="1733" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="718.14" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (2 samples, 0.06%; 0.00%)</title><rect x="142.4" y="1429" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.45" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1749" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1759.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (3 samples, 0.10%; 0.00%)</title><rect x="130.8" y="1829" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.78" y="1839.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="1149.7" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.74" y="1855.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.10%; +0.10%)</title><rect x="796.0" y="1605" width="1.2" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="799.04" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (5 samples, 0.16%; 0.00%)</title><rect x="98.4" y="1397" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.42" y="1407.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (3 samples, 0.10%; -0.03%)</title><rect x="1098.6" y="1605" width="1.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1101.57" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="981" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="991.5" >[unknown]</text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (26 samples, 0.83%; -0.10%)</title><rect x="208.3" y="1717" width="9.8" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="211.30" y="1727.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_new_partition (1 samples, 0.03%; 0.00%)</title><rect x="129.3" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.28" y="1823.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (1 samples, 0.03%; -0.03%)</title><rect x="845.7" y="1701" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="848.71" y="1711.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="59.7" y="389" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="62.67" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; +0.03%)</title><rect x="102.2" y="1493" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="105.19" y="1503.5" ></text>
</g>
<g >
<title>partition_entry::read (1 samples, 0.03%; +0.03%)</title><rect x="623.7" y="1669" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="626.71" y="1679.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (2 samples, 0.06%; 0.00%)</title><rect x="128.5" y="1813" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.53" y="1823.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="38.6" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.60" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="54.8" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.78" y="335.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (2 samples, 0.06%; 0.00%)</title><rect x="484.5" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="487.48" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.10%; 0.00%)</title><rect x="102.6" y="1413" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.56" y="1423.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="912.7" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="915.68" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="42.0" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.98" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="367.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="1029" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="1039.5" ></text>
</g>
<g >
<title>distributed_loader::reshard (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (7 samples, 0.22%; +0.03%)</title><rect x="141.7" y="1477" width="2.6" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="144.70" y="1487.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="144.7" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.71" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="1029" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1039.5" >[unknown]</text>
</g>
<g >
<title>cql3::operation::set_value::prepare (8 samples, 0.26%; -0.03%)</title><rect x="69.1" y="517" width="3.0" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="72.08" y="527.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="732.1" y="1733" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="735.07" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="116.1" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.11" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.10%; 0.00%)</title><rect x="112.0" y="1461" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="1125" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="1135.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="113.5" y="1525" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.48" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="43.9" y="229" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.13%; +0.06%)</title><rect x="712.9" y="1749" width="1.5" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="715.88" y="1759.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;seastar::file_impl&gt; &gt;, seastar::reactor::open_file_dma (1 samples, 0.03%; 0.00%)</title><rect x="696.3" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="699.33" y="1775.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (30 samples, 0.96%; 0.00%)</title><rect x="207.5" y="1733" width="11.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="210.54" y="1743.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1 samples, 0.03%; +0.03%)</title><rect x="1073.0" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1075.98" y="1663.5" ></text>
</g>
<g >
<title>utils::filter::bloom_filter::add (1 samples, 0.03%; +0.03%)</title><rect x="129.3" y="1797" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="132.28" y="1807.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; -0.03%)</title><rect x="729.4" y="1733" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="732.44" y="1743.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.03%; +0.03%)</title><rect x="99.9" y="1173" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="102.93" y="1183.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.03%; 0.00%)</title><rect x="841.2" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="844.19" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="139.1" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.06" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1605" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1615.5" >[unknown]</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="63.4" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.43" y="367.5" ></text>
</g>
<g >
<title>database::has_keyspace (3 samples, 0.10%; +0.03%)</title><rect x="813.3" y="1653" width="1.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="816.35" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reallocate_map (2 samples, 0.06%; 0.00%)</title><rect x="23.5" y="261" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.55" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="57.4" y="373" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="60.41" y="383.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="188.0" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.98" y="1615.5" ></text>
</g>
<g >
<title>schema::get_partitioner (3 samples, 0.10%; +0.10%)</title><rect x="906.3" y="1669" width="1.1" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="909.29" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="117.2" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.24" y="1391.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="134.2" y="1445" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.17" y="1455.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="50.6" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.64" y="367.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timestamp_set (1 samples, 0.03%; +0.03%)</title><rect x="83.4" y="1637" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="86.37" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mIDENT (1 samples, 0.03%; +0.03%)</title><rect x="36.7" y="309" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="39.72" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="106.3" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.33" y="1471.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="94.3" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.29" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="255.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="1045" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="1055.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%; 0.00%)</title><rect x="188.4" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.35" y="1743.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="103.3" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.32" y="1327.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (1 samples, 0.03%; +0.03%)</title><rect x="674.5" y="1717" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="677.50" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; +0.03%)</title><rect x="136.8" y="1381" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="139.80" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="1077" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1087.5" >[unknown]</text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.10%; +0.03%)</title><rect x="536.0" y="1669" width="1.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="539.03" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="24.3" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.30" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (23 samples, 0.73%; +0.13%)</title><rect x="380.6" y="1605" width="8.7" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="383.63" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="744.1" y="1749" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="747.11" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1599.5" ></text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="113.1" y="1301" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="116.10" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="43.9" y="117" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="127.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="143.6" y="1381" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="146.58" y="1391.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="1109" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="66.4" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.44" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; 0.00%)</title><rect x="1001.5" y="1477" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1004.49" y="1487.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="107.1" y="1285" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="110.08" y="1295.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="42.0" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.98" y="255.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.06%)</title><rect x="632.0" y="1621" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="634.98" y="1631.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, std::function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="737.0" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="739.96" y="1775.5" ></text>
</g>
<g >
<title>from_hex (1 samples, 0.03%; -0.03%)</title><rect x="69.5" y="437" width="0.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="72.45" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.9" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.94" y="1263.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (11 samples, 0.35%; +0.03%)</title><rect x="654.9" y="1765" width="4.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="657.94" y="1775.5" ></text>
</g>
<g >
<title>database::find_schema (7 samples, 0.22%; 0.00%)</title><rect x="779.1" y="1685" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="782.11" y="1695.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (1 samples, 0.03%; -0.03%)</title><rect x="72.1" y="501" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="75.09" y="511.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (2 samples, 0.06%; 0.00%)</title><rect x="1109.1" y="1541" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1112.10" y="1551.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="103.7" y="1461" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="106.69" y="1471.5" ></text>
</g>
<g >
<title>db::system_keyspace::size_estimates (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1813" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1823.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="141.3" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.32" y="1391.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::advance (1 samples, 0.03%; +0.03%)</title><rect x="131.2" y="1813" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="134.16" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="148.1" y="1349" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="151.09" y="1359.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="109.7" y="1477" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="112.71" y="1487.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.03%; 0.00%)</title><rect x="840.8" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="843.82" y="1631.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="115.7" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.73" y="1455.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="80.0" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.99" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (18 samples, 0.57%; 0.00%)</title><rect x="1103.5" y="1621" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.46" y="1631.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.86" y="1375.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="677.1" y="1717" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="680.14" y="1727.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_role_statement, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="77.4" y="501" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="80.35" y="511.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (2 samples, 0.06%; 0.00%)</title><rect x="156.4" y="1781" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.37" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="60.8" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.80" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="54.0" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="513.1" y="1669" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="516.08" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (1 samples, 0.03%; +0.03%)</title><rect x="49.5" y="389" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="52.51" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1423.5" ></text>
</g>
<g >
<title>seastar::reactor::smp_pollfn::try_enter_interrupt_mode (1 samples, 0.03%; 0.00%)</title><rect x="1146.7" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1149.73" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.23" y="1359.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1685" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1695.5" >cq..</text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="90.5" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.52" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="146.6" y="1349" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.59" y="1359.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (2 samples, 0.06%; +0.06%)</title><rect x="918.7" y="1653" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="921.71" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.03%; 0.00%)</title><rect x="1149.4" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.36" y="1743.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="1149.7" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.74" y="1887.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (3 samples, 0.10%; +0.03%)</title><rect x="675.3" y="1701" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="678.26" y="1711.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.03%; 0.00%)</title><rect x="188.0" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.98" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (12 samples, 0.38%; -0.03%)</title><rect x="145.5" y="1445" width="4.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="148.46" y="1455.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="42.7" y="165" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="45.74" y="175.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (58 samples, 1.85%; 0.00%)</title><rect x="15.6" y="405" width="21.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.64" y="415.5" >a..</text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (21 samples, 0.67%; 0.00%)</title><rect x="1095.6" y="1749" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1098.55" y="1759.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="95.4" y="1477" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="98.41" y="1487.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1551.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="147.0" y="1285" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.96" y="1295.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="23.9" y="181" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="26.92" y="191.5" ></text>
</g>
<g >
<title>[unknown] (126 samples, 4.02%; 0.00%)</title><rect x="10.8" y="725" width="47.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="735.5" >[unk..</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="147.0" y="1221" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.96" y="1231.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.06%; 0.00%)</title><rect x="83.4" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="663.6" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="666.59" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (102 samples, 3.25%; 0.00%)</title><rect x="10.8" y="597" width="38.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="607.5" >sea..</text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="750.5" y="1701" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.51" y="1711.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (2 samples, 0.06%; +0.03%)</title><rect x="394.9" y="1653" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="397.93" y="1663.5" ></text>
</g>
<g >
<title>seastar::async&lt;single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1503.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (1 samples, 0.03%; +0.03%)</title><rect x="865.3" y="1621" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="868.27" y="1631.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.29%; -0.22%)</title><rect x="402.8" y="1701" width="3.4" height="15.0" fill="rgb(146,146,255)" rx="2" ry="2" />
<text  x="405.83" y="1711.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="59.3" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="152.2" y="1285" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="155.23" y="1295.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1519.5" ></text>
</g>
<g >
<title>multishard_combining_reader::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1583.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (2 samples, 0.06%; +0.06%)</title><rect x="170.3" y="1749" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="173.29" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="117.6" y="1365" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="120.61" y="1375.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (1 samples, 0.03%; 0.00%)</title><rect x="932.6" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="935.63" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; +0.03%)</title><rect x="60.4" y="405" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="63.42" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="884.1" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.09" y="1631.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.23" y="1311.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="429.5" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="432.55" y="1663.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="142.4" y="1413" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.45" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="312.1" y="1573" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="315.15" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="75.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.85" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (73 samples, 2.33%; +0.03%)</title><rect x="1045.5" y="1605" width="27.5" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1048.51" y="1615.5" >s..</text>
</g>
<g >
<title>std::move&lt;cql3::expr::conjunction&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="63.8" y="133" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="66.81" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.06%; +0.06%)</title><rect x="218.1" y="1717" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="221.08" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="110.5" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.47" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (11 samples, 0.35%; 0.00%)</title><rect x="41.6" y="389" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.61" y="399.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.54%; 0.00%)</title><rect x="83.0" y="1845" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1855.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (3 samples, 0.10%; -0.10%)</title><rect x="528.9" y="1637" width="1.1" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="531.88" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="826.9" y="1717" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="829.89" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="110.5" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.47" y="1455.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%; +0.03%)</title><rect x="22.4" y="277" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="25.42" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.84" y="1455.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_keyspace_statement, std::default_delete&lt;cql3::statements::drop_keyspace_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="79.2" y="517" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="82.23" y="527.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="104.8" y="1445" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="107.82" y="1455.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql3::untyped_result_set&gt; &gt;, cql3::query_processor::execute_paged_internal (1 samples, 0.03%; 0.00%)</title><rect x="659.1" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="662.08" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (185 samples, 5.90%; 0.00%)</title><rect x="10.8" y="805" width="69.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="815.5" >[unknown]</text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="140.6" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.57" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1311.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.23" y="1391.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; +0.03%)</title><rect x="130.4" y="1829" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="133.41" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="144.7" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.71" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="61.2" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.17" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.23" y="1423.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.93" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; 0.00%)</title><rect x="998.1" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1001.10" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (4 samples, 0.13%; 0.00%)</title><rect x="13.4" y="421" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.39" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (32 samples, 1.02%; 0.00%)</title><rect x="68.3" y="677" width="12.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.32" y="687.5" ></text>
</g>
<g >
<title>service::migration_manager::announce (1 samples, 0.03%; 0.00%)</title><rect x="735.1" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="738.08" y="1759.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::shared_ptr (1 samples, 0.03%; +0.03%)</title><rect x="154.1" y="1525" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="157.11" y="1535.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%; 0.00%)</title><rect x="52.9" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.90" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.10%; 0.00%)</title><rect x="116.5" y="1397" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1407.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_lock (1 samples, 0.03%; 0.00%)</title><rect x="735.1" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="738.08" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (205 samples, 6.54%; +0.19%)</title><rect x="303.5" y="1605" width="77.1" height="15.0" fill="rgb(255,155,155)" rx="2" ry="2" />
<text  x="306.49" y="1615.5" >partitio..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="41.6" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.61" y="287.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="58.2" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range_concurrent (1 samples, 0.03%; 0.00%)</title><rect x="932.6" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="935.63" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (52 samples, 1.66%; 0.00%)</title><rect x="90.9" y="1557" width="19.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1567.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (267 samples, 8.51%; -0.10%)</title><rect x="415.2" y="1685" width="100.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="418.25" y="1695.5" >seastar::do_..</text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; +0.03%)</title><rect x="873.2" y="1605" width="1.9" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="876.18" y="1615.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="271.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="59.3" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (57 samples, 1.82%; 0.00%)</title><rect x="16.0" y="357" width="21.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.02" y="367.5" >a..</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="46.9" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.88" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1157" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.61" y="1423.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (1 samples, 0.03%; 0.00%)</title><rect x="762.2" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="765.17" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; -0.06%)</title><rect x="753.5" y="1717" width="1.1" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="756.52" y="1727.5" ></text>
</g>
<g >
<title>service::client_state::has_access (61 samples, 1.95%; -0.22%)</title><rect x="787.0" y="1669" width="23.0" height="15.0" fill="rgb(146,146,255)" rx="2" ry="2" />
<text  x="790.01" y="1679.5" >s..</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="103.7" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.69" y="1487.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.48%; +0.22%)</title><rect x="966.1" y="1573" width="5.7" height="15.0" fill="rgb(255,146,146)" rx="2" ry="2" />
<text  x="969.12" y="1583.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_d36847801b836ea118d696d8a8ab9431a1179ab0] (1 samples, 0.03%; +0.03%)</title><rect x="925.1" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="928.10" y="1663.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.82" y="287.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (1 samples, 0.03%; +0.03%)</title><rect x="645.9" y="1765" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="648.91" y="1775.5" ></text>
</g>
<g >
<title>seastar::smp::poll_queues (1 samples, 0.03%; +0.03%)</title><rect x="1146.7" y="1765" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1149.73" y="1775.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.06%; +0.06%)</title><rect x="402.1" y="1701" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="405.08" y="1711.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (42 samples, 1.34%; +0.29%)</title><rect x="357.3" y="1525" width="15.8" height="15.0" fill="rgb(255,127,127)" rx="2" ry="2" />
<text  x="360.30" y="1535.5" ></text>
</g>
<g >
<title>__memchr_avx2 (1 samples, 0.03%; +0.03%)</title><rect x="127.4" y="1877" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="130.40" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.93" y="1439.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="61.9" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.93" y="335.5" ></text>
</g>
<g >
<title>dht::tri_compare (5 samples, 0.16%; -0.22%)</title><rect x="585.7" y="1637" width="1.9" height="15.0" fill="rgb(146,146,255)" rx="2" ry="2" />
<text  x="588.70" y="1647.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (22 samples, 0.70%; +0.19%)</title><rect x="485.2" y="1669" width="8.3" height="15.0" fill="rgb(255,155,155)" rx="2" ry="2" />
<text  x="488.24" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="137.2" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.18" y="1391.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1173" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1183.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="137.2" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.18" y="1487.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1 samples, 0.03%; 0.00%)</title><rect x="1110.2" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.23" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="54.4" y="85" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.40" y="95.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="901" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="911.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (2 samples, 0.06%; +0.03%)</title><rect x="316.3" y="1573" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="319.29" y="1583.5" ></text>
</g>
<g >
<title>CryptoPP::Weak1::MD5::Transform (1 samples, 0.03%; +0.03%)</title><rect x="10.0" y="1893" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.06%)</title><rect x="565.0" y="1637" width="0.8" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="568.01" y="1647.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="52.1" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.14" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::update_statement (1 samples, 0.03%; 0.00%)</title><rect x="76.2" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.22" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.03%; 0.00%)</title><rect x="945.0" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="948.04" y="1567.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="841.6" y="1669" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="844.57" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (21 samples, 0.67%; 0.00%)</title><rect x="16.4" y="325" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.40" y="335.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.32%; +0.03%)</title><rect x="242.9" y="1701" width="3.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="245.91" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.54%; 0.00%)</title><rect x="83.0" y="1813" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (2 samples, 0.06%; 0.00%)</title><rect x="108.2" y="1365" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.21" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="67.6" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.57" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="42.0" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.98" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="798.3" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="801.30" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="136.8" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1487.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="949" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="959.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (2 samples, 0.06%; 0.00%)</title><rect x="188.7" y="1717" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1727.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (1 samples, 0.03%; +0.03%)</title><rect x="18.7" y="165" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="21.65" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="102.9" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.94" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.03%; 0.00%)</title><rect x="29.2" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.19" y="239.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; 0.00%)</title><rect x="567.3" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="570.26" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="997" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1007.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 1.40%; 0.00%)</title><rect x="1173.1" y="1893" width="16.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1176.07" y="1903.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1,205 samples, 38.42%; -0.29%)</title><rect x="192.5" y="1765" width="453.4" height="15.0" fill="rgb(127,127,255)" rx="2" ry="2" />
<text  x="195.49" y="1775.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="144.0" y="1301" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.95" y="1311.5" ></text>
</g>
<g >
<title>cql3::untyped_result_set::untyped_result_set (1 samples, 0.03%; 0.00%)</title><rect x="659.1" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="662.08" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="351.5" ></text>
</g>
<g >
<title>ser::deserialize&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.03%; 0.00%)</title><rect x="1101.6" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1104.58" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.10%; 0.00%)</title><rect x="42.7" y="277" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.74" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::~allocator (1 samples, 0.03%; +0.03%)</title><rect x="139.8" y="1445" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="142.82" y="1455.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="633.1" y="1637" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="636.11" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (3 samples, 0.10%; +0.06%)</title><rect x="151.1" y="1413" width="1.1" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="154.10" y="1423.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.10%; +0.03%)</title><rect x="516.8" y="1701" width="1.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="519.84" y="1711.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.10%)</title><rect x="680.9" y="1749" width="0.4" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="683.90" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="1141" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1151.5" >[unknown]</text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%; +0.03%)</title><rect x="1090.7" y="1685" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1093.66" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::batch_statement, std::default_delete&lt;cql3::statements::raw::batch_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="78.9" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.86" y="495.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="1093" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1103.5" >[unknown]</text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="995.8" y="1525" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="998.84" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.06%)</title><rect x="568.4" y="1637" width="1.5" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="571.39" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="110.5" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.47" y="1439.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="107.1" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.08" y="1471.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_keyspaces (1 samples, 0.03%; 0.00%)</title><rect x="188.4" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.35" y="1663.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::operator new (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.39" y="399.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="997" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="1007.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="512.7" y="1669" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="515.70" y="1679.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="817.9" y="1701" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="820.86" y="1711.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; -0.03%)</title><rect x="657.2" y="1749" width="0.7" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="660.19" y="1759.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (1 samples, 0.03%; +0.03%)</title><rect x="837.4" y="1573" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="840.43" y="1583.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (3 samples, 0.10%; +0.03%)</title><rect x="28.8" y="293" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="31.81" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="107.1" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.08" y="1439.5" ></text>
</g>
<g >
<title>db::schema_tables::fill_column_info (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1551.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (4 samples, 0.13%; +0.03%)</title><rect x="546.6" y="1701" width="1.5" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="549.57" y="1711.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.22%; +0.13%)</title><rect x="690.7" y="1749" width="2.6" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="693.68" y="1759.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (37 samples, 1.18%; 0.00%)</title><rect x="166.9" y="1765" width="13.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="169.91" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (3 samples, 0.10%; 0.00%)</title><rect x="94.3" y="1477" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.29" y="1487.5" ></text>
</g>
<g >
<title>make_combined_reader (26 samples, 0.83%; -0.22%)</title><rect x="558.2" y="1653" width="9.8" height="15.0" fill="rgb(146,146,255)" rx="2" ry="2" />
<text  x="561.23" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.03%; 0.00%)</title><rect x="75.8" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.85" y="463.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.03%)</title><rect x="656.4" y="1749" width="0.8" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="659.44" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="60.8" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.80" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::deallocate (1 samples, 0.03%; 0.00%)</title><rect x="61.5" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.55" y="351.5" ></text>
</g>
<g >
<title>ser::qr_row_view::cells (1 samples, 0.03%; +0.03%)</title><rect x="190.6" y="1605" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="193.61" y="1615.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%; 0.00%)</title><rect x="49.5" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.51" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="674.1" y="1717" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="677.13" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="113.5" y="1509" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.48" y="1519.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (17 samples, 0.54%; -0.03%)</title><rect x="1103.8" y="1605" width="6.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1106.83" y="1615.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.26%; -0.03%)</title><rect x="942.4" y="1621" width="3.0" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="945.41" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="52.5" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="271.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.03%; -0.03%)</title><rect x="1018.4" y="1541" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1021.42" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.10%; 0.00%)</title><rect x="43.9" y="357" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="115.4" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.36" y="1439.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="140.2" y="1477" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.19" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="37.8" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.84" y="319.5" ></text>
</g>
<g >
<title>[unknown] (57 samples, 1.82%; 0.00%)</title><rect x="133.0" y="1829" width="21.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1839.5" >[..</text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.03%; 0.00%)</title><rect x="131.9" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1839.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::expr::expression&gt;::new_allocator (1 samples, 0.03%; +0.03%)</title><rect x="54.4" y="37" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="57.40" y="47.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="616.6" y="1637" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="619.56" y="1647.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (2 samples, 0.06%; 0.00%)</title><rect x="190.2" y="1685" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="54.0" y="229" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="631.6" y="1589" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="634.61" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="110.5" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.47" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="150.4" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.35" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="696.0" y="1717" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="698.95" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="39.7" y="261" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.73" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (2 samples, 0.06%; 0.00%)</title><rect x="1148.6" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1151.61" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (5 samples, 0.16%; 0.00%)</title><rect x="104.1" y="1493" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.07" y="1503.5" ></text>
</g>
<g >
<title>db::system_keyspace::query_mutations (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1711.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; +0.03%)</title><rect x="694.8" y="1749" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="697.82" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (5 samples, 0.16%; 0.00%)</title><rect x="39.7" y="373" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.73" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="101.4" y="1413" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.43" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; -0.10%)</title><rect x="1018.8" y="1525" width="1.9" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="1021.79" y="1535.5" ></text>
</g>
<g >
<title>row::row (100 samples, 3.19%; +0.03%)</title><rect x="338.9" y="1557" width="37.6" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="341.86" y="1567.5" >row..</text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (38 samples, 1.21%; 0.00%)</title><rect x="520.2" y="1685" width="14.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="523.23" y="1695.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; +0.03%)</title><rect x="99.2" y="1285" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="102.18" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1375.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.10%; +0.03%)</title><rect x="854.4" y="1685" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="857.36" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.03%; 0.00%)</title><rect x="41.6" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.61" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1269" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (190 samples, 6.06%; 0.00%)</title><rect x="10.8" y="1365" width="71.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1375.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (3 samples, 0.10%; 0.00%)</title><rect x="73.6" y="549" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.59" y="559.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.03%; 0.00%)</title><rect x="38.6" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.60" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="107.5" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1359.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (51 samples, 1.63%; +0.03%)</title><rect x="790.8" y="1653" width="19.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="793.77" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="319.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1173" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1183.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="45.0" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.23" y="1327.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (9 samples, 0.29%; +0.10%)</title><rect x="498.4" y="1653" width="3.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="501.41" y="1663.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1839.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (26 samples, 0.83%; -0.10%)</title><rect x="171.0" y="1749" width="9.8" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="174.05" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.87" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="150.7" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.73" y="1407.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="139.8" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.82" y="1487.5" ></text>
</g>
<g >
<title>dht::minimum_token (1 samples, 0.03%; 0.00%)</title><rect x="555.2" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="558.22" y="1679.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.06%; 0.00%)</title><rect x="302.7" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="305.74" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (1 samples, 0.03%; 0.00%)</title><rect x="836.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.68" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (1 samples, 0.03%; +0.03%)</title><rect x="534.2" y="1669" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="537.15" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (52 samples, 1.66%; 0.00%)</title><rect x="90.9" y="1589" width="19.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1599.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.82" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (5 samples, 0.16%; +0.03%)</title><rect x="1088.8" y="1685" width="1.9" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1091.78" y="1695.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (1 samples, 0.03%; +0.03%)</title><rect x="836.7" y="1637" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="839.68" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="43.9" y="69" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="79.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="107.1" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.08" y="1311.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; +0.03%)</title><rect x="115.0" y="1477" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="117.98" y="1487.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="565" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="575.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (1 samples, 0.03%; +0.03%)</title><rect x="1014.3" y="1509" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1017.28" y="1519.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.03%; +0.03%)</title><rect x="838.6" y="1557" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="841.56" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (15 samples, 0.48%; +0.03%)</title><rect x="96.5" y="1493" width="5.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="99.54" y="1503.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.84" y="1391.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (5 samples, 0.16%; 0.00%)</title><rect x="104.1" y="1509" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.07" y="1519.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;sstables::sstable_directory&gt;::invoke_on_all (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.03%; +0.03%)</title><rect x="188.7" y="1317" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="191.73" y="1327.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (8 samples, 0.26%; 0.00%)</title><rect x="84.1" y="1669" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.13" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.82" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (11 samples, 0.35%; 0.00%)</title><rect x="68.7" y="549" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.70" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1301" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1311.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (18 samples, 0.57%; -0.03%)</title><rect x="1103.5" y="1637" width="6.7" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1106.46" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (32 samples, 1.02%; 0.00%)</title><rect x="24.7" y="309" width="12.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.67" y="319.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="168.0" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="171.04" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="113.9" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.85" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (8 samples, 0.26%; 0.00%)</title><rect x="18.7" y="181" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.65" y="191.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (137 samples, 4.37%; +0.06%)</title><rect x="972.5" y="1589" width="51.6" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="975.51" y="1599.5" >servi..</text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (12 samples, 0.38%; 0.00%)</title><rect x="1103.8" y="1557" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.83" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.06%)</title><rect x="611.7" y="1605" width="0.3" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="614.66" y="1615.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (97 samples, 3.09%; 0.00%)</title><rect x="12.6" y="501" width="36.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.63" y="511.5" >cql..</text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="1084.3" y="1621" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1087.27" y="1631.5" ></text>
</g>
<g >
<title>__start_context (12 samples, 0.38%; 0.00%)</title><rect x="127.8" y="1877" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1887.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="96.2" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.17" y="1519.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="53.3" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.27" y="319.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (3 samples, 0.10%; 0.00%)</title><rect x="80.4" y="661" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="671.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; +0.03%)</title><rect x="75.5" y="373" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="78.47" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="70.2" y="453" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="73.20" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1423.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.10%; +0.06%)</title><rect x="569.9" y="1653" width="1.1" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="572.90" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="1823.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.9" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.94" y="1455.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="581" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="591.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.84" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="61.2" y="309" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="64.17" y="319.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="188.0" y="1589" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="190.98" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.03%; -0.06%)</title><rect x="913.4" y="1669" width="0.4" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="916.44" y="1679.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.13%; +0.10%)</title><rect x="651.9" y="1749" width="1.5" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="654.93" y="1759.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1205" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1215.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (3 samples, 0.10%; +0.03%)</title><rect x="217.0" y="1685" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="219.95" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.03%; +0.03%)</title><rect x="414.9" y="1685" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="417.87" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; 0.00%)</title><rect x="661.7" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="664.71" y="1759.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; +0.03%)</title><rect x="483.7" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="486.73" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="116.1" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.11" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1701" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1711.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (2 samples, 0.06%; 0.00%)</title><rect x="21.7" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.66" y="287.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1519.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="54.8" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.78" y="319.5" ></text>
</g>
<g >
<title>auth::operator== (1 samples, 0.03%; -0.03%)</title><rect x="797.2" y="1605" width="0.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="800.17" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.06%)</title><rect x="640.3" y="1717" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="643.26" y="1727.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="52.1" y="341" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="55.14" y="351.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="118.7" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.74" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1407.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mIDENT (1 samples, 0.03%; +0.03%)</title><rect x="31.1" y="293" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="34.07" y="303.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (672 samples, 21.43%; -0.26%)</title><rect x="842.7" y="1749" width="252.9" height="15.0" fill="rgb(136,136,255)" rx="2" ry="2" />
<text  x="845.70" y="1759.5" >seastar::concrete_execution_stage..</text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; 0.00%)</title><rect x="379.5" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="382.50" y="1599.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1301" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1311.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.03%)</title><rect x="875.1" y="1589" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="878.06" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (16 samples, 0.51%; 0.00%)</title><rect x="836.3" y="1685" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.30" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (3 samples, 0.10%; +0.03%)</title><rect x="29.9" y="293" width="1.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="32.94" y="303.5" ></text>
</g>
<g >
<title>[unknown] (57 samples, 1.82%; 0.00%)</title><rect x="133.0" y="1781" width="21.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1791.5" >[..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.03%; -0.03%)</title><rect x="29.2" y="245" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="32.19" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.51%; +0.16%)</title><rect x="1127.2" y="1733" width="6.0" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="1130.16" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (190 samples, 6.06%; 0.00%)</title><rect x="10.8" y="1397" width="71.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1407.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.43" y="1455.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; 0.00%)</title><rect x="91.7" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.65" y="1503.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1695.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="1124.9" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1127.90" y="1743.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (12 samples, 0.38%; 0.00%)</title><rect x="1103.8" y="1541" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.83" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="150.4" y="1317" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.35" y="1327.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; 0.00%)</title><rect x="54.4" y="53" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.40" y="63.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="59.3" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="303.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.93" y="1375.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (100 samples, 3.19%; -0.03%)</title><rect x="778.4" y="1701" width="37.6" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="781.35" y="1711.5" >cql..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.06%; 0.00%)</title><rect x="109.3" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.34" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.10%; 0.00%)</title><rect x="116.5" y="1477" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.03%)</title><rect x="707.6" y="1749" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="710.61" y="1759.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.03%; 0.00%)</title><rect x="190.6" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.61" y="1647.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="107.5" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="150.4" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.35" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="112.7" y="1365" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="115.72" y="1375.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="150.7" y="1381" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="153.73" y="1391.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="134.2" y="1493" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.17" y="1503.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; +0.03%)</title><rect x="298.6" y="1621" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="301.60" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="106.3" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.33" y="1407.5" ></text>
</g>
<g >
<title>__start_context (3 samples, 0.10%; 0.00%)</title><rect x="80.4" y="757" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="767.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="1237" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.93" y="1247.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (2 samples, 0.06%; +0.03%)</title><rect x="1009.4" y="1477" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1012.39" y="1487.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (17 samples, 0.54%; 0.00%)</title><rect x="83.0" y="1765" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.52" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.06%; 0.00%)</title><rect x="45.0" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.99" y="367.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="901" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="911.5" >[unknown]</text>
</g>
<g >
<title>query_state::query_state (9 samples, 0.29%; 0.00%)</title><rect x="636.9" y="1717" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="639.88" y="1727.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (666 samples, 21.24%; -0.03%)</title><rect x="845.0" y="1733" width="250.6" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="847.96" y="1743.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>[unknown] (209 samples, 6.66%; 0.00%)</title><rect x="10.8" y="1861" width="78.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1871.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="287.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="920.2" y="1669" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="923.21" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="917" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="927.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="1086.5" y="1669" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1089.52" y="1679.5" ></text>
</g>
<g >
<title>distributed_loader::init_system_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::comparator_type (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1599.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.03%; -0.03%)</title><rect x="522.5" y="1653" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="525.49" y="1663.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="39.7" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.73" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.03%; +0.03%)</title><rect x="945.0" y="1541" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="948.04" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.19%; 0.00%)</title><rect x="55.9" y="693" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="703.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1775.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="114.2" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1551.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="151.9" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.86" y="1391.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="389.7" y="1605" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="392.66" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="107.5" y="1317" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="110.46" y="1327.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1663.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.03%; 0.00%)</title><rect x="126.6" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.65" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1797" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1807.5" >[unknown]</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="104.4" y="1461" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="107.45" y="1471.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (1 samples, 0.03%; +0.03%)</title><rect x="297.1" y="1637" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="300.10" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="533.8" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="536.78" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (4 samples, 0.13%; 0.00%)</title><rect x="116.5" y="1509" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::attach_service_level_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="48.4" y="421" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="51.38" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.82" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1343.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="115.7" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.73" y="1471.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (58 samples, 1.85%; 0.00%)</title><rect x="15.6" y="373" width="21.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.64" y="383.5" >a..</text>
</g>
<g >
<title>locator::token_metadata::first_token (1 samples, 0.03%; +0.03%)</title><rect x="1071.5" y="1573" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1074.47" y="1583.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="581" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="112.7" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.72" y="1423.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (97 samples, 3.09%; +0.03%)</title><rect x="12.6" y="469" width="36.5" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="15.63" y="479.5" >cql..</text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.03%; 0.00%)</title><rect x="840.8" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="843.82" y="1583.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::detach_service_level_statement*, std::default_delete&lt;cql3::statements::detach_service_level_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="82.2" y="1125" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="85.24" y="1135.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (86 samples, 2.74%; -0.19%)</title><rect x="1111.0" y="1765" width="32.3" height="15.0" fill="rgb(155,155,255)" rx="2" ry="2" />
<text  x="1113.98" y="1775.5" >se..</text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="626.0" y="1653" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="628.96" y="1663.5" ></text>
</g>
<g >
<title>database::create_in_memory_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="188.4" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.35" y="1615.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (1 samples, 0.03%; +0.03%)</title><rect x="1105.3" y="1525" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1108.34" y="1535.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (1 samples, 0.03%; 0.00%)</title><rect x="932.6" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="935.63" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.03%)</title><rect x="743.0" y="1717" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="745.98" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (16 samples, 0.51%; +0.10%)</title><rect x="495.8" y="1669" width="6.0" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="498.77" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="107.1" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.08" y="1407.5" ></text>
</g>
<g >
<title>db::system_keyspace::all_tables (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1551.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; 0.00%)</title><rect x="662.5" y="1749" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="665.46" y="1759.5" ></text>
</g>
<g >
<title>do_cql_test (57 samples, 1.82%; 0.00%)</title><rect x="133.0" y="1701" width="21.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1711.5" >d..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1455.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.32%; +0.22%)</title><rect x="171.0" y="1733" width="3.8" height="15.0" fill="rgb(255,146,146)" rx="2" ry="2" />
<text  x="174.05" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1765" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1775.5" >[unknown]</text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.03%; +0.03%)</title><rect x="556.4" y="1669" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="559.35" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.03%; +0.03%)</title><rect x="37.8" y="213" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="40.84" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::run (2,644 samples, 84.31%; 0.00%)</title><rect x="154.5" y="1813" width="994.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.49" y="1823.5" >seastar::reactor::run</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; -0.03%)</title><rect x="144.7" y="1301" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="147.71" y="1311.5" ></text>
</g>
<g >
<title>seastar::current_backtrace (1 samples, 0.03%; 0.00%)</title><rect x="735.1" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="738.08" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; 0.00%)</title><rect x="219.6" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="222.59" y="1743.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.03%; 0.00%)</title><rect x="322.7" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="325.68" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.10%; +0.03%)</title><rect x="944.3" y="1589" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="947.29" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="54.8" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.78" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (23 samples, 0.73%; -0.03%)</title><rect x="669.6" y="1749" width="8.7" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="672.61" y="1759.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (11 samples, 0.35%; -0.16%)</title><rect x="800.2" y="1605" width="4.1" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="803.18" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%; 0.00%)</title><rect x="1149.4" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.36" y="1759.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.03%; 0.00%)</title><rect x="612.0" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="615.04" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; -0.03%)</title><rect x="310.6" y="1541" width="0.8" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="313.64" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; -0.22%)</title><rect x="995.8" y="1509" width="2.7" height="15.0" fill="rgb(146,146,255)" rx="2" ry="2" />
<text  x="998.84" y="1519.5" ></text>
</g>
<g >
<title>do_cql_test (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="613" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="271.5" ></text>
</g>
<g >
<title>do_cql_test (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1749" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1759.5" >do..</text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="663.6" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="666.59" y="1679.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_d36847801b836ea118d696d8a8ab9431a1179ab0] (1 samples, 0.03%; +0.03%)</title><rect x="460.8" y="1637" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="463.78" y="1647.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1519.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1077" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1087.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1407.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::raw::delete_statement*, false&gt;::_Head_base (1 samples, 0.03%; +0.03%)</title><rect x="47.3" y="325" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="50.25" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="49.1" y="261" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="52.13" y="271.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="94.3" y="1397" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="97.29" y="1407.5" ></text>
</g>
<g >
<title>seastar::reactor::io_queue_submission_pollfn::poll (2 samples, 0.06%; 0.00%)</title><rect x="1147.5" y="1765" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1150.48" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="137.2" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.18" y="1439.5" ></text>
</g>
<g >
<title>query_result_builder::consume (104 samples, 3.32%; -0.03%)</title><rect x="445.4" y="1669" width="39.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="448.35" y="1679.5" >que..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; +0.03%)</title><rect x="118.0" y="1477" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="120.99" y="1487.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.06%; 0.00%)</title><rect x="128.5" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.53" y="1759.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; 0.00%)</title><rect x="298.2" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.23" y="1631.5" ></text>
</g>
<g >
<title>__start_context (32 samples, 1.02%; 0.00%)</title><rect x="68.3" y="709" width="12.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.32" y="719.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.06%)</title><rect x="975.1" y="1573" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="978.15" y="1583.5" ></text>
</g>
<g >
<title>database::has_keyspace (7 samples, 0.22%; 0.00%)</title><rect x="820.5" y="1717" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="823.50" y="1727.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (3 samples, 0.10%; 0.00%)</title><rect x="1098.6" y="1589" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1101.57" y="1599.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="107.5" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="1088.4" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1091.41" y="1663.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (4 samples, 0.13%; +0.10%)</title><rect x="607.1" y="1621" width="1.6" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="610.15" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::do_resize (1 samples, 0.03%; 0.00%)</title><rect x="1149.4" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.36" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1173" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1183.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%; -0.03%)</title><rect x="613.2" y="1637" width="0.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="616.17" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (32 samples, 1.02%; 0.00%)</title><rect x="68.3" y="661" width="12.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.32" y="671.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1647.5" ></text>
</g>
<g >
<title>unimplemented::warn (2 samples, 0.06%; +0.06%)</title><rect x="87.9" y="1669" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="90.89" y="1679.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.10%; +0.06%)</title><rect x="551.8" y="1685" width="1.2" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="554.84" y="1695.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.06%; +0.06%)</title><rect x="555.6" y="1669" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="558.60" y="1679.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.03%; +0.03%)</title><rect x="203.4" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="206.41" y="1743.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (308 samples, 9.82%; -0.16%)</title><rect x="279.0" y="1653" width="115.9" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="282.04" y="1663.5" >mutation_reade..</text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (4 samples, 0.13%; 0.00%)</title><rect x="13.4" y="453" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.39" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="399.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.32%; 0.00%)</title><rect x="867.9" y="1589" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.91" y="1599.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.03%; +0.03%)</title><rect x="87.5" y="1557" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="90.51" y="1567.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; +0.03%)</title><rect x="625.6" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="628.59" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="76.6" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.60" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (4 samples, 0.13%; +0.06%)</title><rect x="840.1" y="1637" width="1.5" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="843.06" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="53.6" y="357" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.65" y="367.5" ></text>
</g>
<g >
<title>__start_context (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="677" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="687.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.84" y="1375.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="218.8" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="221.83" y="1743.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.10%; 0.00%)</title><rect x="102.6" y="1461" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.56" y="1471.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; +0.03%)</title><rect x="512.3" y="1669" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="515.33" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.03%; +0.03%)</title><rect x="710.2" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="713.25" y="1663.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; -0.03%)</title><rect x="80.7" y="549" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="83.74" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; 0.00%)</title><rect x="905.2" y="1653" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="908.16" y="1663.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; -0.03%)</title><rect x="484.1" y="1653" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="487.11" y="1663.5" ></text>
</g>
<g >
<title>query::querier&lt; (686 samples, 21.88%; +0.10%)</title><rect x="260.2" y="1717" width="258.1" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="263.22" y="1727.5" >query::querier&lt;</text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="965" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="975.5" >[unknown]</text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.52" y="271.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (1 samples, 0.03%; +0.03%)</title><rect x="518.3" y="1701" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="521.35" y="1711.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.03%; 0.00%)</title><rect x="190.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.61" y="1663.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="1061" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="1071.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="557.9" y="1653" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="560.86" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (3 samples, 0.10%; 0.00%)</title><rect x="66.1" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.07" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (4 samples, 0.13%; -0.03%)</title><rect x="816.0" y="1701" width="1.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="818.98" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="965" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="975.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (15 samples, 0.48%; +0.03%)</title><rect x="74.7" y="549" width="5.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="77.72" y="559.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (4 samples, 0.13%; 0.00%)</title><rect x="840.1" y="1653" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="843.06" y="1663.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1263.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (17 samples, 0.54%; 0.00%)</title><rect x="83.0" y="1781" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="67.6" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.57" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; +0.03%)</title><rect x="96.2" y="1381" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="99.17" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.13%; +0.06%)</title><rect x="539.0" y="1653" width="1.5" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="542.04" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (4 samples, 0.13%; 0.00%)</title><rect x="98.8" y="1317" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="1327.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; 0.00%)</title><rect x="911.6" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="914.56" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="679.8" y="1733" width="0.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="682.77" y="1743.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; -0.03%)</title><rect x="782.9" y="1669" width="0.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="785.87" y="1679.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.10%; 0.00%)</title><rect x="112.0" y="1493" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; 0.00%)</title><rect x="139.8" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.82" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.03%; +0.03%)</title><rect x="106.0" y="1381" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="108.95" y="1391.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="43.9" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="303.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.13%)</title><rect x="191.7" y="1765" width="0.4" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="194.74" y="1775.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; +0.03%)</title><rect x="975.9" y="1573" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="978.90" y="1583.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="875.1" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="878.06" y="1615.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="52.5" y="229" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="55.52" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1359.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.06%)</title><rect x="689.6" y="1733" width="0.3" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="692.55" y="1743.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (14 samples, 0.45%; -0.03%)</title><rect x="83.4" y="1685" width="5.2" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="86.37" y="1695.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; 0.00%)</title><rect x="393.4" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="396.42" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="107.5" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1375.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.10%; 0.00%)</title><rect x="144.3" y="1445" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.33" y="1455.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (2 samples, 0.06%; 0.00%)</title><rect x="1148.6" y="1733" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1151.61" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1471.5" ></text>
</g>
<g >
<title>do_cql_test (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="581" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="113.5" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.48" y="1551.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="128.2" y="1797" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="131.15" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_bound_terms (1 samples, 0.03%; +0.03%)</title><rect x="88.6" y="1685" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="91.64" y="1695.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range (1 samples, 0.03%; 0.00%)</title><rect x="932.6" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="935.63" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1781" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1791.5" >se..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="52.5" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="383.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; +0.03%)</title><rect x="119.9" y="1765" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="122.87" y="1775.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (4 samples, 0.13%; -0.06%)</title><rect x="714.4" y="1749" width="1.5" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="717.39" y="1759.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.61" y="1487.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (5 samples, 0.16%; 0.00%)</title><rect x="55.9" y="517" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::delete_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="47.3" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.25" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; +0.03%)</title><rect x="56.7" y="405" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="59.66" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="100.3" y="1397" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="103.31" y="1407.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (16 samples, 0.51%; +0.03%)</title><rect x="367.1" y="1509" width="6.0" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="370.09" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; 0.00%)</title><rect x="1086.9" y="1669" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1089.90" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.2" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.15" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (2 samples, 0.06%; 0.00%)</title><rect x="105.2" y="1445" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.20" y="1455.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; +0.03%)</title><rect x="712.1" y="1749" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="715.13" y="1759.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="101.4" y="1253" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="104.43" y="1263.5" ></text>
</g>
<g >
<title>ser::qr_cell_view::value (1 samples, 0.03%; +0.03%)</title><rect x="659.1" y="1701" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="662.08" y="1711.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="114.6" y="1333" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="117.60" y="1343.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_WHERE (1 samples, 0.03%; +0.03%)</title><rect x="31.8" y="293" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="34.82" y="303.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (6 samples, 0.19%; +0.06%)</title><rect x="1100.1" y="1621" width="2.2" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="1103.07" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1583.5" ></text>
</g>
<g >
<title>schema::raw_schema::raw_schema (1 samples, 0.03%; +0.03%)</title><rect x="120.2" y="1461" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="123.25" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="904.8" y="1653" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="907.78" y="1663.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="104.8" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.82" y="1471.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;clustering_key_prefix, clustering_key_prefix_view&gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="709.9" y="1477" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="712.87" y="1487.5" ></text>
</g>
<g >
<title>unimplemented::warn (1 samples, 0.03%; +0.03%)</title><rect x="841.9" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="844.95" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.06%; 0.00%)</title><rect x="22.8" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.79" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1343.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="114.2" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_valid (1 samples, 0.03%; +0.03%)</title><rect x="105.2" y="1413" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="108.20" y="1423.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.10%; +0.06%)</title><rect x="810.0" y="1669" width="1.1" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="812.96" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="67.6" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.57" y="239.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::raw::parsed_statement*, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="80.0" y="437" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="82.99" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.10%; 0.00%)</title><rect x="42.7" y="293" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.74" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (32 samples, 1.02%; +0.06%)</title><rect x="1002.2" y="1509" width="12.1" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="1005.24" y="1519.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.03" y="367.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1589" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1599.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="101.4" y="1333" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.43" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.10%; 0.00%)</title><rect x="116.5" y="1413" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1423.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; 0.00%)</title><rect x="178.2" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.20" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::comparator_type (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.43" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1237" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (5 samples, 0.16%; 0.00%)</title><rect x="146.6" y="1365" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.59" y="1375.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="631.6" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="634.61" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="719.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%; +0.03%)</title><rect x="645.5" y="1749" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="648.53" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; +0.03%)</title><rect x="57.0" y="325" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="60.03" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="376.9" y="1573" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="379.87" y="1583.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1647.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="58.2" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::collection_type (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1583.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (4 samples, 0.13%; 0.00%)</title><rect x="69.1" y="485" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.08" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (125 samples, 3.99%; -0.16%)</title><rect x="976.3" y="1573" width="47.0" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="979.28" y="1583.5" >serv..</text>
</g>
<g >
<title>cql3::expr::expression::operator= (4 samples, 0.13%; 0.00%)</title><rect x="94.3" y="1525" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.29" y="1535.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (11 samples, 0.35%; +0.13%)</title><rect x="461.2" y="1637" width="4.1" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="464.15" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="1102.0" y="1573" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1104.95" y="1583.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_mbegin (1 samples, 0.03%; +0.03%)</title><rect x="37.1" y="309" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="40.09" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="303.5" ></text>
</g>
<g >
<title>_Unwind_Find_FDE (1 samples, 0.03%; 0.00%)</title><rect x="121.0" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.00" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="612.8" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="615.79" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier_raw, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%; 0.00%)</title><rect x="137.6" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.56" y="1503.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.26%; -0.06%)</title><rect x="740.7" y="1733" width="3.0" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="743.73" y="1743.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.03%; 0.00%)</title><rect x="1099.3" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1102.32" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="110.8" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.84" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (5 samples, 0.16%; +0.03%)</title><rect x="62.7" y="405" width="1.9" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="65.68" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="676.8" y="1701" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="679.76" y="1711.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_input (1 samples, 0.03%; -0.03%)</title><rect x="26.9" y="293" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="29.93" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (3 samples, 0.10%; -0.06%)</title><rect x="918.3" y="1669" width="1.2" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="921.33" y="1679.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (2 samples, 0.06%; +0.06%)</title><rect x="610.5" y="1605" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="613.54" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.03%)</title><rect x="931.9" y="1637" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="934.88" y="1647.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (2 samples, 0.06%; 0.00%)</title><rect x="87.1" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.14" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.10%; -0.06%)</title><rect x="930.4" y="1621" width="1.1" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="933.37" y="1631.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; +0.03%)</title><rect x="57.8" y="533" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="60.79" y="543.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (6 samples, 0.19%; -0.03%)</title><rect x="630.5" y="1637" width="2.2" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="633.48" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.03%; +0.03%)</title><rect x="29.6" y="245" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="32.57" y="255.5" ></text>
</g>
<g >
<title>[unknown] (189 samples, 6.03%; 0.00%)</title><rect x="10.8" y="1221" width="71.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1231.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1407.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (33 samples, 1.05%; +0.03%)</title><rect x="722.7" y="1749" width="12.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="725.67" y="1759.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (99 samples, 3.16%; +0.41%)</title><rect x="339.2" y="1541" width="37.3" height="15.0" fill="rgb(255,91,91)" rx="2" ry="2" />
<text  x="342.24" y="1551.5" >com..</text>
</g>
<g >
<title>service::client_state::set_keyspace (1 samples, 0.03%; +0.03%)</title><rect x="755.0" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="758.03" y="1743.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1535.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_d36847801b836ea118d696d8a8ab9431a1179ab0] (1 samples, 0.03%; +0.03%)</title><rect x="588.0" y="1621" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="590.96" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (6 samples, 0.19%; +0.03%)</title><rect x="84.1" y="1589" width="2.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="87.13" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1487.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="110.5" y="1381" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="113.47" y="1391.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="148.8" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.85" y="1407.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="55.9" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="431.5" ></text>
</g>
<g >
<title>sstables::sstable::write_compression (1 samples, 0.03%; 0.00%)</title><rect x="131.9" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.91" y="1823.5" ></text>
</g>
<g >
<title>schema_registry::learn (3 samples, 0.10%; 0.00%)</title><rect x="189.9" y="1733" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.86" y="1743.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.29%; +0.03%)</title><rect x="740.4" y="1749" width="3.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="743.35" y="1759.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.03%; +0.03%)</title><rect x="203.8" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="206.78" y="1743.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="287.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (6 samples, 0.19%; +0.06%)</title><rect x="595.5" y="1637" width="2.2" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="598.48" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.03%)</title><rect x="641.0" y="1717" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="644.01" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; +0.03%)</title><rect x="139.4" y="1461" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="142.44" y="1471.5" ></text>
</g>
<g >
<title>sstring_hash::operator (4 samples, 0.13%; +0.13%)</title><rect x="821.6" y="1701" width="1.5" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="824.63" y="1711.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="149.2" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.22" y="1423.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; +0.03%)</title><rect x="401.3" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="404.33" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="39.7" y="277" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.73" y="287.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="115.4" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.36" y="1487.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="43.9" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="191.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; +0.03%)</title><rect x="124.0" y="1845" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="127.01" y="1855.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (2 samples, 0.06%; +0.06%)</title><rect x="35.2" y="245" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="38.21" y="255.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="919.5" y="1669" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="922.46" y="1679.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::drop_view_statement*, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="46.5" y="373" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="49.50" y="383.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (1 samples, 0.03%; 0.00%)</title><rect x="1048.5" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1051.52" y="1599.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (2 samples, 0.06%; 0.00%)</title><rect x="73.6" y="517" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.59" y="527.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (2 samples, 0.06%; 0.00%)</title><rect x="188.7" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1759.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (2 samples, 0.06%; -0.03%)</title><rect x="663.2" y="1733" width="0.8" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="666.21" y="1743.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1045" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1055.5" ></text>
</g>
<g >
<title>std::move&lt;std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="54.8" y="293" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="57.78" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.03%; 0.00%)</title><rect x="57.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.41" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; 0.00%)</title><rect x="178.6" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="181.57" y="1711.5" ></text>
</g>
<g >
<title>mutation_partition::append_clustered_row (1 samples, 0.03%; +0.03%)</title><rect x="1099.7" y="1621" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1102.69" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="223.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.45%; 0.00%)</title><rect x="121.4" y="1861" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.38" y="1871.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (202 samples, 6.44%; -0.03%)</title><rect x="755.4" y="1733" width="76.0" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="758.40" y="1743.5" >single_n..</text>
</g>
<g >
<title>boost::container::vector_alloc_holder&lt;boost::container::dtl::static_storage_allocator&lt;std::variant&lt;seastar::lw_shared_ptr&lt;seastar::simple_backtrace&gt;, seastar::task_entry&gt;, 16ul, 0ul, true&gt;, unsigned long, boost::move_detail::integral_constant&lt;unsigned int, 0u&gt; &gt;::vector_alloc_holder (1 samples, 0.03%; 0.00%)</title><rect x="735.1" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="738.08" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="150.0" y="1381" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="152.97" y="1391.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="50.6" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.64" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (2 samples, 0.06%; 0.00%)</title><rect x="39.7" y="197" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.73" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (1 samples, 0.03%; 0.00%)</title><rect x="188.0" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.98" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="38.2" y="213" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="41.22" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.03%)</title><rect x="961.2" y="1605" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="964.22" y="1615.5" ></text>
</g>
<g >
<title>database::apply_in_memory (18 samples, 0.57%; -0.06%)</title><rect x="1095.9" y="1669" width="6.8" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="1098.93" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="119.5" y="1573" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="122.50" y="1583.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; -0.10%)</title><rect x="338.5" y="1525" width="0.4" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="341.49" y="1535.5" ></text>
</g>
<g >
<title>frozen_mutation::unfreeze (1 samples, 0.03%; 0.00%)</title><rect x="189.1" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.11" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%; +0.03%)</title><rect x="133.4" y="1477" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="136.42" y="1487.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="108.6" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.58" y="1327.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.26%; +0.06%)</title><rect x="1042.5" y="1589" width="3.0" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="1045.50" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="76.6" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.60" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.03%)</title><rect x="677.5" y="1717" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="680.51" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (52 samples, 1.66%; 0.00%)</title><rect x="90.9" y="1573" width="19.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1583.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.03%)</title><rect x="797.5" y="1605" width="0.8" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="800.54" y="1615.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="140.2" y="1461" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="143.19" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (9 samples, 0.29%; 0.00%)</title><rect x="18.3" y="213" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.28" y="223.5" ></text>
</g>
<g >
<title>table::apply (18 samples, 0.57%; 0.00%)</title><rect x="1095.9" y="1653" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1098.93" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.54" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.16%; 0.00%)</title><rect x="299.0" y="1621" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.98" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="106.3" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.33" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (5 samples, 0.16%; -0.03%)</title><rect x="34.8" y="293" width="1.9" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="37.83" y="303.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (2 samples, 0.06%; 0.00%)</title><rect x="188.7" y="1765" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="85.6" y="1557" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="88.63" y="1567.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="64.2" y="341" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="67.18" y="351.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1189" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1199.5" ></text>
</g>
<g >
<title>do_cql_test (17 samples, 0.54%; 0.00%)</title><rect x="83.0" y="1733" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1637" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1647.5" >cq..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (5 samples, 0.16%; 0.00%)</title><rect x="142.4" y="1445" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.45" y="1455.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="501" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; -0.03%)</title><rect x="195.5" y="1749" width="0.8" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="198.50" y="1759.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (3 samples, 0.10%; 0.00%)</title><rect x="377.2" y="1573" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="380.24" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1455.5" ></text>
</g>
<g >
<title>seastar::fair_queue::dispatch_requests (1 samples, 0.03%; +0.03%)</title><rect x="1147.9" y="1733" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1150.86" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="117.6" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.61" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="179.3" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="182.32" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="191.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="542.8" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="545.81" y="1695.5" ></text>
</g>
<g >
<title>service::migration_manager::announce_new_column_family (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="148.8" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.85" y="1391.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.03%)</title><rect x="204.2" y="1733" width="1.5" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="207.16" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="809.2" y="1621" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="812.21" y="1631.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; +0.03%)</title><rect x="771.2" y="1669" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="774.21" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="47.3" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.25" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="116.1" y="1477" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="119.11" y="1487.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="37.8" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.84" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; -0.03%)</title><rect x="75.5" y="485" width="0.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="78.47" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (2 samples, 0.06%; 0.00%)</title><rect x="135.3" y="1525" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.30" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1327.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.03%; 0.00%)</title><rect x="188.0" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.98" y="1759.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="676.4" y="1701" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="679.38" y="1711.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (51 samples, 1.63%; -0.10%)</title><rect x="1052.3" y="1573" width="19.2" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="1055.28" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (2 samples, 0.06%; 0.00%)</title><rect x="55.9" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.43" y="1311.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (3 samples, 0.10%; 0.00%)</title><rect x="80.4" y="725" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="735.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (2 samples, 0.06%; 0.00%)</title><rect x="112.0" y="1397" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1407.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="54.4" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.40" y="159.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::set_errorRecovery (1 samples, 0.03%; +0.03%)</title><rect x="58.2" y="421" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="61.16" y="431.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; -0.03%)</title><rect x="395.7" y="1653" width="1.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="398.68" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1439.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="41.6" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.61" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (5 samples, 0.16%; 0.00%)</title><rect x="1108.3" y="1589" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.35" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (53 samples, 1.69%; -0.16%)</title><rect x="864.5" y="1669" width="20.0" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="867.52" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="67.6" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.57" y="159.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (86 samples, 2.74%; +0.03%)</title><rect x="15.3" y="421" width="32.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="18.27" y="431.5" >cq..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (10 samples, 0.32%; +0.10%)</title><rect x="329.5" y="1557" width="3.7" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="332.46" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (174 samples, 5.55%; -0.19%)</title><rect x="312.9" y="1589" width="65.5" height="15.0" fill="rgb(155,155,255)" rx="2" ry="2" />
<text  x="315.90" y="1599.5" >partiti..</text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="117.2" y="1365" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="120.24" y="1375.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (4 samples, 0.13%; -0.13%)</title><rect x="591.3" y="1653" width="1.6" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="594.35" y="1663.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; -0.03%)</title><rect x="650.4" y="1749" width="1.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="653.42" y="1759.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.68" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 3.25%; 0.00%)</title><rect x="10.8" y="677" width="38.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="687.5" >[un..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; 0.00%)</title><rect x="106.0" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.95" y="1471.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; 0.00%)</title><rect x="53.3" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.27" y="383.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="710.2" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="713.25" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (2 samples, 0.06%; 0.00%)</title><rect x="55.9" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1093" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1103.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (23 samples, 0.73%; -0.19%)</title><rect x="646.3" y="1765" width="8.6" height="15.0" fill="rgb(155,155,255)" rx="2" ry="2" />
<text  x="649.28" y="1775.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="1189" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.93" y="1199.5" ></text>
</g>
<g >
<title>freeze (4 samples, 0.13%; 0.00%)</title><rect x="1103.8" y="1525" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.83" y="1535.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (664 samples, 21.17%; -0.10%)</title><rect x="845.7" y="1717" width="249.9" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="848.71" y="1727.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (6 samples, 0.19%; 0.00%)</title><rect x="98.4" y="1413" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.42" y="1423.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1237" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="997" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1007.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1295.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.5" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.48" y="1471.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (20 samples, 0.64%; -0.22%)</title><rect x="504.0" y="1637" width="7.6" height="15.0" fill="rgb(146,146,255)" rx="2" ry="2" />
<text  x="507.05" y="1647.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; 0.00%)</title><rect x="55.9" y="709" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="719.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1471.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (7 samples, 0.22%; 0.00%)</title><rect x="21.7" y="293" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.66" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="114.2" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1487.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (2 samples, 0.06%; 0.00%)</title><rect x="108.2" y="1349" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.21" y="1359.5" ></text>
</g>
<g >
<title>cql3::statements::raw::cf_statement::cf_statement (1 samples, 0.03%; +0.03%)</title><rect x="76.2" y="453" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="79.22" y="463.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="1093" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="1103.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, auth::service::start (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="116.5" y="1381" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1391.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (152 samples, 4.85%; +0.19%)</title><rect x="762.6" y="1717" width="57.1" height="15.0" fill="rgb(255,155,155)" rx="2" ry="2" />
<text  x="765.55" y="1727.5" >cql3::..</text>
</g>
<g >
<title>operator new (15 samples, 0.48%; 0.00%)</title><rect x="966.1" y="1589" width="5.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="969.12" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="396.8" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="399.81" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.57%; +0.26%)</title><rect x="981.9" y="1541" width="6.8" height="15.0" fill="rgb(255,136,136)" rx="2" ry="2" />
<text  x="984.92" y="1551.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.03%; 0.00%)</title><rect x="187.6" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.60" y="1759.5" ></text>
</g>
<g >
<title>auth::resource::parent (2 samples, 0.06%; -0.03%)</title><rect x="790.0" y="1653" width="0.8" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="793.02" y="1663.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (2 samples, 0.06%; -0.03%)</title><rect x="633.5" y="1637" width="0.7" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="636.49" y="1647.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::batch_statement*, std::default_delete&lt;cql3::statements::raw::batch_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="78.9" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.86" y="479.5" ></text>
</g>
<g >
<title>seastar::io_queue::poll_io_queue (2 samples, 0.06%; +0.03%)</title><rect x="1147.5" y="1749" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1150.48" y="1759.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="42.0" y="149" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="44.98" y="159.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (1 samples, 0.03%; 0.00%)</title><rect x="130.8" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.78" y="1823.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; -0.03%)</title><rect x="803.2" y="1589" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="806.19" y="1599.5" ></text>
</g>
<g >
<title>reader_permit::signal (4 samples, 0.13%; +0.13%)</title><rect x="531.9" y="1637" width="1.5" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="534.89" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="64.6" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1311.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (1 samples, 0.03%; 0.00%)</title><rect x="85.3" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.26" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (5 samples, 0.16%; 0.00%)</title><rect x="136.1" y="1525" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; -0.03%)</title><rect x="1021.4" y="1557" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1024.43" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="114.2" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.10%; +0.06%)</title><rect x="650.8" y="1733" width="1.1" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="653.80" y="1743.5" ></text>
</g>
<g >
<title>free (8 samples, 0.26%; -0.13%)</title><rect x="432.9" y="1621" width="3.0" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="435.93" y="1631.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (6 samples, 0.19%; 0.00%)</title><rect x="674.9" y="1717" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="677.88" y="1727.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (2 samples, 0.06%; 0.00%)</title><rect x="22.8" y="245" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.79" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3 samples, 0.10%; 0.00%)</title><rect x="25.8" y="261" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="28.80" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::grant_role_statement, std::default_delete&lt;cql3::statements::grant_role_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="46.9" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.88" y="383.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="1157" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="1167.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::detach_service_level_statement, std::default_delete&lt;cql3::statements::detach_service_level_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="77.7" y="501" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="80.73" y="511.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.57%; 0.00%)</title><rect x="1103.5" y="1669" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.46" y="1679.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (13 samples, 0.41%; 0.00%)</title><rect x="16.8" y="293" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.77" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.43" y="1375.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="61.9" y="293" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="64.93" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="107.1" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.08" y="1423.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="141.3" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.32" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; -0.03%)</title><rect x="149.6" y="1381" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="152.60" y="1391.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="113.5" y="1445" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="116.48" y="1455.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (6 samples, 0.19%; 0.00%)</title><rect x="55.9" y="565" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="115.4" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.36" y="1503.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (4 samples, 0.13%; 0.00%)</title><rect x="94.3" y="1493" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.29" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; -0.03%)</title><rect x="806.2" y="1605" width="1.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="809.20" y="1615.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.03%; 0.00%)</title><rect x="190.6" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.61" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1493" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1503.5" >[unknown]</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (259 samples, 8.26%; 0.00%)</title><rect x="297.5" y="1637" width="97.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="300.47" y="1647.5" >partition_s..</text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.03%; 0.00%)</title><rect x="465.3" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="468.29" y="1647.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.03%; 0.00%)</title><rect x="435.9" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="438.94" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (32 samples, 1.02%; 0.00%)</title><rect x="68.3" y="693" width="12.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.32" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="98.8" y="1349" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="1359.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; +0.06%)</title><rect x="711.0" y="1749" width="1.1" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="714.00" y="1759.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1359.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="24.3" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.30" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="693.3" y="1749" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="696.32" y="1759.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="549" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="559.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 1.02%; 0.00%)</title><rect x="68.3" y="757" width="12.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.32" y="767.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (2 samples, 0.06%; 0.00%)</title><rect x="105.2" y="1429" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.20" y="1439.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (97 samples, 3.09%; 0.00%)</title><rect x="12.6" y="485" width="36.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.63" y="495.5" >cql..</text>
</g>
<g >
<title>query::consume_page&lt; (2 samples, 0.06%; +0.06%)</title><rect x="254.6" y="1717" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="257.58" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="44.6" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.62" y="319.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1343.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="302.4" y="1605" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="305.37" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; -0.10%)</title><rect x="624.1" y="1669" width="0.4" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="627.08" y="1679.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,645 samples, 84.34%; 0.00%)</title><rect x="154.5" y="1861" width="995.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.49" y="1871.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="663.6" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="666.59" y="1711.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="64.2" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.18" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="175.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_d36847801b836ea118d696d8a8ab9431a1179ab0] (1 samples, 0.03%; +0.03%)</title><rect x="13.8" y="341" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="16.76" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.06%)</title><rect x="1020.7" y="1541" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="1023.68" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="101.4" y="1349" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.43" y="1359.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.06%)</title><rect x="21.7" y="261" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="24.66" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.16%; 0.00%)</title><rect x="174.8" y="1733" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="177.81" y="1743.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%; +0.03%)</title><rect x="862.3" y="1669" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="865.26" y="1679.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (2 samples, 0.06%; -0.06%)</title><rect x="388.5" y="1589" width="0.8" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="391.53" y="1599.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1423.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (56 samples, 1.79%; +0.10%)</title><rect x="1151.6" y="1893" width="21.1" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1154.62" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="147.0" y="1269" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.96" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (4 samples, 0.13%; 0.00%)</title><rect x="146.6" y="1333" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.59" y="1343.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="67.2" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.19" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (3 samples, 0.10%; 0.00%)</title><rect x="663.2" y="1749" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="666.21" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.10%; 0.00%)</title><rect x="42.7" y="245" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.74" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="598.1" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="601.12" y="1647.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="93.5" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.53" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="150.4" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.35" y="1375.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (2 samples, 0.06%; 0.00%)</title><rect x="492.8" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="495.76" y="1663.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; +0.06%)</title><rect x="759.9" y="1717" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="762.92" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.03%; -0.10%)</title><rect x="608.3" y="1605" width="0.4" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="611.28" y="1615.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (343 samples, 10.94%; -0.32%)</title><rect x="272.6" y="1669" width="129.1" height="15.0" fill="rgb(118,118,255)" rx="2" ry="2" />
<text  x="275.64" y="1679.5" >merging_reader&lt;m..</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="115.4" y="1413" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="118.36" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1189" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1375.5" ></text>
</g>
<g >
<title>db::schema_tables::with_merge_lock (1 samples, 0.03%; 0.00%)</title><rect x="735.1" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="738.08" y="1727.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="149.6" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.60" y="1407.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="80.0" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.99" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.52" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::tuple (1 samples, 0.03%; 0.00%)</title><rect x="76.6" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.60" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="186.8" y="1733" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="189.85" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::detach_service_level_statement, std::default_delete&lt;cql3::statements::detach_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1141" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1151.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (2 samples, 0.06%; +0.03%)</title><rect x="663.2" y="1717" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="666.21" y="1727.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,645 samples, 84.34%; 0.00%)</title><rect x="154.5" y="1845" width="995.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.49" y="1855.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="24.3" y="181" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="27.30" y="191.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="136.8" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.80" y="1455.5" ></text>
</g>
<g >
<title>partition_entry::read (4 samples, 0.13%; -0.13%)</title><rect x="616.9" y="1653" width="1.5" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="619.93" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="47.3" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.25" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (1 samples, 0.03%; +0.03%)</title><rect x="669.2" y="1749" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="672.23" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::comparator_type (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1407.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (49 samples, 1.56%; -0.03%)</title><rect x="865.7" y="1621" width="18.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="868.65" y="1631.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (7 samples, 0.22%; 0.00%)</title><rect x="837.1" y="1637" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="840.05" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="143.2" y="1429" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="146.20" y="1439.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="147.0" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.96" y="1263.5" ></text>
</g>
<g >
<title>mutation::data::data (1 samples, 0.03%; +0.03%)</title><rect x="189.1" y="1685" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="192.11" y="1695.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="885" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="895.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; 0.00%)</title><rect x="80.4" y="805" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="815.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="37.8" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.84" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="617.7" y="1621" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="620.68" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="24.3" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.30" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.03%)</title><rect x="245.9" y="1669" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="248.92" y="1679.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1407.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.57%; 0.00%)</title><rect x="1103.5" y="1733" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.46" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.26%; -0.06%)</title><rect x="942.4" y="1605" width="3.0" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="945.41" y="1615.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="806.2" y="1621" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="809.20" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="66.4" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.44" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1653" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1663.5" >se..</text>
</g>
<g >
<title>cql3_parser::CqlParser::term (50 samples, 1.59%; 0.00%)</title><rect x="91.3" y="1541" width="18.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.28" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1637" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1647.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="709" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="719.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="96.2" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.17" y="1439.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="334.3" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="337.35" y="1567.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.03%)</title><rect x="835.5" y="1749" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="838.55" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="150.7" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.73" y="1439.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1631.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1359.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_d36847801b836ea118d696d8a8ab9431a1179ab0] (1 samples, 0.03%; +0.03%)</title><rect x="354.3" y="1525" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="357.29" y="1535.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1189" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1199.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (6 samples, 0.19%; -0.06%)</title><rect x="628.2" y="1637" width="2.3" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="631.22" y="1647.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="64.6" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.01" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (25 samples, 0.80%; 0.00%)</title><rect x="110.5" y="1589" width="9.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.47" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; -0.03%)</title><rect x="43.1" y="213" width="0.8" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="46.11" y="223.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (1 samples, 0.03%; 0.00%)</title><rect x="72.1" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.09" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; 0.00%)</title><rect x="39.0" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.97" y="351.5" ></text>
</g>
<g >
<title>dht::tri_compare (5 samples, 0.16%; +0.03%)</title><rect x="1059.4" y="1557" width="1.9" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1062.43" y="1567.5" ></text>
</g>
<g >
<title>distributed_loader::populate_column_family (1 samples, 0.03%; 0.00%)</title><rect x="710.2" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="713.25" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="661" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="671.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="1012.4" y="1493" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="1015.40" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (3 samples, 0.10%; 0.00%)</title><rect x="151.1" y="1461" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.10" y="1471.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.74" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; -0.03%)</title><rect x="137.9" y="1349" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="140.93" y="1359.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="834.4" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="837.42" y="1775.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%; 0.00%)</title><rect x="137.6" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.56" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="137.2" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.18" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="67.6" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.57" y="175.5" ></text>
</g>
<g >
<title>operator delete (102 samples, 3.25%; 0.00%)</title><rect x="10.8" y="661" width="38.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="671.5" >ope..</text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (10 samples, 0.32%; +0.19%)</title><rect x="1091.8" y="1669" width="3.8" height="15.0" fill="rgb(255,155,155)" rx="2" ry="2" />
<text  x="1094.79" y="1679.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::shared_ptr (1 samples, 0.03%; +0.03%)</title><rect x="50.3" y="389" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="53.26" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (2 samples, 0.06%; 0.00%)</title><rect x="55.9" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="101.4" y="1365" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.43" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="150.0" y="1397" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.97" y="1407.5" ></text>
</g>
<g >
<title>create_partitions (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="565" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="575.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.03%; 0.00%)</title><rect x="376.5" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="379.49" y="1583.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="150.4" y="1301" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="153.35" y="1311.5" ></text>
</g>
<g >
<title>auth::standard_role_manager::create_metadata_tables_if_missing (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1727.5" ></text>
</g>
<g >
<title>schema::column_at (6 samples, 0.19%; +0.06%)</title><rect x="509.3" y="1621" width="2.3" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="512.32" y="1631.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="110.8" y="1349" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="113.84" y="1359.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="107.5" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="837" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="847.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="59.3" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="37.8" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.84" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1279.5" ></text>
</g>
<g >
<title>operator delete (57 samples, 1.82%; 0.00%)</title><rect x="133.0" y="1813" width="21.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1823.5" >o..</text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="59.7" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.67" y="415.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (3 samples, 0.10%; -0.06%)</title><rect x="772.0" y="1653" width="1.1" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="774.96" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1237" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1247.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (2 samples, 0.06%; -0.03%)</title><rect x="1102.7" y="1653" width="0.8" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1105.70" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="115.7" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.73" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="885" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="895.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.03%; -0.03%)</title><rect x="1009.0" y="1477" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1012.01" y="1487.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (248 samples, 7.91%; -0.03%)</title><rect x="300.9" y="1621" width="93.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="303.86" y="1631.5" >partition_s..</text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="609.8" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="612.78" y="1615.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;utils::chunked_vector&lt;sstables::foreign_sstable_open_info, 131072ul&gt;, collect_all_shared_sstables (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="112.0" y="1205" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="114.97" y="1215.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="549" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (5 samples, 0.16%; +0.03%)</title><rect x="111.6" y="1557" width="1.9" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="114.59" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="110.5" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.47" y="1407.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="144.7" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.71" y="1375.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="453" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.93" y="1503.5" ></text>
</g>
<g >
<title>db::filter_for_query (7 samples, 0.22%; 0.00%)</title><rect x="1039.5" y="1605" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1042.49" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="52.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="367.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (8 samples, 0.26%; +0.13%)</title><rect x="588.3" y="1621" width="3.0" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="591.34" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="52.9" y="325" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="55.90" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.03%)</title><rect x="826.1" y="1717" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="829.14" y="1727.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1765" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1775.5" >st..</text>
</g>
<g >
<title>operator new (4 samples, 0.13%; +0.06%)</title><rect x="622.2" y="1669" width="1.5" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="625.20" y="1679.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (1 samples, 0.03%; 0.00%)</title><rect x="188.0" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.98" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (12 samples, 0.38%; 0.00%)</title><rect x="145.5" y="1461" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.46" y="1471.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (19 samples, 0.61%; -0.03%)</title><rect x="526.2" y="1653" width="7.2" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="529.25" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="42.0" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.98" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (3 samples, 0.10%; +0.03%)</title><rect x="104.1" y="1477" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="107.07" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (3 samples, 0.10%; +0.06%)</title><rect x="833.3" y="1765" width="1.1" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="836.29" y="1775.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="147.7" y="1301" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="150.72" y="1311.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="152.2" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.23" y="1455.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="192.1" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="195.12" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; +0.06%)</title><rect x="412.2" y="1669" width="2.3" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="415.24" y="1679.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="693" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="703.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="64.2" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.18" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.26%; -0.13%)</title><rect x="823.1" y="1701" width="3.0" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="826.13" y="1711.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (5 samples, 0.16%; -0.13%)</title><rect x="1141.5" y="1749" width="1.8" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="1144.46" y="1759.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (2 samples, 0.06%; +0.06%)</title><rect x="863.0" y="1669" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="866.02" y="1679.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="43.1" y="197" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.11" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; +0.03%)</title><rect x="51.0" y="197" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="54.01" y="207.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (6 samples, 0.19%; +0.03%)</title><rect x="142.1" y="1461" width="2.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="145.07" y="1471.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="107.1" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.08" y="1359.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="144.7" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.71" y="1343.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (3 samples, 0.10%; 0.00%)</title><rect x="107.8" y="1461" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.83" y="1471.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="59.3" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (195 samples, 6.22%; +0.03%)</title><rect x="950.7" y="1621" width="73.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="953.69" y="1631.5" >service:..</text>
</g>
<g >
<title>database::query (14 samples, 0.45%; +0.10%)</title><rect x="182.3" y="1765" width="5.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="185.33" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="501" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (7 samples, 0.22%; +0.19%)</title><rect x="684.3" y="1749" width="2.6" height="15.0" fill="rgb(255,155,155)" rx="2" ry="2" />
<text  x="687.29" y="1759.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (52 samples, 1.66%; +0.13%)</title><rect x="884.5" y="1669" width="19.5" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="887.46" y="1679.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_endpoint (1 samples, 0.03%; +0.03%)</title><rect x="191.0" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="193.99" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="142.8" y="1157" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="1167.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (12 samples, 0.38%; -0.03%)</title><rect x="68.7" y="565" width="4.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="71.70" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.03%; 0.00%)</title><rect x="106.0" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.95" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (382 samples, 12.18%; 0.00%)</title><rect x="10.8" y="1893" width="143.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1903.5" >[unknown]</text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; +0.03%)</title><rect x="127.0" y="1813" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="130.02" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="80.4" y="533" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="83.36" y="543.5" ></text>
</g>
<g >
<title>[unknown] (189 samples, 6.03%; 0.00%)</title><rect x="10.8" y="1253" width="71.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1263.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="528.5" y="1621" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="531.51" y="1631.5" ></text>
</g>
<g >
<title>main (2,645 samples, 84.34%; 0.00%)</title><rect x="154.5" y="1877" width="995.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.49" y="1887.5" >main</text>
</g>
<g >
<title>operator new (3 samples, 0.10%; 0.00%)</title><rect x="905.2" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="908.16" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="94.3" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.29" y="1423.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (6 samples, 0.19%; 0.00%)</title><rect x="1147.1" y="1781" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1150.10" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="106.0" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.95" y="1439.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1407.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="134.2" y="1509" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.17" y="1519.5" ></text>
</g>
<g >
<title>query_data_on_all_shards (1 samples, 0.03%; 0.00%)</title><rect x="932.6" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="935.63" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; 0.00%)</title><rect x="623.0" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="625.95" y="1663.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="96.2" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.17" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.43" y="1295.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Lexer (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.01" y="463.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.03%; +0.03%)</title><rect x="1103.5" y="1605" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1106.46" y="1615.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="17.5" y="197" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="20.53" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="135.3" y="1461" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="138.30" y="1471.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="66.4" y="309" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="69.44" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; +0.03%)</title><rect x="134.2" y="1429" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="137.17" y="1439.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (2 samples, 0.06%; +0.03%)</title><rect x="838.2" y="1573" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="841.18" y="1583.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.06%; +0.03%)</title><rect x="995.1" y="1525" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="998.09" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (2 samples, 0.06%; 0.00%)</title><rect x="13.8" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.76" y="367.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1557" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1567.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reserve_map_at_back (2 samples, 0.06%; 0.00%)</title><rect x="23.5" y="277" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.55" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; +0.03%)</title><rect x="706.9" y="1749" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="709.86" y="1759.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (26 samples, 0.83%; -0.06%)</title><rect x="287.3" y="1637" width="9.8" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="290.32" y="1647.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="611.7" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="614.66" y="1631.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1 samples, 0.03%; +0.03%)</title><rect x="571.0" y="1669" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="574.03" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="44.6" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.62" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="431.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="99.2" y="1301" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.18" y="1311.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="24.3" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.30" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (9 samples, 0.29%; -0.06%)</title><rect x="715.9" y="1749" width="3.4" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="718.89" y="1759.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (387 samples, 12.34%; 0.00%)</title><rect x="927.4" y="1653" width="145.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="930.36" y="1663.5" >service::storage_p..</text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (33 samples, 1.05%; 0.00%)</title><rect x="24.7" y="341" width="12.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.67" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.57%; 0.00%)</title><rect x="1103.5" y="1717" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.46" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1317" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1327.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (1 samples, 0.03%; +0.03%)</title><rect x="819.7" y="1717" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="822.74" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_view_statement, std::default_delete&lt;cql3::statements::drop_view_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::drop_view_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="46.5" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.50" y="415.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (6 samples, 0.19%; +0.10%)</title><rect x="493.5" y="1669" width="2.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="496.51" y="1679.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="545.8" y="1701" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="548.82" y="1711.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (1 samples, 0.03%; +0.03%)</title><rect x="908.9" y="1669" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="911.92" y="1679.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (20 samples, 0.64%; 0.00%)</title><rect x="1095.9" y="1685" width="7.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1098.93" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (17 samples, 0.54%; 0.00%)</title><rect x="836.3" y="1717" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.30" y="1727.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%; +0.03%)</title><rect x="709.1" y="1749" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="712.12" y="1759.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="144.0" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.95" y="1423.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.93" y="1423.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (24 samples, 0.77%; 0.00%)</title><rect x="429.2" y="1669" width="9.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="432.17" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="394.6" y="1621" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="397.55" y="1631.5" ></text>
</g>
<g >
<title>scanning_reader::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; 0.00%)</title><rect x="25.8" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="28.80" y="223.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="1125" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1135.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_initialize_map (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.52" y="319.5" ></text>
</g>
<g >
<title>auth::get_permissions (42 samples, 1.34%; -0.10%)</title><rect x="791.9" y="1637" width="15.8" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="794.90" y="1647.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="54.0" y="133" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="57.02" y="143.5" ></text>
</g>
<g >
<title>operator delete (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1861" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1871.5" >op..</text>
</g>
<g >
<title>db::schema_tables::merge_schema (1 samples, 0.03%; 0.00%)</title><rect x="735.1" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="738.08" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1605" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1615.5" >cq..</text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (3 samples, 0.10%; 0.00%)</title><rect x="13.8" y="389" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.76" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="42.0" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.98" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1327.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (3 samples, 0.10%; 0.00%)</title><rect x="772.0" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="774.96" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="137.2" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.18" y="1407.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.03%; 0.00%)</title><rect x="128.2" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.15" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.06%; -0.06%)</title><rect x="35.2" y="261" width="0.8" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="38.21" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="319.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1391.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (18 samples, 0.57%; -0.16%)</title><rect x="317.0" y="1573" width="6.8" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="320.04" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; 0.00%)</title><rect x="1082.4" y="1637" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1085.39" y="1647.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::raw::delete_statement*, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="47.3" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.25" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="150.7" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.73" y="1423.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1727.5" ></text>
</g>
<g >
<title>db::system_keyspace::set_local_host_id (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1759.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.03%; +0.03%)</title><rect x="187.6" y="1717" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="190.60" y="1727.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="672.2" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="675.24" y="1743.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1 samples, 0.03%; 0.00%)</title><rect x="807.7" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="810.70" y="1647.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; +0.03%)</title><rect x="628.6" y="1621" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="631.60" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (3 samples, 0.10%; 0.00%)</title><rect x="112.0" y="1477" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1509" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1519.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%; 0.00%)</title><rect x="49.9" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.89" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1461" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1471.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="52.5" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.52" y="287.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_following (1 samples, 0.03%; +0.03%)</title><rect x="66.1" y="437" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="69.07" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1503.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.03%; -0.03%)</title><rect x="896.5" y="1637" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="899.51" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="96.2" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.17" y="1471.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="102.9" y="1237" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="105.94" y="1247.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (7 samples, 0.22%; +0.16%)</title><rect x="681.7" y="1749" width="2.6" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="684.65" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="43.9" y="341" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; -0.03%)</title><rect x="239.9" y="1717" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="242.90" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.10%)</title><rect x="442.3" y="1653" width="2.7" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="445.34" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="133.0" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1535.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="42.0" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.98" y="207.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.03%)</title><rect x="71.3" y="501" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="74.33" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="143.6" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.58" y="1439.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="80.0" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.99" y="511.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.03%; +0.03%)</title><rect x="56.3" y="325" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="59.28" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::raw::cf_statement::keyspace (1 samples, 0.03%; +0.03%)</title><rect x="68.3" y="565" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="71.32" y="575.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.03%; 0.00%)</title><rect x="634.2" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="637.24" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (52 samples, 1.66%; +0.03%)</title><rect x="134.9" y="1541" width="19.6" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="137.92" y="1551.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="312.5" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="315.53" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="90.5" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.52" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.10%; 0.00%)</title><rect x="42.7" y="261" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.74" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="645" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="655.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="837.8" y="1573" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="840.81" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (9 samples, 0.29%; 0.00%)</title><rect x="75.8" y="517" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.85" y="527.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (1 samples, 0.03%; +0.03%)</title><rect x="842.3" y="1701" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="845.32" y="1711.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="128.5" y="1829" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.53" y="1839.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (6 samples, 0.19%; 0.00%)</title><rect x="116.5" y="1541" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.49" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="692.9" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="695.94" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="63.4" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.43" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::maybe_advance_to (1 samples, 0.03%; +0.03%)</title><rect x="131.5" y="1813" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="134.54" y="1823.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="115.4" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.36" y="1551.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="59.3" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.29" y="287.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="147.3" y="1269" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="150.34" y="1279.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (2 samples, 0.06%; 0.00%)</title><rect x="1148.6" y="1765" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1151.61" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (3 samples, 0.10%; 0.00%)</title><rect x="61.5" y="389" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.55" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1487.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1567.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.39" y="367.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (21 samples, 0.67%; +0.13%)</title><rect x="583.4" y="1653" width="7.9" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="586.44" y="1663.5" ></text>
</g>
<g >
<title>row::~row (22 samples, 0.70%; +0.10%)</title><rect x="429.9" y="1653" width="8.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="432.92" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1375.5" ></text>
</g>
<g >
<title>auth::get_permissions (2 samples, 0.06%; 0.00%)</title><rect x="87.1" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.14" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (9 samples, 0.29%; 0.00%)</title><rect x="115.4" y="1557" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.36" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1525" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1535.5" >[unknown]</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (3 samples, 0.10%; -0.03%)</title><rect x="151.1" y="1429" width="1.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="154.10" y="1439.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (33 samples, 1.05%; -0.03%)</title><rect x="791.9" y="1621" width="12.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="794.90" y="1631.5" ></text>
</g>
<g >
<title>distributed_loader::populate_column_family (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="1791.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (14 samples, 0.45%; -0.10%)</title><rect x="431.1" y="1637" width="5.2" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="434.05" y="1647.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="328.7" y="1557" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="331.71" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="107.1" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.08" y="1343.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::attributes::raw&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="76.6" y="389" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="79.60" y="399.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="115.0" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.98" y="1551.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.9" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.94" y="1295.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (2 samples, 0.06%; 0.00%)</title><rect x="695.6" y="1749" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="698.57" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="67.2" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.19" y="351.5" ></text>
</g>
<g >
<title>scanning_reader::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="188.7" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.73" y="1471.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (1 samples, 0.03%; +0.03%)</title><rect x="1042.1" y="1605" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1045.12" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="144.0" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.95" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="735.1" y="1637" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="738.08" y="1647.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (1 samples, 0.03%; 0.00%)</title><rect x="188.4" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.35" y="1775.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.03%; 0.00%)</title><rect x="840.8" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="843.82" y="1615.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="113.9" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.85" y="1487.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (2 samples, 0.06%; +0.03%)</title><rect x="911.9" y="1653" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="914.93" y="1663.5" ></text>
</g>
<g >
<title>schema::column_at (7 samples, 0.22%; +0.10%)</title><rect x="465.7" y="1637" width="2.6" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="468.67" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.43" y="1327.5" ></text>
</g>
<g >
<title>secondary_index::secondary_index_manager::list_indexes (1 samples, 0.03%; +0.03%)</title><rect x="84.9" y="1541" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="87.88" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.03%; +0.03%)</title><rect x="109.3" y="1477" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="112.34" y="1487.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (2 samples, 0.06%; 0.00%)</title><rect x="105.2" y="1477" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.20" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.8" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.81" y="175.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.10%; 0.00%)</title><rect x="144.3" y="1429" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.33" y="1439.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; +0.03%)</title><rect x="65.7" y="453" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="68.69" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (4 samples, 0.13%; +0.03%)</title><rect x="1136.2" y="1749" width="1.5" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1139.19" y="1759.5" ></text>
</g>
<g >
<title>make_combined_reader (38 samples, 1.21%; -0.03%)</title><rect x="556.7" y="1669" width="14.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="559.73" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="98.8" y="1285" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="101.80" y="1295.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1279.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="114.2" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1503.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::drop_table_statement*, std::default_delete&lt;cql3::statements::drop_table_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="78.5" y="485" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="81.48" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (2 samples, 0.06%; +0.03%)</title><rect x="731.3" y="1733" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="734.32" y="1743.5" ></text>
</g>
<g >
<title>db::schema_tables::make_table_mutations (1 samples, 0.03%; 0.00%)</title><rect x="189.9" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.86" y="1695.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (11 samples, 0.35%; 0.00%)</title><rect x="673.4" y="1733" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="676.37" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.06%; 0.00%)</title><rect x="66.4" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.44" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (1 samples, 0.03%; 0.00%)</title><rect x="932.6" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="935.63" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (102 samples, 3.25%; 0.00%)</title><rect x="10.8" y="629" width="38.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="639.5" >[un..</text>
</g>
<g >
<title>seastar::reactor::lowres_timer_pollfn::poll (1 samples, 0.03%; +0.03%)</title><rect x="158.6" y="1781" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="161.63" y="1791.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (3 samples, 0.10%; 0.00%)</title><rect x="25.8" y="293" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="28.80" y="303.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (2 samples, 0.06%; 0.00%)</title><rect x="1106.8" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1109.84" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; -0.06%)</title><rect x="754.3" y="1701" width="0.3" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="757.27" y="1711.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (87 samples, 2.77%; +0.10%)</title><rect x="988.7" y="1557" width="32.7" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="991.69" y="1567.5" >se..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="93.9" y="1429" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="96.91" y="1439.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="1237" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="1247.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (10 samples, 0.32%; +0.06%)</title><rect x="369.3" y="1477" width="3.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="372.34" y="1487.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.43" y="1295.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (17 samples, 0.54%; 0.00%)</title><rect x="83.0" y="1749" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1759.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="101.8" y="1317" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="104.81" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 0.57%; 0.00%)</title><rect x="49.1" y="677" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="687.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="133.0" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1423.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="49.1" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="52.13" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.43" y="1391.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_role_statement, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_role_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="48.0" y="421" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="51.00" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.06%; +0.03%)</title><rect x="26.2" y="213" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="29.18" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="141.3" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.32" y="1455.5" ></text>
</g>
<g >
<title>std::move&lt;cql3::expr::untyped_constant&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="153.4" y="1477" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="156.36" y="1487.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="1077" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="1087.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1029" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.03%; +0.03%)</title><rect x="26.6" y="197" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="29.56" y="207.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="1108.7" y="1541" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1111.72" y="1551.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="205.7" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="208.66" y="1743.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="1104.6" y="1493" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1107.59" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.03%)</title><rect x="631.6" y="1605" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="634.61" y="1615.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="101.1" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.06" y="1455.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="150.0" y="1413" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.97" y="1423.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1567.5" ></text>
</g>
<g >
<title>auth::operator== (2 samples, 0.06%; +0.03%)</title><rect x="803.6" y="1589" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="806.57" y="1599.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (3 samples, 0.10%; 0.00%)</title><rect x="80.4" y="645" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="655.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (34 samples, 1.08%; +0.22%)</title><rect x="1073.4" y="1685" width="12.7" height="15.0" fill="rgb(255,146,146)" rx="2" ry="2" />
<text  x="1076.35" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3 samples, 0.10%; 0.00%)</title><rect x="80.4" y="709" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="719.5" ></text>
</g>
<g >
<title>__start_context (6 samples, 0.19%; 0.00%)</title><rect x="55.9" y="661" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="671.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.93" y="1391.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (22 samples, 0.70%; 0.00%)</title><rect x="37.8" y="405" width="8.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.84" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="86.8" y="1637" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="89.76" y="1647.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.13%; -0.10%)</title><rect x="644.0" y="1749" width="1.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="647.02" y="1759.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (1 samples, 0.03%; +0.03%)</title><rect x="668.9" y="1749" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="671.86" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (1 samples, 0.03%; +0.03%)</title><rect x="15.6" y="357" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="18.64" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="249.7" y="1701" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="252.69" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (189 samples, 6.03%; 0.00%)</title><rect x="10.8" y="1333" width="71.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1343.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="174.1" y="1717" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="177.06" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="39.0" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.97" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="840.8" y="1541" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="843.82" y="1551.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.03%; +0.03%)</title><rect x="130.8" y="1749" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="133.78" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.9" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.94" y="1311.5" ></text>
</g>
<g >
<title>sstring_hash::operator (3 samples, 0.10%; +0.10%)</title><rect x="1036.1" y="1589" width="1.1" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1039.10" y="1599.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_d36847801b836ea118d696d8a8ab9431a1179ab0] (1 samples, 0.03%; +0.03%)</title><rect x="759.5" y="1717" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="762.54" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.03%; +0.03%)</title><rect x="86.0" y="1557" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="89.01" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (6 samples, 0.19%; 0.00%)</title><rect x="69.1" y="501" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.08" y="511.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::data_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="932.6" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="935.63" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="42.7" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.74" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="835.5" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="838.55" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="93.5" y="1477" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="96.53" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="312.5" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="315.53" y="1583.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%; +0.03%)</title><rect x="1149.7" y="1829" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1152.74" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="98.4" y="1381" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="101.42" y="1391.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="101.4" y="1461" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.43" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="54.0" y="245" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="255.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1829" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1839.5" >[unknown]</text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (25 samples, 0.80%; +0.06%)</title><rect x="768.9" y="1685" width="9.5" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="771.95" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="75.5" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.47" y="431.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="23.5" y="197" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="26.55" y="207.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="137.6" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.56" y="1487.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="60.0" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.04" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt; &gt;::deallocate (1 samples, 0.03%; 0.00%)</title><rect x="23.5" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.55" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.16%; +0.10%)</title><rect x="869.8" y="1557" width="1.9" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="872.79" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="71.0" y="485" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="73.96" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (4 samples, 0.13%; +0.03%)</title><rect x="1144.5" y="1765" width="1.5" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1147.47" y="1775.5" ></text>
</g>
<g >
<title>db::system_keyspace::make (1 samples, 0.03%; 0.00%)</title><rect x="120.2" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.25" y="1583.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="137.2" y="1365" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="140.18" y="1375.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.87" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="113.9" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.85" y="1455.5" ></text>
</g>
<g >
<title>std::operator- (2 samples, 0.06%; +0.03%)</title><rect x="108.2" y="1333" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="111.21" y="1343.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (399 samples, 12.72%; +0.10%)</title><rect x="923.2" y="1669" width="150.2" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="926.22" y="1679.5" >service::storage_pr..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="143.6" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.58" y="1423.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1487.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (3 samples, 0.10%; 0.00%)</title><rect x="189.9" y="1765" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.86" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (5 samples, 0.16%; 0.00%)</title><rect x="146.6" y="1381" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.59" y="1391.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="207.2" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="210.17" y="1743.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (663 samples, 21.14%; +0.10%)</title><rect x="846.1" y="1701" width="249.5" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="849.08" y="1711.5" >cql3::statements::select_statemen..</text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (1 samples, 0.03%; +0.03%)</title><rect x="191.4" y="1765" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="194.36" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (6 samples, 0.19%; +0.10%)</title><rect x="92.0" y="1525" width="2.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="95.03" y="1535.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="981" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="991.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.10%; 0.00%)</title><rect x="80.4" y="789" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.36" y="799.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="110.5" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.47" y="1487.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="107.1" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.08" y="1327.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (20 samples, 0.64%; 0.00%)</title><rect x="1095.9" y="1717" width="7.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1098.93" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; -0.03%)</title><rect x="144.0" y="1317" width="0.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="146.95" y="1327.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.03%; 0.00%)</title><rect x="323.1" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="326.06" y="1567.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; -0.16%)</title><rect x="705.4" y="1749" width="1.5" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="708.36" y="1759.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.03%; -0.06%)</title><rect x="521.0" y="1669" width="0.4" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="523.98" y="1679.5" ></text>
</g>
<g >
<title>do_cql_test (32 samples, 1.02%; 0.00%)</title><rect x="68.3" y="645" width="12.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.32" y="655.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%; -0.06%)</title><rect x="445.0" y="1669" width="0.4" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="447.97" y="1679.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1717" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1727.5" >si..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="55.9" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="447.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.03%; +0.03%)</title><rect x="414.5" y="1685" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="417.50" y="1695.5" ></text>
</g>
<g >
<title>auth::create_metadata_table_if_missing (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="136.1" y="1349" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="139.05" y="1359.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="177.1" y="1717" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="180.07" y="1727.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.82" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.13%; -0.03%)</title><rect x="1133.9" y="1749" width="1.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1136.93" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="37.8" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.84" y="287.5" ></text>
</g>
<g >
<title>bound_view::tri_compare::operator (1 samples, 0.03%; 0.00%)</title><rect x="709.9" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.87" y="1503.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="61.2" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.17" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="107.5" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1391.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="115.0" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.98" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%; 0.00%)</title><rect x="82.6" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.62" y="1743.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.43" y="1487.5" ></text>
</g>
<g >
<title>mutation::data::data (1 samples, 0.03%; 0.00%)</title><rect x="839.7" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="842.69" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="178.2" y="1685" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="181.20" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1221" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1231.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.03%; 0.00%)</title><rect x="709.5" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.50" y="1759.5" ></text>
</g>
<g >
<title>schema_registry::get (13 samples, 0.41%; +0.19%)</title><rect x="945.4" y="1621" width="4.9" height="15.0" fill="rgb(255,155,155)" rx="2" ry="2" />
<text  x="948.42" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.03%; +0.03%)</title><rect x="189.9" y="1637" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="192.86" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.03%)</title><rect x="308.8" y="1557" width="2.6" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="311.76" y="1567.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.03%)</title><rect x="677.9" y="1733" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="680.89" y="1743.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="38.6" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.60" y="383.5" ></text>
</g>
<g >
<title>create_partitions (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="613" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; +0.03%)</title><rect x="106.3" y="1381" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="109.33" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.10%; -0.03%)</title><rect x="102.6" y="1397" width="1.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="105.56" y="1407.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; +0.03%)</title><rect x="219.2" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="222.21" y="1743.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (7 samples, 0.22%; +0.13%)</title><rect x="384.8" y="1589" width="2.6" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="387.77" y="1599.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (57 samples, 1.82%; 0.00%)</title><rect x="133.0" y="1669" width="21.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1679.5" >s..</text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="565.8" y="1637" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="568.76" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (2 samples, 0.06%; +0.06%)</title><rect x="213.2" y="1701" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="216.19" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="18.3" y="197" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="21.28" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="80.0" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.99" y="495.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="36.3" y="277" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="39.34" y="287.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1 samples, 0.03%; +0.03%)</title><rect x="49.9" y="373" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="52.89" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="54.0" y="293" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%; +0.03%)</title><rect x="29.2" y="213" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="32.19" y="223.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (1 samples, 0.03%; 0.00%)</title><rect x="333.2" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="336.22" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1263.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="42.0" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.98" y="271.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="117" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="127.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="64.6" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="80.7" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.74" y="543.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="75.5" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.47" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.10%; +0.06%)</title><rect x="708.0" y="1749" width="1.1" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="710.99" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; 0.00%)</title><rect x="135.3" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.30" y="1503.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="135.3" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.30" y="1487.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_deallocate_map (1 samples, 0.03%; 0.00%)</title><rect x="23.5" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.55" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="107.5" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1407.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="44.2" y="197" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="47.24" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1391.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (4 samples, 0.13%; 0.00%)</title><rect x="13.4" y="405" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.39" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1285" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.86" y="1295.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.64%; -0.03%)</title><rect x="953.7" y="1605" width="7.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="956.70" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1109" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="144.0" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.95" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="1061" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1071.5" >[unknown]</text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="1082.4" y="1653" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1085.39" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="113.9" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.85" y="1503.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (2 samples, 0.06%; +0.06%)</title><rect x="194.8" y="1749" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="197.75" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (12 samples, 0.38%; 0.00%)</title><rect x="127.8" y="1861" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.77" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="469" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="43.9" y="101" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="111.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (21 samples, 0.67%; -0.13%)</title><rect x="626.3" y="1653" width="7.9" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="629.34" y="1663.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; -0.19%)</title><rect x="678.3" y="1749" width="1.8" height="15.0" fill="rgb(155,155,255)" rx="2" ry="2" />
<text  x="681.27" y="1759.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (2 samples, 0.06%; -0.03%)</title><rect x="86.4" y="1653" width="0.7" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="89.38" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="113.1" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.10" y="1439.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::drop_view_statement, std::default_delete&lt;cql3::statements::drop_view_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="46.5" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.50" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="101.4" y="1397" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.43" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="518.0" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="520.97" y="1711.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.2" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.15" y="367.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (6 samples, 0.19%; +0.13%)</title><rect x="257.6" y="1701" width="2.2" height="15.0" fill="rgb(255,173,173)" rx="2" ry="2" />
<text  x="260.59" y="1711.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="110.5" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.47" y="1423.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (1 samples, 0.03%; +0.03%)</title><rect x="156.0" y="1781" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="158.99" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (2 samples, 0.06%; 0.00%)</title><rect x="80.7" y="581" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.74" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.03%)</title><rect x="1008.3" y="1477" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1011.26" y="1487.5" ></text>
</g>
<g >
<title>table::query (1,126 samples, 35.91%; -0.13%)</title><rect x="220.3" y="1733" width="423.7" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="223.34" y="1743.5" >table::query</text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="1018.8" y="1541" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1021.79" y="1551.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.10%; 0.00%)</title><rect x="43.9" y="325" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="335.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; -0.03%)</title><rect x="140.6" y="1461" width="0.7" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="143.57" y="1471.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; 0.00%)</title><rect x="91.7" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.65" y="1519.5" ></text>
</g>
<g >
<title>auth::resource::resource (4 samples, 0.13%; -0.06%)</title><rect x="783.2" y="1669" width="1.6" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="786.25" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (1 samples, 0.03%; +0.03%)</title><rect x="871.7" y="1605" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="874.67" y="1615.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="256.8" y="1701" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="259.84" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="24.3" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.30" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1,189 samples, 37.91%; -0.06%)</title><rect x="196.6" y="1749" width="447.4" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="199.63" y="1759.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; -0.06%)</title><rect x="737.3" y="1765" width="0.8" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="740.34" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (24 samples, 0.77%; -0.03%)</title><rect x="110.5" y="1573" width="9.0" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="113.47" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1781" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1791.5" >[unknown]</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.13%; 0.00%)</title><rect x="133.4" y="1525" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.42" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="220.0" y="1733" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="222.96" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.03%; -0.06%)</title><rect x="592.5" y="1637" width="0.4" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="595.47" y="1647.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.10%)</title><rect x="1086.1" y="1685" width="0.8" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="1089.15" y="1695.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="773" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.49" y="783.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (1 samples, 0.03%; 0.00%)</title><rect x="157.9" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.88" y="1791.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (1 samples, 0.03%; 0.00%)</title><rect x="1149.0" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1151.99" y="1711.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%; 0.00%)</title><rect x="191.0" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.99" y="1775.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="101.1" y="1397" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="104.06" y="1407.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="677" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="687.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="119.9" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.87" y="1839.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="1086.9" y="1685" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1089.90" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.13%; -0.03%)</title><rect x="98.8" y="1365" width="1.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="101.80" y="1375.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::batch_statement, std::default_delete&lt;cql3::statements::raw::batch_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="78.9" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.86" y="511.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::alloc (1 samples, 0.03%; 0.00%)</title><rect x="13.4" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.39" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.16%; 0.00%)</title><rect x="42.0" y="357" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.98" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::native_or_internal_type (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1551.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="107.5" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.46" y="1455.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (2 samples, 0.06%; 0.00%)</title><rect x="190.2" y="1717" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="39.0" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.97" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="38.2" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.22" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="141.3" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.32" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; 0.00%)</title><rect x="1000.7" y="1493" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1003.73" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="24.3" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.30" y="351.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="43.5" y="149" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="46.49" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="91.7" y="1477" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="94.65" y="1487.5" ></text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.03%; 0.00%)</title><rect x="1149.4" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.36" y="1823.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.06%; +0.03%)</title><rect x="815.2" y="1685" width="0.8" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="818.23" y="1695.5" ></text>
</g>
<g >
<title>partition_entry::~partition_entry (1 samples, 0.03%; +0.03%)</title><rect x="90.5" y="1797" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="93.52" y="1807.5" ></text>
</g>
<g >
<title>seastar::jmp_buf_link::switch_out (1 samples, 0.03%; +0.03%)</title><rect x="83.0" y="1701" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="86.00" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="108.2" y="1429" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.21" y="1439.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="41.6" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.61" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::deque (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.52" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (1 samples, 0.03%; 0.00%)</title><rect x="709.5" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.50" y="1775.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="190.2" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="193.24" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="43.9" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="287.5" ></text>
</g>
<g >
<title>__start_context (17 samples, 0.54%; 0.00%)</title><rect x="83.0" y="1797" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="710.2" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="713.25" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="112.0" y="1285" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1295.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%; +0.03%)</title><rect x="941.3" y="1621" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="944.28" y="1631.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (249 samples, 7.94%; +0.19%)</title><rect x="543.2" y="1717" width="93.7" height="15.0" fill="rgb(255,155,155)" rx="2" ry="2" />
<text  x="546.18" y="1727.5" >query::quer..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="96.2" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.17" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="102.9" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.94" y="1279.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="189.5" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.48" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (57 samples, 1.82%; 0.00%)</title><rect x="133.0" y="1717" width="21.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1727.5" >s..</text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; -0.03%)</title><rect x="1023.7" y="1557" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1026.69" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="114.2" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.23" y="1471.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="67.9" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.95" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (1 samples, 0.03%; 0.00%)</title><rect x="115.0" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.98" y="1567.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (15 samples, 0.48%; 0.00%)</title><rect x="83.4" y="1701" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.37" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (57 samples, 1.82%; 0.00%)</title><rect x="133.0" y="1797" width="21.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.04" y="1807.5" >[..</text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (3 samples, 0.10%; -0.03%)</title><rect x="872.0" y="1605" width="1.2" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="875.05" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="67.6" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.57" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="1221" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.93" y="1231.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1 samples, 0.03%; 0.00%)</title><rect x="932.6" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="935.63" y="1567.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.03%; 0.00%)</title><rect x="974.8" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="977.77" y="1583.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (1 samples, 0.03%; 0.00%)</title><rect x="72.1" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.09" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="75.5" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.47" y="527.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; -0.06%)</title><rect x="904.0" y="1669" width="1.2" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="907.03" y="1679.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="133.0" y="1365" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="136.04" y="1375.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="76.6" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.60" y="463.5" ></text>
</g>
<g >
<title>schema_registry::get (1 samples, 0.03%; +0.03%)</title><rect x="931.5" y="1637" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="934.50" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.10%; 0.00%)</title><rect x="112.0" y="1429" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1439.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (8 samples, 0.26%; +0.03%)</title><rect x="1122.3" y="1749" width="3.0" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1125.27" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="24.3" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.30" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="696.3" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="699.33" y="1743.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.10%; 0.00%)</title><rect x="136.4" y="1493" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.43" y="1503.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.06%; +0.06%)</title><rect x="511.6" y="1637" width="0.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="514.58" y="1647.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (2 samples, 0.06%; 0.00%)</title><rect x="73.6" y="533" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.59" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="140.6" y="1429" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="143.57" y="1439.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="42.0" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.98" y="175.5" ></text>
</g>
<g >
<title>query::result_view::consume&lt;cql3::result_generator::query_result_visitor&lt;cql3::untyped_result_set::visitor&gt;&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="659.1" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="662.08" y="1743.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%; +0.03%)</title><rect x="876.2" y="1589" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="879.19" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.57%; 0.00%)</title><rect x="1103.5" y="1701" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.46" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="37.8" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.84" y="239.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (40 samples, 1.28%; +0.03%)</title><rect x="720.0" y="1765" width="15.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="723.03" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (38 samples, 1.21%; +0.03%)</title><rect x="95.8" y="1525" width="14.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="98.79" y="1535.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (11 samples, 0.35%; 0.00%)</title><rect x="106.0" y="1509" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.95" y="1519.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="44.6" y="277" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="47.62" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.37" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (7 samples, 0.22%; -0.03%)</title><rect x="1105.7" y="1525" width="2.6" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1108.71" y="1535.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (13 samples, 0.41%; -0.10%)</title><rect x="747.9" y="1733" width="4.9" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="750.88" y="1743.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (102 samples, 3.25%; 0.00%)</title><rect x="10.8" y="565" width="38.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="575.5" >std..</text>
</g>
<g >
<title>utils::array_search_gt_impl (8 samples, 0.26%; -0.26%)</title><rect x="619.2" y="1653" width="3.0" height="15.0" fill="rgb(136,136,255)" rx="2" ry="2" />
<text  x="622.19" y="1663.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="72.5" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.46" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="706.1" y="1733" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="709.11" y="1743.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (6 samples, 0.19%; 0.00%)</title><rect x="55.9" y="549" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.91" y="559.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (1 samples, 0.03%; +0.03%)</title><rect x="953.3" y="1605" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="956.32" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="118.0" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.99" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="926.6" y="1653" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="929.61" y="1663.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="115.7" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.73" y="1439.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (3 samples, 0.10%; +0.03%)</title><rect x="729.8" y="1733" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="732.82" y="1743.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.03%; +0.03%)</title><rect x="909.7" y="1669" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="912.67" y="1679.5" ></text>
</g>
<g >
<title>__libc_siglongjmp (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.02" y="1887.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.10%; +0.03%)</title><rect x="186.1" y="1749" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="189.10" y="1759.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (18 samples, 0.57%; -0.03%)</title><rect x="1103.5" y="1749" width="6.7" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1106.46" y="1759.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::data_query_result_builder&gt; (1 samples, 0.03%; +0.03%)</title><rect x="932.6" y="1477" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="935.63" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="112.0" y="1381" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.97" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (3 samples, 0.10%; 0.00%)</title><rect x="102.6" y="1445" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.56" y="1455.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (2 samples, 0.06%; 0.00%)</title><rect x="73.6" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.59" y="511.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; -0.22%)</title><rect x="527.0" y="1637" width="1.9" height="15.0" fill="rgb(146,146,255)" rx="2" ry="2" />
<text  x="530.00" y="1647.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (8 samples, 0.26%; 0.00%)</title><rect x="687.7" y="1749" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="690.67" y="1759.5" ></text>
</g>
<g >
<title>create_partitions (16 samples, 0.51%; 0.00%)</title><rect x="83.0" y="1717" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.00" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="43.9" y="213" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.86" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::has_supporting_index (1 samples, 0.03%; 0.00%)</title><rect x="84.9" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.88" y="1567.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (10 samples, 0.32%; 0.00%)</title><rect x="146.2" y="1429" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.21" y="1439.5" ></text>
</g>
<g >
<title>database::create_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="188.4" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.35" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.99%; 0.00%)</title><rect x="10.8" y="933" width="70.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="943.5" >[unknown]</text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.03%; -0.03%)</title><rect x="329.1" y="1557" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="332.08" y="1567.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="64.6" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="114.6" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.60" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.03%; +0.03%)</title><rect x="662.1" y="1733" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="665.09" y="1743.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.54%; 0.00%)</title><rect x="58.2" y="725" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.16" y="735.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; -0.03%)</title><rect x="115.0" y="1525" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="117.98" y="1535.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="54.0" y="197" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.02" y="207.5" ></text>
</g>
<g >
<title>intel_check_word.constprop.0 (1 samples, 0.03%; 0.00%)</title><rect x="132.7" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.67" y="1887.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.55" y="1407.5" ></text>
</g>
<g >
<title>std::filesystem::__cxx11::path::_M_split_cmpts (1 samples, 0.03%; +0.03%)</title><rect x="1189.6" y="1893" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1192.62" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="188.4" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.35" y="1711.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="107.1" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.08" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (3 samples, 0.10%; 0.00%)</title><rect x="1143.3" y="1765" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1146.34" y="1775.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (2 samples, 0.06%; +0.06%)</title><rect x="27.3" y="293" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="30.31" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (1 samples, 0.03%; 0.00%)</title><rect x="1149.0" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1151.99" y="1727.5" ></text>
</g>
<g >
<title>__start_context (10 samples, 0.32%; 0.00%)</title><rect x="64.6" y="693" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.56" y="703.5" ></text>
</g>
<g >
<title>read_page&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="188.0" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.98" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; +0.03%)</title><rect x="90.9" y="1541" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="93.90" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="101.4" y="1429" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.43" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (14 samples, 0.45%; -0.10%)</title><rect x="908.5" y="1685" width="5.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="911.55" y="1695.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (77 samples, 2.46%; 0.00%)</title><rect x="90.9" y="1701" width="29.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.90" y="1711.5" >cq..</text>
</g>
<g >
<title>operator new (8 samples, 0.26%; 0.00%)</title><rect x="1042.5" y="1605" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1045.50" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="59.7" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.67" y="431.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.03%; +0.03%)</title><rect x="1172.7" y="1893" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1175.69" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (189 samples, 6.03%; 0.00%)</title><rect x="10.8" y="1301" width="71.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1311.5" >[unknown]</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.03%; 0.00%)</title><rect x="113.5" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.48" y="1503.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (1 samples, 0.03%; +0.03%)</title><rect x="1109.9" y="1541" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1112.85" y="1551.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (1 samples, 0.03%; +0.03%)</title><rect x="1110.6" y="1765" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1113.61" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (191 samples, 6.09%; 0.00%)</title><rect x="10.8" y="1733" width="71.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.75" y="1743.5" >[unknown]</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="1141" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.87" y="1151.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.03%)</title><rect x="609.8" y="1589" width="0.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="612.78" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; +0.03%)</title><rect x="875.8" y="1605" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="878.81" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="137.2" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.18" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1 samples, 0.03%; 0.00%)</title><rect x="17.5" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.53" y="223.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (7 samples, 0.22%; 0.00%)</title><rect x="837.1" y="1605" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="840.05" y="1615.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="53.3" y="293" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="56.27" y="303.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.38%; +0.03%)</title><rect x="250.1" y="1717" width="4.5" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="253.06" y="1727.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="188.0" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.98" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; -0.03%)</title><rect x="681.3" y="1749" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="684.28" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="110.5" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.47" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="51.8" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.77" y="207.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (4 samples, 0.13%; -0.03%)</title><rect x="1108.7" y="1557" width="1.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1111.72" y="1567.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (3 samples, 0.10%; +0.03%)</title><rect x="855.5" y="1685" width="1.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="858.49" y="1695.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (3 samples, 0.10%; -0.16%)</title><rect x="816.4" y="1685" width="1.1" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="819.36" y="1695.5" ></text>
</g>
</g>
</svg>
