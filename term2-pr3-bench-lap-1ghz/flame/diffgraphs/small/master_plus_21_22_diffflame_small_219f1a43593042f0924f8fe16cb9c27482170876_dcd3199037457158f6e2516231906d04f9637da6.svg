<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2022.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2005" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2005" > </text>
<g id="frames">
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.44" y="1519.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (1 samples, 0.03%; +0.03%)</title><rect x="976.2" y="1669" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="979.18" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.95" y="415.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (5 samples, 0.15%; +0.12%)</title><rect x="404.4" y="1621" width="1.8" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="407.42" y="1631.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (2 samples, 0.06%; 0.00%)</title><rect x="55.1" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.15" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="11.8" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.81" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (4 samples, 0.12%; 0.00%)</title><rect x="72.8" y="389" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.85" y="399.5" ></text>
</g>
<g >
<title>row::~row (24 samples, 0.73%; +0.06%)</title><rect x="465.8" y="1701" width="8.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="468.82" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="66.3" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.35" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="664.5" y="1717" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="667.47" y="1727.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.06%)</title><rect x="23.4" y="341" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="26.36" y="351.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (2 samples, 0.06%; +0.06%)</title><rect x="882.6" y="1637" width="0.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="885.63" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.00" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (22 samples, 0.67%; -0.09%)</title><rect x="937.9" y="1733" width="7.9" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="940.89" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="885" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="895.5" >[unknown]</text>
</g>
<g >
<title>std::vector&lt;seastar::future&lt;void&gt;, std::allocator&lt;seastar::future&lt;void&gt; &gt; &gt;::reserve (1 samples, 0.03%; 0.00%)</title><rect x="1116.0" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1118.96" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.09%; 0.00%)</title><rect x="60.6" y="389" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.57" y="399.5" ></text>
</g>
<g >
<title>memtable::memtable_encoding_stats_collector::update (1 samples, 0.03%; +0.03%)</title><rect x="1107.3" y="1653" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1110.29" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="60.2" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.21" y="447.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1615.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; +0.03%)</title><rect x="52.6" y="389" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="55.62" y="399.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_super (1 samples, 0.03%; +0.03%)</title><rect x="28.8" y="405" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="31.78" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="81.9" y="389" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="84.88" y="399.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (9 samples, 0.28%; +0.03%)</title><rect x="75.4" y="405" width="3.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="78.37" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="89.8" y="469" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.82" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.03%; +0.03%)</title><rect x="17.6" y="341" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="20.58" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="348.4" y="1605" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="351.43" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="133.2" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.16" y="1535.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (18 samples, 0.55%; -0.03%)</title><rect x="939.0" y="1717" width="6.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="941.97" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="78.6" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.63" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;3ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1343.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="866.7" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="869.74" y="1759.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%; 0.00%)</title><rect x="172.9" y="1781" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="175.90" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.03%; +0.03%)</title><rect x="106.1" y="1701" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="109.08" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (7 samples, 0.21%; +0.03%)</title><rect x="32.0" y="373" width="2.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="35.03" y="383.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.06%; 0.00%)</title><rect x="149.8" y="1893" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.78" y="1903.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::alter_role_statement*, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="98.1" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.13" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.25" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.66" y="1407.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="85.1" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.13" y="495.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1551.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="58.8" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.76" y="447.5" ></text>
</g>
<g >
<title>std::__addressof&lt;__gnu_cxx::__aligned_membuf&lt;cql3::expr::conjunction&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="81.5" y="213" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="84.52" y="223.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (9 samples, 0.28%; 0.00%)</title><rect x="88.7" y="645" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="655.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (36 samples, 1.10%; -0.03%)</title><rect x="166.4" y="1813" width="13.0" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="169.39" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7 samples, 0.21%; 0.00%)</title><rect x="17.9" y="293" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.95" y="303.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (2 samples, 0.06%; +0.03%)</title><rect x="230.7" y="1781" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="233.69" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; +0.03%)</title><rect x="67.8" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="70.79" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="188.1" y="1557" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="191.07" y="1567.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.06%; 0.00%)</title><rect x="99.9" y="661" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="671.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_M_construct&lt;cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.14" y="1519.5" ></text>
</g>
<g >
<title>schema_registry::learn (3 samples, 0.09%; 0.00%)</title><rect x="187.0" y="1781" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.98" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1397" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1407.5" >[unknown]</text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="148.7" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.70" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::untyped_constant, false&gt;::_M_get (1 samples, 0.03%; +0.03%)</title><rect x="121.2" y="1205" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="124.25" y="1215.5" ></text>
</g>
<g >
<title>deserialize_collection_mutation (1 samples, 0.03%; 0.00%)</title><rect x="881.5" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="884.55" y="1583.5" ></text>
</g>
<g >
<title>do_cql_test (207 samples, 6.34%; 0.00%)</title><rect x="14.0" y="661" width="74.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.97" y="671.5" >do_cql_t..</text>
</g>
<g >
<title>row_cache::make_reader (25 samples, 0.77%; +0.03%)</title><rect x="655.4" y="1717" width="9.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="658.44" y="1727.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (293 samples, 8.97%; +0.03%)</title><rect x="439.8" y="1749" width="105.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="442.81" y="1759.5" >query::consu..</text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; +0.03%)</title><rect x="691.9" y="1797" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="694.92" y="1807.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.06%)</title><rect x="580.0" y="1733" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="582.95" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.03%)</title><rect x="932.1" y="1701" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="935.11" y="1711.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (1 samples, 0.03%; +0.03%)</title><rect x="1111.6" y="1685" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1114.62" y="1695.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (12 samples, 0.37%; -0.06%)</title><rect x="848.7" y="1653" width="4.3" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="851.68" y="1663.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="183.7" y="1797" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="186.73" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="78.6" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.63" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="722.6" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="725.62" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (7 samples, 0.21%; 0.00%)</title><rect x="115.1" y="1509" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.11" y="1519.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (4 samples, 0.12%; 0.00%)</title><rect x="185.2" y="1813" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.18" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (7 samples, 0.21%; 0.00%)</title><rect x="115.1" y="1525" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.11" y="1535.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="11.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.44" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="962.5" y="1685" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="965.45" y="1695.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="58.8" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.76" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1407.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (7 samples, 0.21%; +0.12%)</title><rect x="1149.9" y="1797" width="2.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1152.91" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="120.5" y="1397" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.52" y="1407.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1327.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (4 samples, 0.12%; 0.00%)</title><rect x="357.1" y="1589" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="360.10" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1621" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1631.5" >[unknown]</text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (71 samples, 2.17%; -0.12%)</title><rect x="832.4" y="1701" width="25.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="835.42" y="1711.5" >s..</text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.03%; +0.03%)</title><rect x="46.8" y="437" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="49.84" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%; +0.03%)</title><rect x="10.7" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="13.72" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="24.1" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.09" y="447.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (4 samples, 0.12%; 0.00%)</title><rect x="136.1" y="1605" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.06%; +0.06%)</title><rect x="332.5" y="1621" width="0.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="335.54" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="128.1" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.11" y="1535.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.25" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (61 samples, 1.87%; 0.00%)</title><rect x="25.2" y="453" width="22.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="28.17" y="463.5" >a..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="58.8" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.76" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="750.4" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.43" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="105.7" y="1685" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="108.71" y="1695.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.06%)</title><rect x="723.0" y="1797" width="0.3" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="725.98" y="1807.5" ></text>
</g>
<g >
<title>row::~row (2 samples, 0.06%; 0.00%)</title><rect x="324.2" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="327.23" y="1647.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="54.1" y="261" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="57.06" y="271.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::~set_value (1 samples, 0.03%; 0.00%)</title><rect x="106.4" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.44" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.06%; 0.00%)</title><rect x="89.1" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.10" y="495.5" ></text>
</g>
<g >
<title>dht::tri_compare (8 samples, 0.24%; -0.06%)</title><rect x="1079.5" y="1589" width="2.9" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="1082.48" y="1599.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (170 samples, 5.20%; -0.18%)</title><rect x="805.7" y="1765" width="61.4" height="15.0" fill="rgb(143,143,255)" rx="2" ry="2" />
<text  x="808.70" y="1775.5" >cql3::..</text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; -0.03%)</title><rect x="599.8" y="1685" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="602.82" y="1695.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.03%)</title><rect x="845.1" y="1653" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="848.07" y="1663.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="123.1" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.05" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="853" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="863.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="57.7" y="277" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="60.68" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.06%)</title><rect x="798.1" y="1749" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="801.11" y="1759.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_M_deallocate (1 samples, 0.03%; +0.03%)</title><rect x="61.6" y="421" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="64.65" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (135 samples, 4.13%; -0.12%)</title><rect x="815.8" y="1749" width="48.8" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="818.81" y="1759.5" >cql3..</text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="120.5" y="1365" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.52" y="1375.5" ></text>
</g>
<g >
<title>seastar::reactor::task_queue::register_stats (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="184.1" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="187.09" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_role_statement, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="98.1" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.13" y="559.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (16 samples, 0.49%; -0.06%)</title><rect x="269.0" y="1765" width="5.8" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="271.97" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_SET (2 samples, 0.06%; +0.06%)</title><rect x="36.7" y="405" width="0.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="39.73" y="415.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="85.5" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.49" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1679.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (3 samples, 0.09%; -0.03%)</title><rect x="318.8" y="1669" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="321.82" y="1679.5" ></text>
</g>
<g >
<title>db::schema_tables::store_map&lt;clustering_key_prefix, std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="187.0" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.98" y="1711.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%; +0.03%)</title><rect x="907.9" y="1637" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="910.91" y="1647.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (12 samples, 0.37%; -0.21%)</title><rect x="925.2" y="1701" width="4.4" height="15.0" fill="rgb(132,132,255)" rx="2" ry="2" />
<text  x="928.25" y="1711.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (1 samples, 0.03%; +0.03%)</title><rect x="515.3" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="518.30" y="1711.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.03%; +0.03%)</title><rect x="33.5" y="293" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="36.48" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="99.9" y="613" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="623.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1205" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.03%; +0.03%)</title><rect x="1189.6" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1192.64" y="1903.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="133.2" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.16" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (2 samples, 0.06%; +0.03%)</title><rect x="544.9" y="1717" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="547.92" y="1727.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="187.7" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.70" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="127.0" y="1477" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.02" y="1487.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="129.2" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.19" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="59.5" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.48" y="383.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (8 samples, 0.24%; 0.00%)</title><rect x="878.7" y="1653" width="2.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="881.66" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="110.8" y="1605" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.77" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="128.1" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.11" y="1455.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="779.7" y="1765" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="782.69" y="1775.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (4 samples, 0.12%; -0.06%)</title><rect x="812.2" y="1701" width="1.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="815.20" y="1711.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="82.2" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="351.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (1 samples, 0.03%; 0.00%)</title><rect x="187.7" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.70" y="1775.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1727.5" ></text>
</g>
<g >
<title>query::result_set::result_set (1 samples, 0.03%; 0.00%)</title><rect x="185.5" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.54" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; 0.00%)</title><rect x="21.9" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.92" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (2 samples, 0.06%; +0.06%)</title><rect x="280.9" y="1733" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="283.89" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.30" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="125.6" y="1509" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.58" y="1519.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.06%; 0.00%)</title><rect x="149.8" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.78" y="1887.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; -0.03%)</title><rect x="126.3" y="1589" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="129.30" y="1599.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.03%; -0.03%)</title><rect x="393.6" y="1557" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="396.58" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (1 samples, 0.03%; +0.03%)</title><rect x="46.1" y="421" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="49.12" y="431.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (1 samples, 0.03%; 0.00%)</title><rect x="14.7" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1551.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (4 samples, 0.12%; 0.00%)</title><rect x="516.4" y="1701" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="519.39" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::selectStatement (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1647.5" ></text>
</g>
<g >
<title>database::do_apply (18 samples, 0.55%; +0.03%)</title><rect x="1106.2" y="1749" width="6.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1109.20" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (9 samples, 0.28%; 0.00%)</title><rect x="88.7" y="581" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="591.5" ></text>
</g>
<g >
<title>seastar::reactor::run (2,786 samples, 85.28%; 0.00%)</title><rect x="151.2" y="1861" width="1006.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.22" y="1871.5" >seastar::reactor::run</text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="106.4" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="109.44" y="1727.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (1 samples, 0.03%; 0.00%)</title><rect x="1155.3" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.33" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.03%; +0.03%)</title><rect x="259.9" y="1685" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="262.94" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.62%; 0.00%)</title><rect x="11.1" y="1285" width="89.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1295.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1157" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (273 samples, 8.36%; 0.00%)</title><rect x="11.1" y="1909" width="98.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1919.5" >[unknown]</text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1189" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1199.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_tokenStartLine (2 samples, 0.06%; +0.06%)</title><rect x="26.6" y="421" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="29.61" y="431.5" ></text>
</g>
<g >
<title>table::set_hit_rate (2 samples, 0.06%; -0.15%)</title><rect x="779.3" y="1781" width="0.8" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="782.33" y="1791.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.12%; 0.00%)</title><rect x="21.6" y="357" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.56" y="367.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="107.2" y="1749" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="110.16" y="1759.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (14 samples, 0.43%; 0.00%)</title><rect x="101.7" y="1765" width="5.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.74" y="1775.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.28%; +0.09%)</title><rect x="552.5" y="1701" width="3.3" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="555.50" y="1711.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="12.5" y="261" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="15.53" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_role_statement, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="98.1" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.13" y="543.5" ></text>
</g>
<g >
<title>__strlen_avx2 (3 samples, 0.09%; +0.09%)</title><rect x="43.6" y="389" width="1.1" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="46.59" y="399.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (1 samples, 0.03%; 0.00%)</title><rect x="1066.8" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1069.84" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="931.4" y="1701" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="934.39" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (20 samples, 0.61%; 0.00%)</title><rect x="16.9" y="453" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.86" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="60.2" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.21" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.00" y="1551.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.06%; +0.03%)</title><rect x="814.7" y="1701" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="817.73" y="1711.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.12%; -0.03%)</title><rect x="206.8" y="1781" width="1.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="209.85" y="1791.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.12%; 0.00%)</title><rect x="21.6" y="373" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.56" y="383.5" ></text>
</g>
<g >
<title>__start_context (22 samples, 0.67%; 0.00%)</title><rect x="92.0" y="757" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.99" y="767.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (1 samples, 0.03%; +0.03%)</title><rect x="1040.5" y="1557" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1043.47" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (2 samples, 0.06%; 0.00%)</title><rect x="23.4" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.36" y="399.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1359.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (2 samples, 0.06%; 0.00%)</title><rect x="12.2" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.17" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; -0.03%)</title><rect x="664.1" y="1701" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="667.11" y="1711.5" ></text>
</g>
<g >
<title>db::schema_tables::add_table_params_to_mutations (1 samples, 0.03%; 0.00%)</title><rect x="187.0" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.98" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="75.0" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.01" y="447.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.31%; -0.03%)</title><rect x="436.2" y="1749" width="3.6" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="439.20" y="1759.5" ></text>
</g>
<g >
<title>auth::create_metadata_table_if_missing (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1759.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.03%; +0.03%)</title><rect x="404.1" y="1589" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="407.06" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="207.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (1 samples, 0.03%; 0.00%)</title><rect x="964.6" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="967.62" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="130.3" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.28" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::constant::constant (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.74" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (1 samples, 0.03%; +0.03%)</title><rect x="1117.8" y="1797" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1120.76" y="1807.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%; +0.03%)</title><rect x="650.0" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="653.02" y="1711.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="135.3" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.33" y="1615.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; +0.06%)</title><rect x="851.6" y="1637" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="854.57" y="1647.5" ></text>
</g>
<g >
<title>LZ4_compress_fast_extState (1 samples, 0.03%; +0.03%)</title><rect x="10.4" y="1925" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="13.36" y="1935.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; -0.03%)</title><rect x="196.0" y="1797" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="199.01" y="1807.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.06%)</title><rect x="825.2" y="1717" width="0.7" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="828.20" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="128.1" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.11" y="1407.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.15%; 0.00%)</title><rect x="1063.2" y="1653" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1066.22" y="1663.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (6 samples, 0.18%; -0.03%)</title><rect x="133.5" y="1637" width="2.2" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="136.53" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="111.9" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.85" y="1583.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (2 samples, 0.06%; 0.00%)</title><rect x="103.9" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.91" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="789.4" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="792.44" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.52" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.58%; -0.18%)</title><rect x="1009.0" y="1589" width="6.9" height="15.0" fill="rgb(143,143,255)" rx="2" ry="2" />
<text  x="1012.04" y="1599.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1343.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="51.9" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.90" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (9 samples, 0.28%; +0.06%)</title><rect x="711.1" y="1765" width="3.2" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="714.07" y="1775.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="187.3" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.34" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; +0.03%)</title><rect x="874.3" y="1797" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="877.32" y="1807.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="883.4" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.35" y="1679.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (11 samples, 0.34%; +0.12%)</title><rect x="491.8" y="1685" width="4.0" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="494.82" y="1695.5" ></text>
</g>
<g >
<title>partition_entry::apply (1 samples, 0.03%; -0.03%)</title><rect x="1110.5" y="1669" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1113.54" y="1679.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.44" y="1503.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.03%; +0.03%)</title><rect x="146.9" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="149.89" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (4 samples, 0.12%; +0.03%)</title><rect x="115.1" y="1445" width="1.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="118.11" y="1455.5" ></text>
</g>
<g >
<title>lister::scan_dir (1 samples, 0.03%; 0.00%)</title><rect x="780.8" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="783.77" y="1791.5" ></text>
</g>
<g >
<title>_Unwind_IteratePhdrCallback (1 samples, 0.03%; +0.03%)</title><rect x="138.9" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="141.94" y="1919.5" ></text>
</g>
<g >
<title>std::locale::~locale (1 samples, 0.03%; +0.03%)</title><rect x="138.6" y="1909" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="141.58" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="69.2" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.23" y="159.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; 0.00%)</title><rect x="816.2" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="819.17" y="1743.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (13 samples, 0.40%; -0.03%)</title><rect x="1113.1" y="1733" width="4.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1116.07" y="1743.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (4 samples, 0.12%; +0.09%)</title><rect x="936.4" y="1717" width="1.5" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="939.45" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="67.1" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.07" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.03%; 0.00%)</title><rect x="750.4" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.43" y="1807.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (4 samples, 0.12%; +0.06%)</title><rect x="551.1" y="1701" width="1.4" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="554.06" y="1711.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%; +0.03%)</title><rect x="151.6" y="1829" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="154.59" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.62%; 0.00%)</title><rect x="11.1" y="1317" width="89.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1327.5" >[unknown]</text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="90.9" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.91" y="495.5" ></text>
</g>
<g >
<title>std::optional&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="53.7" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.70" y="463.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::impl::add_registration (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1647.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (8 samples, 0.24%; +0.12%)</title><rect x="1045.9" y="1605" width="2.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1048.89" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="423.6" y="1653" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="426.56" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (11 samples, 0.34%; 0.00%)</title><rect x="17.2" y="389" width="4.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.22" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.7" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.68" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (5 samples, 0.15%; +0.09%)</title><rect x="758.4" y="1797" width="1.8" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="761.38" y="1807.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (8 samples, 0.24%; -0.03%)</title><rect x="1100.8" y="1717" width="2.9" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1103.79" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="11.8" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.81" y="447.5" ></text>
</g>
<g >
<title>read_context::stop (1 samples, 0.03%; 0.00%)</title><rect x="186.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.62" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="11.4" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.44" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.06%; +0.03%)</title><rect x="1038.3" y="1541" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1041.30" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="115.5" y="1301" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.47" y="1311.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="692.6" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="695.64" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (4 samples, 0.12%; +0.12%)</title><rect x="1103.7" y="1733" width="1.4" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1106.68" y="1743.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (22 samples, 0.67%; +0.03%)</title><rect x="612.5" y="1701" width="7.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="615.46" y="1711.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (9 samples, 0.28%; 0.00%)</title><rect x="88.7" y="613" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="623.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="12.5" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.53" y="447.5" ></text>
</g>
<g >
<title>mutation_partition::apply_weak (1 samples, 0.03%; +0.03%)</title><rect x="185.9" y="1637" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="188.90" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (14 samples, 0.43%; -0.09%)</title><rect x="940.4" y="1701" width="5.1" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="943.42" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1557" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1567.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (16 samples, 0.49%; 0.00%)</title><rect x="114.0" y="1589" width="5.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.02" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (22 samples, 0.67%; 0.00%)</title><rect x="101.7" y="1877" width="8.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.74" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (7 samples, 0.21%; 0.00%)</title><rect x="67.8" y="405" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.79" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%; +0.06%)</title><rect x="733.1" y="1797" width="1.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="736.10" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; +0.03%)</title><rect x="66.0" y="405" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="68.98" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="122.0" y="1413" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="124.97" y="1423.5" ></text>
</g>
<g >
<title>abstract_type::deserialize_impl&lt;basic_single_fragmented_view&lt; (1 samples, 0.03%; 0.00%)</title><rect x="185.5" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.54" y="1631.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="131.7" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.72" y="1647.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (2,786 samples, 85.28%; +0.03%)</title><rect x="151.2" y="1845" width="1006.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="154.22" y="1855.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (42 samples, 1.29%; -0.18%)</title><rect x="1067.2" y="1621" width="15.2" height="15.0" fill="rgb(143,143,255)" rx="2" ry="2" />
<text  x="1070.20" y="1631.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="73.6" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.57" y="367.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1157" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.52" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (5 samples, 0.15%; +0.03%)</title><rect x="29.5" y="341" width="1.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="32.50" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1029" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.03%; +0.03%)</title><rect x="32.4" y="341" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="35.39" y="351.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%; 0.00%)</title><rect x="52.6" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.62" y="479.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1461" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1471.5" >[unknown]</text>
</g>
<g >
<title>auth::operator== (1 samples, 0.03%; +0.03%)</title><rect x="844.7" y="1653" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="847.70" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.09%; 0.00%)</title><rect x="60.6" y="357" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.57" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt;, std::pair&lt;std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt; const, seastar::shared_ptr&lt;seastar::metrics::impl::registered_metric&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt; const, seastar::shared_ptr&lt;seastar::metrics::impl::registered_metric&gt; &gt; &gt;, std::less&lt;std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt; const, seastar::shared_ptr&lt;seastar::metrics::impl::registered_metric&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1615.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.03%; +0.03%)</title><rect x="443.1" y="1733" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="446.06" y="1743.5" ></text>
</g>
<g >
<title>std::__addressof&lt;__gnu_cxx::__aligned_membuf&lt;cql3::expr::conjunction&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="90.2" y="277" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="93.18" y="287.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="73.9" y="325" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="76.93" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.44" y="1551.5" ></text>
</g>
<g >
<title>from_hex (2 samples, 0.06%; 0.00%)</title><rect x="93.1" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.07" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::setTokenStream (1 samples, 0.03%; +0.03%)</title><rect x="15.1" y="549" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="18.06" y="559.5" ></text>
</g>
<g >
<title>[unknown] (246 samples, 7.53%; 0.00%)</title><rect x="11.1" y="773" width="88.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="783.5" >[unknown]</text>
</g>
<g >
<title>row::compact_and_expire (1 samples, 0.03%; -0.03%)</title><rect x="448.8" y="1733" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="451.84" y="1743.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (6 samples, 0.18%; -0.03%)</title><rect x="618.2" y="1685" width="2.2" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="621.24" y="1695.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Optional_payload_base (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1519.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.18%; 0.00%)</title><rect x="426.4" y="1701" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="429.45" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="57.3" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.32" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.09%; 0.00%)</title><rect x="21.9" y="325" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.92" y="335.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1221" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1231.5" >[unknown]</text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="102.8" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.83" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.44" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_keyspace_statement, std::default_delete&lt;cql3::statements::create_keyspace_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::create_keyspace_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.3" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.30" y="575.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="12.5" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.53" y="303.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (48 samples, 1.47%; -0.06%)</title><rect x="1067.2" y="1637" width="17.3" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="1070.20" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (2 samples, 0.06%; 0.00%)</title><rect x="125.6" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.58" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="885" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="895.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="76.5" y="197" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.46" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (9 samples, 0.28%; 0.00%)</title><rect x="88.7" y="565" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.66" y="1503.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::impl::remove_registration (1 samples, 0.03%; 0.00%)</title><rect x="751.5" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.52" y="1647.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.06%; +0.03%)</title><rect x="72.1" y="389" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="75.12" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%; +0.03%)</title><rect x="655.1" y="1717" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="658.08" y="1727.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.15%; 0.00%)</title><rect x="794.5" y="1749" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="797.50" y="1759.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="14.7" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range_concurrent (1 samples, 0.03%; 0.00%)</title><rect x="964.6" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="967.62" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.00" y="1567.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="148.0" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.97" y="1887.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%; +0.03%)</title><rect x="18.7" y="261" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="21.67" y="271.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.03%; 0.00%)</title><rect x="33.8" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.84" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="11.4" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.44" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.66" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="51.9" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.90" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.03%; +0.03%)</title><rect x="20.8" y="341" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="23.84" y="351.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="872.5" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="875.52" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.06%; -0.09%)</title><rect x="1084.5" y="1701" width="0.8" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="1087.53" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%; 0.00%)</title><rect x="259.9" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.94" y="1711.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; -0.03%)</title><rect x="803.9" y="1765" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="806.89" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1045" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1055.5" >[unknown]</text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; 0.00%)</title><rect x="144.7" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.72" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="90.2" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.18" y="399.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (3 samples, 0.09%; 0.00%)</title><rect x="81.9" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.88" y="463.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1829" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1839.5" >[unknown]</text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; +0.03%)</title><rect x="91.3" y="501" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="94.27" y="511.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="54.1" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.06" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::task_queue::task_queue (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1727.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="57.0" y="309" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="59.95" y="319.5" ></text>
</g>
<g >
<title>row::apply_monotonically (4 samples, 0.12%; 0.00%)</title><rect x="880.1" y="1637" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="883.10" y="1647.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; -0.06%)</title><rect x="811.8" y="1717" width="0.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="814.84" y="1727.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (2 samples, 0.06%; -0.03%)</title><rect x="154.8" y="1829" width="0.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="157.84" y="1839.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.06%; +0.03%)</title><rect x="1106.9" y="1669" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1109.93" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.4" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.41" y="1391.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, true, false, false&gt;::_Optional_payload_base (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1535.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="128.1" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.11" y="1439.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.95" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="55.5" y="421" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="58.51" y="431.5" ></text>
</g>
<g >
<title>canonical_mutation::canonical_mutation (1 samples, 0.03%; 0.00%)</title><rect x="187.3" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.34" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="73.6" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.57" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.55%; 0.00%)</title><rect x="1106.2" y="1765" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1109.20" y="1775.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (3 samples, 0.09%; -0.03%)</title><rect x="406.6" y="1621" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="409.58" y="1631.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; -0.09%)</title><rect x="1138.7" y="1797" width="1.1" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="1141.71" y="1807.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (11 samples, 0.34%; -0.09%)</title><rect x="760.2" y="1797" width="4.0" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="763.19" y="1807.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (8 samples, 0.24%; 0.00%)</title><rect x="11.1" y="613" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="127.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_get_map_allocator (1 samples, 0.03%; 0.00%)</title><rect x="14.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="869.3" y="1765" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="872.27" y="1775.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="124.5" y="1525" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="127.50" y="1535.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="131.7" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.72" y="1535.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%; +0.03%)</title><rect x="480.3" y="1717" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="483.27" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="12.2" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.17" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;2ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1327.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="57.3" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.32" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1679.5" ></text>
</g>
<g >
<title>create_partitions (22 samples, 0.67%; 0.00%)</title><rect x="92.0" y="677" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.99" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; +0.03%)</title><rect x="34.2" y="357" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="37.20" y="367.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (3 samples, 0.09%; +0.09%)</title><rect x="205.4" y="1781" width="1.1" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="208.40" y="1791.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (6 samples, 0.18%; 0.00%)</title><rect x="1113.8" y="1637" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.79" y="1647.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1269" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1279.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="12.9" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.89" y="415.5" ></text>
</g>
<g >
<title>db::system_keyspace::query_mutations (1 samples, 0.03%; 0.00%)</title><rect x="186.6" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.62" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1423.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.12%; 0.00%)</title><rect x="639.9" y="1669" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="642.91" y="1679.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%; +0.03%)</title><rect x="864.2" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="867.21" y="1743.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (7 samples, 0.21%; 0.00%)</title><rect x="79.3" y="389" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.35" y="399.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (1 samples, 0.03%; 0.00%)</title><rect x="137.5" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.50" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (5 samples, 0.15%; 0.00%)</title><rect x="29.5" y="357" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.50" y="367.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::read&lt;seastar::simple_memory_input_stream&gt; (1 samples, 0.03%; 0.00%)</title><rect x="185.9" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.90" y="1711.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.14" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="271.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%; +0.03%)</title><rect x="585.7" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="588.73" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (5 samples, 0.15%; 0.00%)</title><rect x="62.0" y="357" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="367.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (202 samples, 6.18%; 0.00%)</title><rect x="14.7" y="629" width="73.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="639.5" >single_n..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="125.6" y="1525" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.58" y="1535.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.95" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="60.2" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.21" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="133.2" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.16" y="1487.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (2 samples, 0.06%; 0.00%)</title><rect x="777.9" y="1765" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="780.88" y="1775.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="654.0" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="657.00" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (4 samples, 0.12%; +0.03%)</title><rect x="65.3" y="453" width="1.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="68.26" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.1" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.13" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="21.9" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.92" y="287.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.03%; 0.00%)</title><rect x="881.5" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="884.55" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1141" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1151.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (21 samples, 0.64%; 0.00%)</title><rect x="129.9" y="1669" width="7.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.91" y="1679.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="187.3" y="1669" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="190.34" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.03%; 0.00%)</title><rect x="674.6" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="677.59" y="1775.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%; +0.03%)</title><rect x="21.9" y="245" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="24.92" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.03%; +0.03%)</title><rect x="53.0" y="341" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="55.98" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (5 samples, 0.15%; 0.00%)</title><rect x="62.0" y="421" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="431.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1493" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1503.5" >[unknown]</text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; -0.03%)</title><rect x="859.2" y="1701" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="862.15" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (239 samples, 7.32%; +0.34%)</title><rect x="325.0" y="1653" width="86.3" height="15.0" fill="rgb(255,88,88)" rx="2" ry="2" />
<text  x="327.96" y="1663.5" >partition_..</text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (13 samples, 0.40%; 0.00%)</title><rect x="1113.1" y="1685" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.07" y="1695.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (55 samples, 1.68%; +0.03%)</title><rect x="110.0" y="1637" width="19.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="113.05" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; +0.03%)</title><rect x="24.1" y="373" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="27.09" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%; +0.03%)</title><rect x="24.8" y="453" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="27.81" y="463.5" ></text>
</g>
<g >
<title>database::query (8 samples, 0.24%; -0.03%)</title><rect x="182.3" y="1813" width="2.9" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="185.29" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; -0.03%)</title><rect x="116.6" y="1413" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="119.55" y="1423.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="103.9" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.91" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="54.1" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.06" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (4 samples, 0.12%; 0.00%)</title><rect x="660.9" y="1685" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="663.86" y="1695.5" ></text>
</g>
<g >
<title>db::system_keyspace::v3::cdc_local (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="111.1" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.13" y="1471.5" ></text>
</g>
<g >
<title>get_scheduling_groups (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.18%; +0.03%)</title><rect x="426.4" y="1685" width="2.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="429.45" y="1695.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.12%; 0.00%)</title><rect x="1158.6" y="1941" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.58" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (1 samples, 0.03%; +0.03%)</title><rect x="600.9" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="603.90" y="1711.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (1 samples, 0.03%; 0.00%)</title><rect x="874.0" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="876.96" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="123.1" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.05" y="1551.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%; 0.00%)</title><rect x="188.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.43" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1269" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1279.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="69.2" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.23" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.52" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="130.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.64" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1471.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (3 samples, 0.09%; +0.06%)</title><rect x="1113.8" y="1541" width="1.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1116.79" y="1551.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.69" y="1871.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.03%; 0.00%)</title><rect x="710.7" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="713.70" y="1775.5" ></text>
</g>
<g >
<title>database::apply_in_memory (13 samples, 0.40%; 0.00%)</title><rect x="1106.6" y="1717" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1109.57" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.06%; +0.06%)</title><rect x="714.7" y="1765" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="717.68" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="434.4" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="437.40" y="1711.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (1 samples, 0.03%; +0.03%)</title><rect x="791.6" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="794.61" y="1791.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="58.8" y="293" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="61.76" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.66" y="1455.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (2 samples, 0.06%; +0.03%)</title><rect x="222.7" y="1749" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="225.74" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (8 samples, 0.24%; 0.00%)</title><rect x="11.1" y="661" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="671.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="132.8" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1615.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (8 samples, 0.24%; +0.06%)</title><rect x="634.5" y="1669" width="2.9" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="637.49" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1157" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1167.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; +0.03%)</title><rect x="54.8" y="485" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="57.79" y="495.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.00" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="61.3" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.29" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="60.2" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.21" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="63.8" y="293" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.82" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (3 samples, 0.09%; -0.03%)</title><rect x="316.6" y="1669" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="319.65" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="1157.9" y="1941" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1160.85" y="1951.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (8 samples, 0.24%; 0.00%)</title><rect x="11.1" y="565" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="575.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (4 samples, 0.12%; +0.12%)</title><rect x="570.6" y="1733" width="1.4" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="573.56" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.21%; -0.03%)</title><rect x="1095.0" y="1717" width="2.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1098.01" y="1727.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (16 samples, 0.49%; -0.06%)</title><rect x="878.3" y="1797" width="5.8" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="881.30" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (5 samples, 0.15%; 0.00%)</title><rect x="864.6" y="1749" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="867.57" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (9 samples, 0.28%; 0.00%)</title><rect x="88.7" y="709" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="719.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1045" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1055.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; +0.03%)</title><rect x="51.9" y="325" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="54.90" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.03%; +0.03%)</title><rect x="47.2" y="453" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="50.20" y="463.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (21 samples, 0.64%; -0.15%)</title><rect x="1032.9" y="1557" width="7.6" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="1035.88" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (5 samples, 0.15%; 0.00%)</title><rect x="68.5" y="341" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.51" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="58.8" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.76" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (2 samples, 0.06%; -0.03%)</title><rect x="1155.3" y="1781" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1158.33" y="1791.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (14 samples, 0.43%; +0.06%)</title><rect x="210.5" y="1781" width="5.0" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="213.46" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.95" y="447.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.03%; +0.03%)</title><rect x="856.3" y="1669" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="859.26" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="125.6" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.58" y="1551.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range_concurrent (1 samples, 0.03%; 0.00%)</title><rect x="964.6" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="967.62" y="1615.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="89.5" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.46" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.12%; -0.03%)</title><rect x="647.5" y="1669" width="1.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="650.50" y="1679.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (3 samples, 0.09%; 0.00%)</title><rect x="627.3" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="630.27" y="1695.5" ></text>
</g>
<g >
<title>seastar::smp::configure (1 samples, 0.03%; 0.00%)</title><rect x="1157.5" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.49" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="112.6" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.58" y="1551.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%; +0.03%)</title><rect x="643.5" y="1685" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="646.52" y="1695.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (22 samples, 0.67%; 0.00%)</title><rect x="101.7" y="1797" width="8.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.74" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::function&lt;partition_presence_checker_result  (2 samples, 0.06%; +0.03%)</title><rect x="231.8" y="1781" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="234.77" y="1791.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (3 samples, 0.09%; +0.06%)</title><rect x="641.4" y="1669" width="1.0" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="644.36" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="11.8" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.81" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; 0.00%)</title><rect x="1092.5" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1095.48" y="1679.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.03%; -0.03%)</title><rect x="188.4" y="1797" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="191.43" y="1807.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned int&gt;::_Rb_tree_iterator (1 samples, 0.03%; +0.03%)</title><rect x="48.6" y="405" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="51.65" y="415.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.03%; +0.03%)</title><rect x="1037.9" y="1525" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1040.94" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1685" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1695.5" >[unknown]</text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (11 samples, 0.34%; 0.00%)</title><rect x="17.2" y="405" width="4.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.22" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state&lt;seastar::internal::extract_values_from_futures_tuple&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;, seastar::future&lt;void&gt;, seastar::future&lt;void&gt; &gt;::~when_all_state (1 samples, 0.03%; +0.03%)</title><rect x="877.6" y="1797" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="880.57" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="95.6" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.60" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (9 samples, 0.28%; 0.00%)</title><rect x="75.4" y="437" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.37" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.03%)</title><rect x="978.0" y="1637" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="980.98" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1439.5" ></text>
</g>
<g >
<title>canonical_mutation::to_mutation (1 samples, 0.03%; 0.00%)</title><rect x="185.9" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.90" y="1679.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (18 samples, 0.55%; -0.06%)</title><rect x="555.8" y="1701" width="6.5" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="558.75" y="1711.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (10 samples, 0.31%; 0.00%)</title><rect x="67.4" y="453" width="3.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.43" y="463.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (1 samples, 0.03%; +0.03%)</title><rect x="1108.4" y="1653" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1111.37" y="1663.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.03%; 0.00%)</title><rect x="852.3" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.29" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (76 samples, 2.33%; 0.00%)</title><rect x="110.0" y="1733" width="27.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1743.5" >c..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="51.9" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.90" y="383.5" ></text>
</g>
<g >
<title>[unknown] (250 samples, 7.65%; 0.00%)</title><rect x="11.1" y="1365" width="90.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1375.5" >[unknown]</text>
</g>
<g >
<title>std::make_unique&lt;cql3::attributes::raw&gt; (3 samples, 0.09%; 0.00%)</title><rect x="85.1" y="501" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.13" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restriction&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="700.6" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="703.59" y="1743.5" ></text>
</g>
<g >
<title>dht::shard_of (1 samples, 0.03%; +0.03%)</title><rect x="1117.0" y="1557" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1120.04" y="1567.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl&amp;&gt; (2 samples, 0.06%; +0.06%)</title><rect x="64.2" y="213" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="67.18" y="223.5" ></text>
</g>
<g >
<title>db::system_keyspace::load_tokens (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1775.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1279.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (13 samples, 0.40%; -0.06%)</title><rect x="101.7" y="1717" width="4.7" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="104.74" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.03%)</title><rect x="906.8" y="1637" width="0.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="909.83" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::reset (1 samples, 0.03%; +0.03%)</title><rect x="99.2" y="533" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="102.21" y="543.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (59 samples, 1.81%; +0.18%)</title><rect x="623.3" y="1701" width="21.3" height="15.0" fill="rgb(255,143,143)" rx="2" ry="2" />
<text  x="626.30" y="1711.5" >m..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="128.1" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.11" y="1519.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; +0.03%)</title><rect x="232.9" y="1781" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="235.85" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="172.2" y="1765" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="175.17" y="1775.5" ></text>
</g>
<g >
<title>service::client_state::has_access (85 samples, 2.60%; +0.09%)</title><rect x="827.4" y="1717" width="30.7" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="830.37" y="1727.5" >se..</text>
</g>
<g >
<title>seastar::writeable_eventfd::signal (2 samples, 0.06%; 0.00%)</title><rect x="149.8" y="1925" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.78" y="1935.5" ></text>
</g>
<g >
<title>std::map&lt;std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt;, seastar::shared_ptr&lt;seastar::metrics::impl::registered_metric&gt;, std::less&lt;std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::less&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt; &gt; const, seastar::shared_ptr&lt;seastar::metrics::impl::registered_metric&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="11.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.81" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (8 samples, 0.24%; 0.00%)</title><rect x="62.0" y="453" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="463.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="917" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="927.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="127.0" y="1429" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="130.02" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (5 samples, 0.15%; 0.00%)</title><rect x="76.1" y="325" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="58.8" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.76" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; -0.03%)</title><rect x="823.8" y="1717" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="826.76" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.39" y="1423.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (1 samples, 0.03%; +0.03%)</title><rect x="425.4" y="1669" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="428.37" y="1679.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="59.5" y="261" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="62.48" y="271.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1 samples, 0.03%; -0.03%)</title><rect x="749.7" y="1749" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="752.71" y="1759.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="663.0" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="666.03" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="21.9" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.92" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (5 samples, 0.15%; 0.00%)</title><rect x="145.8" y="1829" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.81" y="1839.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (12 samples, 0.37%; +0.03%)</title><rect x="173.6" y="1781" width="4.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="176.62" y="1791.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (3 samples, 0.09%; 0.00%)</title><rect x="63.8" y="421" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.82" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="907.6" y="1653" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="910.55" y="1663.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="60.6" y="293" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="63.57" y="303.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="845.4" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="848.43" y="1663.5" ></text>
</g>
<g >
<title>seastar::reactor::io_queue_submission_pollfn::poll (1 samples, 0.03%; 0.00%)</title><rect x="1156.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1159.41" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1567.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::add_restriction (1 samples, 0.03%; 0.00%)</title><rect x="103.9" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.91" y="1615.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="54.1" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.06" y="447.5" ></text>
</g>
<g >
<title>schema_mutations::schema_mutations (1 samples, 0.03%; 0.00%)</title><rect x="185.9" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.90" y="1695.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="857.3" y="1685" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.35" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="14.7" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="560.4" y="1637" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="563.45" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.03%; +0.03%)</title><rect x="146.2" y="1765" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="149.17" y="1775.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, char const*, char*&gt; (1 samples, 0.03%; -0.03%)</title><rect x="129.2" y="1509" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="132.19" y="1519.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (97 samples, 2.97%; -0.03%)</title><rect x="369.0" y="1589" width="35.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="372.02" y="1599.5" >co..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="95.6" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.60" y="511.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="13.6" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.61" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%; +0.03%)</title><rect x="32.8" y="325" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="35.75" y="335.5" ></text>
</g>
<g >
<title>row::row (100 samples, 3.06%; +0.03%)</title><rect x="368.3" y="1605" width="36.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="371.30" y="1615.5" >row..</text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%; 0.00%)</title><rect x="852.7" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.65" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;3ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="121.2" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.25" y="1263.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.37%; +0.03%)</title><rect x="264.6" y="1765" width="4.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="267.64" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.7" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.68" y="351.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (19 samples, 0.58%; -0.06%)</title><rect x="808.9" y="1749" width="6.9" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="811.95" y="1759.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (200 samples, 6.12%; +0.12%)</title><rect x="335.4" y="1637" width="72.3" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="338.43" y="1647.5" >partitio..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="126.3" y="1397" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="129.30" y="1407.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="112.9" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.94" y="1615.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (427 samples, 13.07%; 0.00%)</title><rect x="281.6" y="1733" width="154.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="284.61" y="1743.5" >merging_reader&lt;muta..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;1ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1311.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; -0.03%)</title><rect x="579.6" y="1733" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="582.59" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; +0.03%)</title><rect x="16.1" y="549" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="19.14" y="559.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%; 0.00%)</title><rect x="853.0" y="1669" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="856.01" y="1679.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (96 samples, 2.94%; -0.31%)</title><rect x="1049.9" y="1669" width="34.6" height="15.0" fill="rgb(99,99,255)" rx="2" ry="2" />
<text  x="1052.86" y="1679.5" >se..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (69 samples, 2.11%; +0.09%)</title><rect x="701.7" y="1813" width="24.9" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="704.67" y="1823.5" >s..</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (6 samples, 0.18%; +0.12%)</title><rect x="1118.8" y="1813" width="2.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1121.85" y="1823.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; +0.03%)</title><rect x="627.3" y="1669" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="630.27" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; 0.00%)</title><rect x="115.5" y="1317" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.47" y="1327.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (5 samples, 0.15%; 0.00%)</title><rect x="62.0" y="405" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="949" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="959.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="648.6" y="1653" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="651.58" y="1663.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="59.8" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.84" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="124.1" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.14" y="1535.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%; +0.03%)</title><rect x="911.2" y="1621" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="914.16" y="1631.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.12%; +0.03%)</title><rect x="597.3" y="1685" width="1.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="600.29" y="1695.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; 0.00%)</title><rect x="59.1" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.12" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::untyped_constant (1 samples, 0.03%; 0.00%)</title><rect x="125.2" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.22" y="1615.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.03%; +0.03%)</title><rect x="22.6" y="293" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="25.64" y="303.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1237" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1247.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (8 samples, 0.24%; 0.00%)</title><rect x="102.1" y="1701" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.10" y="1711.5" ></text>
</g>
<g >
<title>seastar::async&lt;single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.03%)</title><rect x="694.1" y="1797" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="697.09" y="1807.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (600 samples, 18.37%; +0.03%)</title><rect x="888.8" y="1765" width="216.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="891.77" y="1775.5" >seastar::noncopyable_functio..</text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.69" y="1855.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (7 samples, 0.21%; 0.00%)</title><rect x="102.5" y="1685" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.46" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%; +0.03%)</title><rect x="1040.8" y="1557" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1043.83" y="1567.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (45 samples, 1.38%; +0.09%)</title><rect x="900.3" y="1717" width="16.3" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="903.33" y="1727.5" ></text>
</g>
<g >
<title>query::querier&lt; (750 samples, 22.96%; +0.12%)</title><rect x="276.2" y="1765" width="270.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="279.20" y="1775.5" >query::querier&lt;</text>
</g>
<g >
<title>row::row (1 samples, 0.03%; +0.03%)</title><rect x="423.9" y="1653" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="426.92" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="644.2" y="1685" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="647.25" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="821" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="831.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (13 samples, 0.40%; 0.00%)</title><rect x="1113.1" y="1701" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.07" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="69.2" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.23" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.06%; -0.09%)</title><rect x="1084.5" y="1717" width="0.8" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="1087.53" y="1727.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (243 samples, 7.44%; -0.21%)</title><rect x="578.5" y="1749" width="87.8" height="15.0" fill="rgb(132,132,255)" rx="2" ry="2" />
<text  x="581.51" y="1759.5" >std::_Func..</text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="120.9" y="1333" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.88" y="1343.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1 samples, 0.03%; +0.03%)</title><rect x="856.6" y="1685" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="859.62" y="1695.5" ></text>
</g>
<g >
<title>std::allocator&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="14.7" y="357" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="17.70" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (5 samples, 0.15%; +0.15%)</title><rect x="341.2" y="1621" width="1.8" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="344.21" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="12.5" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.53" y="287.5" ></text>
</g>
<g >
<title>freeze (4 samples, 0.12%; 0.00%)</title><rect x="1113.8" y="1573" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.79" y="1583.5" ></text>
</g>
<g >
<title>__strlen_avx2 (3 samples, 0.09%; -0.03%)</title><rect x="1021.7" y="1573" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1024.69" y="1583.5" ></text>
</g>
<g >
<title>partition_entry::evict (2 samples, 0.06%; +0.03%)</title><rect x="149.8" y="1829" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="152.78" y="1839.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_mbegin (1 samples, 0.03%; +0.03%)</title><rect x="101.0" y="1029" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="104.02" y="1039.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%; 0.00%)</title><rect x="150.1" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.14" y="1823.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; -0.03%)</title><rect x="401.9" y="1573" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="404.89" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%; 0.00%)</title><rect x="22.6" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.64" y="319.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (3 samples, 0.09%; +0.03%)</title><rect x="143.6" y="1925" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="146.64" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;2ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="123.4" y="1301" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="126.41" y="1311.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="11.8" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.81" y="463.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.03%; -0.03%)</title><rect x="141.1" y="1893" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="144.11" y="1903.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1551.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (118 samples, 3.61%; +0.06%)</title><rect x="895.3" y="1733" width="42.6" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="898.27" y="1743.5" >cql3..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.52" y="319.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.18%; 0.00%)</title><rect x="59.5" y="453" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.48" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (2 samples, 0.06%; +0.06%)</title><rect x="620.4" y="1701" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="623.41" y="1711.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (331 samples, 10.13%; +0.37%)</title><rect x="965.0" y="1685" width="119.5" height="15.0" fill="rgb(255,77,77)" rx="2" ry="2" />
<text  x="967.98" y="1695.5" >service::stora..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (16 samples, 0.49%; 0.00%)</title><rect x="878.3" y="1765" width="5.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="881.30" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1653" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1663.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="57.7" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.68" y="319.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::invoke_on_all (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1663.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each_state::parallel_for_each_state (1 samples, 0.03%; 0.00%)</title><rect x="1116.0" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1118.96" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_initialize_map (1 samples, 0.03%; 0.00%)</title><rect x="14.7" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (1 samples, 0.03%; 0.00%)</title><rect x="209.4" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="212.38" y="1791.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.03%; 0.00%)</title><rect x="769.2" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="772.22" y="1807.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (1 samples, 0.03%; 0.00%)</title><rect x="14.7" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="527.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (8 samples, 0.24%; -0.06%)</title><rect x="651.1" y="1701" width="2.9" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="654.11" y="1711.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1061" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="130.6" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.64" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; +0.03%)</title><rect x="746.8" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="749.82" y="1807.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="61.3" y="245" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="64.29" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="129.2" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.19" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (6 samples, 0.18%; 0.00%)</title><rect x="76.1" y="357" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="52.6" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.62" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%; +0.03%)</title><rect x="622.6" y="1685" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="625.57" y="1695.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_initial_partition_key_restrictions (1 samples, 0.03%; +0.03%)</title><rect x="102.1" y="1685" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="105.10" y="1695.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.74" y="1711.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.1" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.09" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.03%; +0.03%)</title><rect x="78.6" y="373" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="81.63" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.14" y="1487.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.69" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (1 samples, 0.03%; 0.00%)</title><rect x="629.4" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="632.44" y="1695.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="50.8" y="437" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="53.81" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="12.9" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.89" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="95.6" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.60" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="57.3" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.32" y="335.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; +0.03%)</title><rect x="479.2" y="1717" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="482.18" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1061" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.52" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.44" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::when_all_state_component&lt;seastar::future&lt;void&gt; &gt;::run_and_dispose (1 samples, 0.03%; 0.00%)</title><rect x="877.6" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="880.57" y="1823.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (1 samples, 0.03%; 0.00%)</title><rect x="145.8" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.81" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.25" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%; 0.00%)</title><rect x="858.1" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.07" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_node (1 samples, 0.03%; 0.00%)</title><rect x="21.2" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.20" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (9 samples, 0.28%; +0.06%)</title><rect x="71.0" y="453" width="3.3" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="74.04" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::selectClause (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1189" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1199.5" >[unknown]</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.25" y="335.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1 samples, 0.03%; +0.03%)</title><rect x="33.8" y="277" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="36.84" y="287.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.03%; +0.03%)</title><rect x="206.5" y="1781" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="209.49" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::resize (1 samples, 0.03%; 0.00%)</title><rect x="1157.5" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.49" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="11.8" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.81" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.30" y="1567.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (6 samples, 0.18%; 0.00%)</title><rect x="68.2" y="389" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.15" y="399.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_stream (2 samples, 0.06%; +0.03%)</title><rect x="447.0" y="1733" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="450.04" y="1743.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (5 samples, 0.15%; -0.03%)</title><rect x="679.3" y="1797" width="1.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="682.28" y="1807.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (38 samples, 1.16%; +0.03%)</title><rect x="902.9" y="1685" width="13.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="905.86" y="1695.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (1 samples, 0.03%; -0.03%)</title><rect x="410.9" y="1637" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="413.92" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.12%; +0.12%)</title><rect x="228.5" y="1781" width="1.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="231.52" y="1791.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (5 samples, 0.15%; +0.03%)</title><rect x="734.9" y="1797" width="1.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="737.90" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="95.6" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.60" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%; 0.00%)</title><rect x="120.5" y="1413" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.52" y="1423.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (6 samples, 0.18%; 0.00%)</title><rect x="1113.8" y="1605" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.79" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (9 samples, 0.28%; +0.03%)</title><rect x="114.4" y="1557" width="3.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="117.38" y="1567.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; 0.00%)</title><rect x="561.5" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="564.53" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (207 samples, 6.34%; 0.00%)</title><rect x="14.0" y="677" width="74.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.97" y="687.5" >std::_Fu..</text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="663.7" y="1685" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="666.75" y="1695.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.03%; +0.03%)</title><rect x="577.4" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="580.43" y="1759.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="148.7" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.70" y="1839.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.03%; +0.03%)</title><rect x="759.8" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="762.83" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="53.0" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.98" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (2 samples, 0.06%; +0.06%)</title><rect x="37.8" y="405" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="40.81" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.00" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="112.6" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.58" y="1487.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::index_impl (1 samples, 0.03%; +0.03%)</title><rect x="31.7" y="373" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="34.67" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (6 samples, 0.18%; 0.00%)</title><rect x="76.1" y="341" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; +0.06%)</title><rect x="768.1" y="1797" width="0.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="771.13" y="1807.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; 0.00%)</title><rect x="699.5" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="702.51" y="1807.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_type (1 samples, 0.03%; +0.03%)</title><rect x="101.4" y="1045" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="104.38" y="1055.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; 0.00%)</title><rect x="999.3" y="1605" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1002.29" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1743.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; +0.03%)</title><rect x="872.9" y="1749" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="875.88" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="73.6" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.57" y="287.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1125" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1135.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (1 samples, 0.03%; 0.00%)</title><rect x="148.0" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.97" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (92 samples, 2.82%; 0.00%)</title><rect x="16.5" y="517" width="33.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.50" y="527.5" >an..</text>
</g>
<g >
<title>locator::token_metadata::first_token (6 samples, 0.18%; +0.18%)</title><rect x="1082.4" y="1621" width="2.1" height="15.0" fill="rgb(255,143,143)" rx="2" ry="2" />
<text  x="1085.37" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="869" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="879.5" >[unknown]</text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="89.8" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.82" y="463.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.15%; +0.12%)</title><rect x="333.3" y="1637" width="1.8" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="336.26" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.25" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="185.5" y="1573" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="188.54" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="90.2" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.18" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (12 samples, 0.37%; 0.00%)</title><rect x="95.2" y="581" width="4.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.24" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="953.8" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="956.78" y="1727.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.03%)</title><rect x="763.4" y="1781" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="766.44" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1413" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1423.5" >[unknown]</text>
</g>
<g >
<title>std::operator== (1 samples, 0.03%; +0.03%)</title><rect x="49.4" y="421" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="52.37" y="431.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="118.0" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.00" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="90.2" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.18" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.14" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; -0.03%)</title><rect x="1144.9" y="1797" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1147.85" y="1807.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (3 samples, 0.09%; 0.00%)</title><rect x="187.0" y="1813" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.98" y="1823.5" ></text>
</g>
<g >
<title>query::querier_base::close (72 samples, 2.20%; -0.06%)</title><rect x="547.1" y="1765" width="26.0" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="550.09" y="1775.5" >q..</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.7" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.68" y="415.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (3 samples, 0.09%; +0.03%)</title><rect x="359.3" y="1605" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="362.27" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="131.7" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.72" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.18%; -0.09%)</title><rect x="787.3" y="1781" width="2.1" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="790.28" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="63.1" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.09" y="287.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.03%; +0.03%)</title><rect x="209.7" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="212.74" y="1791.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_dcd3199037457158f6e2516231906d04f9637da6] (1 samples, 0.03%; +0.03%)</title><rect x="858.8" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="861.79" y="1711.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (2 samples, 0.06%; -0.06%)</title><rect x="560.8" y="1685" width="0.7" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="563.81" y="1695.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (2 samples, 0.06%; -0.06%)</title><rect x="1060.3" y="1653" width="0.8" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="1063.33" y="1663.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.12%; 0.00%)</title><rect x="825.9" y="1717" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="828.92" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1455.5" ></text>
</g>
<g >
<title>row_cache::invalidate (1 samples, 0.03%; 0.00%)</title><rect x="750.4" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.43" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="994.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="997.60" y="1663.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (1 samples, 0.03%; +0.03%)</title><rect x="368.7" y="1589" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="371.66" y="1599.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="137.5" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.50" y="1887.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (361 samples, 11.05%; -0.03%)</title><rect x="954.1" y="1717" width="130.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="957.14" y="1727.5" >service::storage..</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (2 samples, 0.06%; 0.00%)</title><rect x="99.9" y="629" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="639.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%; 0.00%)</title><rect x="831.7" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="834.70" y="1711.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="67.1" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.07" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (28 samples, 0.86%; +0.03%)</title><rect x="726.6" y="1813" width="10.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="729.60" y="1823.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (299 samples, 9.15%; -0.12%)</title><rect x="317.7" y="1685" width="108.0" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="320.73" y="1695.5" >partition_sna..</text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;2ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="121.2" y="1237" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.25" y="1247.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::attributes::raw&gt;, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="85.5" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.49" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.21%; -0.03%)</title><rect x="959.9" y="1669" width="2.6" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="962.92" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="118.4" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.36" y="1551.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.09%; +0.06%)</title><rect x="694.5" y="1797" width="1.0" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="697.45" y="1807.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="780.8" y="1765" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="783.77" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1109" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1119.5" >[unknown]</text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.03%)</title><rect x="736.3" y="1781" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="739.35" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (3 samples, 0.09%; 0.00%)</title><rect x="96.3" y="549" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.32" y="559.5" ></text>
</g>
<g >
<title>handle_intel.constprop.0 (1 samples, 0.03%; +0.03%)</title><rect x="1173.4" y="1941" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1176.39" y="1951.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="88.7" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="527.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (1 samples, 0.03%; 0.00%)</title><rect x="148.0" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.97" y="1855.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.03%; +0.03%)</title><rect x="879.7" y="1637" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="882.74" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.03%; +0.03%)</title><rect x="177.6" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="180.59" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::unaliasedSelector (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1599.5" ></text>
</g>
<g >
<title>validation::validate_column_family (16 samples, 0.49%; +0.03%)</title><rect x="858.4" y="1717" width="5.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="861.43" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1093" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1103.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="19.0" y="277" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="22.03" y="287.5" ></text>
</g>
<g >
<title>sstring_hash::operator (3 samples, 0.09%; +0.06%)</title><rect x="1059.3" y="1637" width="1.0" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1062.25" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="114.7" y="1525" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="117.74" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="60.6" y="405" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.57" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="130.3" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.28" y="1471.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="399.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,787 samples, 85.31%; 0.00%)</title><rect x="151.2" y="1909" width="1006.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.22" y="1919.5" >seastar::app_template::run</text>
</g>
<g >
<title>operator delete (4 samples, 0.12%; +0.03%)</title><rect x="745.0" y="1797" width="1.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="748.02" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (3 samples, 0.09%; +0.09%)</title><rect x="944.4" y="1669" width="1.1" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="947.39" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.52" y="335.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1471.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="131.7" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.72" y="1631.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; -0.06%)</title><rect x="175.4" y="1749" width="0.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="178.42" y="1759.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1189" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1199.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="130.3" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.28" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; +0.03%)</title><rect x="80.1" y="357" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="83.07" y="367.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; 0.00%)</title><rect x="766.0" y="1797" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="768.97" y="1807.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%; +0.03%)</title><rect x="656.9" y="1701" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="659.89" y="1711.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;column_definition const*, std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt;, std::_Select1st&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt;, cql3::restrictions::single_column_restrictions::column_definition_comparator, std::allocator&lt;std::pair&lt;column_definition const* const, seastar::shared_ptr&lt;cql3::restrictions::single_column_restriction&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (1 samples, 0.03%; +0.03%)</title><rect x="104.3" y="1605" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="107.27" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.03%; -0.03%)</title><rect x="319.5" y="1653" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="322.54" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="121.6" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.61" y="1423.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="73.6" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.57" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="69" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="79.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="188.8" y="1813" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.79" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1503.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%; +0.03%)</title><rect x="145.4" y="1845" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="148.45" y="1855.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="112.6" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.58" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="901" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="911.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (1 samples, 0.03%; 0.00%)</title><rect x="156.6" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.64" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1845" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1855.5" >[unknown]</text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; +0.03%)</title><rect x="940.1" y="1701" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="943.06" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.15%; +0.03%)</title><rect x="794.5" y="1733" width="1.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="797.50" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.95" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1471.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (5 samples, 0.15%; 0.00%)</title><rect x="29.5" y="389" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.50" y="399.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.69" y="1823.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (1 samples, 0.03%; 0.00%)</title><rect x="780.1" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="783.05" y="1807.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_mutations_locally (1 samples, 0.03%; 0.00%)</title><rect x="186.6" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.62" y="1743.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="54.1" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.06" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.03%; +0.03%)</title><rect x="546.7" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="549.72" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.12%)</title><rect x="722.3" y="1781" width="0.3" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="725.26" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (6 samples, 0.18%; +0.06%)</title><rect x="175.8" y="1749" width="2.2" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="178.79" y="1759.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.12%; -0.03%)</title><rect x="1143.0" y="1797" width="1.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1146.05" y="1807.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="866.0" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="869.01" y="1711.5" ></text>
</g>
<g >
<title>_Unwind_Find_FDE (1 samples, 0.03%; 0.00%)</title><rect x="138.9" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.94" y="1935.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::mutate_locally (1 samples, 0.03%; +0.03%)</title><rect x="154.5" y="1829" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="157.48" y="1839.5" ></text>
</g>
<g >
<title>mutation_partition::accept (1 samples, 0.03%; 0.00%)</title><rect x="186.3" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.26" y="1695.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (3 samples, 0.09%; +0.09%)</title><rect x="329.7" y="1637" width="1.0" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="332.65" y="1647.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.00" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="131.7" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.72" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.91" y="1375.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="964.6" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="967.62" y="1599.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (11 samples, 0.34%; +0.21%)</title><rect x="675.3" y="1765" width="4.0" height="15.0" fill="rgb(255,132,132)" rx="2" ry="2" />
<text  x="678.31" y="1775.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="137.5" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.50" y="1839.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.40%; +0.15%)</title><rect x="565.5" y="1717" width="4.7" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="568.51" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1637" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1647.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="58.8" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.76" y="383.5" ></text>
</g>
<g >
<title>make_combined_reader (37 samples, 1.13%; -0.12%)</title><rect x="587.9" y="1717" width="13.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="590.90" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1701" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1711.5" >[unknown]</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="125.9" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.94" y="1471.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="135.0" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.97" y="1567.5" ></text>
</g>
<g >
<title>seastar::fair_queue::dispatch_requests (1 samples, 0.03%; +0.03%)</title><rect x="1156.4" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1159.41" y="1807.5" ></text>
</g>
<g >
<title>table::query (2 samples, 0.06%; 0.00%)</title><rect x="1155.3" y="1813" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.33" y="1823.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="21.2" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.20" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="723.7" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="726.71" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="130.3" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.28" y="1647.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="90.2" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.18" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="111.1" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.13" y="1519.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (8 samples, 0.24%; -0.03%)</title><rect x="1170.1" y="1925" width="2.9" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1173.13" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="132.8" y="1365" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="135.80" y="1375.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="137.5" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.50" y="1903.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.21%; -0.03%)</title><rect x="574.9" y="1749" width="2.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="577.90" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; +0.03%)</title><rect x="60.9" y="293" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="63.93" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false, false&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="53.7" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.70" y="431.5" ></text>
</g>
<g >
<title>memtable::apply (13 samples, 0.40%; +0.03%)</title><rect x="1106.6" y="1685" width="4.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1109.57" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="845.1" y="1637" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="848.07" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.1" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.09" y="239.5" ></text>
</g>
<g >
<title>database::find_keyspace (6 samples, 0.18%; -0.03%)</title><rect x="1058.2" y="1653" width="2.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1061.17" y="1663.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.15%; +0.12%)</title><rect x="192.8" y="1797" width="1.8" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="195.76" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt;, true, true&gt;::__uniq_ptr_impl (2 samples, 0.06%; 0.00%)</title><rect x="85.5" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.49" y="479.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1445" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1455.5" >[unknown]</text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (1 samples, 0.03%; +0.03%)</title><rect x="1155.7" y="1765" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1158.69" y="1775.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN4cql34expr10expressionEEER18overloaded_functorIJZNS5_18prepare_expressionERKS6_R8databaseRKN7seastar13basic_sstringIcjLj15ELb1EEENSD_13lw_shared_ptrINS4_20column_specificationEEEE3$_0ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_1ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_2ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_3ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_4ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_5ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_6ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_7ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_8ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_9ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_10ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_11ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_12ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_13ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_14ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_15EERSt7variantIJNS5_11conjunctionENS5_15binary_operatorENS5_12column_valueENS5_5tokenENS5_21unresolved_identifierENS5_25column_mutation_attributeENS5_13function_callENS5_4castENS5_15field_selectionENS5_4nullENS5_13bind_variableENS5_16untyped_constantENS5_8constantENS5_17tuple_constructorENS5_22collection_constructorENS5_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES12_S1L_ (3 samples, 0.09%; 0.00%)</title><rect x="92.7" y="533" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.71" y="543.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="866.0" y="1685" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="869.01" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (7 samples, 0.21%; +0.03%)</title><rect x="75.7" y="389" width="2.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="78.74" y="399.5" ></text>
</g>
<g >
<title>create_partitions (9 samples, 0.28%; 0.00%)</title><rect x="88.7" y="661" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="671.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="123.1" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.05" y="1583.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (1 samples, 0.03%; +0.03%)</title><rect x="929.6" y="1701" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="932.58" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="473.8" y="1669" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="476.76" y="1679.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (2 samples, 0.06%; +0.06%)</title><rect x="358.5" y="1605" width="0.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="361.55" y="1615.5" ></text>
</g>
<g >
<title>create_partitions (2 samples, 0.06%; 0.00%)</title><rect x="99.9" y="693" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="703.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::~_Optional_payload (1 samples, 0.03%; -0.03%)</title><rect x="136.4" y="1573" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="139.42" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="127.0" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.02" y="1551.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (134 samples, 4.10%; +0.09%)</title><rect x="1000.7" y="1637" width="48.4" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="1003.74" y="1647.5" >serv..</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; +0.03%)</title><rect x="690.1" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="693.12" y="1807.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (3 samples, 0.09%; +0.06%)</title><rect x="273.7" y="1749" width="1.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="276.67" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="230.3" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="233.32" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1077" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1087.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (3 samples, 0.09%; +0.09%)</title><rect x="347.0" y="1605" width="1.1" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="349.99" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.1" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.13" y="1343.5" ></text>
</g>
<g >
<title>service::client_state::has_access (4 samples, 0.12%; 0.00%)</title><rect x="108.2" y="1733" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.24" y="1743.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (6 samples, 0.18%; -0.03%)</title><rect x="1113.8" y="1621" width="2.2" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1116.79" y="1631.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; +0.03%)</title><rect x="750.4" y="1653" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="753.43" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1519.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, false, false&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="53.7" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.70" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (1 samples, 0.03%; +0.03%)</title><rect x="99.6" y="629" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="102.57" y="639.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="135.0" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.97" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;5ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1375.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (1 samples, 0.03%; +0.03%)</title><rect x="1105.1" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1108.12" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.03%; 0.00%)</title><rect x="89.5" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.46" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="230.0" y="1781" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="232.96" y="1791.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::sharded&lt;database&gt;::stop (1 samples, 0.03%; 0.00%)</title><rect x="751.5" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.52" y="1823.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (84 samples, 2.57%; +0.18%)</title><rect x="1122.1" y="1813" width="30.3" height="15.0" fill="rgb(255,143,143)" rx="2" ry="2" />
<text  x="1125.10" y="1823.5" >se..</text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.06%)</title><rect x="868.9" y="1749" width="0.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="871.90" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.15%; -0.06%)</title><rect x="718.3" y="1781" width="1.8" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="721.29" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (47 samples, 1.44%; 0.00%)</title><rect x="112.6" y="1621" width="17.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.58" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="111.5" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.49" y="1487.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="73.6" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.57" y="271.5" ></text>
</g>
<g >
<title>mutation_querier::consume (95 samples, 2.91%; -0.09%)</title><rect x="481.0" y="1701" width="34.3" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="483.99" y="1711.5" >mu..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (1 samples, 0.03%; 0.00%)</title><rect x="1155.3" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.33" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (34 samples, 1.04%; +0.09%)</title><rect x="903.2" y="1669" width="12.3" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="906.22" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="11.8" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.81" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="367.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (1 samples, 0.03%; 0.00%)</title><rect x="186.6" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.62" y="1823.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (2 samples, 0.06%; 0.00%)</title><rect x="356.4" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="359.38" y="1599.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (2 samples, 0.06%; 0.00%)</title><rect x="124.5" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.50" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="191.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_role_statement, std::default_delete&lt;cql3::statements::create_role_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="97.4" y="549" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="100.41" y="559.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (7 samples, 0.21%; +0.03%)</title><rect x="119.8" y="1573" width="2.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="122.80" y="1583.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="321.3" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="324.34" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="789.8" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="792.80" y="1807.5" ></text>
</g>
<g >
<title>database::query (70 samples, 2.14%; +0.12%)</title><rect x="1017.4" y="1589" width="25.2" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1020.35" y="1599.5" >d..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="21.9" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.92" y="303.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (22 samples, 0.67%; 0.00%)</title><rect x="101.7" y="1845" width="8.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.74" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1605" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1615.5" >[unknown]</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (5 samples, 0.15%; 0.00%)</title><rect x="145.8" y="1813" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.81" y="1823.5" ></text>
</g>
<g >
<title>posix_memalign (1 samples, 0.03%; 0.00%)</title><rect x="879.4" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.38" y="1599.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (4 samples, 0.12%; +0.06%)</title><rect x="662.3" y="1685" width="1.4" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="665.30" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (7 samples, 0.21%; 0.00%)</title><rect x="79.3" y="405" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.35" y="415.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="955.2" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="958.23" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="463.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_dcd3199037457158f6e2516231906d04f9637da6] (1 samples, 0.03%; +0.03%)</title><rect x="588.3" y="1701" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="591.26" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.4" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.41" y="1407.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="715.4" y="1781" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="718.40" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.06%; 0.00%)</title><rect x="29.9" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.87" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="133.5" y="1589" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="136.53" y="1599.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (48 samples, 1.47%; 0.00%)</title><rect x="835.7" y="1669" width="17.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="838.67" y="1679.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.03%; -0.09%)</title><rect x="524.0" y="1717" width="0.3" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="526.97" y="1727.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (1 samples, 0.03%; 0.00%)</title><rect x="187.7" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.70" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="527.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (202 samples, 6.18%; 0.00%)</title><rect x="14.7" y="581" width="73.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="591.5" >cql3::ut..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="78.3" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.26" y="399.5" ></text>
</g>
<g >
<title>_IO_setb (1 samples, 0.03%; +0.03%)</title><rect x="150.9" y="1941" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="153.86" y="1951.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; +0.03%)</title><rect x="109.7" y="1797" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="112.69" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (4 samples, 0.12%; 0.00%)</title><rect x="123.8" y="1605" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.77" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::configure (1 samples, 0.03%; 0.00%)</title><rect x="1157.5" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.49" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.30" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.52%; +0.15%)</title><rect x="1023.1" y="1557" width="6.2" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="1026.13" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="112.6" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.58" y="1535.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%; +0.03%)</title><rect x="1062.9" y="1637" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1065.86" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="24.1" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.09" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (5 samples, 0.15%; 0.00%)</title><rect x="76.1" y="309" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (11 samples, 0.34%; +0.03%)</title><rect x="17.2" y="357" width="4.0" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="20.22" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (22 samples, 0.67%; 0.00%)</title><rect x="101.7" y="1861" width="8.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.74" y="1871.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (8 samples, 0.24%; 0.00%)</title><rect x="11.1" y="677" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="687.5" ></text>
</g>
<g >
<title>seastar::internal::repeat_until_value_state&lt;cql3::query_processor::for_each_cql_result (1 samples, 0.03%; 0.00%)</title><rect x="877.2" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="880.21" y="1823.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="13.3" y="309" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="16.25" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1,361 samples, 41.66%; -0.06%)</title><rect x="189.5" y="1813" width="491.6" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="192.51" y="1823.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="131.7" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.72" y="1519.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (1 samples, 0.03%; -0.06%)</title><rect x="548.5" y="1717" width="0.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="551.53" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="115.5" y="1285" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.47" y="1295.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%; +0.03%)</title><rect x="365.8" y="1573" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="368.77" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (54 samples, 1.65%; +0.03%)</title><rect x="64.9" y="469" width="19.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="67.90" y="479.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.7" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.68" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1173" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1183.5" ></text>
</g>
<g >
<title>database::has_keyspace (3 samples, 0.09%; +0.03%)</title><rect x="867.8" y="1765" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="870.82" y="1775.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; +0.06%)</title><rect x="843.6" y="1653" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="846.62" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.30" y="1535.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.03%; +0.03%)</title><rect x="768.9" y="1797" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="771.86" y="1807.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.18%; +0.03%)</title><rect x="262.5" y="1765" width="2.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="265.47" y="1775.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.09%; -0.18%)</title><rect x="542.0" y="1669" width="1.1" height="15.0" fill="rgb(143,143,255)" rx="2" ry="2" />
<text  x="545.03" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1477" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1487.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.09%)</title><rect x="167.8" y="1797" width="0.4" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="170.84" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.03%; +0.03%)</title><rect x="1044.8" y="1525" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1047.80" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="90.5" y="453" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="93.54" y="463.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (1 samples, 0.03%; +0.03%)</title><rect x="805.3" y="1765" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="808.34" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; +0.03%)</title><rect x="86.2" y="501" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="89.21" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (4 samples, 0.12%; 0.00%)</title><rect x="123.8" y="1557" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.77" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.03%; +0.03%)</title><rect x="194.6" y="1797" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="197.57" y="1807.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.03%; +0.03%)</title><rect x="145.1" y="1845" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="148.08" y="1855.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.18%; +0.03%)</title><rect x="51.2" y="485" width="2.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="54.18" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (8 samples, 0.24%; 0.00%)</title><rect x="11.1" y="501" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="131.7" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.72" y="1567.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (18 samples, 0.55%; -0.09%)</title><rect x="564.1" y="1733" width="6.5" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="567.06" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="12.5" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.53" y="383.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (2 samples, 0.06%; 0.00%)</title><rect x="882.6" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="885.63" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.03%; +0.03%)</title><rect x="55.9" y="485" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="58.87" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (2 samples, 0.06%; +0.06%)</title><rect x="778.6" y="1781" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="781.61" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.03%)</title><rect x="869.6" y="1765" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="872.63" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1391.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="124.9" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.86" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="789" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="799.5" ></text>
</g>
<g >
<title>database::query (1 samples, 0.03%; +0.03%)</title><rect x="1006.2" y="1605" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1009.16" y="1615.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.69" y="1919.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (429 samples, 13.13%; 0.00%)</title><rect x="280.9" y="1749" width="154.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="283.89" y="1759.5" >flat_mutation_reade..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; +0.03%)</title><rect x="995.0" y="1653" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="997.96" y="1663.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (1 samples, 0.03%; +0.03%)</title><rect x="151.9" y="1829" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="154.95" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="69.2" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.23" y="207.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; +0.03%)</title><rect x="66.3" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="69.35" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::~_Optional_base (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.42" y="1599.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="131.0" y="1461" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="134.00" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="124.9" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.86" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.95" y="463.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (2 samples, 0.06%; +0.06%)</title><rect x="448.1" y="1733" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="451.12" y="1743.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (14 samples, 0.43%; 0.00%)</title><rect x="1112.7" y="1797" width="5.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.71" y="1807.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="11.4" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.44" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (2 samples, 0.06%; 0.00%)</title><rect x="103.9" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.91" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%; 0.00%)</title><rect x="20.5" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.47" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="112.6" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.58" y="1583.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (1 samples, 0.03%; +0.03%)</title><rect x="417.1" y="1637" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="420.06" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="57.3" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.32" y="415.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.62%; 0.00%)</title><rect x="11.1" y="1301" width="89.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1311.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="69.6" y="245" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="72.60" y="255.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="750.4" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.43" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (2 samples, 0.06%; +0.06%)</title><rect x="563.3" y="1717" width="0.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="566.34" y="1727.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="167.1" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="170.12" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="111.1" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.13" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="949" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="959.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_super (1 samples, 0.03%; +0.03%)</title><rect x="27.3" y="421" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="30.34" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="82.6" y="341" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="85.60" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (7 samples, 0.21%; 0.00%)</title><rect x="71.8" y="421" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.76" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.04" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (11 samples, 0.34%; +0.09%)</title><rect x="397.9" y="1525" width="4.0" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="400.92" y="1535.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; +0.03%)</title><rect x="49.7" y="517" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="52.73" y="527.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="71.8" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.76" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (1 samples, 0.03%; 0.00%)</title><rect x="888.0" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="891.05" y="1791.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_bound_terms (1 samples, 0.03%; 0.00%)</title><rect x="796.3" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="799.31" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="757" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="767.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="63.8" y="309" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.82" y="319.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="751.5" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.52" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="674.9" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="677.95" y="1775.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_M_destroy (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.42" y="1551.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.03%; +0.03%)</title><rect x="56.2" y="485" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="59.23" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="12.5" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.53" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="127.0" y="1493" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.02" y="1503.5" ></text>
</g>
<g >
<title>__start_context (207 samples, 6.34%; 0.00%)</title><rect x="14.0" y="725" width="74.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.97" y="735.5" >__start_..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="256.7" y="1765" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="259.69" y="1775.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (1 samples, 0.03%; +0.03%)</title><rect x="153.4" y="1829" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="156.39" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="869" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="879.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.03%; +0.03%)</title><rect x="148.7" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="151.70" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.95" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="127.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; 0.00%)</title><rect x="68.9" y="261" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.87" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="90.9" y="453" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="93.91" y="463.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1839.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1 samples, 0.03%; +0.03%)</title><rect x="1156.0" y="1829" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1159.05" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (92 samples, 2.82%; 0.00%)</title><rect x="16.5" y="501" width="33.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.50" y="511.5" >an..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.30" y="1471.5" ></text>
</g>
<g >
<title>db::block_for (2 samples, 0.06%; +0.03%)</title><rect x="1060.3" y="1637" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1063.33" y="1647.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.12%; 0.00%)</title><rect x="998.9" y="1637" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1001.93" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1647.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 1.35%; 0.00%)</title><rect x="1173.7" y="1941" width="15.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1176.75" y="1951.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="89.5" y="341" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="92.46" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::construct&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="55.5" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.51" y="447.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; -0.03%)</title><rect x="1093.6" y="1733" width="1.0" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1096.56" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="63.8" y="341" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.82" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (194 samples, 5.94%; 0.00%)</title><rect x="16.5" y="533" width="70.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.50" y="543.5" >cql3_pa..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; +0.03%)</title><rect x="132.1" y="1461" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="135.08" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="271.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (2 samples, 0.06%; 0.00%)</title><rect x="1121.0" y="1813" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1124.01" y="1823.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; 0.00%)</title><rect x="687.2" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="690.23" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (11 samples, 0.34%; 0.00%)</title><rect x="125.6" y="1605" width="4.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.58" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="127.0" y="1509" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.02" y="1519.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;fragment_range&lt;managed_bytes_basic_view&lt; (2 samples, 0.06%; 0.00%)</title><rect x="879.0" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.02" y="1631.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::alter_role_statement*, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="98.1" y="501" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="101.13" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (2 samples, 0.06%; 0.00%)</title><rect x="89.1" y="517" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.10" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.66" y="1471.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (5 samples, 0.15%; +0.03%)</title><rect x="402.2" y="1573" width="1.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="405.25" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1573" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1583.5" >[unknown]</text>
</g>
<g >
<title>cql3::query_processor::execute_direct (9 samples, 0.28%; 0.00%)</title><rect x="88.7" y="629" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="639.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.21%; +0.03%)</title><rect x="1042.6" y="1589" width="2.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1045.64" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="853" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="863.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (6 samples, 0.18%; 0.00%)</title><rect x="76.1" y="373" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::update_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="86.9" y="533" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="89.93" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="63.8" y="213" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="66.82" y="223.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (2 samples, 0.06%; 0.00%)</title><rect x="187.0" y="1765" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.98" y="1775.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (8 samples, 0.24%; 0.00%)</title><rect x="114.7" y="1541" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.74" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1029" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1039.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.7" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.68" y="383.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (22 samples, 0.67%; 0.00%)</title><rect x="92.0" y="661" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.99" y="671.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="54.1" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.06" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.00" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (9 samples, 0.28%; 0.00%)</title><rect x="878.7" y="1669" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="881.66" y="1679.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (16 samples, 0.49%; 0.00%)</title><rect x="114.0" y="1573" width="5.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.02" y="1583.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.03%; 0.00%)</title><rect x="1173.0" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1176.02" y="1951.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="54.1" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.06" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (11 samples, 0.34%; 0.00%)</title><rect x="119.8" y="1589" width="4.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.80" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (9 samples, 0.28%; 0.00%)</title><rect x="88.7" y="533" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="543.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.03%)</title><rect x="750.8" y="1797" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="753.80" y="1807.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (3 samples, 0.09%; 0.00%)</title><rect x="749.0" y="1797" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="751.99" y="1807.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.39" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="53" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="63.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="805" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="815.5" >[unknown]</text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.06%; 0.00%)</title><rect x="111.9" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.85" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1295.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (76 samples, 2.33%; 0.00%)</title><rect x="110.0" y="1781" width="27.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1791.5" >c..</text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="335.1" y="1637" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="338.07" y="1647.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.18%; 0.00%)</title><rect x="796.7" y="1781" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="799.67" y="1791.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="109.3" y="1669" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="112.33" y="1679.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; -0.03%)</title><rect x="714.3" y="1765" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="717.32" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.25" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.03%)</title><rect x="479.5" y="1701" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="482.54" y="1711.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="750.4" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.43" y="1711.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (260 samples, 7.96%; +0.24%)</title><rect x="782.2" y="1813" width="93.9" height="15.0" fill="rgb(255,121,121)" rx="2" ry="2" />
<text  x="785.22" y="1823.5" >seastar::in..</text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%; +0.03%)</title><rect x="50.1" y="517" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="53.09" y="527.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="906.8" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="909.83" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (1 samples, 0.03%; 0.00%)</title><rect x="89.5" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.46" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (8 samples, 0.24%; 0.00%)</title><rect x="11.1" y="517" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned int&gt;::_Rb_tree_iterator (1 samples, 0.03%; +0.03%)</title><rect x="49.0" y="421" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="52.01" y="431.5" ></text>
</g>
<g >
<title>__libc_start_main (2,787 samples, 85.31%; 0.00%)</title><rect x="151.2" y="1941" width="1006.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.22" y="1951.5" >__libc_start_main</text>
</g>
<g >
<title>mutation_reader_merger::operator (360 samples, 11.02%; -0.18%)</title><rect x="295.7" y="1701" width="130.0" height="15.0" fill="rgb(143,143,255)" rx="2" ry="2" />
<text  x="298.70" y="1711.5" >mutation_reader_..</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1013" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="89.8" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.82" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="23.4" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.36" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="11.4" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.44" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::get_deleter (1 samples, 0.03%; +0.03%)</title><rect x="134.6" y="1605" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="137.61" y="1615.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (3 samples, 0.09%; 0.00%)</title><rect x="63.8" y="229" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.82" y="239.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.00" y="1647.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (23 samples, 0.70%; +0.09%)</title><rect x="1085.3" y="1733" width="8.3" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="1088.26" y="1743.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.18%; 0.00%)</title><rect x="258.1" y="1749" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="261.14" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="232.5" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="235.49" y="1791.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (33 samples, 1.01%; -0.15%)</title><rect x="1029.3" y="1573" width="11.9" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="1032.27" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (3 samples, 0.09%; 0.00%)</title><rect x="131.4" y="1653" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.36" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (4 samples, 0.12%; 0.00%)</title><rect x="68.5" y="309" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.51" y="319.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (20 samples, 0.61%; +0.03%)</title><rect x="1105.5" y="1797" width="7.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1108.48" y="1807.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; 0.00%)</title><rect x="660.1" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="663.14" y="1695.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1125" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1135.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="117.3" y="1413" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="120.27" y="1423.5" ></text>
</g>
<g >
<title>sstables::metadata_collector::update_min_max_components (1 samples, 0.03%; +0.03%)</title><rect x="137.5" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="140.50" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7 samples, 0.21%; 0.00%)</title><rect x="17.9" y="325" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.95" y="335.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; +0.03%)</title><rect x="732.0" y="1797" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="735.01" y="1807.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (17 samples, 0.52%; +0.09%)</title><rect x="517.8" y="1717" width="6.2" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="520.83" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="89.5" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.46" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%; +0.03%)</title><rect x="724.1" y="1797" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="727.07" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="12.5" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.53" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator* (1 samples, 0.03%; +0.03%)</title><rect x="57.3" y="309" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="60.32" y="319.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (6 samples, 0.18%; -0.09%)</title><rect x="141.5" y="1893" width="2.1" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="144.47" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="915.1" y="1637" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="918.14" y="1647.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (1 samples, 0.03%; 0.00%)</title><rect x="14.7" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="495.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1877" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1887.5" >[unknown]</text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (3 samples, 0.09%; 0.00%)</title><rect x="63.8" y="245" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.82" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="76.5" y="245" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.46" y="255.5" ></text>
</g>
<g >
<title>[unknown] (249 samples, 7.62%; 0.00%)</title><rect x="11.1" y="1333" width="89.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1343.5" >[unknown]</text>
</g>
<g >
<title>query_state::query_state (18 samples, 0.55%; +0.24%)</title><rect x="666.3" y="1765" width="6.5" height="15.0" fill="rgb(255,121,121)" rx="2" ry="2" />
<text  x="669.28" y="1775.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="57.3" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.32" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="102.8" y="1621" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="105.83" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (17 samples, 0.52%; 0.00%)</title><rect x="695.5" y="1813" width="6.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="698.53" y="1823.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (665 samples, 20.36%; 0.00%)</title><rect x="877.9" y="1813" width="240.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="880.93" y="1823.5" >seastar::lambda_task&lt;seastar::e..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.02" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (3 samples, 0.09%; 0.00%)</title><rect x="110.8" y="1541" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.77" y="1551.5" ></text>
</g>
<g >
<title>partition_entry::read (8 samples, 0.24%; +0.06%)</title><rect x="646.4" y="1701" width="2.9" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="649.41" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.06%; +0.03%)</title><rect x="125.6" y="1493" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="128.58" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="901" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="911.5" >[unknown]</text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="63.1" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.09" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (21 samples, 0.64%; 0.00%)</title><rect x="129.9" y="1685" width="7.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.91" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (60 samples, 1.84%; +0.03%)</title><rect x="25.2" y="437" width="21.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="28.17" y="447.5" >a..</text>
</g>
<g >
<title>std::allocator&lt;cql3::expr::expression&gt;::~allocator (1 samples, 0.03%; +0.03%)</title><rect x="113.7" y="1557" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="116.66" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;4ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="121.2" y="1269" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.25" y="1279.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="12.5" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.53" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (21 samples, 0.64%; +0.06%)</title><rect x="74.3" y="453" width="7.6" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="77.29" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (13 samples, 0.40%; +0.03%)</title><rect x="1113.1" y="1669" width="4.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1116.07" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="131.7" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.72" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="132.1" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.08" y="1615.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1 samples, 0.03%; -0.03%)</title><rect x="1108.0" y="1637" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1111.01" y="1647.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (29 samples, 0.89%; +0.21%)</title><rect x="769.6" y="1797" width="10.5" height="15.0" fill="rgb(255,132,132)" rx="2" ry="2" />
<text  x="772.58" y="1807.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (76 samples, 2.33%; 0.00%)</title><rect x="110.0" y="1749" width="27.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1759.5" >s..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (6 samples, 0.18%; -0.03%)</title><rect x="712.1" y="1749" width="2.2" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="715.15" y="1759.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (146 samples, 4.47%; +0.15%)</title><rect x="996.4" y="1653" width="52.7" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="999.40" y="1663.5" >servi..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="12.9" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="15.89" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.09%; +0.06%)</title><rect x="545.6" y="1749" width="1.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="548.64" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="121.2" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.25" y="1295.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.06%; 0.00%)</title><rect x="93.1" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.07" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="111.1" y="1317" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="114.13" y="1327.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="110.8" y="1589" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.77" y="1599.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (1 samples, 0.03%; 0.00%)</title><rect x="103.2" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.19" y="1679.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="121.6" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.61" y="1407.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::attach_service_level_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="86.2" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.21" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (2 samples, 0.06%; 0.00%)</title><rect x="995.7" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="998.68" y="1663.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (595 samples, 18.21%; -0.28%)</title><rect x="890.2" y="1749" width="214.9" height="15.0" fill="rgb(110,110,255)" rx="2" ry="2" />
<text  x="893.21" y="1759.5" >cql3::statements::select_sta..</text>
</g>
<g >
<title>cql3::query_options::~query_options (11 samples, 0.34%; 0.00%)</title><rect x="728.0" y="1797" width="4.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="731.04" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; +0.06%)</title><rect x="961.4" y="1653" width="1.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="964.37" y="1663.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; 0.00%)</title><rect x="321.0" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="323.98" y="1663.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.88" y="415.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (1 samples, 0.03%; +0.03%)</title><rect x="26.3" y="421" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="29.25" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (7 samples, 0.21%; +0.06%)</title><rect x="637.4" y="1669" width="2.5" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="640.38" y="1679.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (6 samples, 0.18%; +0.03%)</title><rect x="107.5" y="1749" width="2.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="110.52" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="128.8" y="1541" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="131.83" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (18 samples, 0.55%; -0.03%)</title><rect x="113.3" y="1605" width="6.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="116.30" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="51.9" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.90" y="447.5" ></text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (1 samples, 0.03%; 0.00%)</title><rect x="187.0" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.98" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="89.8" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.82" y="399.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.21%; +0.09%)</title><rect x="684.7" y="1797" width="2.5" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="687.70" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="130.3" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.28" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="159.5" ></text>
</g>
<g >
<title>posix_memalign (15 samples, 0.46%; +0.06%)</title><rect x="396.5" y="1541" width="5.4" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="399.47" y="1551.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (8 samples, 0.24%; 0.00%)</title><rect x="92.0" y="613" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.99" y="623.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (76 samples, 2.33%; 0.00%)</title><rect x="110.0" y="1877" width="27.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1887.5" >s..</text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.03%; +0.03%)</title><rect x="879.4" y="1573" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="882.38" y="1583.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (5 samples, 0.15%; +0.06%)</title><rect x="225.6" y="1749" width="1.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="228.63" y="1759.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="96.3" y="533" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="99.32" y="543.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1519.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="552.1" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="555.14" y="1695.5" ></text>
</g>
<g >
<title>row::external_memory_usage (1 samples, 0.03%; +0.03%)</title><rect x="147.3" y="1797" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="150.25" y="1807.5" ></text>
</g>
<g >
<title>std::_Enable_default_constructor&lt;true, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt;::_Enable_default_constructor (1 samples, 0.03%; +0.03%)</title><rect x="118.7" y="1541" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="121.72" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (3 samples, 0.09%; +0.03%)</title><rect x="33.1" y="309" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="36.12" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="997" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1007.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (92 samples, 2.82%; 0.00%)</title><rect x="16.5" y="485" width="33.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.50" y="495.5" >an..</text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (6 samples, 0.18%; -0.03%)</title><rect x="120.2" y="1461" width="2.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="123.16" y="1471.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="54.1" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.06" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="95.6" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.60" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; +0.03%)</title><rect x="72.5" y="357" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="75.49" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1669" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1679.5" >[unknown]</text>
</g>
<g >
<title>sstables::sstable::write_components (1 samples, 0.03%; 0.00%)</title><rect x="137.5" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.50" y="1919.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (1 samples, 0.03%; 0.00%)</title><rect x="148.0" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.97" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="60.2" y="293" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="63.21" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1 samples, 0.03%; -0.03%)</title><rect x="1189.6" y="1941" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1192.64" y="1951.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.09%; 0.00%)</title><rect x="110.8" y="1573" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.77" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (4 samples, 0.12%; 0.00%)</title><rect x="881.9" y="1701" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="884.91" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="84.0" y="453" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="87.04" y="463.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1205" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="123.1" y="1445" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.05" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.15%; +0.09%)</title><rect x="688.3" y="1797" width="1.8" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="691.31" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="175.4" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="178.42" y="1743.5" ></text>
</g>
<g >
<title>db::schema_tables::get_map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="185.2" y="1669" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="188.18" y="1679.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.12%; 0.00%)</title><rect x="647.5" y="1685" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="650.50" y="1695.5" ></text>
</g>
<g >
<title>do_cql_test (9 samples, 0.28%; 0.00%)</title><rect x="88.7" y="677" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="687.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="112.6" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.58" y="1599.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%; 0.00%)</title><rect x="1139.8" y="1797" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.79" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="102.8" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.83" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (3 samples, 0.09%; 0.00%)</title><rect x="60.6" y="437" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.57" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="11.4" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.44" y="447.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.03%; +0.03%)</title><rect x="20.5" y="293" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="23.47" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%; -0.03%)</title><rect x="139.3" y="1893" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="142.31" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="132.8" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1775.5" ></text>
</g>
<g >
<title>__start_context (8 samples, 0.24%; 0.00%)</title><rect x="11.1" y="709" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="719.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="59.5" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.48" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; -0.03%)</title><rect x="746.5" y="1797" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="749.46" y="1807.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (3 samples, 0.09%; 0.00%)</title><rect x="1107.6" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1110.65" y="1679.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (1 samples, 0.03%; +0.03%)</title><rect x="548.9" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="551.89" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="319.5" ></text>
</g>
<g >
<title>all (3,267 samples, 100%)</title><rect x="10.0" y="1973" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="686.5" y="1781" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="689.50" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (250 samples, 7.65%; 0.00%)</title><rect x="11.1" y="1349" width="90.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1359.5" >[unknown]</text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.03%; +0.03%)</title><rect x="150.1" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="153.14" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1519.5" ></text>
</g>
<g >
<title>std::__copy_move_a1&lt;false, char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="129.2" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.19" y="1535.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple&lt;cql3::operation::raw_update*&amp;, std::default_delete&lt;cql3::operation::set_value&gt;, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="83.7" y="421" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="86.68" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="12.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.53" y="367.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (3 samples, 0.09%; 0.00%)</title><rect x="185.2" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.18" y="1727.5" ></text>
</g>
<g >
<title>ser::deletable_row_view::key (1 samples, 0.03%; +0.03%)</title><rect x="1109.8" y="1653" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1112.82" y="1663.5" ></text>
</g>
<g >
<title>free (12 samples, 0.37%; +0.12%)</title><rect x="468.7" y="1669" width="4.3" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="471.71" y="1679.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (14 samples, 0.43%; +0.03%)</title><rect x="690.5" y="1813" width="5.0" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="693.48" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (5 samples, 0.15%; 0.00%)</title><rect x="12.2" y="485" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.17" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::stats (3 samples, 0.09%; +0.09%)</title><rect x="636.3" y="1653" width="1.1" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="639.30" y="1663.5" ></text>
</g>
<g >
<title>auth::get_permissions (2 samples, 0.06%; 0.00%)</title><rect x="109.0" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.97" y="1711.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="149.1" y="1349" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="152.06" y="1359.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="95.6" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.60" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="54.1" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.06" y="335.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (1 samples, 0.03%; 0.00%)</title><rect x="187.7" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.70" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; 0.00%)</title><rect x="352.4" y="1589" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="355.41" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (2 samples, 0.06%; 0.00%)</title><rect x="99.9" y="597" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; 0.00%)</title><rect x="32.8" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.75" y="351.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="580.7" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="583.68" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;5ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.4" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.41" y="1359.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="187.7" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.70" y="1647.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="883.4" y="1653" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="886.35" y="1663.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.09%)</title><rect x="857.0" y="1685" width="0.3" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="859.99" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="69.2" y="117" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="72.23" y="127.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (22 samples, 0.67%; +0.18%)</title><rect x="393.9" y="1557" width="8.0" height="15.0" fill="rgb(255,143,143)" rx="2" ry="2" />
<text  x="396.94" y="1567.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (1 samples, 0.03%; -0.03%)</title><rect x="776.4" y="1781" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="779.44" y="1791.5" ></text>
</g>
<g >
<title>auth::standard_role_manager::create_metadata_tables_if_missing (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (6 samples, 0.18%; 0.00%)</title><rect x="120.2" y="1525" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.16" y="1535.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="57.7" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.68" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="118.4" y="1525" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="121.36" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; 0.00%)</title><rect x="68.9" y="277" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.87" y="287.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (232 samples, 7.10%; +0.12%)</title><rect x="790.2" y="1797" width="83.8" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="793.17" y="1807.5" >single_no..</text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (7 samples, 0.21%; +0.21%)</title><rect x="40.3" y="389" width="2.6" height="15.0" fill="rgb(255,132,132)" rx="2" ry="2" />
<text  x="43.34" y="399.5" ></text>
</g>
<g >
<title>db::filter_for_query (4 samples, 0.12%; -0.03%)</title><rect x="1061.8" y="1653" width="1.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1064.78" y="1663.5" ></text>
</g>
<g >
<title>schema::get_partitioner (4 samples, 0.12%; +0.06%)</title><rect x="932.8" y="1717" width="1.5" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="935.83" y="1727.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;boost::range_detail::integer_iterator&lt;unsigned int&gt;, seastar::smp::invoke_on_all&lt;seastar::create_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1791.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="89.5" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.46" y="383.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (2 samples, 0.06%; -0.03%)</title><rect x="777.9" y="1781" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="780.88" y="1791.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="187.7" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.70" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.7" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.68" y="287.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (3 samples, 0.09%; 0.00%)</title><rect x="1099.0" y="1733" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1101.98" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1845" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1855.5" ></text>
</g>
<g >
<title>abstract_type::decompose (1 samples, 0.03%; +0.03%)</title><rect x="187.0" y="1685" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="189.98" y="1695.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (34 samples, 1.04%; +0.24%)</title><rect x="736.7" y="1813" width="12.3" height="15.0" fill="rgb(255,121,121)" rx="2" ry="2" />
<text  x="739.71" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (8 samples, 0.24%; 0.00%)</title><rect x="17.9" y="341" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.95" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::lw_shared_ptr&lt;schema const&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="186.3" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.26" y="1775.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="73.6" y="213" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="76.57" y="223.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.03%; -0.15%)</title><rect x="1093.2" y="1717" width="0.4" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="1096.20" y="1727.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;seastar::create_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1775.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (14 samples, 0.43%; 0.00%)</title><rect x="878.7" y="1717" width="5.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="881.66" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="53.0" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.98" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.91" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1749" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1759.5" >[unknown]</text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (8 samples, 0.24%; -0.15%)</title><rect x="926.7" y="1685" width="2.9" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="929.69" y="1695.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,787 samples, 85.31%; 0.00%)</title><rect x="151.2" y="1893" width="1006.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.22" y="1903.5" >seastar::app_template::run</text>
</g>
<g >
<title>cql3_parser::CqlParser::term (9 samples, 0.28%; 0.00%)</title><rect x="132.4" y="1653" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.44" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="120.9" y="1301" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.88" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.64" y="1935.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (2 samples, 0.06%; 0.00%)</title><rect x="89.1" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.10" y="511.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (3 samples, 0.09%; -0.12%)</title><rect x="804.3" y="1765" width="1.0" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="807.25" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::ensure_entry_if_complete (1 samples, 0.03%; 0.00%)</title><rect x="148.3" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.33" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.02" y="1455.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1093" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1103.5" ></text>
</g>
<g >
<title>row::row (2 samples, 0.06%; 0.00%)</title><rect x="323.5" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="326.51" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (4 samples, 0.12%; 0.00%)</title><rect x="123.8" y="1573" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.77" y="1583.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.03%; +0.03%)</title><rect x="107.9" y="1733" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="110.88" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.03%; +0.03%)</title><rect x="104.6" y="1653" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="107.63" y="1663.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (4 samples, 0.12%; +0.03%)</title><rect x="1111.3" y="1701" width="1.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1114.26" y="1711.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare_conditions (1 samples, 0.03%; +0.03%)</title><rect x="105.0" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="107.99" y="1711.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%; +0.03%)</title><rect x="550.7" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="553.70" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (34 samples, 1.04%; +0.24%)</title><rect x="530.8" y="1701" width="12.3" height="15.0" fill="rgb(255,121,121)" rx="2" ry="2" />
<text  x="533.83" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::deque (1 samples, 0.03%; 0.00%)</title><rect x="14.7" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (16 samples, 0.49%; 0.00%)</title><rect x="878.3" y="1733" width="5.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="881.30" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="89.8" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.82" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (2 samples, 0.06%; 0.00%)</title><rect x="99.9" y="581" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="45.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.40" y="399.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1061" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1071.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1391.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (2 samples, 0.06%; 0.00%)</title><rect x="55.1" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.15" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="124.9" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.86" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="145.8" y="1765" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="148.81" y="1775.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.15%; 0.00%)</title><rect x="171.1" y="1781" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="174.09" y="1791.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (12 samples, 0.37%; +0.03%)</title><rect x="1113.4" y="1653" width="4.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1116.43" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1599.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (32 samples, 0.98%; +0.06%)</title><rect x="215.9" y="1765" width="11.5" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="218.88" y="1775.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="955.6" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="958.59" y="1711.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; +0.03%)</title><rect x="122.7" y="1573" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="125.69" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%; +0.03%)</title><rect x="570.2" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="573.20" y="1727.5" ></text>
</g>
<g >
<title>seastar::logger::do_log (1 samples, 0.03%; 0.00%)</title><rect x="148.7" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.70" y="1775.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Optional_payload_base (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.14" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="663.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="666.03" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.91" y="1359.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%; +0.03%)</title><rect x="194.9" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="197.93" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.39" y="1471.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (3 samples, 0.09%; +0.03%)</title><rect x="92.7" y="501" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="95.71" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (8 samples, 0.24%; 0.00%)</title><rect x="21.2" y="405" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.20" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%; +0.03%)</title><rect x="587.5" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="590.54" y="1727.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="145.8" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.81" y="1791.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.09%; 0.00%)</title><rect x="57.3" y="469" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.32" y="479.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1253" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1263.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="60.6" y="373" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.57" y="383.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1893" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1903.5" >[unknown]</text>
</g>
<g >
<title>[perf_simple_query_flame_dcd3199037457158f6e2516231906d04f9637da6] (1 samples, 0.03%; +0.03%)</title><rect x="205.0" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="208.04" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::use_statement, std::default_delete&lt;cql3::statements::raw::use_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::use_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="87.3" y="533" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="90.29" y="543.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="837" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="847.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; -0.06%)</title><rect x="597.7" y="1669" width="1.0" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="600.65" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (5 samples, 0.15%; 0.00%)</title><rect x="68.5" y="357" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.51" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.21%; +0.09%)</title><rect x="444.1" y="1717" width="2.6" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="447.15" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1205" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1215.5" >[unknown]</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::~vector (1 samples, 0.03%; 0.00%)</title><rect x="97.0" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.05" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (8 samples, 0.24%; 0.00%)</title><rect x="11.1" y="533" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="543.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::is_counter (1 samples, 0.03%; +0.03%)</title><rect x="883.7" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="886.71" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; -0.03%)</title><rect x="876.9" y="1813" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="879.85" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="62.4" y="293" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="65.37" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (9 samples, 0.28%; 0.00%)</title><rect x="75.4" y="421" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.37" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::create_keyspace_statement*, std::default_delete&lt;cql3::statements::create_keyspace_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="100.3" y="517" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="103.30" y="527.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.40%; 0.00%)</title><rect x="144.7" y="1893" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.72" y="1903.5" ></text>
</g>
<g >
<title>utils::directories::verify_owner_and_mode (1 samples, 0.03%; 0.00%)</title><rect x="780.8" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="783.77" y="1807.5" ></text>
</g>
<g >
<title>do_query_on_all_shards&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="186.6" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.62" y="1695.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="59.5" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.48" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (13 samples, 0.40%; +0.15%)</title><rect x="312.0" y="1669" width="4.6" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="314.95" y="1679.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (22 samples, 0.67%; 0.00%)</title><rect x="101.7" y="1781" width="8.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.74" y="1791.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (4 samples, 0.12%; +0.03%)</title><rect x="108.2" y="1717" width="1.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="111.24" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (5 samples, 0.15%; 0.00%)</title><rect x="53.3" y="501" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.34" y="511.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (7 samples, 0.21%; 0.00%)</title><rect x="145.1" y="1877" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.08" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.15%; -0.03%)</title><rect x="1027.5" y="1541" width="1.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1030.47" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (355 samples, 10.87%; 0.00%)</title><rect x="10.7" y="1925" width="128.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.72" y="1935.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (9 samples, 0.28%; 0.00%)</title><rect x="88.7" y="549" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="559.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1 samples, 0.03%; 0.00%)</title><rect x="900.0" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="902.97" y="1727.5" ></text>
</g>
<g >
<title>seastar::reactor::init_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1759.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%; +0.03%)</title><rect x="53.3" y="485" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="56.34" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; 0.00%)</title><rect x="67.1" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.07" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_cql (1 samples, 0.03%; +0.03%)</title><rect x="153.8" y="1829" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="156.75" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.30" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="133.2" y="1461" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="136.16" y="1471.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;cql3::expr::conjunction&gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="76.5" y="181" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="79.46" y="191.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="709" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="719.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.52" y="303.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (2 samples, 0.06%; +0.06%)</title><rect x="889.5" y="1749" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="892.49" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="59.5" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.48" y="335.5" ></text>
</g>
<g >
<title>db::schema_tables::feed_hash_for_schema_digest (1 samples, 0.03%; 0.00%)</title><rect x="186.3" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.26" y="1711.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="24.1" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.09" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="89.5" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.46" y="447.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="187.3" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.34" y="1711.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_group (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1679.5" ></text>
</g>
<g >
<title>abstract_type::from_string (3 samples, 0.09%; 0.00%)</title><rect x="92.7" y="517" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.71" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; +0.03%)</title><rect x="110.4" y="1621" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="113.41" y="1631.5" ></text>
</g>
<g >
<title>cql3::sets::adder::do_add (1 samples, 0.03%; 0.00%)</title><rect x="881.5" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="884.55" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="60.6" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.57" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="101" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="111.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="116.6" y="1461" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.55" y="1471.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="148.7" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.70" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1695.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (4 samples, 0.12%; +0.06%)</title><rect x="168.2" y="1797" width="1.4" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="171.20" y="1807.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (4 samples, 0.12%; 0.00%)</title><rect x="185.2" y="1797" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.18" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1813" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1823.5" >[unknown]</text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.03%; 0.00%)</title><rect x="186.6" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.62" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; +0.03%)</title><rect x="103.5" y="1669" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="106.55" y="1679.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::unregister_metric (1 samples, 0.03%; 0.00%)</title><rect x="751.5" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.52" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (2 samples, 0.06%; +0.03%)</title><rect x="146.5" y="1781" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="149.53" y="1791.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; -0.06%)</title><rect x="352.4" y="1605" width="1.1" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="355.41" y="1615.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (35 samples, 1.07%; +0.09%)</title><rect x="751.9" y="1813" width="12.6" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="754.88" y="1823.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, utils::directories::verify_owner_and_mode (1 samples, 0.03%; 0.00%)</title><rect x="780.8" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="783.77" y="1823.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="58.4" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.40" y="479.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (4 samples, 0.12%; 0.00%)</title><rect x="1113.8" y="1557" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.79" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1061" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1071.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.8" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.76" y="431.5" ></text>
</g>
<g >
<title>db::schema_tables::make_table_mutations (1 samples, 0.03%; 0.00%)</title><rect x="187.0" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.98" y="1743.5" ></text>
</g>
<g >
<title>__start_context (22 samples, 0.67%; 0.00%)</title><rect x="101.7" y="1893" width="8.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.74" y="1903.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; +0.03%)</title><rect x="1138.4" y="1781" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1141.35" y="1791.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="750.1" y="1413" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="753.07" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1455.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (267 samples, 8.17%; +0.03%)</title><rect x="449.2" y="1733" width="96.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="452.20" y="1743.5" >seastar::do..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (4 samples, 0.12%; 0.00%)</title><rect x="72.8" y="405" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.85" y="415.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (8 samples, 0.24%; +0.03%)</title><rect x="29.1" y="405" width="2.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="32.14" y="415.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (1 samples, 0.03%; -0.09%)</title><rect x="649.3" y="1701" width="0.4" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="652.30" y="1711.5" ></text>
</g>
<g >
<title>table::apply (13 samples, 0.40%; -0.03%)</title><rect x="1106.6" y="1701" width="4.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1109.57" y="1711.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.18%; +0.09%)</title><rect x="408.0" y="1637" width="2.2" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="411.03" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (5 samples, 0.15%; 0.00%)</title><rect x="32.4" y="357" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.39" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1391.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_cachedSize (1 samples, 0.03%; +0.03%)</title><rect x="135.0" y="1541" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="137.97" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1487.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (2 samples, 0.06%; 0.00%)</title><rect x="103.9" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.91" y="1663.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (2 samples, 0.06%; +0.06%)</title><rect x="29.9" y="309" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="32.87" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; 0.00%)</title><rect x="61.3" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.29" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="12.9" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.89" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (1 samples, 0.03%; 0.00%)</title><rect x="106.4" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.44" y="1759.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.18%; 0.00%)</title><rect x="59.5" y="469" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.48" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (3 samples, 0.09%; 0.00%)</title><rect x="12.9" y="469" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.89" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="76.5" y="213" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.46" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="58.8" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.76" y="351.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="1114.9" y="1541" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1117.87" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.15%; 0.00%)</title><rect x="797.0" y="1765" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="800.03" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.12%; +0.03%)</title><rect x="639.9" y="1653" width="1.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="642.91" y="1663.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%; -0.03%)</title><rect x="863.8" y="1701" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="866.85" y="1711.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (258 samples, 7.90%; 0.00%)</title><rect x="573.1" y="1765" width="93.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="576.09" y="1775.5" >query::quer..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; +0.03%)</title><rect x="58.0" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="61.04" y="399.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (1 samples, 0.03%; 0.00%)</title><rect x="148.0" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.97" y="1839.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.03%; 0.00%)</title><rect x="664.8" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="667.83" y="1727.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;void&gt;::then_wrapped_nrvo&lt;seastar::future&lt;void&gt;, seastar::sharded&lt;database&gt;::stop (1 samples, 0.03%; 0.00%)</title><rect x="751.5" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.52" y="1807.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="185.5" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.54" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="118.4" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.36" y="1567.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (3 samples, 0.09%; -0.03%)</title><rect x="1156.4" y="1829" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1159.41" y="1839.5" ></text>
</g>
<g >
<title>seastar::create_scheduling_group (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="88.7" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="511.5" ></text>
</g>
<g >
<title>std::_Enable_default_constructor&lt;true, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt;::_Enable_default_constructor (1 samples, 0.03%; +0.03%)</title><rect x="81.2" y="357" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="84.15" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.15%; -0.12%)</title><rect x="379.1" y="1573" width="1.8" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="382.13" y="1583.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (5 samples, 0.15%; 0.00%)</title><rect x="135.7" y="1653" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.69" y="1663.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (4 samples, 0.12%; 0.00%)</title><rect x="1111.3" y="1717" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.26" y="1727.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2 samples, 0.06%; +0.03%)</title><rect x="881.9" y="1685" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="884.91" y="1695.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (21 samples, 0.64%; -0.28%)</title><rect x="535.5" y="1685" width="7.6" height="15.0" fill="rgb(110,110,255)" rx="2" ry="2" />
<text  x="538.53" y="1695.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%; 0.00%)</title><rect x="911.9" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="914.89" y="1631.5" ></text>
</g>
<g >
<title>std::move&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="136.8" y="1589" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="139.78" y="1599.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="134.2" y="1269" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="137.25" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1439.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.15%)</title><rect x="443.4" y="1733" width="0.7" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="446.43" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="124.9" y="1461" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="127.86" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; -0.09%)</title><rect x="1064.3" y="1621" width="0.7" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="1067.31" y="1631.5" ></text>
</g>
<g >
<title>make_combined_reader (29 samples, 0.89%; -0.21%)</title><rect x="588.6" y="1701" width="10.5" height="15.0" fill="rgb(132,132,255)" rx="2" ry="2" />
<text  x="591.62" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.64%; 0.00%)</title><rect x="987.0" y="1637" width="7.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="990.01" y="1647.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.06%)</title><rect x="560.1" y="1653" width="0.7" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="563.09" y="1663.5" ></text>
</g>
<g >
<title>mutation_partition::apply_monotonically (1 samples, 0.03%; 0.00%)</title><rect x="1110.5" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.54" y="1663.5" ></text>
</g>
<g >
<title>schema::position (1 samples, 0.03%; 0.00%)</title><rect x="1100.1" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1103.06" y="1743.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.03%; 0.00%)</title><rect x="749.4" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="752.35" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (55 samples, 1.68%; 0.00%)</title><rect x="110.0" y="1685" width="19.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="1139.4" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.43" y="1791.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.03%; -0.03%)</title><rect x="421.4" y="1621" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="424.39" y="1631.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%; 0.00%)</title><rect x="144.7" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.72" y="1887.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (22 samples, 0.67%; 0.00%)</title><rect x="92.0" y="741" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.99" y="751.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="741" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="751.5" ></text>
</g>
<g >
<title>db::system_keyspace::all_tables (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="11.8" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.81" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (3 samples, 0.09%; +0.06%)</title><rect x="224.5" y="1749" width="1.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="227.55" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.12%; +0.03%)</title><rect x="178.0" y="1781" width="1.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="180.95" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.4" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.41" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.06%; 0.00%)</title><rect x="719.4" y="1765" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="722.37" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="650.7" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="653.75" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.1" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.13" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (4 samples, 0.12%; +0.09%)</title><rect x="543.5" y="1717" width="1.4" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="546.47" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.7" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.68" y="319.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="628.4" y="1685" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="631.35" y="1695.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="773" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="783.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="1116.0" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1118.96" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::consume (3 samples, 0.09%; +0.06%)</title><rect x="429.7" y="1701" width="1.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="432.70" y="1711.5" ></text>
</g>
<g >
<title>std::forward&lt;cql3::expr::conjunction&amp;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="63.1" y="213" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="66.09" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="23.0" y="341" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="26.00" y="351.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; -0.03%)</title><rect x="126.7" y="1365" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="129.66" y="1375.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; +0.03%)</title><rect x="11.4" y="357" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="14.44" y="367.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::to_receivers (1 samples, 0.03%; +0.03%)</title><rect x="103.2" y="1653" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="106.19" y="1663.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range (1 samples, 0.03%; 0.00%)</title><rect x="964.6" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="967.62" y="1695.5" ></text>
</g>
<g >
<title>database::add_column_family (3 samples, 0.09%; 0.00%)</title><rect x="187.0" y="1797" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.98" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (8 samples, 0.24%; 0.00%)</title><rect x="11.1" y="693" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="703.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::constants::setter&gt;::~shared_ptr_count_for (2 samples, 0.06%; +0.06%)</title><rect x="701.0" y="1781" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="703.95" y="1791.5" ></text>
</g>
<g >
<title>merge (1 samples, 0.03%; 0.00%)</title><rect x="881.5" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="884.55" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="93.1" y="453" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="96.07" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (3 samples, 0.09%; -0.03%)</title><rect x="1116.3" y="1605" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1119.32" y="1615.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.09%; +0.06%)</title><rect x="781.1" y="1813" width="1.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="784.14" y="1823.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="112.2" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.22" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="51.9" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.90" y="399.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.03%; 0.00%)</title><rect x="20.5" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.47" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.00" y="1663.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.03%; 0.00%)</title><rect x="94.5" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.52" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::create_keyspace_statement, std::default_delete&lt;cql3::statements::create_keyspace_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="100.3" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.30" y="559.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.06%)</title><rect x="556.1" y="1685" width="0.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="559.12" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="917" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="927.5" >[unknown]</text>
</g>
<g >
<title>service::abstract_write_response_handler::delay&lt;service::abstract_write_response_handler::signal (1 samples, 0.03%; +0.03%)</title><rect x="780.4" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="783.41" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="90.2" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.18" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (127 samples, 3.89%; -0.09%)</title><rect x="1002.9" y="1621" width="45.9" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="1005.90" y="1631.5" >serv..</text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; 0.00%)</title><rect x="67.4" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.43" y="431.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1141" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1151.5" >[unknown]</text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair (1 samples, 0.03%; 0.00%)</title><rect x="73.6" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.57" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="915.5" y="1669" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="918.50" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (5 samples, 0.15%; 0.00%)</title><rect x="68.5" y="325" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.51" y="335.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (207 samples, 6.34%; +0.06%)</title><rect x="798.8" y="1781" width="74.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="801.83" y="1791.5" >single_n..</text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (7 samples, 0.21%; 0.00%)</title><rect x="92.0" y="597" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.99" y="607.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (2 samples, 0.06%; +0.03%)</title><rect x="55.1" y="453" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="58.15" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="132.1" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.08" y="1599.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.69" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.12%; +0.03%)</title><rect x="1031.4" y="1541" width="1.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1034.44" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1455.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (4 samples, 0.12%; +0.06%)</title><rect x="274.8" y="1765" width="1.4" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="277.75" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (5 samples, 0.15%; 0.00%)</title><rect x="120.5" y="1429" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.52" y="1439.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="95.6" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.60" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="60.9" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.93" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (207 samples, 6.34%; 0.00%)</title><rect x="14.0" y="693" width="74.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.97" y="703.5" >seastar:..</text>
</g>
<g >
<title>auth::get_permissions (62 samples, 1.90%; 0.00%)</title><rect x="834.2" y="1685" width="22.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="837.23" y="1695.5" >a..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.03%; -0.03%)</title><rect x="846.1" y="1653" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="849.15" y="1663.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (21 samples, 0.64%; 0.00%)</title><rect x="92.0" y="629" width="7.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.99" y="639.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="112.6" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.58" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="90.2" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.18" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.06%; +0.06%)</title><rect x="429.0" y="1701" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="431.98" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (76 samples, 2.33%; 0.00%)</title><rect x="110.0" y="1717" width="27.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1727.5" >c..</text>
</g>
<g >
<title>table::mutation_query (1 samples, 0.03%; 0.00%)</title><rect x="233.2" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="236.21" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="12.5" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.53" y="399.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="1114.5" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1117.51" y="1535.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (35 samples, 1.07%; -0.37%)</title><rect x="707.5" y="1797" width="12.6" height="15.0" fill="rgb(77,77,255)" rx="2" ry="2" />
<text  x="710.45" y="1807.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (185 samples, 5.66%; 0.00%)</title><rect x="982.3" y="1669" width="66.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="985.32" y="1679.5" >service..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1295.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="148.0" y="1765" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="150.97" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="95.6" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.60" y="415.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (2 samples, 0.06%; 0.00%)</title><rect x="80.4" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.43" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.66" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.4" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.41" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.12%; 0.00%)</title><rect x="76.5" y="293" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.46" y="303.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.03%)</title><rect x="577.8" y="1749" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="580.79" y="1759.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="127.0" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.02" y="1567.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="881.2" y="1605" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="884.18" y="1615.5" ></text>
</g>
<g >
<title>hashing_partition_visitor&lt;hasher&gt;::accept_row (1 samples, 0.03%; +0.03%)</title><rect x="186.3" y="1669" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="189.26" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (76 samples, 2.33%; 0.00%)</title><rect x="110.0" y="1701" width="27.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1711.5" >c..</text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.03%; +0.03%)</title><rect x="169.6" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="172.64" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="431.5" ></text>
</g>
<g >
<title>create_partitions (8 samples, 0.24%; 0.00%)</title><rect x="11.1" y="629" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="639.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reallocate_map (1 samples, 0.03%; 0.00%)</title><rect x="23.0" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.00" y="383.5" ></text>
</g>
<g >
<title>distributed_loader::populate_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="148.7" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.70" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1423.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.55%; +0.03%)</title><rect x="1022.8" y="1573" width="6.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1025.77" y="1583.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.09%; +0.03%)</title><rect x="776.8" y="1781" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="779.80" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_impl&lt;std::default_delete&lt;cql3::operation::set_value&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.7" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.68" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (12 samples, 0.37%; +0.15%)</title><rect x="38.5" y="405" width="4.4" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="41.53" y="415.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="981" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="991.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="89.8" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.82" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.03%; +0.03%)</title><rect x="45.4" y="373" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="48.40" y="383.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (17 samples, 0.52%; 0.00%)</title><rect x="1106.6" y="1733" width="6.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1109.57" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="90.2" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.18" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.03%; +0.03%)</title><rect x="99.9" y="405" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="102.94" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.03%)</title><rect x="845.4" y="1637" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="848.43" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.15%; +0.12%)</title><rect x="271.9" y="1733" width="1.8" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="274.86" y="1743.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.06%)</title><rect x="646.1" y="1701" width="0.3" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="649.05" y="1711.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="57.3" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.32" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.0" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.96" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::run_and_dispose (3 samples, 0.09%; +0.06%)</title><rect x="155.6" y="1829" width="1.0" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="158.56" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1077" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1087.5" >[unknown]</text>
</g>
<g >
<title>seastar::reactor::add_timer (3 samples, 0.09%; +0.06%)</title><rect x="1036.9" y="1525" width="1.0" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1039.86" y="1535.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="11.8" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.81" y="383.5" ></text>
</g>
<g >
<title>deserialize_collection_mutation (1 samples, 0.03%; 0.00%)</title><rect x="881.5" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="884.55" y="1599.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1439.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (7 samples, 0.21%; +0.03%)</title><rect x="912.2" y="1621" width="2.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="915.25" y="1631.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; +0.03%)</title><rect x="587.2" y="1717" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="590.18" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (154 samples, 4.71%; -0.03%)</title><rect x="348.8" y="1621" width="55.6" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="351.79" y="1631.5" >parti..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (9 samples, 0.28%; 0.00%)</title><rect x="88.7" y="693" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="703.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.06%; 0.00%)</title><rect x="99.9" y="773" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="783.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (2 samples, 0.06%; +0.03%)</title><rect x="66.7" y="453" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="69.71" y="463.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (1 samples, 0.03%; 0.00%)</title><rect x="879.4" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.38" y="1615.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (2 samples, 0.06%; 0.00%)</title><rect x="135.0" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.97" y="1631.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="54.1" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.06" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.03%; +0.03%)</title><rect x="810.0" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="813.03" y="1743.5" ></text>
</g>
<g >
<title>database::find_schema (12 samples, 0.37%; +0.24%)</title><rect x="816.9" y="1733" width="4.3" height="15.0" fill="rgb(255,121,121)" rx="2" ry="2" />
<text  x="819.89" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.18%; -0.03%)</title><rect x="976.5" y="1653" width="2.2" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="979.54" y="1663.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (1 samples, 0.03%; +0.03%)</title><rect x="1049.5" y="1669" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1052.50" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (11 samples, 0.34%; 0.00%)</title><rect x="119.8" y="1605" width="4.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.80" y="1615.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::end (1 samples, 0.03%; 0.00%)</title><rect x="48.6" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.65" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; -0.09%)</title><rect x="527.2" y="1701" width="0.4" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="530.22" y="1711.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="119.1" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.08" y="1551.5" ></text>
</g>
<g >
<title>database::shard_of (1 samples, 0.03%; +0.03%)</title><rect x="1116.7" y="1557" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1119.68" y="1567.5" ></text>
</g>
<g >
<title>distributed_loader::init_system_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="148.7" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.70" y="1871.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.21%; 0.00%)</title><rect x="951.3" y="1717" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="954.25" y="1727.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (4 samples, 0.12%; -0.06%)</title><rect x="139.7" y="1893" width="1.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="142.67" y="1903.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::_Optional_payload_base (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="134.6" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.61" y="1631.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (4 samples, 0.12%; -0.06%)</title><rect x="812.2" y="1717" width="1.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="815.20" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1525" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1535.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%; +0.09%)</title><rect x="853.0" y="1653" width="3.3" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="856.01" y="1663.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::deserialize_visitor&lt;basic_single_fragmented_view&lt; (1 samples, 0.03%; 0.00%)</title><rect x="185.5" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.54" y="1615.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.03%; +0.03%)</title><rect x="147.6" y="1877" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="150.61" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="98.5" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.49" y="559.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1301" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1311.5" ></text>
</g>
<g >
<title>ser::row_view::columns (1 samples, 0.03%; +0.03%)</title><rect x="1110.2" y="1653" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1113.18" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::destroy&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="50.8" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.81" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="89.1" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.10" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (1 samples, 0.03%; -0.03%)</title><rect x="764.2" y="1797" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="767.16" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.7" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.68" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.66" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="133.2" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.16" y="1551.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="133.9" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.89" y="1599.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (2 samples, 0.06%; +0.03%)</title><rect x="562.3" y="1701" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="565.26" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="120.9" y="1349" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.88" y="1359.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::maybe_advance_to (1 samples, 0.03%; 0.00%)</title><rect x="148.3" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.33" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; 0.00%)</title><rect x="259.6" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="262.58" y="1727.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.09%; 0.00%)</title><rect x="110.8" y="1557" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.77" y="1567.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="1121.7" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1124.74" y="1823.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1759.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.06%; +0.06%)</title><rect x="1065.0" y="1653" width="0.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1068.03" y="1663.5" ></text>
</g>
<g >
<title>__strdup (1 samples, 0.03%; +0.03%)</title><rect x="149.4" y="1925" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="152.42" y="1935.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (13 samples, 0.40%; 0.00%)</title><rect x="101.7" y="1733" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.74" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="68.9" y="245" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.87" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="130.3" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.28" y="1583.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="71.8" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.76" y="399.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (3 samples, 0.09%; 0.00%)</title><rect x="185.2" y="1733" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.18" y="1743.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="137.5" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.50" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; 0.00%)</title><rect x="555.0" y="1685" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="558.03" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="89.8" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.82" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; 0.00%)</title><rect x="115.5" y="1333" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.47" y="1343.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="749.7" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="752.71" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (7 samples, 0.21%; 0.00%)</title><rect x="71.8" y="437" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.76" y="447.5" ></text>
</g>
<g >
<title>schema_registry::get_or_load (3 samples, 0.09%; 0.00%)</title><rect x="185.2" y="1749" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.18" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="104.6" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.63" y="1679.5" ></text>
</g>
<g >
<title>dht::maximum_token (1 samples, 0.03%; +0.03%)</title><rect x="595.8" y="1685" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="598.85" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="50.5" y="453" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="53.45" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="638.8" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="641.83" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.09%; +0.09%)</title><rect x="963.2" y="1685" width="1.1" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="966.17" y="1695.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="89.1" y="373" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="92.10" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_keyspace_statement, std::default_delete&lt;cql3::statements::create_keyspace_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="100.3" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.30" y="543.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (2 samples, 0.06%; 0.00%)</title><rect x="149.8" y="1909" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.78" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="120.2" y="1445" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="123.16" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%; +0.06%)</title><rect x="757.3" y="1797" width="1.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="760.30" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;3ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.4" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.41" y="1327.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; 0.00%)</title><rect x="113.7" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.66" y="1583.5" ></text>
</g>
<g >
<title>row::external_memory_usage (22 samples, 0.67%; -0.06%)</title><rect x="360.4" y="1605" width="7.9" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="363.35" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.88" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1919.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="59.5" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.48" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="81.9" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.88" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::create_view_statement, std::default_delete&lt;cql3::statements::create_view_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; +0.03%)</title><rect x="97.8" y="549" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="100.77" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="167.1" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="170.12" y="1791.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (47 samples, 1.44%; +0.06%)</title><rect x="498.3" y="1685" width="17.0" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="501.33" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (4 samples, 0.12%; 0.00%)</title><rect x="123.8" y="1589" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.77" y="1599.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="89.8" y="309" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="92.82" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (4 samples, 0.12%; -0.03%)</title><rect x="1097.5" y="1733" width="1.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1100.54" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.00" y="1519.5" ></text>
</g>
<g >
<title>reader_permit::signal (8 samples, 0.24%; +0.12%)</title><rect x="430.8" y="1701" width="2.9" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="433.78" y="1711.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="60.2" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.21" y="319.5" ></text>
</g>
<g >
<title>schema::column_at (6 samples, 0.18%; +0.06%)</title><rect x="366.1" y="1573" width="2.2" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="369.13" y="1583.5" ></text>
</g>
<g >
<title>std::move&lt;std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="83.0" y="453" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="85.96" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1 samples, 0.03%; -0.06%)</title><rect x="146.9" y="1749" width="0.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="149.89" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.09%; 0.00%)</title><rect x="89.8" y="485" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.82" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1471.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; 0.00%)</title><rect x="643.2" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="646.16" y="1679.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.06%)</title><rect x="435.1" y="1717" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="438.12" y="1727.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (76 samples, 2.33%; 0.00%)</title><rect x="110.0" y="1765" width="27.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1775.5" >c..</text>
</g>
<g >
<title>mutation_partition::apply (1 samples, 0.03%; 0.00%)</title><rect x="185.9" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.90" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (198 samples, 6.06%; 0.00%)</title><rect x="16.1" y="565" width="71.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.14" y="575.5" >seastar:..</text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="749.4" y="1733" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="752.35" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.37%; 0.00%)</title><rect x="139.3" y="1909" width="4.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.31" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.1" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.13" y="1439.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.91" y="1407.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (2 samples, 0.06%; +0.06%)</title><rect x="14.0" y="629" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="16.97" y="639.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.66" y="1551.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (83 samples, 2.54%; 0.00%)</title><rect x="55.1" y="501" width="30.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.15" y="511.5" >cq..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="63.8" y="373" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.82" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (386 samples, 11.82%; +0.21%)</title><rect x="945.8" y="1733" width="139.5" height="15.0" fill="rgb(255,132,132)" rx="2" ry="2" />
<text  x="948.84" y="1743.5" >cql3::statements:..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.03%; +0.03%)</title><rect x="1144.5" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1147.49" y="1807.5" ></text>
</g>
<g >
<title>database::find_column_family (5 samples, 0.15%; 0.00%)</title><rect x="1056.4" y="1653" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1059.36" y="1663.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="52.3" y="293" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="55.26" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="123.1" y="1509" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.05" y="1519.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.03%; +0.03%)</title><rect x="882.3" y="1669" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="885.27" y="1679.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (2 samples, 0.06%; 0.00%)</title><rect x="185.2" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.18" y="1711.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (7 samples, 0.21%; 0.00%)</title><rect x="32.0" y="405" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.03" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="223.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (41 samples, 1.25%; +0.09%)</title><rect x="901.8" y="1701" width="14.8" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="904.77" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1717" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1727.5" >[unknown]</text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (52 samples, 1.59%; -0.06%)</title><rect x="1065.8" y="1653" width="18.7" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="1068.75" y="1663.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.95" y="335.5" ></text>
</g>
<g >
<title>row::~row (2 samples, 0.06%; +0.06%)</title><rect x="424.3" y="1653" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="427.28" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1503.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="233.2" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="236.21" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (7 samples, 0.21%; 0.00%)</title><rect x="115.1" y="1493" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.11" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="120.5" y="1381" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.52" y="1391.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.30" y="1455.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%; 0.00%)</title><rect x="1089.6" y="1701" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1092.59" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="335.5" ></text>
</g>
<g >
<title>dht::shard_of (2 samples, 0.06%; 0.00%)</title><rect x="1006.5" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1009.52" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.1" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.13" y="1407.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="90.9" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.91" y="479.5" ></text>
</g>
<g >
<title>do_cql_test (22 samples, 0.67%; 0.00%)</title><rect x="101.7" y="1829" width="8.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.74" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="1000.4" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1003.38" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="57.3" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.32" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="119.1" y="1477" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.08" y="1487.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; -0.06%)</title><rect x="767.0" y="1797" width="0.8" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="770.05" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.12%; +0.12%)</title><rect x="755.9" y="1797" width="1.4" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="758.85" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.52" y="351.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (8 samples, 0.24%; 0.00%)</title><rect x="11.1" y="581" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="591.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; +0.06%)</title><rect x="730.9" y="1781" width="1.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="733.93" y="1791.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (1 samples, 0.03%; +0.03%)</title><rect x="150.5" y="1925" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="153.50" y="1935.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="1112.3" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.34" y="1695.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (1 samples, 0.03%; -0.06%)</title><rect x="1115.6" y="1573" width="0.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="1118.60" y="1583.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="780.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="783.41" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (9 samples, 0.28%; 0.00%)</title><rect x="61.6" y="469" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.65" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; +0.03%)</title><rect x="13.6" y="421" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="16.61" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt; &gt;::vector (1 samples, 0.03%; +0.03%)</title><rect x="91.6" y="501" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="94.63" y="511.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="85.8" y="453" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="88.85" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="115.5" y="1269" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.47" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="725" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="735.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (4 samples, 0.12%; 0.00%)</title><rect x="1007.6" y="1605" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1010.60" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.06%)</title><rect x="433.7" y="1701" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="436.67" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="60.9" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.93" y="335.5" ></text>
</g>
<g >
<title>[unknown] (224 samples, 6.86%; 0.00%)</title><rect x="11.1" y="757" width="80.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="767.5" >[unknown]</text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (4 samples, 0.12%; 0.00%)</title><rect x="1116.0" y="1637" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1118.96" y="1647.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="805" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="815.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (6 samples, 0.18%; 0.00%)</title><rect x="92.0" y="581" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.99" y="591.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; +0.03%)</title><rect x="12.2" y="421" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="15.17" y="431.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.03%; +0.03%)</title><rect x="1158.2" y="1941" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1161.22" y="1951.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="125.9" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.94" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (3 samples, 0.09%; 0.00%)</title><rect x="68.9" y="293" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.87" y="303.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (1 samples, 0.03%; 0.00%)</title><rect x="407.7" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="410.67" y="1647.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (6 samples, 0.18%; +0.09%)</title><rect x="47.6" y="437" width="2.1" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="50.56" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="22.3" y="309" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="25.28" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="93.8" y="533" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="96.80" y="543.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="77.2" y="245" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="80.18" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="58.8" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.76" y="399.5" ></text>
</g>
<g >
<title>db::system_keyspace::make (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1631.5" ></text>
</g>
<g >
<title>create_partitions (22 samples, 0.67%; -0.03%)</title><rect x="101.7" y="1813" width="8.0" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="104.74" y="1823.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="410.6" y="1637" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="413.56" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="12.5" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.53" y="335.5" ></text>
</g>
<g >
<title>cql3::cf_name::set_column_family (1 samples, 0.03%; 0.00%)</title><rect x="54.4" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.43" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="128.1" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.11" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.21%)</title><rect x="439.5" y="1733" width="0.3" height="15.0" fill="rgb(132,132,255)" rx="2" ry="2" />
<text  x="442.45" y="1743.5" ></text>
</g>
<g >
<title>to_hex (1 samples, 0.03%; +0.03%)</title><rect x="87.7" y="629" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="90.66" y="639.5" ></text>
</g>
<g >
<title>tolower (1 samples, 0.03%; +0.03%)</title><rect x="54.4" y="453" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="57.43" y="463.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (2 samples, 0.06%; +0.03%)</title><rect x="96.7" y="533" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="99.69" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="59.8" y="277" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="62.84" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="59.5" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.48" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (4 samples, 0.12%; 0.00%)</title><rect x="712.9" y="1733" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="715.87" y="1743.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="130.6" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.64" y="1631.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (9 samples, 0.28%; +0.09%)</title><rect x="413.8" y="1637" width="3.3" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="416.81" y="1647.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="1155.3" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1158.33" y="1727.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1263.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1205" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1215.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (3 samples, 0.09%; +0.03%)</title><rect x="1116.3" y="1573" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1119.32" y="1583.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.30" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_expression (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.74" y="1695.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="99.9" y="725" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="735.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::~metric_groups_impl (1 samples, 0.03%; 0.00%)</title><rect x="751.5" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.52" y="1679.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (3 samples, 0.09%; -0.06%)</title><rect x="422.1" y="1653" width="1.1" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="425.12" y="1663.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="58.4" y="437" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="61.40" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="119.1" y="1525" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.08" y="1535.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1263.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="128.1" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.11" y="1471.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="1045.2" y="1589" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1048.16" y="1599.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="89.1" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.10" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="543.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_dcd3199037457158f6e2516231906d04f9637da6] (1 samples, 0.03%; +0.03%)</title><rect x="43.2" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="46.23" y="399.5" ></text>
</g>
<g >
<title>auth::service::start (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="119.1" y="1493" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.08" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="745.7" y="1781" width="0.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="748.74" y="1791.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_M_construct&lt;cql3::expr::expression&gt; (1 samples, 0.03%; +0.03%)</title><rect x="136.1" y="1493" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="139.05" y="1503.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_charPositionInLine (1 samples, 0.03%; +0.03%)</title><rect x="28.1" y="405" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="31.06" y="415.5" ></text>
</g>
<g >
<title>db::schema_tables::prepare_builder_from_table_row (1 samples, 0.03%; 0.00%)</title><rect x="185.2" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.18" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="85" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="95.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="80.4" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.43" y="335.5" ></text>
</g>
<g >
<title>seastar::metrics::metric_groups::add_group (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="123.1" y="1525" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.05" y="1535.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="100.7" y="677" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="103.66" y="687.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="135.0" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.97" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; +0.03%)</title><rect x="123.1" y="1429" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="126.05" y="1439.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.44" y="1583.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="868.9" y="1765" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="871.90" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;4ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="120.9" y="1285" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="123.88" y="1295.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (99 samples, 3.03%; 0.00%)</title><rect x="50.5" y="517" width="35.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.45" y="527.5" >cql..</text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.18%; -0.18%)</title><rect x="258.1" y="1733" width="2.2" height="15.0" fill="rgb(143,143,255)" rx="2" ry="2" />
<text  x="261.14" y="1743.5" ></text>
</g>
<g >
<title>query_state::query_state (1 samples, 0.03%; +0.03%)</title><rect x="210.1" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="213.10" y="1791.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (1 samples, 0.03%; 0.00%)</title><rect x="547.1" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="550.09" y="1759.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; +0.03%)</title><rect x="187.7" y="1621" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="190.70" y="1631.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%; +0.03%)</title><rect x="94.5" y="581" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="97.52" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::sharded_parallel_for_each (1 samples, 0.03%; 0.00%)</title><rect x="751.5" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.52" y="1791.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1269" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1279.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="132.1" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.08" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="59.5" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.48" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1455.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (16 samples, 0.49%; 0.00%)</title><rect x="709.6" y="1781" width="5.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="712.62" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="751.2" y="1781" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="754.16" y="1791.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (9 samples, 0.28%; +0.06%)</title><rect x="418.5" y="1637" width="3.3" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="421.50" y="1647.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (8 samples, 0.24%; -0.12%)</title><rect x="793.4" y="1765" width="2.9" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="796.42" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="120.9" y="1317" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.88" y="1327.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="932.1" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="935.11" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%; +0.06%)</title><rect x="80.4" y="293" width="0.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="83.43" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="95.6" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.60" y="495.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="598.7" y="1685" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="601.74" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; 0.00%)</title><rect x="115.5" y="1397" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.47" y="1407.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.24%; +0.03%)</title><rect x="1094.6" y="1733" width="2.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1097.65" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1375.5" ></text>
</g>
<g >
<title>__start_context (9 samples, 0.28%; 0.00%)</title><rect x="88.7" y="741" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="751.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::substr[abi:cxx11] (2 samples, 0.06%; 0.00%)</title><rect x="125.6" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.58" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; 0.00%)</title><rect x="423.2" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="426.20" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.03%)</title><rect x="627.6" y="1653" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="630.63" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="723.3" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="726.35" y="1807.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="89.1" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.10" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (2 samples, 0.06%; +0.03%)</title><rect x="83.3" y="453" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="86.32" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (11 samples, 0.34%; -0.03%)</title><rect x="1089.2" y="1717" width="4.0" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1092.23" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="425.0" y="1653" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="428.00" y="1663.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.15%; -0.09%)</title><rect x="930.3" y="1717" width="1.8" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="933.31" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="130.3" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.28" y="1487.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (12 samples, 0.37%; +0.06%)</title><rect x="297.1" y="1685" width="4.4" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="300.14" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (8 samples, 0.24%; -0.12%)</title><rect x="942.6" y="1685" width="2.9" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="945.59" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="12.5" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.53" y="415.5" ></text>
</g>
<g >
<title>db::schema_tables::diff_table_or_view (4 samples, 0.12%; 0.00%)</title><rect x="185.2" y="1781" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.18" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.21%; +0.12%)</title><rect x="574.9" y="1733" width="2.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="577.90" y="1743.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (1 samples, 0.03%; +0.03%)</title><rect x="1112.0" y="1685" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1114.98" y="1695.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (9 samples, 0.28%; +0.15%)</title><rect x="1135.5" y="1797" width="3.2" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="1138.46" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="111.5" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.49" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; +0.03%)</title><rect x="68.9" y="213" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="71.87" y="223.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (73 samples, 2.23%; 0.00%)</title><rect x="58.8" y="485" width="26.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.76" y="495.5" >c..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="84.8" y="469" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="87.77" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_role_statement, std::default_delete&lt;cql3::statements::alter_role_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_role_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="86.6" y="533" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="89.57" y="543.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.14" y="1439.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.14" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="837" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="847.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1647.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (8 samples, 0.24%; 0.00%)</title><rect x="106.8" y="1765" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.80" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.06%)</title><rect x="646.1" y="1685" width="0.3" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="649.05" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1013" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1023.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="51.9" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.90" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="73.6" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.57" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="54.1" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.06" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_M_get (1 samples, 0.03%; 0.00%)</title><rect x="76.8" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.82" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="120.5" y="1349" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="123.52" y="1359.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="94.2" y="581" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="97.16" y="591.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (5 samples, 0.15%; +0.03%)</title><rect x="495.8" y="1685" width="1.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="498.80" y="1695.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, auth::service::start (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.09%; +0.06%)</title><rect x="223.5" y="1749" width="1.0" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="226.46" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1077" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1087.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.06%; 0.00%)</title><rect x="671.7" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="674.70" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.1" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.13" y="1375.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.15%; 0.00%)</title><rect x="599.1" y="1701" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="602.10" y="1711.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.06%; -0.15%)</title><rect x="1041.2" y="1573" width="0.7" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="1044.19" y="1583.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (45 samples, 1.38%; +0.15%)</title><rect x="301.5" y="1685" width="16.2" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="304.48" y="1695.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (4 samples, 0.12%; +0.06%)</title><rect x="72.8" y="373" width="1.5" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="75.85" y="383.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.12%; +0.09%)</title><rect x="644.6" y="1701" width="1.5" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="647.61" y="1711.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%; 0.00%)</title><rect x="750.4" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.43" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="1094.3" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1097.29" y="1727.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (6 samples, 0.18%; 0.00%)</title><rect x="1113.8" y="1589" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.79" y="1599.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (3 samples, 0.09%; +0.09%)</title><rect x="464.7" y="1701" width="1.1" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="467.74" y="1711.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (12 samples, 0.37%; 0.00%)</title><rect x="139.3" y="1925" width="4.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.31" y="1935.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1407.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="95.6" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.60" y="431.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="137.9" y="1525" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="140.86" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="123.1" y="1461" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.05" y="1471.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="95.6" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="98.60" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::operator bool (1 samples, 0.03%; +0.03%)</title><rect x="84.4" y="469" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="87.40" y="479.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="11.1" y="309" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="14.08" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="1100.4" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1103.43" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%; -0.18%)</title><rect x="1139.8" y="1781" width="3.2" height="15.0" fill="rgb(143,143,255)" rx="2" ry="2" />
<text  x="1142.79" y="1791.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="187.3" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.34" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (1 samples, 0.03%; -0.12%)</title><rect x="1152.4" y="1813" width="0.4" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="1155.44" y="1823.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::void_message&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="88.0" y="645" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="91.02" y="655.5" ></text>
</g>
<g >
<title>cql3::cf_name::operator= (1 samples, 0.03%; 0.00%)</title><rect x="53.7" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.70" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (1 samples, 0.03%; -0.03%)</title><rect x="428.6" y="1701" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="431.62" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (2 samples, 0.06%; 0.00%)</title><rect x="80.4" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.43" y="351.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (1 samples, 0.03%; +0.03%)</title><rect x="964.6" y="1557" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="967.62" y="1567.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.21%; 0.00%)</title><rect x="959.9" y="1685" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="962.92" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; +0.03%)</title><rect x="417.4" y="1621" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="420.42" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.44" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (5 samples, 0.15%; 0.00%)</title><rect x="29.5" y="373" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.50" y="383.5" ></text>
</g>
<g >
<title>schema::column_at (2 samples, 0.06%; -0.15%)</title><rect x="497.6" y="1685" width="0.7" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="500.60" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="127.0" y="1525" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.02" y="1535.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="132.1" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.08" y="1535.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1343.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (3 samples, 0.09%; 0.00%)</title><rect x="60.6" y="421" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.57" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="933" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="943.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (1 samples, 0.03%; 0.00%)</title><rect x="185.5" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.54" y="1679.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~_Vector_base (1 samples, 0.03%; +0.03%)</title><rect x="67.4" y="405" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="70.43" y="415.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (5 samples, 0.15%; 0.00%)</title><rect x="516.0" y="1717" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="519.02" y="1727.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (419 samples, 12.83%; -0.03%)</title><rect x="283.4" y="1717" width="151.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="286.42" y="1727.5" >merging_reader&lt;muta..</text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.09%; +0.09%)</title><rect x="586.1" y="1717" width="1.1" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="589.09" y="1727.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="832.1" y="1701" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="835.06" y="1711.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.21%; +0.12%)</title><rect x="720.1" y="1797" width="2.5" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="723.09" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1173" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1183.5" >[unknown]</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.12%; 0.00%)</title><rect x="1039.0" y="1541" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1042.02" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="89.8" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.82" y="447.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1727.5" ></text>
</g>
<g >
<title>[[vdso]] (25 samples, 0.77%; +0.06%)</title><rect x="1161.1" y="1925" width="9.0" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1164.10" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="76.5" y="229" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.46" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="101.7" y="1637" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="104.74" y="1647.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="574.5" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="577.54" y="1759.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (76 samples, 2.33%; 0.00%)</title><rect x="110.0" y="1893" width="27.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1903.5" >s..</text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.03%; 0.00%)</title><rect x="986.7" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="989.65" y="1663.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (8 samples, 0.24%; 0.00%)</title><rect x="11.1" y="549" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="559.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (8 samples, 0.24%; -0.09%)</title><rect x="175.1" y="1765" width="2.9" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="178.06" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1189" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1199.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (29 samples, 0.89%; -0.06%)</title><rect x="411.3" y="1653" width="10.5" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="414.28" y="1663.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="81.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.52" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; 0.00%)</title><rect x="1157.5" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.49" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (4 samples, 0.12%; 0.00%)</title><rect x="21.6" y="341" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.56" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (1 samples, 0.03%; +0.03%)</title><rect x="111.9" y="1557" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="114.85" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%; +0.06%)</title><rect x="747.2" y="1797" width="1.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="750.18" y="1807.5" ></text>
</g>
<g >
<title>seastar::metrics::metric_groups::~metric_groups (1 samples, 0.03%; 0.00%)</title><rect x="751.5" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.52" y="1711.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (7 samples, 0.21%; +0.15%)</title><rect x="527.6" y="1717" width="2.5" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="530.58" y="1727.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; -0.03%)</title><rect x="184.8" y="1797" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="187.81" y="1807.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="12.2" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.17" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.04" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (16 samples, 0.49%; 0.00%)</title><rect x="878.3" y="1781" width="5.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="881.30" y="1791.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (4 samples, 0.12%; -0.06%)</title><rect x="260.3" y="1749" width="1.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="263.30" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::io_getevents (2 samples, 0.06%; +0.06%)</title><rect x="1156.8" y="1797" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1159.77" y="1807.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (16 samples, 0.49%; -0.09%)</title><rect x="343.0" y="1621" width="5.8" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="346.01" y="1631.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (36 samples, 1.10%; +0.03%)</title><rect x="1160.0" y="1941" width="13.0" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1163.02" y="1951.5" ></text>
</g>
<g >
<title>schema::get_column_mapping (1 samples, 0.03%; +0.03%)</title><rect x="1110.9" y="1669" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1113.90" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="89.8" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.82" y="415.5" ></text>
</g>
<g >
<title>std::operator- (2 samples, 0.06%; 0.00%)</title><rect x="23.4" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.36" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (9 samples, 0.28%; 0.00%)</title><rect x="67.8" y="437" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.79" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.66" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2 samples, 0.06%; +0.03%)</title><rect x="30.6" y="325" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="33.59" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (22 samples, 0.67%; 0.00%)</title><rect x="92.0" y="725" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.99" y="735.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (1 samples, 0.03%; +0.03%)</title><rect x="434.8" y="1717" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="437.76" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::mark_used (1 samples, 0.03%; -0.06%)</title><rect x="228.2" y="1781" width="0.3" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="231.16" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1551.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::delete_statement, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="98.5" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.49" y="543.5" ></text>
</g>
<g >
<title>[unknown] (215 samples, 6.58%; 0.00%)</title><rect x="11.1" y="741" width="77.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="751.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.09%; +0.06%)</title><rect x="17.9" y="277" width="1.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="20.95" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.03%; -0.03%)</title><rect x="353.5" y="1605" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="356.49" y="1615.5" ></text>
</g>
<g >
<title>database::find_schema (8 samples, 0.24%; +0.09%)</title><rect x="859.5" y="1701" width="2.9" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="862.51" y="1711.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="90.2" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.18" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (9 samples, 0.28%; +0.21%)</title><rect x="212.3" y="1765" width="3.2" height="15.0" fill="rgb(255,132,132)" rx="2" ry="2" />
<text  x="215.27" y="1775.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (601 samples, 18.40%; 0.00%)</title><rect x="888.4" y="1781" width="217.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="891.41" y="1791.5" >seastar::noncopyable_functio..</text>
</g>
<g >
<title>mutation_fragment::destroy_data (29 samples, 0.89%; -0.09%)</title><rect x="464.4" y="1717" width="10.4" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="467.37" y="1727.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (9 samples, 0.28%; 0.00%)</title><rect x="878.7" y="1701" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="881.66" y="1711.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (10 samples, 0.31%; +0.15%)</title><rect x="557.2" y="1669" width="3.6" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="560.20" y="1679.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (3 samples, 0.09%; 0.00%)</title><rect x="1116.3" y="1589" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1119.32" y="1599.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_allocate (1 samples, 0.03%; 0.00%)</title><rect x="71.8" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.76" y="415.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1253" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1263.5" >[unknown]</text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (6 samples, 0.18%; 0.00%)</title><rect x="47.6" y="453" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.56" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1487.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="105.4" y="1701" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="108.35" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="51.9" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.90" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="130.3" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.28" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1,336 samples, 40.89%; +0.28%)</title><rect x="196.7" y="1797" width="482.6" height="15.0" fill="rgb(255,110,110)" rx="2" ry="2" />
<text  x="199.73" y="1807.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="255.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="60.6" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.57" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="821" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="831.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_expression (4 samples, 0.12%; 0.00%)</title><rect x="92.7" y="549" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.71" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.12%; 0.00%)</title><rect x="21.6" y="389" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.56" y="399.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (20 samples, 0.61%; +0.03%)</title><rect x="16.9" y="421" width="7.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="19.86" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1407.5" ></text>
</g>
<g >
<title>query::querier_base::close (2 samples, 0.06%; 0.00%)</title><rect x="1155.3" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.33" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (2 samples, 0.06%; +0.06%)</title><rect x="867.1" y="1765" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="870.10" y="1775.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_dcd3199037457158f6e2516231906d04f9637da6] (1 samples, 0.03%; +0.03%)</title><rect x="803.2" y="1765" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="806.17" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="63.8" y="389" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.82" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="759.5" y="1781" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="762.46" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1093" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1103.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::get (1 samples, 0.03%; +0.03%)</title><rect x="98.9" y="549" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="101.85" y="559.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; +0.03%)</title><rect x="184.5" y="1797" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="187.45" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="112.6" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.58" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="124.9" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.86" y="1487.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (1 samples, 0.03%; +0.03%)</title><rect x="447.8" y="1733" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="450.76" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="648.9" y="1685" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="651.94" y="1695.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="52.6" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.62" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (2 samples, 0.06%; 0.00%)</title><rect x="123.8" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.77" y="1551.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (19 samples, 0.58%; +0.03%)</title><rect x="1105.8" y="1781" width="6.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1108.84" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="90.2" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.18" y="383.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (1 samples, 0.03%; 0.00%)</title><rect x="186.6" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.62" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="103.9" y="1573" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="106.91" y="1583.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.15%; 0.00%)</title><rect x="271.9" y="1749" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="274.86" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="128.1" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.11" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (7 samples, 0.21%; 0.00%)</title><rect x="17.9" y="309" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.95" y="319.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (613 samples, 18.76%; +0.12%)</title><rect x="884.1" y="1797" width="221.4" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="887.07" y="1807.5" >seastar::concrete_execution_s..</text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (5 samples, 0.15%; +0.15%)</title><rect x="34.9" y="405" width="1.8" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="37.92" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (1 samples, 0.03%; 0.00%)</title><rect x="780.4" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="783.41" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="132.8" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1631.5" ></text>
</g>
<g >
<title>__tls_init (2 samples, 0.06%; +0.06%)</title><rect x="621.9" y="1685" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="624.85" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.1" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.13" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1535.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; +0.03%)</title><rect x="435.8" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="438.84" y="1759.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.95" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (1 samples, 0.03%; +0.03%)</title><rect x="1117.4" y="1637" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1120.40" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (1 samples, 0.03%; +0.03%)</title><rect x="1115.6" y="1557" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1118.60" y="1567.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (2 samples, 0.06%; +0.03%)</title><rect x="1107.6" y="1653" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1110.65" y="1663.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="11.8" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.81" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%; 0.00%)</title><rect x="127.7" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.75" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="128.1" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.11" y="1423.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="58.0" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.04" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="123.1" y="1477" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.05" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="478.5" y="1701" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="481.46" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.31%; 0.00%)</title><rect x="265.4" y="1749" width="3.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="268.36" y="1759.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.06%; +0.03%)</title><rect x="564.8" y="1717" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="567.78" y="1727.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (3 samples, 0.09%; 0.00%)</title><rect x="208.3" y="1781" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="211.29" y="1791.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="81.2" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.15" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="72.5" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.49" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; +0.06%)</title><rect x="698.8" y="1797" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="701.78" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; 0.00%)</title><rect x="115.5" y="1349" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.47" y="1359.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;database&gt;::~shared_ptr_count_for (1 samples, 0.03%; 0.00%)</title><rect x="751.5" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.52" y="1743.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (3 samples, 0.09%; 0.00%)</title><rect x="185.2" y="1765" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.18" y="1775.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1237" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1247.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (1 samples, 0.03%; 0.00%)</title><rect x="186.6" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.62" y="1807.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_currentLine (1 samples, 0.03%; +0.03%)</title><rect x="31.3" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="34.31" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; -0.06%)</title><rect x="262.1" y="1765" width="0.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="265.11" y="1775.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; +0.03%)</title><rect x="406.2" y="1621" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="409.22" y="1631.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="70.3" y="405" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="73.32" y="415.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%; +0.03%)</title><rect x="1092.8" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1095.84" y="1711.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (4 samples, 0.12%; 0.00%)</title><rect x="1116.0" y="1621" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1118.96" y="1631.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="72.1" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.12" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="964.3" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="967.26" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="71.8" y="341" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="74.76" y="351.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (12 samples, 0.37%; -0.12%)</title><rect x="792.0" y="1781" width="4.3" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="794.97" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="78.6" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.63" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="77.9" y="325" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="80.90" y="335.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="572.7" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="575.73" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1781" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1791.5" >[unknown]</text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (1 samples, 0.03%; +0.03%)</title><rect x="28.4" y="405" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="31.42" y="415.5" ></text>
</g>
<g >
<title>[unknown] (389 samples, 11.91%; 0.00%)</title><rect x="10.4" y="1941" width="140.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.36" y="1951.5" >[unknown]</text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; +0.03%)</title><rect x="15.4" y="549" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="18.42" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1567.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (2 samples, 0.06%; +0.03%)</title><rect x="152.7" y="1829" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="155.67" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1487.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="24.1" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.09" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (5 samples, 0.15%; 0.00%)</title><rect x="62.0" y="389" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="399.5" ></text>
</g>
<g >
<title>table::make_reader (236 samples, 7.22%; 0.00%)</title><rect x="581.0" y="1733" width="85.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="584.04" y="1743.5" >table::mak..</text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="63.8" y="277" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.82" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; 0.00%)</title><rect x="654.4" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="657.36" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="52.3" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.26" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%; +0.03%)</title><rect x="51.5" y="469" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="54.54" y="479.5" ></text>
</g>
<g >
<title>distributed_loader::init_system_keyspace (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1791.5" ></text>
</g>
<g >
<title>do_cql_test (2 samples, 0.06%; 0.00%)</title><rect x="99.9" y="709" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="719.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_allocate_map (1 samples, 0.03%; 0.00%)</title><rect x="23.0" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.00" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (2 samples, 0.06%; 0.00%)</title><rect x="54.1" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.06" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (2,766 samples, 84.66%; +0.15%)</title><rect x="157.0" y="1829" width="999.0" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="160.00" y="1839.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.44" y="1631.5" ></text>
</g>
<g >
<title>database::~database (1 samples, 0.03%; 0.00%)</title><rect x="751.5" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.52" y="1727.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (15 samples, 0.46%; -0.03%)</title><rect x="810.4" y="1733" width="5.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="813.39" y="1743.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (35 samples, 1.07%; -0.12%)</title><rect x="215.5" y="1781" width="12.7" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="218.52" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1861" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1871.5" >[unknown]</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="130.3" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.28" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="24.4" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.45" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; -0.03%)</title><rect x="953.1" y="1685" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="956.06" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (22 samples, 0.67%; 0.00%)</title><rect x="92.0" y="709" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.99" y="719.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (26 samples, 0.80%; -0.06%)</title><rect x="681.1" y="1813" width="9.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="684.09" y="1823.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;cql3::expr::conjunction&gt;::_M_addr (1 samples, 0.03%; +0.03%)</title><rect x="76.8" y="165" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="79.82" y="175.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.24%; 0.00%)</title><rect x="11.1" y="725" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="735.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="132.1" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.08" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%; +0.06%)</title><rect x="1089.6" y="1685" width="3.2" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1092.59" y="1695.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (82 samples, 2.51%; +0.06%)</title><rect x="1015.9" y="1605" width="29.6" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1018.91" y="1615.5" >se..</text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1157" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1167.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="68.9" y="229" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.87" y="239.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="112.2" y="1525" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="115.22" y="1535.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.06%; 0.00%)</title><rect x="128.8" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.83" y="1599.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; +0.06%)</title><rect x="697.7" y="1797" width="1.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="700.70" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="59.5" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.48" y="415.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (4 samples, 0.12%; -0.21%)</title><rect x="619.0" y="1669" width="1.4" height="15.0" fill="rgb(132,132,255)" rx="2" ry="2" />
<text  x="621.96" y="1679.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (2 samples, 0.06%; 0.00%)</title><rect x="1156.8" y="1813" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1159.77" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1583.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.12%; +0.06%)</title><rect x="179.4" y="1813" width="1.4" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="182.40" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (10 samples, 0.31%; +0.03%)</title><rect x="96.0" y="565" width="3.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="98.96" y="575.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="130.3" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.28" y="1615.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="97.0" y="501" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="100.05" y="511.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (3 samples, 0.09%; +0.09%)</title><rect x="19.4" y="277" width="1.1" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="22.39" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="125.9" y="1429" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="128.94" y="1439.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::StackType (1 samples, 0.03%; 0.00%)</title><rect x="14.7" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.06%; +0.03%)</title><rect x="227.4" y="1765" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="230.43" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.12%; -0.06%)</title><rect x="998.9" y="1621" width="1.5" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="1001.93" y="1631.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (4 samples, 0.12%; +0.03%)</title><rect x="725.2" y="1797" width="1.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="728.15" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (13 samples, 0.40%; -0.03%)</title><rect x="101.7" y="1749" width="4.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="104.74" y="1759.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="125.9" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.94" y="1455.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (26 samples, 0.80%; +0.06%)</title><rect x="170.0" y="1797" width="9.4" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="173.01" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="24.1" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.09" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="85.5" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.49" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="133.2" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.16" y="1503.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.18%; 0.00%)</title><rect x="976.5" y="1669" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="979.54" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::stats (2 samples, 0.06%; +0.03%)</title><rect x="661.6" y="1669" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="664.58" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="60.2" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.21" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; -0.06%)</title><rect x="618.2" y="1669" width="0.8" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="621.24" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; +0.03%)</title><rect x="131.7" y="1477" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="134.72" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (2 samples, 0.06%; +0.03%)</title><rect x="117.6" y="1541" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="120.63" y="1551.5" ></text>
</g>
<g >
<title>set_type_impl::value_comparator (1 samples, 0.03%; +0.03%)</title><rect x="881.5" y="1557" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="884.55" y="1567.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (1 samples, 0.03%; 0.00%)</title><rect x="186.3" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.26" y="1743.5" ></text>
</g>
<g >
<title>database::has_keyspace (4 samples, 0.12%; +0.06%)</title><rect x="862.4" y="1701" width="1.4" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="865.40" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="649.7" y="1701" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="652.66" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (55 samples, 1.68%; 0.00%)</title><rect x="110.0" y="1653" width="19.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1663.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="15.8" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.78" y="543.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="965" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="975.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.03%; 0.00%)</title><rect x="89.5" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.46" y="479.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.03%; 0.00%)</title><rect x="146.9" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.89" y="1775.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; -0.09%)</title><rect x="763.8" y="1781" width="0.4" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="766.80" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="709.3" y="1781" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="712.26" y="1791.5" ></text>
</g>
<g >
<title>__start_context (76 samples, 2.33%; 0.00%)</title><rect x="110.0" y="1909" width="27.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1919.5" >_..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; +0.03%)</title><rect x="803.5" y="1765" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="806.53" y="1775.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (6 samples, 0.18%; +0.03%)</title><rect x="846.5" y="1653" width="2.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="849.51" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1551.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (14 samples, 0.43%; +0.03%)</title><rect x="1112.7" y="1749" width="5.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1115.71" y="1759.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.37%; +0.09%)</title><rect x="474.8" y="1717" width="4.4" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="477.85" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (1 samples, 0.03%; +0.03%)</title><rect x="421.8" y="1653" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="424.75" y="1663.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="132.4" y="1461" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="135.44" y="1471.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%; +0.03%)</title><rect x="563.0" y="1701" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="565.98" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (2 samples, 0.06%; +0.06%)</title><rect x="44.7" y="389" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="47.67" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (5 samples, 0.15%; 0.00%)</title><rect x="62.0" y="373" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="383.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.21%; 0.00%)</title><rect x="444.1" y="1733" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="447.15" y="1743.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (13 samples, 0.40%; 0.00%)</title><rect x="144.7" y="1909" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.72" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.09%; 0.00%)</title><rect x="65.6" y="437" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.62" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="105.7" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.71" y="1711.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="663.4" y="1669" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="666.39" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.12%; 0.00%)</title><rect x="62.4" y="325" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.37" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (4 samples, 0.12%; 0.00%)</title><rect x="89.8" y="501" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.82" y="511.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (2,787 samples, 85.31%; 0.00%)</title><rect x="151.2" y="1877" width="1006.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.22" y="1887.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>std::_Optional_payload&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true, false, false&gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="53.7" y="405" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="56.70" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (2 samples, 0.06%; 0.00%)</title><rect x="915.9" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="918.86" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="112.6" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.58" y="1503.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (1 samples, 0.03%; +0.03%)</title><rect x="1115.2" y="1573" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1118.23" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="127.7" y="1541" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.75" y="1551.5" ></text>
</g>
<g >
<title>non-virtual thunk to cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::~single_column_primary_key_restrictions (1 samples, 0.03%; 0.00%)</title><rect x="700.6" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="703.59" y="1775.5" ></text>
</g>
<g >
<title>row::compact_and_expire (36 samples, 1.10%; +0.03%)</title><rect x="530.1" y="1717" width="13.0" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="533.11" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="130.3" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.28" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="102.8" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.83" y="1679.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (4 samples, 0.12%; 0.00%)</title><rect x="700.2" y="1797" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="703.23" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="131.7" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.72" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="159.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="133.2" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.16" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="54.1" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.06" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.09%; 0.00%)</title><rect x="110.8" y="1621" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.77" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="143.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (2 samples, 0.06%; 0.00%)</title><rect x="128.8" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.83" y="1583.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::RuleReturnValue (1 samples, 0.03%; +0.03%)</title><rect x="128.5" y="1589" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="131.47" y="1599.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1045" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1055.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.03%)</title><rect x="855.5" y="1637" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="858.54" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (9 samples, 0.28%; +0.09%)</title><rect x="524.3" y="1717" width="3.3" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="527.33" y="1727.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="866.4" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="869.38" y="1759.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.91" y="1391.5" ></text>
</g>
<g >
<title>do_cql_test (76 samples, 2.33%; 0.00%)</title><rect x="110.0" y="1845" width="27.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1855.5" >d..</text>
</g>
<g >
<title>sstables::mc::writer::consume (1 samples, 0.03%; 0.00%)</title><rect x="148.0" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.97" y="1871.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="89.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.82" y="431.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="132.1" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.08" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="933" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="943.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (5 samples, 0.15%; +0.06%)</title><rect x="79.3" y="373" width="1.9" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="82.35" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; 0.00%)</title><rect x="61.6" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.65" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="130.6" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.64" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="1114.5" y="1509" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1117.51" y="1519.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (39 samples, 1.19%; -0.24%)</title><rect x="549.3" y="1717" width="14.0" height="15.0" fill="rgb(121,121,255)" rx="2" ry="2" />
<text  x="552.25" y="1727.5" ></text>
</g>
<g >
<title>schema_mutations::digest (1 samples, 0.03%; 0.00%)</title><rect x="186.3" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.26" y="1727.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.09%; +0.03%)</title><rect x="65.6" y="421" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="68.62" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="124.1" y="1493" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="127.14" y="1503.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.00" y="1503.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; 0.00%)</title><rect x="128.1" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.11" y="1391.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="51.9" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.90" y="367.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (5 samples, 0.15%; +0.06%)</title><rect x="1108.7" y="1669" width="1.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1111.73" y="1679.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="767.8" y="1797" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="770.77" y="1807.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="750.4" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.43" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="981" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="991.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_super (1 samples, 0.03%; +0.03%)</title><rect x="88.7" y="485" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="91.74" y="495.5" ></text>
</g>
<g >
<title>reader_permit::signal (1 samples, 0.03%; -0.03%)</title><rect x="410.2" y="1637" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="413.20" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mWS (1 samples, 0.03%; +0.03%)</title><rect x="42.9" y="405" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="45.87" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.06%; 0.00%)</title><rect x="125.6" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.58" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="137.5" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.50" y="1871.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="750.4" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.43" y="1743.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="58.8" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.76" y="319.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; 0.00%)</title><rect x="872.5" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="875.52" y="1743.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="148.0" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.97" y="1807.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getCharIndex (1 samples, 0.03%; 0.00%)</title><rect x="31.7" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.67" y="399.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1141" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1151.5" ></text>
</g>
<g >
<title>schema_builder::build (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1567.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (14 samples, 0.43%; -0.03%)</title><rect x="257.1" y="1765" width="5.0" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="260.05" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.18%; -0.09%)</title><rect x="1043.0" y="1573" width="2.2" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="1046.00" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; -0.09%)</title><rect x="331.5" y="1605" width="1.0" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="334.46" y="1615.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (5 samples, 0.15%; +0.06%)</title><rect x="670.6" y="1749" width="1.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="673.61" y="1759.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="85.5" y="421" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="88.49" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.09%; +0.06%)</title><rect x="693.0" y="1797" width="1.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="696.01" y="1807.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="814.4" y="1701" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="817.36" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (20 samples, 0.61%; -0.09%)</title><rect x="466.5" y="1685" width="7.3" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="469.54" y="1695.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1439.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (13 samples, 0.40%; +0.03%)</title><rect x="94.9" y="613" width="4.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="97.88" y="623.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1589" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1599.5" >[unknown]</text>
</g>
<g >
<title>std::optional&lt;cql3::expr::expression&gt;::optional (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1583.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="965" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="975.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (2 samples, 0.06%; 0.00%)</title><rect x="148.7" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.70" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (3 samples, 0.09%; 0.00%)</title><rect x="133.5" y="1621" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.53" y="1631.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (1 samples, 0.03%; +0.03%)</title><rect x="25.5" y="421" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="28.53" y="431.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.03%; +0.03%)</title><rect x="831.3" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="834.34" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="54.1" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.06" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range_concurrent (1 samples, 0.03%; 0.00%)</title><rect x="964.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="967.62" y="1663.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_internal (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1743.5" ></text>
</g>
<g >
<title>perf_simple_que (3,267 samples, 100.00%; 0.00%)</title><rect x="10.0" y="1957" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" >perf_simple_que</text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="67.4" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.43" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.06%; +0.06%)</title><rect x="1041.9" y="1573" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1044.91" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; 0.00%)</title><rect x="1118.1" y="1813" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.12" y="1823.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::_Optional_payload_base (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.14" y="1567.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (1 samples, 0.03%; +0.03%)</title><rect x="929.9" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="932.94" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (7 samples, 0.21%; 0.00%)</title><rect x="32.0" y="389" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.03" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (4 samples, 0.12%; 0.00%)</title><rect x="62.4" y="309" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.37" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; +0.03%)</title><rect x="687.9" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="690.95" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_startIndex (1 samples, 0.03%; +0.03%)</title><rect x="27.7" y="405" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="30.70" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="112.6" y="1445" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="115.58" y="1455.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.03%; +0.03%)</title><rect x="330.7" y="1637" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="333.73" y="1647.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; +0.03%)</title><rect x="877.2" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="880.21" y="1791.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::restrictions::single_column_restrictions&gt;::~shared_ptr_count_for (1 samples, 0.03%; 0.00%)</title><rect x="700.6" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="703.59" y="1759.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (19 samples, 0.58%; -0.09%)</title><rect x="657.2" y="1701" width="6.9" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="660.25" y="1711.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.03%; +0.03%)</title><rect x="474.5" y="1701" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="477.49" y="1711.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_allocate_map (1 samples, 0.03%; 0.00%)</title><rect x="14.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="415.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple (1 samples, 0.03%; 0.00%)</title><rect x="73.6" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.57" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_channel (1 samples, 0.03%; +0.03%)</title><rect x="127.7" y="1525" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="130.75" y="1535.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%; +0.03%)</title><rect x="873.6" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="876.60" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (207 samples, 6.34%; 0.00%)</title><rect x="14.0" y="709" width="74.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.97" y="719.5" >seastar:..</text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.03%; 0.00%)</title><rect x="185.5" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.54" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::comparator_type (1 samples, 0.03%; 0.00%)</title><rect x="187.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.70" y="1663.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="89.5" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.46" y="367.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1429" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1439.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="133.2" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.16" y="1519.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.03%; 0.00%)</title><rect x="883.4" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.35" y="1695.5" ></text>
</g>
<g >
<title>auth::resource::resource (1 samples, 0.03%; +0.03%)</title><rect x="106.8" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="109.80" y="1759.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.06%)</title><rect x="425.7" y="1701" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="428.73" y="1711.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.25" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; +0.03%)</title><rect x="45.8" y="389" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="48.76" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="132.1" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.08" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="11.4" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.44" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1711.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (1 samples, 0.03%; +0.03%)</title><rect x="181.9" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="184.93" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="1045.5" y="1605" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1048.52" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="132.1" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.08" y="1551.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="575.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::create_clustering_ranges (1 samples, 0.03%; 0.00%)</title><rect x="883.4" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.35" y="1711.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator=&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.21" y="559.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; +0.03%)</title><rect x="215.2" y="1749" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="218.15" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="130.3" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.28" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; +0.03%)</title><rect x="1036.5" y="1525" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1039.50" y="1535.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.14" y="1407.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.03%; +0.03%)</title><rect x="261.7" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="264.75" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="149.8" y="1861" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.78" y="1871.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (119 samples, 3.64%; -0.21%)</title><rect x="821.2" y="1733" width="43.0" height="15.0" fill="rgb(132,132,255)" rx="2" ry="2" />
<text  x="824.23" y="1743.5" >serv..</text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1509" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1519.5" >[unknown]</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="111.9" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.85" y="1599.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (2 samples, 0.06%; +0.06%)</title><rect x="642.4" y="1669" width="0.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="645.44" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="111.9" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.85" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.30" y="1423.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (22 samples, 0.67%; 0.00%)</title><rect x="92.0" y="645" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.99" y="655.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="59.5" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.48" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="70.0" y="293" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="72.96" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.15%; 0.00%)</title><rect x="126.7" y="1573" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.66" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (10 samples, 0.31%; +0.06%)</title><rect x="991.0" y="1621" width="3.6" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="993.99" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1093" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1103.5" >[unknown]</text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;1ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="121.2" y="1221" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.25" y="1231.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_UPDATE (1 samples, 0.03%; +0.03%)</title><rect x="37.5" y="405" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="40.45" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="95.6" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.60" y="543.5" ></text>
</g>
<g >
<title>row_cache::do_update (1 samples, 0.03%; 0.00%)</title><rect x="750.4" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.43" y="1775.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_nonsingular_mutations_locally (1 samples, 0.03%; 0.00%)</title><rect x="186.6" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.62" y="1727.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (9 samples, 0.28%; 0.00%)</title><rect x="878.7" y="1685" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="881.66" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.12%; +0.09%)</title><rect x="825.9" y="1701" width="1.5" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="828.92" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="89.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.10" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="561.9" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="564.89" y="1695.5" ></text>
</g>
<g >
<title>compound_type&lt; (2 samples, 0.06%; 0.00%)</title><rect x="882.6" y="1669" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="885.63" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (1 samples, 0.03%; 0.00%)</title><rect x="14.7" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="559.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::finally_body&lt;table::stop (1 samples, 0.03%; 0.00%)</title><rect x="750.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.43" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (6 samples, 0.18%; 0.00%)</title><rect x="120.2" y="1509" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.16" y="1519.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="21.2" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.20" y="351.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.03%)</title><rect x="174.7" y="1765" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="177.70" y="1775.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%; -0.03%)</title><rect x="873.2" y="1765" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="876.24" y="1775.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; -0.03%)</title><rect x="748.3" y="1797" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="751.27" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (12 samples, 0.37%; +0.03%)</title><rect x="556.5" y="1685" width="4.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="559.48" y="1695.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_dcd3199037457158f6e2516231906d04f9637da6] (1 samples, 0.03%; +0.03%)</title><rect x="21.6" y="325" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="24.56" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_state (1 samples, 0.03%; +0.03%)</title><rect x="95.2" y="565" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="98.24" y="575.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1 samples, 0.03%; 0.00%)</title><rect x="749.7" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="752.71" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (13 samples, 0.40%; +0.06%)</title><rect x="353.9" y="1605" width="4.6" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="356.85" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="123.4" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.41" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="111.1" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.13" y="1487.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="128.8" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.83" y="1567.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (2 samples, 0.06%; 0.00%)</title><rect x="133.9" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.89" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (13 samples, 0.40%; 0.00%)</title><rect x="1113.1" y="1717" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.07" y="1727.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (3 samples, 0.09%; +0.09%)</title><rect x="180.8" y="1813" width="1.1" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="183.84" y="1823.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.03%; 0.00%)</title><rect x="146.2" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.17" y="1791.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::~metric_groups_impl (1 samples, 0.03%; 0.00%)</title><rect x="751.5" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.52" y="1695.5" ></text>
</g>
<g >
<title>table::query (1,234 samples, 37.77%; +0.58%)</title><rect x="233.6" y="1781" width="445.7" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="236.58" y="1791.5" >table::query</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; +0.03%)</title><rect x="68.2" y="373" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="71.15" y="383.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (6 samples, 0.18%; -0.03%)</title><rect x="813.6" y="1717" width="2.2" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="816.64" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="13.3" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.25" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; +0.03%)</title><rect x="133.9" y="1557" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="136.89" y="1567.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="77.5" y="277" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="80.54" y="287.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::get_line (1 samples, 0.03%; +0.03%)</title><rect x="25.9" y="421" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="28.89" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="135.0" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.97" y="1599.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::get_state (1 samples, 0.03%; +0.03%)</title><rect x="59.1" y="453" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="62.12" y="463.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="67.1" y="373" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="70.07" y="383.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="63.5" y="261" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="66.46" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="148.3" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.33" y="1887.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (9 samples, 0.28%; 0.00%)</title><rect x="88.7" y="597" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="607.5" ></text>
</g>
<g >
<title>query::result_set_builder::deserialize (1 samples, 0.03%; -0.03%)</title><rect x="185.5" y="1637" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="188.54" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mWS (1 samples, 0.03%; +0.03%)</title><rect x="46.5" y="421" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="49.48" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.03%; 0.00%)</title><rect x="1189.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.64" y="1919.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;, true&gt;::_Head_base&lt;std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="82.2" y="325" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="85.24" y="335.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (4 samples, 0.12%; 0.00%)</title><rect x="92.7" y="565" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.71" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="59.8" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.84" y="319.5" ></text>
</g>
<g >
<title>validation::validate_cql_key (2 samples, 0.06%; 0.00%)</title><rect x="882.6" y="1685" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="885.63" y="1695.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.66" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1487.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (3 samples, 0.09%; -0.03%)</title><rect x="875.0" y="1797" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="878.04" y="1807.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (1 samples, 0.03%; -0.18%)</title><rect x="348.1" y="1605" width="0.3" height="15.0" fill="rgb(143,143,255)" rx="2" ry="2" />
<text  x="351.07" y="1615.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.44" y="1647.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (1 samples, 0.03%; +0.03%)</title><rect x="186.6" y="1637" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="189.62" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1599.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="417.4" y="1637" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="420.42" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="112.2" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.22" y="1567.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (3 samples, 0.09%; 0.00%)</title><rect x="133.5" y="1605" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.53" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (9 samples, 0.28%; +0.15%)</title><rect x="321.7" y="1653" width="3.3" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="324.70" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="15.8" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.78" y="559.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1125" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1135.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="116.6" y="1381" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="119.55" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="68.5" y="293" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="71.51" y="303.5" ></text>
</g>
<g >
<title>posix_memalign (4 samples, 0.12%; +0.03%)</title><rect x="402.6" y="1557" width="1.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="405.61" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.09%)</title><rect x="866.4" y="1733" width="0.3" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="869.38" y="1743.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (8 samples, 0.24%; +0.03%)</title><rect x="79.0" y="437" width="2.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="81.99" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.09%; +0.03%)</title><rect x="596.2" y="1685" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="599.21" y="1695.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.09%; 0.00%)</title><rect x="57.3" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.32" y="463.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (1 samples, 0.03%; 0.00%)</title><rect x="14.7" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (71 samples, 2.17%; -0.06%)</title><rect x="547.4" y="1749" width="25.7" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="550.45" y="1759.5" >s..</text>
</g>
<g >
<title>dht::tri_compare (12 samples, 0.37%; +0.18%)</title><rect x="613.9" y="1685" width="4.3" height="15.0" fill="rgb(255,143,143)" rx="2" ry="2" />
<text  x="616.91" y="1695.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.03%; +0.03%)</title><rect x="716.5" y="1781" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="719.48" y="1791.5" ></text>
</g>
<g >
<title>create_partitions (205 samples, 6.27%; 0.00%)</title><rect x="14.0" y="645" width="74.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.97" y="655.5" >create_p..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="57.3" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.32" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (20 samples, 0.61%; +0.09%)</title><rect x="361.1" y="1589" width="7.2" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="364.07" y="1599.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1285" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.91" y="1295.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; -0.03%)</title><rect x="515.7" y="1701" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="518.66" y="1711.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (8 samples, 0.24%; -0.06%)</title><rect x="1100.8" y="1733" width="2.9" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="1103.79" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="90.2" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.18" y="351.5" ></text>
</g>
<g >
<title>cql3::query_processor::prepare_internal (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1727.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="124.1" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.14" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="99.9" y="741" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="751.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="115.5" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.47" y="1263.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="58.8" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.76" y="479.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (3 samples, 0.09%; 0.00%)</title><rect x="63.8" y="405" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.82" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (197 samples, 6.03%; 0.00%)</title><rect x="16.5" y="549" width="71.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.50" y="559.5" >cql3_par..</text>
</g>
<g >
<title>dht::sharder::shard_of (1 samples, 0.03%; +0.03%)</title><rect x="1007.2" y="1605" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1010.24" y="1615.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1237" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1247.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="54.1" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.06" y="303.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (146 samples, 4.47%; +0.09%)</title><rect x="601.3" y="1717" width="52.7" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="604.26" y="1727.5" >memta..</text>
</g>
<g >
<title>create_partitions (76 samples, 2.33%; 0.00%)</title><rect x="110.0" y="1829" width="27.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1839.5" >c..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="69.2" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.23" y="143.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reserve_map_at_back (1 samples, 0.03%; 0.00%)</title><rect x="23.0" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.00" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (3 samples, 0.09%; 0.00%)</title><rect x="33.1" y="341" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.12" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::lw_shared_ptr&lt;schema const&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="186.3" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.26" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (92 samples, 2.82%; +0.03%)</title><rect x="16.5" y="469" width="33.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="19.50" y="479.5" >an..</text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (2 samples, 0.06%; 0.00%)</title><rect x="50.5" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.45" y="495.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.03%; +0.03%)</title><rect x="1109.5" y="1637" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1112.46" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="997" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1007.5" >[unknown]</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (14 samples, 0.43%; 0.00%)</title><rect x="1112.7" y="1765" width="5.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.71" y="1775.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (76 samples, 2.33%; 0.00%)</title><rect x="110.0" y="1797" width="27.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1807.5" >c..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.14" y="1423.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="127.4" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.39" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (21 samples, 0.64%; 0.00%)</title><rect x="907.9" y="1653" width="7.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="910.91" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="12.5" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.53" y="431.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (2 samples, 0.06%; 0.00%)</title><rect x="99.9" y="645" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="655.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="59.5" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.48" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="137.1" y="1381" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="140.14" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; 0.00%)</title><rect x="115.5" y="1381" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.47" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (2 samples, 0.06%; 0.00%)</title><rect x="117.6" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.63" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.30" y="1487.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.18%; 0.00%)</title><rect x="51.2" y="501" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.18" y="511.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="109.7" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.69" y="1903.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="138.2" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="141.22" y="1919.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (38 samples, 1.16%; -0.09%)</title><rect x="629.8" y="1685" width="13.7" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="632.80" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1301" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1311.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (1 samples, 0.03%; +0.03%)</title><rect x="543.1" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="546.11" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.03%)</title><rect x="788.7" y="1765" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="791.72" y="1775.5" ></text>
</g>
<g >
<title>do_with_cql_env_thread (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1903.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (2 samples, 0.06%; 0.00%)</title><rect x="700.2" y="1781" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="703.23" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="121.6" y="1381" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="124.61" y="1391.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="24.4" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.45" y="383.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (1 samples, 0.03%; 0.00%)</title><rect x="137.5" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.50" y="1807.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (2 samples, 0.06%; 0.00%)</title><rect x="50.5" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.45" y="511.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%; +0.03%)</title><rect x="446.7" y="1733" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="449.68" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="122.3" y="1573" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="125.33" y="1583.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1743.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.06%; +0.03%)</title><rect x="318.1" y="1669" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="321.09" y="1679.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; 0.00%)</title><rect x="708.9" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="711.90" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="123.1" y="1493" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="126.05" y="1503.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="367.5" ></text>
</g>
<g >
<title>TLS wrapper function for logalloc::shard_segment_pool (1 samples, 0.03%; +0.03%)</title><rect x="144.7" y="1845" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="147.72" y="1855.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::reactor::task_queue, unsigned int&amp;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;, float&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1743.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.03%; +0.03%)</title><rect x="340.8" y="1621" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="343.85" y="1631.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (8 samples, 0.24%; 0.00%)</title><rect x="870.3" y="1765" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="873.35" y="1775.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="60.9" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.93" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;  (1 samples, 0.03%; 0.00%)</title><rect x="877.2" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="880.21" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1109" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1119.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; +0.03%)</title><rect x="650.4" y="1701" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="653.39" y="1711.5" ></text>
</g>
<g >
<title>db::block_for (2 samples, 0.06%; -0.03%)</title><rect x="1061.1" y="1653" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1064.06" y="1663.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="21.2" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.20" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.12%; 0.00%)</title><rect x="1043.7" y="1557" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1046.72" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (8 samples, 0.24%; 0.00%)</title><rect x="43.2" y="405" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.23" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; +0.03%)</title><rect x="751.5" y="1605" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="754.52" y="1615.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (202 samples, 6.18%; 0.00%)</title><rect x="14.7" y="613" width="73.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="623.5" >cql3::qu..</text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="693" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="703.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1125" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1135.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1813" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1823.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1173" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1183.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="11.8" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.81" y="335.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%; +0.03%)</title><rect x="911.9" y="1605" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="914.89" y="1615.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%; -0.03%)</title><rect x="660.5" y="1685" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="663.50" y="1695.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.03%)</title><rect x="572.0" y="1733" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="575.01" y="1743.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (3 samples, 0.09%; 0.00%)</title><rect x="118.7" y="1557" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.72" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="78.3" y="373" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="81.26" y="383.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="130.3" y="1445" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="133.28" y="1455.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (58 samples, 1.78%; +0.37%)</title><rect x="380.9" y="1573" width="21.0" height="15.0" fill="rgb(255,77,77)" rx="2" ry="2" />
<text  x="383.94" y="1583.5" ></text>
</g>
<g >
<title>dht::tri_compare (6 samples, 0.18%; +0.15%)</title><rect x="1074.1" y="1605" width="2.1" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="1077.06" y="1615.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; 0.00%)</title><rect x="749.4" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="752.35" y="1759.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (2 samples, 0.06%; 0.00%)</title><rect x="99.9" y="677" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="687.5" ></text>
</g>
<g >
<title>db::schema_tables::create_columns_from_column_rows (1 samples, 0.03%; 0.00%)</title><rect x="187.7" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.70" y="1727.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::storage_proxy::send_to_live_endpoints (2 samples, 0.06%; 0.00%)</title><rect x="750.8" y="1813" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.80" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (3 samples, 0.09%; 0.00%)</title><rect x="63.8" y="261" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.82" y="271.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.58%; 0.00%)</title><rect x="1009.0" y="1605" width="6.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1012.04" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="191.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1109" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1119.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (2 samples, 0.06%; 0.00%)</title><rect x="145.1" y="1861" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.08" y="1871.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range_concurrent (1 samples, 0.03%; 0.00%)</title><rect x="964.6" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="967.62" y="1631.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (3 samples, 0.09%; 0.00%)</title><rect x="665.2" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="668.19" y="1727.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; +0.03%)</title><rect x="643.9" y="1685" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="646.88" y="1695.5" ></text>
</g>
<g >
<title>auth::standard_role_manager::start (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1791.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (6 samples, 0.18%; 0.00%)</title><rect x="120.2" y="1557" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.16" y="1567.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (3 samples, 0.09%; +0.06%)</title><rect x="880.5" y="1621" width="1.0" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="883.46" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (7 samples, 0.21%; 0.00%)</title><rect x="79.3" y="421" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.35" y="431.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (5 samples, 0.15%; +0.03%)</title><rect x="135.7" y="1621" width="1.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="138.69" y="1631.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; +0.03%)</title><rect x="894.5" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="897.55" y="1743.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1221" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1231.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (11 samples, 0.34%; +0.12%)</title><rect x="1145.9" y="1781" width="4.0" height="15.0" fill="rgb(255,165,165)" rx="2" ry="2" />
<text  x="1148.94" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.09%; +0.03%)</title><rect x="110.8" y="1525" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="113.77" y="1535.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (1 samples, 0.03%; -0.18%)</title><rect x="815.4" y="1701" width="0.4" height="15.0" fill="rgb(143,143,255)" rx="2" ry="2" />
<text  x="818.45" y="1711.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier&gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="15.8" y="517" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="18.78" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1173" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1183.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (2 samples, 0.06%; +0.03%)</title><rect x="109.0" y="1685" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="111.97" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1733" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1743.5" >[unknown]</text>
</g>
<g >
<title>seastar::thread_context::main (9 samples, 0.28%; 0.00%)</title><rect x="88.7" y="725" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.74" y="735.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (11 samples, 0.34%; 0.00%)</title><rect x="17.2" y="373" width="4.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.22" y="383.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="59.5" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.48" y="447.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; +0.03%)</title><rect x="62.7" y="293" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="65.73" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (44 samples, 1.35%; +0.03%)</title><rect x="764.5" y="1813" width="15.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="767.52" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.06%; 0.00%)</title><rect x="99.9" y="757" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="767.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="52.6" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.62" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (8 samples, 0.24%; 0.00%)</title><rect x="62.0" y="437" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="447.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (1 samples, 0.03%; -0.03%)</title><rect x="413.4" y="1637" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="416.45" y="1647.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.44" y="1487.5" ></text>
</g>
<g >
<title>query_mutations_on_all_shards (1 samples, 0.03%; 0.00%)</title><rect x="186.6" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.62" y="1711.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.06%; +0.03%)</title><rect x="876.1" y="1813" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="879.13" y="1823.5" ></text>
</g>
<g >
<title>schema_registry::get (10 samples, 0.31%; +0.21%)</title><rect x="978.7" y="1669" width="3.6" height="15.0" fill="rgb(255,132,132)" rx="2" ry="2" />
<text  x="981.71" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (55 samples, 1.68%; 0.00%)</title><rect x="110.0" y="1669" width="19.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1765" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1775.5" >[unknown]</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.15%; 0.00%)</title><rect x="126.7" y="1589" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.66" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1109" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1119.5" ></text>
</g>
<g >
<title>database::query (1 samples, 0.03%; +0.03%)</title><rect x="152.3" y="1829" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="155.31" y="1839.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (1 samples, 0.03%; +0.03%)</title><rect x="10.0" y="1941" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (76 samples, 2.33%; 0.00%)</title><rect x="110.0" y="1813" width="27.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1823.5" >s..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.7" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.68" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="133.2" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.16" y="1567.5" ></text>
</g>
<g >
<title>memtable::evict_entry (2 samples, 0.06%; 0.00%)</title><rect x="149.8" y="1845" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.78" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (6 samples, 0.18%; +0.03%)</title><rect x="56.6" y="485" width="2.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="59.59" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="119.1" y="1509" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.08" y="1519.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="111.5" y="1445" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="114.49" y="1455.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (356 samples, 10.90%; +0.21%)</title><rect x="956.0" y="1701" width="128.5" height="15.0" fill="rgb(255,132,132)" rx="2" ry="2" />
<text  x="958.95" y="1711.5" >service::storage..</text>
</g>
<g >
<title>cql3::query_processor::get_statement (202 samples, 6.18%; 0.00%)</title><rect x="14.7" y="597" width="73.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="607.5" >cql3::qu..</text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.03%)</title><rect x="628.7" y="1669" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="631.71" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.12%; 0.00%)</title><rect x="471.6" y="1653" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="474.60" y="1663.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1221" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1231.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; +0.03%)</title><rect x="753.7" y="1797" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="756.69" y="1807.5" ></text>
</g>
<g >
<title>main (2,787 samples, 85.31%; 0.00%)</title><rect x="151.2" y="1925" width="1006.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="154.22" y="1935.5" >main</text>
</g>
<g >
<title>query_result_builder::consume (98 samples, 3.00%; 0.00%)</title><rect x="480.6" y="1717" width="35.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="483.63" y="1727.5" >qu..</text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (5 samples, 0.15%; 0.00%)</title><rect x="145.8" y="1861" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.81" y="1871.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.66" y="1423.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN4cql34expr10expressionEEER18overloaded_functorIJZNS5_18prepare_expressionERKS6_R8databaseRKN7seastar13basic_sstringIcjLj15ELb1EEENSD_13lw_shared_ptrINS4_20column_specificationEEEE3$_0ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_1ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_2ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_3ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_4ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_5ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_6ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_7ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_8ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_9ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_10ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_11ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_12ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_13ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_14ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_15EERSt7variantIJNS5_11conjunctionENS5_15binary_operatorENS5_12column_valueENS5_5tokenENS5_21unresolved_identifierENS5_25column_mutation_attributeENS5_13function_callENS5_4castENS5_15field_selectionENS5_4nullENS5_13bind_variableENS5_16untyped_constantENS5_8constantENS5_17tuple_constructorENS5_22collection_constructorENS5_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES12_S1L_ (1 samples, 0.03%; 0.00%)</title><rect x="101.7" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.74" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (3 samples, 0.09%; +0.03%)</title><rect x="403.0" y="1541" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="405.97" y="1551.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base (1 samples, 0.03%; 0.00%)</title><rect x="136.1" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.05" y="1567.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="73.6" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.57" y="319.5" ></text>
</g>
<g >
<title>do_cql_test (22 samples, 0.67%; 0.00%)</title><rect x="92.0" y="693" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.99" y="703.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; +0.03%)</title><rect x="24.4" y="341" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="27.45" y="351.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (5 samples, 0.15%; 0.00%)</title><rect x="120.5" y="1445" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.52" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="85.1" y="469" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="88.13" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (20 samples, 0.61%; 0.00%)</title><rect x="16.9" y="437" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.86" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (3 samples, 0.09%; 0.00%)</title><rect x="12.9" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.89" y="463.5" ></text>
</g>
<g >
<title>do_query&lt;(anonymous namespace)::mutation_query_result_builder&gt; (1 samples, 0.03%; 0.00%)</title><rect x="186.6" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.62" y="1679.5" ></text>
</g>
<g >
<title>cql3::keyspace_element_name::operator= (1 samples, 0.03%; 0.00%)</title><rect x="53.7" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.70" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="11.1" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (5 samples, 0.15%; 0.00%)</title><rect x="68.5" y="373" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.51" y="383.5" ></text>
</g>
<g >
<title>mutation_partition::append_clustered_row (1 samples, 0.03%; 0.00%)</title><rect x="1109.5" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1112.46" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (51 samples, 1.56%; 0.00%)</title><rect x="27.7" y="421" width="18.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.70" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1807.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1711.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; +0.03%)</title><rect x="1108.0" y="1605" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1111.01" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="132.1" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.08" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="914.8" y="1621" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="917.78" y="1631.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="11.8" y="277" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="14.81" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (14 samples, 0.43%; 0.00%)</title><rect x="1112.7" y="1781" width="5.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.71" y="1791.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (37 samples, 1.13%; -0.09%)</title><rect x="916.6" y="1717" width="13.3" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="919.58" y="1727.5" ></text>
</g>
<g >
<title>auth::resource::resource (3 samples, 0.09%; +0.09%)</title><rect x="824.1" y="1717" width="1.1" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="827.12" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; +0.06%)</title><rect x="119.1" y="1461" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="122.08" y="1471.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (5 samples, 0.15%; 0.00%)</title><rect x="145.8" y="1845" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.81" y="1855.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (5 samples, 0.15%; 0.00%)</title><rect x="135.7" y="1637" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.69" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; 0.00%)</title><rect x="115.5" y="1413" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.47" y="1423.5" ></text>
</g>
<g >
<title>db::cql_type_parser::parse (1 samples, 0.03%; 0.00%)</title><rect x="187.7" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.70" y="1711.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::pop_back (2 samples, 0.06%; 0.00%)</title><rect x="50.5" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.45" y="479.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1381" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1391.5" >[unknown]</text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="331.5" y="1621" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="334.46" y="1631.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.12%; 0.00%)</title><rect x="1031.4" y="1557" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1034.44" y="1567.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="129.2" y="1493" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="132.19" y="1503.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1317" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1327.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; +0.03%)</title><rect x="894.9" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="897.91" y="1743.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="672.4" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="675.42" y="1759.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (9 samples, 0.28%; 0.00%)</title><rect x="67.8" y="421" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.79" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="167.5" y="1797" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="170.48" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="131.7" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.72" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="76.1" y="37" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="79.10" y="47.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="89.1" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.10" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (6 samples, 0.18%; 0.00%)</title><rect x="120.2" y="1493" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.16" y="1503.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::expr::expression&gt;::new_allocator (1 samples, 0.03%; +0.03%)</title><rect x="116.9" y="1269" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="119.91" y="1279.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="71.8" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.76" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="136.4" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.42" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; +0.03%)</title><rect x="195.7" y="1797" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="198.65" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (19 samples, 0.58%; -0.03%)</title><rect x="908.3" y="1637" width="6.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="911.27" y="1647.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (1 samples, 0.03%; 0.00%)</title><rect x="1155.3" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.33" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.15%; -0.03%)</title><rect x="1063.2" y="1637" width="1.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1066.22" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (7 samples, 0.21%; 0.00%)</title><rect x="115.1" y="1477" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.11" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="115.5" y="1237" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="118.47" y="1247.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="1112.3" y="1669" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1115.34" y="1679.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_endpoint (1 samples, 0.03%; +0.03%)</title><rect x="188.4" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="191.43" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="112.6" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.58" y="1519.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.09%; +0.09%)</title><rect x="754.8" y="1797" width="1.1" height="15.0" fill="rgb(255,176,176)" rx="2" ry="2" />
<text  x="757.77" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="223.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="1237" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1247.5" >[unknown]</text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="116.6" y="1429" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.55" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (6 samples, 0.18%; 0.00%)</title><rect x="120.2" y="1477" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.16" y="1487.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.03%; -0.03%)</title><rect x="866.0" y="1717" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="869.01" y="1727.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.03%; 0.00%)</title><rect x="233.2" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="236.21" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="60.2" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.21" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.03%)</title><rect x="857.3" y="1669" width="0.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="860.35" y="1679.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; -0.03%)</title><rect x="638.8" y="1653" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="641.83" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="61.6" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.65" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="60.6" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.57" y="351.5" ></text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1541" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1551.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (251 samples, 7.68%; 0.00%)</title><rect x="11.1" y="1797" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="1807.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::selector (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (3 samples, 0.09%; 0.00%)</title><rect x="146.2" y="1797" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="149.17" y="1807.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (43 samples, 1.32%; 0.00%)</title><rect x="548.5" y="1733" width="15.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="551.53" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%; 0.00%)</title><rect x="1044.8" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1047.80" y="1551.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="60.2" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.21" y="431.5" ></text>
</g>
<g >
<title>std::optional&lt;cql3::expr::expression&gt;::optional (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.14" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (2 samples, 0.06%; 0.00%)</title><rect x="103.9" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.91" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; 0.00%)</title><rect x="115.5" y="1429" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.47" y="1439.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::raw::delete_statement*, std::default_delete&lt;cql3::statements::raw::delete_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="98.5" y="517" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="101.49" y="527.5" ></text>
</g>
<g >
<title>free (2 samples, 0.06%; -0.09%)</title><rect x="473.8" y="1685" width="0.7" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="476.76" y="1695.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="130.3" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.28" y="1503.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (12 samples, 0.37%; 0.00%)</title><rect x="95.2" y="597" width="4.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.24" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="11.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.44" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="89.1" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.10" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (16 samples, 0.49%; 0.00%)</title><rect x="878.3" y="1749" width="5.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="881.30" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="63.8" y="325" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.82" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1333" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.91" y="1343.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.94" y="495.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_token_present (1 samples, 0.03%; +0.03%)</title><rect x="34.6" y="405" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="37.56" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (1 samples, 0.03%; +0.03%)</title><rect x="154.1" y="1829" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="157.11" y="1839.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; 0.00%)</title><rect x="734.2" y="1797" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="737.18" y="1807.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (3 samples, 0.09%; 0.00%)</title><rect x="749.0" y="1813" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="751.99" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (5 samples, 0.15%; 0.00%)</title><rect x="62.0" y="341" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.01" y="351.5" ></text>
</g>
<g >
<title>do_cql_test (8 samples, 0.24%; 0.00%)</title><rect x="11.1" y="645" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="655.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.03%; +0.03%)</title><rect x="945.5" y="1717" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="948.48" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="111.1" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.13" y="1455.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="877.9" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="880.93" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (292 samples, 8.94%; +0.06%)</title><rect x="319.9" y="1669" width="105.5" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="322.90" y="1679.5" >partition_sn..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (76 samples, 2.33%; 0.00%)</title><rect x="110.0" y="1861" width="27.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.05" y="1871.5" >s..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="750.1" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.07" y="1631.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (6 samples, 0.18%; +0.03%)</title><rect x="331.1" y="1637" width="2.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="334.10" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="473.0" y="1669" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="476.04" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (3 samples, 0.09%; 0.00%)</title><rect x="115.5" y="1365" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.47" y="1375.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="76.5" y="261" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.46" y="271.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; +0.03%)</title><rect x="135.3" y="1589" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="138.33" y="1599.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (1 samples, 0.03%; +0.03%)</title><rect x="1049.1" y="1669" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1052.14" y="1679.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::metrics::impl::metric_family&gt; &gt; &gt; &gt;::destroy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, seastar::metrics::impl::metric_family&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="751.5" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.52" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="1116.0" y="1557" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1118.96" y="1567.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (11 samples, 0.34%; 0.00%)</title><rect x="1034.3" y="1541" width="4.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1037.33" y="1551.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.12%; +0.03%)</title><rect x="716.8" y="1781" width="1.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="719.84" y="1791.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (12 samples, 0.37%; +0.03%)</title><rect x="1145.6" y="1797" width="4.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1148.57" y="1807.5" ></text>
</g>
<g >
<title>cql3::column_identifier_raw::prepare_column_identifier (2 samples, 0.06%; +0.06%)</title><rect x="92.0" y="565" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="94.99" y="575.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1077" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.03%; +0.03%)</title><rect x="30.9" y="309" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="33.95" y="319.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.15%; +0.15%)</title><rect x="672.8" y="1765" width="1.8" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="675.78" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="76.5" y="277" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.46" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (6 samples, 0.18%; -0.03%)</title><rect x="621.1" y="1701" width="2.2" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="624.13" y="1711.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier&gt;::shared_ptr (1 samples, 0.03%; +0.03%)</title><rect x="129.6" y="1621" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="132.55" y="1631.5" ></text>
</g>
<g >
<title>ser::serializer&lt;schema_mutations&gt;::write&lt;bytes_ostream&gt; (1 samples, 0.03%; 0.00%)</title><rect x="187.3" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.34" y="1759.5" ></text>
</g>
<g >
<title>partition_snapshot_row_cursor::recreate_current_row (1 samples, 0.03%; +0.03%)</title><rect x="148.3" y="1829" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="151.33" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3 samples, 0.09%; 0.00%)</title><rect x="33.1" y="325" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.12" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (9 samples, 0.28%; -0.06%)</title><rect x="1012.7" y="1573" width="3.2" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="1015.66" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (6 samples, 0.18%; 0.00%)</title><rect x="120.2" y="1541" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.16" y="1551.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (1 samples, 0.03%; -0.06%)</title><rect x="227.1" y="1733" width="0.3" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="230.07" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="116.6" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.55" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="130.6" y="1589" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="133.64" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="51.9" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.90" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.21%; -0.03%)</title><rect x="951.3" y="1701" width="2.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="954.25" y="1711.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="1285" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.38" y="1295.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (1 samples, 0.03%; +0.03%)</title><rect x="88.4" y="645" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="91.38" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="59.8" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.84" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="131.0" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.00" y="1599.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%; 0.00%)</title><rect x="1108.0" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.01" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (7 samples, 0.21%; -0.03%)</title><rect x="1152.8" y="1813" width="2.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1155.80" y="1823.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%; 0.00%)</title><rect x="748.6" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="751.63" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; -0.03%)</title><rect x="195.3" y="1797" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="198.29" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (3 samples, 0.09%; +0.03%)</title><rect x="569.1" y="1701" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="572.12" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="116.9" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.91" y="1327.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (3 samples, 0.09%; +0.03%)</title><rect x="878.7" y="1637" width="1.0" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="881.66" y="1647.5" ></text>
</g>
<g >
<title>service::storage_service::init_server (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1871.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%; -0.03%)</title><rect x="360.7" y="1589" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="363.71" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; -0.03%)</title><rect x="715.4" y="1765" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="718.40" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="126.7" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.66" y="1391.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; +0.03%)</title><rect x="125.2" y="1589" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="128.22" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="149.1" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="152.06" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="132.8" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.80" y="1423.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.14" y="1583.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::push (1 samples, 0.03%; 0.00%)</title><rect x="67.1" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.07" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.06%)</title><rect x="671.7" y="1717" width="0.7" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="674.70" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="70.7" y="261" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="73.68" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="116.6" y="1445" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.55" y="1455.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="148.7" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.70" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (2 samples, 0.06%; 0.00%)</title><rect x="82.2" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.24" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; +0.06%)</title><rect x="115.8" y="1301" width="0.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="118.83" y="1311.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (5 samples, 0.15%; -0.12%)</title><rect x="864.6" y="1733" width="1.8" height="15.0" fill="rgb(165,165,255)" rx="2" ry="2" />
<text  x="867.57" y="1743.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (8 samples, 0.24%; 0.00%)</title><rect x="11.1" y="597" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="607.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.03%; +0.03%)</title><rect x="231.4" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="234.41" y="1791.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, true, false, false&gt;::_Optional_payload_base (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.14" y="1551.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="751.5" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.52" y="1759.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="58.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.40" y="463.5" ></text>
</g>
<g >
<title>cql3::sets::setter::execute (1 samples, 0.03%; 0.00%)</title><rect x="881.5" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="884.55" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="137.9" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.86" y="1871.5" ></text>
</g>
<g >
<title>__start_context (13 samples, 0.40%; 0.00%)</title><rect x="144.7" y="1925" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="147.72" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (4 samples, 0.12%; 0.00%)</title><rect x="115.1" y="1461" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.11" y="1471.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.03%; +0.03%)</title><rect x="844.3" y="1653" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="847.34" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_type (1 samples, 0.03%; +0.03%)</title><rect x="75.0" y="421" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="78.01" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="134.2" y="1349" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.25" y="1359.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.03%; +0.03%)</title><rect x="1048.8" y="1621" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1051.78" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (4 samples, 0.12%; 0.00%)</title><rect x="14.7" y="565" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.70" y="575.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.64%; 0.00%)</title><rect x="987.0" y="1653" width="7.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="990.01" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="113.7" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.66" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="126.3" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.30" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="233.2" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="236.21" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="60.2" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.21" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (2 samples, 0.06%; 0.00%)</title><rect x="80.4" y="309" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="83.43" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="63.8" y="357" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.82" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (6 samples, 0.18%; 0.00%)</title><rect x="89.8" y="517" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.82" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="21.2" y="325" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="24.20" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="57.0" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.95" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="62.0" y="101" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="65.01" y="111.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="132.4" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.44" y="1567.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.21%; -0.03%)</title><rect x="787.3" y="1797" width="2.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="790.28" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="1141" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.02" y="1151.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="136.4" y="1525" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="139.42" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (6 samples, 0.18%; -0.09%)</title><rect x="934.3" y="1717" width="2.1" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="937.28" y="1727.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (17 samples, 0.52%; -0.06%)</title><rect x="1076.2" y="1605" width="6.2" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="1079.23" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="52.6" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.62" y="431.5" ></text>
</g>
<g >
<title>seastar::metrics::impl::metric_groups_impl::add_metric (1 samples, 0.03%; 0.00%)</title><rect x="188.1" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="191.07" y="1663.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="1221" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.66" y="1231.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.18%; +0.15%)</title><rect x="1140.9" y="1765" width="2.1" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="1143.88" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="78.6" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.63" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.10" y="303.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (2 samples, 0.06%; +0.06%)</title><rect x="639.2" y="1653" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="642.19" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (248 samples, 7.59%; 0.00%)</title><rect x="11.1" y="789" width="89.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.08" y="799.5" >[unknown]</text>
</g>
<g >
<title>service::storage_proxy::query_partition_key_range_concurrent (1 samples, 0.03%; 0.00%)</title><rect x="964.6" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="967.62" y="1647.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3 samples, 0.09%; +0.03%)</title><rect x="749.0" y="1781" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="751.99" y="1791.5" ></text>
</g>
</g>
</svg>
