<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>[unknown] (239 samples, 7.53%; 0.00%)</title><rect x="11.9" y="773" width="88.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="783.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.13" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="139.3" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.29" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="1119.4" y="1925" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1122.41" y="1935.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.03%; 0.00%)</title><rect x="143.0" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.01" y="1551.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (1 samples, 0.03%; +0.03%)</title><rect x="620.8" y="1765" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="623.81" y="1775.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (1 samples, 0.03%; -0.09%)</title><rect x="1051.0" y="1765" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="1054.05" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%; 0.00%)</title><rect x="133.4" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.35" y="1679.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (1 samples, 0.03%; 0.00%)</title><rect x="1058.1" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1061.10" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.09%; +0.09%)</title><rect x="848.6" y="1877" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="851.56" y="1887.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (1 samples, 0.03%; -0.03%)</title><rect x="642.4" y="1797" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="645.36" y="1807.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (16 samples, 0.50%; +0.06%)</title><rect x="208.8" y="1877" width="5.9" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="211.77" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::raw::parsed_statement*, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="101.8" y="629" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="104.77" y="639.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.09%; +0.03%)</title><rect x="749.0" y="1925" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="751.99" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="120.3" y="1541" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="123.35" y="1551.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::alter_table_statement, std::default_delete&lt;cql3::statements::alter_table_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="78.4" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.36" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_Optional_payload_base (1 samples, 0.03%; 0.00%)</title><rect x="143.0" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.01" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="1020.6" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1023.58" y="1663.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.31%; 0.00%)</title><rect x="443.2" y="1829" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="446.21" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::future&lt;void&gt;, std::allocator&lt;seastar::future&lt;void&gt; &gt; &gt;::reserve (1 samples, 0.03%; +0.03%)</title><rect x="1118.3" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1121.29" y="1727.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="56.4" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.44" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.03%; +0.03%)</title><rect x="860.4" y="1765" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="863.45" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.56" y="175.5" ></text>
</g>
<g >
<title>row::compact_and_expire (1 samples, 0.03%; 0.00%)</title><rect x="423.9" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="426.89" y="1855.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (13 samples, 0.41%; 0.00%)</title><rect x="759.0" y="1893" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="762.02" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="84.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.68" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; +0.03%)</title><rect x="140.0" y="1685" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="143.04" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;5ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.03" y="1471.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_begin (7 samples, 0.22%; +0.03%)</title><rect x="1116.1" y="1733" width="2.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1119.06" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (241 samples, 7.59%; 0.00%)</title><rect x="11.9" y="853" width="89.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="863.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.46" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="14.8" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.83" y="415.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (1 samples, 0.03%; +0.03%)</title><rect x="261.2" y="1861" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="264.16" y="1871.5" ></text>
</g>
<g >
<title>sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.03%; 0.00%)</title><rect x="156.4" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.39" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="124.1" y="1493" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1503.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; -0.03%)</title><rect x="13.3" y="405" width="0.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="16.34" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="863.0" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="866.05" y="1791.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (1 samples, 0.03%; +0.03%)</title><rect x="790.6" y="1845" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="793.60" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.82" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; +0.03%)</title><rect x="322.1" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="325.09" y="1743.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.33" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="118.5" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.49" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="942.2" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="945.19" y="1839.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (644 samples, 20.28%; -0.22%)</title><rect x="864.9" y="1909" width="239.3" height="15.0" fill="rgb(128,128,255)" rx="2" ry="2" />
<text  x="867.91" y="1919.5" >seastar::concrete_execution_sta..</text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="83.2" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.19" y="447.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (70 samples, 2.20%; 0.00%)</title><rect x="23.7" y="453" width="26.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.75" y="463.5" >a..</text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="66.1" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.10" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (5 samples, 0.16%; 0.00%)</title><rect x="93.6" y="517" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.60" y="527.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.01" y="1679.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (1 samples, 0.03%; 0.00%)</title><rect x="91.0" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.99" y="543.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.06%)</title><rect x="529.8" y="1765" width="1.5" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="532.78" y="1775.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;cql3::attributes::raw&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="95.1" y="405" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="98.08" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (3 samples, 0.09%; 0.00%)</title><rect x="130.4" y="1509" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.38" y="1519.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (1 samples, 0.03%; 0.00%)</title><rect x="720.4" y="1877" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.38" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.09%; 0.00%)</title><rect x="132.2" y="1573" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.24" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="50.5" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.50" y="399.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="447.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (12 samples, 0.38%; -0.19%)</title><rect x="489.3" y="1829" width="4.4" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="492.28" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="136.3" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.32" y="1727.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.03%; 0.00%)</title><rect x="112.9" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.92" y="1791.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="109.2" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.20" y="1759.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="59.8" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.79" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (1 samples, 0.03%; -0.03%)</title><rect x="247.0" y="1813" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="250.04" y="1823.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1711.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%; 0.00%)</title><rect x="33.4" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.41" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.06%; 0.00%)</title><rect x="34.1" y="277" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="37.15" y="287.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="121.8" y="1397" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="124.83" y="1407.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="50.5" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.50" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1 samples, 0.03%; +0.03%)</title><rect x="34.9" y="325" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="37.89" y="335.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (1 samples, 0.03%; 0.00%)</title><rect x="98.4" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; -0.06%)</title><rect x="719.6" y="1909" width="0.8" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="722.63" y="1919.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::_M_deleter (1 samples, 0.03%; +0.03%)</title><rect x="96.6" y="501" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="99.57" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (35 samples, 1.10%; +0.13%)</title><rect x="494.9" y="1813" width="13.0" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="497.86" y="1823.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.03%; -0.03%)</title><rect x="654.6" y="1877" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="657.62" y="1887.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit&lt;seastar::syscall_result_extra&lt;stat&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="720.7" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.75" y="1871.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (2 samples, 0.06%; +0.06%)</title><rect x="261.5" y="1877" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="264.53" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.56" y="159.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1637" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1647.5" >[unknown]</text>
</g>
<g >
<title>__start_context (10 samples, 0.31%; 0.00%)</title><rect x="81.7" y="709" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.71" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%; 0.00%)</title><rect x="44.9" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.92" y="367.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%; 0.00%)</title><rect x="143.0" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.01" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="62.8" y="277" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.76" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="239.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.06%)</title><rect x="625.6" y="1797" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="628.64" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="981" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="991.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_deallocate_map (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="527.5" ></text>
</g>
<g >
<title>ser::mutation_partition_view::range_tombstones (3 samples, 0.09%; +0.09%)</title><rect x="1109.4" y="1781" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1112.38" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::drop_function_statement, std::default_delete&lt;cql3::statements::drop_function_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="79.1" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.11" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="1114.2" y="1605" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1117.21" y="1615.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; -0.03%)</title><rect x="916.2" y="1829" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="919.18" y="1839.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (8 samples, 0.25%; +0.06%)</title><rect x="376.3" y="1685" width="3.0" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="379.34" y="1695.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (1 samples, 0.03%; +0.03%)</title><rect x="915.8" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="918.81" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="76.5" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.51" y="383.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (2,691 samples, 84.73%; 0.00%)</title><rect x="158.6" y="1989" width="999.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.61" y="1999.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>standard_allocation_strategy::free (1 samples, 0.03%; +0.03%)</title><rect x="442.8" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="445.84" y="1823.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="621.2" y="1781" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="624.18" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%; 0.00%)</title><rect x="121.1" y="1525" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.09" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.03%; 0.00%)</title><rect x="98.4" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="21.9" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.89" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (8 samples, 0.25%; 0.00%)</title><rect x="24.9" y="389" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.86" y="399.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.09%; 0.00%)</title><rect x="57.6" y="357" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.56" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.46" y="1711.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (1 samples, 0.03%; +0.03%)</title><rect x="897.6" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="900.60" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.03%)</title><rect x="393.4" y="1733" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="396.43" y="1743.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::operator= (1 samples, 0.03%; +0.03%)</title><rect x="129.6" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="132.63" y="1727.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (173 samples, 5.45%; 0.00%)</title><rect x="17.4" y="661" width="64.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.43" y="671.5" >seastar..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="94.0" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.97" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="98.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="399.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (3 samples, 0.09%; +0.03%)</title><rect x="1019.5" y="1637" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1022.46" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (14 samples, 0.44%; 0.00%)</title><rect x="12.2" y="501" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.16%)</title><rect x="762.0" y="1845" width="1.8" height="15.0" fill="rgb(255,151,151)" rx="2" ry="2" />
<text  x="764.99" y="1855.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; 0.00%)</title><rect x="421.3" y="1829" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="424.29" y="1839.5" ></text>
</g>
<g >
<title>data_value::data_value (1 samples, 0.03%; +0.03%)</title><rect x="185.4" y="1877" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="188.37" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1589" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1599.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_destroy_data&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="20.4" y="437" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="23.40" y="447.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.06%; 0.00%)</title><rect x="104.0" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="107.00" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::stats (3 samples, 0.09%; +0.09%)</title><rect x="616.0" y="1765" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="618.98" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (127 samples, 4.00%; +0.09%)</title><rect x="332.1" y="1733" width="47.2" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="335.12" y="1743.5" >part..</text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%; +0.03%)</title><rect x="623.4" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="626.41" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_p (1 samples, 0.03%; +0.03%)</title><rect x="137.4" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="140.44" y="1727.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (617 samples, 19.43%; -0.03%)</title><rect x="874.2" y="1861" width="229.2" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="877.19" y="1871.5" >cql3::statements::select_state..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="823.7" y="1765" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="826.66" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="709" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="719.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (2 samples, 0.06%; 0.00%)</title><rect x="748.2" y="1925" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="751.24" y="1935.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (1 samples, 0.03%; +0.03%)</title><rect x="1120.5" y="1925" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1123.52" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; -0.03%)</title><rect x="121.1" y="1557" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="124.09" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="84.3" y="261" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="87.31" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%; +0.06%)</title><rect x="1052.9" y="1749" width="3.0" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="1055.90" y="1759.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.03%; 0.00%)</title><rect x="826.6" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="829.64" y="1791.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;unsigned int&gt;::_Rb_tree_iterator (1 samples, 0.03%; +0.03%)</title><rect x="49.4" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="52.38" y="399.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (1 samples, 0.03%; +0.03%)</title><rect x="105.5" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="108.48" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;7ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.03" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="84.3" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (3 samples, 0.09%; +0.06%)</title><rect x="730.4" y="1893" width="1.1" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="733.41" y="1903.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; +0.03%)</title><rect x="747.5" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="750.50" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="175.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; +0.03%)</title><rect x="51.2" y="469" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="54.24" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="94.3" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.34" y="463.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="133.4" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.35" y="1551.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.06%; 0.00%)</title><rect x="1108.3" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.26" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="85" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="95.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; +0.03%)</title><rect x="81.7" y="501" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="84.71" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; -0.06%)</title><rect x="673.2" y="1909" width="0.4" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="676.19" y="1919.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.16%; +0.13%)</title><rect x="690.3" y="1893" width="1.8" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="693.28" y="1903.5" ></text>
</g>
<g >
<title>boost::variant&lt;ser::live_cell_view, ser::expiring_cell_view, ser::dead_cell_view, ser::counter_cell_view, ser::unknown_variant_type&gt;::apply_visitor&lt;(anonymous namespace)::read_atomic_cell (2 samples, 0.06%; 0.00%)</title><rect x="1107.1" y="1765" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1110.15" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="53.1" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.10" y="335.5" ></text>
</g>
<g >
<title>_longjmp_unwind (1 samples, 0.03%; +0.03%)</title><rect x="1158.4" y="2053" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1161.42" y="2063.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="116.6" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.63" y="1983.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.09%; +0.03%)</title><rect x="574.0" y="1813" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="576.99" y="1823.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (1 samples, 0.03%; 0.00%)</title><rect x="488.9" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="491.91" y="1839.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="821" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="831.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="136.0" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.95" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="117.7" y="1461" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="120.75" y="1471.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (18 samples, 0.57%; 0.00%)</title><rect x="1105.3" y="1845" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.29" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="121.5" y="1477" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.46" y="1487.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="156.4" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.39" y="1887.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (4 samples, 0.13%; +0.03%)</title><rect x="1116.8" y="1717" width="1.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1119.81" y="1727.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::deallocate (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.85" y="367.5" ></text>
</g>
<g >
<title>seastar::io_queue::queue_request (1 samples, 0.03%; +0.03%)</title><rect x="145.6" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="148.61" y="1727.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (23 samples, 0.72%; +0.09%)</title><rect x="907.3" y="1813" width="8.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="910.26" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="630.1" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="633.09" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.06%; +0.06%)</title><rect x="689.2" y="1877" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="692.17" y="1887.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (14 samples, 0.44%; +0.09%)</title><rect x="668.4" y="1925" width="5.2" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="671.36" y="1935.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="53.5" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.47" y="335.5" ></text>
</g>
<g >
<title>sstables::mc::writer::~writer (1 samples, 0.03%; 0.00%)</title><rect x="156.4" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.39" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="1095.3" y="1829" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1098.26" y="1839.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.91" y="463.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (3 samples, 0.09%; -0.06%)</title><rect x="1113.5" y="1669" width="1.1" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="1116.46" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; 0.00%)</title><rect x="825.2" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="828.15" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="125.2" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.18" y="1695.5" ></text>
</g>
<g >
<title>reader_permit::mark_used (1 samples, 0.03%; +0.03%)</title><rect x="196.1" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="199.14" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="137.8" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.81" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1717" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1727.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (49 samples, 1.54%; 0.00%)</title><rect x="117.0" y="1797" width="18.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1807.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="109.9" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="112.94" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="143.0" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.01" y="1615.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="76.5" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.51" y="399.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (7 samples, 0.22%; 0.00%)</title><rect x="1151.0" y="1909" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1153.99" y="1919.5" ></text>
</g>
<g >
<title>table::table (1 samples, 0.03%; 0.00%)</title><rect x="187.2" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.22" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (16 samples, 0.50%; 0.00%)</title><rect x="1112.7" y="1797" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.72" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::deque (1 samples, 0.03%; 0.00%)</title><rect x="22.3" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.26" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="14.1" y="293" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="17.09" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="53.1" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.10" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.09" y="399.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.03%)</title><rect x="132.6" y="1493" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="135.61" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%; +0.06%)</title><rect x="753.8" y="1893" width="3.0" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="756.82" y="1903.5" ></text>
</g>
<g >
<title>seastar::thread_impl::switch_out (1 samples, 0.03%; +0.03%)</title><rect x="102.9" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="105.88" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1093" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1103.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (3 samples, 0.09%; 0.00%)</title><rect x="57.6" y="405" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.56" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="319.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.03%; 0.00%)</title><rect x="157.5" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.50" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="16.3" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.32" y="335.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.44%; 0.00%)</title><rect x="969.3" y="1765" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="972.31" y="1775.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="773" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.40" y="783.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (20 samples, 0.63%; -0.22%)</title><rect x="660.9" y="1925" width="7.5" height="15.0" fill="rgb(128,128,255)" rx="2" ry="2" />
<text  x="663.93" y="1935.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (2 samples, 0.06%; -0.09%)</title><rect x="330.3" y="1717" width="0.7" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="333.26" y="1727.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (28 samples, 0.88%; -0.09%)</title><rect x="721.5" y="1925" width="10.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="724.49" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1397" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1407.5" >[unknown]</text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; +0.03%)</title><rect x="599.6" y="1781" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="602.63" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;8ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.03" y="1519.5" ></text>
</g>
<g >
<title>do_cql_test (10 samples, 0.31%; 0.00%)</title><rect x="81.7" y="645" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.71" y="655.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (1 samples, 0.03%; 0.00%)</title><rect x="798.4" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="801.40" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="513.1" y="1861" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="516.06" y="1871.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="50.1" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.13" y="463.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (367 samples, 11.56%; -0.19%)</title><rect x="270.1" y="1829" width="136.3" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="273.08" y="1839.5" >merging_reader&lt;mu..</text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1269" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1279.5" >[unknown]</text>
</g>
<g >
<title>service::storage_proxy::query_singular (339 samples, 10.67%; -0.41%)</title><rect x="949.6" y="1797" width="126.0" height="15.0" fill="rgb(58,58,255)" rx="2" ry="2" />
<text  x="952.62" y="1807.5" >service::storag..</text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (12 samples, 0.38%; +0.03%)</title><rect x="859.3" y="1829" width="4.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="862.33" y="1839.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (14 samples, 0.44%; 0.00%)</title><rect x="12.2" y="549" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="559.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (7 samples, 0.22%; 0.00%)</title><rect x="851.5" y="1909" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="854.53" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (3 samples, 0.09%; 0.00%)</title><rect x="130.4" y="1541" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.38" y="1551.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_7cabed9ebfe4f22a70f01ba2653108c0ad10a7d1] (1 samples, 0.03%; +0.03%)</title><rect x="832.2" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="835.21" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (4 samples, 0.13%; +0.13%)</title><rect x="1076.3" y="1813" width="1.5" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="1079.31" y="1823.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (2 samples, 0.06%; +0.06%)</title><rect x="34.1" y="261" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="37.15" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="126.7" y="1557" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="129.66" y="1567.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_7cabed9ebfe4f22a70f01ba2653108c0ad10a7d1] (1 samples, 0.03%; +0.03%)</title><rect x="360.7" y="1685" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="363.73" y="1695.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="421.3" y="1845" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="424.29" y="1855.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (3 samples, 0.09%; 0.00%)</title><rect x="1105.7" y="1749" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.66" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.58" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="62.0" y="181" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="191.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.73" y="383.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; -0.09%)</title><rect x="442.5" y="1797" width="0.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="445.47" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="118.9" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.86" y="1551.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="118.5" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.49" y="1631.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="62.8" y="293" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.76" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="133.4" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.35" y="1663.5" ></text>
</g>
<g >
<title>[[vdso]] (16 samples, 0.50%; -0.22%)</title><rect x="1161.8" y="2037" width="5.9" height="15.0" fill="rgb(128,128,255)" rx="2" ry="2" />
<text  x="1164.76" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="140.8" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.78" y="1551.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_users_statement, std::default_delete&lt;cql3::statements::list_users_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="97.3" y="533" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="100.31" y="543.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (16 samples, 0.50%; -0.03%)</title><rect x="1112.7" y="1845" width="6.0" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1115.72" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="64.6" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.62" y="335.5" ></text>
</g>
<g >
<title>db::system_distributed_keyspace::create_cdc_desc (1 samples, 0.03%; 0.00%)</title><rect x="179.8" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.79" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (5 samples, 0.16%; 0.00%)</title><rect x="33.4" y="357" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.41" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (6 samples, 0.19%; 0.00%)</title><rect x="74.3" y="357" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.28" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.45" y="383.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="27.1" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.09" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="140.0" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.04" y="1711.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; +0.03%)</title><rect x="64.6" y="277" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="67.62" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.09%; -0.03%)</title><rect x="783.2" y="1829" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="786.17" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.44%; +0.25%)</title><rect x="969.3" y="1749" width="5.2" height="15.0" fill="rgb(255,116,116)" rx="2" ry="2" />
<text  x="972.31" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="71.7" y="277" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.68" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; -0.13%)</title><rect x="765.0" y="1877" width="1.4" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="767.96" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="671.3" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="674.34" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="141.9" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.90" y="1695.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (10 samples, 0.31%; 0.00%)</title><rect x="130.4" y="1701" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.38" y="1711.5" ></text>
</g>
<g >
<title>std::forward&lt;std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="75.0" y="165" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="78.02" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="82.1" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.08" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (9 samples, 0.28%; 0.00%)</title><rect x="86.2" y="565" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.16" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (31 samples, 0.98%; +0.06%)</title><rect x="888.7" y="1829" width="11.5" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="891.68" y="1839.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.47%; 0.00%)</title><rect x="996.4" y="1717" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="999.43" y="1727.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (5 samples, 0.16%; 0.00%)</title><rect x="82.4" y="469" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.45" y="479.5" ></text>
</g>
<g >
<title>__start_context (29 samples, 0.91%; 0.00%)</title><rect x="102.9" y="2005" width="10.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.88" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1797" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1807.5" >[unknown]</text>
</g>
<g >
<title>std::operator- (3 samples, 0.09%; 0.00%)</title><rect x="130.4" y="1525" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.38" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.57" y="335.5" ></text>
</g>
<g >
<title>[unknown] (198 samples, 6.23%; 0.00%)</title><rect x="11.9" y="725" width="73.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="735.5" >[unknown]</text>
</g>
<g >
<title>reader_permit::impl::~impl (1 samples, 0.03%; +0.03%)</title><rect x="195.8" y="1909" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="198.77" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; 0.00%)</title><rect x="533.1" y="1797" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="536.12" y="1807.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="145.2" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.24" y="2031.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (17 samples, 0.54%; +0.03%)</title><rect x="1112.3" y="1893" width="6.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1115.35" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="136.3" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.32" y="1679.5" ></text>
</g>
<g >
<title>validation::validate_cql_key (1 samples, 0.03%; 0.00%)</title><rect x="863.4" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="866.42" y="1807.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="59.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.79" y="431.5" ></text>
</g>
<g >
<title>seastar::file_size (1 samples, 0.03%; 0.00%)</title><rect x="720.7" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.75" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="82.1" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.08" y="415.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.03%; 0.00%)</title><rect x="732.3" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="735.27" y="1919.5" ></text>
</g>
<g >
<title>dht::shard_of (5 samples, 0.16%; +0.16%)</title><rect x="986.8" y="1733" width="1.8" height="15.0" fill="rgb(255,151,151)" rx="2" ry="2" />
<text  x="989.77" y="1743.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="89.1" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.14" y="527.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="139.3" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.29" y="1679.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (1 samples, 0.03%; -0.09%)</title><rect x="397.5" y="1813" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="400.51" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="174.6" y="1861" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="177.59" y="1871.5" ></text>
</g>
<g >
<title>db::schema_tables::read_schema_partition_for_keyspace (2 samples, 0.06%; 0.00%)</title><rect x="185.4" y="1893" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.37" y="1903.5" ></text>
</g>
<g >
<title>__strlen_avx2 (3 samples, 0.09%; +0.09%)</title><rect x="43.1" y="357" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="46.07" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="84.3" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="303.5" ></text>
</g>
<g >
<title>std::addressof&lt;__gnu_cxx::__aligned_membuf&lt;cql3::expr::conjunction&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="72.0" y="213" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="75.05" y="223.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="837" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="847.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.13%; +0.06%)</title><rect x="666.9" y="1909" width="1.5" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="669.88" y="1919.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.03%; 0.00%)</title><rect x="83.6" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.57" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (8 samples, 0.25%; -0.03%)</title><rect x="340.3" y="1717" width="3.0" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="343.30" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_psrstate (1 samples, 0.03%; +0.03%)</title><rect x="54.6" y="437" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="57.58" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="62.0" y="229" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="239.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1925" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1935.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; +0.03%)</title><rect x="136.7" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="139.69" y="1759.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (178 samples, 5.60%; -0.06%)</title><rect x="317.6" y="1749" width="66.2" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="320.63" y="1759.5" >partiti..</text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (2 samples, 0.06%; 0.00%)</title><rect x="121.5" y="1445" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.46" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.09%; 0.00%)</title><rect x="74.3" y="261" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.28" y="271.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_error (1 samples, 0.03%; +0.03%)</title><rect x="33.0" y="373" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="36.04" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.03%; +0.03%)</title><rect x="143.4" y="1765" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="146.38" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="53.5" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.47" y="303.5" ></text>
</g>
<g >
<title>logalloc::segment::occupancy (1 samples, 0.03%; +0.03%)</title><rect x="145.2" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="148.24" y="1903.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (25 samples, 0.79%; +0.16%)</title><rect x="322.5" y="1733" width="9.3" height="15.0" fill="rgb(255,151,151)" rx="2" ry="2" />
<text  x="325.46" y="1743.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;seastar::file_data_sink_impl::put (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (16 samples, 0.50%; 0.00%)</title><rect x="859.0" y="1861" width="5.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.96" y="1871.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="1114.2" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1117.21" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (173 samples, 5.45%; 0.00%)</title><rect x="17.4" y="677" width="64.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.43" y="687.5" >seastar..</text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.09%; 0.00%)</title><rect x="117.0" y="1733" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1743.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (2 samples, 0.06%; +0.03%)</title><rect x="329.1" y="1717" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="332.15" y="1727.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; -0.09%)</title><rect x="171.6" y="1893" width="1.1" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="174.62" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="139.3" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.29" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (1 samples, 0.03%; 0.00%)</title><rect x="108.5" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.46" y="1727.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.03%)</title><rect x="823.7" y="1781" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="826.66" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.16%; +0.03%)</title><rect x="1075.9" y="1829" width="1.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1078.94" y="1839.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.03%; -0.03%)</title><rect x="1103.4" y="1861" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1106.43" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; 0.00%)</title><rect x="52.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.73" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.01" y="1695.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="795.1" y="1845" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="798.06" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="120.7" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.72" y="1519.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (1 samples, 0.03%; 0.00%)</title><rect x="58.7" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.67" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.44%; 0.00%)</title><rect x="12.2" y="517" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="527.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (16 samples, 0.50%; +0.41%)</title><rect x="1167.7" y="2037" width="6.0" height="15.0" fill="rgb(255,58,58)" rx="2" ry="2" />
<text  x="1170.71" y="2047.5" ></text>
</g>
<g >
<title>schema::column_at (4 samples, 0.13%; -0.03%)</title><rect x="347.7" y="1685" width="1.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="350.73" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; 0.00%)</title><rect x="1099.3" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1102.35" y="1855.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (3 samples, 0.09%; +0.09%)</title><rect x="130.4" y="1493" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="133.38" y="1503.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (50 samples, 1.57%; +0.22%)</title><rect x="28.9" y="389" width="18.6" height="15.0" fill="rgb(255,128,128)" rx="2" ry="2" />
<text  x="31.95" y="399.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (6 samples, 0.19%; -0.03%)</title><rect x="111.4" y="1861" width="2.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="114.43" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.03%; +0.03%)</title><rect x="26.0" y="245" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="28.98" y="255.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (1 samples, 0.03%; +0.03%)</title><rect x="895.0" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="898.00" y="1759.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (2 samples, 0.06%; +0.03%)</title><rect x="156.8" y="1957" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="159.76" y="1967.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="717.8" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="720.78" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; -0.06%)</title><rect x="540.6" y="1813" width="0.7" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="543.55" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (2 samples, 0.06%; 0.00%)</title><rect x="99.5" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="479.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (165 samples, 5.20%; 0.00%)</title><rect x="19.7" y="581" width="61.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.66" y="591.5" >cql3::..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.4" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.41" y="1679.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::update_statement (1 samples, 0.03%; +0.03%)</title><rect x="93.6" y="501" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="96.60" y="511.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (352 samples, 11.08%; 0.00%)</title><rect x="944.8" y="1813" width="130.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="947.79" y="1823.5" >service::storage..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (2 samples, 0.06%; -0.03%)</title><rect x="156.8" y="1989" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="159.76" y="1999.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="75.8" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.76" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="58.3" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.30" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="133.4" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.35" y="1583.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (4 samples, 0.13%; 0.00%)</title><rect x="341.4" y="1701" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="344.41" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.09%; 0.00%)</title><rect x="56.4" y="405" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.44" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="159.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="75.8" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="78.76" y="351.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.03%; +0.03%)</title><rect x="46.8" y="357" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="49.78" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.72" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.17" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="53.5" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.47" y="367.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="572.9" y="1813" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="575.88" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (14 samples, 0.44%; 0.00%)</title><rect x="12.2" y="661" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="671.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (16 samples, 0.50%; +0.03%)</title><rect x="859.0" y="1845" width="5.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="861.96" y="1855.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (1 samples, 0.03%; 0.00%)</title><rect x="107.3" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.34" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="73.2" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.16" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (1 samples, 0.03%; +0.03%)</title><rect x="214.7" y="1877" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="217.72" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="591.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (1 samples, 0.03%; +0.03%)</title><rect x="679.9" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="682.88" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.01" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="127.4" y="1589" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="130.41" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::expr::expression::impl&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="72.8" y="373" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="75.79" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;8ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="124.1" y="1445" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1455.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="799.9" y="1829" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="802.89" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%; +0.06%)</title><rect x="981.2" y="1733" width="3.3" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="984.20" y="1743.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.19%; -0.06%)</title><rect x="491.5" y="1813" width="2.2" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="494.51" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="88.4" y="469" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="91.39" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="59.8" y="277" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="62.79" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.46" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="63.1" y="245" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.13" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="92.5" y="501" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="95.48" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="687.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (6 samples, 0.19%; 0.00%)</title><rect x="98.4" y="597" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="607.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.96" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="136.3" y="1589" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="139.32" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (11 samples, 0.35%; -0.06%)</title><rect x="1086.0" y="1829" width="4.1" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="1088.97" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="649.4" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="652.41" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="255.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.09%; +0.03%)</title><rect x="520.5" y="1797" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="523.49" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1727.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (260 samples, 8.19%; +0.19%)</title><rect x="414.2" y="1861" width="96.6" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="417.23" y="1871.5" >query::cons..</text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1365" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1375.5" >[unknown]</text>
</g>
<g >
<title>schema::column_at (7 samples, 0.22%; +0.06%)</title><rect x="505.3" y="1781" width="2.6" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="508.26" y="1791.5" ></text>
</g>
<g >
<title>service::storage_service::join_cluster (1 samples, 0.03%; 0.00%)</title><rect x="158.2" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.24" y="1967.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1,240 samples, 39.04%; +0.09%)</title><rect x="197.6" y="1909" width="460.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="200.63" y="1919.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>[perf_simple_query_flame_7cabed9ebfe4f22a70f01ba2653108c0ad10a7d1] (1 samples, 0.03%; +0.03%)</title><rect x="787.3" y="1813" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="790.25" y="1823.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="805" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.40" y="815.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="12.2" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (2 samples, 0.06%; +0.06%)</title><rect x="1009.8" y="1685" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="1012.80" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="52.0" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.98" y="303.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.06%)</title><rect x="183.1" y="1909" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="186.14" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1141" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1151.5" >[unknown]</text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::operator (2 samples, 0.06%; +0.03%)</title><rect x="864.2" y="1797" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="867.16" y="1807.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; 0.00%)</title><rect x="121.5" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.46" y="1407.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (16 samples, 0.50%; 0.00%)</title><rect x="859.0" y="1909" width="5.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.96" y="1919.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (4 samples, 0.13%; +0.06%)</title><rect x="1121.3" y="1925" width="1.5" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="1124.27" y="1935.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="984.5" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="987.54" y="1759.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="119.6" y="1685" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="122.60" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.06%; +0.06%)</title><rect x="693.6" y="1877" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="696.63" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1349" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1359.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_initialize_map (1 samples, 0.03%; 0.00%)</title><rect x="22.3" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.26" y="399.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; 0.00%)</title><rect x="56.1" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.07" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.82" y="383.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (7 samples, 0.22%; +0.06%)</title><rect x="148.2" y="2005" width="2.6" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="151.21" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1685" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1695.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="136.3" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.32" y="1631.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (1 samples, 0.03%; +0.03%)</title><rect x="911.0" y="1797" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="913.98" y="1807.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="757" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="767.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1573" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1583.5" >[unknown]</text>
</g>
<g >
<title>mutation_reader_merger::operator (319 samples, 10.04%; -0.13%)</title><rect x="279.0" y="1813" width="118.5" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="281.99" y="1823.5" >mutation_reade..</text>
</g>
<g >
<title>range_tombstone_list::slice (1 samples, 0.03%; -0.03%)</title><rect x="342.9" y="1701" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="345.90" y="1711.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;mutation_fragment*&gt;, flat_mutation_reader::peek (1 samples, 0.03%; 0.00%)</title><rect x="659.8" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="662.82" y="1935.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (3 samples, 0.09%; +0.06%)</title><rect x="10.7" y="2021" width="1.2" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="13.74" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;6ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.03" y="1487.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="131.5" y="1493" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.49" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%; +0.03%)</title><rect x="212.5" y="1861" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="215.49" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.57" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.09%)</title><rect x="799.9" y="1813" width="0.7" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="802.89" y="1823.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="73.5" y="357" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="76.53" y="367.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (6 samples, 0.19%; 0.00%)</title><rect x="125.5" y="1685" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.55" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; +0.03%)</title><rect x="338.8" y="1701" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="341.81" y="1711.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.03%; 0.00%)</title><rect x="78.0" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.99" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; +0.03%)</title><rect x="102.1" y="661" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="105.14" y="671.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="446.9" y="1829" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="449.93" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="84.3" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (8 samples, 0.25%; 0.00%)</title><rect x="24.9" y="421" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.86" y="431.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (5 samples, 0.16%; -0.03%)</title><rect x="1107.1" y="1781" width="1.9" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1110.15" y="1791.5" ></text>
</g>
<g >
<title>do_cql_test (14 samples, 0.44%; 0.00%)</title><rect x="12.2" y="613" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="53.5" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.47" y="383.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.03%; 0.00%)</title><rect x="145.2" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.24" y="1951.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="76.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.51" y="367.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (29 samples, 0.91%; +0.06%)</title><rect x="638.6" y="1813" width="10.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="641.64" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (3 samples, 0.09%; 0.00%)</title><rect x="118.1" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.12" y="1727.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; -0.09%)</title><rect x="614.9" y="1781" width="0.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="617.86" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="133.4" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.35" y="1535.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="133.4" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.35" y="1615.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (14 samples, 0.44%; +0.09%)</title><rect x="437.3" y="1797" width="5.2" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="440.27" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; -0.06%)</title><rect x="60.9" y="261" width="0.7" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="63.90" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="68.0" y="245" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="70.96" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_input (1 samples, 0.03%; +0.03%)</title><rect x="31.5" y="373" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="34.55" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (46 samples, 1.45%; -0.13%)</title><rect x="118.1" y="1733" width="17.1" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="121.12" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="62.0" y="101" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="65.02" y="111.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.09%; 0.00%)</title><rect x="60.5" y="357" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.53" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_table_statement, std::default_delete&lt;cql3::statements::alter_table_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_table_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="78.4" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.36" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (2 samples, 0.06%; -0.06%)</title><rect x="170.1" y="1909" width="0.8" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="173.13" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="142.3" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.27" y="1631.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (8 samples, 0.25%; 0.00%)</title><rect x="645.3" y="1797" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.33" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.03%; +0.03%)</title><rect x="55.0" y="421" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="57.96" y="431.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1813" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1823.5" >[unknown]</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="53.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.10" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.97" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="140.8" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.78" y="1631.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="143.8" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.75" y="1711.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="720.4" y="1845" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="723.38" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::_M_tail (1 samples, 0.03%; +0.03%)</title><rect x="94.7" y="421" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="97.71" y="431.5" ></text>
</g>
<g >
<title>validation::validate_column_family (18 samples, 0.57%; 0.00%)</title><rect x="831.8" y="1829" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="834.84" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt; &gt;  (1 samples, 0.03%; 0.00%)</title><rect x="108.5" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.46" y="1711.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (2 samples, 0.06%; +0.06%)</title><rect x="648.7" y="1797" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="651.67" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="15.9" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.94" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.13%; +0.03%)</title><rect x="168.6" y="1909" width="1.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="171.65" y="1919.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (2 samples, 0.06%; +0.06%)</title><rect x="932.5" y="1829" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="935.53" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="22.6" y="517" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="25.63" y="527.5" ></text>
</g>
<g >
<title>query::result_set::result_set (2 samples, 0.06%; 0.00%)</title><rect x="186.5" y="1829" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.48" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (3 samples, 0.09%; 0.00%)</title><rect x="128.5" y="1701" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.52" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; -0.03%)</title><rect x="50.5" y="309" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="53.50" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (7 samples, 0.22%; 0.00%)</title><rect x="20.0" y="533" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.03" y="543.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.09" y="367.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%; 0.00%)</title><rect x="1052.5" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1055.53" y="1759.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="1029.1" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1032.12" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; +0.03%)</title><rect x="140.4" y="1541" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="143.41" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="415.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (2 samples, 0.06%; 0.00%)</title><rect x="114.4" y="1973" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.40" y="1983.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;**&gt;::deallocate (1 samples, 0.03%; +0.03%)</title><rect x="100.7" y="501" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="103.65" y="511.5" ></text>
</g>
<g >
<title>service::client_state::has_access (3 samples, 0.09%; -0.06%)</title><rect x="112.2" y="1845" width="1.1" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="115.17" y="1855.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (247 samples, 7.78%; -0.16%)</title><rect x="305.4" y="1781" width="91.7" height="15.0" fill="rgb(151,151,255)" rx="2" ry="2" />
<text  x="308.37" y="1791.5" >partition_..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="140.8" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.78" y="1727.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="84.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.68" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%; 0.00%)</title><rect x="508.2" y="1829" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="511.23" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; +0.03%)</title><rect x="1142.8" y="1877" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1145.81" y="1887.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="141.2" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.15" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_function_statement, std::default_delete&lt;cql3::statements::drop_function_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::drop_function_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="80.6" y="501" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="83.59" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (3 samples, 0.09%; 0.00%)</title><rect x="132.2" y="1525" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.24" y="1535.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.06%; +0.06%)</title><rect x="316.1" y="1733" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="319.15" y="1743.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (32 samples, 1.01%; -0.09%)</title><rect x="363.3" y="1685" width="11.9" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="366.33" y="1695.5" ></text>
</g>
<g >
<title>db::schema_tables::make_schema_mutations (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.11" y="1871.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::statements::drop_function_statement*, std::default_delete&lt;cql3::statements::drop_function_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="79.1" y="421" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="82.11" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (4 samples, 0.13%; 0.00%)</title><rect x="48.3" y="405" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.27" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="140.8" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.78" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; 0.00%)</title><rect x="32.3" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.29" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; +0.03%)</title><rect x="1112.0" y="1893" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1114.98" y="1903.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="53.5" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.47" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="271.5" ></text>
</g>
<g >
<title>[unknown] (241 samples, 7.59%; 0.00%)</title><rect x="11.9" y="837" width="89.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="847.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.06%; -0.06%)</title><rect x="26.0" y="261" width="0.7" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="28.98" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.46" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="77.6" y="469" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="80.62" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (5 samples, 0.16%; 0.00%)</title><rect x="130.4" y="1573" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.38" y="1583.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::detach_service_level_statement, std::default_delete&lt;cql3::statements::detach_service_level_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="78.7" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.73" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (2 samples, 0.06%; 0.00%)</title><rect x="57.6" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.56" y="303.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (18 samples, 0.57%; 0.00%)</title><rect x="1112.0" y="1909" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.98" y="1919.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="158.2" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.24" y="2031.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (19 samples, 0.60%; +0.03%)</title><rect x="170.9" y="1909" width="7.0" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="173.88" y="1919.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.06%; +0.03%)</title><rect x="788.0" y="1813" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="791.00" y="1823.5" ></text>
</g>
<g >
<title>__start_context (34 samples, 1.07%; 0.00%)</title><rect x="85.4" y="725" width="12.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.42" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.03%; +0.03%)</title><rect x="47.2" y="373" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="50.15" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="98.4" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="133.4" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.35" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.17" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.03%; +0.03%)</title><rect x="186.1" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="189.11" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (4 samples, 0.13%; +0.09%)</title><rect x="856.4" y="1925" width="1.4" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="859.36" y="1935.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="60.9" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.90" y="319.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="397.9" y="1813" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="400.88" y="1823.5" ></text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.03%; 0.00%)</title><rect x="107.3" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.34" y="1743.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::~single_column_relation (2 samples, 0.06%; 0.00%)</title><rect x="110.7" y="1845" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.69" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.47%; -0.13%)</title><rect x="996.4" y="1701" width="5.6" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="999.43" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (11 samples, 0.35%; 0.00%)</title><rect x="13.0" y="437" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.97" y="447.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (2 samples, 0.06%; -0.03%)</title><rect x="214.0" y="1861" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="216.97" y="1871.5" ></text>
</g>
<g >
<title>unsigned_vint::serialize (1 samples, 0.03%; +0.03%)</title><rect x="115.5" y="1861" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="118.52" y="1871.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="56.8" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.81" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (6 samples, 0.19%; +0.13%)</title><rect x="692.1" y="1893" width="2.3" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="695.14" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (4 samples, 0.13%; 0.00%)</title><rect x="98.8" y="501" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="367.5" ></text>
</g>
<g >
<title>db::validate_for_read (1 samples, 0.03%; +0.03%)</title><rect x="1091.2" y="1845" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1094.17" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; 0.00%)</title><rect x="398.6" y="1797" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="401.63" y="1807.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (4 samples, 0.13%; +0.09%)</title><rect x="558.0" y="1829" width="1.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="561.02" y="1839.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.06%)</title><rect x="57.6" y="245" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="60.56" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (9 samples, 0.28%; -0.09%)</title><rect x="895.4" y="1749" width="3.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="898.37" y="1759.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (13 samples, 0.41%; +0.28%)</title><rect x="281.2" y="1797" width="4.9" height="15.0" fill="rgb(255,105,105)" rx="2" ry="2" />
<text  x="284.22" y="1807.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (33 samples, 1.04%; +0.06%)</title><rect x="921.4" y="1845" width="12.2" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="924.38" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (4 samples, 0.13%; 0.00%)</title><rect x="52.7" y="469" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.73" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.03%)</title><rect x="940.0" y="1813" width="2.2" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="942.96" y="1823.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (165 samples, 5.20%; +0.03%)</title><rect x="19.7" y="549" width="61.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="22.66" y="559.5" >cql3::..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.13%; -0.09%)</title><rect x="174.2" y="1893" width="1.5" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="177.22" y="1903.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (2 samples, 0.06%; +0.06%)</title><rect x="1025.4" y="1685" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="1028.41" y="1695.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="128.1" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.15" y="1663.5" ></text>
</g>
<g >
<title>row::external_memory_usage (2 samples, 0.06%; +0.03%)</title><rect x="380.1" y="1733" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="383.05" y="1743.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (3 samples, 0.09%; +0.03%)</title><rect x="112.2" y="1797" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="115.17" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (3 samples, 0.09%; 0.00%)</title><rect x="130.4" y="1557" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.38" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::push_back (1 samples, 0.03%; +0.03%)</title><rect x="98.8" y="469" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="101.80" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1535.5" ></text>
</g>
<g >
<title>cql3::restrictions::has_eq_null (1 samples, 0.03%; 0.00%)</title><rect x="860.4" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.45" y="1807.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (39 samples, 1.23%; 0.00%)</title><rect x="286.1" y="1797" width="14.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="289.05" y="1807.5" ></text>
</g>
<g >
<title>__start_context (173 samples, 5.45%; 0.00%)</title><rect x="17.4" y="693" width="64.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.43" y="703.5" >__start..</text>
</g>
<g >
<title>cql3::query_processor::execute_direct (6 samples, 0.19%; 0.00%)</title><rect x="98.4" y="629" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::drop_role_statement*, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="101.0" y="549" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="104.03" y="559.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (3 samples, 0.09%; +0.09%)</title><rect x="38.2" y="373" width="1.2" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="41.24" y="383.5" ></text>
</g>
<g >
<title>auth::operator== (3 samples, 0.09%; +0.06%)</title><rect x="822.6" y="1749" width="1.1" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="825.55" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.03%; 0.00%)</title><rect x="27.1" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.09" y="303.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (42 samples, 1.32%; -0.09%)</title><rect x="808.1" y="1781" width="15.6" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="811.06" y="1791.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (75 samples, 2.36%; 0.00%)</title><rect x="117.0" y="1861" width="27.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1871.5" >s..</text>
</g>
<g >
<title>deletable_row::apply_monotonically (2 samples, 0.06%; 0.00%)</title><rect x="156.8" y="1973" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.76" y="1983.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; +0.03%)</title><rect x="1023.2" y="1653" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1026.18" y="1663.5" ></text>
</g>
<g >
<title>sstring_hash::operator (1 samples, 0.03%; -0.09%)</title><rect x="845.6" y="1861" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="848.59" y="1871.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="142.6" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.64" y="1727.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_deallocate (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.85" y="383.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.03%)</title><rect x="203.2" y="1893" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="206.20" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="66.8" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.85" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="132.2" y="1637" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.24" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (4 samples, 0.13%; 0.00%)</title><rect x="98.8" y="533" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="136.0" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.95" y="1695.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (17 samples, 0.54%; +0.06%)</title><rect x="817.3" y="1765" width="6.4" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="820.35" y="1775.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (1 samples, 0.03%; +0.03%)</title><rect x="1117.9" y="1669" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1120.92" y="1679.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="47.9" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="50.90" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="127.8" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.78" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="73.2" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.16" y="303.5" ></text>
</g>
<g >
<title>make_combined_reader (32 samples, 1.01%; +0.35%)</title><rect x="560.6" y="1813" width="11.9" height="15.0" fill="rgb(255,81,81)" rx="2" ry="2" />
<text  x="563.62" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="137.8" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.81" y="1631.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; -0.06%)</title><rect x="398.6" y="1813" width="2.6" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="401.63" y="1823.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="741" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="751.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="87.7" y="421" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="90.65" y="431.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (5 samples, 0.16%; 0.00%)</title><rect x="994.6" y="1717" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="997.57" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1109" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1119.5" >[unknown]</text>
</g>
<g >
<title>operator new (9 samples, 0.28%; 0.00%)</title><rect x="981.2" y="1749" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="984.20" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; +0.03%)</title><rect x="74.3" y="245" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="77.28" y="255.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (6 samples, 0.19%; -0.09%)</title><rect x="391.2" y="1749" width="2.2" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="394.20" y="1759.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.19%; 0.00%)</title><rect x="98.4" y="581" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="591.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.46" y="383.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="133.4" y="1509" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="136.35" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.31%; +0.19%)</title><rect x="312.4" y="1717" width="3.7" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="315.43" y="1727.5" ></text>
</g>
<g >
<title>db::schema_tables::read_schema_for_keyspaces (2 samples, 0.06%; 0.00%)</title><rect x="185.4" y="1909" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.37" y="1919.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (2 samples, 0.06%; 0.00%)</title><rect x="115.1" y="1941" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.14" y="1951.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (1 samples, 0.03%; -0.09%)</title><rect x="898.3" y="1733" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="901.34" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="62.0" y="149" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="159.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="70.9" y="245" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="73.93" y="255.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (10 samples, 0.31%; 0.00%)</title><rect x="81.7" y="581" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.71" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="70.6" y="101" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="73.56" y="111.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::~deque (1 samples, 0.03%; 0.00%)</title><rect x="91.0" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.99" y="511.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="949" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="959.5" >[unknown]</text>
</g>
<g >
<title>mutation_fragment::destroy_data (23 samples, 0.72%; +0.09%)</title><rect x="434.7" y="1829" width="8.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="437.67" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (25 samples, 0.79%; -0.06%)</title><rect x="524.6" y="1813" width="9.3" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="527.58" y="1823.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="143.8" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.75" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; +0.03%)</title><rect x="1145.0" y="1909" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1148.04" y="1919.5" ></text>
</g>
<g >
<title>atomic_cell_type::make_live&lt;ser::buffer_view&lt;bytes_ostream::fragment_iterator&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="1107.5" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1110.52" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.01" y="1663.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (12 samples, 0.38%; 0.00%)</title><rect x="685.5" y="1893" width="4.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="688.45" y="1903.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (19 samples, 0.60%; 0.00%)</title><rect x="147.5" y="2037" width="7.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.47" y="2047.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.16%; -0.03%)</title><rect x="525.3" y="1797" width="1.9" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="528.32" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.03%; 0.00%)</title><rect x="212.9" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="215.86" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (367 samples, 11.56%; 0.00%)</title><rect x="10.7" y="2037" width="136.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="2047.5" >[unknown]</text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.01" y="1567.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="56.4" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.44" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (1 samples, 0.03%; 0.00%)</title><rect x="308.3" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="311.34" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1653" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1663.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_initialize_map (2 samples, 0.06%; 0.00%)</title><rect x="21.5" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.52" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="14.8" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.83" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="126.3" y="1573" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="129.29" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1 samples, 0.03%; +0.03%)</title><rect x="655.0" y="1877" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="657.99" y="1887.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (4 samples, 0.13%; 0.00%)</title><rect x="126.3" y="1637" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.29" y="1647.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (2 samples, 0.06%; 0.00%)</title><rect x="115.1" y="1957" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.14" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1461" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1471.5" >[unknown]</text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="134.5" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.46" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="82.1" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.08" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (29 samples, 0.91%; 0.00%)</title><rect x="102.9" y="1973" width="10.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.88" y="1983.5" ></text>
</g>
<g >
<title>sstables::mc::writer::~writer (1 samples, 0.03%; 0.00%)</title><rect x="156.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.39" y="1823.5" ></text>
</g>
<g >
<title>mutation_cleaner_impl::merge_and_destroy (9 samples, 0.28%; -0.25%)</title><rect x="527.9" y="1781" width="3.4" height="15.0" fill="rgb(116,116,255)" rx="2" ry="2" />
<text  x="530.92" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="136.0" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.95" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="335.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="136.0" y="1573" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="138.95" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.45" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="137.8" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.81" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="76.9" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.88" y="415.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1679.5" ></text>
</g>
<g >
<title>do_cql_test (29 samples, 0.91%; 0.00%)</title><rect x="102.9" y="1941" width="10.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.88" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::list_users_statement, std::default_delete&lt;cql3::statements::list_users_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="100.3" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.28" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;4ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="124.1" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1391.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (1 samples, 0.03%; 0.00%)</title><rect x="94.3" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.34" y="495.5" ></text>
</g>
<g >
<title>do_cql_test (7 samples, 0.22%; 0.00%)</title><rect x="98.1" y="677" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.05" y="687.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (1 samples, 0.03%; -0.03%)</title><rect x="1031.4" y="1733" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1034.35" y="1743.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="885" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="895.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1253" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1263.5" >[unknown]</text>
</g>
<g >
<title>dht::maximum_token (1 samples, 0.03%; +0.03%)</title><rect x="568.4" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="571.42" y="1807.5" ></text>
</g>
<g >
<title>std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;::operator (5 samples, 0.16%; 0.00%)</title><rect x="788.7" y="1813" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="791.74" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="82.1" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.08" y="495.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%; 0.00%)</title><rect x="156.0" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.01" y="1999.5" ></text>
</g>
<g >
<title>std::locale::~locale (1 samples, 0.03%; +0.03%)</title><rect x="146.7" y="2021" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="149.73" y="2031.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="56.4" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.44" y="319.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="128.1" y="1621" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="131.15" y="1631.5" ></text>
</g>
<g >
<title>database::query (63 samples, 1.98%; -0.19%)</title><rect x="1002.7" y="1701" width="23.5" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="1005.75" y="1711.5" >d..</text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (2 samples, 0.06%; +0.06%)</title><rect x="609.7" y="1797" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="612.66" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="141.9" y="1653" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="144.90" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; +0.03%)</title><rect x="12.2" y="357" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="15.23" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.03%; -0.06%)</title><rect x="32.3" y="309" width="0.4" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="35.29" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; +0.03%)</title><rect x="882.4" y="1845" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="885.37" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::set_tokText (1 samples, 0.03%; 0.00%)</title><rect x="32.3" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.29" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::tuple (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.57" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::clear (2 samples, 0.06%; 0.00%)</title><rect x="20.4" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.40" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; -0.16%)</title><rect x="699.2" y="1909" width="0.7" height="15.0" fill="rgb(151,151,255)" rx="2" ry="2" />
<text  x="702.20" y="1919.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (11 samples, 0.35%; -0.03%)</title><rect x="599.6" y="1797" width="4.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="602.63" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="143.8" y="1765" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.75" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="101" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="111.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="66.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.10" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (260 samples, 8.19%; +0.09%)</title><rect x="300.9" y="1797" width="96.6" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="303.91" y="1807.5" >partition_s..</text>
</g>
<g >
<title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="146.0" y="2021" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="148.98" y="2031.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.16%; +0.03%)</title><rect x="24.9" y="357" width="1.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="27.86" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="60.5" y="341" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.53" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="108.8" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.83" y="1759.5" ></text>
</g>
<g >
<title>seastar::output_stream&lt;char&gt;::flush (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1903.5" ></text>
</g>
<g >
<title>seastar::reactor::run (2,691 samples, 84.73%; 0.00%)</title><rect x="158.6" y="1973" width="999.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.61" y="1983.5" >seastar::reactor::run</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.97" y="335.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (1 samples, 0.03%; 0.00%)</title><rect x="217.3" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="220.32" y="1839.5" ></text>
</g>
<g >
<title>seastar::reactor::file_stat (1 samples, 0.03%; 0.00%)</title><rect x="720.7" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.75" y="1887.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.17" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="139.3" y="1573" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="142.29" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;11ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="124.1" y="1509" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1519.5" ></text>
</g>
<g >
<title>table::apply (15 samples, 0.47%; -0.06%)</title><rect x="1105.3" y="1813" width="5.6" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="1108.29" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1237" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1247.5" >[unknown]</text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (51 samples, 1.61%; 0.00%)</title><rect x="1056.6" y="1765" width="19.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1059.62" y="1775.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.07" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="127.8" y="1685" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.78" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="696.2" y="1893" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="699.23" y="1903.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; +0.03%)</title><rect x="184.3" y="1909" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="187.25" y="1919.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (4 samples, 0.13%; +0.03%)</title><rect x="673.9" y="1925" width="1.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="676.94" y="1935.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (14 samples, 0.44%; +0.03%)</title><rect x="1145.8" y="1909" width="5.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1148.79" y="1919.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1 samples, 0.03%; +0.03%)</title><rect x="44.9" y="325" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="47.92" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.58" y="1615.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%; +0.03%)</title><rect x="798.8" y="1829" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="801.77" y="1839.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="447.5" ></text>
</g>
<g >
<title>database::apply_in_memory (15 samples, 0.47%; -0.03%)</title><rect x="1105.3" y="1829" width="5.6" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1108.29" y="1839.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="507.9" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="510.86" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="62.8" y="245" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="65.76" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="82.1" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.08" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (3 samples, 0.09%; +0.06%)</title><rect x="825.5" y="1781" width="1.1" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="828.52" y="1791.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="27.1" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.09" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (8 samples, 0.25%; +0.19%)</title><rect x="384.1" y="1749" width="3.0" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="387.14" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (3 samples, 0.09%; -0.03%)</title><rect x="124.1" y="1605" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="127.06" y="1615.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (287 samples, 9.04%; 0.00%)</title><rect x="543.5" y="1877" width="106.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="546.53" y="1887.5" >query::querie..</text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1861" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1871.5" >[unknown]</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (104 samples, 3.27%; +0.03%)</title><rect x="882.7" y="1845" width="38.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="885.74" y="1855.5" >cql..</text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_erase_at_end (1 samples, 0.03%; 0.00%)</title><rect x="20.8" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.77" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="124.1" y="1637" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1647.5" ></text>
</g>
<g >
<title>antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;::substr[abi:cxx11] (1 samples, 0.03%; 0.00%)</title><rect x="52.7" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.73" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (1 samples, 0.03%; 0.00%)</title><rect x="1115.7" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1118.69" y="1679.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (21 samples, 0.66%; 0.00%)</title><rect x="1104.2" y="1893" width="7.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.18" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="741" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.40" y="751.5" ></text>
</g>
<g >
<title>schema::position (1 samples, 0.03%; +0.03%)</title><rect x="1099.0" y="1845" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1101.97" y="1855.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (7 samples, 0.22%; +0.03%)</title><rect x="154.9" y="2005" width="2.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="157.90" y="2015.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.09%)</title><rect x="573.2" y="1797" width="0.8" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="576.25" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1749" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1759.5" >[unknown]</text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (4 samples, 0.13%; +0.03%)</title><rect x="17.8" y="597" width="1.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="20.80" y="607.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (1 samples, 0.03%; +0.03%)</title><rect x="1119.8" y="1925" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1122.78" y="1935.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.22%; +0.06%)</title><rect x="694.4" y="1909" width="2.6" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="697.37" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; +0.06%)</title><rect x="983.1" y="1717" width="1.4" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="986.05" y="1727.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (35 samples, 1.10%; +0.06%)</title><rect x="467.0" y="1797" width="13.0" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="469.99" y="1807.5" ></text>
</g>
<g >
<title>do_cql_test (34 samples, 1.07%; 0.00%)</title><rect x="85.4" y="661" width="12.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.42" y="671.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.97" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="128.5" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.52" y="1679.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="388.2" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="391.22" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.03%; +0.03%)</title><rect x="1102.7" y="1845" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1105.69" y="1855.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (703 samples, 22.13%; 0.00%)</title><rect x="858.2" y="1925" width="261.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.22" y="1935.5" >seastar::lambda_task&lt;seastar::exec..</text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt; &gt; &gt;::vector (1 samples, 0.03%; +0.03%)</title><rect x="85.1" y="469" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="88.05" y="479.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (18 samples, 0.57%; +0.03%)</title><rect x="104.7" y="1877" width="6.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="107.74" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (4 samples, 0.13%; +0.03%)</title><rect x="60.2" y="389" width="1.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="63.16" y="399.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1429" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1439.5" >[unknown]</text>
</g>
<g >
<title>global_schema_ptr::get (1 samples, 0.03%; 0.00%)</title><rect x="994.2" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="997.20" y="1727.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="143.0" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.01" y="1599.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (34 samples, 1.07%; 0.00%)</title><rect x="85.4" y="629" width="12.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.42" y="639.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="60.5" y="277" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="63.53" y="287.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.33" y="431.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (22 samples, 0.69%; 0.00%)</title><rect x="89.9" y="581" width="8.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="92.88" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.45" y="447.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.03%; 0.00%)</title><rect x="1120.2" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1123.15" y="1935.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::Parser (7 samples, 0.22%; 0.00%)</title><rect x="20.0" y="517" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.03" y="527.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.03%; 0.00%)</title><rect x="52.7" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.73" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="829.6" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="832.61" y="1807.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (4 samples, 0.13%; 0.00%)</title><rect x="115.1" y="1973" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.14" y="1983.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (1 samples, 0.03%; -0.09%)</title><rect x="862.7" y="1781" width="0.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="865.68" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; +0.03%)</title><rect x="13.3" y="245" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="16.34" y="255.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="98.4" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="543.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="55.7" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.70" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; +0.03%)</title><rect x="77.2" y="469" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="80.25" y="479.5" ></text>
</g>
<g >
<title>sstables::sstable_writer::~sstable_writer (1 samples, 0.03%; 0.00%)</title><rect x="156.4" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.39" y="1839.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; +0.03%)</title><rect x="338.4" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="341.44" y="1727.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.35%; 0.00%)</title><rect x="545.8" y="1861" width="4.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="548.76" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (2 samples, 0.06%; 0.00%)</title><rect x="142.3" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.27" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (1 samples, 0.03%; +0.03%)</title><rect x="102.5" y="1413" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="105.51" y="1423.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.82" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="75.4" y="261" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="78.39" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (7 samples, 0.22%; 0.00%)</title><rect x="98.1" y="693" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.05" y="703.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="92.1" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.11" y="543.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="660.2" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="663.19" y="1903.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (165 samples, 5.20%; 0.00%)</title><rect x="19.7" y="597" width="61.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.66" y="607.5" >single..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (5 samples, 0.16%; 0.00%)</title><rect x="62.0" y="309" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="319.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::delay&lt;service::abstract_write_response_handler::signal (1 samples, 0.03%; +0.03%)</title><rect x="748.6" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="751.61" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_role_statement, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="96.2" y="517" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="99.20" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (14 samples, 0.44%; 0.00%)</title><rect x="12.2" y="469" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="15.9" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.94" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.82" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="92.1" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.11" y="511.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::single_column_relation (1 samples, 0.03%; 0.00%)</title><rect x="143.0" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.01" y="1743.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="57.6" y="373" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.56" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.13%; +0.09%)</title><rect x="710.0" y="1909" width="1.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="712.97" y="1919.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (7 samples, 0.22%; -0.03%)</title><rect x="70.2" y="373" width="2.6" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="73.19" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="543.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.09" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (38 samples, 1.20%; -0.13%)</title><rect x="1010.5" y="1685" width="14.2" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="1013.55" y="1695.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (3 samples, 0.09%; -0.22%)</title><rect x="658.3" y="1909" width="1.1" height="15.0" fill="rgb(128,128,255)" rx="2" ry="2" />
<text  x="661.33" y="1919.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (34 samples, 1.07%; 0.00%)</title><rect x="85.4" y="709" width="12.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.42" y="719.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~RecognizerSharedState (1 samples, 0.03%; 0.00%)</title><rect x="91.0" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.99" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (3 samples, 0.09%; +0.09%)</title><rect x="1023.6" y="1669" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1026.55" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (6 samples, 0.19%; +0.03%)</title><rect x="40.8" y="357" width="2.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="43.84" y="367.5" ></text>
</g>
<g >
<title>cql3::terminal::to_expression (2 samples, 0.06%; -0.03%)</title><rect x="88.0" y="501" width="0.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="91.02" y="511.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="73.2" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.16" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.07" y="1727.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="114.8" y="1957" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.77" y="1967.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (3 samples, 0.09%; 0.00%)</title><rect x="112.2" y="1829" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.17" y="1839.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, true, false, false&gt;::_Optional_payload_base (1 samples, 0.03%; 0.00%)</title><rect x="143.0" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.01" y="1663.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (2,678 samples, 84.32%; -0.28%)</title><rect x="162.3" y="1941" width="995.0" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="165.33" y="1951.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>locator::token_metadata::get_all_endpoints (1 samples, 0.03%; +0.03%)</title><rect x="158.2" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="161.24" y="1807.5" ></text>
</g>
<g >
<title>row::row (1 samples, 0.03%; +0.03%)</title><rect x="380.8" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="383.79" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="134.8" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.84" y="1727.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.13%; 0.00%)</title><rect x="60.2" y="421" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.16" y="431.5" ></text>
</g>
<g >
<title>__start_context (14 samples, 0.44%; 0.00%)</title><rect x="12.2" y="677" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="687.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.33" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="50.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.50" y="367.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.60%; 0.00%)</title><rect x="147.5" y="2021" width="7.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.47" y="2031.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (4 samples, 0.13%; 0.00%)</title><rect x="98.8" y="517" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="527.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.33" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="939.2" y="1829" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="942.21" y="1839.5" ></text>
</g>
<g >
<title>db::filter_for_query (4 samples, 0.13%; +0.06%)</title><rect x="1051.4" y="1765" width="1.5" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="1054.42" y="1775.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="85" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="95.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (165 samples, 5.20%; 0.00%)</title><rect x="19.7" y="565" width="61.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.66" y="575.5" >cql3::..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::attach_service_level_statement*, false&gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="95.5" y="453" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="98.45" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.03%; 0.00%)</title><rect x="21.1" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.15" y="447.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="747.1" y="1877" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="750.13" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="141.9" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.90" y="1727.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (14 samples, 0.44%; 0.00%)</title><rect x="12.2" y="581" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="591.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="91.0" y="453" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="93.99" y="463.5" ></text>
</g>
<g >
<title>unimplemented::warn (1 samples, 0.03%; +0.03%)</title><rect x="861.6" y="1781" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="864.56" y="1791.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.31%; +0.09%)</title><rect x="243.7" y="1861" width="3.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="246.70" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (11 samples, 0.35%; 0.00%)</title><rect x="895.0" y="1765" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="898.00" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="137.8" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.81" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; -0.03%)</title><rect x="1118.7" y="1909" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1121.66" y="1919.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (3 samples, 0.09%; +0.09%)</title><rect x="881.3" y="1845" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="884.25" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1663.5" ></text>
</g>
<g >
<title>sstables::sstable::do_write_simple (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1919.5" ></text>
</g>
<g >
<title>query_state::query_state (8 samples, 0.25%; -0.09%)</title><rect x="650.2" y="1877" width="2.9" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="653.16" y="1887.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (173 samples, 5.45%; 0.00%)</title><rect x="17.4" y="645" width="64.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.43" y="655.5" >std::_F..</text>
</g>
<g >
<title>create_partitions (14 samples, 0.44%; 0.00%)</title><rect x="12.2" y="597" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="607.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="71.7" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.68" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.06%; -0.03%)</title><rect x="896.9" y="1733" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="899.86" y="1743.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::~update_statement (3 samples, 0.09%; 0.00%)</title><rect x="110.3" y="1861" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.31" y="1871.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="142.3" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.27" y="1695.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="99.2" y="277" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="102.17" y="287.5" ></text>
</g>
<g >
<title>boost::variant&lt;ser::live_cell_view, ser::expiring_cell_view, ser::dead_cell_view, ser::counter_cell_view, ser::unknown_variant_type&gt;::apply_visitor&lt;(anonymous namespace)::read_atomic_cell (1 samples, 0.03%; +0.03%)</title><rect x="1105.3" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1108.29" y="1791.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="60.5" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.53" y="303.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.03%; +0.03%)</title><rect x="1103.1" y="1845" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1106.06" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%; +0.09%)</title><rect x="1156.2" y="1925" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1159.19" y="1935.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="917" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="927.5" ></text>
</g>
<g >
<title>all (3,176 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (56 samples, 1.76%; -0.03%)</title><rect x="605.6" y="1813" width="20.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="608.57" y="1823.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="702.2" y="1909" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="705.17" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (2 samples, 0.06%; +0.03%)</title><rect x="216.6" y="1893" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="219.57" y="1903.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (2 samples, 0.06%; -0.06%)</title><rect x="712.2" y="1909" width="0.7" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="715.20" y="1919.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (1 samples, 0.03%; -0.03%)</title><rect x="653.1" y="1877" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="656.13" y="1887.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; +0.03%)</title><rect x="14.8" y="373" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="17.83" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (2 samples, 0.06%; 0.00%)</title><rect x="115.1" y="1893" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.14" y="1903.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (1 samples, 0.03%; +0.03%)</title><rect x="90.6" y="549" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="93.62" y="559.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; -0.03%)</title><rect x="664.3" y="1909" width="1.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="667.28" y="1919.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::file&gt;, seastar::with_file_close_on_failure&lt;sstables::sstable::new_sstable_component_file (2 samples, 0.06%; 0.00%)</title><rect x="660.2" y="1925" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="663.19" y="1935.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.13%; -0.06%)</title><rect x="175.7" y="1893" width="1.5" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="178.71" y="1903.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (8 samples, 0.25%; +0.06%)</title><rect x="772.0" y="1877" width="3.0" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="775.02" y="1887.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (215 samples, 6.77%; +0.03%)</title><rect x="308.7" y="1765" width="79.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="311.72" y="1775.5" >partition..</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.09" y="383.5" ></text>
</g>
<g >
<title>auth::get_permissions (3 samples, 0.09%; 0.00%)</title><rect x="112.2" y="1813" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.17" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="136.3" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.32" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="447.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (2 samples, 0.06%; 0.00%)</title><rect x="860.8" y="1765" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.82" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="719.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; +0.06%)</title><rect x="248.5" y="1877" width="2.3" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="251.53" y="1887.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="53.5" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.47" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.17" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (1 samples, 0.03%; +0.03%)</title><rect x="176.8" y="1877" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="179.82" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="53.1" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.10" y="303.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="1116.4" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1119.44" y="1727.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (5 samples, 0.16%; 0.00%)</title><rect x="62.0" y="373" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="62.0" y="213" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="50.5" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.50" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.17" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::attach_service_level_statement*, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.5" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.45" y="495.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.13%; 0.00%)</title><rect x="1158.8" y="2053" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.79" y="2063.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.58" y="1679.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (2 samples, 0.06%; +0.06%)</title><rect x="514.9" y="1845" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="517.92" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="73.2" y="277" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="76.16" y="287.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.58" y="1535.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (30 samples, 0.94%; -0.22%)</title><rect x="736.4" y="1909" width="11.1" height="15.0" fill="rgb(128,128,255)" rx="2" ry="2" />
<text  x="739.35" y="1919.5" ></text>
</g>
<g >
<title>row::~row (1 samples, 0.03%; 0.00%)</title><rect x="720.4" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.38" y="1871.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (1 samples, 0.03%; 0.00%)</title><rect x="44.9" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.92" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.50%; 0.00%)</title><rect x="1112.7" y="1861" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.72" y="1871.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.19%; -0.03%)</title><rect x="361.1" y="1685" width="2.2" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="364.10" y="1695.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; +0.03%)</title><rect x="764.2" y="1893" width="2.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="767.22" y="1903.5" ></text>
</g>
<g >
<title>sstring_hash::operator (3 samples, 0.09%; +0.03%)</title><rect x="1049.9" y="1749" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1052.93" y="1759.5" ></text>
</g>
<g >
<title>__start_context (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="773" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="783.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::drop_function_statement, std::default_delete&lt;cql3::statements::drop_function_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="79.1" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.11" y="463.5" ></text>
</g>
<g >
<title>seastar::print_real_timestamp (1 samples, 0.03%; +0.03%)</title><rect x="185.0" y="1861" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="187.99" y="1871.5" ></text>
</g>
<g >
<title>__start_context (7 samples, 0.22%; 0.00%)</title><rect x="98.1" y="741" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.05" y="751.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="124.1" y="1525" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1535.5" ></text>
</g>
<g >
<title>CryptoPP::Weak1::MD5::Transform (1 samples, 0.03%; +0.03%)</title><rect x="10.0" y="2053" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (3 samples, 0.09%; 0.00%)</title><rect x="57.6" y="389" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.56" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="52.0" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.98" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="853" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.40" y="863.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="76.5" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.51" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (26 samples, 0.82%; 0.00%)</title><rect x="135.2" y="1797" width="9.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.21" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="142.3" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.27" y="1647.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.78" y="1647.5" ></text>
</g>
<g >
<title>main (2,691 samples, 84.73%; 0.00%)</title><rect x="158.6" y="2037" width="999.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.61" y="2047.5" >main</text>
</g>
<g >
<title>dht::tri_compare (4 samples, 0.13%; -0.13%)</title><rect x="1074.1" y="1701" width="1.5" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="1077.08" y="1711.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (17 samples, 0.54%; +0.03%)</title><rect x="725.6" y="1909" width="6.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="728.58" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (4 samples, 0.13%; +0.13%)</title><rect x="919.1" y="1829" width="1.5" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="922.15" y="1839.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="762.0" y="1861" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="764.99" y="1871.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.09%; 0.00%)</title><rect x="70.2" y="341" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.19" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (39 samples, 1.23%; 0.00%)</title><rect x="610.4" y="1797" width="14.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="613.40" y="1807.5" ></text>
</g>
<g >
<title>db::block_for (1 samples, 0.03%; +0.03%)</title><rect x="1051.0" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1054.05" y="1759.5" ></text>
</g>
<g >
<title>posix_memalign (6 samples, 0.19%; +0.06%)</title><rect x="377.1" y="1669" width="2.2" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="380.08" y="1679.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="13.7" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.72" y="223.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="94.3" y="421" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="97.34" y="431.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%; -0.03%)</title><rect x="1006.8" y="1685" width="3.0" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1009.83" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="84.3" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="74.3" y="277" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.28" y="287.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="885" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.40" y="895.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="136.0" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.95" y="1615.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_with_triggers (3 samples, 0.09%; 0.00%)</title><rect x="863.8" y="1829" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="866.79" y="1839.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (2 samples, 0.06%; 0.00%)</title><rect x="94.0" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.97" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (8 samples, 0.25%; 0.00%)</title><rect x="24.9" y="405" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.86" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::back (1 samples, 0.03%; +0.03%)</title><rect x="144.5" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="147.50" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1455.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; -0.03%)</title><rect x="51.6" y="405" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="54.61" y="415.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="137.8" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.81" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;query::result_set_row, std::allocator&lt;query::result_set_row&gt; &gt;::emplace_back&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, std::unordered_map&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, query::non_null_data_value, std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::equal_to&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, query::non_null_data_value&gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="186.5" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="189.48" y="1791.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (1 samples, 0.03%; -0.06%)</title><rect x="560.2" y="1813" width="0.4" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="563.25" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="99.5" y="133" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="102.54" y="143.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (3 samples, 0.09%; 0.00%)</title><rect x="124.1" y="1653" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1663.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (3 samples, 0.09%; 0.00%)</title><rect x="132.2" y="1621" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.24" y="1631.5" ></text>
</g>
<g >
<title>row::compact_and_expire (36 samples, 1.13%; -0.06%)</title><rect x="494.5" y="1829" width="13.4" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="497.48" y="1839.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; -0.03%)</title><rect x="188.0" y="1925" width="2.2" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="190.97" y="1935.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (28 samples, 0.88%; 0.00%)</title><rect x="103.3" y="1893" width="10.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.26" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="69.1" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.07" y="399.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="2015.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="140.0" y="1717" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.04" y="1727.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="140.8" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.78" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="139.3" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.29" y="1631.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; +0.03%)</title><rect x="623.8" y="1781" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="626.78" y="1791.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (3 samples, 0.09%; +0.09%)</title><rect x="744.2" y="1893" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="747.16" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="140.8" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.78" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (75 samples, 2.36%; 0.00%)</title><rect x="117.0" y="1973" width="27.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1983.5" >s..</text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="136.3" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.32" y="1615.5" ></text>
</g>
<g >
<title>memtable::memtable_encoding_stats_collector::update (1 samples, 0.03%; +0.03%)</title><rect x="1106.8" y="1781" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1109.78" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="69" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="79.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="665.0" y="1893" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="668.02" y="1903.5" ></text>
</g>
<g >
<title>std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.57" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="62.0" y="261" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.01" y="1551.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (1 samples, 0.03%; +0.03%)</title><rect x="116.6" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="119.63" y="1919.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (3 samples, 0.09%; -0.03%)</title><rect x="1110.9" y="1797" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1113.86" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="124.1" y="1573" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_UPDATE (1 samples, 0.03%; 0.00%)</title><rect x="37.1" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.12" y="383.5" ></text>
</g>
<g >
<title>partition_entry::read (1 samples, 0.03%; +0.03%)</title><rect x="217.3" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="220.32" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (3 samples, 0.09%; 0.00%)</title><rect x="132.2" y="1653" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.24" y="1663.5" ></text>
</g>
<g >
<title>sstables::sstable::write_components (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="2021" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="2031.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (2 samples, 0.06%; +0.06%)</title><rect x="160.1" y="1941" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="163.10" y="1951.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.01" y="1599.5" ></text>
</g>
<g >
<title>database::query (12 samples, 0.38%; -0.06%)</title><rect x="180.5" y="1925" width="4.5" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="183.54" y="1935.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.06%)</title><rect x="110.7" y="1829" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="113.69" y="1839.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;char const*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="142.6" y="1669" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="145.64" y="1679.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (3 samples, 0.09%; -0.06%)</title><rect x="520.5" y="1813" width="1.1" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="523.49" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="98.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="463.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.11" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::statements::attach_service_level_statement*, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="95.5" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.45" y="479.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::statements::list_users_statement&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="100.3" y="469" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="103.28" y="479.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="757" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.40" y="767.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; -0.03%)</title><rect x="196.9" y="1909" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="199.88" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1557" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1567.5" >[unknown]</text>
</g>
<g >
<title>service::client_state::has_access (81 samples, 2.55%; 0.00%)</title><rect x="800.6" y="1829" width="30.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="803.63" y="1839.5" >se..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.01" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.97" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="83.9" y="405" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="86.94" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::consume_with&lt;row::apply_monotonically (1 samples, 0.03%; 0.00%)</title><rect x="116.6" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.63" y="1951.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.33" y="399.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (2 samples, 0.06%; -0.06%)</title><rect x="175.0" y="1877" width="0.7" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="177.96" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1045" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1055.5" >[unknown]</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="207.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.03%; +0.03%)</title><rect x="144.9" y="2021" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="147.87" y="2031.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (70 samples, 2.20%; 0.00%)</title><rect x="23.7" y="485" width="26.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.75" y="495.5" >a..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="82.1" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.08" y="399.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.03%; +0.03%)</title><rect x="880.5" y="1845" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="883.51" y="1855.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (2 samples, 0.06%; 0.00%)</title><rect x="803.6" y="1813" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="806.60" y="1823.5" ></text>
</g>
<g >
<title>schema::column_at (3 samples, 0.09%; -0.03%)</title><rect x="375.2" y="1685" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="378.22" y="1695.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="136.0" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.95" y="1599.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_tables_and_views (1 samples, 0.03%; 0.00%)</title><rect x="185.0" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.99" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;0ul, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="74.6" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.65" y="175.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="60.9" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.90" y="287.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="91.7" y="565" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="94.74" y="575.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (2 samples, 0.06%; 0.00%)</title><rect x="860.1" y="1813" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.08" y="1823.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; +0.03%)</title><rect x="705.9" y="1893" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="708.89" y="1903.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.03%; +0.03%)</title><rect x="748.2" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="751.24" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.50%; 0.00%)</title><rect x="1112.7" y="1829" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.72" y="1839.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="141.5" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.52" y="1727.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="81.0" y="613" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="83.96" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; 0.00%)</title><rect x="413.5" y="1845" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="416.49" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (5 samples, 0.16%; 0.00%)</title><rect x="62.0" y="325" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="335.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="128.5" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.52" y="1695.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_partition (1 samples, 0.03%; +0.03%)</title><rect x="115.9" y="1957" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="118.89" y="1967.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="84.3" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (16 samples, 0.50%; 0.00%)</title><rect x="92.1" y="565" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.11" y="575.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="629" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="639.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1029" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1039.5" >[unknown]</text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; -0.06%)</title><rect x="420.5" y="1845" width="0.8" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="423.55" y="1855.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.97" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.03%; +0.03%)</title><rect x="185.7" y="1877" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="188.74" y="1887.5" ></text>
</g>
<g >
<title>table::mutation_query (1 samples, 0.03%; 0.00%)</title><rect x="217.3" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="220.32" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; 0.00%)</title><rect x="26.3" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.35" y="255.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="635.3" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="638.30" y="1839.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (7 samples, 0.22%; 0.00%)</title><rect x="1113.5" y="1733" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.46" y="1743.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.03%; +0.03%)</title><rect x="20.0" y="501" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="23.03" y="511.5" ></text>
</g>
<g >
<title>make_combined_reader (47 samples, 1.48%; -0.06%)</title><rect x="559.5" y="1829" width="17.5" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="562.50" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (3 samples, 0.09%; -0.03%)</title><rect x="132.2" y="1557" width="1.2" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="135.24" y="1567.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (2 samples, 0.06%; 0.00%)</title><rect x="186.5" y="1861" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.48" y="1871.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (6 samples, 0.19%; 0.00%)</title><rect x="111.4" y="1877" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="114.43" y="1887.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.03%; +0.03%)</title><rect x="81.3" y="613" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="84.34" y="623.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerType (4 samples, 0.13%; 0.00%)</title><rect x="21.1" y="501" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.15" y="511.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_text (5 samples, 0.16%; 0.00%)</title><rect x="33.4" y="373" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.41" y="383.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_endpoint (1 samples, 0.03%; +0.03%)</title><rect x="187.6" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="190.59" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="52.0" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.98" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="78.0" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.99" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (2 samples, 0.06%; +0.06%)</title><rect x="873.5" y="1861" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="876.45" y="1871.5" ></text>
</g>
<g >
<title>mutation_partition::clear_gently (1 samples, 0.03%; 0.00%)</title><rect x="156.0" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.01" y="1983.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::back (1 samples, 0.03%; 0.00%)</title><rect x="67.2" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.22" y="399.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="677" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="687.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.82" y="447.5" ></text>
</g>
<g >
<title>__start_context (83 samples, 2.61%; 0.00%)</title><rect x="114.0" y="2021" width="30.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.03" y="2031.5" >__..</text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="933" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="943.5" ></text>
</g>
<g >
<title>dht::sharder::shard_of (1 samples, 0.03%; +0.03%)</title><rect x="988.6" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="991.63" y="1743.5" ></text>
</g>
<g >
<title>dht::tri_compare (8 samples, 0.25%; +0.03%)</title><rect x="596.7" y="1797" width="2.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="599.66" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (5 samples, 0.16%; 0.00%)</title><rect x="120.3" y="1637" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.35" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;9ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="124.1" y="1461" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1471.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="145.2" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.24" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="122.2" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.20" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.33" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (3 samples, 0.09%; -0.03%)</title><rect x="1153.6" y="1925" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1156.59" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="53.5" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.47" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (1 samples, 0.03%; 0.00%)</title><rect x="108.5" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.46" y="1743.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (1 samples, 0.03%; 0.00%)</title><rect x="300.5" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="303.54" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="71.7" y="293" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.68" y="303.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::get_tokenStartCharIndex (1 samples, 0.03%; +0.03%)</title><rect x="32.7" y="373" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="35.66" y="383.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (3 samples, 0.09%; 0.00%)</title><rect x="1105.7" y="1765" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.66" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="137.4" y="1733" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.44" y="1743.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_bound_terms (1 samples, 0.03%; -0.03%)</title><rect x="763.8" y="1893" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="766.85" y="1903.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.97" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (4 samples, 0.13%; -0.03%)</title><rect x="25.2" y="325" width="1.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="28.23" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.50%; 0.00%)</title><rect x="1112.7" y="1813" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.72" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.56" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="122.2" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.20" y="1663.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="53.1" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.10" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (13 samples, 0.41%; -0.03%)</title><rect x="1146.2" y="1893" width="4.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1149.16" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="140.8" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.78" y="1599.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="138.2" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.18" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="143.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (3 samples, 0.09%; -0.03%)</title><rect x="1110.9" y="1813" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1113.86" y="1823.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%; +0.03%)</title><rect x="700.3" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="703.31" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="175.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::~_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="91.0" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.99" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.4" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.41" y="1615.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="697.0" y="1909" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="699.97" y="1919.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (15 samples, 0.47%; 0.00%)</title><rect x="1015.0" y="1653" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1018.01" y="1663.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_head (1 samples, 0.03%; +0.03%)</title><rect x="129.3" y="1637" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="132.26" y="1647.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="136.0" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.95" y="1727.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="124.8" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.80" y="1519.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="55.7" y="277" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="58.70" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; +0.03%)</title><rect x="65.4" y="421" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="68.36" y="431.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (20 samples, 0.63%; +0.13%)</title><rect x="1068.1" y="1717" width="7.5" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="1071.14" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_allocate_map (1 samples, 0.03%; 0.00%)</title><rect x="21.9" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.89" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="124.8" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.80" y="1503.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; 0.00%)</title><rect x="65.0" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.99" y="239.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (1 samples, 0.03%; +0.03%)</title><rect x="844.8" y="1877" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="847.84" y="1887.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="899.5" y="1781" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="902.46" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="331.0" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="334.01" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;3ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="124.1" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.50%; 0.00%)</title><rect x="1112.7" y="1877" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.72" y="1887.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::StackType (1 samples, 0.03%; 0.00%)</title><rect x="22.3" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.26" y="447.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="62.8" y="261" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.76" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.09%)</title><rect x="628.2" y="1781" width="0.8" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="631.24" y="1791.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; -0.09%)</title><rect x="675.1" y="1909" width="0.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="678.05" y="1919.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="134.1" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.09" y="1711.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%; 0.00%)</title><rect x="158.2" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.24" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (1 samples, 0.03%; -0.06%)</title><rect x="568.8" y="1797" width="0.4" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="571.79" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mK_WHERE (2 samples, 0.06%; +0.06%)</title><rect x="37.5" y="373" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="40.49" y="383.5" ></text>
</g>
<g >
<title>database::query (1 samples, 0.03%; +0.03%)</title><rect x="993.1" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="996.09" y="1727.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; -0.09%)</title><rect x="941.1" y="1797" width="1.1" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="944.07" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.16%; +0.16%)</title><rect x="686.9" y="1861" width="1.9" height="15.0" fill="rgb(255,151,151)" rx="2" ry="2" />
<text  x="689.94" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="121.5" y="1461" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.46" y="1471.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (2 samples, 0.06%; 0.00%)</title><rect x="73.2" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.16" y="399.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="158.2" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.24" y="2015.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (34 samples, 1.07%; 0.00%)</title><rect x="85.4" y="613" width="12.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.42" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_role_statement, std::default_delete&lt;cql3::statements::drop_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.03" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.03%; +0.03%)</title><rect x="67.2" y="373" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="70.22" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (2,691 samples, 84.73%; 0.00%)</title><rect x="158.6" y="1957" width="999.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.61" y="1967.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="73.9" y="357" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="76.90" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.82" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.09%; +0.03%)</title><rect x="733.8" y="1909" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="736.75" y="1919.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="398.3" y="1797" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="401.26" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.73" y="415.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1 samples, 0.03%; +0.03%)</title><rect x="827.0" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="830.01" y="1807.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (3 samples, 0.09%; +0.06%)</title><rect x="419.4" y="1845" width="1.1" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="422.43" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="207.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%; 0.00%)</title><rect x="1086.7" y="1813" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1089.71" y="1823.5" ></text>
</g>
<g >
<title>single_node_cql_env::do_with (1 samples, 0.03%; 0.00%)</title><rect x="158.2" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.24" y="1983.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; +0.03%)</title><rect x="1119.0" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1122.04" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="55.7" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.70" y="303.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="773" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="783.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="821" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="831.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (4 samples, 0.13%; 0.00%)</title><rect x="33.4" y="325" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.41" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (3 samples, 0.09%; 0.00%)</title><rect x="126.3" y="1589" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.29" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (232 samples, 7.30%; 0.00%)</title><rect x="11.9" y="741" width="86.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="751.5" >[unknown]</text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.56" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.03%; +0.03%)</title><rect x="331.8" y="1733" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="334.75" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (5 samples, 0.16%; 0.00%)</title><rect x="62.0" y="341" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;lister&gt;::shared_ptr_no_esft&lt;seastar::file, std::unordered_set&lt;seastar::directory_entry_type, seastar::enum_hash&lt;seastar::directory_entry_type&gt;, std::equal_to&lt;seastar::directory_entry_type&gt;, std::allocator&lt;seastar::directory_entry_type&gt; &gt; const, std::function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="721.1" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="724.12" y="1919.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (372 samples, 11.71%; +0.09%)</title><rect x="268.2" y="1845" width="138.2" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="271.22" y="1855.5" >merging_reader&lt;mu..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (5 samples, 0.16%; 0.00%)</title><rect x="120.3" y="1589" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.35" y="1599.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.31%; -0.03%)</title><rect x="955.6" y="1781" width="3.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="958.56" y="1791.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="51.6" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.61" y="463.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (1 samples, 0.03%; +0.03%)</title><rect x="159.0" y="1941" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="161.99" y="1951.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (4 samples, 0.13%; +0.09%)</title><rect x="510.8" y="1861" width="1.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="513.83" y="1871.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="963.7" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="966.73" y="1791.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="50.5" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.50" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (75 samples, 2.36%; 0.00%)</title><rect x="117.0" y="1813" width="27.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1823.5" >c..</text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (10 samples, 0.31%; 0.00%)</title><rect x="106.2" y="1813" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="109.23" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="82.4" y="341" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="85.45" y="351.5" ></text>
</g>
<g >
<title>utils::array_search_gt (1 samples, 0.03%; -0.16%)</title><rect x="649.8" y="1829" width="0.4" height="15.0" fill="rgb(151,151,255)" rx="2" ry="2" />
<text  x="652.79" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="191.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1663.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (75 samples, 2.36%; 0.00%)</title><rect x="117.0" y="1909" width="27.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1919.5" >c..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="191.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (2 samples, 0.06%; -0.03%)</title><rect x="214.0" y="1845" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="216.97" y="1855.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (112 samples, 3.53%; -0.03%)</title><rect x="989.7" y="1733" width="41.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="992.74" y="1743.5" >ser..</text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="141.9" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.90" y="1743.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (5 samples, 0.16%; 0.00%)</title><rect x="125.9" y="1669" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.92" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_input (1 samples, 0.03%; +0.03%)</title><rect x="28.2" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="31.21" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="59.8" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.79" y="351.5" ></text>
</g>
<g >
<title>[unknown] (241 samples, 7.59%; 0.00%)</title><rect x="11.9" y="901" width="89.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="911.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.09%; 0.00%)</title><rect x="70.2" y="357" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.19" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (7 samples, 0.22%; +0.03%)</title><rect x="107.0" y="1797" width="2.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="109.97" y="1807.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.03%; 0.00%)</title><rect x="1106.4" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1109.40" y="1727.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, lister::scan_dir (1 samples, 0.03%; 0.00%)</title><rect x="721.1" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="724.12" y="1935.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.03%; +0.03%)</title><rect x="155.3" y="1941" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="158.27" y="1951.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_istream (1 samples, 0.03%; +0.03%)</title><rect x="57.2" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="60.19" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.09%; 0.00%)</title><rect x="60.5" y="325" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.53" y="335.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (4 samples, 0.13%; -0.03%)</title><rect x="86.5" y="469" width="1.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="89.54" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (3 samples, 0.09%; +0.03%)</title><rect x="653.5" y="1877" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="656.50" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="271.5" ></text>
</g>
<g >
<title>row::row (81 samples, 2.55%; -0.06%)</title><rect x="349.2" y="1717" width="30.1" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="352.21" y="1727.5" >ro..</text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.03%; +0.03%)</title><rect x="731.5" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="734.52" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (7 samples, 0.22%; 0.00%)</title><rect x="98.1" y="709" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.05" y="719.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="142.6" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.64" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.58" y="1647.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (4 samples, 0.13%; 0.00%)</title><rect x="48.3" y="421" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.27" y="431.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (12 samples, 0.38%; -0.03%)</title><rect x="630.8" y="1813" width="4.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="633.84" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (10 samples, 0.31%; +0.03%)</title><rect x="119.2" y="1701" width="3.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="122.23" y="1711.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; +0.03%)</title><rect x="99.9" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="102.91" y="399.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (2 samples, 0.06%; 0.00%)</title><rect x="115.1" y="1925" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.14" y="1935.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (2 samples, 0.06%; 0.00%)</title><rect x="57.6" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.56" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (8 samples, 0.25%; -0.03%)</title><rect x="1099.7" y="1845" width="3.0" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1102.72" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.03" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="122.2" y="1621" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="125.20" y="1631.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_M_set_node (1 samples, 0.03%; +0.03%)</title><rect x="132.2" y="1509" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="135.24" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="864.5" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="867.53" y="1759.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; +0.03%)</title><rect x="670.6" y="1909" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="673.59" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (2 samples, 0.06%; 0.00%)</title><rect x="127.8" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.78" y="1727.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::statements::raw::update_statement, cql3::cf_name, std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;, std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;, std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;, bool&amp;&gt; (2 samples, 0.06%; 0.00%)</title><rect x="94.7" y="501" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.71" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="56.1" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.07" y="287.5" ></text>
</g>
<g >
<title>db::schema_tables::make_table_mutations (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.11" y="1855.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.03%; +0.03%)</title><rect x="241.5" y="1877" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="244.47" y="1887.5" ></text>
</g>
<g >
<title>cql3::relation::to_column_definition (1 samples, 0.03%; 0.00%)</title><rect x="107.3" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.34" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1413" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1423.5" >[unknown]</text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; -0.03%)</title><rect x="70.6" y="197" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="73.56" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (3 samples, 0.09%; +0.03%)</title><rect x="161.2" y="1941" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="164.22" y="1951.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (8 samples, 0.25%; 0.00%)</title><rect x="55.7" y="421" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.70" y="431.5" ></text>
</g>
<g >
<title>posix_memalign (15 samples, 0.47%; 0.00%)</title><rect x="369.3" y="1653" width="5.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="372.28" y="1663.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::revoke_role_statement, std::default_delete&lt;cql3::statements::revoke_role_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="96.9" y="517" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="99.94" y="527.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (7 samples, 0.22%; 0.00%)</title><rect x="98.1" y="725" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.05" y="735.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="64.6" y="309" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.62" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="757.2" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="760.16" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.17" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="114.8" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.77" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.6" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="431.5" ></text>
</g>
<g >
<title>std::operator- (2 samples, 0.06%; 0.00%)</title><rect x="57.6" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.56" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_M_deallocate_map (1 samples, 0.03%; 0.00%)</title><rect x="91.0" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.99" y="479.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1077" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1087.5" >[unknown]</text>
</g>
<g >
<title>cql3::operation::set_value::~set_value (1 samples, 0.03%; 0.00%)</title><rect x="110.3" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="113.31" y="1855.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; 0.00%)</title><rect x="60.9" y="229" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.90" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (23 samples, 0.72%; 0.00%)</title><rect x="890.9" y="1781" width="8.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="893.91" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (241 samples, 7.59%; 0.00%)</title><rect x="11.9" y="805" width="89.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="815.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (1 samples, 0.03%; 0.00%)</title><rect x="217.3" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="220.32" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1525" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1535.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (4 samples, 0.13%; -0.03%)</title><rect x="60.2" y="405" width="1.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="63.16" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (80 samples, 2.52%; +0.03%)</title><rect x="513.8" y="1861" width="29.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="516.80" y="1871.5" >st..</text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1733" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1743.5" >[unknown]</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="58.3" y="229" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="61.30" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (83 samples, 2.61%; +0.25%)</title><rect x="1122.8" y="1925" width="30.8" height="15.0" fill="rgb(255,116,116)" rx="2" ry="2" />
<text  x="1125.75" y="1935.5" >se..</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.91" y="431.5" ></text>
</g>
<g >
<title>TLS wrapper function for logalloc::shard_segment_pool (1 samples, 0.03%; +0.03%)</title><rect x="156.0" y="1957" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="159.01" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1509" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1519.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (1 samples, 0.03%; 0.00%)</title><rect x="73.9" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.90" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="52.0" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.98" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (3 samples, 0.09%; 0.00%)</title><rect x="70.2" y="325" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.19" y="335.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; +0.03%)</title><rect x="621.5" y="1781" width="1.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="624.55" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="66.1" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.10" y="367.5" ></text>
</g>
<g >
<title>reader_permit::consume (4 samples, 0.13%; +0.09%)</title><rect x="403.5" y="1813" width="1.4" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="406.46" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="51.6" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.61" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (5 samples, 0.16%; 0.00%)</title><rect x="120.3" y="1605" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.35" y="1615.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (2 samples, 0.06%; 0.00%)</title><rect x="1117.6" y="1685" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1120.55" y="1695.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (1 samples, 0.03%; 0.00%)</title><rect x="114.8" y="1893" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.77" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.06%)</title><rect x="542.0" y="1829" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="545.04" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="94.0" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.97" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::drop_function_statement, std::default_delete&lt;cql3::statements::drop_function_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::drop_function_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="79.1" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.11" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="709.2" y="1893" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="712.23" y="1903.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (2 samples, 0.06%; 0.00%)</title><rect x="186.5" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.48" y="1887.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (280 samples, 8.82%; -0.06%)</title><rect x="750.1" y="1925" width="104.0" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="753.10" y="1935.5" >seastar::int..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="830.4" y="1813" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="833.35" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::setTokenStream (2 samples, 0.06%; 0.00%)</title><rect x="20.4" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.40" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; -0.03%)</title><rect x="124.1" y="1589" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="127.06" y="1599.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; 0.00%)</title><rect x="145.2" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.24" y="1919.5" ></text>
</g>
<g >
<title>create_partitions (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="693" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="703.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (14 samples, 0.44%; 0.00%)</title><rect x="12.2" y="565" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="575.5" ></text>
</g>
<g >
<title>seastar::reactor::file_size (1 samples, 0.03%; 0.00%)</title><rect x="720.7" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.75" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.03%; 0.00%)</title><rect x="512.7" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="515.69" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (3 samples, 0.09%; 0.00%)</title><rect x="90.6" y="565" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.62" y="575.5" ></text>
</g>
<g >
<title>database::has_keyspace (1 samples, 0.03%; +0.03%)</title><rect x="113.3" y="1829" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="116.29" y="1839.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (4 samples, 0.13%; +0.13%)</title><rect x="45.3" y="357" width="1.5" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="48.30" y="367.5" ></text>
</g>
<g >
<title>db::schema_tables::do_merge_schema (3 samples, 0.09%; 0.00%)</title><rect x="185.0" y="1925" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.99" y="1935.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="133.7" y="1525" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="136.72" y="1535.5" ></text>
</g>
<g >
<title>cql3::expr::untyped_constant::untyped_constant (1 samples, 0.03%; +0.03%)</title><rect x="127.0" y="1349" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="130.03" y="1359.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="572.5" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="575.51" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="14.5" y="245" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="17.46" y="255.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.03%; +0.03%)</title><rect x="1022.8" y="1653" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1025.81" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="142.3" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.27" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="95.5" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.45" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (49 samples, 1.54%; 0.00%)</title><rect x="117.0" y="1781" width="18.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; 0.00%)</title><rect x="509.3" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="512.35" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::_Deque_base (2 samples, 0.06%; 0.00%)</title><rect x="21.5" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.52" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="463.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (4 samples, 0.13%; +0.06%)</title><rect x="531.3" y="1797" width="1.5" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="534.27" y="1807.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; 0.00%)</title><rect x="1091.5" y="1845" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1094.54" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::execution_stage_manager::flush (1 samples, 0.03%; +0.03%)</title><rect x="1157.3" y="1925" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1160.30" y="1935.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::_M_deleter (2 samples, 0.06%; 0.00%)</title><rect x="128.9" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.89" y="1679.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1487.5" ></text>
</g>
<g >
<title>std::_Enable_default_constructor&lt;true, std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt;::_Enable_default_constructor (1 samples, 0.03%; +0.03%)</title><rect x="125.5" y="1669" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="128.55" y="1679.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.03%; +0.03%)</title><rect x="25.6" y="277" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="28.60" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::has_unrestricted_clustering_columns (1 samples, 0.03%; +0.03%)</title><rect x="105.9" y="1813" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="108.86" y="1823.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="98.4" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="1114.2" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1117.21" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="71.7" y="245" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.68" y="255.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (17 samples, 0.54%; -0.03%)</title><rect x="368.9" y="1669" width="6.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="371.90" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1519.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (2 samples, 0.06%; +0.03%)</title><rect x="519.7" y="1813" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="522.75" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="141.2" y="1669" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="144.15" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (3 samples, 0.09%; 0.00%)</title><rect x="1157.3" y="1941" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.30" y="1951.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="13.3" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="76.9" y="389" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="79.88" y="399.5" ></text>
</g>
<g >
<title>db::schema_tables::diff_table_or_view (1 samples, 0.03%; 0.00%)</title><rect x="185.0" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.99" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; -0.06%)</title><rect x="824.0" y="1765" width="1.5" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="827.04" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.25%; -0.13%)</title><rect x="1006.8" y="1669" width="3.0" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="1009.83" y="1679.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="608.5" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="611.55" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::release (1 samples, 0.03%; 0.00%)</title><rect x="127.8" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.78" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (3 samples, 0.09%; +0.09%)</title><rect x="509.7" y="1845" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="512.72" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; -0.03%)</title><rect x="1029.5" y="1717" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1032.50" y="1727.5" ></text>
</g>
<g >
<title>locator::simple_strategy::calculate_natural_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="187.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.59" y="1919.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.16%; -0.06%)</title><rect x="303.5" y="1781" width="1.9" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="306.51" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (75 samples, 2.36%; 0.00%)</title><rect x="117.0" y="1845" width="27.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1855.5" >c..</text>
</g>
<g >
<title>std::move&lt;cql3::expr::conjunction&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="122.9" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="125.95" y="1711.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="843.7" y="1861" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="846.73" y="1871.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (10 samples, 0.31%; 0.00%)</title><rect x="81.7" y="661" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.71" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="27.1" y="245" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="30.09" y="255.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (34 samples, 1.07%; +0.03%)</title><rect x="778.3" y="1861" width="12.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="781.34" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="27.1" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.09" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="128.5" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.52" y="1663.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (2 samples, 0.06%; 0.00%)</title><rect x="73.2" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.16" y="383.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="155.3" y="1989" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="158.27" y="1999.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (75 samples, 2.36%; 0.00%)</title><rect x="117.0" y="1877" width="27.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1887.5" >c..</text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1205" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1215.5" >[unknown]</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="56.8" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.81" y="255.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.46" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="901" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="911.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::write_dma (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1775.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="139.3" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.29" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1301" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1311.5" >[unknown]</text>
</g>
<g >
<title>is_system_keyspace (1 samples, 0.03%; +0.03%)</title><rect x="88.8" y="517" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="91.77" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (1 samples, 0.03%; +0.03%)</title><rect x="47.5" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="50.53" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (1 samples, 0.03%; +0.03%)</title><rect x="1112.7" y="1765" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1115.72" y="1775.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (2 samples, 0.06%; 0.00%)</title><rect x="920.6" y="1829" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="923.64" y="1839.5" ></text>
</g>
<g >
<title>mutation_querier::consume (85 samples, 2.68%; +0.25%)</title><rect x="448.4" y="1813" width="31.6" height="15.0" fill="rgb(255,116,116)" rx="2" ry="2" />
<text  x="451.41" y="1823.5" >mu..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="83.2" y="421" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="86.19" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="145.2" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.24" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1189" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1199.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; +0.09%)</title><rect x="258.9" y="1845" width="2.3" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="261.93" y="1855.5" ></text>
</g>
<g >
<title>db::commitlog::segment::cycle (1 samples, 0.03%; 0.00%)</title><rect x="1111.6" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.61" y="1791.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (10 samples, 0.31%; 0.00%)</title><rect x="81.7" y="693" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.71" y="703.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::list_users_statement*, std::default_delete&lt;cql3::statements::list_users_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.3" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.28" y="495.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; +0.03%)</title><rect x="832.6" y="1813" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="835.58" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="71.7" y="325" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.68" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (5 samples, 0.16%; 0.00%)</title><rect x="130.4" y="1669" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.38" y="1679.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.96" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (1 samples, 0.03%; +0.03%)</title><rect x="1022.4" y="1653" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1025.44" y="1663.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.03%; +0.03%)</title><rect x="63.9" y="389" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="66.87" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.03%)</title><rect x="1141.3" y="1893" width="2.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1144.33" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.03" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (3 samples, 0.09%; 0.00%)</title><rect x="84.3" y="485" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="495.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (4 samples, 0.13%; +0.09%)</title><rect x="1029.9" y="1717" width="1.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1032.87" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="181" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="191.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="82.1" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.08" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (43 samples, 1.35%; -0.03%)</title><rect x="900.2" y="1829" width="16.0" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="903.20" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="140.8" y="1525" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="143.78" y="1535.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.17" y="383.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="19.3" y="597" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="22.29" y="607.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="13.3" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (3 samples, 0.09%; 0.00%)</title><rect x="128.5" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.52" y="1727.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (22 samples, 0.69%; -0.06%)</title><rect x="535.0" y="1845" width="8.2" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="537.98" y="1855.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (2 samples, 0.06%; 0.00%)</title><rect x="13.3" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="399.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%; 0.00%)</title><rect x="753.8" y="1909" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="756.82" y="1919.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_allocate_map (1 samples, 0.03%; 0.00%)</title><rect x="22.3" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.26" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; 0.00%)</title><rect x="847.4" y="1845" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="850.44" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.46" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="543.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_rec (1 samples, 0.03%; +0.03%)</title><rect x="28.6" y="389" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="31.58" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (2 samples, 0.06%; +0.03%)</title><rect x="107.7" y="1765" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="110.71" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (1 samples, 0.03%; 0.00%)</title><rect x="247.0" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="250.04" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="117" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.56" y="127.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (388 samples, 12.22%; -0.03%)</title><rect x="933.6" y="1845" width="144.2" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="936.64" y="1855.5" >cql3::statements::..</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;2ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.03" y="1423.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="143.0" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.01" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="60.5" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.53" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (3 samples, 0.09%; +0.03%)</title><rect x="139.7" y="1749" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="142.67" y="1759.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="869" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="879.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="120.3" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.35" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (3 samples, 0.09%; +0.03%)</title><rect x="138.6" y="1717" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="141.55" y="1727.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="158.2" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.24" y="1935.5" ></text>
</g>
<g >
<title>std::operator+ (3 samples, 0.09%; 0.00%)</title><rect x="132.2" y="1541" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.24" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; 0.00%)</title><rect x="974.9" y="1765" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="977.88" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (1 samples, 0.03%; 0.00%)</title><rect x="15.9" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.94" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (2 samples, 0.06%; +0.06%)</title><rect x="608.9" y="1797" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="611.92" y="1807.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; +0.13%)</title><rect x="1138.4" y="1909" width="2.2" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="1141.36" y="1919.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (1 samples, 0.03%; 0.00%)</title><rect x="608.5" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="611.55" y="1807.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (36 samples, 1.13%; -0.03%)</title><rect x="1160.3" y="2053" width="13.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1163.28" y="2063.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::parse_header (1 samples, 0.03%; +0.03%)</title><rect x="98.1" y="645" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="101.05" y="655.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="12.2" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="134.5" y="1653" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="137.46" y="1663.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="671.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.25%; +0.16%)</title><rect x="707.0" y="1909" width="3.0" height="15.0" fill="rgb(255,151,151)" rx="2" ry="2" />
<text  x="710.00" y="1919.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (2 samples, 0.06%; -0.03%)</title><rect x="104.0" y="1861" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="107.00" y="1871.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (1 samples, 0.03%; 0.00%)</title><rect x="177.2" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="180.19" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="271.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (1 samples, 0.03%; -0.03%)</title><rect x="76.9" y="421" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="79.88" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="74.6" y="149" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="77.65" y="159.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (1 samples, 0.03%; 0.00%)</title><rect x="718.1" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="721.15" y="1919.5" ></text>
</g>
<g >
<title>auth::resource::parent (2 samples, 0.06%; +0.06%)</title><rect x="111.4" y="1845" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="114.43" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="239.5" ></text>
</g>
<g >
<title>memtable::apply (15 samples, 0.47%; -0.06%)</title><rect x="1105.3" y="1797" width="5.6" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="1108.29" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="655.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="258.9" y="1861" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="261.93" y="1871.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::reset&lt;cql3_parser::CqlParser&gt; (2 samples, 0.06%; 0.00%)</title><rect x="20.4" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.40" y="479.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="901" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.40" y="911.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="757" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="767.5" ></text>
</g>
<g >
<title>[unknown] (398 samples, 12.53%; 0.00%)</title><rect x="10.7" y="2053" width="147.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.74" y="2063.5" >[unknown]</text>
</g>
<g >
<title>std::optional&lt;cql3::expr::expression&gt;::optional (1 samples, 0.03%; 0.00%)</title><rect x="143.0" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.01" y="1711.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (1 samples, 0.03%; +0.03%)</title><rect x="383.8" y="1749" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="386.77" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (14 samples, 0.44%; 0.00%)</title><rect x="12.2" y="485" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="495.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="901" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="911.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.19%; -0.19%)</title><rect x="462.5" y="1797" width="2.3" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="465.53" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.07" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="447.5" ></text>
</g>
<g >
<title>[unknown] (239 samples, 7.53%; 0.00%)</title><rect x="11.9" y="757" width="88.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="767.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="64.6" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.62" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (10 samples, 0.31%; 0.00%)</title><rect x="81.7" y="517" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.71" y="527.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="853" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="863.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.17" y="351.5" ></text>
</g>
<g >
<title>std::__distance&lt;char const*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="44.6" y="341" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="47.55" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (16 samples, 0.50%; 0.00%)</title><rect x="92.1" y="549" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.11" y="559.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; -0.03%)</title><rect x="946.6" y="1797" width="2.6" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="949.64" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; 0.00%)</title><rect x="13.3" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.91" y="447.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="1113.1" y="1765" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1116.09" y="1775.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (2 samples, 0.06%; 0.00%)</title><rect x="12.2" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="447.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.22%; 0.00%)</title><rect x="569.9" y="1797" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="572.91" y="1807.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate (3 samples, 0.09%; 0.00%)</title><rect x="863.8" y="1813" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="866.79" y="1823.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="66.1" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.10" y="335.5" ></text>
</g>
<g >
<title>std::__variant_cast&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="76.5" y="309" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="79.51" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="175.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; +0.03%)</title><rect x="50.5" y="293" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="53.50" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1 samples, 0.03%; +0.03%)</title><rect x="880.9" y="1845" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="883.88" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; -0.06%)</title><rect x="848.2" y="1877" width="0.4" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="851.19" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; +0.03%)</title><rect x="898.7" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="901.72" y="1759.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.03%; 0.00%)</title><rect x="116.6" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.63" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="118.5" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.49" y="1647.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="52.7" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.73" y="383.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (4 samples, 0.13%; 0.00%)</title><rect x="74.3" y="325" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.28" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (1 samples, 0.03%; 0.00%)</title><rect x="160.8" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="163.84" y="1951.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (11 samples, 0.35%; -0.03%)</title><rect x="527.2" y="1797" width="4.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="530.18" y="1807.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.73" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="136.0" y="1765" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.95" y="1775.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; 0.00%)</title><rect x="54.6" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.58" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::get_deleter (2 samples, 0.06%; 0.00%)</title><rect x="128.9" y="1685" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.89" y="1695.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="103.6" y="1877" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="106.63" y="1887.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="145.2" y="2005" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.24" y="2015.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="94.0" y="325" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="96.97" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.16%; +0.13%)</title><rect x="854.5" y="1925" width="1.9" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="857.50" y="1935.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (2 samples, 0.06%; +0.06%)</title><rect x="1055.9" y="1765" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="1058.88" y="1775.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; +0.06%)</title><rect x="166.8" y="1909" width="1.1" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="169.79" y="1919.5" ></text>
</g>
<g >
<title>table::set_hit_rate (6 samples, 0.19%; +0.03%)</title><rect x="745.3" y="1893" width="2.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="748.27" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="1158.0" y="1877" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1161.05" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1173" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1183.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (4 samples, 0.13%; 0.00%)</title><rect x="82.8" y="453" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.82" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_Deque_base (1 samples, 0.03%; 0.00%)</title><rect x="22.3" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.26" y="415.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (2 samples, 0.06%; 0.00%)</title><rect x="115.1" y="1909" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="118.14" y="1919.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (14 samples, 0.44%; +0.03%)</title><rect x="105.1" y="1829" width="5.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="108.11" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.03%)</title><rect x="512.3" y="1861" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="515.32" y="1871.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; 0.00%)</title><rect x="246.7" y="1829" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="249.67" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="15.9" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.94" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (4 samples, 0.13%; +0.06%)</title><rect x="1154.7" y="1925" width="1.5" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="1157.70" y="1935.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (229 samples, 7.21%; -0.09%)</title><rect x="766.4" y="1893" width="85.1" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="769.45" y="1903.5" >single_nod..</text>
</g>
<g >
<title>[unknown] (274 samples, 8.63%; 0.00%)</title><rect x="11.9" y="2021" width="101.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="2031.5" >[unknown]</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (2 samples, 0.06%; 0.00%)</title><rect x="136.0" y="1749" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.95" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="66.1" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.10" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="131.5" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.49" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="82.1" y="309" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="85.08" y="319.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.46" y="271.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="805.1" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="808.09" y="1823.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="136.3" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.32" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.03" y="1567.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; 0.00%)</title><rect x="307.2" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="310.23" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="158.2" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.24" y="1919.5" ></text>
</g>
<g >
<title>row::~row (19 samples, 0.60%; +0.09%)</title><rect x="435.8" y="1813" width="7.0" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="438.78" y="1823.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (3 samples, 0.09%; 0.00%)</title><rect x="124.1" y="1669" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1679.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; +0.03%)</title><rect x="51.6" y="357" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="54.61" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="415.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.03%; +0.03%)</title><rect x="1031.7" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1034.73" y="1743.5" ></text>
</g>
<g >
<title>database::find_schema (9 samples, 0.28%; -0.06%)</title><rect x="791.7" y="1845" width="3.4" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="794.71" y="1855.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; +0.03%)</title><rect x="933.3" y="1829" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="936.27" y="1839.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (1 samples, 0.03%; 0.00%)</title><rect x="652.4" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="655.39" y="1871.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt;, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; const, column_definition const*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.03%; +0.03%)</title><rect x="107.3" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="110.34" y="1727.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;std::optional&lt;auth::resource&gt;, service::client_state::check_has_permission (67 samples, 2.11%; -0.03%)</title><rect x="805.5" y="1813" width="24.9" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="808.46" y="1823.5" >s..</text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; +0.06%)</title><rect x="892.8" y="1749" width="2.2" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="895.77" y="1759.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (3 samples, 0.09%; -0.16%)</title><rect x="247.4" y="1861" width="1.1" height="15.0" fill="rgb(151,151,255)" rx="2" ry="2" />
<text  x="250.41" y="1871.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.03%; 0.00%)</title><rect x="1058.8" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1061.85" y="1743.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (3 samples, 0.09%; 0.00%)</title><rect x="1105.7" y="1781" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.66" y="1791.5" ></text>
</g>
<g >
<title>seastar::file_data_sink_impl::put (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (3 samples, 0.09%; +0.09%)</title><rect x="533.9" y="1813" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="536.87" y="1823.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="156.4" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.39" y="1935.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; -0.06%)</title><rect x="624.1" y="1781" width="0.8" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="627.15" y="1791.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; 0.00%)</title><rect x="821.8" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="824.81" y="1759.5" ></text>
</g>
<g >
<title>locator::everywhere_replication_strategy::calculate_natural_endpoints (1 samples, 0.03%; 0.00%)</title><rect x="158.2" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.24" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; 0.00%)</title><rect x="244.8" y="1845" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="247.81" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (3 samples, 0.09%; 0.00%)</title><rect x="137.4" y="1765" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.44" y="1775.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.33" y="303.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1957" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1967.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (5 samples, 0.16%; 0.00%)</title><rect x="33.4" y="341" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.41" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (10 samples, 0.31%; 0.00%)</title><rect x="124.1" y="1701" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1711.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (2 samples, 0.06%; +0.06%)</title><rect x="541.3" y="1829" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="544.30" y="1839.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (7 samples, 0.22%; 0.00%)</title><rect x="1116.1" y="1749" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1119.06" y="1759.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; +0.03%)</title><rect x="659.8" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="662.82" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (3 samples, 0.09%; 0.00%)</title><rect x="26.7" y="373" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.72" y="383.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (33 samples, 1.04%; 0.00%)</title><rect x="85.8" y="597" width="12.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.79" y="607.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.03" y="607.5" ></text>
</g>
<g >
<title>table::make_reader (261 samples, 8.22%; -0.16%)</title><rect x="553.2" y="1845" width="97.0" height="15.0" fill="rgb(151,151,255)" rx="2" ry="2" />
<text  x="556.19" y="1855.5" >table::make..</text>
</g>
<g >
<title>service::abstract_read_executor::execute (183 samples, 5.76%; +0.09%)</title><rect x="964.5" y="1781" width="68.0" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="967.48" y="1791.5" >service..</text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="13.3" y="261" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="271.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="142.3" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.27" y="1711.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.17" y="463.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.25%; +0.03%)</title><rect x="521.6" y="1813" width="3.0" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="524.61" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.13" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; 0.00%)</title><rect x="69.1" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.07" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::list_users_statement, std::default_delete&lt;cql3::statements::list_users_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::list_users_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="100.3" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.28" y="543.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.11" y="1823.5" ></text>
</g>
<g >
<title>schema::partition_key_size (1 samples, 0.03%; +0.03%)</title><rect x="109.6" y="1797" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="112.57" y="1807.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (2 samples, 0.06%; +0.03%)</title><rect x="464.8" y="1797" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="467.76" y="1807.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedState (4 samples, 0.13%; 0.00%)</title><rect x="21.1" y="453" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.15" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="607.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="65.0" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.99" y="271.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.03%)</title><rect x="569.2" y="1797" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="572.16" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.03%; +0.03%)</title><rect x="44.2" y="325" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="47.18" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; -0.03%)</title><rect x="131.5" y="1541" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="134.49" y="1551.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="858.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.59" y="1919.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (2 samples, 0.06%; 0.00%)</title><rect x="186.5" y="1845" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.48" y="1855.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (2 samples, 0.06%; +0.06%)</title><rect x="167.9" y="1909" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="170.90" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="15.9" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.94" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; +0.03%)</title><rect x="686.6" y="1861" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="689.57" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1503.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.96" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;unsigned long&gt;, sstables::sstable::update_info_for_opened_data (1 samples, 0.03%; 0.00%)</title><rect x="720.7" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.75" y="1935.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="619.3" y="1765" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="622.32" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="70.2" y="309" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.19" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.03%; +0.03%)</title><rect x="108.1" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="111.09" y="1759.5" ></text>
</g>
<g >
<title>seastar::reactor::syscall_pollfn::poll (2 samples, 0.06%; 0.00%)</title><rect x="1157.7" y="1925" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.68" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="72.4" y="261" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="75.42" y="271.5" ></text>
</g>
<g >
<title>cql3::query_options::~query_options (12 samples, 0.38%; +0.16%)</title><rect x="702.5" y="1909" width="4.5" height="15.0" fill="rgb(255,151,151)" rx="2" ry="2" />
<text  x="705.54" y="1919.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (1 samples, 0.03%; -0.03%)</title><rect x="851.2" y="1877" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="854.16" y="1887.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::pop (1 samples, 0.03%; 0.00%)</title><rect x="92.5" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.48" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="26.0" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="28.98" y="303.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::tuple (2 samples, 0.06%; 0.00%)</title><rect x="94.7" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.71" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="137.8" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.81" y="1647.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (1 samples, 0.03%; +0.03%)</title><rect x="311.7" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="314.69" y="1759.5" ></text>
</g>
<g >
<title>db::commitlog::segment::cycle (1 samples, 0.03%; 0.00%)</title><rect x="1111.6" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.61" y="1759.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="82.1" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.08" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="158.2" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.24" y="1903.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="65.7" y="325" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="68.73" y="335.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="789" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.40" y="799.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="139.3" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.29" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="56.4" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.44" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="255.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (10 samples, 0.31%; 0.00%)</title><rect x="81.7" y="565" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.71" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; +0.03%)</title><rect x="69.4" y="373" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="72.45" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; -0.06%)</title><rect x="798.0" y="1829" width="0.4" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="801.03" y="1839.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc (1 samples, 0.03%; 0.00%)</title><rect x="1108.6" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.63" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.96" y="287.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1781" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1791.5" >[unknown]</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::unique_ptr (2 samples, 0.06%; 0.00%)</title><rect x="94.7" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.71" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="64.6" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.62" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="26.0" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="28.98" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; +0.03%)</title><rect x="741.2" y="1893" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="744.18" y="1903.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (4 samples, 0.13%; 0.00%)</title><rect x="861.9" y="1797" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="864.93" y="1807.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (6 samples, 0.19%; 0.00%)</title><rect x="98.4" y="645" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="655.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (2 samples, 0.06%; +0.06%)</title><rect x="758.3" y="1893" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="761.27" y="1903.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="65.0" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.99" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (83 samples, 2.61%; +0.03%)</title><rect x="114.0" y="1989" width="30.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="117.03" y="1999.5" >se..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="53.1" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.10" y="367.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="861.2" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="864.19" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.09%)</title><rect x="608.5" y="1765" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="611.55" y="1775.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="944.4" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="947.41" y="1823.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (4 samples, 0.13%; 0.00%)</title><rect x="86.5" y="501" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.54" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (1 samples, 0.03%; +0.03%)</title><rect x="89.5" y="565" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="92.51" y="575.5" ></text>
</g>
<g >
<title>LZ4_compress_fast_extState (1 samples, 0.03%; +0.03%)</title><rect x="10.4" y="2053" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="13.37" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (1 samples, 0.03%; +0.03%)</title><rect x="215.1" y="1877" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="218.09" y="1887.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (50 samples, 1.57%; 0.00%)</title><rect x="516.4" y="1845" width="18.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="519.40" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;11ul, cql3::expr::untyped_constant&gt; (4 samples, 0.13%; 0.00%)</title><rect x="126.3" y="1653" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.29" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="673.6" y="1893" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="676.56" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; +0.03%)</title><rect x="183.9" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="186.88" y="1919.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.16%; -0.06%)</title><rect x="815.5" y="1765" width="1.8" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="818.49" y="1775.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (10 samples, 0.31%; 0.00%)</title><rect x="86.2" y="581" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.16" y="591.5" ></text>
</g>
<g >
<title>cdc::do_update_streams_description (1 samples, 0.03%; 0.00%)</title><rect x="179.8" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.79" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.85" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (2 samples, 0.06%; +0.03%)</title><rect x="740.4" y="1893" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="743.44" y="1903.5" ></text>
</g>
<g >
<title>query::querier&lt; (1 samples, 0.03%; 0.00%)</title><rect x="203.9" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="206.94" y="1903.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.16%; +0.16%)</title><rect x="836.7" y="1813" width="1.8" height="15.0" fill="rgb(255,151,151)" rx="2" ry="2" />
<text  x="839.67" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; 0.00%)</title><rect x="813.6" y="1749" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="816.63" y="1759.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%; +0.03%)</title><rect x="1092.7" y="1845" width="2.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1095.66" y="1855.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::detach_service_level_statement*, std::default_delete&lt;cql3::statements::detach_service_level_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="78.7" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.73" y="447.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (1 samples, 0.03%; +0.03%)</title><rect x="1111.2" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1114.23" y="1791.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; +0.03%)</title><rect x="82.8" y="309" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="85.82" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="70.6" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.56" y="271.5" ></text>
</g>
<g >
<title>boost::re_detail_107500::mem_block_cache::~mem_block_cache (1 samples, 0.03%; +0.03%)</title><rect x="11.9" y="37" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="14.86" y="47.5" ></text>
</g>
<g >
<title>database::find_column_family (4 samples, 0.13%; -0.06%)</title><rect x="1045.5" y="1765" width="1.5" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="1048.47" y="1775.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (10 samples, 0.31%; 0.00%)</title><rect x="81.7" y="677" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.71" y="687.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; +0.03%)</title><rect x="1075.6" y="1813" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1078.57" y="1823.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (1 samples, 0.03%; 0.00%)</title><rect x="976.7" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="979.74" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1647.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (55 samples, 1.73%; 0.00%)</title><rect x="27.8" y="405" width="20.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.83" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (3 samples, 0.09%; -0.06%)</title><rect x="724.5" y="1909" width="1.1" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="727.46" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.96" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (2 samples, 0.06%; -0.03%)</title><rect x="672.4" y="1909" width="0.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="675.45" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; -0.03%)</title><rect x="647.6" y="1781" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="650.56" y="1791.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (6 samples, 0.19%; +0.09%)</title><rect x="205.1" y="1877" width="2.2" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="208.06" y="1887.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (4 samples, 0.13%; +0.06%)</title><rect x="393.8" y="1749" width="1.5" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="396.80" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="830.0" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="832.98" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (1 samples, 0.03%; +0.03%)</title><rect x="815.1" y="1765" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="818.12" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="52.0" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.98" y="351.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.25%; 0.00%)</title><rect x="1052.9" y="1765" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1055.90" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="55.7" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.70" y="335.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="207.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.03%; 0.00%)</title><rect x="721.1" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="724.12" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="58.3" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.30" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (3 samples, 0.09%; -0.03%)</title><rect x="860.8" y="1813" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="863.82" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="121.1" y="1573" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.09" y="1583.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="59.8" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.79" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct_single&lt;std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; -0.03%)</title><rect x="124.8" y="1477" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="127.80" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (4 samples, 0.13%; 0.00%)</title><rect x="74.3" y="309" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.28" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (12 samples, 0.38%; +0.03%)</title><rect x="92.9" y="533" width="4.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="95.85" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="16.3" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.32" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.09" y="351.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; 0.00%)</title><rect x="113.7" y="2021" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.66" y="2031.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.06%)</title><rect x="202.8" y="1893" width="0.4" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="205.83" y="1903.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (116 samples, 3.65%; -0.09%)</title><rect x="795.4" y="1845" width="43.1" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="798.43" y="1855.5" >serv..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="52.0" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.98" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; +0.03%)</title><rect x="50.1" y="437" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="53.13" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="124.1" y="1621" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1631.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (1 samples, 0.03%; -0.03%)</title><rect x="107.3" y="1781" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="110.34" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="118.5" y="1669" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.49" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::alter_table_statement, std::default_delete&lt;cql3::statements::alter_table_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="78.4" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.36" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (34 samples, 1.07%; 0.00%)</title><rect x="85.4" y="677" width="12.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.42" y="687.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (3 samples, 0.09%; +0.03%)</title><rect x="406.4" y="1861" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="409.43" y="1871.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::set_value (1 samples, 0.03%; 0.00%)</title><rect x="16.3" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.32" y="399.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (1 samples, 0.03%; -0.03%)</title><rect x="1090.4" y="1829" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1093.43" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; 0.00%)</title><rect x="799.5" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="802.52" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (2 samples, 0.06%; +0.03%)</title><rect x="381.2" y="1733" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="384.16" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="79.5" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.48" y="479.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="66.8" y="325" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="69.85" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="120.7" y="1493" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="123.72" y="1503.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (1 samples, 0.03%; +0.03%)</title><rect x="180.2" y="1925" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="183.16" y="1935.5" ></text>
</g>
<g >
<title>seastar::posix_file_real_impl::write_dma (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1759.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (75 samples, 2.36%; 0.00%)</title><rect x="117.0" y="1829" width="27.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1839.5" >c..</text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.03%; 0.00%)</title><rect x="339.9" y="1717" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="342.92" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="53" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="63.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="56.4" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.44" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="142.3" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.27" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (1 samples, 0.03%; 0.00%)</title><rect x="374.8" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="377.85" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="629.0" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="631.98" y="1807.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="367.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="789" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="799.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.06%; +0.06%)</title><rect x="943.7" y="1813" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="946.67" y="1823.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (1 samples, 0.03%; +0.03%)</title><rect x="1111.6" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1114.61" y="1743.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="84.3" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="125.2" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.18" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1893" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1903.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="143.5" ></text>
</g>
<g >
<title>antlr3::RuleReturnValue&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::RuleReturnValue (1 samples, 0.03%; +0.03%)</title><rect x="61.6" y="437" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="64.64" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (3 samples, 0.09%; 0.00%)</title><rect x="124.1" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (2 samples, 0.06%; 0.00%)</title><rect x="73.2" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.16" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (27 samples, 0.85%; -0.03%)</title><rect x="1013.1" y="1669" width="10.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1016.15" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="677" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::list_users_statement, std::default_delete&lt;cql3::statements::list_users_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="100.3" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.28" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (11 samples, 0.35%; 0.00%)</title><rect x="13.0" y="453" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.97" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%; +0.03%)</title><rect x="50.9" y="469" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="53.87" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (5 samples, 0.16%; +0.13%)</title><rect x="575.1" y="1813" width="1.9" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="578.11" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="76.5" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.51" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.58" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="965" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="975.5" >[unknown]</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.09%; -0.03%)</title><rect x="665.8" y="1909" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="668.76" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.06%; +0.06%)</title><rect x="379.3" y="1733" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="382.31" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="693" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.40" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;5ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="124.1" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1407.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1551.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (6 samples, 0.19%; 0.00%)</title><rect x="86.5" y="533" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.54" y="543.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (3 samples, 0.09%; +0.06%)</title><rect x="909.9" y="1797" width="1.1" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="912.86" y="1807.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="53.1" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.10" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="16.7" y="373" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="19.69" y="383.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; -0.03%)</title><rect x="648.3" y="1797" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="651.30" y="1807.5" ></text>
</g>
<g >
<title>service::storage_service::replicate_to_all_cores (1 samples, 0.03%; 0.00%)</title><rect x="158.2" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.24" y="1855.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.06%)</title><rect x="637.9" y="1813" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="640.90" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; +0.03%)</title><rect x="54.2" y="453" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="57.21" y="463.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1125" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1135.5" >[unknown]</text>
</g>
<g >
<title>cql3::query_processor::execute_direct (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="661" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="671.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (1 samples, 0.03%; 0.00%)</title><rect x="725.2" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="728.21" y="1903.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (68 samples, 2.14%; -0.31%)</title><rect x="675.4" y="1925" width="25.3" height="15.0" fill="rgb(93,93,255)" rx="2" ry="2" />
<text  x="678.42" y="1935.5" >s..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (1 samples, 0.03%; +0.03%)</title><rect x="549.5" y="1829" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="552.47" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (7 samples, 0.22%; 0.00%)</title><rect x="73.9" y="389" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.90" y="399.5" ></text>
</g>
<g >
<title>database::apply (1 samples, 0.03%; 0.00%)</title><rect x="1117.6" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1120.55" y="1679.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="789" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="799.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.57" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (3 samples, 0.09%; +0.03%)</title><rect x="33.8" y="309" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="36.78" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (2 samples, 0.06%; -0.06%)</title><rect x="671.7" y="1909" width="0.7" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="674.71" y="1919.5" ></text>
</g>
<g >
<title>seastar::async&lt;sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.03%; 0.00%)</title><rect x="156.4" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.39" y="1951.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (13 samples, 0.41%; 0.00%)</title><rect x="130.0" y="1717" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.01" y="1727.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="141.9" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.90" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::stats (1 samples, 0.03%; +0.03%)</title><rect x="397.1" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="400.14" y="1791.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="99.9" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.91" y="415.5" ></text>
</g>
<g >
<title>create_partitions (29 samples, 0.91%; 0.00%)</title><rect x="102.9" y="1925" width="10.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.88" y="1935.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (1 samples, 0.03%; +0.03%)</title><rect x="159.7" y="1941" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="162.73" y="1951.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.13%; +0.03%)</title><rect x="1011.7" y="1653" width="1.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1014.66" y="1663.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (1 samples, 0.03%; 0.00%)</title><rect x="142.3" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.27" y="1727.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.17" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%; +0.06%)</title><rect x="735.2" y="1909" width="1.2" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="738.24" y="1919.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1535.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (1 samples, 0.03%; +0.03%)</title><rect x="924.0" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="926.98" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="12.6" y="277" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="15.60" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="66.1" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.10" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;1ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.03" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1493" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1503.5" >[unknown]</text>
</g>
<g >
<title>partition_entry::partition_entry (1 samples, 0.03%; 0.00%)</title><rect x="1106.4" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1109.40" y="1743.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.09%; -0.09%)</title><rect x="732.6" y="1909" width="1.2" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="735.64" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.09" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="172.4" y="1877" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="175.36" y="1887.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (2 samples, 0.06%; 0.00%)</title><rect x="1114.9" y="1669" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1117.95" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="997" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1007.5" >[unknown]</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="415.5" ></text>
</g>
<g >
<title>database::has_keyspace (3 samples, 0.09%; +0.03%)</title><rect x="835.6" y="1813" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="838.55" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1621" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1631.5" >[unknown]</text>
</g>
<g >
<title>create_partitions (7 samples, 0.22%; 0.00%)</title><rect x="98.1" y="661" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.05" y="671.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (9 samples, 0.28%; +0.22%)</title><rect x="600.4" y="1781" width="3.3" height="15.0" fill="rgb(255,128,128)" rx="2" ry="2" />
<text  x="603.37" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (6 samples, 0.19%; 0.00%)</title><rect x="98.4" y="565" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="575.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (7 samples, 0.22%; +0.03%)</title><rect x="1100.1" y="1829" width="2.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1103.09" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.58" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (153 samples, 4.82%; +0.06%)</title><rect x="23.0" y="501" width="56.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="26.00" y="511.5" >cql3_p..</text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="725" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.40" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.03%; 0.00%)</title><rect x="98.4" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="15.9" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.94" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="84.7" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.68" y="383.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (3 samples, 0.09%; +0.06%)</title><rect x="784.7" y="1813" width="1.1" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="787.65" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (1 samples, 0.03%; +0.03%)</title><rect x="899.1" y="1765" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="902.09" y="1775.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.03%; +0.03%)</title><rect x="49.8" y="485" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="52.75" y="495.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.13" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; 0.00%)</title><rect x="241.1" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="244.10" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; 0.00%)</title><rect x="197.3" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="200.25" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="84.3" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (3 samples, 0.09%; -0.03%)</title><rect x="723.4" y="1909" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="726.35" y="1919.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.97" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (9 samples, 0.28%; 0.00%)</title><rect x="82.1" y="501" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.08" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.16%; 0.00%)</title><rect x="130.4" y="1621" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.38" y="1631.5" ></text>
</g>
<g >
<title>tolower (1 samples, 0.03%; -0.03%)</title><rect x="53.8" y="421" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="56.84" y="431.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (1 samples, 0.03%; +0.03%)</title><rect x="216.2" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="219.20" y="1903.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.82" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1695.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.44%; 0.00%)</title><rect x="12.2" y="645" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="655.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (12 samples, 0.38%; -0.03%)</title><rect x="370.4" y="1637" width="4.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="373.39" y="1647.5" ></text>
</g>
<g >
<title>freeze (3 samples, 0.09%; 0.00%)</title><rect x="1113.5" y="1685" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.46" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (10 samples, 0.31%; -0.09%)</title><rect x="69.4" y="389" width="3.8" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="72.45" y="399.5" ></text>
</g>
<g >
<title>mutation::set_cell (1 samples, 0.03%; 0.00%)</title><rect x="179.8" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.79" y="1887.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_new_partition (1 samples, 0.03%; +0.03%)</title><rect x="116.3" y="1957" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="119.26" y="1967.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="57.6" y="341" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.56" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="60.9" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.90" y="303.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (2 samples, 0.06%; +0.03%)</title><rect x="515.7" y="1845" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="518.66" y="1855.5" ></text>
</g>
<g >
<title>auth::resource::parent (1 samples, 0.03%; -0.13%)</title><rect x="804.7" y="1813" width="0.4" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="807.72" y="1823.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_mbegin (1 samples, 0.03%; +0.03%)</title><rect x="49.0" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="52.01" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (10 samples, 0.31%; 0.00%)</title><rect x="81.7" y="549" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.71" y="559.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::single_column_relation, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="143.0" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.01" y="1775.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (16 samples, 0.50%; 0.00%)</title><rect x="859.0" y="1893" width="5.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.96" y="1903.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (4 samples, 0.13%; 0.00%)</title><rect x="849.7" y="1877" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="852.67" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; +0.03%)</title><rect x="630.5" y="1813" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="633.47" y="1823.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="869" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="879.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="70.2" y="277" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="73.19" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="62.0" y="293" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="303.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="121.1" y="1509" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.09" y="1519.5" ></text>
</g>
<g >
<title>abstract_type::deserialize_impl&lt;basic_single_fragmented_view&lt; (1 samples, 0.03%; 0.00%)</title><rect x="186.9" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.85" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%; +0.03%)</title><rect x="101.4" y="661" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="104.40" y="671.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (253 samples, 7.97%; -0.03%)</title><rect x="757.5" y="1909" width="94.0" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="760.53" y="1919.5" >single_node..</text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; -0.06%)</title><rect x="316.9" y="1733" width="0.7" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="319.89" y="1743.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; -0.09%)</title><rect x="719.3" y="1909" width="0.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="722.26" y="1919.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; +0.03%)</title><rect x="53.1" y="277" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="56.10" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="367.5" ></text>
</g>
<g >
<title>partition_entry::evict (1 samples, 0.03%; 0.00%)</title><rect x="145.2" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.24" y="1967.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (4 samples, 0.13%; +0.03%)</title><rect x="1114.6" y="1685" width="1.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1117.58" y="1695.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;cql3::expr::expression::impl&gt;&gt; (1 samples, 0.03%; +0.03%)</title><rect x="128.9" y="1653" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="131.89" y="1663.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="837" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.40" y="847.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (1 samples, 0.03%; +0.03%)</title><rect x="685.1" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="688.08" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="16.3" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.32" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::_M_lower_bound (1 samples, 0.03%; +0.03%)</title><rect x="48.6" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="51.64" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (25 samples, 0.79%; 0.00%)</title><rect x="135.6" y="1781" width="9.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.58" y="1791.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (3 samples, 0.09%; +0.03%)</title><rect x="830.7" y="1829" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="833.72" y="1839.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="52.0" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.98" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1551.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.17" y="415.5" ></text>
</g>
<g >
<title>perf_simple_que (3,176 samples, 100.00%; 0.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >perf_simple_que</text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (1 samples, 0.03%; 0.00%)</title><rect x="343.6" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="346.64" y="1711.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (31 samples, 0.98%; -0.09%)</title><rect x="166.4" y="1925" width="11.5" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="169.42" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (5 samples, 0.16%; 0.00%)</title><rect x="130.4" y="1605" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.38" y="1615.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="56.8" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.81" y="303.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.47%; -0.06%)</title><rect x="408.7" y="1861" width="5.5" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="411.66" y="1871.5" ></text>
</g>
<g >
<title>cql3::cf_name::set_column_family (1 samples, 0.03%; 0.00%)</title><rect x="53.8" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.84" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::conjunction, false&gt;::_Uninitialized&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.4" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.41" y="1567.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="13.0" y="245" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="15.97" y="255.5" ></text>
</g>
<g >
<title>[unknown] (241 samples, 7.59%; 0.00%)</title><rect x="11.9" y="821" width="89.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="831.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="62.0" y="197" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="207.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple (1 samples, 0.03%; +0.03%)</title><rect x="16.3" y="309" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="19.32" y="319.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (1 samples, 0.03%; +0.03%)</title><rect x="513.4" y="1861" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="516.43" y="1871.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.03%; +0.03%)</title><rect x="121.5" y="1381" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="124.46" y="1391.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="725" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="735.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::~CqlParser (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="623.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; 0.00%)</title><rect x="98.8" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.80" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (2 samples, 0.06%; 0.00%)</title><rect x="121.5" y="1413" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.46" y="1423.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="109.9" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="112.94" y="1823.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="718.5" y="1909" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="721.52" y="1919.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="688.8" y="1877" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="691.80" y="1887.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (44 samples, 1.39%; 0.00%)</title><rect x="1059.2" y="1733" width="16.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1062.22" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (2 samples, 0.06%; 0.00%)</title><rect x="126.7" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.66" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.58" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="133.7" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.72" y="1567.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="133.7" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.72" y="1551.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (3 samples, 0.09%; +0.03%)</title><rect x="975.6" y="1765" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="978.62" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="15.9" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.94" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (14 samples, 0.44%; 0.00%)</title><rect x="1113.5" y="1765" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.46" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="132.2" y="1605" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.24" y="1615.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; +0.03%)</title><rect x="604.1" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="607.09" y="1823.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="118.5" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.49" y="1599.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="124.1" y="1349" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="127.06" y="1359.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="64.6" y="293" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.62" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.13" y="239.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (6 samples, 0.19%; +0.09%)</title><rect x="841.1" y="1845" width="2.3" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="844.13" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (2 samples, 0.06%; +0.03%)</title><rect x="117.0" y="1701" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="120.00" y="1711.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (2 samples, 0.06%; +0.03%)</title><rect x="381.9" y="1733" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="384.91" y="1743.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="141.5" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.52" y="1711.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="16.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.69" y="399.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="196.5" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="199.51" y="1919.5" ></text>
</g>
<g >
<title>database::do_apply (20 samples, 0.63%; +0.06%)</title><rect x="1104.5" y="1861" width="7.5" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="1107.55" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1477" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1487.5" >[unknown]</text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.35%; +0.16%)</title><rect x="251.5" y="1861" width="4.1" height="15.0" fill="rgb(255,151,151)" rx="2" ry="2" />
<text  x="254.50" y="1871.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (1 samples, 0.03%; 0.00%)</title><rect x="743.4" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="746.41" y="1903.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (5 samples, 0.16%; 0.00%)</title><rect x="82.4" y="485" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.45" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (4 samples, 0.13%; 0.00%)</title><rect x="60.2" y="437" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.16" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (26 samples, 0.82%; +0.03%)</title><rect x="890.5" y="1797" width="9.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="893.54" y="1807.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (1 samples, 0.03%; +0.03%)</title><rect x="1115.3" y="1637" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1118.32" y="1647.5" ></text>
</g>
<g >
<title>seastar::logger::do_log (1 samples, 0.03%; 0.00%)</title><rect x="185.0" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.99" y="1887.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="108.5" y="1669" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="111.46" y="1679.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (1 samples, 0.03%; 0.00%)</title><rect x="98.4" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.73" y="367.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="156.4" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.39" y="1903.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.19%; +0.13%)</title><rect x="401.2" y="1813" width="2.3" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="404.23" y="1823.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="128.1" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="131.15" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="756.8" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="759.79" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;7ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="124.1" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1439.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; +0.03%)</title><rect x="1103.8" y="1861" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1106.80" y="1871.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="59.8" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.79" y="319.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get_recognizer (1 samples, 0.03%; +0.03%)</title><rect x="68.3" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="71.33" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::allocate (1 samples, 0.03%; 0.00%)</title><rect x="143.8" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.75" y="1727.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="627.1" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="630.12" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="73.2" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.16" y="351.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.45" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getText[abi:cxx11] (1 samples, 0.03%; 0.00%)</title><rect x="55.0" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.96" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="156.4" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.39" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.13" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; 0.00%)</title><rect x="755.7" y="1877" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="758.67" y="1887.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (13 samples, 0.41%; 0.00%)</title><rect x="312.1" y="1749" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="315.06" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="367.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="652.8" y="1861" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="655.76" y="1871.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (55 samples, 1.73%; 0.00%)</title><rect x="27.8" y="421" width="20.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.83" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="523.8" y="1797" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="526.84" y="1807.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (2 samples, 0.06%; +0.03%)</title><rect x="1024.7" y="1685" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1027.67" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="733.4" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="736.38" y="1903.5" ></text>
</g>
<g >
<title>seastar::file_data_sink_impl::put (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1855.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (1 samples, 0.03%; 0.00%)</title><rect x="720.4" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.38" y="1935.5" ></text>
</g>
<g >
<title>service::write_response_handler::write_response_handler (1 samples, 0.03%; +0.03%)</title><rect x="1115.7" y="1653" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1118.69" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.47%; 0.00%)</title><rect x="11.9" y="693" width="5.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="703.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%; +0.03%)</title><rect x="488.5" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="491.54" y="1823.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.03%; -0.03%)</title><rect x="255.6" y="1877" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="258.59" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.06%)</title><rect x="765.7" y="1861" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="768.71" y="1871.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (5 samples, 0.16%; 0.00%)</title><rect x="130.4" y="1653" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.38" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1605" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1615.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (1 samples, 0.03%; -0.03%)</title><rect x="899.8" y="1781" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="902.83" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;4ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.03" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; -0.03%)</title><rect x="918.0" y="1813" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="921.04" y="1823.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_allocate (1 samples, 0.03%; 0.00%)</title><rect x="143.8" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.75" y="1743.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (2 samples, 0.06%; -0.03%)</title><rect x="66.8" y="421" width="0.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="69.85" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="50.5" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.50" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (268 samples, 8.44%; +0.03%)</title><rect x="550.6" y="1861" width="99.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="553.59" y="1871.5" >std::_Functi..</text>
</g>
<g >
<title>seastar::thread_context::thread_context (1 samples, 0.03%; 0.00%)</title><rect x="158.2" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.24" y="1951.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.46" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.09%; +0.06%)</title><rect x="1143.9" y="1909" width="1.1" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="1146.93" y="1919.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="121.1" y="1541" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.09" y="1551.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="13.3" y="277" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="287.5" ></text>
</g>
<g >
<title>deletable_row::apply_monotonically (1 samples, 0.03%; 0.00%)</title><rect x="116.6" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="119.63" y="1967.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (147 samples, 4.63%; +0.13%)</title><rect x="977.5" y="1765" width="54.6" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="980.48" y="1775.5" >servi..</text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="118.9" y="1525" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="121.86" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.0" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.03" y="623.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.58" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (2 samples, 0.06%; +0.06%)</title><rect x="620.1" y="1765" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="623.06" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (25 samples, 0.79%; +0.03%)</title><rect x="67.6" y="421" width="9.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="70.59" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;10ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.03" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1013" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1023.5" >[unknown]</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reallocate_map (1 samples, 0.03%; 0.00%)</title><rect x="27.5" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.46" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="127.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.4" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.41" y="1695.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 1.39%; 0.00%)</title><rect x="1173.7" y="2053" width="16.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1176.65" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.06%; 0.00%)</title><rect x="44.2" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.18" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (1 samples, 0.03%; +0.03%)</title><rect x="843.4" y="1861" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="846.36" y="1871.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::partition_snapshot_flat_reader&lt;schema const&amp;, flush_memory_accounter&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="114.4" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.40" y="1951.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (1 samples, 0.03%; +0.03%)</title><rect x="724.8" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="727.84" y="1903.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (4 samples, 0.13%; +0.13%)</title><rect x="752.3" y="1909" width="1.5" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="755.33" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1157" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1167.5" >[unknown]</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.57" y="319.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.09%; 0.00%)</title><rect x="338.8" y="1717" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="341.81" y="1727.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="771.6" y="1877" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="774.65" y="1887.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (1 samples, 0.03%; +0.03%)</title><rect x="1157.7" y="1909" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1160.68" y="1919.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="53.5" y="245" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="56.47" y="255.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.03%; +0.03%)</title><rect x="1106.4" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1109.40" y="1711.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%; +0.03%)</title><rect x="863.4" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="866.42" y="1791.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.97" y="399.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="645" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="655.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; +0.03%)</title><rect x="121.1" y="1493" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="124.09" y="1503.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.96" y="415.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="110.3" y="1829" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="113.31" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="52.0" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.98" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (1 samples, 0.03%; 0.00%)</title><rect x="145.2" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.24" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="136.0" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.95" y="1711.5" ></text>
</g>
<g >
<title>checked_file_impl::list_directory (1 samples, 0.03%; 0.00%)</title><rect x="721.1" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="724.12" y="1887.5" ></text>
</g>
<g >
<title>schema::get_column_definition (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.11" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; -0.03%)</title><rect x="331.4" y="1717" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="334.38" y="1727.5" ></text>
</g>
<g >
<title>seastar::file::list_directory (1 samples, 0.03%; 0.00%)</title><rect x="721.1" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="724.12" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="63.9" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.87" y="431.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="94.0" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.97" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (8 samples, 0.25%; +0.03%)</title><rect x="120.0" y="1685" width="2.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="122.97" y="1695.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (5 samples, 0.16%; 0.00%)</title><rect x="130.4" y="1637" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.38" y="1647.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_7cabed9ebfe4f22a70f01ba2653108c0ad10a7d1] (1 samples, 0.03%; +0.03%)</title><rect x="27.8" y="389" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="30.83" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::expr::expression&gt;::new_allocator (1 samples, 0.03%; +0.03%)</title><rect x="15.2" y="69" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="18.20" y="79.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (1 samples, 0.03%; -0.03%)</title><rect x="720.4" y="1893" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="723.38" y="1903.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1509" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; +0.03%)</title><rect x="1054.8" y="1733" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1057.76" y="1743.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="56.8" y="229" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="59.81" y="239.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::operation::raw_update*, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::_Tuple_impl (1 samples, 0.03%; +0.03%)</title><rect x="15.6" y="261" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="18.57" y="271.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (1 samples, 0.03%; +0.03%)</title><rect x="740.1" y="1893" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="743.07" y="1903.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (4 samples, 0.13%; 0.00%)</title><rect x="784.3" y="1829" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="787.28" y="1839.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (6 samples, 0.19%; 0.00%)</title><rect x="62.0" y="437" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="74.6" y="181" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.65" y="191.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (3 samples, 0.09%; -0.03%)</title><rect x="604.5" y="1813" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="607.46" y="1823.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="51.6" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.61" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="140.8" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.78" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="27.1" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.09" y="271.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="1158.0" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.05" y="1903.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (24 samples, 0.76%; +0.19%)</title><rect x="480.0" y="1829" width="8.9" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="482.99" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; -0.13%)</title><rect x="843.7" y="1845" width="1.1" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="846.73" y="1855.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (15 samples, 0.47%; 0.00%)</title><rect x="1113.1" y="1781" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.09" y="1791.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="940.0" y="1829" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="942.96" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1285" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1295.5" >[unknown]</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (3 samples, 0.09%; 0.00%)</title><rect x="138.6" y="1749" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.55" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; +0.03%)</title><rect x="619.3" y="1749" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="622.32" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="56.1" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.07" y="255.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="142.6" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.64" y="1695.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="805" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="815.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; +0.03%)</title><rect x="92.1" y="485" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="95.11" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="64.6" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.62" y="351.5" ></text>
</g>
<g >
<title>mutation_partition::~mutation_partition (1 samples, 0.03%; 0.00%)</title><rect x="1112.7" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1115.72" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="949.2" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="952.24" y="1807.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="82.1" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.08" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.58" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (3 samples, 0.09%; 0.00%)</title><rect x="138.6" y="1765" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.55" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="50.5" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.50" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.33" y="383.5" ></text>
</g>
<g >
<title>sstables::sstable::write_statistics (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1935.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="17.1" y="117" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="20.06" y="127.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (5 samples, 0.16%; +0.06%)</title><rect x="615.2" y="1781" width="1.9" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="618.23" y="1791.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (4 samples, 0.13%; 0.00%)</title><rect x="71.3" y="357" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.30" y="367.5" ></text>
</g>
<g >
<title>partition_entry::apply_to_incomplete (1 samples, 0.03%; +0.03%)</title><rect x="155.6" y="1989" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="158.64" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="671.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="158.2" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.24" y="1999.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::reset (2 samples, 0.06%; 0.00%)</title><rect x="20.4" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.40" y="495.5" ></text>
</g>
<g >
<title>seastar::posix_file_impl::list_directory (1 samples, 0.03%; 0.00%)</title><rect x="854.1" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="857.13" y="1919.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (15 samples, 0.47%; +0.09%)</title><rect x="256.0" y="1877" width="5.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="258.96" y="1887.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;cql3::expr::expression*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="117.4" y="1669" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="120.37" y="1679.5" ></text>
</g>
<g >
<title>locator::calculate_effective_replication_map (1 samples, 0.03%; 0.00%)</title><rect x="187.6" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="190.59" y="1935.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.13%; +0.06%)</title><rect x="1021.0" y="1653" width="1.4" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="1023.95" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; +0.03%)</title><rect x="1089.3" y="1781" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1092.31" y="1791.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (6 samples, 0.19%; +0.13%)</title><rect x="838.5" y="1845" width="2.3" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="841.53" y="1855.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (26 samples, 0.82%; +0.09%)</title><rect x="922.5" y="1829" width="9.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="925.49" y="1839.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; +0.06%)</title><rect x="1093.8" y="1813" width="1.5" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="1096.77" y="1823.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="885" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="895.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_7cabed9ebfe4f22a70f01ba2653108c0ad10a7d1] (1 samples, 0.03%; +0.03%)</title><rect x="25.2" y="309" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="28.23" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Uninitialized&lt;cql3::expr::untyped_constant, false&gt;::_Uninitialized&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1365" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.03" y="1375.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (5 samples, 0.16%; 0.00%)</title><rect x="120.3" y="1653" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.35" y="1663.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (11 samples, 0.35%; +0.16%)</title><rect x="617.1" y="1781" width="4.1" height="15.0" fill="rgb(255,151,151)" rx="2" ry="2" />
<text  x="620.09" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (49 samples, 1.54%; 0.00%)</title><rect x="117.0" y="1765" width="18.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1381" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1391.5" >[unknown]</text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; +0.03%)</title><rect x="712.9" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="715.95" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="118.5" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.49" y="1663.5" ></text>
</g>
<g >
<title>std::copy&lt;char const*, char*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="138.2" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="141.18" y="1727.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="94.0" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.97" y="367.5" ></text>
</g>
<g >
<title>row::append_cell (3 samples, 0.09%; +0.03%)</title><rect x="1107.9" y="1765" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1110.89" y="1775.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.17" y="479.5" ></text>
</g>
<g >
<title>table::query (1,185 samples, 37.31%; +0.47%)</title><rect x="217.7" y="1893" width="440.3" height="15.0" fill="rgb(255,35,35)" rx="2" ry="2" />
<text  x="220.69" y="1903.5" >table::query</text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="1117.6" y="1653" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1120.55" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="542.8" y="1829" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="545.78" y="1839.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.96" y="303.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (1 samples, 0.03%; +0.03%)</title><rect x="804.3" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="807.35" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="89.1" y="501" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="92.14" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.16%; 0.00%)</title><rect x="24.9" y="373" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.86" y="383.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1701" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1711.5" >[unknown]</text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (5 samples, 0.16%; +0.09%)</title><rect x="1136.5" y="1909" width="1.9" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1139.50" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1631.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (70 samples, 2.20%; 0.00%)</title><rect x="23.7" y="469" width="26.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.75" y="479.5" >a..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; +0.03%)</title><rect x="142.3" y="1589" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="145.27" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.4" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.41" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="84.3" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (134 samples, 4.22%; +0.03%)</title><rect x="791.0" y="1861" width="49.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="793.97" y="1871.5" >cql3:..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="136.3" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.32" y="1647.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (2 samples, 0.06%; +0.06%)</title><rect x="131.5" y="1477" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="134.49" y="1487.5" ></text>
</g>
<g >
<title>__libc_start_main (2,691 samples, 84.73%; 0.00%)</title><rect x="158.6" y="2053" width="999.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.61" y="2063.5" >__libc_start_main</text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (62 samples, 1.95%; 0.00%)</title><rect x="54.2" y="469" width="23.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="57.21" y="479.5" >c..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (1 samples, 0.03%; 0.00%)</title><rect x="108.5" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.46" y="1791.5" ></text>
</g>
<g >
<title>seastar::do_with&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (229 samples, 7.21%; -0.57%)</title><rect x="424.3" y="1845" width="85.0" height="15.0" fill="rgb(0,0,255)" rx="2" ry="2" />
<text  x="427.26" y="1855.5" >seastar::d..</text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="122.2" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.20" y="1647.5" ></text>
</g>
<g >
<title>auth::get_permissions (54 samples, 1.70%; +0.06%)</title><rect x="806.9" y="1797" width="20.1" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="809.95" y="1807.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (38 samples, 1.20%; -0.03%)</title><rect x="680.3" y="1909" width="14.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="683.25" y="1919.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_7cabed9ebfe4f22a70f01ba2653108c0ad10a7d1] (1 samples, 0.03%; +0.03%)</title><rect x="782.8" y="1829" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="785.80" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="223.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.03%; 0.00%)</title><rect x="87.7" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="90.65" y="447.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="51.6" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.61" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="215.5" y="1877" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="218.46" y="1887.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.03%; 0.00%)</title><rect x="26.3" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.35" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.96" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="114.8" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.77" y="1919.5" ></text>
</g>
<g >
<title>seastar::with_file_close_on_failure&lt;sstables::sstable::new_sstable_component_file (2 samples, 0.06%; 0.00%)</title><rect x="660.2" y="1909" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="663.19" y="1919.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="974.5" y="1765" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="977.51" y="1775.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; +0.03%)</title><rect x="723.0" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="725.98" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.58" y="1551.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (4 samples, 0.13%; +0.13%)</title><rect x="741.9" y="1893" width="1.5" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="744.93" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1909" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1919.5" >[unknown]</text>
</g>
<g >
<title>sstables::compaction::setup&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.03%; 0.00%)</title><rect x="156.4" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.39" y="1983.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.31%; +0.03%)</title><rect x="546.1" y="1845" width="3.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="549.13" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.09%)</title><rect x="689.9" y="1877" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="692.91" y="1887.5" ></text>
</g>
<g >
<title>reader_permit::consume (1 samples, 0.03%; -0.03%)</title><rect x="625.3" y="1797" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="628.26" y="1807.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%; +0.03%)</title><rect x="898.0" y="1717" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="900.97" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="575.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="63.1" y="229" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.13" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="59.8" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.79" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="56.4" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.44" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::_M_max_size (1 samples, 0.03%; +0.03%)</title><rect x="21.9" y="341" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="24.89" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="140.0" y="1733" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.04" y="1743.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (46 samples, 1.45%; 0.00%)</title><rect x="1058.5" y="1749" width="17.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1061.48" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="133.4" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.35" y="1567.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (6 samples, 0.19%; +0.03%)</title><rect x="643.1" y="1797" width="2.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="646.10" y="1807.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (1 samples, 0.03%; 0.00%)</title><rect x="1023.2" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1026.18" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; +0.03%)</title><rect x="128.5" y="1637" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="131.52" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (3 samples, 0.09%; +0.09%)</title><rect x="1028.0" y="1701" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1031.01" y="1711.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (2 samples, 0.06%; +0.06%)</title><rect x="395.3" y="1765" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="398.28" y="1775.5" ></text>
</g>
<g >
<title>ser::row_view::columns (1 samples, 0.03%; 0.00%)</title><rect x="1110.5" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.49" y="1791.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.96" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="52.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.73" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="118.5" y="1685" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.49" y="1695.5" ></text>
</g>
<g >
<title>row::apply_monotonically (1 samples, 0.03%; +0.03%)</title><rect x="157.1" y="1941" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="160.13" y="1951.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="101" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (1 samples, 0.03%; 0.00%)</title><rect x="175.3" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="178.33" y="1871.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (5 samples, 0.16%; 0.00%)</title><rect x="62.0" y="389" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="159.5" ></text>
</g>
<g >
<title>db::get_cdc_streams_descriptions_v2_mutation (1 samples, 0.03%; 0.00%)</title><rect x="179.8" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="182.79" y="1903.5" ></text>
</g>
<g >
<title>schema::partition_key_size (2 samples, 0.06%; +0.03%)</title><rect x="1098.2" y="1845" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1101.23" y="1855.5" ></text>
</g>
<g >
<title>seastar::file_impl::write_dma (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1807.5" ></text>
</g>
<g >
<title>query::result_set_builder::deserialize (1 samples, 0.03%; 0.00%)</title><rect x="186.9" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.85" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="92.1" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.11" y="527.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (2 samples, 0.06%; -0.03%)</title><rect x="422.8" y="1845" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="425.78" y="1855.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="94.0" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.97" y="431.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (1 samples, 0.03%; +0.03%)</title><rect x="88.0" y="485" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="91.02" y="495.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="53.5" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.47" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="52.0" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.98" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.13" y="271.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (10 samples, 0.31%; 0.00%)</title><rect x="81.7" y="613" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.71" y="623.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPush (1 samples, 0.03%; 0.00%)</title><rect x="136.7" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.69" y="1775.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (75 samples, 2.36%; 0.00%)</title><rect x="117.0" y="1893" width="27.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1903.5" >c..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.01" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="56.4" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.44" y="399.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (10 samples, 0.31%; 0.00%)</title><rect x="81.7" y="597" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.71" y="607.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::stop (1 samples, 0.03%; +0.03%)</title><rect x="156.4" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="159.39" y="1791.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.45" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (27 samples, 0.85%; +0.13%)</title><rect x="497.8" y="1797" width="10.1" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="500.83" y="1807.5" ></text>
</g>
<g >
<title>service::storage_service::join_token_ring (1 samples, 0.03%; 0.00%)</title><rect x="158.2" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.24" y="1887.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (2 samples, 0.06%; +0.03%)</title><rect x="1107.1" y="1749" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1110.15" y="1759.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="56.1" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.07" y="303.5" ></text>
</g>
<g >
<title>cql3::column_identifier_raw::prepare_column_identifier (1 samples, 0.03%; +0.03%)</title><rect x="86.2" y="533" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="89.16" y="543.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="177.6" y="1893" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="180.56" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.03%)</title><rect x="526.4" y="1781" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="529.44" y="1791.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.03%; +0.03%)</title><rect x="863.8" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="866.79" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (1 samples, 0.03%; +0.03%)</title><rect x="624.9" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="627.89" y="1807.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (1 samples, 0.03%; 0.00%)</title><rect x="98.4" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="495.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (6 samples, 0.19%; 0.00%)</title><rect x="98.4" y="613" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="125.9" y="1653" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="128.92" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (8 samples, 0.25%; 0.00%)</title><rect x="73.9" y="405" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.90" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="120.7" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.72" y="1551.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; +0.06%)</title><rect x="812.9" y="1765" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="815.89" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="693" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; 0.00%)</title><rect x="83.9" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.94" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (74 samples, 2.33%; -0.06%)</title><rect x="1002.0" y="1717" width="27.5" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="1005.00" y="1727.5" >s..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="60.9" y="245" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.90" y="255.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="15.9" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.94" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; 0.00%)</title><rect x="33.4" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.41" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (4 samples, 0.13%; +0.06%)</title><rect x="172.7" y="1893" width="1.5" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="175.73" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; +0.03%)</title><rect x="71.3" y="341" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="74.30" y="351.5" ></text>
</g>
<g >
<title>checked_file_impl::write_dma (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1791.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (1 samples, 0.03%; 0.00%)</title><rect x="1090.1" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1093.06" y="1839.5" ></text>
</g>
<g >
<title>validation::validate_column_family (1 samples, 0.03%; 0.00%)</title><rect x="113.3" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="116.29" y="1855.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (3 samples, 0.09%; -0.03%)</title><rect x="446.9" y="1813" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="449.93" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (188 samples, 5.92%; 0.00%)</title><rect x="11.9" y="709" width="69.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="719.5" >[unknown]</text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (1 samples, 0.03%; +0.03%)</title><rect x="106.2" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="109.23" y="1807.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (1 samples, 0.03%; 0.00%)</title><rect x="635.7" y="1829" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="638.67" y="1839.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.57" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="133.7" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.72" y="1583.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::__uniq_ptr_impl (2 samples, 0.06%; 0.00%)</title><rect x="94.7" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.71" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.97" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (623 samples, 19.62%; +0.03%)</title><rect x="872.7" y="1877" width="231.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="875.71" y="1887.5" >seastar::noncopyable_function&lt;..</text>
</g>
<g >
<title>cql3::expr::expression::operator= (1 samples, 0.03%; -0.03%)</title><rect x="65.7" y="421" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="68.73" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2 samples, 0.06%; -0.03%)</title><rect x="34.1" y="293" width="0.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="37.15" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="94.0" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.97" y="463.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="56.8" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.81" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="693" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="703.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (9 samples, 0.28%; 0.00%)</title><rect x="86.2" y="549" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.16" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.09%; -0.03%)</title><rect x="25.6" y="309" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="28.60" y="319.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (10 samples, 0.31%; -0.03%)</title><rect x="760.1" y="1877" width="3.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="763.13" y="1887.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (1 samples, 0.03%; +0.03%)</title><rect x="448.0" y="1829" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="451.04" y="1839.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (2 samples, 0.06%; +0.06%)</title><rect x="147.5" y="2005" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="150.47" y="2015.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="53.5" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.47" y="319.5" ></text>
</g>
<g >
<title>row_cache::make_reader (35 samples, 1.10%; -0.09%)</title><rect x="636.8" y="1829" width="13.0" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="639.78" y="1839.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="133.4" y="1637" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.35" y="1647.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (1 samples, 0.03%; +0.03%)</title><rect x="743.8" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="746.78" y="1903.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (8 samples, 0.25%; 0.00%)</title><rect x="685.8" y="1877" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="688.82" y="1887.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume_end_of_stream (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1941" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1061" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1071.5" >[unknown]</text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="846.0" y="1877" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="848.96" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; 0.00%)</title><rect x="635.3" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="638.30" y="1823.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::~deque (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="559.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="136.0" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.95" y="1663.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (374 samples, 11.78%; +0.03%)</title><rect x="267.5" y="1861" width="138.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="270.47" y="1871.5" >flat_mutation_rea..</text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (1 samples, 0.03%; +0.03%)</title><rect x="603.7" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="606.72" y="1823.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::followPop (1 samples, 0.03%; 0.00%)</title><rect x="92.5" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.48" y="543.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (3 samples, 0.09%; 0.00%)</title><rect x="124.1" y="1557" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1567.5" ></text>
</g>
<g >
<title>query::result_set_builder::accept_new_row (1 samples, 0.03%; 0.00%)</title><rect x="186.5" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.48" y="1807.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.45" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; +0.03%)</title><rect x="569.9" y="1781" width="2.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="572.91" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="335.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,691 samples, 84.73%; 0.00%)</title><rect x="158.6" y="2005" width="999.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.61" y="2015.5" >seastar::app_template::run</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.09%; +0.03%)</title><rect x="118.1" y="1701" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="121.12" y="1711.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (1 samples, 0.03%; +0.03%)</title><rect x="932.2" y="1829" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="935.15" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="32.3" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="35.29" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (2 samples, 0.06%; 0.00%)</title><rect x="84.3" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="431.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::~BaseRecognizer (1 samples, 0.03%; 0.00%)</title><rect x="100.7" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (21 samples, 0.66%; +0.47%)</title><rect x="924.4" y="1813" width="7.8" height="15.0" fill="rgb(255,35,35)" rx="2" ry="2" />
<text  x="927.35" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="108.5" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.46" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::create_function_statement, std::default_delete&lt;cql3::statements::create_function_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="95.8" y="517" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="98.82" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.03%; +0.03%)</title><rect x="791.3" y="1845" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="794.34" y="1855.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (76 samples, 2.39%; 0.00%)</title><rect x="50.1" y="485" width="28.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.13" y="495.5" >c..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; -0.03%)</title><rect x="66.1" y="341" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="69.10" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="129.3" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="132.26" y="1663.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (79 samples, 2.49%; +0.09%)</title><rect x="350.0" y="1701" width="29.3" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="352.96" y="1711.5" >co..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (2 samples, 0.06%; +0.06%)</title><rect x="871.6" y="1893" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="874.59" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;10ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="124.1" y="1477" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1487.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (3 samples, 0.09%; 0.00%)</title><rect x="860.8" y="1797" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.82" y="1807.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="124.8" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.80" y="1535.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (34 samples, 1.07%; 0.00%)</title><rect x="85.4" y="693" width="12.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.42" y="703.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (4 samples, 0.13%; 0.00%)</title><rect x="74.3" y="293" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.28" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (1 samples, 0.03%; +0.03%)</title><rect x="21.1" y="421" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="24.15" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (14 samples, 0.44%; 0.00%)</title><rect x="105.1" y="1845" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.11" y="1855.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="52.0" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.98" y="367.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.41%; -0.03%)</title><rect x="250.8" y="1877" width="4.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="253.76" y="1887.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::raw::parsed_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="79.5" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.48" y="495.5" ></text>
</g>
<g >
<title>logalloc::region_impl::alloc_small (1 samples, 0.03%; +0.03%)</title><rect x="1108.6" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1111.63" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (4 samples, 0.13%; 0.00%)</title><rect x="52.7" y="453" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.73" y="463.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (3 samples, 0.09%; 0.00%)</title><rect x="138.6" y="1733" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.55" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="117" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="127.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="813.6" y="1765" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="816.63" y="1775.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="155.3" y="1957" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="158.27" y="1967.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; 0.00%)</title><rect x="118.5" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.49" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::~vector (1 samples, 0.03%; +0.03%)</title><rect x="123.3" y="1701" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="126.32" y="1711.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (1 samples, 0.03%; -0.03%)</title><rect x="25.6" y="293" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="28.60" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::size (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.97" y="303.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (1 samples, 0.03%; +0.03%)</title><rect x="659.4" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="662.45" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="12.2" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="383.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="628.2" y="1797" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="631.24" y="1807.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (35 samples, 1.10%; +0.03%)</title><rect x="64.2" y="437" width="13.0" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="67.24" y="447.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.13%; +0.06%)</title><rect x="721.5" y="1909" width="1.5" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="724.49" y="1919.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="94.0" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.97" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1487.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::attach_service_level_statement, std::default_delete&lt;cql3::statements::attach_service_level_statement&gt; &gt;::_M_ptr (1 samples, 0.03%; 0.00%)</title><rect x="95.5" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.45" y="511.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (3 samples, 0.09%; 0.00%)</title><rect x="697.3" y="1909" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="700.34" y="1919.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; +0.03%)</title><rect x="137.8" y="1589" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="140.81" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.19%; -0.06%)</title><rect x="999.8" y="1685" width="2.2" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="1002.77" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.31%; -0.09%)</title><rect x="955.6" y="1765" width="3.7" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="958.56" y="1775.5" ></text>
</g>
<g >
<title>_IO_setb (1 samples, 0.03%; +0.03%)</title><rect x="147.1" y="2037" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="150.10" y="2047.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.46" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="869" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.40" y="879.5" ></text>
</g>
<g >
<title>seastar::app_template::run (2,691 samples, 84.73%; 0.00%)</title><rect x="158.6" y="2021" width="999.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.61" y="2031.5" >seastar::app_template::run</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; -0.03%)</title><rect x="1008.7" y="1653" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1011.69" y="1663.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (27 samples, 0.85%; +0.13%)</title><rect x="780.6" y="1845" width="10.0" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="783.57" y="1855.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (10 samples, 0.31%; +0.09%)</title><rect x="150.8" y="2005" width="3.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="153.81" y="2015.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (2 samples, 0.06%; 0.00%)</title><rect x="860.8" y="1781" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.82" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::modification_statement, std::default_delete&lt;cql3::statements::raw::modification_statement&gt; &gt;::~unique_ptr (1 samples, 0.03%; +0.03%)</title><rect x="97.7" y="533" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="100.68" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (2 samples, 0.06%; 0.00%)</title><rect x="621.9" y="1765" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="624.92" y="1775.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.58" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (3 samples, 0.09%; 0.00%)</title><rect x="70.2" y="293" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.19" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.33" y="367.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (1 samples, 0.03%; +0.03%)</title><rect x="1032.1" y="1765" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1035.10" y="1775.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.03%; +0.03%)</title><rect x="122.6" y="1461" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="125.58" y="1471.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="52.0" y="261" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="54.98" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reserve_map_at_back (1 samples, 0.03%; 0.00%)</title><rect x="27.5" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.46" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (10 samples, 0.31%; 0.00%)</title><rect x="39.4" y="373" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.35" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.56" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; 0.00%)</title><rect x="1026.2" y="1685" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1029.15" y="1695.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::unique_ptr (1 samples, 0.03%; 0.00%)</title><rect x="16.3" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.32" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="55.7" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.70" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (2 samples, 0.06%; -0.22%)</title><rect x="973.8" y="1733" width="0.7" height="15.0" fill="rgb(128,128,255)" rx="2" ry="2" />
<text  x="976.77" y="1743.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="13.7" y="197" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="16.72" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (49 samples, 1.54%; 0.00%)</title><rect x="117.0" y="1749" width="18.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1759.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (18 samples, 0.57%; +0.06%)</title><rect x="241.8" y="1877" width="6.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="244.84" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (2 samples, 0.06%; 0.00%)</title><rect x="64.6" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.62" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="741" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="751.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (187 samples, 5.89%; +0.03%)</title><rect x="775.4" y="1877" width="69.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="778.37" y="1887.5" >cql3::q..</text>
</g>
<g >
<title>[unknown] (241 samples, 7.59%; 0.00%)</title><rect x="11.9" y="789" width="89.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="799.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="303.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1669" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1679.5" >[unknown]</text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (1 samples, 0.03%; 0.00%)</title><rect x="94.3" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.34" y="447.5" ></text>
</g>
<g >
<title>bplus::node&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (1 samples, 0.03%; +0.03%)</title><rect x="1105.7" y="1733" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1108.66" y="1743.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.13%; +0.13%)</title><rect x="683.6" y="1893" width="1.5" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="686.60" y="1903.5" ></text>
</g>
<g >
<title>partition_entry::read (5 samples, 0.16%; -0.09%)</title><rect x="627.5" y="1813" width="1.9" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="630.49" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="140.8" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.78" y="1647.5" ></text>
</g>
<g >
<title>create_partitions (34 samples, 1.07%; 0.00%)</title><rect x="85.4" y="645" width="12.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="88.42" y="655.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::modification_statement (2 samples, 0.06%; 0.00%)</title><rect x="88.8" y="533" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.77" y="543.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::BaseRecognizer (4 samples, 0.13%; 0.00%)</title><rect x="21.1" y="485" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.15" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (16 samples, 0.50%; 0.00%)</title><rect x="859.0" y="1877" width="5.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.96" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.03%; 0.00%)</title><rect x="27.1" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.09" y="287.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="399.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1333" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1343.5" >[unknown]</text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.13" y="335.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.28%; +0.06%)</title><rect x="1140.6" y="1909" width="3.3" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="1143.59" y="1919.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (1 samples, 0.03%; +0.03%)</title><rect x="114.4" y="1925" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="117.40" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (70 samples, 2.20%; +0.09%)</title><rect x="23.7" y="437" width="26.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="26.75" y="447.5" >a..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::detach_service_level_statement*, false&gt;::_Head_base (1 samples, 0.03%; +0.03%)</title><rect x="78.7" y="421" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="81.73" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.13%; +0.06%)</title><rect x="957.8" y="1749" width="1.5" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="960.79" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.56" y="143.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="137.4" y="1749" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.44" y="1759.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (14 samples, 0.44%; +0.06%)</title><rect x="344.0" y="1701" width="5.2" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="347.01" y="1711.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="84.7" y="357" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="87.68" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (18 samples, 0.57%; -0.06%)</title><rect x="388.6" y="1765" width="6.7" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="391.60" y="1775.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.16%; +0.13%)</title><rect x="645.7" y="1765" width="1.9" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="648.70" y="1775.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (5 samples, 0.16%; 0.00%)</title><rect x="62.0" y="405" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (4 samples, 0.13%; 0.00%)</title><rect x="126.3" y="1621" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.29" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::vector (2 samples, 0.06%; 0.00%)</title><rect x="121.5" y="1429" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="124.46" y="1439.5" ></text>
</g>
<g >
<title>schema::column_at (1 samples, 0.03%; +0.03%)</title><rect x="1109.0" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1112.01" y="1791.5" ></text>
</g>
<g >
<title>utils::flush_queue&lt;db::replay_position, std::less&lt;db::replay_position&gt;, seastar::lowres_clock&gt;::run_with_ordered_post_op&lt;db::commitlog::segment::cycle (1 samples, 0.03%; 0.00%)</title><rect x="1111.6" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1114.61" y="1775.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (5 samples, 0.16%; 0.00%)</title><rect x="120.3" y="1669" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.35" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (3 samples, 0.09%; 0.00%)</title><rect x="124.1" y="1541" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1551.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; +0.06%)</title><rect x="917.3" y="1829" width="1.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="920.29" y="1839.5" ></text>
</g>
<g >
<title>database::add_column_family (4 samples, 0.13%; 0.00%)</title><rect x="186.1" y="1909" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.11" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (3 samples, 0.09%; 0.00%)</title><rect x="71.7" y="309" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.68" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (1 samples, 0.03%; +0.03%)</title><rect x="699.9" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="702.94" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; -0.03%)</title><rect x="74.6" y="229" width="0.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="77.65" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (6 samples, 0.19%; 0.00%)</title><rect x="140.8" y="1749" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.78" y="1759.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14 samples, 0.44%; 0.00%)</title><rect x="12.2" y="629" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="639.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (4 samples, 0.13%; 0.00%)</title><rect x="186.1" y="1925" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.11" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (6 samples, 0.19%; +0.19%)</title><rect x="929.9" y="1797" width="2.3" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="932.92" y="1807.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (1 samples, 0.03%; +0.03%)</title><rect x="746.8" y="1877" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="749.76" y="1887.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, cql3::expr::expression::impl*, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="127.8" y="1621" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="130.78" y="1631.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::hasException (1 samples, 0.03%; 0.00%)</title><rect x="68.3" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.33" y="415.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="58.3" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.30" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (4 samples, 0.13%; 0.00%)</title><rect x="86.5" y="517" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.54" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (1 samples, 0.03%; +0.03%)</title><rect x="83.6" y="389" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="86.56" y="399.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (27 samples, 0.85%; -0.03%)</title><rect x="890.2" y="1813" width="10.0" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="893.17" y="1823.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (12 samples, 0.38%; 0.00%)</title><rect x="119.2" y="1717" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="122.23" y="1727.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (1 samples, 0.03%; +0.03%)</title><rect x="329.9" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="332.89" y="1727.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="64.6" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.62" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="58.3" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.30" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_S_relocate (1 samples, 0.03%; +0.03%)</title><rect x="144.1" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="147.12" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.03%; +0.03%)</title><rect x="98.4" y="357" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="101.43" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="725" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="735.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="94.0" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.97" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (1 samples, 0.03%; +0.03%)</title><rect x="247.0" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="250.04" y="1791.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="824.0" y="1781" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="827.04" y="1791.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.01" y="1711.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="51.6" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.61" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (1 samples, 0.03%; -0.03%)</title><rect x="396.8" y="1765" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="399.77" y="1775.5" ></text>
</g>
<g >
<title>database::has_keyspace (2 samples, 0.06%; -0.03%)</title><rect x="845.2" y="1877" width="0.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="848.21" y="1887.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (50 samples, 1.57%; +0.19%)</title><rect x="516.4" y="1829" width="18.6" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="519.40" y="1839.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (19 samples, 0.60%; -0.16%)</title><rect x="713.3" y="1925" width="7.1" height="15.0" fill="rgb(151,151,255)" rx="2" ry="2" />
<text  x="716.32" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.03%; +0.03%)</title><rect x="22.3" y="357" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="25.26" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload&lt;cql3::expr::expression, false, false, false&gt;::_Optional_payload_base (1 samples, 0.03%; 0.00%)</title><rect x="143.0" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.01" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.01" y="1647.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (1 samples, 0.03%; +0.03%)</title><rect x="179.8" y="1861" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="182.79" y="1871.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="757" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="767.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::reset (1 samples, 0.03%; +0.03%)</title><rect x="137.1" y="1701" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="140.07" y="1711.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (2 samples, 0.06%; -0.06%)</title><rect x="493.7" y="1829" width="0.8" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="496.74" y="1839.5" ></text>
</g>
<g >
<title>reader_permit::max_result_size (1 samples, 0.03%; +0.03%)</title><rect x="215.8" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="218.83" y="1903.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;0ul, cql3::expr::conjunction, cql3::expr::conjunction, void&gt; (3 samples, 0.09%; 0.00%)</title><rect x="71.7" y="341" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="74.68" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (359 samples, 11.30%; 0.00%)</title><rect x="942.6" y="1829" width="133.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="945.56" y="1839.5" >service::storage..</text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (12 samples, 0.38%; +0.16%)</title><rect x="295.0" y="1781" width="4.4" height="15.0" fill="rgb(255,151,151)" rx="2" ry="2" />
<text  x="297.97" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="142.3" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.27" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_ctor_base (1 samples, 0.03%; +0.03%)</title><rect x="15.9" y="261" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="18.94" y="271.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (12 samples, 0.38%; +0.13%)</title><rect x="911.3" y="1797" width="4.5" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="914.35" y="1807.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="56.1" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.07" y="239.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1605" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (1 samples, 0.03%; 0.00%)</title><rect x="108.5" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.46" y="1775.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (10 samples, 0.31%; 0.00%)</title><rect x="81.7" y="533" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.71" y="543.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (3 samples, 0.09%; 0.00%)</title><rect x="1110.9" y="1829" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1113.86" y="1839.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (1 samples, 0.03%; +0.03%)</title><rect x="114.8" y="1877" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="117.77" y="1887.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; +0.06%)</title><rect x="63.1" y="213" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="66.13" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="255.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="13.0" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.97" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (2 samples, 0.06%; 0.00%)</title><rect x="107.7" y="1781" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="110.71" y="1791.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="805" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="815.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="56.1" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.07" y="271.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="15.9" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.94" y="367.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;cql3::expr::expression*, cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="117.4" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.37" y="1695.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (5 samples, 0.16%; 0.00%)</title><rect x="177.9" y="1925" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="180.93" y="1935.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1439.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (1 samples, 0.03%; 0.00%)</title><rect x="939.6" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="942.58" y="1839.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (127 samples, 4.00%; -0.03%)</title><rect x="984.9" y="1749" width="47.2" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="987.91" y="1759.5" >serv..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (2 samples, 0.06%; 0.00%)</title><rect x="120.3" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.35" y="1567.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="133.4" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="136.35" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="117.7" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.75" y="1583.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="68.0" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.96" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::conjunction (1 samples, 0.03%; 0.00%)</title><rect x="122.6" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="125.58" y="1519.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (1 samples, 0.03%; 0.00%)</title><rect x="27.1" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.09" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (4 samples, 0.13%; +0.09%)</title><rect x="1018.0" y="1637" width="1.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1020.98" y="1647.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="136.0" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.95" y="1631.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;reconcilable_result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;reconcilable_result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_mutations_locally (1 samples, 0.03%; 0.00%)</title><rect x="673.6" y="1925" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="676.56" y="1935.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (2 samples, 0.06%; 0.00%)</title><rect x="84.3" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="479.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.03%; 0.00%)</title><rect x="864.5" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="867.53" y="1791.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (6 samples, 0.19%; 0.00%)</title><rect x="98.4" y="549" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::reset (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="687.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::~CqlLexer (1 samples, 0.03%; +0.03%)</title><rect x="90.3" y="565" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="93.25" y="575.5" ></text>
</g>
<g >
<title>cql3::expr::expression::~expression (1 samples, 0.03%; 0.00%)</title><rect x="94.3" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.34" y="479.5" ></text>
</g>
<g >
<title>query::result_set::from_raw_result (2 samples, 0.06%; 0.00%)</title><rect x="186.5" y="1813" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.48" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (2 samples, 0.06%; 0.00%)</title><rect x="127.8" y="1701" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.78" y="1711.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (1 samples, 0.03%; 0.00%)</title><rect x="82.4" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.45" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="140.8" y="1557" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.78" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="117" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="127.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;sstables::compaction_result&gt;::apply&lt;sstables::compaction::run&lt;noop_compacted_fragments_consumer&gt; (1 samples, 0.03%; 0.00%)</title><rect x="156.4" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.39" y="1999.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (157 samples, 4.94%; +0.35%)</title><rect x="577.0" y="1829" width="58.3" height="15.0" fill="rgb(255,81,81)" rx="2" ry="2" />
<text  x="579.96" y="1839.5" >memtab..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="132.6" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.61" y="1519.5" ></text>
</g>
<g >
<title>row::external_memory_usage (16 samples, 0.50%; -0.06%)</title><rect x="343.3" y="1717" width="5.9" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="346.27" y="1727.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (43 samples, 1.35%; 0.00%)</title><rect x="731.9" y="1925" width="16.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="734.90" y="1935.5" ></text>
</g>
<g >
<title>antlr3::DefaultAllocPolicy::StackType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::StackType (2 samples, 0.06%; 0.00%)</title><rect x="21.5" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.52" y="447.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.16%; 0.00%)</title><rect x="130.4" y="1589" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.38" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (623 samples, 19.62%; -0.09%)</title><rect x="872.7" y="1893" width="231.5" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="875.71" y="1903.5" >seastar::noncopyable_function&lt;..</text>
</g>
<g >
<title>operator delete (6 samples, 0.19%; +0.19%)</title><rect x="827.4" y="1797" width="2.2" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="830.38" y="1807.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (5 samples, 0.16%; +0.13%)</title><rect x="536.1" y="1829" width="1.9" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="539.10" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (242 samples, 7.62%; 0.00%)</title><rect x="11.9" y="917" width="89.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="927.5" >[unknown]</text>
</g>
<g >
<title>seastar::file::dma_write_impl (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1973" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1983.5" >[unknown]</text>
</g>
<g >
<title>std::__invoke&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="207.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1941" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1951.5" >[unknown]</text>
</g>
<g >
<title>service::storage_service::mutate_token_metadata (1 samples, 0.03%; 0.00%)</title><rect x="158.2" y="1861" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.24" y="1871.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (2 samples, 0.06%; 0.00%)</title><rect x="55.7" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.70" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (2 samples, 0.06%; 0.00%)</title><rect x="99.5" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="62.0" y="165" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="175.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (11 samples, 0.35%; -0.03%)</title><rect x="55.0" y="453" width="4.0" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="57.96" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::to_expression (2 samples, 0.06%; 0.00%)</title><rect x="88.0" y="517" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.02" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="639.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (75 samples, 2.36%; 0.00%)</title><rect x="117.0" y="1925" width="27.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1935.5" >s..</text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1989" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1999.5" >[unknown]</text>
</g>
<g >
<title>operator delete (9 samples, 0.28%; -0.03%)</title><rect x="538.0" y="1829" width="3.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="540.95" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;3ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.03" y="1439.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="59.8" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.79" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.03%; 0.00%)</title><rect x="44.2" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.18" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::allocate (1 samples, 0.03%; +0.03%)</title><rect x="26.7" y="357" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="29.72" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (116 samples, 3.65%; +0.31%)</title><rect x="1032.5" y="1781" width="43.1" height="15.0" fill="rgb(255,93,93)" rx="2" ry="2" />
<text  x="1035.47" y="1791.5" >serv..</text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="118.5" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="121.49" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.09%)</title><rect x="846.0" y="1861" width="2.2" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="848.96" y="1871.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::clear (1 samples, 0.03%; +0.03%)</title><rect x="91.4" y="549" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="94.37" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="191.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1829" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1839.5" >[unknown]</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (7 samples, 0.22%; 0.00%)</title><rect x="14.5" y="421" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.46" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.13%; +0.06%)</title><rect x="643.8" y="1781" width="1.5" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="646.84" y="1791.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="156.4" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.39" y="1919.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (83 samples, 2.61%; 0.00%)</title><rect x="114.0" y="2005" width="30.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.03" y="2015.5" >se..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.13" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="53.5" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.47" y="271.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (2 samples, 0.06%; +0.06%)</title><rect x="629.4" y="1813" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="632.35" y="1823.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="741" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="751.5" ></text>
</g>
<g >
<title>from_hex (4 samples, 0.13%; -0.06%)</title><rect x="86.5" y="453" width="1.5" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="89.54" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.22%; -0.16%)</title><rect x="946.6" y="1781" width="2.6" height="15.0" fill="rgb(151,151,255)" rx="2" ry="2" />
<text  x="949.64" y="1791.5" ></text>
</g>
<g >
<title>logalloc::region_impl::free (1 samples, 0.03%; +0.03%)</title><rect x="1106.0" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1109.03" y="1743.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::submit&lt;seastar::syscall_result&lt;long&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="854.1" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="857.13" y="1903.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (6 samples, 0.19%; 0.00%)</title><rect x="74.3" y="373" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.28" y="383.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1845" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1855.5" >[unknown]</text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.06%; 0.00%)</title><rect x="770.9" y="1877" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="773.91" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.03%; +0.03%)</title><rect x="85.4" y="597" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="88.42" y="607.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (8 samples, 0.25%; -0.03%)</title><rect x="204.3" y="1893" width="3.0" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="207.31" y="1903.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="65.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="68.73" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;seastar::file_impl&gt; &gt;, seastar::reactor::open_directory (1 samples, 0.03%; 0.00%)</title><rect x="712.9" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="715.95" y="1935.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1967.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (156 samples, 4.91%; 0.00%)</title><rect x="23.0" y="533" width="58.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.00" y="543.5" >seasta..</text>
</g>
<g >
<title>cql3::query_options::query_options (1 samples, 0.03%; +0.03%)</title><rect x="860.1" y="1797" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="863.08" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="72.0" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="75.05" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; -0.06%)</title><rect x="446.6" y="1813" width="0.3" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="449.56" y="1823.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (7 samples, 0.22%; +0.13%)</title><rect x="655.4" y="1877" width="2.6" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="658.36" y="1887.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; -0.03%)</title><rect x="82.1" y="437" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="85.08" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="136.0" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="138.95" y="1647.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.33" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (1,264 samples, 39.80%; +0.13%)</title><rect x="190.2" y="1925" width="469.6" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="193.20" y="1935.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>seastar::file_data_sink_impl::do_put (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1839.5" ></text>
</g>
<g >
<title>intel_check_word.constprop.0 (1 samples, 0.03%; 0.00%)</title><rect x="157.9" y="2037" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.87" y="2047.5" ></text>
</g>
<g >
<title>do_cql_test (75 samples, 2.36%; 0.00%)</title><rect x="117.0" y="1957" width="27.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1967.5" >d..</text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::drop_function_statement*, std::default_delete&lt;cql3::statements::drop_function_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="79.1" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="82.11" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (1 samples, 0.03%; -0.09%)</title><rect x="532.8" y="1797" width="0.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="535.75" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1317" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1327.5" >[unknown]</text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (1 samples, 0.03%; 0.00%)</title><rect x="642.7" y="1797" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="645.73" y="1807.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; 0.00%)</title><rect x="673.6" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="676.56" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="175.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="13.3" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="351.5" ></text>
</g>
<g >
<title>seastar::syscall_work_queue::complete (1 samples, 0.03%; 0.00%)</title><rect x="1158.0" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.05" y="1919.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;cql3::expr::expression&gt;::_M_construct&lt;cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="143.0" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.01" y="1631.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (13 samples, 0.41%; -0.09%)</title><rect x="785.8" y="1829" width="4.8" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="788.77" y="1839.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (1 samples, 0.03%; +0.03%)</title><rect x="1120.9" y="1925" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1123.89" y="1935.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="53.1" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.10" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="677" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.40" y="687.5" ></text>
</g>
<g >
<title>cql3::cf_name::cf_name (1 samples, 0.03%; 0.00%)</title><rect x="52.4" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="55.36" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;seastar::posix_file_impl::list_directory (1 samples, 0.03%; 0.00%)</title><rect x="854.1" y="1925" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="857.13" y="1935.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.06%; 0.00%)</title><rect x="316.9" y="1749" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="319.89" y="1759.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="102.5" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.51" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="62.0" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="143.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (1 samples, 0.03%; +0.03%)</title><rect x="146.4" y="2021" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="149.35" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::__uniq_ptr_data (1 samples, 0.03%; 0.00%)</title><rect x="143.0" y="1573" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.01" y="1583.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (1 samples, 0.03%; +0.03%)</title><rect x="859.7" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="862.70" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; -0.06%)</title><rect x="829.6" y="1781" width="0.4" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="832.61" y="1791.5" ></text>
</g>
<g >
<title>schema::column_at (4 samples, 0.13%; +0.03%)</title><rect x="465.5" y="1797" width="1.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="468.50" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_service_level_statement, std::default_delete&lt;cql3::statements::alter_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_service_level_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="79.8" y="501" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="82.85" y="511.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="53.1" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.10" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (2 samples, 0.06%; 0.00%)</title><rect x="748.2" y="1909" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="751.24" y="1919.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (2 samples, 0.06%; +0.06%)</title><rect x="549.8" y="1861" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="552.84" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.4" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.41" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (243 samples, 7.65%; 0.00%)</title><rect x="11.9" y="933" width="90.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="943.5" >[unknown]</text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (1 samples, 0.03%; +0.03%)</title><rect x="658.0" y="1893" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="660.96" y="1903.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.31%; 0.00%)</title><rect x="312.4" y="1733" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="315.43" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1765" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1775.5" >[unknown]</text>
</g>
<g >
<title>std::_Optional_base&lt;cql3::expr::expression, false, false&gt;::_Optional_base (1 samples, 0.03%; 0.00%)</title><rect x="143.0" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.01" y="1695.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (2 samples, 0.06%; +0.06%)</title><rect x="698.5" y="1909" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="701.46" y="1919.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (12 samples, 0.38%; 0.00%)</title><rect x="68.7" y="405" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.70" y="415.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="143.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::deserialize_visitor&lt;basic_single_fragmented_view&lt; (1 samples, 0.03%; +0.03%)</title><rect x="186.9" y="1765" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="189.85" y="1775.5" ></text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="255.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="108.8" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.83" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_range_check (1 samples, 0.03%; 0.00%)</title><rect x="55.3" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.33" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.09%; 0.00%)</title><rect x="132.2" y="1589" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.24" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (35 samples, 1.10%; +0.25%)</title><rect x="1077.8" y="1845" width="13.0" height="15.0" fill="rgb(255,116,116)" rx="2" ry="2" />
<text  x="1080.80" y="1855.5" ></text>
</g>
<g >
<title>flush_reader::get_next_partition (1 samples, 0.03%; 0.00%)</title><rect x="114.4" y="1957" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.40" y="1967.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (156 samples, 4.91%; 0.00%)</title><rect x="23.0" y="517" width="58.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.00" y="527.5" >cql3_p..</text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.06%; +0.03%)</title><rect x="1006.1" y="1685" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1009.09" y="1695.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (1 samples, 0.03%; -0.03%)</title><rect x="734.9" y="1909" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="737.87" y="1919.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="431.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (1 samples, 0.03%; 0.00%)</title><rect x="775.0" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="777.99" y="1887.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::conjunction&gt; (5 samples, 0.16%; 0.00%)</title><rect x="62.0" y="421" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="15.2" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::attributes::raw, std::default_delete&lt;cql3::attributes::raw&gt;, true, true&gt;::__uniq_ptr_data (2 samples, 0.06%; 0.00%)</title><rect x="94.7" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="97.71" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (14 samples, 0.44%; 0.00%)</title><rect x="105.1" y="1861" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="108.11" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_assign_base (5 samples, 0.16%; 0.00%)</title><rect x="120.3" y="1621" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.35" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1445" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1455.5" >[unknown]</text>
</g>
<g >
<title>operator new (2 samples, 0.06%; +0.06%)</title><rect x="307.6" y="1765" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="310.60" y="1775.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;&amp;, antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;*&gt;::_Deque_iterator (1 samples, 0.03%; +0.03%)</title><rect x="20.8" y="421" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="23.77" y="431.5" ></text>
</g>
<g >
<title>row::~row (2 samples, 0.06%; 0.00%)</title><rect x="396.0" y="1765" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="399.03" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (2 samples, 0.06%; 0.00%)</title><rect x="13.3" y="309" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; +0.03%)</title><rect x="62.4" y="133" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="65.39" y="143.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1989" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1999.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (29 samples, 0.91%; 0.00%)</title><rect x="102.9" y="1989" width="10.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.88" y="1999.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::~impl (1 samples, 0.03%; 0.00%)</title><rect x="73.2" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.16" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage (2 samples, 0.06%; 0.00%)</title><rect x="62.0" y="277" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.28%; -0.03%)</title><rect x="1086.7" y="1797" width="3.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1089.71" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="1877" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1887.5" >[unknown]</text>
</g>
<g >
<title>row::row (1 samples, 0.03%; -0.03%)</title><rect x="308.3" y="1749" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="311.34" y="1759.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="747.9" y="1925" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="750.87" y="1935.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (1 samples, 0.03%; +0.03%)</title><rect x="106.6" y="1797" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="109.60" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (5 samples, 0.16%; 0.00%)</title><rect x="62.0" y="357" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="367.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (1 samples, 0.03%; 0.00%)</title><rect x="720.4" y="1909" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="723.38" y="1919.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (1 samples, 0.03%; +0.03%)</title><rect x="423.5" y="1845" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="426.52" y="1855.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::~Parser (1 samples, 0.03%; 0.00%)</title><rect x="91.0" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.99" y="559.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="55.7" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.70" y="351.5" ></text>
</g>
<g >
<title>sstring_hash::operator (3 samples, 0.09%; +0.06%)</title><rect x="850.0" y="1845" width="1.2" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="853.04" y="1855.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::alter_table_statement*, std::default_delete&lt;cql3::statements::alter_table_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; 0.00%)</title><rect x="78.4" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.36" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="14.5" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.46" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Multi_array&lt;void  (1 samples, 0.03%; +0.03%)</title><rect x="125.2" y="1653" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="128.18" y="1663.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.13%; 0.00%)</title><rect x="25.2" y="341" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="28.23" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::submit_io_write (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1743.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="15.6" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.57" y="303.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.03%)</title><rect x="195.4" y="1909" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="198.40" y="1919.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="56.8" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.81" y="319.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1221" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1231.5" >[unknown]</text>
</g>
<g >
<title>std::__do_visit&lt;std::__detail::__variant::__variant_cookie, std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (2 samples, 0.06%; 0.00%)</title><rect x="74.6" y="213" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.65" y="223.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.01" y="1631.5" ></text>
</g>
<g >
<title>reader_permit::signal (4 samples, 0.13%; +0.13%)</title><rect x="404.9" y="1813" width="1.5" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="407.94" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="143.8" y="1669" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="146.75" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (2 samples, 0.06%; 0.00%)</title><rect x="108.8" y="1765" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.83" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="76.1" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.13" y="223.5" ></text>
</g>
<g >
<title>db::schema_tables::fill_column_info (1 samples, 0.03%; 0.00%)</title><rect x="186.1" y="1829" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.11" y="1839.5" ></text>
</g>
<g >
<title>table::make_reader (1 samples, 0.03%; 0.00%)</title><rect x="217.3" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="220.32" y="1855.5" ></text>
</g>
<g >
<title>__start_context (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="917" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="927.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.03%; 0.00%)</title><rect x="56.4" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="59.44" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (3 samples, 0.09%; 0.00%)</title><rect x="1016.9" y="1637" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1019.86" y="1647.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (1 samples, 0.03%; 0.00%)</title><rect x="12.2" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="415.5" ></text>
</g>
<g >
<title>std::operator+ (2 samples, 0.06%; 0.00%)</title><rect x="131.5" y="1525" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.49" y="1535.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (11 samples, 0.35%; -0.03%)</title><rect x="123.7" y="1717" width="4.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="126.69" y="1727.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="787.6" y="1813" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="790.63" y="1823.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (1 samples, 0.03%; 0.00%)</title><rect x="108.5" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.46" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="136.3" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="139.32" y="1695.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (10 samples, 0.31%; 0.00%)</title><rect x="130.4" y="1685" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.38" y="1695.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="821" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.40" y="831.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (7 samples, 0.22%; 0.00%)</title><rect x="1113.5" y="1749" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.46" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="82.8" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.82" y="399.5" ></text>
</g>
<g >
<title>database::find_keyspace (11 samples, 0.35%; -0.13%)</title><rect x="1047.0" y="1765" width="4.0" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="1049.96" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.09" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (1 samples, 0.03%; 0.00%)</title><rect x="94.0" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.97" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (1 samples, 0.03%; +0.03%)</title><rect x="159.4" y="1941" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="162.36" y="1951.5" ></text>
</g>
<g >
<title>dht::tri_compare (1 samples, 0.03%; -0.09%)</title><rect x="1067.8" y="1717" width="0.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="1070.76" y="1727.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (28 samples, 0.88%; 0.00%)</title><rect x="103.3" y="1909" width="10.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.26" y="1919.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.03%)</title><rect x="543.2" y="1845" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="546.15" y="1855.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (1 samples, 0.03%; +0.03%)</title><rect x="135.2" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="138.21" y="1791.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (2 samples, 0.06%; 0.00%)</title><rect x="16.3" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.32" y="415.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.03%; 0.00%)</title><rect x="154.5" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.53" y="2047.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;::shared_ptr (1 samples, 0.03%; 0.00%)</title><rect x="58.7" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.67" y="431.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (2 samples, 0.06%; +0.03%)</title><rect x="1114.9" y="1653" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1117.95" y="1663.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (14 samples, 0.44%; 0.00%)</title><rect x="12.2" y="533" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="543.5" ></text>
</g>
<g >
<title>reader_permit::consume (2 samples, 0.06%; +0.06%)</title><rect x="387.1" y="1749" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="390.11" y="1759.5" ></text>
</g>
<g >
<title>create_partitions (75 samples, 2.36%; 0.00%)</title><rect x="117.0" y="1941" width="27.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1951.5" >c..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::operator=&lt;cql3::statements::raw::update_statement, std::default_delete&lt;cql3::statements::raw::update_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="96.6" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.57" y="527.5" ></text>
</g>
<g >
<title>dht::shard_of (2 samples, 0.06%; +0.03%)</title><rect x="993.5" y="1717" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="996.46" y="1727.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (1 samples, 0.03%; +0.03%)</title><rect x="872.3" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="875.34" y="1903.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="108.8" y="1717" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="111.83" y="1727.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; 0.00%)</title><rect x="138.2" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.18" y="1759.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (2 samples, 0.06%; 0.00%)</title><rect x="57.6" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.56" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; 0.00%)</title><rect x="140.8" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.78" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="140.8" y="1733" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.78" y="1743.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;multishard_combining_reader, dht::sharder const&amp;, seastar::shared_ptr&lt;reader_lifecycle_policy&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, nonwrapping_interval&lt;dht::ring_position&gt; const&amp;, query::partition_slice const&amp;, seastar::io_priority_class const&amp;, tracing::trace_state_ptr, seastar::bool_class&lt;flat_mutation_reader::partition_range_forwarding_tag&gt;&amp;&gt; (1 samples, 0.03%; 0.00%)</title><rect x="158.2" y="2037" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="161.24" y="2047.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (3 samples, 0.09%; 0.00%)</title><rect x="132.2" y="1669" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="135.24" y="1679.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (4 samples, 0.13%; -0.16%)</title><rect x="35.6" y="373" width="1.5" height="15.0" fill="rgb(151,151,255)" rx="2" ry="2" />
<text  x="38.64" y="383.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (1 samples, 0.03%; -0.03%)</title><rect x="155.3" y="1973" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="158.27" y="1983.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="393.4" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="396.43" y="1759.5" ></text>
</g>
<g >
<title>schema_registry::get (12 samples, 0.38%; +0.22%)</title><rect x="959.3" y="1781" width="4.4" height="15.0" fill="rgb(255,128,128)" rx="2" ry="2" />
<text  x="962.28" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (2 samples, 0.06%; -0.06%)</title><rect x="213.2" y="1861" width="0.8" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="216.23" y="1871.5" ></text>
</g>
<g >
<title>__tls_init (1 samples, 0.03%; -0.03%)</title><rect x="305.0" y="1749" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="308.00" y="1759.5" ></text>
</g>
<g >
<title>do_cql_test (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="853" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="863.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; +0.03%)</title><rect x="626.4" y="1813" width="0.7" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="629.38" y="1823.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="1026.2" y="1701" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1029.15" y="1711.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (2 samples, 0.06%; +0.03%)</title><rect x="115.1" y="1877" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="118.14" y="1887.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (1 samples, 0.03%; +0.03%)</title><rect x="964.1" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="967.11" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (29 samples, 0.91%; 0.00%)</title><rect x="102.9" y="1957" width="10.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.88" y="1967.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (3 samples, 0.09%; +0.03%)</title><rect x="1113.5" y="1653" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1116.46" y="1663.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (1 samples, 0.03%; 0.00%)</title><rect x="156.4" y="1845" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="159.39" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="120.7" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="123.72" y="1535.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="56.4" y="261" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="59.44" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.13%; -0.03%)</title><rect x="303.9" y="1765" width="1.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="306.89" y="1775.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (1 samples, 0.03%; 0.00%)</title><rect x="594.4" y="1813" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="597.43" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (245 samples, 7.71%; 0.00%)</title><rect x="11.9" y="2005" width="91.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="2015.5" >[unknown]</text>
</g>
<g >
<title>sstables::sstable_version_constants::get_component_map (1 samples, 0.03%; +0.03%)</title><rect x="660.6" y="1893" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="663.56" y="1903.5" ></text>
</g>
<g >
<title>std::operator+ (1 samples, 0.03%; 0.00%)</title><rect x="52.0" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.98" y="319.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (23 samples, 0.72%; 0.00%)</title><rect x="207.3" y="1893" width="8.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="210.29" y="1903.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (24 samples, 0.76%; +0.03%)</title><rect x="594.8" y="1813" width="8.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="597.80" y="1823.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (1 samples, 0.03%; +0.03%)</title><rect x="1140.2" y="1893" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1143.21" y="1903.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="13.3" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="431.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;11ul, cql3::expr::untyped_constant, cql3::expr::untyped_constant, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="141.5" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.52" y="1695.5" ></text>
</g>
<g >
<title>database::has_keyspace (3 samples, 0.09%; -0.06%)</title><rect x="850.0" y="1861" width="1.2" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="853.04" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (244 samples, 7.68%; 0.00%)</title><rect x="11.9" y="1541" width="90.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="1551.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (3 samples, 0.09%; +0.03%)</title><rect x="299.4" y="1781" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="302.43" y="1791.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="1150.6" y="1877" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1153.62" y="1887.5" ></text>
</g>
<g >
<title>free (1 samples, 0.03%; +0.03%)</title><rect x="66.1" y="309" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="69.10" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, seastar::lw_shared_ptr&lt;cql3::column_condition::raw&gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="78.0" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.99" y="463.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (1 samples, 0.03%; -0.03%)</title><rect x="134.5" y="1685" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="137.46" y="1695.5" ></text>
</g>
<g >
<title>do_cql_test (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="709" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="719.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.03%; +0.03%)</title><rect x="822.2" y="1749" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="825.18" y="1759.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="59.8" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.79" y="399.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%; 0.00%)</title><rect x="1011.7" y="1669" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1014.66" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (4 samples, 0.13%; 0.00%)</title><rect x="126.3" y="1605" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="129.29" y="1615.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, cql3::statements::raw::parsed_statement*, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="655.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (1 samples, 0.03%; +0.03%)</title><rect x="112.9" y="1765" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="115.92" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="83.6" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="86.56" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.06%; 0.00%)</title><rect x="13.3" y="293" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.34" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (5 samples, 0.16%; 0.00%)</title><rect x="861.9" y="1813" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="864.93" y="1823.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="22.6" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.63" y="543.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__raw_visit&lt;std::__detail::__variant::__variant_construct&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;&amp;, std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="70.6" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.56" y="255.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (1 samples, 0.03%; 0.00%)</title><rect x="977.1" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="980.11" y="1775.5" ></text>
</g>
<g >
<title>std::tuple&lt;cql3::statements::raw::parsed_statement*, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;::tuple&lt;true, true&gt; (1 samples, 0.03%; +0.03%)</title><rect x="79.5" y="453" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="82.48" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (1 samples, 0.03%; 0.00%)</title><rect x="114.8" y="1941" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.77" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.4" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.41" y="1631.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.16%; 0.00%)</title><rect x="645.7" y="1781" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.70" y="1791.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (2 samples, 0.06%; -0.03%)</title><rect x="1117.6" y="1701" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1120.55" y="1711.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (1 samples, 0.03%; 0.00%)</title><rect x="101.4" y="709" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.40" y="719.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (21 samples, 0.66%; 0.00%)</title><rect x="1104.2" y="1909" width="7.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.18" y="1919.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt;::deallocate (1 samples, 0.03%; 0.00%)</title><rect x="66.8" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.85" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (7 samples, 0.22%; 0.00%)</title><rect x="1113.5" y="1717" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.46" y="1727.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (1 samples, 0.03%; -0.03%)</title><rect x="84.3" y="405" width="0.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="87.31" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::expr::expression::impl*, false&gt;::_Head_base&lt;cql3::expr::expression::impl*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="143.0" y="1525" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="146.01" y="1535.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (2 samples, 0.06%; 0.00%)</title><rect x="131.5" y="1509" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="134.49" y="1519.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (8 samples, 0.25%; 0.00%)</title><rect x="55.7" y="437" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.70" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (3 samples, 0.09%; 0.00%)</title><rect x="57.6" y="325" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="60.56" y="335.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (1 samples, 0.03%; 0.00%)</title><rect x="898.0" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="900.97" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_base&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_base (1 samples, 0.03%; 0.00%)</title><rect x="140.8" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.78" y="1663.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (1 samples, 0.03%; 0.00%)</title><rect x="98.4" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.43" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (21 samples, 0.66%; 0.00%)</title><rect x="1104.2" y="1877" width="7.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.18" y="1887.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (3 samples, 0.09%; +0.03%)</title><rect x="948.1" y="1765" width="1.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="951.13" y="1775.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (1 samples, 0.03%; 0.00%)</title><rect x="53.1" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.10" y="383.5" ></text>
</g>
<g >
<title>[unknown] (241 samples, 7.59%; 0.00%)</title><rect x="11.9" y="885" width="89.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="895.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="623.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="137.8" y="1685" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.81" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (2 samples, 0.06%; 0.00%)</title><rect x="84.3" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="463.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (1 samples, 0.03%; +0.03%)</title><rect x="55.3" y="261" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="58.33" y="271.5" ></text>
</g>
<g >
<title>abstract_type::from_string (4 samples, 0.13%; 0.00%)</title><rect x="86.5" y="485" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="89.54" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (49 samples, 1.54%; +0.06%)</title><rect x="59.0" y="453" width="18.2" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="62.04" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (1 samples, 0.03%; +0.03%)</title><rect x="674.7" y="1909" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="677.68" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (2 samples, 0.06%; 0.00%)</title><rect x="70.6" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="73.56" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.4" y="1653" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.41" y="1663.5" ></text>
</g>
<g >
<title>create_partitions (10 samples, 0.31%; 0.00%)</title><rect x="81.7" y="629" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="84.71" y="639.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::single_column_relation, true&gt;::make&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, cql3::expr::oper_t&amp;, cql3::expr::expression&gt; (1 samples, 0.03%; 0.00%)</title><rect x="143.0" y="1749" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.01" y="1759.5" ></text>
</g>
<g >
<title>do_cql_test (173 samples, 5.45%; 0.00%)</title><rect x="17.4" y="629" width="64.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.43" y="639.5" >do_cql_..</text>
</g>
<g >
<title>operator new (6 samples, 0.19%; 0.00%)</title><rect x="892.8" y="1765" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="895.77" y="1775.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (3 samples, 0.09%; 0.00%)</title><rect x="60.5" y="373" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.53" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="17.1" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.06" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="99.2" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.17" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, cql3::statements::alter_table_statement*, false&gt;::_Head_base (1 samples, 0.03%; +0.03%)</title><rect x="78.4" y="421" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="81.36" y="431.5" ></text>
</g>
<g >
<title>[unknown] (241 samples, 7.59%; 0.00%)</title><rect x="11.9" y="869" width="89.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="879.5" >[unknown]</text>
</g>
<g >
<title>operator delete (2 samples, 0.06%; 0.00%)</title><rect x="799.1" y="1829" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="802.14" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (1 samples, 0.03%; 0.00%)</title><rect x="860.4" y="1781" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.45" y="1791.5" ></text>
</g>
<g >
<title>free (8 samples, 0.25%; +0.09%)</title><rect x="439.5" y="1781" width="3.0" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="442.50" y="1791.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.03%; -0.06%)</title><rect x="174.6" y="1877" width="0.4" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="177.59" y="1887.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (1 samples, 0.03%; 0.00%)</title><rect x="139.3" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="142.29" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression (1 samples, 0.03%; 0.00%)</title><rect x="14.1" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.09" y="431.5" ></text>
</g>
<g >
<title>query_result_builder::consume (85 samples, 2.68%; 0.00%)</title><rect x="448.4" y="1829" width="31.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="451.41" y="1839.5" >qu..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (11 samples, 0.35%; 0.00%)</title><rect x="43.1" y="373" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.07" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__get&lt;6ul, std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="124.1" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.06" y="1423.5" ></text>
</g>
<g >
<title>query::querier_base::close (81 samples, 2.55%; -0.03%)</title><rect x="513.4" y="1877" width="30.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="516.43" y="1887.5" >qu..</text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="689.9" y="1893" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="692.91" y="1903.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.03%; 0.00%)</title><rect x="864.5" y="1765" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="867.53" y="1775.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (2 samples, 0.06%; 0.00%)</title><rect x="50.1" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.13" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::alter_table_statement, std::default_delete&lt;cql3::statements::alter_table_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::alter_table_statement&gt;, void&gt; (1 samples, 0.03%; +0.03%)</title><rect x="80.2" y="501" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="83.22" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (3 samples, 0.09%; +0.09%)</title><rect x="378.2" y="1653" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="381.19" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;11ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; +0.03%)</title><rect x="141.5" y="1669" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="144.52" y="1679.5" ></text>
</g>
<g >
<title>antlr3::Lexer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::emit (2 samples, 0.06%; 0.00%)</title><rect x="31.9" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="34.92" y="383.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (7 samples, 0.22%; 0.00%)</title><rect x="154.9" y="2021" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.90" y="2031.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__detail::__variant::_Variadic_union&lt;cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; &gt; (1 samples, 0.03%; +0.03%)</title><rect x="124.4" y="1429" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="127.43" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; +0.03%)</title><rect x="69.8" y="373" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="72.82" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (7 samples, 0.22%; +0.13%)</title><rect x="1095.6" y="1845" width="2.6" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="1098.63" y="1855.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="880.1" y="1845" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="883.14" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;cql3::statements::detach_service_level_statement, std::default_delete&lt;cql3::statements::detach_service_level_statement&gt; &gt;::__uniq_ptr_impl (1 samples, 0.03%; 0.00%)</title><rect x="78.7" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.73" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::shared_ptr&lt;cql3::relation&gt;, std::allocator&lt;seastar::shared_ptr&lt;cql3::relation&gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::single_column_relation&gt; &gt; (1 samples, 0.03%; 0.00%)</title><rect x="143.8" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.75" y="1759.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (2 samples, 0.06%; +0.06%)</title><rect x="636.0" y="1829" width="0.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="639.04" y="1839.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (1 samples, 0.03%; +0.03%)</title><rect x="104.4" y="1845" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="107.37" y="1855.5" ></text>
</g>
<g >
<title>seastar::schedule (1 samples, 0.03%; 0.00%)</title><rect x="184.6" y="1909" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="187.62" y="1919.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (1 samples, 0.03%; 0.00%)</title><rect x="102.1" y="773" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="105.14" y="783.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, cql3::attributes::raw*, std::default_delete&lt;cql3::attributes::raw&gt; &gt;::_Tuple_impl (1 samples, 0.03%; 0.00%)</title><rect x="95.1" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="98.08" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (1 samples, 0.03%; 0.00%)</title><rect x="82.1" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="85.08" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.03%; -0.06%)</title><rect x="32.3" y="325" width="0.4" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="35.29" y="335.5" ></text>
</g>
<g >
<title>database::find_schema (6 samples, 0.19%; -0.25%)</title><rect x="833.3" y="1813" width="2.3" height="15.0" fill="rgb(116,116,255)" rx="2" ry="2" />
<text  x="836.32" y="1823.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="55.7" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.70" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="59.8" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="62.79" y="335.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::conjunction, void, void, cql3::expr::conjunction, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.4" y="1701" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.41" y="1711.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (2 samples, 0.06%; -0.06%)</title><rect x="622.7" y="1781" width="0.7" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="625.66" y="1791.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (1 samples, 0.03%; +0.03%)</title><rect x="104.0" y="1845" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="107.00" y="1855.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::_S_buffer_size (1 samples, 0.03%; 0.00%)</title><rect x="130.0" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="133.01" y="1535.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (1 samples, 0.03%; 0.00%)</title><rect x="217.3" y="1877" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="220.32" y="1887.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (2 samples, 0.06%; +0.06%)</title><rect x="989.0" y="1733" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="992.00" y="1743.5" ></text>
</g>
<g >
<title>cql3::cf_name::get_column_family (1 samples, 0.03%; +0.03%)</title><rect x="85.8" y="581" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="88.79" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union&lt;9ul, cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="127.0" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="130.03" y="1535.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;::_Vector_base (1 samples, 0.03%; 0.00%)</title><rect x="63.9" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.87" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Copy_assign_base (1 samples, 0.03%; 0.00%)</title><rect x="84.3" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="87.31" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.03%; +0.03%)</title><rect x="52.7" y="357" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="55.73" y="367.5" ></text>
</g>
<g >
<title>query::querier&lt; (676 samples, 21.28%; -0.06%)</title><rect x="262.3" y="1877" width="251.1" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="265.27" y="1887.5" >query::querier&lt;</text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (1 samples, 0.03%; 0.00%)</title><rect x="141.5" y="1733" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.52" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (2 samples, 0.06%; 0.00%)</title><rect x="108.8" y="1781" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="111.83" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="387.9" y="1749" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="390.85" y="1759.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.03%; +0.03%)</title><rect x="52.4" y="453" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="55.36" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (1 samples, 0.03%; 0.00%)</title><rect x="12.6" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.60" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::statements::detach_service_level_statement, std::default_delete&lt;cql3::statements::detach_service_level_statement&gt; &gt;::unique_ptr&lt;std::default_delete&lt;cql3::statements::detach_service_level_statement&gt;, void&gt; (1 samples, 0.03%; 0.00%)</title><rect x="78.7" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.73" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::BitsetList&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt; &gt;::deque (2 samples, 0.06%; 0.00%)</title><rect x="21.5" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.52" y="431.5" ></text>
</g>
<g >
<title>seastar::jmp_buf_link::switch_in (1 samples, 0.03%; +0.03%)</title><rect x="857.8" y="1925" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="860.85" y="1935.5" ></text>
</g>
<g >
<title>antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;::RecognizerSharedStateType&lt;antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::RecognizerSharedStateType (4 samples, 0.13%; 0.00%)</title><rect x="21.1" y="469" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.15" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_assign_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variant_storage&lt;0ul, cql3::expr::conjunction&gt; (1 samples, 0.03%; 0.00%)</title><rect x="140.4" y="1637" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.41" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (1 samples, 0.03%; 0.00%)</title><rect x="141.9" y="1669" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.90" y="1679.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (2 samples, 0.06%; +0.06%)</title><rect x="302.8" y="1781" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="305.77" y="1791.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (2 samples, 0.06%; +0.03%)</title><rect x="138.9" y="1701" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="141.92" y="1711.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.06%; 0.00%)</title><rect x="100.7" y="725" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="103.65" y="735.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (1 samples, 0.03%; +0.03%)</title><rect x="1090.8" y="1845" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1093.80" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (2 samples, 0.06%; 0.00%)</title><rect x="62.0" y="245" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.02" y="255.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (3 samples, 0.09%; +0.06%)</title><rect x="407.5" y="1861" width="1.2" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="410.54" y="1871.5" ></text>
</g>
<g >
<title>schema_registry::learn (3 samples, 0.09%; 0.00%)</title><rect x="186.1" y="1893" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="189.11" y="1903.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%; +0.03%)</title><rect x="862.3" y="1781" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="865.30" y="1791.5" ></text>
</g>
<g >
<title>create_partitions (171 samples, 5.38%; +0.03%)</title><rect x="17.4" y="613" width="63.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="20.43" y="623.5" >create..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (2 samples, 0.06%; 0.00%)</title><rect x="64.6" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.62" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (7 samples, 0.22%; 0.00%)</title><rect x="1113.5" y="1701" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.46" y="1711.5" ></text>
</g>
<g >
<title>cql3::functions::function_name::function_name (1 samples, 0.03%; +0.03%)</title><rect x="66.5" y="421" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="69.47" y="431.5" ></text>
</g>
<g >
<title>__start_context (7 samples, 0.22%; 0.00%)</title><rect x="154.9" y="2037" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="157.90" y="2047.5" ></text>
</g>
<g >
<title>antlr3::RecognizerSharedState&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::set_token_present (1 samples, 0.03%; +0.03%)</title><rect x="35.3" y="373" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="38.26" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::allocate_on (2 samples, 0.06%; -0.03%)</title><rect x="1108.3" y="1749" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1111.26" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::constant::constant (1 samples, 0.03%; 0.00%)</title><rect x="88.4" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="91.39" y="495.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (2 samples, 0.06%; 0.00%)</title><rect x="12.2" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.23" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (2 samples, 0.06%; 0.00%)</title><rect x="711.5" y="1909" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="714.46" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (2 samples, 0.06%; 0.00%)</title><rect x="74.6" y="197" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.65" y="207.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%; 0.00%)</title><rect x="11.9" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.86" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (1 samples, 0.03%; +0.03%)</title><rect x="109.2" y="1733" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="112.20" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (1 samples, 0.03%; 0.00%)</title><rect x="137.1" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="140.07" y="1759.5" ></text>
</g>
<g >
<title>cql3::expr::expression::impl::impl (4 samples, 0.13%; -0.03%)</title><rect x="74.3" y="341" width="1.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="77.28" y="351.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (1 samples, 0.03%; 0.00%)</title><rect x="145.6" y="1973" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.61" y="1983.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.19%; -0.13%)</title><rect x="1093.0" y="1829" width="2.3" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="1096.03" y="1839.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (1 samples, 0.03%; 0.00%)</title><rect x="58.3" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="61.30" y="271.5" ></text>
</g>
<g >
<title>create_partitions (1 samples, 0.03%; 0.00%)</title><rect x="101.8" y="837" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="104.77" y="847.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (9 samples, 0.28%; -0.03%)</title><rect x="139.7" y="1765" width="3.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="142.67" y="1775.5" ></text>
</g>
<g >
<title>table_stats::table_stats (1 samples, 0.03%; +0.03%)</title><rect x="187.2" y="1877" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="190.22" y="1887.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (3 samples, 0.09%; +0.06%)</title><rect x="382.7" y="1733" width="1.1" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="385.65" y="1743.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.03%; 0.00%)</title><rect x="94.0" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.97" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (7 samples, 0.22%; 0.00%)</title><rect x="840.8" y="1861" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="843.76" y="1871.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (1 samples, 0.03%; 0.00%)</title><rect x="51.6" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="54.61" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variadic_union&lt;cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Variadic_union (1 samples, 0.03%; 0.00%)</title><rect x="99.5" y="149" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.54" y="159.5" ></text>
</g>
<g >
<title>cql3::expr::conjunction::~conjunction (2 samples, 0.06%; 0.00%)</title><rect x="117.0" y="1717" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="120.00" y="1727.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (2 samples, 0.06%; 0.00%)</title><rect x="55.7" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="58.70" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (33 samples, 1.04%; 0.00%)</title><rect x="700.7" y="1925" width="12.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="703.69" y="1935.5" ></text>
</g>
</g>
</svg>
